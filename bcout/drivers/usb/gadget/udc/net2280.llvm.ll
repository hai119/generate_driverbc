; ModuleID = '../bcout/drivers/usb/gadget/udc/net2280.llvm.bc'
source_filename = "drivers/usb/gadget/udc/net2280.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_net2280_pci_driver_init6:\09\09\09"
module asm ".long\09net2280_pci_driver_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.66, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.4 }
%union.anon.4 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.65, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.65 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.63, %struct.list_head, %struct.list_head, %union.anon.64 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.61 }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.53, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.53 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.54, i32 }
%union.anon.54 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.46, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.32, %union.anon.33, i32 }
%struct.request_queue = type opaque
%union.anon.32 = type { %struct.list_head }
%union.anon.33 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.34 }
%struct.anon.34 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.45, i32, [12 x i8] }
%union.anon.45 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.46 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.47, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.50 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, i64 }
%union.anon.50 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.63 = type { %struct.list_head }
%union.anon.64 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.55, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.56, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.57, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.60, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.55 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.56 = type { %struct.callback_head }
%union.anon.57 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.60 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.58 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.58 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.31 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.31 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.pci_vpd = type opaque
%union.anon.66 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.usb_gadget_ops = type { i32 (%struct.usb_gadget*)*, i32 (%struct.usb_gadget*)*, i32 (%struct.usb_gadget*, i32)*, i32 (%struct.usb_gadget*, i32)*, i32 (%struct.usb_gadget*, i32)*, i32 (%struct.usb_gadget*, i32)*, i32 (%struct.usb_gadget*, i32, i64)*, void (%struct.usb_gadget*, %struct.usb_dcd_config_params*)*, i32 (%struct.usb_gadget*, %struct.usb_gadget_driver*)*, i32 (%struct.usb_gadget*)*, void (%struct.usb_gadget*, i32)*, %struct.usb_ep* (%struct.usb_gadget*, %struct.usb_endpoint_descriptor*, %struct.usb_ss_ep_comp_descriptor*)* }
%struct.usb_gadget = type { %struct.work_struct, %struct.usb_udc*, %struct.usb_gadget_ops*, %struct.usb_ep*, %struct.list_head, i32, i32, i32, i8*, %struct.device, i32, i32, i32, i32, %struct.usb_otg_caps*, i24, i32 }
%struct.usb_udc = type opaque
%struct.usb_ep = type { i8*, i8*, %struct.usb_ep_ops*, %struct.list_head, %struct.usb_ep_caps, i8, i8, [7 x i8], i8, %struct.usb_endpoint_descriptor*, %struct.usb_ss_ep_comp_descriptor* }
%struct.usb_ep_ops = type { i32 (%struct.usb_ep*, %struct.usb_endpoint_descriptor*)*, i32 (%struct.usb_ep*)*, void (%struct.usb_ep*)*, %struct.usb_request* (%struct.usb_ep*, i32)*, void (%struct.usb_ep*, %struct.usb_request*)*, i32 (%struct.usb_ep*, %struct.usb_request*, i32)*, i32 (%struct.usb_ep*, %struct.usb_request*)*, i32 (%struct.usb_ep*, i32)*, i32 (%struct.usb_ep*)*, i32 (%struct.usb_ep*)*, void (%struct.usb_ep*)* }
%struct.usb_request = type { i8*, i32, i64, %struct.scatterlist*, i32, i32, i24, void (%struct.usb_ep*, %struct.usb_request*)*, i8*, %struct.list_head, i32, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.usb_ep_caps = type { i8, [3 x i8] }
%struct.usb_endpoint_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8 }>
%struct.usb_ss_ep_comp_descriptor = type { i8, i8, i8, i8, i16 }
%struct.usb_otg_caps = type opaque
%struct.usb_dcd_config_params = type { i8, i16, i8, i8 }
%struct.usb_gadget_driver = type { i8*, i32, {}*, void (%struct.usb_gadget*)*, i32 (%struct.usb_gadget*, %struct.usb_ctrlrequest*)*, void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)*, %struct.device_driver, i8*, %struct.list_head, i8 }
%struct.usb_ctrlrequest = type { i8, i8, i16, i16, i16 }
%struct.kmem_cache = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.anon.67 = type { i8*, %struct.usb_ep_caps }
%struct.net2280 = type { %struct.usb_gadget, %struct.spinlock, [9 x %struct.net2280_ep], %struct.usb_gadget_driver*, i16, i16, i32, i32, i64, %struct.pci_dev*, %struct.net2280_regs*, %struct.net2280_usb_regs*, %struct.usb338x_usb_ext_regs*, %struct.net2280_pci_regs*, %struct.net2280_dma_regs*, %struct.net2280_dep_regs*, %struct.net2280_ep_regs*, %struct.usb338x_ll_regs*, %struct.usb338x_pl_regs*, %struct.dma_pool* }
%struct.net2280_ep = type { %struct.usb_ep, %struct.net2280_ep_regs*, %struct.net2280_ep_regs*, %struct.net2280_dma_regs*, %struct.net2280_dma*, i64, %struct.net2280*, i64, %struct.list_head, %struct.usb_endpoint_descriptor*, i32 }
%struct.net2280_dma = type { i32, i32, i32, i32 }
%struct.net2280_regs = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.net2280_usb_regs = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.usb338x_usb_ext_regs = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.net2280_pci_regs = type { i32, i32, i32, i32 }
%struct.net2280_dma_regs = type { i32, i32, [2 x i32], i32, i32, i32, i32 }
%struct.net2280_dep_regs = type { i32, i32, [2 x i32] }
%struct.net2280_ep_regs = type { i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.usb338x_ll_regs = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32], [2 x i32], i32, i32, [8 x i32], [3 x i32], i32, i32, [3 x i32], i32, i32, i32, i32 }
%struct.usb338x_pl_regs = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.dma_pool = type opaque
%struct.net2280_request = type { %struct.usb_request, %struct.net2280_dma*, i64, %struct.list_head, i8 }
%union.anon.68 = type { [2 x i32] }

@__param_str_fifo_mode = internal constant [18 x i8] c"net2280.fifo_mode\00", align 16, !dbg !0
@param_ops_ushort = external dso_local constant %struct.kernel_param_ops, align 8
@fifo_mode = internal global i16 0, align 2, !dbg !4578
@__param_fifo_mode = internal constant %struct.kernel_param { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__param_str_fifo_mode, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_ushort, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i16* @fifo_mode to i8*) } }, section "__param", align 8, !dbg !4491
@__UNIQUE_ID_fifo_modetype235 = internal constant [34 x i8] c"net2280.parmtype=fifo_mode:ushort\00", section ".modinfo", align 1, !dbg !4543
@__param_str_enable_suspend = internal constant [23 x i8] c"net2280.enable_suspend\00", align 16, !dbg !4583
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 8
@enable_suspend = internal global i8 0, align 1, !dbg !4581
@__param_enable_suspend = internal constant %struct.kernel_param { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__param_str_enable_suspend, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon { i8* @enable_suspend } }, section "__param", align 8, !dbg !4548
@__UNIQUE_ID_enable_suspendtype236 = internal constant [37 x i8] c"net2280.parmtype=enable_suspend:bool\00", section ".modinfo", align 1, !dbg !4550
@__UNIQUE_ID___addressable_net2280_pci_driver_init273 = internal global i8* bitcast (i32 ()* @net2280_pci_driver_init to i8*), section ".discard.addressable", align 8, !dbg !4555
@net2280_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @driver_name, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([6 x %struct.pci_device_id], [6 x %struct.pci_device_id]* @pci_ids, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @net2280_probe, void (%struct.pci_dev*)* @net2280_remove, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* @net2280_shutdown, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !4588
@__exitcall_net2280_pci_driver_exit = internal global void ()* @net2280_pci_driver_exit, section ".exitcall.exit", align 8, !dbg !4557
@__UNIQUE_ID_description274 = internal constant [66 x i8] c"net2280.description=PLX NET228x/USB338x USB Peripheral Controller\00", section ".modinfo", align 1, !dbg !4562
@__UNIQUE_ID_author275 = internal constant [30 x i8] c"net2280.author=David Brownell\00", section ".modinfo", align 1, !dbg !4567
@__UNIQUE_ID_file276 = internal constant [44 x i8] c"net2280.file=drivers/usb/gadget/udc/net2280\00", section ".modinfo", align 1, !dbg !4572
@__UNIQUE_ID_license277 = internal constant [20 x i8] c"net2280.license=GPL\00", section ".modinfo", align 1, !dbg !4575
@.str = private unnamed_addr constant [8 x i8] c"net2280\00", align 1
@driver_name = internal constant [8 x i8] c"net2280\00", align 1, !dbg !4590
@pci_ids = internal constant [6 x %struct.pci_device_id] [%struct.pci_device_id { i32 6092, i32 8832, i32 -1, i32 -1, i32 787454, i32 -1, i64 3 }, %struct.pci_device_id { i32 6092, i32 8834, i32 -1, i32 -1, i32 787454, i32 -1, i64 1 }, %struct.pci_device_id { i32 4277, i32 9088, i32 -1, i32 -1, i32 787454, i32 -1, i64 8 }, %struct.pci_device_id { i32 4277, i32 13184, i32 -1, i32 -1, i32 787454, i32 -1, i64 12 }, %struct.pci_device_id { i32 4277, i32 13186, i32 -1, i32 -1, i32 787454, i32 -1, i64 12 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !4593
@net2280_ops = internal constant %struct.usb_gadget_ops { i32 (%struct.usb_gadget*)* @net2280_get_frame, i32 (%struct.usb_gadget*)* @net2280_wakeup, i32 (%struct.usb_gadget*, i32)* @net2280_set_selfpowered, i32 (%struct.usb_gadget*, i32)* null, i32 (%struct.usb_gadget*, i32)* null, i32 (%struct.usb_gadget*, i32)* @net2280_pullup, i32 (%struct.usb_gadget*, i32, i64)* null, void (%struct.usb_gadget*, %struct.usb_dcd_config_params*)* null, i32 (%struct.usb_gadget*, %struct.usb_gadget_driver*)* @net2280_start, i32 (%struct.usb_gadget*)* @net2280_stop, void (%struct.usb_gadget*, i32)* null, %struct.usb_ep* (%struct.usb_gadget*, %struct.usb_endpoint_descriptor*, %struct.usb_ss_ep_comp_descriptor*)* @net2280_match_ep }, align 8, !dbg !4596
@iomem_resource = external dso_local global %struct.resource, align 8
@.str.1 = private unnamed_addr constant [27 x i8] c"No IRQ.  Check PCI setup!\0A\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"Failed to enable MSI mode\0A\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"request interrupt %d failed\0A\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"requests\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@driver_desc = internal constant [46 x i8] c"PLX NET228x/USB338x USB Peripheral Controller\00", align 16, !dbg !4640
@.str.6 = private unnamed_addr constant [35 x i8] c"irq %d, pci mem %p, chip rev %04x\0A\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"version: 2005 Sept 27/v3.0; %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"enhanced mode\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"legacy mode\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.10 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.11 = private unnamed_addr constant [22 x i8] c"%s lost packet sync!\0A\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"drivers/usb/gadget/udc/net2280.c\00", align 1
@.str.13 = private unnamed_addr constant [46 x i8] c"Operate Defect 7374 workaround soft this time\00", align 1
@.str.14 = private unnamed_addr constant [46 x i8] c"It will operate on cold-reboot and SS connect\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"ep-e\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"ep-f\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"ep2in\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"ep4in\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"ep1out\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"ep3out\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"ep1in\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"ep3in\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"ep2out\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"ep4out\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"ep%d%s\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@ep_info_dft = internal constant [9 x %struct.anon.67] [%struct.anon.67 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ep0name, i32 0, i32 0), %struct.usb_ep_caps { i8 49, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), %struct.usb_ep_caps { i8 62, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i32 0, i32 0), %struct.usb_ep_caps { i8 62, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), %struct.usb_ep_caps { i8 62, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0), %struct.usb_ep_caps { i8 62, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0), %struct.usb_ep_caps { i8 62, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), %struct.usb_ep_caps { i8 62, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), %struct.usb_ep_caps { i8 62, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0), %struct.usb_ep_caps { i8 62, [3 x i8] undef } }], align 16, !dbg !4598
@ep0name = internal constant [4 x i8] c"ep0\00", align 1, !dbg !4607
@.str.28 = private unnamed_addr constant [5 x i8] c"ep-a\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"ep-b\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"ep-c\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"ep-d\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"ep-g\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"ep-h\00", align 1
@net2280_ep_ops = internal constant %struct.usb_ep_ops { i32 (%struct.usb_ep*, %struct.usb_endpoint_descriptor*)* @net2280_enable, i32 (%struct.usb_ep*)* @net2280_disable, void (%struct.usb_ep*)* null, %struct.usb_request* (%struct.usb_ep*, i32)* @net2280_alloc_request, void (%struct.usb_ep*, %struct.usb_request*)* @net2280_free_request, i32 (%struct.usb_ep*, %struct.usb_request*, i32)* @net2280_queue, i32 (%struct.usb_ep*, %struct.usb_request*)* @net2280_dequeue, i32 (%struct.usb_ep*, i32)* @net2280_set_halt, i32 (%struct.usb_ep*)* @net2280_set_wedge, i32 (%struct.usb_ep*)* @net2280_fifo_status, void (%struct.usb_ep*)* @net2280_fifo_flush }, align 8, !dbg !4610
@net2280_enable.ep_key = internal constant [9 x i32] [i32 1, i32 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 1, i32 0], align 16, !dbg !4612
@.str.34 = private unnamed_addr constant [25 x i8] c"\013%s: failed at line=%d\0A\00", align 1
@__func__.net2280_enable = private unnamed_addr constant [15 x i8] c"net2280_enable\00", align 1
@.str.35 = private unnamed_addr constant [14 x i8] c"%s: error=%d\0A\00", align 1
@set_max_speed.ep_enhanced = internal constant [9 x i32] [i32 16, i32 96, i32 48, i32 128, i32 80, i32 32, i32 112, i32 64, i32 144], align 16, !dbg !4617
@ep_clear_seqnum.ep_pl = internal constant [9 x i32] [i32 0, i32 3, i32 4, i32 7, i32 8, i32 2, i32 5, i32 6, i32 9], align 16, !dbg !4622
@ep_bit = internal constant [9 x i32] [i32 0, i32 17, i32 2, i32 19, i32 4, i32 1, i32 18, i32 3, i32 20], align 16, !dbg !4627
@.str.36 = private unnamed_addr constant [21 x i8] c"\013%s: Invalid ep=%p\0A\00", align 1
@__func__.net2280_disable = private unnamed_addr constant [16 x i8] c"net2280_disable\00", align 1
@.str.37 = private unnamed_addr constant [27 x i8] c"The dmastat return = %x!!\0A\00", align 1
@.str.38 = private unnamed_addr constant [18 x i8] c"\013%s: Invalid ep\0A\00", align 1
@__func__.net2280_alloc_request = private unnamed_addr constant [22 x i8] c"net2280_alloc_request\00", align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"%s: Invalid ep=%p or req=%p\0A\00", align 1
@__func__.net2280_free_request = private unnamed_addr constant [21 x i8] c"net2280_free_request\00", align 1
@.str.40 = private unnamed_addr constant [33 x i8] c"\013%s: Invalid ep=%p or ep->desc\0A\00", align 1
@__func__.net2280_queue = private unnamed_addr constant [14 x i8] c"net2280_queue\00", align 1
@.str.41 = private unnamed_addr constant [35 x i8] c"%s out fifo %d bytes, expected %d\0A\00", align 1
@.str.42 = private unnamed_addr constant [43 x i8] c"\013%s: Invalid ep=%p or ep->desc or req=%p\0A\00", align 1
@__func__.net2280_dequeue = private unnamed_addr constant [16 x i8] c"net2280_dequeue\00", align 1
@__func__.net2280_set_halt_and_wedge = private unnamed_addr constant [27 x i8] c"net2280_set_halt_and_wedge\00", align 1
@.str.43 = private unnamed_addr constant [28 x i8] c"\013%s: Invalid ep=%p or ep0\0A\00", align 1
@__func__.net2280_set_wedge = private unnamed_addr constant [18 x i8] c"net2280_set_wedge\00", align 1
@__func__.net2280_fifo_status = private unnamed_addr constant [20 x i8] c"net2280_fifo_status\00", align 1
@.str.44 = private unnamed_addr constant [35 x i8] c"%s: Invalid driver=%p or speed=%d\0A\00", align 1
@.str.45 = private unnamed_addr constant [19 x i8] c"%s: Fifo overflow\0A\00", align 1
@__func__.net2280_fifo_flush = private unnamed_addr constant [19 x i8] c"net2280_fifo_flush\00", align 1
@usb_reinit_338x.ne = internal constant [9 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 1, i32 2, i32 3, i32 4], align 16, !dbg !4631
@usb_reinit_338x.ep_reg_addr = internal constant [9 x i32] [i32 0, i32 192, i32 0, i32 192, i32 0, i32 0, i32 192, i32 0, i32 192], align 16, !dbg !4636
@ep_info_adv = internal constant [9 x %struct.anon.67] [%struct.anon.67 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ep0name, i32 0, i32 0), %struct.usb_ep_caps { i8 49, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i32 0), %struct.usb_ep_caps { i8 30, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0), %struct.usb_ep_caps { i8 46, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0), %struct.usb_ep_caps { i8 30, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0), %struct.usb_ep_caps { i8 46, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), %struct.usb_ep_caps { i8 46, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0), %struct.usb_ep_caps { i8 30, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i32 0, i32 0), %struct.usb_ep_caps { i8 46, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0), %struct.usb_ep_caps { i8 30, [3 x i8] undef } }], align 16, !dbg !4638
@.str.46 = private unnamed_addr constant [26 x i8] c"pci dma error; stat %08x\0A\00", align 1
@.str.47 = private unnamed_addr constant [83 x i8] c"FAIL: Defect 7374 workaround waited but failed to detect SS host's data phase ACK.\00", align 1
@.str.48 = private unnamed_addr constant [63 x i8] c"PL_EP_STATUS_1(23:16):.Expected from 0x11 to 0x16got 0x%2.2x.\0A\00", align 1
@.str.49 = private unnamed_addr constant [82 x i8] c"INFO: Defect 7374 workaround waited about\0A%duSec for Control Read Data Phase ACK\0A\00", align 1
@.str.50 = private unnamed_addr constant [8 x i8] c"unbind\0A\00", align 1
@llvm.used = appending global [11 x i8*] [i8* bitcast (%struct.kernel_param* @__param_fifo_mode to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__UNIQUE_ID_fifo_modetype235, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_enable_suspend to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_enable_suspendtype236, i32 0, i32 0), i8* bitcast (i8** @__UNIQUE_ID___addressable_net2280_pci_driver_init273 to i8*), i8* bitcast (void ()* @net2280_pci_driver_exit to i8*), i8* bitcast (void ()** @__exitcall_net2280_pci_driver_exit to i8*), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__UNIQUE_ID_description274, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__UNIQUE_ID_author275, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__UNIQUE_ID_file276, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__UNIQUE_ID_license277, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_pci_driver_init() #0 section ".init.text" !dbg !4654 {
entry:
  %call = call i32 @__pci_register_driver(%struct.pci_driver* @net2280_pci_driver, %struct.module* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #12, !dbg !4657
  ret i32 %call, !dbg !4657
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @net2280_pci_driver_exit() #0 section ".exit.text" !dbg !4658 {
entry:
  call void @pci_unregister_driver(%struct.pci_driver* @net2280_pci_driver) #12, !dbg !4659
  ret void, !dbg !4659
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #1

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_probe(%struct.pci_dev* %pdev, %struct.pci_device_id* %id) #2 !dbg !4660 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4661, metadata !DIExpression()), !dbg !4667
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %id.addr = alloca %struct.pci_device_id*, align 8
  %dev = alloca %struct.net2280*, align 8
  %resource = alloca i64, align 8
  %len = alloca i64, align 8
  %base = alloca i8*, align 8
  %retval1 = alloca i32, align 4
  %i = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %fsmvalue = alloca i32, align 4
  %usbstat = alloca i32, align 4
  %td = alloca %struct.net2280_dma*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !4670, metadata !DIExpression()), !dbg !4671
  store %struct.pci_device_id* %id, %struct.pci_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %id.addr, metadata !4672, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev, metadata !4674, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.declare(metadata i64* %resource, metadata !4676, metadata !DIExpression()), !dbg !4677
  call void @llvm.dbg.declare(metadata i64* %len, metadata !4678, metadata !DIExpression()), !dbg !4679
  call void @llvm.dbg.declare(metadata i8** %base, metadata !4680, metadata !DIExpression()), !dbg !4681
  store i8* null, i8** %base, align 8, !dbg !4681
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !4682, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4684, metadata !DIExpression()), !dbg !4685
  %call = call i8* @kzalloc(i64 2384, i32 3264) #12, !dbg !4686
  %0 = bitcast i8* %call to %struct.net2280*, !dbg !4686
  store %struct.net2280* %0, %struct.net2280** %dev, align 8, !dbg !4687
  %1 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4688
  %cmp = icmp eq %struct.net2280* %1, null, !dbg !4690
  br i1 %cmp, label %if.then, label %if.end, !dbg !4691

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval1, align 4, !dbg !4692
  br label %done, !dbg !4694

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4695
  %3 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4696
  %4 = bitcast %struct.net2280* %3 to i8*, !dbg !4696
  call void @pci_set_drvdata(%struct.pci_dev* %2, i8* %4) #12, !dbg !4697
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4698
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !4699
  %6 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4700
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %6, i32 0, i32 0, !dbg !4701
  call void @usb_initialize_gadget(%struct.device* %dev2, %struct.usb_gadget* %gadget, void (%struct.device*)* @gadget_release) #12, !dbg !4702
  br label %do.body, !dbg !4703

do.body:                                          ; preds = %if.end
  %7 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4704
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %7, i32 0, i32 1, !dbg !4704
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4705
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !4706
  %rlock.i = bitcast %union.anon.4* %9 to %struct.raw_spinlock*, !dbg !4706
  %10 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4704
  %lock4 = getelementptr inbounds %struct.net2280, %struct.net2280* %10, i32 0, i32 1, !dbg !4704
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !4704
  %rlock = bitcast %union.anon.4* %11 to %struct.raw_spinlock*, !dbg !4704
  %12 = bitcast %struct.spinlock* %lock4 to i8*, !dbg !4704
  %13 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !4704
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 1 %13, i64 0, i1 false), !dbg !4704
  br label %do.end, !dbg !4704

do.end:                                           ; preds = %do.body
  %14 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !4707
  %driver_data = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %14, i32 0, i32 6, !dbg !4708
  %15 = load i64, i64* %driver_data, align 8, !dbg !4708
  %16 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4709
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %16, i32 0, i32 8, !dbg !4710
  store i64 %15, i64* %quirks, align 8, !dbg !4711
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4712
  %18 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4713
  %pdev5 = getelementptr inbounds %struct.net2280, %struct.net2280* %18, i32 0, i32 9, !dbg !4714
  store %struct.pci_dev* %17, %struct.pci_dev** %pdev5, align 8, !dbg !4715
  %19 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4716
  %gadget6 = getelementptr inbounds %struct.net2280, %struct.net2280* %19, i32 0, i32 0, !dbg !4717
  %ops = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget6, i32 0, i32 2, !dbg !4718
  store %struct.usb_gadget_ops* @net2280_ops, %struct.usb_gadget_ops** %ops, align 8, !dbg !4719
  %20 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4720
  %quirks7 = getelementptr inbounds %struct.net2280, %struct.net2280* %20, i32 0, i32 8, !dbg !4721
  %21 = load i64, i64* %quirks7, align 8, !dbg !4721
  %and = and i64 %21, 4, !dbg !4722
  %tobool = icmp ne i64 %and, 0, !dbg !4723
  %22 = zext i1 %tobool to i64, !dbg !4723
  %cond = select i1 %tobool, i32 5, i32 3, !dbg !4723
  %23 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4724
  %gadget8 = getelementptr inbounds %struct.net2280, %struct.net2280* %23, i32 0, i32 0, !dbg !4725
  %max_speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget8, i32 0, i32 6, !dbg !4726
  store i32 %cond, i32* %max_speed, align 4, !dbg !4727
  %24 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4728
  %gadget9 = getelementptr inbounds %struct.net2280, %struct.net2280* %24, i32 0, i32 0, !dbg !4729
  %name = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget9, i32 0, i32 8, !dbg !4730
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @driver_name, i64 0, i64 0), i8** %name, align 8, !dbg !4731
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4732
  %call10 = call i32 @pci_enable_device(%struct.pci_dev* %25) #12, !dbg !4734
  %cmp11 = icmp slt i32 %call10, 0, !dbg !4735
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !4736

if.then12:                                        ; preds = %do.end
  store i32 -19, i32* %retval1, align 4, !dbg !4737
  br label %done, !dbg !4739

if.end13:                                         ; preds = %do.end
  %26 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4740
  %enabled = getelementptr inbounds %struct.net2280, %struct.net2280* %26, i32 0, i32 4, !dbg !4741
  %bf.load = load i16, i16* %enabled, align 8, !dbg !4742
  %bf.clear = and i16 %bf.load, -2, !dbg !4742
  %bf.set = or i16 %bf.clear, 1, !dbg !4742
  store i16 %bf.set, i16* %enabled, align 8, !dbg !4742
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4743
  %resource14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 44, !dbg !4743
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource14, i64 0, i64 0, !dbg !4743
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !4743
  %28 = load i64, i64* %start, align 8, !dbg !4743
  store i64 %28, i64* %resource, align 8, !dbg !4744
  %29 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4745
  %resource15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 44, !dbg !4745
  %arrayidx16 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource15, i64 0, i64 0, !dbg !4745
  %start17 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx16, i32 0, i32 0, !dbg !4745
  %30 = load i64, i64* %start17, align 8, !dbg !4745
  %cmp18 = icmp eq i64 %30, 0, !dbg !4745
  br i1 %cmp18, label %land.lhs.true, label %cond.false, !dbg !4745

land.lhs.true:                                    ; preds = %if.end13
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4745
  %resource19 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 44, !dbg !4745
  %arrayidx20 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource19, i64 0, i64 0, !dbg !4745
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx20, i32 0, i32 1, !dbg !4745
  %32 = load i64, i64* %end, align 8, !dbg !4745
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4745
  %resource21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 44, !dbg !4745
  %arrayidx22 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource21, i64 0, i64 0, !dbg !4745
  %start23 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx22, i32 0, i32 0, !dbg !4745
  %34 = load i64, i64* %start23, align 8, !dbg !4745
  %cmp24 = icmp eq i64 %32, %34, !dbg !4745
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !4745

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !4745

cond.false:                                       ; preds = %land.lhs.true, %if.end13
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4745
  %resource25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %35, i32 0, i32 44, !dbg !4745
  %arrayidx26 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource25, i64 0, i64 0, !dbg !4745
  %end27 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx26, i32 0, i32 1, !dbg !4745
  %36 = load i64, i64* %end27, align 8, !dbg !4745
  %37 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4745
  %resource28 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 44, !dbg !4745
  %arrayidx29 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource28, i64 0, i64 0, !dbg !4745
  %start30 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx29, i32 0, i32 0, !dbg !4745
  %38 = load i64, i64* %start30, align 8, !dbg !4745
  %sub = sub i64 %36, %38, !dbg !4745
  %add = add i64 %sub, 1, !dbg !4745
  br label %cond.end, !dbg !4745

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond31 = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !4745
  store i64 %cond31, i64* %len, align 8, !dbg !4746
  %39 = load i64, i64* %resource, align 8, !dbg !4747
  %40 = load i64, i64* %len, align 8, !dbg !4747
  %call32 = call %struct.resource* @__request_region(%struct.resource* @iomem_resource, i64 %39, i64 %40, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @driver_name, i64 0, i64 0), i32 0) #12, !dbg !4747
  %tobool33 = icmp ne %struct.resource* %call32, null, !dbg !4747
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !4749

if.then34:                                        ; preds = %cond.end
  store i32 -16, i32* %retval1, align 4, !dbg !4750
  br label %done, !dbg !4752

if.end35:                                         ; preds = %cond.end
  %41 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4753
  %region = getelementptr inbounds %struct.net2280, %struct.net2280* %41, i32 0, i32 4, !dbg !4754
  %bf.load36 = load i16, i16* %region, align 8, !dbg !4755
  %bf.clear37 = and i16 %bf.load36, -17, !dbg !4755
  %bf.set38 = or i16 %bf.clear37, 16, !dbg !4755
  store i16 %bf.set38, i16* %region, align 8, !dbg !4755
  %42 = load i64, i64* %resource, align 8, !dbg !4756
  %43 = load i64, i64* %len, align 8, !dbg !4757
  %call39 = call i8* @ioremap(i64 %42, i64 %43) #12, !dbg !4758
  store i8* %call39, i8** %base, align 8, !dbg !4759
  %44 = load i8*, i8** %base, align 8, !dbg !4760
  %cmp40 = icmp eq i8* %44, null, !dbg !4762
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !4763

if.then41:                                        ; preds = %if.end35
  store i32 -14, i32* %retval1, align 4, !dbg !4764
  br label %done, !dbg !4766

if.end42:                                         ; preds = %if.end35
  %45 = load i8*, i8** %base, align 8, !dbg !4767
  %46 = bitcast i8* %45 to %struct.net2280_regs*, !dbg !4768
  %47 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4769
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %47, i32 0, i32 10, !dbg !4770
  store %struct.net2280_regs* %46, %struct.net2280_regs** %regs, align 8, !dbg !4771
  %48 = load i8*, i8** %base, align 8, !dbg !4772
  %add.ptr = getelementptr i8, i8* %48, i64 128, !dbg !4773
  %49 = bitcast i8* %add.ptr to %struct.net2280_usb_regs*, !dbg !4774
  %50 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4775
  %usb = getelementptr inbounds %struct.net2280, %struct.net2280* %50, i32 0, i32 11, !dbg !4776
  store %struct.net2280_usb_regs* %49, %struct.net2280_usb_regs** %usb, align 8, !dbg !4777
  %51 = load i8*, i8** %base, align 8, !dbg !4778
  %add.ptr43 = getelementptr i8, i8* %51, i64 256, !dbg !4779
  %52 = bitcast i8* %add.ptr43 to %struct.net2280_pci_regs*, !dbg !4780
  %53 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4781
  %pci = getelementptr inbounds %struct.net2280, %struct.net2280* %53, i32 0, i32 13, !dbg !4782
  store %struct.net2280_pci_regs* %52, %struct.net2280_pci_regs** %pci, align 8, !dbg !4783
  %54 = load i8*, i8** %base, align 8, !dbg !4784
  %add.ptr44 = getelementptr i8, i8* %54, i64 384, !dbg !4785
  %55 = bitcast i8* %add.ptr44 to %struct.net2280_dma_regs*, !dbg !4786
  %56 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4787
  %dma = getelementptr inbounds %struct.net2280, %struct.net2280* %56, i32 0, i32 14, !dbg !4788
  store %struct.net2280_dma_regs* %55, %struct.net2280_dma_regs** %dma, align 8, !dbg !4789
  %57 = load i8*, i8** %base, align 8, !dbg !4790
  %add.ptr45 = getelementptr i8, i8* %57, i64 512, !dbg !4791
  %58 = bitcast i8* %add.ptr45 to %struct.net2280_dep_regs*, !dbg !4792
  %59 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4793
  %dep = getelementptr inbounds %struct.net2280, %struct.net2280* %59, i32 0, i32 15, !dbg !4794
  store %struct.net2280_dep_regs* %58, %struct.net2280_dep_regs** %dep, align 8, !dbg !4795
  %60 = load i8*, i8** %base, align 8, !dbg !4796
  %add.ptr46 = getelementptr i8, i8* %60, i64 768, !dbg !4797
  %61 = bitcast i8* %add.ptr46 to %struct.net2280_ep_regs*, !dbg !4798
  %62 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4799
  %epregs = getelementptr inbounds %struct.net2280, %struct.net2280* %62, i32 0, i32 16, !dbg !4800
  store %struct.net2280_ep_regs* %61, %struct.net2280_ep_regs** %epregs, align 8, !dbg !4801
  %63 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4802
  %quirks47 = getelementptr inbounds %struct.net2280, %struct.net2280* %63, i32 0, i32 8, !dbg !4804
  %64 = load i64, i64* %quirks47, align 8, !dbg !4804
  %and48 = and i64 %64, 8, !dbg !4805
  %tobool49 = icmp ne i64 %and48, 0, !dbg !4805
  br i1 %tobool49, label %if.then50, label %if.else77, !dbg !4806

if.then50:                                        ; preds = %if.end42
  call void @llvm.dbg.declare(metadata i32* %fsmvalue, metadata !4807, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.declare(metadata i32* %usbstat, metadata !4810, metadata !DIExpression()), !dbg !4811
  %65 = load i8*, i8** %base, align 8, !dbg !4812
  %add.ptr51 = getelementptr i8, i8* %65, i64 180, !dbg !4813
  %66 = bitcast i8* %add.ptr51 to %struct.usb338x_usb_ext_regs*, !dbg !4814
  %67 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4815
  %usb_ext = getelementptr inbounds %struct.net2280, %struct.net2280* %67, i32 0, i32 12, !dbg !4816
  store %struct.usb338x_usb_ext_regs* %66, %struct.usb338x_usb_ext_regs** %usb_ext, align 8, !dbg !4817
  %68 = load i8*, i8** %base, align 8, !dbg !4818
  %add.ptr52 = getelementptr i8, i8* %68, i64 1792, !dbg !4819
  %69 = bitcast i8* %add.ptr52 to %struct.usb338x_ll_regs*, !dbg !4820
  %70 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4821
  %llregs = getelementptr inbounds %struct.net2280, %struct.net2280* %70, i32 0, i32 17, !dbg !4822
  store %struct.usb338x_ll_regs* %69, %struct.usb338x_ll_regs** %llregs, align 8, !dbg !4823
  %71 = load i8*, i8** %base, align 8, !dbg !4824
  %add.ptr53 = getelementptr i8, i8* %71, i64 2048, !dbg !4825
  %72 = bitcast i8* %add.ptr53 to %struct.usb338x_pl_regs*, !dbg !4826
  %73 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4827
  %plregs = getelementptr inbounds %struct.net2280, %struct.net2280* %73, i32 0, i32 18, !dbg !4828
  store %struct.usb338x_pl_regs* %72, %struct.usb338x_pl_regs** %plregs, align 8, !dbg !4829
  %74 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4830
  %usb54 = getelementptr inbounds %struct.net2280, %struct.net2280* %74, i32 0, i32 11, !dbg !4831
  %75 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb54, align 8, !dbg !4831
  %usbstat55 = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %75, i32 0, i32 4, !dbg !4832
  %76 = bitcast i32* %usbstat55 to i8*, !dbg !4833
  %call56 = call i32 @readl(i8* %76) #12, !dbg !4834
  store i32 %call56, i32* %usbstat, align 4, !dbg !4835
  %77 = load i32, i32* %usbstat, align 4, !dbg !4836
  %conv = zext i32 %77 to i64, !dbg !4836
  %and57 = and i64 %conv, 2048, !dbg !4837
  %tobool58 = icmp ne i64 %and57, 0, !dbg !4838
  %lnot = xor i1 %tobool58, true, !dbg !4838
  %lnot59 = xor i1 %lnot, true, !dbg !4839
  %lnot.ext = zext i1 %lnot59 to i32, !dbg !4839
  %78 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4840
  %enhanced_mode = getelementptr inbounds %struct.net2280, %struct.net2280* %78, i32 0, i32 6, !dbg !4841
  store i32 %lnot.ext, i32* %enhanced_mode, align 4, !dbg !4842
  %79 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4843
  %enhanced_mode60 = getelementptr inbounds %struct.net2280, %struct.net2280* %79, i32 0, i32 6, !dbg !4844
  %80 = load i32, i32* %enhanced_mode60, align 4, !dbg !4844
  %tobool61 = icmp ne i32 %80, 0, !dbg !4845
  %81 = zext i1 %tobool61 to i64, !dbg !4845
  %cond62 = select i1 %tobool61, i32 9, i32 5, !dbg !4845
  %82 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4846
  %n_ep = getelementptr inbounds %struct.net2280, %struct.net2280* %82, i32 0, i32 7, !dbg !4847
  store i32 %cond62, i32* %n_ep, align 8, !dbg !4848
  %83 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4849
  %regs63 = getelementptr inbounds %struct.net2280, %struct.net2280* %83, i32 0, i32 10, !dbg !4850
  %84 = load %struct.net2280_regs*, %struct.net2280_regs** %regs63, align 8, !dbg !4850
  %call64 = call i32 @get_idx_reg(%struct.net2280_regs* %84, i32 11) #12, !dbg !4851
  %and65 = and i32 %call64, -268435456, !dbg !4852
  store i32 %and65, i32* %fsmvalue, align 4, !dbg !4853
  %85 = load i32, i32* %fsmvalue, align 4, !dbg !4854
  %cmp66 = icmp eq i32 %85, 805306368, !dbg !4856
  br i1 %cmp66, label %if.then68, label %if.else, !dbg !4857

if.then68:                                        ; preds = %if.then50
  %86 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4858
  %bug7734_patched = getelementptr inbounds %struct.net2280, %struct.net2280* %86, i32 0, i32 4, !dbg !4860
  %bf.load69 = load i16, i16* %bug7734_patched, align 8, !dbg !4861
  %bf.clear70 = and i16 %bf.load69, -2049, !dbg !4861
  %bf.set71 = or i16 %bf.clear70, 2048, !dbg !4861
  store i16 %bf.set71, i16* %bug7734_patched, align 8, !dbg !4861
  %87 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4862
  %usb72 = getelementptr inbounds %struct.net2280, %struct.net2280* %87, i32 0, i32 11, !dbg !4863
  %88 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb72, align 8, !dbg !4863
  %usbctl = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %88, i32 0, i32 3, !dbg !4864
  %89 = bitcast i32* %usbctl to i8*, !dbg !4865
  call void @writel(i32 0, i8* %89) #12, !dbg !4866
  br label %if.end76, !dbg !4867

if.else:                                          ; preds = %if.then50
  %90 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4868
  %bug7734_patched73 = getelementptr inbounds %struct.net2280, %struct.net2280* %90, i32 0, i32 4, !dbg !4869
  %bf.load74 = load i16, i16* %bug7734_patched73, align 8, !dbg !4870
  %bf.clear75 = and i16 %bf.load74, -2049, !dbg !4870
  store i16 %bf.clear75, i16* %bug7734_patched73, align 8, !dbg !4870
  br label %if.end76

if.end76:                                         ; preds = %if.else, %if.then68
  br label %if.end82, !dbg !4871

if.else77:                                        ; preds = %if.end42
  %91 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4872
  %enhanced_mode78 = getelementptr inbounds %struct.net2280, %struct.net2280* %91, i32 0, i32 6, !dbg !4874
  store i32 0, i32* %enhanced_mode78, align 4, !dbg !4875
  %92 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4876
  %n_ep79 = getelementptr inbounds %struct.net2280, %struct.net2280* %92, i32 0, i32 7, !dbg !4877
  store i32 7, i32* %n_ep79, align 8, !dbg !4878
  %93 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4879
  %usb80 = getelementptr inbounds %struct.net2280, %struct.net2280* %93, i32 0, i32 11, !dbg !4880
  %94 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb80, align 8, !dbg !4880
  %usbctl81 = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %94, i32 0, i32 3, !dbg !4881
  %95 = bitcast i32* %usbctl81 to i8*, !dbg !4882
  call void @writel(i32 0, i8* %95) #12, !dbg !4883
  br label %if.end82

if.end82:                                         ; preds = %if.else77, %if.end76
  %96 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4884
  call void @usb_reset(%struct.net2280* %96) #12, !dbg !4885
  %97 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4886
  call void @usb_reinit(%struct.net2280* %97) #12, !dbg !4887
  %98 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4888
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %98, i32 0, i32 43, !dbg !4890
  %99 = load i32, i32* %irq, align 4, !dbg !4890
  %tobool83 = icmp ne i32 %99, 0, !dbg !4888
  br i1 %tobool83, label %if.end87, label %if.then84, !dbg !4891

if.then84:                                        ; preds = %if.end82
  %100 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4892
  %pdev85 = getelementptr inbounds %struct.net2280, %struct.net2280* %100, i32 0, i32 9, !dbg !4892
  %101 = load %struct.pci_dev*, %struct.pci_dev** %pdev85, align 8, !dbg !4892
  %dev86 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %101, i32 0, i32 41, !dbg !4892
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev86, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #13, !dbg !4892
  store i32 -19, i32* %retval1, align 4, !dbg !4894
  br label %done, !dbg !4895

if.end87:                                         ; preds = %if.end82
  %102 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4896
  %quirks88 = getelementptr inbounds %struct.net2280, %struct.net2280* %102, i32 0, i32 8, !dbg !4898
  %103 = load i64, i64* %quirks88, align 8, !dbg !4898
  %and89 = and i64 %103, 8, !dbg !4899
  %tobool90 = icmp ne i64 %and89, 0, !dbg !4899
  br i1 %tobool90, label %if.then91, label %if.end98, !dbg !4900

if.then91:                                        ; preds = %if.end87
  %104 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4901
  %call92 = call i32 @pci_enable_msi(%struct.pci_dev* %104) #12, !dbg !4903
  %tobool93 = icmp ne i32 %call92, 0, !dbg !4903
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !4904

if.then94:                                        ; preds = %if.then91
  %105 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4905
  %pdev95 = getelementptr inbounds %struct.net2280, %struct.net2280* %105, i32 0, i32 9, !dbg !4905
  %106 = load %struct.pci_dev*, %struct.pci_dev** %pdev95, align 8, !dbg !4905
  %dev96 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %106, i32 0, i32 41, !dbg !4905
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev96, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #13, !dbg !4905
  br label %if.end97, !dbg !4905

if.end97:                                         ; preds = %if.then94, %if.then91
  br label %if.end98, !dbg !4906

if.end98:                                         ; preds = %if.end97, %if.end87
  %107 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4907
  %irq99 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %107, i32 0, i32 43, !dbg !4909
  %108 = load i32, i32* %irq99, align 4, !dbg !4909
  %109 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4910
  %110 = bitcast %struct.net2280* %109 to i8*, !dbg !4910
  %call100 = call i32 @request_irq(i32 %108, i32 (i32, i8*)* @net2280_irq, i64 128, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @driver_name, i64 0, i64 0), i8* %110) #12, !dbg !4911
  %tobool101 = icmp ne i32 %call100, 0, !dbg !4911
  br i1 %tobool101, label %if.then102, label %if.end106, !dbg !4912

if.then102:                                       ; preds = %if.end98
  %111 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4913
  %pdev103 = getelementptr inbounds %struct.net2280, %struct.net2280* %111, i32 0, i32 9, !dbg !4913
  %112 = load %struct.pci_dev*, %struct.pci_dev** %pdev103, align 8, !dbg !4913
  %dev104 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %112, i32 0, i32 41, !dbg !4913
  %113 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4913
  %irq105 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %113, i32 0, i32 43, !dbg !4913
  %114 = load i32, i32* %irq105, align 4, !dbg !4913
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev104, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 %114) #13, !dbg !4913
  store i32 -16, i32* %retval1, align 4, !dbg !4915
  br label %done, !dbg !4916

if.end106:                                        ; preds = %if.end98
  %115 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4917
  %got_irq = getelementptr inbounds %struct.net2280, %struct.net2280* %115, i32 0, i32 4, !dbg !4918
  %bf.load107 = load i16, i16* %got_irq, align 8, !dbg !4919
  %bf.clear108 = and i16 %bf.load107, -9, !dbg !4919
  %bf.set109 = or i16 %bf.clear108, 8, !dbg !4919
  store i16 %bf.set109, i16* %got_irq, align 8, !dbg !4919
  %116 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4920
  %dev110 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %116, i32 0, i32 41, !dbg !4921
  %call111 = call %struct.dma_pool* @dma_pool_create(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), %struct.device* %dev110, i64 16, i64 0, i64 0) #12, !dbg !4922
  %117 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4923
  %requests = getelementptr inbounds %struct.net2280, %struct.net2280* %117, i32 0, i32 19, !dbg !4924
  store %struct.dma_pool* %call111, %struct.dma_pool** %requests, align 8, !dbg !4925
  %118 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4926
  %requests112 = getelementptr inbounds %struct.net2280, %struct.net2280* %118, i32 0, i32 19, !dbg !4928
  %119 = load %struct.dma_pool*, %struct.dma_pool** %requests112, align 8, !dbg !4928
  %tobool113 = icmp ne %struct.dma_pool* %119, null, !dbg !4926
  br i1 %tobool113, label %if.end115, label %if.then114, !dbg !4929

if.then114:                                       ; preds = %if.end106
  store i32 -12, i32* %retval1, align 4, !dbg !4930
  br label %done, !dbg !4932

if.end115:                                        ; preds = %if.end106
  store i32 1, i32* %i, align 4, !dbg !4933
  br label %for.cond, !dbg !4935

for.cond:                                         ; preds = %for.inc, %if.end115
  %120 = load i32, i32* %i, align 4, !dbg !4936
  %cmp116 = icmp slt i32 %120, 5, !dbg !4938
  br i1 %cmp116, label %for.body, label %for.end, !dbg !4939

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net2280_dma** %td, metadata !4940, metadata !DIExpression()), !dbg !4942
  %121 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4943
  %requests118 = getelementptr inbounds %struct.net2280, %struct.net2280* %121, i32 0, i32 19, !dbg !4944
  %122 = load %struct.dma_pool*, %struct.dma_pool** %requests118, align 8, !dbg !4944
  %123 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4945
  %ep = getelementptr inbounds %struct.net2280, %struct.net2280* %123, i32 0, i32 2, !dbg !4946
  %124 = load i32, i32* %i, align 4, !dbg !4947
  %idxprom = sext i32 %124 to i64, !dbg !4945
  %arrayidx119 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep, i64 0, i64 %idxprom, !dbg !4945
  %td_dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx119, i32 0, i32 5, !dbg !4948
  %call120 = call i8* @dma_pool_alloc(%struct.dma_pool* %122, i32 3264, i64* %td_dma) #12, !dbg !4949
  %125 = bitcast i8* %call120 to %struct.net2280_dma*, !dbg !4949
  store %struct.net2280_dma* %125, %struct.net2280_dma** %td, align 8, !dbg !4950
  %126 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !4951
  %tobool121 = icmp ne %struct.net2280_dma* %126, null, !dbg !4951
  br i1 %tobool121, label %if.end123, label %if.then122, !dbg !4953

if.then122:                                       ; preds = %for.body
  store i32 -12, i32* %retval1, align 4, !dbg !4954
  br label %done, !dbg !4956

if.end123:                                        ; preds = %for.body
  %127 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !4957
  %dmacount = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %127, i32 0, i32 0, !dbg !4958
  store i32 0, i32* %dmacount, align 16, !dbg !4959
  %128 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !4960
  %dmaaddr = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %128, i32 0, i32 1, !dbg !4961
  %129 = load i32, i32* %dmaaddr, align 4, !dbg !4961
  %130 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !4962
  %dmadesc = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %130, i32 0, i32 2, !dbg !4963
  store i32 %129, i32* %dmadesc, align 8, !dbg !4964
  %131 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !4965
  %132 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4966
  %ep124 = getelementptr inbounds %struct.net2280, %struct.net2280* %132, i32 0, i32 2, !dbg !4967
  %133 = load i32, i32* %i, align 4, !dbg !4968
  %idxprom125 = sext i32 %133 to i64, !dbg !4966
  %arrayidx126 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep124, i64 0, i64 %idxprom125, !dbg !4966
  %dummy = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx126, i32 0, i32 4, !dbg !4969
  store %struct.net2280_dma* %131, %struct.net2280_dma** %dummy, align 8, !dbg !4970
  br label %for.inc, !dbg !4971

for.inc:                                          ; preds = %if.end123
  %134 = load i32, i32* %i, align 4, !dbg !4972
  %inc = add i32 %134, 1, !dbg !4972
  store i32 %inc, i32* %i, align 4, !dbg !4972
  br label %for.cond, !dbg !4973, !llvm.loop !4974

for.end:                                          ; preds = %for.cond
  %135 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4976
  %quirks127 = getelementptr inbounds %struct.net2280, %struct.net2280* %135, i32 0, i32 8, !dbg !4978
  %136 = load i64, i64* %quirks127, align 8, !dbg !4978
  %and128 = and i64 %136, 1, !dbg !4979
  %tobool129 = icmp ne i64 %and128, 0, !dbg !4979
  br i1 %tobool129, label %if.then130, label %if.end132, !dbg !4980

if.then130:                                       ; preds = %for.end
  %137 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4981
  %pci131 = getelementptr inbounds %struct.net2280, %struct.net2280* %137, i32 0, i32 13, !dbg !4982
  %138 = load %struct.net2280_pci_regs*, %struct.net2280_pci_regs** %pci131, align 8, !dbg !4982
  %pcimstctl = getelementptr inbounds %struct.net2280_pci_regs, %struct.net2280_pci_regs* %138, i32 0, i32 0, !dbg !4983
  %139 = bitcast i32* %pcimstctl to i8*, !dbg !4984
  call void @writel(i32 1792, i8* %139) #12, !dbg !4985
  br label %if.end132, !dbg !4985

if.end132:                                        ; preds = %if.then130, %for.end
  %140 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4986
  call void @pci_set_master(%struct.pci_dev* %140) #12, !dbg !4987
  %141 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4988
  %call133 = call i32 @pci_try_set_mwi(%struct.pci_dev* %141) #12, !dbg !4989
  %142 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4990
  %regs134 = getelementptr inbounds %struct.net2280, %struct.net2280* %142, i32 0, i32 10, !dbg !4991
  %143 = load %struct.net2280_regs*, %struct.net2280_regs** %regs134, align 8, !dbg !4991
  %call135 = call i32 @get_idx_reg(%struct.net2280_regs* %143, i32 3) #12, !dbg !4992
  %and136 = and i32 %call135, 65535, !dbg !4993
  %conv137 = trunc i32 %and136 to i16, !dbg !4992
  %144 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4994
  %chiprev = getelementptr inbounds %struct.net2280, %struct.net2280* %144, i32 0, i32 5, !dbg !4995
  store i16 %conv137, i16* %chiprev, align 2, !dbg !4996
  %145 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4997
  %pdev138 = getelementptr inbounds %struct.net2280, %struct.net2280* %145, i32 0, i32 9, !dbg !4997
  %146 = load %struct.pci_dev*, %struct.pci_dev** %pdev138, align 8, !dbg !4997
  %dev139 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %146, i32 0, i32 41, !dbg !4997
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev139, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @driver_desc, i64 0, i64 0)) #13, !dbg !4997
  %147 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4998
  %pdev140 = getelementptr inbounds %struct.net2280, %struct.net2280* %147, i32 0, i32 9, !dbg !4998
  %148 = load %struct.pci_dev*, %struct.pci_dev** %pdev140, align 8, !dbg !4998
  %dev141 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %148, i32 0, i32 41, !dbg !4998
  %149 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4998
  %irq142 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %149, i32 0, i32 43, !dbg !4998
  %150 = load i32, i32* %irq142, align 4, !dbg !4998
  %151 = load i8*, i8** %base, align 8, !dbg !4998
  %152 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4998
  %chiprev143 = getelementptr inbounds %struct.net2280, %struct.net2280* %152, i32 0, i32 5, !dbg !4998
  %153 = load i16, i16* %chiprev143, align 2, !dbg !4998
  %conv144 = zext i16 %153 to i32, !dbg !4998
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev141, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0), i32 %150, i8* %151, i32 %conv144) #13, !dbg !4998
  %154 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4999
  %pdev145 = getelementptr inbounds %struct.net2280, %struct.net2280* %154, i32 0, i32 9, !dbg !4999
  %155 = load %struct.pci_dev*, %struct.pci_dev** %pdev145, align 8, !dbg !4999
  %dev146 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %155, i32 0, i32 41, !dbg !4999
  %156 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !4999
  %enhanced_mode147 = getelementptr inbounds %struct.net2280, %struct.net2280* %156, i32 0, i32 6, !dbg !4999
  %157 = load i32, i32* %enhanced_mode147, align 4, !dbg !4999
  %tobool148 = icmp ne i32 %157, 0, !dbg !4999
  %158 = zext i1 %tobool148 to i64, !dbg !4999
  %cond149 = select i1 %tobool148, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), !dbg !4999
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev146, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i8* %cond149) #13, !dbg !4999
  store i32 0, i32* %retval1, align 4, !dbg !5000
  %159 = load i32, i32* %retval1, align 4, !dbg !5001
  %tobool150 = icmp ne i32 %159, 0, !dbg !5001
  br i1 %tobool150, label %if.then151, label %if.end152, !dbg !5003

if.then151:                                       ; preds = %if.end132
  br label %done, !dbg !5004

if.end152:                                        ; preds = %if.end132
  %160 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5005
  %gadget153 = getelementptr inbounds %struct.net2280, %struct.net2280* %160, i32 0, i32 0, !dbg !5006
  %call154 = call i32 @usb_add_gadget(%struct.usb_gadget* %gadget153) #12, !dbg !5007
  store i32 %call154, i32* %retval1, align 4, !dbg !5008
  %161 = load i32, i32* %retval1, align 4, !dbg !5009
  %tobool155 = icmp ne i32 %161, 0, !dbg !5009
  br i1 %tobool155, label %if.then156, label %if.end157, !dbg !5011

if.then156:                                       ; preds = %if.end152
  br label %done, !dbg !5012

if.end157:                                        ; preds = %if.end152
  %162 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5013
  %added = getelementptr inbounds %struct.net2280, %struct.net2280* %162, i32 0, i32 4, !dbg !5014
  %bf.load158 = load i16, i16* %added, align 8, !dbg !5015
  %bf.clear159 = and i16 %bf.load158, -33, !dbg !5015
  %bf.set160 = or i16 %bf.clear159, 32, !dbg !5015
  store i16 %bf.set160, i16* %added, align 8, !dbg !5015
  store i32 0, i32* %retval, align 4, !dbg !5016
  br label %return, !dbg !5016

done:                                             ; preds = %if.then156, %if.then151, %if.then122, %if.then114, %if.then102, %if.then84, %if.then41, %if.then34, %if.then12, %if.then
  call void @llvm.dbg.label(metadata !5017), !dbg !5018
  %163 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5019
  %tobool161 = icmp ne %struct.net2280* %163, null, !dbg !5019
  br i1 %tobool161, label %if.then162, label %if.end163, !dbg !5021

if.then162:                                       ; preds = %done
  %164 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5022
  call void @net2280_remove(%struct.pci_dev* %164) #12, !dbg !5024
  %165 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5025
  %166 = bitcast %struct.net2280* %165 to i8*, !dbg !5025
  call void @kfree(i8* %166) #12, !dbg !5026
  br label %if.end163, !dbg !5027

if.end163:                                        ; preds = %if.then162, %done
  %167 = load i32, i32* %retval1, align 4, !dbg !5028
  store i32 %167, i32* %retval, align 4, !dbg !5029
  br label %return, !dbg !5029

return:                                           ; preds = %if.end163, %if.end157
  %168 = load i32, i32* %retval, align 4, !dbg !5030
  ret i32 %168, !dbg !5030
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @net2280_remove(%struct.pci_dev* %pdev) #2 !dbg !5031 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.net2280*, align 8
  %i = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !5032, metadata !DIExpression()), !dbg !5033
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev, metadata !5034, metadata !DIExpression()), !dbg !5035
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5036
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !5037
  %1 = bitcast i8* %call to %struct.net2280*, !dbg !5037
  store %struct.net2280* %1, %struct.net2280** %dev, align 8, !dbg !5035
  %2 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5038
  %added = getelementptr inbounds %struct.net2280, %struct.net2280* %2, i32 0, i32 4, !dbg !5040
  %bf.load = load i16, i16* %added, align 8, !dbg !5040
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !5040
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5040
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5040
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5038
  br i1 %tobool, label %if.then, label %if.end, !dbg !5041

if.then:                                          ; preds = %entry
  %3 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5042
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %3, i32 0, i32 0, !dbg !5043
  call void @usb_del_gadget(%struct.usb_gadget* %gadget) #12, !dbg !5044
  br label %if.end, !dbg !5044

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !5045

do.body:                                          ; preds = %if.end
  %4 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5046
  %driver = getelementptr inbounds %struct.net2280, %struct.net2280* %4, i32 0, i32 3, !dbg !5046
  %5 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver, align 8, !dbg !5046
  %tobool1 = icmp ne %struct.usb_gadget_driver* %5, null, !dbg !5046
  %lnot = xor i1 %tobool1, true, !dbg !5046
  %lnot2 = xor i1 %lnot, true, !dbg !5046
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5046
  %conv = sext i32 %lnot.ext to i64, !dbg !5046
  %tobool3 = icmp ne i64 %conv, 0, !dbg !5046
  br i1 %tobool3, label %if.then4, label %if.end12, !dbg !5049

if.then4:                                         ; preds = %do.body
  br label %do.body5, !dbg !5046

do.body5:                                         ; preds = %if.then4
  br label %do.body6, !dbg !5050

do.body6:                                         ; preds = %do.body5
  br label %do.end, !dbg !5052

do.end:                                           ; preds = %do.body6
  br label %do.body7, !dbg !5050

do.body7:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i32 3577, i32 0, i64 12) #10, !dbg !5054, !srcloc !5056
  br label %do.end8, !dbg !5054

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !5050

do.body9:                                         ; preds = %do.end8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 272) #10, !dbg !5057, !srcloc !5060
  unreachable, !dbg !5061

do.end10:                                         ; No predecessors!
  br label %do.end11, !dbg !5050

do.end11:                                         ; preds = %do.end10
  br label %if.end12, !dbg !5050

if.end12:                                         ; preds = %do.end11, %do.body
  br label %do.end13, !dbg !5049

do.end13:                                         ; preds = %if.end12
  %6 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5062
  %requests = getelementptr inbounds %struct.net2280, %struct.net2280* %6, i32 0, i32 19, !dbg !5064
  %7 = load %struct.dma_pool*, %struct.dma_pool** %requests, align 8, !dbg !5064
  %tobool14 = icmp ne %struct.dma_pool* %7, null, !dbg !5062
  br i1 %tobool14, label %if.then15, label %if.end29, !dbg !5065

if.then15:                                        ; preds = %do.end13
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5066, metadata !DIExpression()), !dbg !5068
  store i32 1, i32* %i, align 4, !dbg !5069
  br label %for.cond, !dbg !5071

for.cond:                                         ; preds = %for.inc, %if.then15
  %8 = load i32, i32* %i, align 4, !dbg !5072
  %cmp = icmp slt i32 %8, 5, !dbg !5074
  br i1 %cmp, label %for.body, label %for.end, !dbg !5075

for.body:                                         ; preds = %for.cond
  %9 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5076
  %ep = getelementptr inbounds %struct.net2280, %struct.net2280* %9, i32 0, i32 2, !dbg !5079
  %10 = load i32, i32* %i, align 4, !dbg !5080
  %idxprom = sext i32 %10 to i64, !dbg !5076
  %arrayidx = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep, i64 0, i64 %idxprom, !dbg !5076
  %dummy = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx, i32 0, i32 4, !dbg !5081
  %11 = load %struct.net2280_dma*, %struct.net2280_dma** %dummy, align 8, !dbg !5081
  %tobool17 = icmp ne %struct.net2280_dma* %11, null, !dbg !5076
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !5082

if.then18:                                        ; preds = %for.body
  br label %for.inc, !dbg !5083

if.end19:                                         ; preds = %for.body
  %12 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5084
  %requests20 = getelementptr inbounds %struct.net2280, %struct.net2280* %12, i32 0, i32 19, !dbg !5085
  %13 = load %struct.dma_pool*, %struct.dma_pool** %requests20, align 8, !dbg !5085
  %14 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5086
  %ep21 = getelementptr inbounds %struct.net2280, %struct.net2280* %14, i32 0, i32 2, !dbg !5087
  %15 = load i32, i32* %i, align 4, !dbg !5088
  %idxprom22 = sext i32 %15 to i64, !dbg !5086
  %arrayidx23 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep21, i64 0, i64 %idxprom22, !dbg !5086
  %dummy24 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx23, i32 0, i32 4, !dbg !5089
  %16 = load %struct.net2280_dma*, %struct.net2280_dma** %dummy24, align 8, !dbg !5089
  %17 = bitcast %struct.net2280_dma* %16 to i8*, !dbg !5086
  %18 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5090
  %ep25 = getelementptr inbounds %struct.net2280, %struct.net2280* %18, i32 0, i32 2, !dbg !5091
  %19 = load i32, i32* %i, align 4, !dbg !5092
  %idxprom26 = sext i32 %19 to i64, !dbg !5090
  %arrayidx27 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep25, i64 0, i64 %idxprom26, !dbg !5090
  %td_dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx27, i32 0, i32 5, !dbg !5093
  %20 = load i64, i64* %td_dma, align 8, !dbg !5093
  call void @dma_pool_free(%struct.dma_pool* %13, i8* %17, i64 %20) #12, !dbg !5094
  br label %for.inc, !dbg !5095

for.inc:                                          ; preds = %if.end19, %if.then18
  %21 = load i32, i32* %i, align 4, !dbg !5096
  %inc = add i32 %21, 1, !dbg !5096
  store i32 %inc, i32* %i, align 4, !dbg !5096
  br label %for.cond, !dbg !5097, !llvm.loop !5098

for.end:                                          ; preds = %for.cond
  %22 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5100
  %requests28 = getelementptr inbounds %struct.net2280, %struct.net2280* %22, i32 0, i32 19, !dbg !5101
  %23 = load %struct.dma_pool*, %struct.dma_pool** %requests28, align 8, !dbg !5101
  call void @dma_pool_destroy(%struct.dma_pool* %23) #12, !dbg !5102
  br label %if.end29, !dbg !5103

if.end29:                                         ; preds = %for.end, %do.end13
  %24 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5104
  %got_irq = getelementptr inbounds %struct.net2280, %struct.net2280* %24, i32 0, i32 4, !dbg !5106
  %bf.load30 = load i16, i16* %got_irq, align 8, !dbg !5106
  %bf.lshr31 = lshr i16 %bf.load30, 3, !dbg !5106
  %bf.clear32 = and i16 %bf.lshr31, 1, !dbg !5106
  %bf.cast33 = zext i16 %bf.clear32 to i32, !dbg !5106
  %tobool34 = icmp ne i32 %bf.cast33, 0, !dbg !5104
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !5107

if.then35:                                        ; preds = %if.end29
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5108
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 43, !dbg !5109
  %26 = load i32, i32* %irq, align 4, !dbg !5109
  %27 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5110
  %28 = bitcast %struct.net2280* %27 to i8*, !dbg !5110
  %call36 = call i8* @free_irq(i32 %26, i8* %28) #12, !dbg !5111
  br label %if.end37, !dbg !5111

if.end37:                                         ; preds = %if.then35, %if.end29
  %29 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5112
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %29, i32 0, i32 8, !dbg !5114
  %30 = load i64, i64* %quirks, align 8, !dbg !5114
  %and = and i64 %30, 8, !dbg !5115
  %tobool38 = icmp ne i64 %and, 0, !dbg !5115
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !5116

if.then39:                                        ; preds = %if.end37
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5117
  call void @pci_disable_msi(%struct.pci_dev* %31) #12, !dbg !5118
  br label %if.end40, !dbg !5118

if.end40:                                         ; preds = %if.then39, %if.end37
  %32 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5119
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %32, i32 0, i32 10, !dbg !5121
  %33 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !5121
  %tobool41 = icmp ne %struct.net2280_regs* %33, null, !dbg !5119
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !5122

if.then42:                                        ; preds = %if.end40
  %34 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5123
  call void @net2280_led_shutdown(%struct.net2280* %34) #12, !dbg !5125
  %35 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5126
  %regs43 = getelementptr inbounds %struct.net2280, %struct.net2280* %35, i32 0, i32 10, !dbg !5127
  %36 = load %struct.net2280_regs*, %struct.net2280_regs** %regs43, align 8, !dbg !5127
  %37 = bitcast %struct.net2280_regs* %36 to i8*, !dbg !5126
  call void @iounmap(i8* %37) #12, !dbg !5128
  br label %if.end44, !dbg !5129

if.end44:                                         ; preds = %if.then42, %if.end40
  %38 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5130
  %region = getelementptr inbounds %struct.net2280, %struct.net2280* %38, i32 0, i32 4, !dbg !5132
  %bf.load45 = load i16, i16* %region, align 8, !dbg !5132
  %bf.lshr46 = lshr i16 %bf.load45, 4, !dbg !5132
  %bf.clear47 = and i16 %bf.lshr46, 1, !dbg !5132
  %bf.cast48 = zext i16 %bf.clear47 to i32, !dbg !5132
  %tobool49 = icmp ne i32 %bf.cast48, 0, !dbg !5130
  br i1 %tobool49, label %if.then50, label %if.end70, !dbg !5133

if.then50:                                        ; preds = %if.end44
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5134
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 44, !dbg !5134
  %arrayidx51 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !5134
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx51, i32 0, i32 0, !dbg !5134
  %40 = load i64, i64* %start, align 8, !dbg !5134
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5134
  %resource52 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %41, i32 0, i32 44, !dbg !5134
  %arrayidx53 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource52, i64 0, i64 0, !dbg !5134
  %start54 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx53, i32 0, i32 0, !dbg !5134
  %42 = load i64, i64* %start54, align 8, !dbg !5134
  %cmp55 = icmp eq i64 %42, 0, !dbg !5134
  br i1 %cmp55, label %land.lhs.true, label %cond.false, !dbg !5134

land.lhs.true:                                    ; preds = %if.then50
  %43 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5134
  %resource57 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 44, !dbg !5134
  %arrayidx58 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource57, i64 0, i64 0, !dbg !5134
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx58, i32 0, i32 1, !dbg !5134
  %44 = load i64, i64* %end, align 8, !dbg !5134
  %45 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5134
  %resource59 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %45, i32 0, i32 44, !dbg !5134
  %arrayidx60 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource59, i64 0, i64 0, !dbg !5134
  %start61 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx60, i32 0, i32 0, !dbg !5134
  %46 = load i64, i64* %start61, align 8, !dbg !5134
  %cmp62 = icmp eq i64 %44, %46, !dbg !5134
  br i1 %cmp62, label %cond.true, label %cond.false, !dbg !5134

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !5134

cond.false:                                       ; preds = %land.lhs.true, %if.then50
  %47 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5134
  %resource64 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %47, i32 0, i32 44, !dbg !5134
  %arrayidx65 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource64, i64 0, i64 0, !dbg !5134
  %end66 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx65, i32 0, i32 1, !dbg !5134
  %48 = load i64, i64* %end66, align 8, !dbg !5134
  %49 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5134
  %resource67 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %49, i32 0, i32 44, !dbg !5134
  %arrayidx68 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource67, i64 0, i64 0, !dbg !5134
  %start69 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx68, i32 0, i32 0, !dbg !5134
  %50 = load i64, i64* %start69, align 8, !dbg !5134
  %sub = sub i64 %48, %50, !dbg !5134
  %add = add i64 %sub, 1, !dbg !5134
  br label %cond.end, !dbg !5134

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !5134
  call void @__release_region(%struct.resource* @iomem_resource, i64 %40, i64 %cond) #12, !dbg !5134
  br label %if.end70, !dbg !5134

if.end70:                                         ; preds = %cond.end, %if.end44
  %51 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5135
  %enabled = getelementptr inbounds %struct.net2280, %struct.net2280* %51, i32 0, i32 4, !dbg !5137
  %bf.load71 = load i16, i16* %enabled, align 8, !dbg !5137
  %bf.clear72 = and i16 %bf.load71, 1, !dbg !5137
  %bf.cast73 = zext i16 %bf.clear72 to i32, !dbg !5137
  %tobool74 = icmp ne i32 %bf.cast73, 0, !dbg !5135
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !5138

if.then75:                                        ; preds = %if.end70
  %52 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5139
  call void @pci_disable_device(%struct.pci_dev* %52) #12, !dbg !5140
  br label %if.end76, !dbg !5140

if.end76:                                         ; preds = %if.then75, %if.end70
  br label %do.body77, !dbg !5141

do.body77:                                        ; preds = %if.end76
  br label %do.end78, !dbg !5142

do.end78:                                         ; preds = %do.body77
  %53 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5144
  %pdev79 = getelementptr inbounds %struct.net2280, %struct.net2280* %53, i32 0, i32 9, !dbg !5144
  %54 = load %struct.pci_dev*, %struct.pci_dev** %pdev79, align 8, !dbg !5144
  %dev80 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 41, !dbg !5144
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev80, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i64 0, i64 0)) #13, !dbg !5144
  %55 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5145
  %gadget81 = getelementptr inbounds %struct.net2280, %struct.net2280* %55, i32 0, i32 0, !dbg !5146
  call void @usb_put_gadget(%struct.usb_gadget* %gadget81) #12, !dbg !5147
  ret void, !dbg !5148
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @net2280_shutdown(%struct.pci_dev* %pdev) #2 !dbg !5149 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.net2280*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !5150, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev, metadata !5152, metadata !DIExpression()), !dbg !5153
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5154
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !5155
  %1 = bitcast i8* %call to %struct.net2280*, !dbg !5155
  store %struct.net2280* %1, %struct.net2280** %dev, align 8, !dbg !5153
  %2 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5156
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %2, i32 0, i32 10, !dbg !5157
  %3 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !5157
  %pciirqenb0 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %3, i32 0, i32 4, !dbg !5158
  %4 = bitcast i32* %pciirqenb0 to i8*, !dbg !5159
  call void @writel(i32 0, i8* %4) #12, !dbg !5160
  %5 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5161
  %regs1 = getelementptr inbounds %struct.net2280, %struct.net2280* %5, i32 0, i32 10, !dbg !5162
  %6 = load %struct.net2280_regs*, %struct.net2280_regs** %regs1, align 8, !dbg !5162
  %pciirqenb1 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %6, i32 0, i32 5, !dbg !5163
  %7 = bitcast i32* %pciirqenb1 to i8*, !dbg !5164
  call void @writel(i32 0, i8* %7) #12, !dbg !5165
  %8 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5166
  %usb = getelementptr inbounds %struct.net2280, %struct.net2280* %8, i32 0, i32 11, !dbg !5167
  %9 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb, align 8, !dbg !5167
  %usbctl = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %9, i32 0, i32 3, !dbg !5168
  %10 = bitcast i32* %usbctl to i8*, !dbg !5169
  call void @writel(i32 0, i8* %10) #12, !dbg !5170
  ret void, !dbg !5171
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #2 !dbg !5172 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5175, metadata !DIExpression()), !dbg !5179
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5185, metadata !DIExpression()), !dbg !5186
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5187, metadata !DIExpression()), !dbg !5188
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5189, metadata !DIExpression()), !dbg !5190
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5191, metadata !DIExpression()), !dbg !5195
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5197, metadata !DIExpression()), !dbg !5201
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5203, metadata !DIExpression()), !dbg !5207
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5212, metadata !DIExpression()), !dbg !5213
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5214, metadata !DIExpression()), !dbg !5215
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5216, metadata !DIExpression()), !dbg !5217
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5218, metadata !DIExpression()), !dbg !5219
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5220, metadata !DIExpression()), !dbg !5221
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5222, metadata !DIExpression()), !dbg !5223
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5224, metadata !DIExpression()), !dbg !5225
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5226, metadata !DIExpression()), !dbg !5227
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5228, metadata !DIExpression()), !dbg !5229
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5230, metadata !DIExpression()), !dbg !5231
  %0 = load i64, i64* %size.addr, align 8, !dbg !5232
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5233
  %or = or i32 %1, 256, !dbg !5234
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5235
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !5236
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5237

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5238
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5239
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5240

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5241
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5242
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5243
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !5244
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5221
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5245
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5246
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5247
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5248
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5249
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5250
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #15, !dbg !5251
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5251
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5251
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5251
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !5251
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5252
  br label %kmalloc.exit, !dbg !5252

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5253
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5254
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5254
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5256

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5257
  br label %kmalloc_index.exit.i, !dbg !5257

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5258
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5260
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5261

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5262
  br label %kmalloc_index.exit.i, !dbg !5262

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5263
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5265
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5266

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5267
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5268
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5269

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5270
  br label %kmalloc_index.exit.i, !dbg !5270

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5271
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5273
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5274

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5275
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5276
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5277

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5278
  br label %kmalloc_index.exit.i, !dbg !5278

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5279
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5281
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5282

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5283
  br label %kmalloc_index.exit.i, !dbg !5283

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5284
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5286
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5287

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5288
  br label %kmalloc_index.exit.i, !dbg !5288

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5289
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5291
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5292

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5293
  br label %kmalloc_index.exit.i, !dbg !5293

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5294
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5296
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5297

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5298
  br label %kmalloc_index.exit.i, !dbg !5298

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5299
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5301
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5302

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5303
  br label %kmalloc_index.exit.i, !dbg !5303

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5304
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5306
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5307

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5308
  br label %kmalloc_index.exit.i, !dbg !5308

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5309
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5311
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5312

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5313
  br label %kmalloc_index.exit.i, !dbg !5313

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5314
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5316
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5317

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5318
  br label %kmalloc_index.exit.i, !dbg !5318

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5319
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5321
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5322

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5323
  br label %kmalloc_index.exit.i, !dbg !5323

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5324
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5326
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5327

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5328
  br label %kmalloc_index.exit.i, !dbg !5328

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5329
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5331
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5332

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5333
  br label %kmalloc_index.exit.i, !dbg !5333

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5334
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5336
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5337

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5338
  br label %kmalloc_index.exit.i, !dbg !5338

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5339
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5341
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5342

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5343
  br label %kmalloc_index.exit.i, !dbg !5343

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5344
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5346
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5347

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5348
  br label %kmalloc_index.exit.i, !dbg !5348

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5349
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5351
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5352

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5353
  br label %kmalloc_index.exit.i, !dbg !5353

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5354
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5356
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5357

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5358
  br label %kmalloc_index.exit.i, !dbg !5358

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5359
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5361
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5362

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5363
  br label %kmalloc_index.exit.i, !dbg !5363

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5364
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5366
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5367

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5368
  br label %kmalloc_index.exit.i, !dbg !5368

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5369
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5371
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5372

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5373
  br label %kmalloc_index.exit.i, !dbg !5373

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5374
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5376
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5377

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5378
  br label %kmalloc_index.exit.i, !dbg !5378

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5379
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5381
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5382

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5383
  br label %kmalloc_index.exit.i, !dbg !5383

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5384
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5386
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5387

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5388
  br label %kmalloc_index.exit.i, !dbg !5388

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5389
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5391
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5392

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5393
  br label %kmalloc_index.exit.i, !dbg !5393

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5394
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5396
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5397

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5398
  br label %kmalloc_index.exit.i, !dbg !5398

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !5399, !srcloc !5402
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #10, !dbg !5403, !srcloc !5406
  unreachable, !dbg !5407

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5408
  store i32 %45, i32* %index.i, align 4, !dbg !5409
  %46 = load i32, i32* %index.i, align 4, !dbg !5410
  %tobool.i = icmp ne i32 %46, 0, !dbg !5410
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5412

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5413
  br label %kmalloc.exit, !dbg !5413

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5414
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5415
  %and.i.i = and i32 %48, 17, !dbg !5415
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5415
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5415
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5415
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5415
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5417

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5418
  br label %kmalloc_type.exit.i, !dbg !5418

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5419
  %and2.i.i = and i32 %49, 1, !dbg !5420
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5419
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5419
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5419
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5421
  br label %kmalloc_type.exit.i, !dbg !5421

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5422
  %idxprom.i = zext i32 %51 to i64, !dbg !5423
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5423
  %52 = load i32, i32* %index.i, align 4, !dbg !5424
  %idxprom6.i = zext i32 %52 to i64, !dbg !5423
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5423
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5423
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5425
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5426
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5427
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5428
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #15, !dbg !5429
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5429
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5429
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5429
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !5429
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5190
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5430
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5431
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5432
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5433
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #15, !dbg !5434
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5435
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5436
  store i8* %62, i8** %retval.i, align 8, !dbg !5437
  br label %kmalloc.exit, !dbg !5437

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5438
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5439
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #15, !dbg !5440
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5440
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5440
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5440
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !5440
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5441
  br label %kmalloc.exit, !dbg !5441

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5442
  ret i8* %65, !dbg !5443
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #2 !dbg !5444 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !5447, metadata !DIExpression()), !dbg !5448
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5449, metadata !DIExpression()), !dbg !5450
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5451
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !5452
  %1 = load i8*, i8** %data.addr, align 8, !dbg !5453
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #12, !dbg !5454
  ret void, !dbg !5455
}

; Function Attrs: noredzone
declare dso_local void @usb_initialize_gadget(%struct.device*, %struct.usb_gadget*, void (%struct.device*)*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gadget_release(%struct.device* %_dev) #2 !dbg !5456 {
entry:
  %_dev.addr = alloca %struct.device*, align 8
  %dev = alloca %struct.net2280*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280*, align 8
  store %struct.device* %_dev, %struct.device** %_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %_dev.addr, metadata !5457, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev, metadata !5459, metadata !DIExpression()), !dbg !5460
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5461, metadata !DIExpression()), !dbg !5463
  %0 = load %struct.device*, %struct.device** %_dev.addr, align 8, !dbg !5463
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5463
  store i8* %1, i8** %__mptr, align 8, !dbg !5463
  br label %do.body, !dbg !5463

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5464

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5463
  %add.ptr = getelementptr i8, i8* %2, i64 -96, !dbg !5463
  %3 = bitcast i8* %add.ptr to %struct.net2280*, !dbg !5463
  store %struct.net2280* %3, %struct.net2280** %tmp, align 8, !dbg !5464
  %4 = load %struct.net2280*, %struct.net2280** %tmp, align 8, !dbg !5463
  store %struct.net2280* %4, %struct.net2280** %dev, align 8, !dbg !5460
  %5 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5466
  %6 = bitcast %struct.net2280* %5 to i8*, !dbg !5466
  call void @kfree(i8* %6) #12, !dbg !5467
  ret void, !dbg !5468
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #1

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #2 !dbg !5469 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !5476, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5478, metadata !DIExpression()), !dbg !5477
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !5477
  %1 = bitcast i8* %0 to i32*, !dbg !5477
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #10, !dbg !5477, !srcloc !5479
  store i32 %2, i32* %ret, align 4, !dbg !5477
  %3 = load i32, i32* %ret, align 4, !dbg !5477
  ret i32 %3, !dbg !5477
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_idx_reg(%struct.net2280_regs* %regs, i32 %index) #2 !dbg !5480 {
entry:
  %regs.addr = alloca %struct.net2280_regs*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net2280_regs* %regs, %struct.net2280_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_regs** %regs.addr, metadata !5483, metadata !DIExpression()), !dbg !5484
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5485, metadata !DIExpression()), !dbg !5486
  %0 = load i32, i32* %index.addr, align 4, !dbg !5487
  %1 = load %struct.net2280_regs*, %struct.net2280_regs** %regs.addr, align 8, !dbg !5488
  %idxaddr = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %1, i32 0, i32 12, !dbg !5489
  %2 = bitcast i32* %idxaddr to i8*, !dbg !5490
  call void @writel(i32 %0, i8* %2) #12, !dbg !5491
  %3 = load %struct.net2280_regs*, %struct.net2280_regs** %regs.addr, align 8, !dbg !5492
  %idxdata = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %3, i32 0, i32 13, !dbg !5493
  %4 = bitcast i32* %idxdata to i8*, !dbg !5494
  %call = call i32 @readl(i8* %4) #12, !dbg !5495
  ret i32 %call, !dbg !5496
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #2 !dbg !5497 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !5501, metadata !DIExpression()), !dbg !5502
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !5503, metadata !DIExpression()), !dbg !5502
  %0 = load i32, i32* %val.addr, align 4, !dbg !5502
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !5502
  %2 = bitcast i8* %1 to i32*, !dbg !5502
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #10, !dbg !5502, !srcloc !5504
  ret void, !dbg !5502
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_reset(%struct.net2280* %dev) #2 !dbg !5505 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !5506, metadata !DIExpression()), !dbg !5507
  %0 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !5508
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %0, i32 0, i32 8, !dbg !5510
  %1 = load i64, i64* %quirks, align 8, !dbg !5510
  %and = and i64 %1, 1, !dbg !5511
  %tobool = icmp ne i64 %and, 0, !dbg !5511
  br i1 %tobool, label %if.then, label %if.end, !dbg !5512

if.then:                                          ; preds = %entry
  %2 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !5513
  call void @usb_reset_228x(%struct.net2280* %2) #12, !dbg !5514
  br label %return, !dbg !5515

if.end:                                           ; preds = %entry
  %3 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !5516
  call void @usb_reset_338x(%struct.net2280* %3) #12, !dbg !5517
  br label %return, !dbg !5518

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_reinit(%struct.net2280* %dev) #2 !dbg !5520 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !5521, metadata !DIExpression()), !dbg !5522
  %0 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !5523
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %0, i32 0, i32 8, !dbg !5525
  %1 = load i64, i64* %quirks, align 8, !dbg !5525
  %and = and i64 %1, 1, !dbg !5526
  %tobool = icmp ne i64 %and, 0, !dbg !5526
  br i1 %tobool, label %if.then, label %if.end, !dbg !5527

if.then:                                          ; preds = %entry
  %2 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !5528
  call void @usb_reinit_228x(%struct.net2280* %2) #12, !dbg !5529
  br label %return, !dbg !5530

if.end:                                           ; preds = %entry
  %3 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !5531
  call void @usb_reinit_338x(%struct.net2280* %3) #12, !dbg !5532
  br label %return, !dbg !5533

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5534
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #5

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_msi(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #2 !dbg !5535 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5543, metadata !DIExpression()), !dbg !5544
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !5545, metadata !DIExpression()), !dbg !5546
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !5547, metadata !DIExpression()), !dbg !5548
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5549, metadata !DIExpression()), !dbg !5550
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !5551, metadata !DIExpression()), !dbg !5552
  %0 = load i32, i32* %irq.addr, align 4, !dbg !5553
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !5554
  %2 = load i64, i64* %flags.addr, align 8, !dbg !5555
  %3 = load i8*, i8** %name.addr, align 8, !dbg !5556
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !5557
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #12, !dbg !5558
  ret i32 %call, !dbg !5559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_irq(i32 %irq, i8* %_dev) #2 !dbg !5560 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5561, metadata !DIExpression()), !dbg !5565
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5567, metadata !DIExpression()), !dbg !5569
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %_dev.addr = alloca i8*, align 8
  %dev = alloca %struct.net2280*, align 8
  %pciirqenb1 = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5571, metadata !DIExpression()), !dbg !5572
  store i8* %_dev, i8** %_dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dev.addr, metadata !5573, metadata !DIExpression()), !dbg !5574
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev, metadata !5575, metadata !DIExpression()), !dbg !5576
  %0 = load i8*, i8** %_dev.addr, align 8, !dbg !5577
  %1 = bitcast i8* %0 to %struct.net2280*, !dbg !5577
  store %struct.net2280* %1, %struct.net2280** %dev, align 8, !dbg !5576
  %2 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5578
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %2, i32 0, i32 8, !dbg !5580
  %3 = load i64, i64* %quirks, align 8, !dbg !5580
  %and = and i64 %3, 1, !dbg !5581
  %tobool = icmp ne i64 %and, 0, !dbg !5581
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5582

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5583
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %4, i32 0, i32 10, !dbg !5584
  %5 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !5584
  %irqstat0 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %5, i32 0, i32 10, !dbg !5585
  %6 = bitcast i32* %irqstat0 to i8*, !dbg !5586
  %call = call i32 @readl(i8* %6) #12, !dbg !5587
  %conv = zext i32 %call to i64, !dbg !5587
  %and1 = and i64 %conv, 4096, !dbg !5588
  %tobool2 = icmp ne i64 %and1, 0, !dbg !5588
  br i1 %tobool2, label %if.end, label %if.then, !dbg !5589

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !5590
  br label %return, !dbg !5590

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5591
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %7, i32 0, i32 1, !dbg !5592
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5593, !srcloc !5595
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5596
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !5596
  %rlock.i = bitcast %union.anon.4* %9 to %struct.raw_spinlock*, !dbg !5596
  %10 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5598
  %11 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5599
  %regs3 = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 10, !dbg !5600
  %12 = load %struct.net2280_regs*, %struct.net2280_regs** %regs3, align 8, !dbg !5600
  %irqstat1 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %12, i32 0, i32 11, !dbg !5601
  %13 = bitcast i32* %irqstat1 to i8*, !dbg !5602
  %call4 = call i32 @readl(i8* %13) #12, !dbg !5603
  call void @handle_stat1_irqs(%struct.net2280* %10, i32 %call4) #12, !dbg !5604
  %14 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5605
  %15 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5606
  %regs5 = getelementptr inbounds %struct.net2280, %struct.net2280* %15, i32 0, i32 10, !dbg !5607
  %16 = load %struct.net2280_regs*, %struct.net2280_regs** %regs5, align 8, !dbg !5607
  %irqstat06 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %16, i32 0, i32 10, !dbg !5608
  %17 = bitcast i32* %irqstat06 to i8*, !dbg !5609
  %call7 = call i32 @readl(i8* %17) #12, !dbg !5610
  call void @handle_stat0_irqs(%struct.net2280* %14, i32 %call7) #12, !dbg !5611
  %18 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5612
  %quirks8 = getelementptr inbounds %struct.net2280, %struct.net2280* %18, i32 0, i32 8, !dbg !5614
  %19 = load i64, i64* %quirks8, align 8, !dbg !5614
  %and9 = and i64 %19, 8, !dbg !5615
  %tobool10 = icmp ne i64 %and9, 0, !dbg !5615
  br i1 %tobool10, label %if.then11, label %if.end20, !dbg !5616

if.then11:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %pciirqenb1, metadata !5617, metadata !DIExpression()), !dbg !5619
  %20 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5620
  %regs12 = getelementptr inbounds %struct.net2280, %struct.net2280* %20, i32 0, i32 10, !dbg !5621
  %21 = load %struct.net2280_regs*, %struct.net2280_regs** %regs12, align 8, !dbg !5621
  %pciirqenb113 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %21, i32 0, i32 5, !dbg !5622
  %22 = bitcast i32* %pciirqenb113 to i8*, !dbg !5623
  %call14 = call i32 @readl(i8* %22) #12, !dbg !5624
  store i32 %call14, i32* %pciirqenb1, align 4, !dbg !5619
  %23 = load i32, i32* %pciirqenb1, align 4, !dbg !5625
  %and15 = and i32 %23, 2147483647, !dbg !5626
  %24 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5627
  %regs16 = getelementptr inbounds %struct.net2280, %struct.net2280* %24, i32 0, i32 10, !dbg !5628
  %25 = load %struct.net2280_regs*, %struct.net2280_regs** %regs16, align 8, !dbg !5628
  %pciirqenb117 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %25, i32 0, i32 5, !dbg !5629
  %26 = bitcast i32* %pciirqenb117 to i8*, !dbg !5630
  call void @writel(i32 %and15, i8* %26) #12, !dbg !5631
  %27 = load i32, i32* %pciirqenb1, align 4, !dbg !5632
  %28 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5633
  %regs18 = getelementptr inbounds %struct.net2280, %struct.net2280* %28, i32 0, i32 10, !dbg !5634
  %29 = load %struct.net2280_regs*, %struct.net2280_regs** %regs18, align 8, !dbg !5634
  %pciirqenb119 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %29, i32 0, i32 5, !dbg !5635
  %30 = bitcast i32* %pciirqenb119 to i8*, !dbg !5636
  call void @writel(i32 %27, i8* %30) #12, !dbg !5637
  br label %if.end20, !dbg !5638

if.end20:                                         ; preds = %if.then11, %if.end
  %31 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5639
  %lock21 = getelementptr inbounds %struct.net2280, %struct.net2280* %31, i32 0, i32 1, !dbg !5640
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5641, !srcloc !5643
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !5644
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !5644
  %rlock.i23 = bitcast %union.anon.4* %33 to %struct.raw_spinlock*, !dbg !5644
  store i32 1, i32* %retval, align 4, !dbg !5646
  br label %return, !dbg !5646

return:                                           ; preds = %if.end20, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !5647
  ret i32 %34, !dbg !5647
}

; Function Attrs: noredzone
declare dso_local %struct.dma_pool* @dma_pool_create(i8*, %struct.device*, i64, i64, i64) #1

; Function Attrs: noredzone
declare dso_local i8* @dma_pool_alloc(%struct.dma_pool*, i32, i64*) #1

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_try_set_mwi(%struct.pci_dev*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #5

; Function Attrs: noredzone
declare dso_local i32 @usb_add_gadget(%struct.usb_gadget*) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !5648 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !5652, metadata !DIExpression()), !dbg !5657
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !5659, metadata !DIExpression()), !dbg !5660
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5661, metadata !DIExpression()), !dbg !5662
  %0 = load i64, i64* %size.addr, align 8, !dbg !5663
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !5665
  br i1 %1, label %if.then, label %if.end447, !dbg !5666

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !5667
  %tobool = icmp ne i64 %2, 0, !dbg !5667
  br i1 %tobool, label %if.end, label %if.then1, !dbg !5670

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !5671
  br label %return, !dbg !5671

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !5672
  %cmp = icmp ult i64 %3, 4096, !dbg !5674
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5675

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5676
  br label %return, !dbg !5676

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub = sub i64 %4, 1, !dbg !5677
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !5677
  br i1 %5, label %cond.true, label %cond.false442, !dbg !5677

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub4 = sub i64 %6, 1, !dbg !5677
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !5677
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !5677

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub6 = sub i64 %8, 1, !dbg !5677
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !5677
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !5677

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !5677

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub9 = sub i64 %9, 1, !dbg !5677
  %and = and i64 %sub9, -9223372036854775808, !dbg !5677
  %tobool10 = icmp ne i64 %and, 0, !dbg !5677
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !5677

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !5677

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub13 = sub i64 %10, 1, !dbg !5677
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !5677
  %tobool15 = icmp ne i64 %and14, 0, !dbg !5677
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !5677

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !5677

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub18 = sub i64 %11, 1, !dbg !5677
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !5677
  %tobool20 = icmp ne i64 %and19, 0, !dbg !5677
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !5677

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !5677

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub23 = sub i64 %12, 1, !dbg !5677
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !5677
  %tobool25 = icmp ne i64 %and24, 0, !dbg !5677
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !5677

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !5677

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub28 = sub i64 %13, 1, !dbg !5677
  %and29 = and i64 %sub28, 576460752303423488, !dbg !5677
  %tobool30 = icmp ne i64 %and29, 0, !dbg !5677
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !5677

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !5677

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub33 = sub i64 %14, 1, !dbg !5677
  %and34 = and i64 %sub33, 288230376151711744, !dbg !5677
  %tobool35 = icmp ne i64 %and34, 0, !dbg !5677
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !5677

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !5677

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub38 = sub i64 %15, 1, !dbg !5677
  %and39 = and i64 %sub38, 144115188075855872, !dbg !5677
  %tobool40 = icmp ne i64 %and39, 0, !dbg !5677
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !5677

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !5677

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub43 = sub i64 %16, 1, !dbg !5677
  %and44 = and i64 %sub43, 72057594037927936, !dbg !5677
  %tobool45 = icmp ne i64 %and44, 0, !dbg !5677
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !5677

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !5677

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub48 = sub i64 %17, 1, !dbg !5677
  %and49 = and i64 %sub48, 36028797018963968, !dbg !5677
  %tobool50 = icmp ne i64 %and49, 0, !dbg !5677
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !5677

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !5677

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub53 = sub i64 %18, 1, !dbg !5677
  %and54 = and i64 %sub53, 18014398509481984, !dbg !5677
  %tobool55 = icmp ne i64 %and54, 0, !dbg !5677
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !5677

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !5677

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub58 = sub i64 %19, 1, !dbg !5677
  %and59 = and i64 %sub58, 9007199254740992, !dbg !5677
  %tobool60 = icmp ne i64 %and59, 0, !dbg !5677
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !5677

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !5677

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub63 = sub i64 %20, 1, !dbg !5677
  %and64 = and i64 %sub63, 4503599627370496, !dbg !5677
  %tobool65 = icmp ne i64 %and64, 0, !dbg !5677
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !5677

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !5677

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub68 = sub i64 %21, 1, !dbg !5677
  %and69 = and i64 %sub68, 2251799813685248, !dbg !5677
  %tobool70 = icmp ne i64 %and69, 0, !dbg !5677
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !5677

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !5677

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub73 = sub i64 %22, 1, !dbg !5677
  %and74 = and i64 %sub73, 1125899906842624, !dbg !5677
  %tobool75 = icmp ne i64 %and74, 0, !dbg !5677
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !5677

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !5677

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub78 = sub i64 %23, 1, !dbg !5677
  %and79 = and i64 %sub78, 562949953421312, !dbg !5677
  %tobool80 = icmp ne i64 %and79, 0, !dbg !5677
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !5677

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !5677

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub83 = sub i64 %24, 1, !dbg !5677
  %and84 = and i64 %sub83, 281474976710656, !dbg !5677
  %tobool85 = icmp ne i64 %and84, 0, !dbg !5677
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !5677

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !5677

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub88 = sub i64 %25, 1, !dbg !5677
  %and89 = and i64 %sub88, 140737488355328, !dbg !5677
  %tobool90 = icmp ne i64 %and89, 0, !dbg !5677
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !5677

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !5677

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub93 = sub i64 %26, 1, !dbg !5677
  %and94 = and i64 %sub93, 70368744177664, !dbg !5677
  %tobool95 = icmp ne i64 %and94, 0, !dbg !5677
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !5677

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !5677

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub98 = sub i64 %27, 1, !dbg !5677
  %and99 = and i64 %sub98, 35184372088832, !dbg !5677
  %tobool100 = icmp ne i64 %and99, 0, !dbg !5677
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !5677

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !5677

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub103 = sub i64 %28, 1, !dbg !5677
  %and104 = and i64 %sub103, 17592186044416, !dbg !5677
  %tobool105 = icmp ne i64 %and104, 0, !dbg !5677
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !5677

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !5677

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub108 = sub i64 %29, 1, !dbg !5677
  %and109 = and i64 %sub108, 8796093022208, !dbg !5677
  %tobool110 = icmp ne i64 %and109, 0, !dbg !5677
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !5677

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !5677

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub113 = sub i64 %30, 1, !dbg !5677
  %and114 = and i64 %sub113, 4398046511104, !dbg !5677
  %tobool115 = icmp ne i64 %and114, 0, !dbg !5677
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !5677

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !5677

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub118 = sub i64 %31, 1, !dbg !5677
  %and119 = and i64 %sub118, 2199023255552, !dbg !5677
  %tobool120 = icmp ne i64 %and119, 0, !dbg !5677
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !5677

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !5677

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub123 = sub i64 %32, 1, !dbg !5677
  %and124 = and i64 %sub123, 1099511627776, !dbg !5677
  %tobool125 = icmp ne i64 %and124, 0, !dbg !5677
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !5677

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !5677

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub128 = sub i64 %33, 1, !dbg !5677
  %and129 = and i64 %sub128, 549755813888, !dbg !5677
  %tobool130 = icmp ne i64 %and129, 0, !dbg !5677
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !5677

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !5677

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub133 = sub i64 %34, 1, !dbg !5677
  %and134 = and i64 %sub133, 274877906944, !dbg !5677
  %tobool135 = icmp ne i64 %and134, 0, !dbg !5677
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !5677

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !5677

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub138 = sub i64 %35, 1, !dbg !5677
  %and139 = and i64 %sub138, 137438953472, !dbg !5677
  %tobool140 = icmp ne i64 %and139, 0, !dbg !5677
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !5677

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !5677

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub143 = sub i64 %36, 1, !dbg !5677
  %and144 = and i64 %sub143, 68719476736, !dbg !5677
  %tobool145 = icmp ne i64 %and144, 0, !dbg !5677
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !5677

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !5677

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub148 = sub i64 %37, 1, !dbg !5677
  %and149 = and i64 %sub148, 34359738368, !dbg !5677
  %tobool150 = icmp ne i64 %and149, 0, !dbg !5677
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !5677

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !5677

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub153 = sub i64 %38, 1, !dbg !5677
  %and154 = and i64 %sub153, 17179869184, !dbg !5677
  %tobool155 = icmp ne i64 %and154, 0, !dbg !5677
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !5677

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !5677

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub158 = sub i64 %39, 1, !dbg !5677
  %and159 = and i64 %sub158, 8589934592, !dbg !5677
  %tobool160 = icmp ne i64 %and159, 0, !dbg !5677
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !5677

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !5677

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub163 = sub i64 %40, 1, !dbg !5677
  %and164 = and i64 %sub163, 4294967296, !dbg !5677
  %tobool165 = icmp ne i64 %and164, 0, !dbg !5677
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !5677

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !5677

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub168 = sub i64 %41, 1, !dbg !5677
  %and169 = and i64 %sub168, 2147483648, !dbg !5677
  %tobool170 = icmp ne i64 %and169, 0, !dbg !5677
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !5677

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !5677

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub173 = sub i64 %42, 1, !dbg !5677
  %and174 = and i64 %sub173, 1073741824, !dbg !5677
  %tobool175 = icmp ne i64 %and174, 0, !dbg !5677
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !5677

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !5677

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub178 = sub i64 %43, 1, !dbg !5677
  %and179 = and i64 %sub178, 536870912, !dbg !5677
  %tobool180 = icmp ne i64 %and179, 0, !dbg !5677
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !5677

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !5677

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub183 = sub i64 %44, 1, !dbg !5677
  %and184 = and i64 %sub183, 268435456, !dbg !5677
  %tobool185 = icmp ne i64 %and184, 0, !dbg !5677
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !5677

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !5677

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub188 = sub i64 %45, 1, !dbg !5677
  %and189 = and i64 %sub188, 134217728, !dbg !5677
  %tobool190 = icmp ne i64 %and189, 0, !dbg !5677
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !5677

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !5677

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub193 = sub i64 %46, 1, !dbg !5677
  %and194 = and i64 %sub193, 67108864, !dbg !5677
  %tobool195 = icmp ne i64 %and194, 0, !dbg !5677
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !5677

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !5677

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub198 = sub i64 %47, 1, !dbg !5677
  %and199 = and i64 %sub198, 33554432, !dbg !5677
  %tobool200 = icmp ne i64 %and199, 0, !dbg !5677
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !5677

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !5677

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub203 = sub i64 %48, 1, !dbg !5677
  %and204 = and i64 %sub203, 16777216, !dbg !5677
  %tobool205 = icmp ne i64 %and204, 0, !dbg !5677
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !5677

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !5677

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub208 = sub i64 %49, 1, !dbg !5677
  %and209 = and i64 %sub208, 8388608, !dbg !5677
  %tobool210 = icmp ne i64 %and209, 0, !dbg !5677
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !5677

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !5677

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub213 = sub i64 %50, 1, !dbg !5677
  %and214 = and i64 %sub213, 4194304, !dbg !5677
  %tobool215 = icmp ne i64 %and214, 0, !dbg !5677
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !5677

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !5677

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub218 = sub i64 %51, 1, !dbg !5677
  %and219 = and i64 %sub218, 2097152, !dbg !5677
  %tobool220 = icmp ne i64 %and219, 0, !dbg !5677
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !5677

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !5677

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub223 = sub i64 %52, 1, !dbg !5677
  %and224 = and i64 %sub223, 1048576, !dbg !5677
  %tobool225 = icmp ne i64 %and224, 0, !dbg !5677
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !5677

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !5677

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub228 = sub i64 %53, 1, !dbg !5677
  %and229 = and i64 %sub228, 524288, !dbg !5677
  %tobool230 = icmp ne i64 %and229, 0, !dbg !5677
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !5677

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !5677

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub233 = sub i64 %54, 1, !dbg !5677
  %and234 = and i64 %sub233, 262144, !dbg !5677
  %tobool235 = icmp ne i64 %and234, 0, !dbg !5677
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !5677

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !5677

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub238 = sub i64 %55, 1, !dbg !5677
  %and239 = and i64 %sub238, 131072, !dbg !5677
  %tobool240 = icmp ne i64 %and239, 0, !dbg !5677
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !5677

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !5677

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub243 = sub i64 %56, 1, !dbg !5677
  %and244 = and i64 %sub243, 65536, !dbg !5677
  %tobool245 = icmp ne i64 %and244, 0, !dbg !5677
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !5677

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !5677

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub248 = sub i64 %57, 1, !dbg !5677
  %and249 = and i64 %sub248, 32768, !dbg !5677
  %tobool250 = icmp ne i64 %and249, 0, !dbg !5677
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !5677

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !5677

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub253 = sub i64 %58, 1, !dbg !5677
  %and254 = and i64 %sub253, 16384, !dbg !5677
  %tobool255 = icmp ne i64 %and254, 0, !dbg !5677
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !5677

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !5677

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub258 = sub i64 %59, 1, !dbg !5677
  %and259 = and i64 %sub258, 8192, !dbg !5677
  %tobool260 = icmp ne i64 %and259, 0, !dbg !5677
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !5677

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !5677

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub263 = sub i64 %60, 1, !dbg !5677
  %and264 = and i64 %sub263, 4096, !dbg !5677
  %tobool265 = icmp ne i64 %and264, 0, !dbg !5677
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !5677

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !5677

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub268 = sub i64 %61, 1, !dbg !5677
  %and269 = and i64 %sub268, 2048, !dbg !5677
  %tobool270 = icmp ne i64 %and269, 0, !dbg !5677
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !5677

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !5677

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub273 = sub i64 %62, 1, !dbg !5677
  %and274 = and i64 %sub273, 1024, !dbg !5677
  %tobool275 = icmp ne i64 %and274, 0, !dbg !5677
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !5677

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !5677

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub278 = sub i64 %63, 1, !dbg !5677
  %and279 = and i64 %sub278, 512, !dbg !5677
  %tobool280 = icmp ne i64 %and279, 0, !dbg !5677
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !5677

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !5677

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub283 = sub i64 %64, 1, !dbg !5677
  %and284 = and i64 %sub283, 256, !dbg !5677
  %tobool285 = icmp ne i64 %and284, 0, !dbg !5677
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !5677

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !5677

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub288 = sub i64 %65, 1, !dbg !5677
  %and289 = and i64 %sub288, 128, !dbg !5677
  %tobool290 = icmp ne i64 %and289, 0, !dbg !5677
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !5677

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !5677

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub293 = sub i64 %66, 1, !dbg !5677
  %and294 = and i64 %sub293, 64, !dbg !5677
  %tobool295 = icmp ne i64 %and294, 0, !dbg !5677
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !5677

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !5677

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub298 = sub i64 %67, 1, !dbg !5677
  %and299 = and i64 %sub298, 32, !dbg !5677
  %tobool300 = icmp ne i64 %and299, 0, !dbg !5677
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !5677

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !5677

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub303 = sub i64 %68, 1, !dbg !5677
  %and304 = and i64 %sub303, 16, !dbg !5677
  %tobool305 = icmp ne i64 %and304, 0, !dbg !5677
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !5677

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !5677

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub308 = sub i64 %69, 1, !dbg !5677
  %and309 = and i64 %sub308, 8, !dbg !5677
  %tobool310 = icmp ne i64 %and309, 0, !dbg !5677
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !5677

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !5677

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub313 = sub i64 %70, 1, !dbg !5677
  %and314 = and i64 %sub313, 4, !dbg !5677
  %tobool315 = icmp ne i64 %and314, 0, !dbg !5677
  %71 = zext i1 %tobool315 to i64, !dbg !5677
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !5677
  br label %cond.end, !dbg !5677

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !5677
  br label %cond.end317, !dbg !5677

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !5677
  br label %cond.end319, !dbg !5677

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !5677
  br label %cond.end321, !dbg !5677

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !5677
  br label %cond.end323, !dbg !5677

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !5677
  br label %cond.end325, !dbg !5677

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !5677
  br label %cond.end327, !dbg !5677

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !5677
  br label %cond.end329, !dbg !5677

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !5677
  br label %cond.end331, !dbg !5677

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !5677
  br label %cond.end333, !dbg !5677

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !5677
  br label %cond.end335, !dbg !5677

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !5677
  br label %cond.end337, !dbg !5677

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !5677
  br label %cond.end339, !dbg !5677

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !5677
  br label %cond.end341, !dbg !5677

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !5677
  br label %cond.end343, !dbg !5677

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !5677
  br label %cond.end345, !dbg !5677

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !5677
  br label %cond.end347, !dbg !5677

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !5677
  br label %cond.end349, !dbg !5677

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !5677
  br label %cond.end351, !dbg !5677

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !5677
  br label %cond.end353, !dbg !5677

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !5677
  br label %cond.end355, !dbg !5677

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !5677
  br label %cond.end357, !dbg !5677

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !5677
  br label %cond.end359, !dbg !5677

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !5677
  br label %cond.end361, !dbg !5677

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !5677
  br label %cond.end363, !dbg !5677

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !5677
  br label %cond.end365, !dbg !5677

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !5677
  br label %cond.end367, !dbg !5677

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !5677
  br label %cond.end369, !dbg !5677

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !5677
  br label %cond.end371, !dbg !5677

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !5677
  br label %cond.end373, !dbg !5677

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !5677
  br label %cond.end375, !dbg !5677

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !5677
  br label %cond.end377, !dbg !5677

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !5677
  br label %cond.end379, !dbg !5677

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !5677
  br label %cond.end381, !dbg !5677

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !5677
  br label %cond.end383, !dbg !5677

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !5677
  br label %cond.end385, !dbg !5677

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !5677
  br label %cond.end387, !dbg !5677

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !5677
  br label %cond.end389, !dbg !5677

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !5677
  br label %cond.end391, !dbg !5677

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !5677
  br label %cond.end393, !dbg !5677

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !5677
  br label %cond.end395, !dbg !5677

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !5677
  br label %cond.end397, !dbg !5677

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !5677
  br label %cond.end399, !dbg !5677

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !5677
  br label %cond.end401, !dbg !5677

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !5677
  br label %cond.end403, !dbg !5677

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !5677
  br label %cond.end405, !dbg !5677

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !5677
  br label %cond.end407, !dbg !5677

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !5677
  br label %cond.end409, !dbg !5677

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !5677
  br label %cond.end411, !dbg !5677

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !5677
  br label %cond.end413, !dbg !5677

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !5677
  br label %cond.end415, !dbg !5677

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !5677
  br label %cond.end417, !dbg !5677

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !5677
  br label %cond.end419, !dbg !5677

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !5677
  br label %cond.end421, !dbg !5677

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !5677
  br label %cond.end423, !dbg !5677

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !5677
  br label %cond.end425, !dbg !5677

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !5677
  br label %cond.end427, !dbg !5677

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !5677
  br label %cond.end429, !dbg !5677

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !5677
  br label %cond.end431, !dbg !5677

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !5677
  br label %cond.end433, !dbg !5677

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !5677
  br label %cond.end435, !dbg !5677

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !5677
  br label %cond.end437, !dbg !5677

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !5677
  br label %cond.end440, !dbg !5677

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !5677

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !5677
  br label %cond.end444, !dbg !5677

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !5677
  %sub443 = sub i64 %72, 1, !dbg !5677
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !5677
  br label %cond.end444, !dbg !5677

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !5677
  %sub446 = sub i32 %cond445, 12, !dbg !5678
  %add = add i32 %sub446, 1, !dbg !5679
  store i32 %add, i32* %retval, align 4, !dbg !5680
  br label %return, !dbg !5680

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !5681
  %dec = add i64 %73, -1, !dbg !5681
  store i64 %dec, i64* %size.addr, align 8, !dbg !5681
  %74 = load i64, i64* %size.addr, align 8, !dbg !5682
  %shr = lshr i64 %74, 12, !dbg !5682
  store i64 %shr, i64* %size.addr, align 8, !dbg !5682
  %75 = load i64, i64* %size.addr, align 8, !dbg !5683
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !5660
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !5684
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !5685
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !5684, !srcloc !5686
  store i32 %78, i32* %bitpos.i, align 4, !dbg !5684
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !5687
  %add.i = add i32 %79, 1, !dbg !5688
  store i32 %add.i, i32* %retval, align 4, !dbg !5689
  br label %return, !dbg !5689

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !5690
  ret i32 %80, !dbg !5690
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !5691 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !5652, metadata !DIExpression()), !dbg !5695
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !5659, metadata !DIExpression()), !dbg !5697
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5698, metadata !DIExpression()), !dbg !5699
  %0 = load i64, i64* %n.addr, align 8, !dbg !5700
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !5697
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !5701
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !5702
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !5701, !srcloc !5686
  store i32 %3, i32* %bitpos.i, align 4, !dbg !5701
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !5703
  %add.i = add i32 %4, 1, !dbg !5704
  %sub = sub i32 %add.i, 1, !dbg !5705
  ret i32 %sub, !dbg !5706
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !5707 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !5711, metadata !DIExpression()), !dbg !5712
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !5713, metadata !DIExpression()), !dbg !5714
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5715, metadata !DIExpression()), !dbg !5716
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5717, metadata !DIExpression()), !dbg !5718
  %0 = load i8*, i8** %object.addr, align 8, !dbg !5719
  ret i8* %0, !dbg !5720
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !5721 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5724, metadata !DIExpression()), !dbg !5725
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5726, metadata !DIExpression()), !dbg !5727
  %0 = load i8*, i8** %data.addr, align 8, !dbg !5728
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5729
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !5730
  store i8* %0, i8** %driver_data, align 8, !dbg !5731
  ret void, !dbg !5732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_get_frame(%struct.usb_gadget* %_gadget) #2 !dbg !5733 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !5734, metadata !DIExpression()), !dbg !5738
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5740, metadata !DIExpression()), !dbg !5741
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4661, metadata !DIExpression()), !dbg !5742
  %retval = alloca i32, align 4
  %_gadget.addr = alloca %struct.usb_gadget*, align 8
  %dev = alloca %struct.net2280*, align 8
  %flags = alloca i64, align 8
  %retval1 = alloca i16, align 2
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.usb_gadget* %_gadget, %struct.usb_gadget** %_gadget.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget** %_gadget.addr, metadata !5749, metadata !DIExpression()), !dbg !5750
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev, metadata !5751, metadata !DIExpression()), !dbg !5752
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5753, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.declare(metadata i16* %retval1, metadata !5755, metadata !DIExpression()), !dbg !5756
  %0 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !5757
  %tobool = icmp ne %struct.usb_gadget* %0, null, !dbg !5757
  br i1 %tobool, label %if.end, label %if.then, !dbg !5759

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !5760
  br label %return, !dbg !5760

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5761, metadata !DIExpression()), !dbg !5763
  %1 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !5763
  %2 = bitcast %struct.usb_gadget* %1 to i8*, !dbg !5763
  store i8* %2, i8** %__mptr, align 8, !dbg !5763
  br label %do.body, !dbg !5763

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !5764

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5763
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !5763
  %4 = bitcast i8* %add.ptr to %struct.net2280*, !dbg !5763
  store %struct.net2280* %4, %struct.net2280** %tmp, align 8, !dbg !5764
  %5 = load %struct.net2280*, %struct.net2280** %tmp, align 8, !dbg !5763
  store %struct.net2280* %5, %struct.net2280** %dev, align 8, !dbg !5766
  br label %do.body2, !dbg !5767

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !5768

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5769, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5772, metadata !DIExpression()), !dbg !5771
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5771
  %conv = zext i1 %cmp to i32, !dbg !5771
  store i32 1, i32* %tmp4, align 4, !dbg !5771
  %6 = load i32, i32* %tmp4, align 4, !dbg !5771
  br label %do.body5, !dbg !5773

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !5774

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !5775

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !5777, metadata !DIExpression()), !dbg !5780
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !5781, metadata !DIExpression()), !dbg !5780
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !5780
  %conv11 = zext i1 %cmp10 to i32, !dbg !5780
  store i32 1, i32* %tmp12, align 4, !dbg !5780
  %7 = load i32, i32* %tmp12, align 4, !dbg !5780
  %call = call i64 @arch_local_irq_save() #12, !dbg !5782
  store i64 %call, i64* %flags, align 8, !dbg !5782
  br label %do.end13, !dbg !5782

do.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !5775

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !5774

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5783, !srcloc !5784
  br label %do.body16, !dbg !5783

do.body16:                                        ; preds = %do.body15
  %8 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5785
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %8, i32 0, i32 1, !dbg !5785
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5786
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !5787
  %rlock.i = bitcast %union.anon.4* %10 to %struct.raw_spinlock*, !dbg !5787
  br label %do.end18, !dbg !5785

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !5783

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !5774

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !5773

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !5768

do.end22:                                         ; preds = %do.end21
  %11 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5788
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 10, !dbg !5789
  %12 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !5789
  %call23 = call i32 @get_idx_reg(%struct.net2280_regs* %12, i32 2) #12, !dbg !5790
  %and = and i32 %call23, 1023, !dbg !5791
  %conv24 = trunc i32 %and to i16, !dbg !5790
  store i16 %conv24, i16* %retval1, align 2, !dbg !5792
  %13 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5793
  %lock25 = getelementptr inbounds %struct.net2280, %struct.net2280* %13, i32 0, i32 1, !dbg !5794
  %14 = load i64, i64* %flags, align 8, !dbg !5795
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !443, metadata !5796, metadata !DIExpression()) #10, !dbg !5799
  call void @llvm.dbg.declare(metadata !443, metadata !5800, metadata !DIExpression()) #10, !dbg !5799
  store i32 1, i32* %tmp.i, align 4, !dbg !5799
  %15 = load i32, i32* %tmp.i, align 4, !dbg !5799
  call void @llvm.dbg.declare(metadata !443, metadata !5801, metadata !DIExpression()) #10, !dbg !5806
  call void @llvm.dbg.declare(metadata !443, metadata !5807, metadata !DIExpression()) #10, !dbg !5806
  store i32 1, i32* %tmp8.i, align 4, !dbg !5806
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !5806
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !5808
  call void @arch_local_irq_restore(i64 %17) #15, !dbg !5808
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5809, !srcloc !5811
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !5812
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !5812
  %rlock.i28 = bitcast %union.anon.4* %19 to %struct.raw_spinlock*, !dbg !5812
  %20 = load i16, i16* %retval1, align 2, !dbg !5814
  %conv26 = zext i16 %20 to i32, !dbg !5814
  store i32 %conv26, i32* %retval, align 4, !dbg !5815
  br label %return, !dbg !5815

return:                                           ; preds = %do.end22, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !5816
  ret i32 %21, !dbg !5816
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_wakeup(%struct.usb_gadget* %_gadget) #2 !dbg !5817 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !5734, metadata !DIExpression()), !dbg !5818
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5740, metadata !DIExpression()), !dbg !5820
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4661, metadata !DIExpression()), !dbg !5821
  %retval = alloca i32, align 4
  %_gadget.addr = alloca %struct.usb_gadget*, align 8
  %dev = alloca %struct.net2280*, align 8
  %tmp = alloca i32, align 4
  %flags = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.net2280*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.usb_gadget* %_gadget, %struct.usb_gadget** %_gadget.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget** %_gadget.addr, metadata !5828, metadata !DIExpression()), !dbg !5829
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev, metadata !5830, metadata !DIExpression()), !dbg !5831
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !5832, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5834, metadata !DIExpression()), !dbg !5835
  %0 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !5836
  %tobool = icmp ne %struct.usb_gadget* %0, null, !dbg !5836
  br i1 %tobool, label %if.end, label %if.then, !dbg !5838

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5839
  br label %return, !dbg !5839

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5840, metadata !DIExpression()), !dbg !5842
  %1 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !5842
  %2 = bitcast %struct.usb_gadget* %1 to i8*, !dbg !5842
  store i8* %2, i8** %__mptr, align 8, !dbg !5842
  br label %do.body, !dbg !5842

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !5843

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5842
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !5842
  %4 = bitcast i8* %add.ptr to %struct.net2280*, !dbg !5842
  store %struct.net2280* %4, %struct.net2280** %tmp1, align 8, !dbg !5843
  %5 = load %struct.net2280*, %struct.net2280** %tmp1, align 8, !dbg !5842
  store %struct.net2280* %5, %struct.net2280** %dev, align 8, !dbg !5845
  br label %do.body2, !dbg !5846

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !5847

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5848, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5851, metadata !DIExpression()), !dbg !5850
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5850
  %conv = zext i1 %cmp to i32, !dbg !5850
  store i32 1, i32* %tmp4, align 4, !dbg !5850
  %6 = load i32, i32* %tmp4, align 4, !dbg !5850
  br label %do.body5, !dbg !5852

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !5853

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !5854

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !5856, metadata !DIExpression()), !dbg !5859
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !5860, metadata !DIExpression()), !dbg !5859
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !5859
  %conv11 = zext i1 %cmp10 to i32, !dbg !5859
  store i32 1, i32* %tmp12, align 4, !dbg !5859
  %7 = load i32, i32* %tmp12, align 4, !dbg !5859
  %call = call i64 @arch_local_irq_save() #12, !dbg !5861
  store i64 %call, i64* %flags, align 8, !dbg !5861
  br label %do.end13, !dbg !5861

do.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !5854

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !5853

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5862, !srcloc !5863
  br label %do.body16, !dbg !5862

do.body16:                                        ; preds = %do.body15
  %8 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5864
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %8, i32 0, i32 1, !dbg !5864
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5865
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !5866
  %rlock.i = bitcast %union.anon.4* %10 to %struct.raw_spinlock*, !dbg !5866
  br label %do.end18, !dbg !5864

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !5862

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !5853

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !5852

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !5847

do.end22:                                         ; preds = %do.end21
  %11 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5867
  %usb = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 11, !dbg !5868
  %12 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb, align 8, !dbg !5868
  %usbctl = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %12, i32 0, i32 3, !dbg !5869
  %13 = bitcast i32* %usbctl to i8*, !dbg !5870
  %call23 = call i32 @readl(i8* %13) #12, !dbg !5871
  store i32 %call23, i32* %tmp, align 4, !dbg !5872
  %14 = load i32, i32* %tmp, align 4, !dbg !5873
  %conv24 = zext i32 %14 to i64, !dbg !5873
  %and = and i64 %conv24, 2, !dbg !5875
  %tobool25 = icmp ne i64 %and, 0, !dbg !5875
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !5876

if.then26:                                        ; preds = %do.end22
  %15 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5877
  %usb27 = getelementptr inbounds %struct.net2280, %struct.net2280* %15, i32 0, i32 11, !dbg !5878
  %16 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb27, align 8, !dbg !5878
  %usbstat = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %16, i32 0, i32 4, !dbg !5879
  %17 = bitcast i32* %usbstat to i8*, !dbg !5880
  call void @writel(i32 32, i8* %17) #12, !dbg !5881
  br label %if.end28, !dbg !5881

if.end28:                                         ; preds = %if.then26, %do.end22
  %18 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5882
  %lock29 = getelementptr inbounds %struct.net2280, %struct.net2280* %18, i32 0, i32 1, !dbg !5883
  %19 = load i64, i64* %flags, align 8, !dbg !5884
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !443, metadata !5796, metadata !DIExpression()) #10, !dbg !5885
  call void @llvm.dbg.declare(metadata !443, metadata !5800, metadata !DIExpression()) #10, !dbg !5885
  store i32 1, i32* %tmp.i, align 4, !dbg !5885
  %20 = load i32, i32* %tmp.i, align 4, !dbg !5885
  call void @llvm.dbg.declare(metadata !443, metadata !5801, metadata !DIExpression()) #10, !dbg !5886
  call void @llvm.dbg.declare(metadata !443, metadata !5807, metadata !DIExpression()) #10, !dbg !5886
  store i32 1, i32* %tmp8.i, align 4, !dbg !5886
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !5886
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !5887
  call void @arch_local_irq_restore(i64 %22) #15, !dbg !5887
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5888, !srcloc !5811
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !5889
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !5889
  %rlock.i31 = bitcast %union.anon.4* %24 to %struct.raw_spinlock*, !dbg !5889
  store i32 0, i32* %retval, align 4, !dbg !5890
  br label %return, !dbg !5890

return:                                           ; preds = %if.end28, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !5891
  ret i32 %25, !dbg !5891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_set_selfpowered(%struct.usb_gadget* %_gadget, i32 %value) #2 !dbg !5892 {
entry:
  %lock.addr.i37 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i37, metadata !5734, metadata !DIExpression()), !dbg !5893
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5740, metadata !DIExpression()), !dbg !5895
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4661, metadata !DIExpression()), !dbg !5896
  %retval = alloca i32, align 4
  %_gadget.addr = alloca %struct.usb_gadget*, align 8
  %value.addr = alloca i32, align 4
  %dev = alloca %struct.net2280*, align 8
  %tmp = alloca i32, align 4
  %flags = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.net2280*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.usb_gadget* %_gadget, %struct.usb_gadget** %_gadget.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget** %_gadget.addr, metadata !5903, metadata !DIExpression()), !dbg !5904
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5905, metadata !DIExpression()), !dbg !5906
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev, metadata !5907, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !5909, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5911, metadata !DIExpression()), !dbg !5912
  %0 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !5913
  %tobool = icmp ne %struct.usb_gadget* %0, null, !dbg !5913
  br i1 %tobool, label %if.end, label %if.then, !dbg !5915

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5916
  br label %return, !dbg !5916

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5917, metadata !DIExpression()), !dbg !5919
  %1 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !5919
  %2 = bitcast %struct.usb_gadget* %1 to i8*, !dbg !5919
  store i8* %2, i8** %__mptr, align 8, !dbg !5919
  br label %do.body, !dbg !5919

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !5920

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5919
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !5919
  %4 = bitcast i8* %add.ptr to %struct.net2280*, !dbg !5919
  store %struct.net2280* %4, %struct.net2280** %tmp1, align 8, !dbg !5920
  %5 = load %struct.net2280*, %struct.net2280** %tmp1, align 8, !dbg !5919
  store %struct.net2280* %5, %struct.net2280** %dev, align 8, !dbg !5922
  br label %do.body2, !dbg !5923

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !5924

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5925, metadata !DIExpression()), !dbg !5927
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5928, metadata !DIExpression()), !dbg !5927
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5927
  %conv = zext i1 %cmp to i32, !dbg !5927
  store i32 1, i32* %tmp4, align 4, !dbg !5927
  %6 = load i32, i32* %tmp4, align 4, !dbg !5927
  br label %do.body5, !dbg !5929

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !5930

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !5931

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !5933, metadata !DIExpression()), !dbg !5936
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !5937, metadata !DIExpression()), !dbg !5936
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !5936
  %conv11 = zext i1 %cmp10 to i32, !dbg !5936
  store i32 1, i32* %tmp12, align 4, !dbg !5936
  %7 = load i32, i32* %tmp12, align 4, !dbg !5936
  %call = call i64 @arch_local_irq_save() #12, !dbg !5938
  store i64 %call, i64* %flags, align 8, !dbg !5938
  br label %do.end13, !dbg !5938

do.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !5931

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !5930

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5939, !srcloc !5940
  br label %do.body16, !dbg !5939

do.body16:                                        ; preds = %do.body15
  %8 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5941
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %8, i32 0, i32 1, !dbg !5941
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5942
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !5943
  %rlock.i = bitcast %union.anon.4* %10 to %struct.raw_spinlock*, !dbg !5943
  br label %do.end18, !dbg !5941

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !5939

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !5930

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !5929

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !5924

do.end22:                                         ; preds = %do.end21
  %11 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5944
  %usb = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 11, !dbg !5945
  %12 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb, align 8, !dbg !5945
  %usbctl = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %12, i32 0, i32 3, !dbg !5946
  %13 = bitcast i32* %usbctl to i8*, !dbg !5947
  %call23 = call i32 @readl(i8* %13) #12, !dbg !5948
  store i32 %call23, i32* %tmp, align 4, !dbg !5949
  %14 = load i32, i32* %value.addr, align 4, !dbg !5950
  %tobool24 = icmp ne i32 %14, 0, !dbg !5950
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !5952

if.then25:                                        ; preds = %do.end22
  %15 = load i32, i32* %tmp, align 4, !dbg !5953
  %conv26 = zext i32 %15 to i64, !dbg !5953
  %or = or i64 %conv26, 1, !dbg !5953
  %conv27 = trunc i64 %or to i32, !dbg !5953
  store i32 %conv27, i32* %tmp, align 4, !dbg !5953
  %16 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !5955
  %is_selfpowered = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %16, i32 0, i32 15, !dbg !5956
  %17 = bitcast i24* %is_selfpowered to i32*, !dbg !5956
  %bf.load = load i32, i32* %17, align 8, !dbg !5957
  %bf.clear = and i32 %bf.load, -8193, !dbg !5957
  %bf.set = or i32 %bf.clear, 8192, !dbg !5957
  store i32 %bf.set, i32* %17, align 8, !dbg !5957
  br label %if.end33, !dbg !5958

if.else:                                          ; preds = %do.end22
  %18 = load i32, i32* %tmp, align 4, !dbg !5959
  %conv28 = zext i32 %18 to i64, !dbg !5959
  %and = and i64 %conv28, -2, !dbg !5959
  %conv29 = trunc i64 %and to i32, !dbg !5959
  store i32 %conv29, i32* %tmp, align 4, !dbg !5959
  %19 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !5961
  %is_selfpowered30 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %19, i32 0, i32 15, !dbg !5962
  %20 = bitcast i24* %is_selfpowered30 to i32*, !dbg !5962
  %bf.load31 = load i32, i32* %20, align 8, !dbg !5963
  %bf.clear32 = and i32 %bf.load31, -8193, !dbg !5963
  store i32 %bf.clear32, i32* %20, align 8, !dbg !5963
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then25
  %21 = load i32, i32* %tmp, align 4, !dbg !5964
  %22 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5965
  %usb34 = getelementptr inbounds %struct.net2280, %struct.net2280* %22, i32 0, i32 11, !dbg !5966
  %23 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb34, align 8, !dbg !5966
  %usbctl35 = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %23, i32 0, i32 3, !dbg !5967
  %24 = bitcast i32* %usbctl35 to i8*, !dbg !5968
  call void @writel(i32 %21, i8* %24) #12, !dbg !5969
  %25 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !5970
  %lock36 = getelementptr inbounds %struct.net2280, %struct.net2280* %25, i32 0, i32 1, !dbg !5971
  %26 = load i64, i64* %flags, align 8, !dbg !5972
  store %struct.spinlock* %lock36, %struct.spinlock** %lock.addr.i37, align 8
  store i64 %26, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !443, metadata !5796, metadata !DIExpression()) #10, !dbg !5973
  call void @llvm.dbg.declare(metadata !443, metadata !5800, metadata !DIExpression()) #10, !dbg !5973
  store i32 1, i32* %tmp.i, align 4, !dbg !5973
  %27 = load i32, i32* %tmp.i, align 4, !dbg !5973
  call void @llvm.dbg.declare(metadata !443, metadata !5801, metadata !DIExpression()) #10, !dbg !5974
  call void @llvm.dbg.declare(metadata !443, metadata !5807, metadata !DIExpression()) #10, !dbg !5974
  store i32 1, i32* %tmp8.i, align 4, !dbg !5974
  %28 = load i32, i32* %tmp8.i, align 4, !dbg !5974
  %29 = load i64, i64* %flags.addr.i, align 8, !dbg !5975
  call void @arch_local_irq_restore(i64 %29) #15, !dbg !5975
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5976, !srcloc !5811
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i37, align 8, !dbg !5977
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !5977
  %rlock.i38 = bitcast %union.anon.4* %31 to %struct.raw_spinlock*, !dbg !5977
  store i32 0, i32* %retval, align 4, !dbg !5978
  br label %return, !dbg !5978

return:                                           ; preds = %if.end33, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !5979
  ret i32 %32, !dbg !5979
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_pullup(%struct.usb_gadget* %_gadget, i32 %is_on) #2 !dbg !5980 {
entry:
  %lock.addr.i38 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i38, metadata !5734, metadata !DIExpression()), !dbg !5981
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5740, metadata !DIExpression()), !dbg !5983
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4661, metadata !DIExpression()), !dbg !5984
  %retval = alloca i32, align 4
  %_gadget.addr = alloca %struct.usb_gadget*, align 8
  %is_on.addr = alloca i32, align 4
  %dev = alloca %struct.net2280*, align 8
  %tmp = alloca i32, align 4
  %flags = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.net2280*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.usb_gadget* %_gadget, %struct.usb_gadget** %_gadget.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget** %_gadget.addr, metadata !5991, metadata !DIExpression()), !dbg !5992
  store i32 %is_on, i32* %is_on.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_on.addr, metadata !5993, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev, metadata !5995, metadata !DIExpression()), !dbg !5996
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !5997, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5999, metadata !DIExpression()), !dbg !6000
  %0 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6001
  %tobool = icmp ne %struct.usb_gadget* %0, null, !dbg !6001
  br i1 %tobool, label %if.end, label %if.then, !dbg !6003

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !6004
  br label %return, !dbg !6004

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6005, metadata !DIExpression()), !dbg !6007
  %1 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6007
  %2 = bitcast %struct.usb_gadget* %1 to i8*, !dbg !6007
  store i8* %2, i8** %__mptr, align 8, !dbg !6007
  br label %do.body, !dbg !6007

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !6008

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !6007
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !6007
  %4 = bitcast i8* %add.ptr to %struct.net2280*, !dbg !6007
  store %struct.net2280* %4, %struct.net2280** %tmp1, align 8, !dbg !6008
  %5 = load %struct.net2280*, %struct.net2280** %tmp1, align 8, !dbg !6007
  store %struct.net2280* %5, %struct.net2280** %dev, align 8, !dbg !6010
  br label %do.body2, !dbg !6011

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !6012

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6013, metadata !DIExpression()), !dbg !6015
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6016, metadata !DIExpression()), !dbg !6015
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6015
  %conv = zext i1 %cmp to i32, !dbg !6015
  store i32 1, i32* %tmp4, align 4, !dbg !6015
  %6 = load i32, i32* %tmp4, align 4, !dbg !6015
  br label %do.body5, !dbg !6017

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !6018

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !6019

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !6021, metadata !DIExpression()), !dbg !6024
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !6025, metadata !DIExpression()), !dbg !6024
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !6024
  %conv11 = zext i1 %cmp10 to i32, !dbg !6024
  store i32 1, i32* %tmp12, align 4, !dbg !6024
  %7 = load i32, i32* %tmp12, align 4, !dbg !6024
  %call = call i64 @arch_local_irq_save() #12, !dbg !6026
  store i64 %call, i64* %flags, align 8, !dbg !6026
  br label %do.end13, !dbg !6026

do.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !6019

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !6018

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6027, !srcloc !6028
  br label %do.body16, !dbg !6027

do.body16:                                        ; preds = %do.body15
  %8 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6029
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %8, i32 0, i32 1, !dbg !6029
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6030
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !6031
  %rlock.i = bitcast %union.anon.4* %10 to %struct.raw_spinlock*, !dbg !6031
  br label %do.end18, !dbg !6029

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !6027

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6018

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !6017

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !6012

do.end22:                                         ; preds = %do.end21
  %11 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6032
  %usb = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 11, !dbg !6033
  %12 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb, align 8, !dbg !6033
  %usbctl = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %12, i32 0, i32 3, !dbg !6034
  %13 = bitcast i32* %usbctl to i8*, !dbg !6035
  %call23 = call i32 @readl(i8* %13) #12, !dbg !6036
  store i32 %call23, i32* %tmp, align 4, !dbg !6037
  %14 = load i32, i32* %is_on.addr, align 4, !dbg !6038
  %cmp24 = icmp ne i32 %14, 0, !dbg !6039
  %conv25 = zext i1 %cmp24 to i32, !dbg !6039
  %15 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6040
  %softconnect = getelementptr inbounds %struct.net2280, %struct.net2280* %15, i32 0, i32 4, !dbg !6041
  %16 = trunc i32 %conv25 to i16, !dbg !6042
  %bf.load = load i16, i16* %softconnect, align 8, !dbg !6042
  %bf.value = and i16 %16, 1, !dbg !6042
  %bf.shl = shl i16 %bf.value, 2, !dbg !6042
  %bf.clear = and i16 %bf.load, -5, !dbg !6042
  %bf.set = or i16 %bf.clear, %bf.shl, !dbg !6042
  store i16 %bf.set, i16* %softconnect, align 8, !dbg !6042
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !6042
  %17 = load i32, i32* %is_on.addr, align 4, !dbg !6043
  %tobool26 = icmp ne i32 %17, 0, !dbg !6043
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !6045

if.then27:                                        ; preds = %do.end22
  %18 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6046
  call void @ep0_start(%struct.net2280* %18) #12, !dbg !6048
  %19 = load i32, i32* %tmp, align 4, !dbg !6049
  %conv28 = zext i32 %19 to i64, !dbg !6049
  %or = or i64 %conv28, 8, !dbg !6050
  %conv29 = trunc i64 %or to i32, !dbg !6049
  %20 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6051
  %usb30 = getelementptr inbounds %struct.net2280, %struct.net2280* %20, i32 0, i32 11, !dbg !6052
  %21 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb30, align 8, !dbg !6052
  %usbctl31 = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %21, i32 0, i32 3, !dbg !6053
  %22 = bitcast i32* %usbctl31 to i8*, !dbg !6054
  call void @writel(i32 %conv29, i8* %22) #12, !dbg !6055
  br label %if.end36, !dbg !6056

if.else:                                          ; preds = %do.end22
  %23 = load i32, i32* %tmp, align 4, !dbg !6057
  %conv32 = zext i32 %23 to i64, !dbg !6057
  %and = and i64 %conv32, -9, !dbg !6059
  %conv33 = trunc i64 %and to i32, !dbg !6057
  %24 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6060
  %usb34 = getelementptr inbounds %struct.net2280, %struct.net2280* %24, i32 0, i32 11, !dbg !6061
  %25 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb34, align 8, !dbg !6061
  %usbctl35 = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %25, i32 0, i32 3, !dbg !6062
  %26 = bitcast i32* %usbctl35 to i8*, !dbg !6063
  call void @writel(i32 %conv33, i8* %26) #12, !dbg !6064
  %27 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6065
  call void @stop_activity(%struct.net2280* %27, %struct.usb_gadget_driver* null) #12, !dbg !6066
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then27
  %28 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6067
  %lock37 = getelementptr inbounds %struct.net2280, %struct.net2280* %28, i32 0, i32 1, !dbg !6068
  %29 = load i64, i64* %flags, align 8, !dbg !6069
  store %struct.spinlock* %lock37, %struct.spinlock** %lock.addr.i38, align 8
  store i64 %29, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !443, metadata !5796, metadata !DIExpression()) #10, !dbg !6070
  call void @llvm.dbg.declare(metadata !443, metadata !5800, metadata !DIExpression()) #10, !dbg !6070
  store i32 1, i32* %tmp.i, align 4, !dbg !6070
  %30 = load i32, i32* %tmp.i, align 4, !dbg !6070
  call void @llvm.dbg.declare(metadata !443, metadata !5801, metadata !DIExpression()) #10, !dbg !6071
  call void @llvm.dbg.declare(metadata !443, metadata !5807, metadata !DIExpression()) #10, !dbg !6071
  store i32 1, i32* %tmp8.i, align 4, !dbg !6071
  %31 = load i32, i32* %tmp8.i, align 4, !dbg !6071
  %32 = load i64, i64* %flags.addr.i, align 8, !dbg !6072
  call void @arch_local_irq_restore(i64 %32) #15, !dbg !6072
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6073, !srcloc !5811
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i38, align 8, !dbg !6074
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !6074
  %rlock.i39 = bitcast %union.anon.4* %34 to %struct.raw_spinlock*, !dbg !6074
  store i32 0, i32* %retval, align 4, !dbg !6075
  br label %return, !dbg !6075

return:                                           ; preds = %if.end36, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !6076
  ret i32 %35, !dbg !6076
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_start(%struct.usb_gadget* %_gadget, %struct.usb_gadget_driver* %driver) #2 !dbg !6077 {
entry:
  %retval = alloca i32, align 4
  %_gadget.addr = alloca %struct.usb_gadget*, align 8
  %driver.addr = alloca %struct.usb_gadget_driver*, align 8
  %dev = alloca %struct.net2280*, align 8
  %retval1 = alloca i32, align 4
  %i = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280*, align 8
  store %struct.usb_gadget* %_gadget, %struct.usb_gadget** %_gadget.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget** %_gadget.addr, metadata !6078, metadata !DIExpression()), !dbg !6079
  store %struct.usb_gadget_driver* %driver, %struct.usb_gadget_driver** %driver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget_driver** %driver.addr, metadata !6080, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev, metadata !6082, metadata !DIExpression()), !dbg !6083
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6084, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6086, metadata !DIExpression()), !dbg !6087
  %0 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver.addr, align 8, !dbg !6088
  %tobool = icmp ne %struct.usb_gadget_driver* %0, null, !dbg !6088
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6090

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver.addr, align 8, !dbg !6091
  %max_speed = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %1, i32 0, i32 1, !dbg !6092
  %2 = load i32, i32* %max_speed, align 8, !dbg !6092
  %cmp = icmp ult i32 %2, 3, !dbg !6093
  br i1 %cmp, label %if.then, label %lor.lhs.false2, !dbg !6094

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver.addr, align 8, !dbg !6095
  %setup = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %3, i32 0, i32 4, !dbg !6096
  %4 = load i32 (%struct.usb_gadget*, %struct.usb_ctrlrequest*)*, i32 (%struct.usb_gadget*, %struct.usb_ctrlrequest*)** %setup, align 8, !dbg !6096
  %tobool3 = icmp ne i32 (%struct.usb_gadget*, %struct.usb_ctrlrequest*)* %4, null, !dbg !6095
  br i1 %tobool3, label %if.end, label %if.then, !dbg !6097

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !6098
  br label %return, !dbg !6098

if.end:                                           ; preds = %lor.lhs.false2
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6099, metadata !DIExpression()), !dbg !6101
  %5 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6101
  %6 = bitcast %struct.usb_gadget* %5 to i8*, !dbg !6101
  store i8* %6, i8** %__mptr, align 8, !dbg !6101
  br label %do.body, !dbg !6101

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !6102

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !6101
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !6101
  %8 = bitcast i8* %add.ptr to %struct.net2280*, !dbg !6101
  store %struct.net2280* %8, %struct.net2280** %tmp, align 8, !dbg !6102
  %9 = load %struct.net2280*, %struct.net2280** %tmp, align 8, !dbg !6101
  store %struct.net2280* %9, %struct.net2280** %dev, align 8, !dbg !6104
  store i32 0, i32* %i, align 4, !dbg !6105
  br label %for.cond, !dbg !6107

for.cond:                                         ; preds = %for.inc, %do.end
  %10 = load i32, i32* %i, align 4, !dbg !6108
  %11 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6110
  %n_ep = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 7, !dbg !6111
  %12 = load i32, i32* %n_ep, align 8, !dbg !6111
  %cmp4 = icmp ult i32 %10, %12, !dbg !6112
  br i1 %cmp4, label %for.body, label %for.end, !dbg !6113

for.body:                                         ; preds = %for.cond
  %13 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6114
  %ep = getelementptr inbounds %struct.net2280, %struct.net2280* %13, i32 0, i32 2, !dbg !6115
  %14 = load i32, i32* %i, align 4, !dbg !6116
  %idxprom = zext i32 %14 to i64, !dbg !6114
  %arrayidx = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep, i64 0, i64 %idxprom, !dbg !6114
  %irqs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx, i32 0, i32 7, !dbg !6117
  store i64 0, i64* %irqs, align 8, !dbg !6118
  br label %for.inc, !dbg !6114

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !6119
  %inc = add i32 %15, 1, !dbg !6119
  store i32 %inc, i32* %i, align 4, !dbg !6119
  br label %for.cond, !dbg !6120, !llvm.loop !6121

for.end:                                          ; preds = %for.cond
  %16 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver.addr, align 8, !dbg !6123
  %driver5 = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %16, i32 0, i32 9, !dbg !6124
  %bus = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver5, i32 0, i32 1, !dbg !6125
  store %struct.bus_type* null, %struct.bus_type** %bus, align 8, !dbg !6126
  %17 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver.addr, align 8, !dbg !6127
  %18 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6128
  %driver6 = getelementptr inbounds %struct.net2280, %struct.net2280* %18, i32 0, i32 3, !dbg !6129
  store %struct.usb_gadget_driver* %17, %struct.usb_gadget_driver** %driver6, align 8, !dbg !6130
  store i32 0, i32* %retval1, align 4, !dbg !6131
  %19 = load i32, i32* %retval1, align 4, !dbg !6132
  %tobool7 = icmp ne i32 %19, 0, !dbg !6132
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !6134

if.then8:                                         ; preds = %for.end
  br label %err_unbind, !dbg !6135

if.end9:                                          ; preds = %for.end
  store i32 0, i32* %retval1, align 4, !dbg !6136
  %20 = load i32, i32* %retval1, align 4, !dbg !6137
  %tobool10 = icmp ne i32 %20, 0, !dbg !6137
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !6139

if.then11:                                        ; preds = %if.end9
  br label %err_func, !dbg !6140

if.end12:                                         ; preds = %if.end9
  %21 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6141
  call void @net2280_led_active(%struct.net2280* %21, i32 1) #12, !dbg !6142
  %22 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6143
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %22, i32 0, i32 8, !dbg !6145
  %23 = load i64, i64* %quirks, align 8, !dbg !6145
  %and = and i64 %23, 8, !dbg !6146
  %tobool13 = icmp ne i64 %and, 0, !dbg !6146
  br i1 %tobool13, label %land.lhs.true, label %if.end16, !dbg !6147

land.lhs.true:                                    ; preds = %if.end12
  %24 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6148
  %bug7734_patched = getelementptr inbounds %struct.net2280, %struct.net2280* %24, i32 0, i32 4, !dbg !6149
  %bf.load = load i16, i16* %bug7734_patched, align 8, !dbg !6149
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !6149
  %bf.clear = and i16 %bf.lshr, 1, !dbg !6149
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6149
  %tobool14 = icmp ne i32 %bf.cast, 0, !dbg !6148
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !6150

if.then15:                                        ; preds = %land.lhs.true
  %25 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6151
  call void @defect7374_enable_data_eps_zero(%struct.net2280* %25) #12, !dbg !6152
  br label %if.end16, !dbg !6152

if.end16:                                         ; preds = %if.then15, %land.lhs.true, %if.end12
  %26 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6153
  call void @ep0_start(%struct.net2280* %26) #12, !dbg !6154
  store i32 0, i32* %retval, align 4, !dbg !6155
  br label %return, !dbg !6155

err_func:                                         ; preds = %if.then11
  call void @llvm.dbg.label(metadata !6156), !dbg !6157
  br label %do.body17, !dbg !6158

do.body17:                                        ; preds = %err_func
  br label %do.end18, !dbg !6159

do.end18:                                         ; preds = %do.body17
  br label %err_unbind, !dbg !6159

err_unbind:                                       ; preds = %do.end18, %if.then8
  call void @llvm.dbg.label(metadata !6161), !dbg !6162
  %27 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6163
  %driver19 = getelementptr inbounds %struct.net2280, %struct.net2280* %27, i32 0, i32 3, !dbg !6164
  store %struct.usb_gadget_driver* null, %struct.usb_gadget_driver** %driver19, align 8, !dbg !6165
  %28 = load i32, i32* %retval1, align 4, !dbg !6166
  store i32 %28, i32* %retval, align 4, !dbg !6167
  br label %return, !dbg !6167

return:                                           ; preds = %err_unbind, %if.end16, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !6168
  ret i32 %29, !dbg !6168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_stop(%struct.usb_gadget* %_gadget) #2 !dbg !6169 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !5734, metadata !DIExpression()), !dbg !6170
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5740, metadata !DIExpression()), !dbg !6172
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4661, metadata !DIExpression()), !dbg !6173
  %_gadget.addr = alloca %struct.usb_gadget*, align 8
  %dev = alloca %struct.net2280*, align 8
  %flags = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.usb_gadget* %_gadget, %struct.usb_gadget** %_gadget.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget** %_gadget.addr, metadata !6180, metadata !DIExpression()), !dbg !6181
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev, metadata !6182, metadata !DIExpression()), !dbg !6183
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6184, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6186, metadata !DIExpression()), !dbg !6188
  %0 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6188
  %1 = bitcast %struct.usb_gadget* %0 to i8*, !dbg !6188
  store i8* %1, i8** %__mptr, align 8, !dbg !6188
  br label %do.body, !dbg !6188

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6189

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6188
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6188
  %3 = bitcast i8* %add.ptr to %struct.net2280*, !dbg !6188
  store %struct.net2280* %3, %struct.net2280** %tmp, align 8, !dbg !6189
  %4 = load %struct.net2280*, %struct.net2280** %tmp, align 8, !dbg !6188
  store %struct.net2280* %4, %struct.net2280** %dev, align 8, !dbg !6191
  br label %do.body1, !dbg !6192

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !6193

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6194, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6197, metadata !DIExpression()), !dbg !6196
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6196
  %conv = zext i1 %cmp to i32, !dbg !6196
  store i32 1, i32* %tmp3, align 4, !dbg !6196
  %5 = load i32, i32* %tmp3, align 4, !dbg !6196
  br label %do.body4, !dbg !6198

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !6199

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !6200

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !6202, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !6206, metadata !DIExpression()), !dbg !6205
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !6205
  %conv10 = zext i1 %cmp9 to i32, !dbg !6205
  store i32 1, i32* %tmp11, align 4, !dbg !6205
  %6 = load i32, i32* %tmp11, align 4, !dbg !6205
  %call = call i64 @arch_local_irq_save() #12, !dbg !6207
  store i64 %call, i64* %flags, align 8, !dbg !6207
  br label %do.end12, !dbg !6207

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !6200

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !6199

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6208, !srcloc !6209
  br label %do.body15, !dbg !6208

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6210
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %7, i32 0, i32 1, !dbg !6210
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6211
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !6212
  %rlock.i = bitcast %union.anon.4* %9 to %struct.raw_spinlock*, !dbg !6212
  br label %do.end17, !dbg !6210

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !6208

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6199

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6198

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !6193

do.end21:                                         ; preds = %do.end20
  %10 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6213
  call void @stop_activity(%struct.net2280* %10, %struct.usb_gadget_driver* null) #12, !dbg !6214
  %11 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6215
  %lock22 = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 1, !dbg !6216
  %12 = load i64, i64* %flags, align 8, !dbg !6217
  store %struct.spinlock* %lock22, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !443, metadata !5796, metadata !DIExpression()) #10, !dbg !6218
  call void @llvm.dbg.declare(metadata !443, metadata !5800, metadata !DIExpression()) #10, !dbg !6218
  store i32 1, i32* %tmp.i, align 4, !dbg !6218
  %13 = load i32, i32* %tmp.i, align 4, !dbg !6218
  call void @llvm.dbg.declare(metadata !443, metadata !5801, metadata !DIExpression()) #10, !dbg !6219
  call void @llvm.dbg.declare(metadata !443, metadata !5807, metadata !DIExpression()) #10, !dbg !6219
  store i32 1, i32* %tmp8.i, align 4, !dbg !6219
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !6219
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !6220
  call void @arch_local_irq_restore(i64 %15) #15, !dbg !6220
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6221, !srcloc !5811
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !6222
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !6222
  %rlock.i28 = bitcast %union.anon.4* %17 to %struct.raw_spinlock*, !dbg !6222
  %18 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6223
  call void @net2280_led_active(%struct.net2280* %18, i32 0) #12, !dbg !6224
  br label %do.body23, !dbg !6225

do.body23:                                        ; preds = %do.end21
  br label %do.end24, !dbg !6226

do.end24:                                         ; preds = %do.body23
  br label %do.body25, !dbg !6228

do.body25:                                        ; preds = %do.end24
  br label %do.end26, !dbg !6229

do.end26:                                         ; preds = %do.body25
  %19 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6231
  %driver = getelementptr inbounds %struct.net2280, %struct.net2280* %19, i32 0, i32 3, !dbg !6232
  store %struct.usb_gadget_driver* null, %struct.usb_gadget_driver** %driver, align 8, !dbg !6233
  ret i32 0, !dbg !6234
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_ep* @net2280_match_ep(%struct.usb_gadget* %_gadget, %struct.usb_endpoint_descriptor* %desc, %struct.usb_ss_ep_comp_descriptor* %ep_comp) #2 !dbg !6235 {
entry:
  %retval = alloca %struct.usb_ep*, align 8
  %_gadget.addr = alloca %struct.usb_gadget*, align 8
  %desc.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  %ep_comp.addr = alloca %struct.usb_ss_ep_comp_descriptor*, align 8
  %name = alloca [8 x i8], align 1
  %ep = alloca %struct.usb_ep*, align 8
  store %struct.usb_gadget* %_gadget, %struct.usb_gadget** %_gadget.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget** %_gadget.addr, metadata !6236, metadata !DIExpression()), !dbg !6237
  store %struct.usb_endpoint_descriptor* %desc, %struct.usb_endpoint_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %desc.addr, metadata !6238, metadata !DIExpression()), !dbg !6239
  store %struct.usb_ss_ep_comp_descriptor* %ep_comp, %struct.usb_ss_ep_comp_descriptor** %ep_comp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ss_ep_comp_descriptor** %ep_comp.addr, metadata !6240, metadata !DIExpression()), !dbg !6241
  call void @llvm.dbg.declare(metadata [8 x i8]* %name, metadata !6242, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %ep, metadata !6244, metadata !DIExpression()), !dbg !6245
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6246
  %call = call i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %0) #12, !dbg !6248
  %cmp = icmp eq i32 %call, 3, !dbg !6249
  br i1 %cmp, label %if.then, label %if.end12, !dbg !6250

if.then:                                          ; preds = %entry
  %1 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6251
  %call1 = call %struct.usb_ep* @gadget_find_ep_by_name(%struct.usb_gadget* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !6253
  store %struct.usb_ep* %call1, %struct.usb_ep** %ep, align 8, !dbg !6254
  %2 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6255
  %tobool = icmp ne %struct.usb_ep* %2, null, !dbg !6255
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6257

land.lhs.true:                                    ; preds = %if.then
  %3 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6258
  %4 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6259
  %5 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6260
  %6 = load %struct.usb_ss_ep_comp_descriptor*, %struct.usb_ss_ep_comp_descriptor** %ep_comp.addr, align 8, !dbg !6261
  %call2 = call i32 @usb_gadget_ep_match_desc(%struct.usb_gadget* %3, %struct.usb_ep* %4, %struct.usb_endpoint_descriptor* %5, %struct.usb_ss_ep_comp_descriptor* %6) #12, !dbg !6262
  %tobool3 = icmp ne i32 %call2, 0, !dbg !6262
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !6263

if.then4:                                         ; preds = %land.lhs.true
  %7 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6264
  store %struct.usb_ep* %7, %struct.usb_ep** %retval, align 8, !dbg !6265
  br label %return, !dbg !6265

if.end:                                           ; preds = %land.lhs.true, %if.then
  %8 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6266
  %call5 = call %struct.usb_ep* @gadget_find_ep_by_name(%struct.usb_gadget* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0)) #12, !dbg !6267
  store %struct.usb_ep* %call5, %struct.usb_ep** %ep, align 8, !dbg !6268
  %9 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6269
  %tobool6 = icmp ne %struct.usb_ep* %9, null, !dbg !6269
  br i1 %tobool6, label %land.lhs.true7, label %if.end11, !dbg !6271

land.lhs.true7:                                   ; preds = %if.end
  %10 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6272
  %11 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6273
  %12 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6274
  %13 = load %struct.usb_ss_ep_comp_descriptor*, %struct.usb_ss_ep_comp_descriptor** %ep_comp.addr, align 8, !dbg !6275
  %call8 = call i32 @usb_gadget_ep_match_desc(%struct.usb_gadget* %10, %struct.usb_ep* %11, %struct.usb_endpoint_descriptor* %12, %struct.usb_ss_ep_comp_descriptor* %13) #12, !dbg !6276
  %tobool9 = icmp ne i32 %call8, 0, !dbg !6276
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !6277

if.then10:                                        ; preds = %land.lhs.true7
  %14 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6278
  store %struct.usb_ep* %14, %struct.usb_ep** %retval, align 8, !dbg !6279
  br label %return, !dbg !6279

if.end11:                                         ; preds = %land.lhs.true7, %if.end
  br label %if.end12, !dbg !6280

if.end12:                                         ; preds = %if.end11, %entry
  %15 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6281
  %call13 = call i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %15) #12, !dbg !6283
  %cmp14 = icmp eq i32 %call13, 3, !dbg !6284
  br i1 %cmp14, label %land.lhs.true15, label %if.else, !dbg !6285

land.lhs.true15:                                  ; preds = %if.end12
  %16 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6286
  %call16 = call i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %16) #12, !dbg !6287
  %tobool17 = icmp ne i32 %call16, 0, !dbg !6287
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !6288

if.then18:                                        ; preds = %land.lhs.true15
  %17 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6289
  %call19 = call %struct.usb_ep* @gadget_find_ep_by_name(%struct.usb_gadget* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #12, !dbg !6291
  store %struct.usb_ep* %call19, %struct.usb_ep** %ep, align 8, !dbg !6292
  %18 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6293
  %tobool20 = icmp ne %struct.usb_ep* %18, null, !dbg !6293
  br i1 %tobool20, label %land.lhs.true21, label %if.end25, !dbg !6295

land.lhs.true21:                                  ; preds = %if.then18
  %19 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6296
  %20 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6297
  %21 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6298
  %22 = load %struct.usb_ss_ep_comp_descriptor*, %struct.usb_ss_ep_comp_descriptor** %ep_comp.addr, align 8, !dbg !6299
  %call22 = call i32 @usb_gadget_ep_match_desc(%struct.usb_gadget* %19, %struct.usb_ep* %20, %struct.usb_endpoint_descriptor* %21, %struct.usb_ss_ep_comp_descriptor* %22) #12, !dbg !6300
  %tobool23 = icmp ne i32 %call22, 0, !dbg !6300
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !6301

if.then24:                                        ; preds = %land.lhs.true21
  %23 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6302
  store %struct.usb_ep* %23, %struct.usb_ep** %retval, align 8, !dbg !6303
  br label %return, !dbg !6303

if.end25:                                         ; preds = %land.lhs.true21, %if.then18
  %24 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6304
  %call26 = call %struct.usb_ep* @gadget_find_ep_by_name(%struct.usb_gadget* %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0)) #12, !dbg !6305
  store %struct.usb_ep* %call26, %struct.usb_ep** %ep, align 8, !dbg !6306
  %25 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6307
  %tobool27 = icmp ne %struct.usb_ep* %25, null, !dbg !6307
  br i1 %tobool27, label %land.lhs.true28, label %if.end32, !dbg !6309

land.lhs.true28:                                  ; preds = %if.end25
  %26 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6310
  %27 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6311
  %28 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6312
  %29 = load %struct.usb_ss_ep_comp_descriptor*, %struct.usb_ss_ep_comp_descriptor** %ep_comp.addr, align 8, !dbg !6313
  %call29 = call i32 @usb_gadget_ep_match_desc(%struct.usb_gadget* %26, %struct.usb_ep* %27, %struct.usb_endpoint_descriptor* %28, %struct.usb_ss_ep_comp_descriptor* %29) #12, !dbg !6314
  %tobool30 = icmp ne i32 %call29, 0, !dbg !6314
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !6315

if.then31:                                        ; preds = %land.lhs.true28
  %30 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6316
  store %struct.usb_ep* %30, %struct.usb_ep** %retval, align 8, !dbg !6317
  br label %return, !dbg !6317

if.end32:                                         ; preds = %land.lhs.true28, %if.end25
  br label %if.end98, !dbg !6318

if.else:                                          ; preds = %land.lhs.true15, %if.end12
  %31 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6319
  %call33 = call i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %31) #12, !dbg !6321
  %cmp34 = icmp eq i32 %call33, 3, !dbg !6322
  br i1 %cmp34, label %land.lhs.true35, label %if.else53, !dbg !6323

land.lhs.true35:                                  ; preds = %if.else
  %32 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6324
  %call36 = call i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %32) #12, !dbg !6325
  %tobool37 = icmp ne i32 %call36, 0, !dbg !6325
  br i1 %tobool37, label %if.else53, label %if.then38, !dbg !6326

if.then38:                                        ; preds = %land.lhs.true35
  %33 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6327
  %call39 = call %struct.usb_ep* @gadget_find_ep_by_name(%struct.usb_gadget* %33, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0)) #12, !dbg !6329
  store %struct.usb_ep* %call39, %struct.usb_ep** %ep, align 8, !dbg !6330
  %34 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6331
  %tobool40 = icmp ne %struct.usb_ep* %34, null, !dbg !6331
  br i1 %tobool40, label %land.lhs.true41, label %if.end45, !dbg !6333

land.lhs.true41:                                  ; preds = %if.then38
  %35 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6334
  %36 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6335
  %37 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6336
  %38 = load %struct.usb_ss_ep_comp_descriptor*, %struct.usb_ss_ep_comp_descriptor** %ep_comp.addr, align 8, !dbg !6337
  %call42 = call i32 @usb_gadget_ep_match_desc(%struct.usb_gadget* %35, %struct.usb_ep* %36, %struct.usb_endpoint_descriptor* %37, %struct.usb_ss_ep_comp_descriptor* %38) #12, !dbg !6338
  %tobool43 = icmp ne i32 %call42, 0, !dbg !6338
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !6339

if.then44:                                        ; preds = %land.lhs.true41
  %39 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6340
  store %struct.usb_ep* %39, %struct.usb_ep** %retval, align 8, !dbg !6341
  br label %return, !dbg !6341

if.end45:                                         ; preds = %land.lhs.true41, %if.then38
  %40 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6342
  %call46 = call %struct.usb_ep* @gadget_find_ep_by_name(%struct.usb_gadget* %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0)) #12, !dbg !6343
  store %struct.usb_ep* %call46, %struct.usb_ep** %ep, align 8, !dbg !6344
  %41 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6345
  %tobool47 = icmp ne %struct.usb_ep* %41, null, !dbg !6345
  br i1 %tobool47, label %land.lhs.true48, label %if.end52, !dbg !6347

land.lhs.true48:                                  ; preds = %if.end45
  %42 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6348
  %43 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6349
  %44 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6350
  %45 = load %struct.usb_ss_ep_comp_descriptor*, %struct.usb_ss_ep_comp_descriptor** %ep_comp.addr, align 8, !dbg !6351
  %call49 = call i32 @usb_gadget_ep_match_desc(%struct.usb_gadget* %42, %struct.usb_ep* %43, %struct.usb_endpoint_descriptor* %44, %struct.usb_ss_ep_comp_descriptor* %45) #12, !dbg !6352
  %tobool50 = icmp ne i32 %call49, 0, !dbg !6352
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !6353

if.then51:                                        ; preds = %land.lhs.true48
  %46 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6354
  store %struct.usb_ep* %46, %struct.usb_ep** %retval, align 8, !dbg !6355
  br label %return, !dbg !6355

if.end52:                                         ; preds = %land.lhs.true48, %if.end45
  br label %if.end97, !dbg !6356

if.else53:                                        ; preds = %land.lhs.true35, %if.else
  %47 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6357
  %call54 = call i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %47) #12, !dbg !6359
  %cmp55 = icmp ne i32 %call54, 2, !dbg !6360
  br i1 %cmp55, label %land.lhs.true56, label %if.else74, !dbg !6361

land.lhs.true56:                                  ; preds = %if.else53
  %48 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6362
  %call57 = call i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %48) #12, !dbg !6363
  %tobool58 = icmp ne i32 %call57, 0, !dbg !6363
  br i1 %tobool58, label %if.then59, label %if.else74, !dbg !6364

if.then59:                                        ; preds = %land.lhs.true56
  %49 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6365
  %call60 = call %struct.usb_ep* @gadget_find_ep_by_name(%struct.usb_gadget* %49, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0)) #12, !dbg !6367
  store %struct.usb_ep* %call60, %struct.usb_ep** %ep, align 8, !dbg !6368
  %50 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6369
  %tobool61 = icmp ne %struct.usb_ep* %50, null, !dbg !6369
  br i1 %tobool61, label %land.lhs.true62, label %if.end66, !dbg !6371

land.lhs.true62:                                  ; preds = %if.then59
  %51 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6372
  %52 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6373
  %53 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6374
  %54 = load %struct.usb_ss_ep_comp_descriptor*, %struct.usb_ss_ep_comp_descriptor** %ep_comp.addr, align 8, !dbg !6375
  %call63 = call i32 @usb_gadget_ep_match_desc(%struct.usb_gadget* %51, %struct.usb_ep* %52, %struct.usb_endpoint_descriptor* %53, %struct.usb_ss_ep_comp_descriptor* %54) #12, !dbg !6376
  %tobool64 = icmp ne i32 %call63, 0, !dbg !6376
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !6377

if.then65:                                        ; preds = %land.lhs.true62
  %55 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6378
  store %struct.usb_ep* %55, %struct.usb_ep** %retval, align 8, !dbg !6379
  br label %return, !dbg !6379

if.end66:                                         ; preds = %land.lhs.true62, %if.then59
  %56 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6380
  %call67 = call %struct.usb_ep* @gadget_find_ep_by_name(%struct.usb_gadget* %56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0)) #12, !dbg !6381
  store %struct.usb_ep* %call67, %struct.usb_ep** %ep, align 8, !dbg !6382
  %57 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6383
  %tobool68 = icmp ne %struct.usb_ep* %57, null, !dbg !6383
  br i1 %tobool68, label %land.lhs.true69, label %if.end73, !dbg !6385

land.lhs.true69:                                  ; preds = %if.end66
  %58 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6386
  %59 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6387
  %60 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6388
  %61 = load %struct.usb_ss_ep_comp_descriptor*, %struct.usb_ss_ep_comp_descriptor** %ep_comp.addr, align 8, !dbg !6389
  %call70 = call i32 @usb_gadget_ep_match_desc(%struct.usb_gadget* %58, %struct.usb_ep* %59, %struct.usb_endpoint_descriptor* %60, %struct.usb_ss_ep_comp_descriptor* %61) #12, !dbg !6390
  %tobool71 = icmp ne i32 %call70, 0, !dbg !6390
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !6391

if.then72:                                        ; preds = %land.lhs.true69
  %62 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6392
  store %struct.usb_ep* %62, %struct.usb_ep** %retval, align 8, !dbg !6393
  br label %return, !dbg !6393

if.end73:                                         ; preds = %land.lhs.true69, %if.end66
  br label %if.end96, !dbg !6394

if.else74:                                        ; preds = %land.lhs.true56, %if.else53
  %63 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6395
  %call75 = call i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %63) #12, !dbg !6397
  %cmp76 = icmp ne i32 %call75, 2, !dbg !6398
  br i1 %cmp76, label %land.lhs.true77, label %if.end95, !dbg !6399

land.lhs.true77:                                  ; preds = %if.else74
  %64 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6400
  %call78 = call i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %64) #12, !dbg !6401
  %tobool79 = icmp ne i32 %call78, 0, !dbg !6401
  br i1 %tobool79, label %if.end95, label %if.then80, !dbg !6402

if.then80:                                        ; preds = %land.lhs.true77
  %65 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6403
  %call81 = call %struct.usb_ep* @gadget_find_ep_by_name(%struct.usb_gadget* %65, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)) #12, !dbg !6405
  store %struct.usb_ep* %call81, %struct.usb_ep** %ep, align 8, !dbg !6406
  %66 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6407
  %tobool82 = icmp ne %struct.usb_ep* %66, null, !dbg !6407
  br i1 %tobool82, label %land.lhs.true83, label %if.end87, !dbg !6409

land.lhs.true83:                                  ; preds = %if.then80
  %67 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6410
  %68 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6411
  %69 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6412
  %70 = load %struct.usb_ss_ep_comp_descriptor*, %struct.usb_ss_ep_comp_descriptor** %ep_comp.addr, align 8, !dbg !6413
  %call84 = call i32 @usb_gadget_ep_match_desc(%struct.usb_gadget* %67, %struct.usb_ep* %68, %struct.usb_endpoint_descriptor* %69, %struct.usb_ss_ep_comp_descriptor* %70) #12, !dbg !6414
  %tobool85 = icmp ne i32 %call84, 0, !dbg !6414
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !6415

if.then86:                                        ; preds = %land.lhs.true83
  %71 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6416
  store %struct.usb_ep* %71, %struct.usb_ep** %retval, align 8, !dbg !6417
  br label %return, !dbg !6417

if.end87:                                         ; preds = %land.lhs.true83, %if.then80
  %72 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6418
  %call88 = call %struct.usb_ep* @gadget_find_ep_by_name(%struct.usb_gadget* %72, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0)) #12, !dbg !6419
  store %struct.usb_ep* %call88, %struct.usb_ep** %ep, align 8, !dbg !6420
  %73 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6421
  %tobool89 = icmp ne %struct.usb_ep* %73, null, !dbg !6421
  br i1 %tobool89, label %land.lhs.true90, label %if.end94, !dbg !6423

land.lhs.true90:                                  ; preds = %if.end87
  %74 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6424
  %75 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6425
  %76 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6426
  %77 = load %struct.usb_ss_ep_comp_descriptor*, %struct.usb_ss_ep_comp_descriptor** %ep_comp.addr, align 8, !dbg !6427
  %call91 = call i32 @usb_gadget_ep_match_desc(%struct.usb_gadget* %74, %struct.usb_ep* %75, %struct.usb_endpoint_descriptor* %76, %struct.usb_ss_ep_comp_descriptor* %77) #12, !dbg !6428
  %tobool92 = icmp ne i32 %call91, 0, !dbg !6428
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !6429

if.then93:                                        ; preds = %land.lhs.true90
  %78 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6430
  store %struct.usb_ep* %78, %struct.usb_ep** %retval, align 8, !dbg !6431
  br label %return, !dbg !6431

if.end94:                                         ; preds = %land.lhs.true90, %if.end87
  br label %if.end95, !dbg !6432

if.end95:                                         ; preds = %if.end94, %land.lhs.true77, %if.else74
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.end73
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.end52
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.end32
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %name, i64 0, i64 0, !dbg !6433
  %79 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6434
  %call99 = call i32 @usb_endpoint_num(%struct.usb_endpoint_descriptor* %79) #12, !dbg !6435
  %80 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6436
  %call100 = call i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %80) #12, !dbg !6437
  %tobool101 = icmp ne i32 %call100, 0, !dbg !6437
  %81 = zext i1 %tobool101 to i64, !dbg !6437
  %cond = select i1 %tobool101, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0), !dbg !6437
  %call102 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0), i32 %call99, i8* %cond) #12, !dbg !6438
  %82 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6439
  %arraydecay103 = getelementptr inbounds [8 x i8], [8 x i8]* %name, i64 0, i64 0, !dbg !6440
  %call104 = call %struct.usb_ep* @gadget_find_ep_by_name(%struct.usb_gadget* %82, i8* %arraydecay103) #12, !dbg !6441
  store %struct.usb_ep* %call104, %struct.usb_ep** %ep, align 8, !dbg !6442
  %83 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6443
  %tobool105 = icmp ne %struct.usb_ep* %83, null, !dbg !6443
  br i1 %tobool105, label %land.lhs.true106, label %if.end110, !dbg !6445

land.lhs.true106:                                 ; preds = %if.end98
  %84 = load %struct.usb_gadget*, %struct.usb_gadget** %_gadget.addr, align 8, !dbg !6446
  %85 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6447
  %86 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !6448
  %87 = load %struct.usb_ss_ep_comp_descriptor*, %struct.usb_ss_ep_comp_descriptor** %ep_comp.addr, align 8, !dbg !6449
  %call107 = call i32 @usb_gadget_ep_match_desc(%struct.usb_gadget* %84, %struct.usb_ep* %85, %struct.usb_endpoint_descriptor* %86, %struct.usb_ss_ep_comp_descriptor* %87) #12, !dbg !6450
  %tobool108 = icmp ne i32 %call107, 0, !dbg !6450
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !6451

if.then109:                                       ; preds = %land.lhs.true106
  %88 = load %struct.usb_ep*, %struct.usb_ep** %ep, align 8, !dbg !6452
  store %struct.usb_ep* %88, %struct.usb_ep** %retval, align 8, !dbg !6453
  br label %return, !dbg !6453

if.end110:                                        ; preds = %land.lhs.true106, %if.end98
  store %struct.usb_ep* null, %struct.usb_ep** %retval, align 8, !dbg !6454
  br label %return, !dbg !6454

return:                                           ; preds = %if.end110, %if.then109, %if.then93, %if.then86, %if.then72, %if.then65, %if.then51, %if.then44, %if.then31, %if.then24, %if.then10, %if.then4
  %89 = load %struct.usb_ep*, %struct.usb_ep** %retval, align 8, !dbg !6455
  ret %struct.usb_ep* %89, !dbg !6455
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !6456 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !6460, metadata !DIExpression()), !dbg !6461
  %call = call i64 @arch_local_save_flags() #12, !dbg !6462
  store i64 %call, i64* %f, align 8, !dbg !6463
  call void @arch_local_irq_disable() #12, !dbg !6464
  %0 = load i64, i64* %f, align 8, !dbg !6465
  ret i64 %0, !dbg !6466
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !6467 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !6468, metadata !DIExpression()), !dbg !6470
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6471, metadata !DIExpression()), !dbg !6470
  %0 = load i64, i64* %__edi, align 8, !dbg !6470
  store i64 %0, i64* %__edi, align 8, !dbg !6470
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6472, metadata !DIExpression()), !dbg !6470
  %1 = load i64, i64* %__esi, align 8, !dbg !6470
  store i64 %1, i64* %__esi, align 8, !dbg !6470
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6473, metadata !DIExpression()), !dbg !6470
  %2 = load i64, i64* %__edx, align 8, !dbg !6470
  store i64 %2, i64* %__edx, align 8, !dbg !6470
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6474, metadata !DIExpression()), !dbg !6470
  %3 = load i64, i64* %__ecx, align 8, !dbg !6470
  store i64 %3, i64* %__ecx, align 8, !dbg !6470
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6475, metadata !DIExpression()), !dbg !6470
  %4 = load i64, i64* %__eax, align 8, !dbg !6470
  store i64 %4, i64* %__eax, align 8, !dbg !6470
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !6470
  %6 = call i64 @llvm.read_register.i64(metadata !4648), !dbg !6476
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !6476, !srcloc !6479
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6476
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6476
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6476
  call void @llvm.write_register.i64(metadata !4648, i64 %asmresult1), !dbg !6476
  %8 = load i64, i64* %__eax, align 8, !dbg !6476
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !6480, metadata !DIExpression()), !dbg !6482
  store i64 -1, i64* %__mask, align 8, !dbg !6482
  %9 = load i64, i64* %__mask, align 8, !dbg !6482
  store i64 %9, i64* %tmp, align 8, !dbg !6482
  %10 = load i64, i64* %tmp, align 8, !dbg !6482
  %and = and i64 %8, %10, !dbg !6476
  store i64 %and, i64* %__ret, align 8, !dbg !6476
  %11 = load i64, i64* %__ret, align 8, !dbg !6470
  store i64 %11, i64* %tmp2, align 8, !dbg !6483
  %12 = load i64, i64* %tmp2, align 8, !dbg !6470
  ret i64 %12, !dbg !6484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !6485 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6486, metadata !DIExpression()), !dbg !6488
  %0 = load i64, i64* %__edi, align 8, !dbg !6488
  store i64 %0, i64* %__edi, align 8, !dbg !6488
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6489, metadata !DIExpression()), !dbg !6488
  %1 = load i64, i64* %__esi, align 8, !dbg !6488
  store i64 %1, i64* %__esi, align 8, !dbg !6488
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6490, metadata !DIExpression()), !dbg !6488
  %2 = load i64, i64* %__edx, align 8, !dbg !6488
  store i64 %2, i64* %__edx, align 8, !dbg !6488
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6491, metadata !DIExpression()), !dbg !6488
  %3 = load i64, i64* %__ecx, align 8, !dbg !6488
  store i64 %3, i64* %__ecx, align 8, !dbg !6488
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6492, metadata !DIExpression()), !dbg !6488
  %4 = load i64, i64* %__eax, align 8, !dbg !6488
  store i64 %4, i64* %__eax, align 8, !dbg !6488
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !6488
  %6 = call i64 @llvm.read_register.i64(metadata !4648), !dbg !6488
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !6488, !srcloc !6493
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6488
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6488
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6488
  call void @llvm.write_register.i64(metadata !4648, i64 %asmresult1), !dbg !6488
  ret void, !dbg !6494
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !6495 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !6498, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6500, metadata !DIExpression()), !dbg !6502
  %0 = load i64, i64* %__edi, align 8, !dbg !6502
  store i64 %0, i64* %__edi, align 8, !dbg !6502
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6503, metadata !DIExpression()), !dbg !6502
  %1 = load i64, i64* %__esi, align 8, !dbg !6502
  store i64 %1, i64* %__esi, align 8, !dbg !6502
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6504, metadata !DIExpression()), !dbg !6502
  %2 = load i64, i64* %__edx, align 8, !dbg !6502
  store i64 %2, i64* %__edx, align 8, !dbg !6502
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6505, metadata !DIExpression()), !dbg !6502
  %3 = load i64, i64* %__ecx, align 8, !dbg !6502
  store i64 %3, i64* %__ecx, align 8, !dbg !6502
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6506, metadata !DIExpression()), !dbg !6502
  %4 = load i64, i64* %__eax, align 8, !dbg !6502
  store i64 %4, i64* %__eax, align 8, !dbg !6502
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !6502
  %6 = call i64 @llvm.read_register.i64(metadata !4648), !dbg !6502
  %7 = load i64, i64* %f.addr, align 8, !dbg !6502
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !6502, !srcloc !6507
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !6502
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !6502
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6502
  call void @llvm.write_register.i64(metadata !4648, i64 %asmresult1), !dbg !6502
  ret void, !dbg !6508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ep0_start(%struct.net2280* %dev) #2 !dbg !6509 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !6510, metadata !DIExpression()), !dbg !6511
  %0 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6512
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %0, i32 0, i32 8, !dbg !6514
  %1 = load i64, i64* %quirks, align 8, !dbg !6514
  %and = and i64 %1, 1, !dbg !6515
  %tobool = icmp ne i64 %and, 0, !dbg !6515
  br i1 %tobool, label %if.then, label %if.end, !dbg !6516

if.then:                                          ; preds = %entry
  %2 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6517
  call void @ep0_start_228x(%struct.net2280* %2) #12, !dbg !6518
  br label %return, !dbg !6519

if.end:                                           ; preds = %entry
  %3 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6520
  call void @ep0_start_338x(%struct.net2280* %3) #12, !dbg !6521
  br label %return, !dbg !6522

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stop_activity(%struct.net2280* %dev, %struct.usb_gadget_driver* %driver) #2 !dbg !6524 {
entry:
  %lock.addr.i6 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i6, metadata !5567, metadata !DIExpression()), !dbg !6527
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5561, metadata !DIExpression()), !dbg !6531
  %dev.addr = alloca %struct.net2280*, align 8
  %driver.addr = alloca %struct.usb_gadget_driver*, align 8
  %i = alloca i32, align 4
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !6533, metadata !DIExpression()), !dbg !6534
  store %struct.usb_gadget_driver* %driver, %struct.usb_gadget_driver** %driver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget_driver** %driver.addr, metadata !6535, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6537, metadata !DIExpression()), !dbg !6538
  %0 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6539
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %0, i32 0, i32 0, !dbg !6541
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !6542
  %1 = load i32, i32* %speed, align 8, !dbg !6542
  %cmp = icmp eq i32 %1, 0, !dbg !6543
  br i1 %cmp, label %if.then, label %if.end, !dbg !6544

if.then:                                          ; preds = %entry
  store %struct.usb_gadget_driver* null, %struct.usb_gadget_driver** %driver.addr, align 8, !dbg !6545
  br label %if.end, !dbg !6546

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6547
  call void @usb_reset(%struct.net2280* %2) #12, !dbg !6548
  store i32 0, i32* %i, align 4, !dbg !6549
  br label %for.cond, !dbg !6551

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !6552
  %4 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6554
  %n_ep = getelementptr inbounds %struct.net2280, %struct.net2280* %4, i32 0, i32 7, !dbg !6555
  %5 = load i32, i32* %n_ep, align 8, !dbg !6555
  %cmp1 = icmp slt i32 %3, %5, !dbg !6556
  br i1 %cmp1, label %for.body, label %for.end, !dbg !6557

for.body:                                         ; preds = %for.cond
  %6 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6558
  %ep = getelementptr inbounds %struct.net2280, %struct.net2280* %6, i32 0, i32 2, !dbg !6559
  %7 = load i32, i32* %i, align 4, !dbg !6560
  %idxprom = sext i32 %7 to i64, !dbg !6558
  %arrayidx = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep, i64 0, i64 %idxprom, !dbg !6558
  call void @nuke(%struct.net2280_ep* %arrayidx) #12, !dbg !6561
  br label %for.inc, !dbg !6561

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !6562
  %inc = add i32 %8, 1, !dbg !6562
  store i32 %inc, i32* %i, align 4, !dbg !6562
  br label %for.cond, !dbg !6563, !llvm.loop !6564

for.end:                                          ; preds = %for.cond
  %9 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver.addr, align 8, !dbg !6566
  %tobool = icmp ne %struct.usb_gadget_driver* %9, null, !dbg !6566
  br i1 %tobool, label %if.then2, label %if.end5, !dbg !6567

if.then2:                                         ; preds = %for.end
  %10 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6568
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %10, i32 0, i32 1, !dbg !6569
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6570, !srcloc !5643
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6571
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !6571
  %rlock.i = bitcast %union.anon.4* %12 to %struct.raw_spinlock*, !dbg !6571
  %13 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver.addr, align 8, !dbg !6572
  %disconnect = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %13, i32 0, i32 5, !dbg !6573
  %14 = load void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)** %disconnect, align 8, !dbg !6573
  %15 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6574
  %gadget3 = getelementptr inbounds %struct.net2280, %struct.net2280* %15, i32 0, i32 0, !dbg !6575
  call void %14(%struct.usb_gadget* %gadget3) #12, !dbg !6572
  %16 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6576
  %lock4 = getelementptr inbounds %struct.net2280, %struct.net2280* %16, i32 0, i32 1, !dbg !6577
  store %struct.spinlock* %lock4, %struct.spinlock** %lock.addr.i6, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6578, !srcloc !5595
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i6, align 8, !dbg !6579
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !6579
  %rlock.i7 = bitcast %union.anon.4* %18 to %struct.raw_spinlock*, !dbg !6579
  br label %if.end5, !dbg !6580

if.end5:                                          ; preds = %if.then2, %for.end
  %19 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6581
  call void @usb_reinit(%struct.net2280* %19) #12, !dbg !6582
  ret void, !dbg !6583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ep0_start_228x(%struct.net2280* %dev) #2 !dbg !6584 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !6585, metadata !DIExpression()), !dbg !6586
  %0 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6587
  %epregs = getelementptr inbounds %struct.net2280, %struct.net2280* %0, i32 0, i32 16, !dbg !6588
  %1 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %epregs, align 8, !dbg !6588
  %arrayidx = getelementptr %struct.net2280_ep_regs, %struct.net2280_ep_regs* %1, i64 0, !dbg !6587
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %arrayidx, i32 0, i32 1, !dbg !6589
  %2 = bitcast i32* %ep_rsp to i8*, !dbg !6590
  call void @writel(i32 200, i8* %2) #12, !dbg !6591
  %3 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6592
  %usb = getelementptr inbounds %struct.net2280, %struct.net2280* %3, i32 0, i32 11, !dbg !6593
  %4 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb, align 8, !dbg !6593
  %stdrsp = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %4, i32 0, i32 0, !dbg !6594
  %5 = bitcast i32* %stdrsp to i8*, !dbg !6595
  call void @writel(i32 75779, i8* %5) #12, !dbg !6596
  %6 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6597
  %softconnect = getelementptr inbounds %struct.net2280, %struct.net2280* %6, i32 0, i32 4, !dbg !6598
  %bf.load = load i16, i16* %softconnect, align 8, !dbg !6598
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !6598
  %bf.clear = and i16 %bf.lshr, 1, !dbg !6598
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6598
  %shl = shl i32 %bf.cast, 3, !dbg !6599
  %conv = sext i32 %shl to i64, !dbg !6600
  %or = or i64 2144, %conv, !dbg !6601
  %or1 = or i64 %or, 1, !dbg !6602
  %conv2 = trunc i64 %or1 to i32, !dbg !6603
  %7 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6604
  %usb3 = getelementptr inbounds %struct.net2280, %struct.net2280* %7, i32 0, i32 11, !dbg !6605
  %8 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb3, align 8, !dbg !6605
  %usbctl = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %8, i32 0, i32 3, !dbg !6606
  %9 = bitcast i32* %usbctl to i8*, !dbg !6607
  call void @writel(i32 %conv2, i8* %9) #12, !dbg !6608
  %10 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6609
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %10, i32 0, i32 10, !dbg !6610
  %11 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !6610
  %pciirqenb0 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %11, i32 0, i32 4, !dbg !6611
  %12 = bitcast i32* %pciirqenb0 to i8*, !dbg !6612
  call void @writel(i32 129, i8* %12) #12, !dbg !6613
  %13 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6614
  %regs4 = getelementptr inbounds %struct.net2280, %struct.net2280* %13, i32 0, i32 10, !dbg !6615
  %14 = load %struct.net2280_regs*, %struct.net2280_regs** %regs4, align 8, !dbg !6615
  %pciirqenb1 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %14, i32 0, i32 5, !dbg !6616
  %15 = bitcast i32* %pciirqenb1 to i8*, !dbg !6617
  call void @writel(i32 -2145779564, i8* %15) #12, !dbg !6618
  %16 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6619
  %usb5 = getelementptr inbounds %struct.net2280, %struct.net2280* %16, i32 0, i32 11, !dbg !6620
  %17 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb5, align 8, !dbg !6620
  %usbctl6 = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %17, i32 0, i32 3, !dbg !6621
  %18 = bitcast i32* %usbctl6 to i8*, !dbg !6622
  %call = call i32 @readl(i8* %18) #12, !dbg !6623
  ret void, !dbg !6624
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ep0_start_338x(%struct.net2280* %dev) #2 !dbg !6625 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !6626, metadata !DIExpression()), !dbg !6627
  %0 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6628
  %bug7734_patched = getelementptr inbounds %struct.net2280, %struct.net2280* %0, i32 0, i32 4, !dbg !6630
  %bf.load = load i16, i16* %bug7734_patched, align 8, !dbg !6630
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !6630
  %bf.clear = and i16 %bf.lshr, 1, !dbg !6630
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6630
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6628
  br i1 %tobool, label %if.then, label %if.end, !dbg !6631

if.then:                                          ; preds = %entry
  %1 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6632
  %epregs = getelementptr inbounds %struct.net2280, %struct.net2280* %1, i32 0, i32 16, !dbg !6633
  %2 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %epregs, align 8, !dbg !6633
  %arrayidx = getelementptr %struct.net2280_ep_regs, %struct.net2280_ep_regs* %2, i64 0, !dbg !6632
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %arrayidx, i32 0, i32 1, !dbg !6634
  %3 = bitcast i32* %ep_rsp to i8*, !dbg !6635
  call void @writel(i32 16388, i8* %3) #12, !dbg !6636
  br label %if.end, !dbg !6636

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6637
  %usb = getelementptr inbounds %struct.net2280, %struct.net2280* %4, i32 0, i32 11, !dbg !6638
  %5 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb, align 8, !dbg !6638
  %stdrsp = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %5, i32 0, i32 0, !dbg !6639
  %6 = bitcast i32* %stdrsp to i8*, !dbg !6640
  call void @writel(i32 21045251, i8* %6) #12, !dbg !6641
  %7 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6642
  %wakeup_enable = getelementptr inbounds %struct.net2280, %struct.net2280* %7, i32 0, i32 4, !dbg !6643
  %bf.load1 = load i16, i16* %wakeup_enable, align 8, !dbg !6644
  %bf.clear2 = and i16 %bf.load1, -513, !dbg !6644
  %bf.set = or i16 %bf.clear2, 512, !dbg !6644
  store i16 %bf.set, i16* %wakeup_enable, align 8, !dbg !6644
  %8 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6645
  %softconnect = getelementptr inbounds %struct.net2280, %struct.net2280* %8, i32 0, i32 4, !dbg !6646
  %bf.load3 = load i16, i16* %softconnect, align 8, !dbg !6646
  %bf.lshr4 = lshr i16 %bf.load3, 2, !dbg !6646
  %bf.clear5 = and i16 %bf.lshr4, 1, !dbg !6646
  %bf.cast6 = zext i16 %bf.clear5 to i32, !dbg !6646
  %shl = shl i32 %bf.cast6, 3, !dbg !6647
  %conv = sext i32 %shl to i64, !dbg !6648
  %or = or i64 2048, %conv, !dbg !6649
  %or7 = or i64 %or, 2, !dbg !6650
  %conv8 = trunc i64 %or7 to i32, !dbg !6651
  %9 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6652
  %usb9 = getelementptr inbounds %struct.net2280, %struct.net2280* %9, i32 0, i32 11, !dbg !6653
  %10 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb9, align 8, !dbg !6653
  %usbctl = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %10, i32 0, i32 3, !dbg !6654
  %11 = bitcast i32* %usbctl to i8*, !dbg !6655
  call void @writel(i32 %conv8, i8* %11) #12, !dbg !6656
  %12 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6657
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %12, i32 0, i32 10, !dbg !6658
  %13 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !6658
  %pciirqenb0 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %13, i32 0, i32 4, !dbg !6659
  %14 = bitcast i32* %pciirqenb0 to i8*, !dbg !6660
  call void @writel(i32 129, i8* %14) #12, !dbg !6661
  %15 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6662
  %regs10 = getelementptr inbounds %struct.net2280, %struct.net2280* %15, i32 0, i32 10, !dbg !6663
  %16 = load %struct.net2280_regs*, %struct.net2280_regs** %regs10, align 8, !dbg !6663
  %pciirqenb1 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %16, i32 0, i32 5, !dbg !6664
  %17 = bitcast i32* %pciirqenb1 to i8*, !dbg !6665
  call void @writel(i32 -2147483500, i8* %17) #12, !dbg !6666
  %18 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !6667
  %usb11 = getelementptr inbounds %struct.net2280, %struct.net2280* %18, i32 0, i32 11, !dbg !6668
  %19 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb11, align 8, !dbg !6668
  %usbctl12 = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %19, i32 0, i32 3, !dbg !6669
  %20 = bitcast i32* %usbctl12 to i8*, !dbg !6670
  %call = call i32 @readl(i8* %20) #12, !dbg !6671
  ret void, !dbg !6672
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nuke(%struct.net2280_ep* %ep) #2 !dbg !6673 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %req = alloca %struct.net2280_request*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280_request*, align 8
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !6674, metadata !DIExpression()), !dbg !6675
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %req, metadata !6676, metadata !DIExpression()), !dbg !6677
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6678
  %stopped = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 10, !dbg !6679
  %bf.load = load i32, i32* %stopped, align 8, !dbg !6680
  %bf.clear = and i32 %bf.load, -4194305, !dbg !6680
  %bf.set = or i32 %bf.clear, 4194304, !dbg !6680
  store i32 %bf.set, i32* %stopped, align 8, !dbg !6680
  %1 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6681
  %dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %1, i32 0, i32 3, !dbg !6683
  %2 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !6683
  %tobool = icmp ne %struct.net2280_dma_regs* %2, null, !dbg !6681
  br i1 %tobool, label %if.then, label %if.end, !dbg !6684

if.then:                                          ; preds = %entry
  %3 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6685
  call void @abort_dma(%struct.net2280_ep* %3) #12, !dbg !6686
  br label %if.end, !dbg !6686

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !6687

while.cond:                                       ; preds = %do.end, %if.end
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6688
  %queue = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %4, i32 0, i32 8, !dbg !6689
  %call = call i32 @list_empty(%struct.list_head* %queue) #12, !dbg !6690
  %tobool1 = icmp ne i32 %call, 0, !dbg !6691
  %lnot = xor i1 %tobool1, true, !dbg !6691
  br i1 %lnot, label %while.body, label %while.end, !dbg !6687

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6692, metadata !DIExpression()), !dbg !6695
  %5 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6695
  %queue2 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %5, i32 0, i32 8, !dbg !6695
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queue2, i32 0, i32 0, !dbg !6695
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6695
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !6695
  store i8* %7, i8** %__mptr, align 8, !dbg !6695
  br label %do.body, !dbg !6695

do.body:                                          ; preds = %while.body
  br label %do.end, !dbg !6696

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !6695
  %add.ptr = getelementptr i8, i8* %8, i64 -112, !dbg !6695
  %9 = bitcast i8* %add.ptr to %struct.net2280_request*, !dbg !6695
  store %struct.net2280_request* %9, %struct.net2280_request** %tmp, align 8, !dbg !6696
  %10 = load %struct.net2280_request*, %struct.net2280_request** %tmp, align 8, !dbg !6695
  store %struct.net2280_request* %10, %struct.net2280_request** %req, align 8, !dbg !6698
  %11 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6699
  %12 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !6700
  call void @done(%struct.net2280_ep* %11, %struct.net2280_request* %12, i32 -108) #12, !dbg !6701
  br label %while.cond, !dbg !6687, !llvm.loop !6702

while.end:                                        ; preds = %while.cond
  ret void, !dbg !6704
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @abort_dma(%struct.net2280_ep* %ep) #2 !dbg !6705 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !6706, metadata !DIExpression()), !dbg !6707
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6708
  %queue = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 8, !dbg !6708
  %call = call i32 @list_empty(%struct.list_head* %queue) #12, !dbg !6708
  %tobool = icmp ne i32 %call, 0, !dbg !6708
  %lnot = xor i1 %tobool, true, !dbg !6708
  %lnot1 = xor i1 %lnot, true, !dbg !6708
  %lnot2 = xor i1 %lnot1, true, !dbg !6708
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6708
  %conv = sext i32 %lnot.ext to i64, !dbg !6708
  %tobool3 = icmp ne i64 %conv, 0, !dbg !6708
  br i1 %tobool3, label %if.then, label %if.else, !dbg !6710

if.then:                                          ; preds = %entry
  %1 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6711
  %dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %1, i32 0, i32 3, !dbg !6713
  %2 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !6713
  %dmastat = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %2, i32 0, i32 1, !dbg !6714
  %3 = bitcast i32* %dmastat to i8*, !dbg !6715
  call void @writel(i32 2, i8* %3) #12, !dbg !6716
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6717
  %dma4 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %4, i32 0, i32 3, !dbg !6718
  %5 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma4, align 8, !dbg !6718
  call void @spin_stop_dma(%struct.net2280_dma_regs* %5) #12, !dbg !6719
  br label %if.end, !dbg !6720

if.else:                                          ; preds = %entry
  %6 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6721
  %dma5 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %6, i32 0, i32 3, !dbg !6722
  %7 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma5, align 8, !dbg !6722
  call void @stop_dma(%struct.net2280_dma_regs* %7) #12, !dbg !6723
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6724
  %call6 = call i32 @scan_dma_completions(%struct.net2280_ep* %8) #12, !dbg !6725
  ret void, !dbg !6726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #2 !dbg !6727 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6733, metadata !DIExpression()), !dbg !6734
  br label %do.body, !dbg !6735

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6737

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6735
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !6735
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6735
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !6737
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !6735
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6739
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !6740
  %conv = zext i1 %cmp to i32, !dbg !6740
  ret i32 %conv, !dbg !6741
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @done(%struct.net2280_ep* %ep, %struct.net2280_request* %req, i32 %status) #2 !dbg !6742 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !5567, metadata !DIExpression()), !dbg !6745
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5561, metadata !DIExpression()), !dbg !6747
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %req.addr = alloca %struct.net2280_request*, align 8
  %status.addr = alloca i32, align 4
  %dev = alloca %struct.net2280*, align 8
  %stopped = alloca i32, align 4
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !6749, metadata !DIExpression()), !dbg !6750
  store %struct.net2280_request* %req, %struct.net2280_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %req.addr, metadata !6751, metadata !DIExpression()), !dbg !6752
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !6753, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev, metadata !6755, metadata !DIExpression()), !dbg !6756
  call void @llvm.dbg.declare(metadata i32* %stopped, metadata !6757, metadata !DIExpression()), !dbg !6758
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6759
  %stopped1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 10, !dbg !6760
  %bf.load = load i32, i32* %stopped1, align 8, !dbg !6760
  %bf.lshr = lshr i32 %bf.load, 22, !dbg !6760
  %bf.clear = and i32 %bf.lshr, 1, !dbg !6760
  store i32 %bf.clear, i32* %stopped, align 4, !dbg !6758
  %1 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !6761
  %queue = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %1, i32 0, i32 3, !dbg !6762
  call void @list_del_init(%struct.list_head* %queue) #12, !dbg !6763
  %2 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !6764
  %req2 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %2, i32 0, i32 0, !dbg !6766
  %status3 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req2, i32 0, i32 11, !dbg !6767
  %3 = load i32, i32* %status3, align 4, !dbg !6767
  %cmp = icmp eq i32 %3, -115, !dbg !6768
  br i1 %cmp, label %if.then, label %if.else, !dbg !6769

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %status.addr, align 4, !dbg !6770
  %5 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !6771
  %req4 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %5, i32 0, i32 0, !dbg !6772
  %status5 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req4, i32 0, i32 11, !dbg !6773
  store i32 %4, i32* %status5, align 4, !dbg !6774
  br label %if.end, !dbg !6771

if.else:                                          ; preds = %entry
  %6 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !6775
  %req6 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %6, i32 0, i32 0, !dbg !6776
  %status7 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req6, i32 0, i32 11, !dbg !6777
  %7 = load i32, i32* %status7, align 4, !dbg !6777
  store i32 %7, i32* %status.addr, align 4, !dbg !6778
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6779
  %dev8 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %8, i32 0, i32 6, !dbg !6780
  %9 = load %struct.net2280*, %struct.net2280** %dev8, align 8, !dbg !6780
  store %struct.net2280* %9, %struct.net2280** %dev, align 8, !dbg !6781
  %10 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6782
  %dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %10, i32 0, i32 3, !dbg !6784
  %11 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !6784
  %tobool = icmp ne %struct.net2280_dma_regs* %11, null, !dbg !6782
  br i1 %tobool, label %if.then9, label %if.end14, !dbg !6785

if.then9:                                         ; preds = %if.end
  %12 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6786
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %12, i32 0, i32 0, !dbg !6787
  %13 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !6788
  %req10 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %13, i32 0, i32 0, !dbg !6789
  %14 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6790
  %is_in = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %14, i32 0, i32 10, !dbg !6791
  %bf.load11 = load i32, i32* %is_in, align 8, !dbg !6791
  %bf.lshr12 = lshr i32 %bf.load11, 24, !dbg !6791
  %bf.clear13 = and i32 %bf.lshr12, 1, !dbg !6791
  call void @usb_gadget_unmap_request(%struct.usb_gadget* %gadget, %struct.usb_request* %req10, i32 %bf.clear13) #12, !dbg !6792
  br label %if.end14, !dbg !6792

if.end14:                                         ; preds = %if.then9, %if.end
  %15 = load i32, i32* %status.addr, align 4, !dbg !6793
  %tobool15 = icmp ne i32 %15, 0, !dbg !6793
  br i1 %tobool15, label %land.lhs.true, label %if.end18, !dbg !6795

land.lhs.true:                                    ; preds = %if.end14
  %16 = load i32, i32* %status.addr, align 4, !dbg !6796
  %cmp16 = icmp ne i32 %16, -108, !dbg !6797
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !6798

if.then17:                                        ; preds = %land.lhs.true
  br label %if.end18, !dbg !6799

if.end18:                                         ; preds = %if.then17, %land.lhs.true, %if.end14
  %17 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6800
  %stopped19 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %17, i32 0, i32 10, !dbg !6801
  %bf.load20 = load i32, i32* %stopped19, align 8, !dbg !6802
  %bf.clear21 = and i32 %bf.load20, -4194305, !dbg !6802
  %bf.set = or i32 %bf.clear21, 4194304, !dbg !6802
  store i32 %bf.set, i32* %stopped19, align 8, !dbg !6802
  %18 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6803
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %18, i32 0, i32 1, !dbg !6804
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6805, !srcloc !5643
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6806
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !6806
  %rlock.i = bitcast %union.anon.4* %20 to %struct.raw_spinlock*, !dbg !6806
  %21 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6807
  %ep22 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %21, i32 0, i32 0, !dbg !6808
  %22 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !6809
  %req23 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %22, i32 0, i32 0, !dbg !6810
  call void @usb_gadget_giveback_request(%struct.usb_ep* %ep22, %struct.usb_request* %req23) #12, !dbg !6811
  %23 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6812
  %lock24 = getelementptr inbounds %struct.net2280, %struct.net2280* %23, i32 0, i32 1, !dbg !6813
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i29, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6814, !srcloc !5595
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !6815
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !6815
  %rlock.i30 = bitcast %union.anon.4* %25 to %struct.raw_spinlock*, !dbg !6815
  %26 = load i32, i32* %stopped, align 4, !dbg !6816
  %27 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6817
  %stopped25 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %27, i32 0, i32 10, !dbg !6818
  %bf.load26 = load i32, i32* %stopped25, align 8, !dbg !6819
  %bf.value = and i32 %26, 1, !dbg !6819
  %bf.shl = shl i32 %bf.value, 22, !dbg !6819
  %bf.clear27 = and i32 %bf.load26, -4194305, !dbg !6819
  %bf.set28 = or i32 %bf.clear27, %bf.shl, !dbg !6819
  store i32 %bf.set28, i32* %stopped25, align 8, !dbg !6819
  ret void, !dbg !6820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spin_stop_dma(%struct.net2280_dma_regs* %dma) #2 !dbg !6821 {
entry:
  %dma.addr = alloca %struct.net2280_dma_regs*, align 8
  store %struct.net2280_dma_regs* %dma, %struct.net2280_dma_regs** %dma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_dma_regs** %dma.addr, metadata !6824, metadata !DIExpression()), !dbg !6825
  %0 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma.addr, align 8, !dbg !6826
  %dmactl = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %0, i32 0, i32 0, !dbg !6827
  %call = call i32 @handshake(i32* %dmactl, i32 2, i32 0, i32 50) #12, !dbg !6828
  ret void, !dbg !6829
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stop_dma(%struct.net2280_dma_regs* %dma) #2 !dbg !6830 {
entry:
  %dma.addr = alloca %struct.net2280_dma_regs*, align 8
  store %struct.net2280_dma_regs* %dma, %struct.net2280_dma_regs** %dma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_dma_regs** %dma.addr, metadata !6831, metadata !DIExpression()), !dbg !6832
  %0 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma.addr, align 8, !dbg !6833
  %dmactl = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %0, i32 0, i32 0, !dbg !6834
  %1 = bitcast i32* %dmactl to i8*, !dbg !6835
  %call = call i32 @readl(i8* %1) #12, !dbg !6836
  %conv = zext i32 %call to i64, !dbg !6836
  %and = and i64 %conv, -3, !dbg !6837
  %conv1 = trunc i64 %and to i32, !dbg !6836
  %2 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma.addr, align 8, !dbg !6838
  %dmactl2 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %2, i32 0, i32 0, !dbg !6839
  %3 = bitcast i32* %dmactl2 to i8*, !dbg !6840
  call void @writel(i32 %conv1, i8* %3) #12, !dbg !6841
  %4 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma.addr, align 8, !dbg !6842
  call void @spin_stop_dma(%struct.net2280_dma_regs* %4) #12, !dbg !6843
  ret void, !dbg !6844
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scan_dma_completions(%struct.net2280_ep* %ep) #2 !dbg !6845 {
entry:
  %p.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i, metadata !6848, metadata !DIExpression()), !dbg !6855
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %num_completed = alloca i32, align 4
  %req = alloca %struct.net2280_request*, align 8
  %req_dma_count = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280_request*, align 8
  %ep_dmacount = alloca i32, align 4
  %ep_stat = alloca i32, align 4
  %ep_avail = alloca i32, align 4
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !6858, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.declare(metadata i32* %num_completed, metadata !6860, metadata !DIExpression()), !dbg !6861
  store i32 0, i32* %num_completed, align 4, !dbg !6861
  br label %while.cond, !dbg !6862

while.cond:                                       ; preds = %if.end59, %entry
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6863
  %queue = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 8, !dbg !6864
  %call = call i32 @list_empty(%struct.list_head* %queue) #12, !dbg !6865
  %tobool = icmp ne i32 %call, 0, !dbg !6866
  %lnot = xor i1 %tobool, true, !dbg !6866
  br i1 %lnot, label %while.body, label %while.end, !dbg !6862

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %req, metadata !6867, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.declare(metadata i32* %req_dma_count, metadata !6869, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6871, metadata !DIExpression()), !dbg !6873
  %1 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6873
  %queue1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %1, i32 0, i32 8, !dbg !6873
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queue1, i32 0, i32 0, !dbg !6873
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6873
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !6873
  store i8* %3, i8** %__mptr, align 8, !dbg !6873
  br label %do.body, !dbg !6873

do.body:                                          ; preds = %while.body
  br label %do.end, !dbg !6874

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !6873
  %add.ptr = getelementptr i8, i8* %4, i64 -112, !dbg !6873
  %5 = bitcast i8* %add.ptr to %struct.net2280_request*, !dbg !6873
  store %struct.net2280_request* %5, %struct.net2280_request** %tmp, align 8, !dbg !6874
  %6 = load %struct.net2280_request*, %struct.net2280_request** %tmp, align 8, !dbg !6873
  store %struct.net2280_request* %6, %struct.net2280_request** %req, align 8, !dbg !6876
  %7 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !6877
  %valid = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %7, i32 0, i32 4, !dbg !6879
  %bf.load = load i8, i8* %valid, align 8, !dbg !6879
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !6879
  %bf.clear = and i8 %bf.lshr, 1, !dbg !6879
  %bf.cast = zext i8 %bf.clear to i32, !dbg !6879
  %tobool2 = icmp ne i32 %bf.cast, 0, !dbg !6877
  br i1 %tobool2, label %if.end, label %if.then, !dbg !6880

if.then:                                          ; preds = %do.end
  br label %while.end, !dbg !6881

if.end:                                           ; preds = %do.end
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6882, !srcloc !6883
  %8 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !6884
  %td = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %8, i32 0, i32 1, !dbg !6885
  %9 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !6885
  %dmacount = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %9, i32 0, i32 0, !dbg !6886
  store i32* %dmacount, i32** %p.addr.i, align 8
  %10 = load i32*, i32** %p.addr.i, align 8, !dbg !6887
  %11 = load i32, i32* %10, align 4, !dbg !6888
  store i32 %11, i32* %req_dma_count, align 4, !dbg !6889
  %12 = load i32, i32* %req_dma_count, align 4, !dbg !6890
  %conv = zext i32 %12 to i64, !dbg !6890
  %and = and i64 %conv, 2147483648, !dbg !6892
  %cmp = icmp ne i64 %and, 0, !dbg !6893
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !6894

if.then5:                                         ; preds = %if.end
  br label %while.end, !dbg !6895

if.end6:                                          ; preds = %if.end
  %13 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !6896
  %td7 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %13, i32 0, i32 1, !dbg !6896
  %14 = load %struct.net2280_dma*, %struct.net2280_dma** %td7, align 8, !dbg !6896
  %dmadesc = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %14, i32 0, i32 2, !dbg !6896
  %15 = load i32, i32* %dmadesc, align 8, !dbg !6896
  %cmp8 = icmp eq i32 %15, 0, !dbg !6896
  %lnot10 = xor i1 %cmp8, true, !dbg !6896
  %lnot11 = xor i1 %lnot10, true, !dbg !6896
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !6896
  %conv12 = sext i32 %lnot.ext to i64, !dbg !6896
  %tobool13 = icmp ne i64 %conv12, 0, !dbg !6896
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !6898

if.then14:                                        ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %ep_dmacount, metadata !6899, metadata !DIExpression()), !dbg !6901
  %16 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6902
  %dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %16, i32 0, i32 3, !dbg !6903
  %17 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !6903
  %dmacount15 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %17, i32 0, i32 3, !dbg !6904
  %18 = bitcast i32* %dmacount15 to i8*, !dbg !6905
  %call16 = call i32 @readl(i8* %18) #12, !dbg !6906
  store i32 %call16, i32* %ep_dmacount, align 4, !dbg !6901
  %19 = load i32, i32* %ep_dmacount, align 4, !dbg !6907
  %and17 = and i32 %19, 16777215, !dbg !6909
  %tobool18 = icmp ne i32 %and17, 0, !dbg !6909
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !6910

if.then19:                                        ; preds = %if.then14
  br label %while.end, !dbg !6911

if.end20:                                         ; preds = %if.then14
  %20 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6912
  %21 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !6913
  %22 = load i32, i32* %req_dma_count, align 4, !dbg !6914
  call void @dma_done(%struct.net2280_ep* %20, %struct.net2280_request* %21, i32 %22, i32 0) #12, !dbg !6915
  %23 = load i32, i32* %num_completed, align 4, !dbg !6916
  %inc = add i32 %23, 1, !dbg !6916
  store i32 %inc, i32* %num_completed, align 4, !dbg !6916
  br label %while.end, !dbg !6917

if.else:                                          ; preds = %if.end6
  %24 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6918
  %is_in = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %24, i32 0, i32 10, !dbg !6920
  %bf.load21 = load i32, i32* %is_in, align 8, !dbg !6920
  %bf.lshr22 = lshr i32 %bf.load21, 24, !dbg !6920
  %bf.clear23 = and i32 %bf.lshr22, 1, !dbg !6920
  %tobool24 = icmp ne i32 %bf.clear23, 0, !dbg !6918
  br i1 %tobool24, label %if.end58, label %land.lhs.true, !dbg !6921

land.lhs.true:                                    ; preds = %if.else
  %25 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !6922
  %req25 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %25, i32 0, i32 0, !dbg !6923
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req25, i32 0, i32 1, !dbg !6924
  %26 = load i32, i32* %length, align 8, !dbg !6924
  %27 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6925
  %ep26 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %27, i32 0, i32 0, !dbg !6926
  %maxpacket = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep26, i32 0, i32 7, !dbg !6927
  %28 = bitcast [7 x i8]* %maxpacket to i56*, !dbg !6927
  %bf.load27 = load i56, i56* %28, align 2, !dbg !6927
  %bf.clear28 = and i56 %bf.load27, 65535, !dbg !6927
  %bf.cast29 = trunc i56 %bf.clear28 to i32, !dbg !6927
  %rem = urem i32 %26, %bf.cast29, !dbg !6928
  %tobool30 = icmp ne i32 %rem, 0, !dbg !6928
  br i1 %tobool30, label %land.lhs.true31, label %if.end58, !dbg !6929

land.lhs.true31:                                  ; preds = %land.lhs.true
  %29 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6930
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %29, i32 0, i32 6, !dbg !6931
  %30 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !6931
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %30, i32 0, i32 8, !dbg !6932
  %31 = load i64, i64* %quirks, align 8, !dbg !6932
  %and32 = and i64 %31, 8, !dbg !6933
  %tobool33 = icmp ne i64 %and32, 0, !dbg !6933
  br i1 %tobool33, label %if.end58, label %if.then34, !dbg !6934

if.then34:                                        ; preds = %land.lhs.true31
  call void @llvm.dbg.declare(metadata i32* %ep_stat, metadata !6935, metadata !DIExpression()), !dbg !6937
  %32 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6938
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %32, i32 0, i32 2, !dbg !6939
  %33 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !6939
  %ep_stat35 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %33, i32 0, i32 3, !dbg !6940
  %34 = bitcast i32* %ep_stat35 to i8*, !dbg !6941
  %call36 = call i32 @readl(i8* %34) #12, !dbg !6942
  store i32 %call36, i32* %ep_stat, align 4, !dbg !6937
  %35 = load i32, i32* %ep_stat, align 4, !dbg !6943
  %conv37 = zext i32 %35 to i64, !dbg !6943
  %and38 = and i64 %conv37, 16, !dbg !6945
  %cmp39 = icmp eq i64 %and38, 0, !dbg !6946
  br i1 %cmp39, label %if.then41, label %if.else46, !dbg !6947

if.then41:                                        ; preds = %if.then34
  %36 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6948
  %dev42 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %36, i32 0, i32 6, !dbg !6948
  %37 = load %struct.net2280*, %struct.net2280** %dev42, align 8, !dbg !6948
  %pdev = getelementptr inbounds %struct.net2280, %struct.net2280* %37, i32 0, i32 9, !dbg !6948
  %38 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6948
  %dev43 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 41, !dbg !6948
  %39 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6948
  %ep44 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %39, i32 0, i32 0, !dbg !6948
  %name = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep44, i32 0, i32 1, !dbg !6948
  %40 = load i8*, i8** %name, align 8, !dbg !6948
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev43, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0), i8* %40) #13, !dbg !6948
  %41 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !6950
  %req45 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %41, i32 0, i32 0, !dbg !6951
  %status = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req45, i32 0, i32 11, !dbg !6952
  store i32 -75, i32* %status, align 4, !dbg !6953
  br label %if.end57, !dbg !6954

if.else46:                                        ; preds = %if.then34
  call void @llvm.dbg.declare(metadata i32* %ep_avail, metadata !6955, metadata !DIExpression()), !dbg !6957
  %42 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6958
  %regs47 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %42, i32 0, i32 2, !dbg !6959
  %43 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs47, align 8, !dbg !6959
  %ep_avail48 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %43, i32 0, i32 4, !dbg !6960
  %44 = bitcast i32* %ep_avail48 to i8*, !dbg !6961
  %call49 = call i32 @readl(i8* %44) #12, !dbg !6962
  store i32 %call49, i32* %ep_avail, align 4, !dbg !6957
  %45 = load i32, i32* %ep_avail, align 4, !dbg !6963
  %tobool50 = icmp ne i32 %45, 0, !dbg !6963
  br i1 %tobool50, label %if.then51, label %if.end56, !dbg !6965

if.then51:                                        ; preds = %if.else46
  %46 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6966
  %out_overflow = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %46, i32 0, i32 10, !dbg !6968
  %bf.load52 = load i32, i32* %out_overflow, align 8, !dbg !6969
  %bf.clear53 = and i32 %bf.load52, -2097153, !dbg !6969
  %bf.set = or i32 %bf.clear53, 2097152, !dbg !6969
  store i32 %bf.set, i32* %out_overflow, align 8, !dbg !6969
  %47 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !6970
  %req54 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %47, i32 0, i32 0, !dbg !6971
  %status55 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req54, i32 0, i32 11, !dbg !6972
  store i32 -75, i32* %status55, align 4, !dbg !6973
  br label %if.end56, !dbg !6974

if.end56:                                         ; preds = %if.then51, %if.else46
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then41
  br label %if.end58, !dbg !6975

if.end58:                                         ; preds = %if.end57, %land.lhs.true31, %land.lhs.true, %if.else
  br label %if.end59

if.end59:                                         ; preds = %if.end58
  %48 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !6976
  %49 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !6977
  %50 = load i32, i32* %req_dma_count, align 4, !dbg !6978
  call void @dma_done(%struct.net2280_ep* %48, %struct.net2280_request* %49, i32 %50, i32 0) #12, !dbg !6979
  %51 = load i32, i32* %num_completed, align 4, !dbg !6980
  %inc60 = add i32 %51, 1, !dbg !6980
  store i32 %inc60, i32* %num_completed, align 4, !dbg !6980
  br label %while.cond, !dbg !6862, !llvm.loop !6981

while.end:                                        ; preds = %if.end20, %if.then19, %if.then5, %if.then, %while.cond
  %52 = load i32, i32* %num_completed, align 4, !dbg !6983
  ret i32 %52, !dbg !6984
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @handshake(i32* %ptr, i32 %mask, i32 %done, i32 %usec) #2 !dbg !6985 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca i32*, align 8
  %mask.addr = alloca i32, align 4
  %done.addr = alloca i32, align 4
  %usec.addr = alloca i32, align 4
  %result = alloca i32, align 4
  %ret = alloca i32, align 4
  %__timeout_us = alloca i64, align 8
  %__delay_us = alloca i64, align 8
  %__timeout = alloca i64, align 8
  %tmp = alloca i32, align 4
  store i32* %ptr, i32** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ptr.addr, metadata !6988, metadata !DIExpression()), !dbg !6989
  store i32 %mask, i32* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mask.addr, metadata !6990, metadata !DIExpression()), !dbg !6991
  store i32 %done, i32* %done.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %done.addr, metadata !6992, metadata !DIExpression()), !dbg !6993
  store i32 %usec, i32* %usec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %usec.addr, metadata !6994, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6996, metadata !DIExpression()), !dbg !6997
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6998, metadata !DIExpression()), !dbg !6999
  call void @llvm.dbg.declare(metadata i64* %__timeout_us, metadata !7000, metadata !DIExpression()), !dbg !7002
  %0 = load i32, i32* %usec.addr, align 4, !dbg !7002
  %conv = sext i32 %0 to i64, !dbg !7002
  store i64 %conv, i64* %__timeout_us, align 8, !dbg !7002
  call void @llvm.dbg.declare(metadata i64* %__delay_us, metadata !7003, metadata !DIExpression()), !dbg !7002
  store i64 1, i64* %__delay_us, align 8, !dbg !7002
  call void @llvm.dbg.declare(metadata i64* %__timeout, metadata !7004, metadata !DIExpression()), !dbg !7002
  %call = call i64 @ktime_get() #12, !dbg !7002
  %1 = load i64, i64* %__timeout_us, align 8, !dbg !7002
  %call1 = call i64 @ktime_add_us(i64 %call, i64 %1) #12, !dbg !7002
  store i64 %call1, i64* %__timeout, align 8, !dbg !7002
  br label %for.cond, !dbg !7002

for.cond:                                         ; preds = %if.end22, %entry
  %2 = load i32*, i32** %ptr.addr, align 8, !dbg !7005
  %3 = bitcast i32* %2 to i8*, !dbg !7005
  %call2 = call i32 @readl(i8* %3) #12, !dbg !7005
  store i32 %call2, i32* %result, align 4, !dbg !7005
  %4 = load i32, i32* %result, align 4, !dbg !7009
  %5 = load i32, i32* %mask.addr, align 4, !dbg !7009
  %and = and i32 %4, %5, !dbg !7009
  %6 = load i32, i32* %done.addr, align 4, !dbg !7009
  %cmp = icmp eq i32 %and, %6, !dbg !7009
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7009

lor.lhs.false:                                    ; preds = %for.cond
  %7 = load i32, i32* %result, align 4, !dbg !7009
  %cmp4 = icmp eq i32 %7, -1, !dbg !7009
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7005

if.then:                                          ; preds = %lor.lhs.false, %for.cond
  br label %for.end, !dbg !7009

if.end:                                           ; preds = %lor.lhs.false
  %8 = load i64, i64* %__timeout_us, align 8, !dbg !7011
  %tobool = icmp ne i64 %8, 0, !dbg !7011
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !7011

land.lhs.true:                                    ; preds = %if.end
  %call6 = call i64 @ktime_get() #12, !dbg !7011
  %9 = load i64, i64* %__timeout, align 8, !dbg !7011
  %call7 = call i32 @ktime_compare(i64 %call6, i64 %9) #12, !dbg !7011
  %cmp8 = icmp sgt i32 %call7, 0, !dbg !7011
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !7005

if.then10:                                        ; preds = %land.lhs.true
  %10 = load i32*, i32** %ptr.addr, align 8, !dbg !7013
  %11 = bitcast i32* %10 to i8*, !dbg !7013
  %call11 = call i32 @readl(i8* %11) #12, !dbg !7013
  store i32 %call11, i32* %result, align 4, !dbg !7013
  br label %for.end, !dbg !7013

if.end12:                                         ; preds = %land.lhs.true, %if.end
  %12 = load i64, i64* %__delay_us, align 8, !dbg !7015
  %tobool13 = icmp ne i64 %12, 0, !dbg !7015
  br i1 %tobool13, label %if.then14, label %if.end22, !dbg !7005

if.then14:                                        ; preds = %if.end12
  %13 = load i64, i64* %__delay_us, align 8, !dbg !7017
  %14 = call i1 @llvm.is.constant.i64(i64 %13), !dbg !7017
  br i1 %14, label %if.then15, label %if.else20, !dbg !7020

if.then15:                                        ; preds = %if.then14
  %15 = load i64, i64* %__delay_us, align 8, !dbg !7021
  %div = udiv i64 %15, 20000, !dbg !7021
  %cmp16 = icmp uge i64 %div, 1, !dbg !7021
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !7024

if.then18:                                        ; preds = %if.then15
  call void @__bad_udelay() #12, !dbg !7021
  br label %if.end19, !dbg !7021

if.else:                                          ; preds = %if.then15
  %16 = load i64, i64* %__delay_us, align 8, !dbg !7021
  %mul = mul i64 %16, 4295, !dbg !7021
  call void @__const_udelay(i64 %mul) #12, !dbg !7021
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then18
  br label %if.end21, !dbg !7024

if.else20:                                        ; preds = %if.then14
  %17 = load i64, i64* %__delay_us, align 8, !dbg !7025
  call void @__udelay(i64 %17) #12, !dbg !7025
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.end19
  br label %if.end22, !dbg !7015

if.end22:                                         ; preds = %if.end21, %if.end12
  br label %for.cond, !dbg !7027, !llvm.loop !7028

for.end:                                          ; preds = %if.then10, %if.then
  %18 = load i32, i32* %result, align 4, !dbg !7002
  %19 = load i32, i32* %mask.addr, align 4, !dbg !7002
  %and23 = and i32 %18, %19, !dbg !7002
  %20 = load i32, i32* %done.addr, align 4, !dbg !7002
  %cmp24 = icmp eq i32 %and23, %20, !dbg !7002
  br i1 %cmp24, label %lor.end, label %lor.rhs, !dbg !7002

lor.rhs:                                          ; preds = %for.end
  %21 = load i32, i32* %result, align 4, !dbg !7002
  %cmp26 = icmp eq i32 %21, -1, !dbg !7002
  br label %lor.end, !dbg !7002

lor.end:                                          ; preds = %lor.rhs, %for.end
  %22 = phi i1 [ true, %for.end ], [ %cmp26, %lor.rhs ]
  %23 = zext i1 %22 to i64, !dbg !7002
  %cond = select i1 %22, i32 0, i32 -110, !dbg !7002
  store i32 %cond, i32* %tmp, align 4, !dbg !7029
  %24 = load i32, i32* %tmp, align 4, !dbg !7002
  store i32 %24, i32* %ret, align 4, !dbg !7030
  %25 = load i32, i32* %result, align 4, !dbg !7031
  %cmp28 = icmp eq i32 %25, -1, !dbg !7033
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !7034

if.then30:                                        ; preds = %lor.end
  store i32 -19, i32* %retval, align 4, !dbg !7035
  br label %return, !dbg !7035

if.end31:                                         ; preds = %lor.end
  %26 = load i32, i32* %ret, align 4, !dbg !7036
  store i32 %26, i32* %retval, align 4, !dbg !7037
  br label %return, !dbg !7037

return:                                           ; preds = %if.end31, %if.then30
  %27 = load i32, i32* %retval, align 4, !dbg !7038
  ret i32 %27, !dbg !7038
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_add_us(i64 %kt, i64 %usec) #2 !dbg !7039 {
entry:
  %kt.addr = alloca i64, align 8
  %usec.addr = alloca i64, align 8
  store i64 %kt, i64* %kt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %kt.addr, metadata !7044, metadata !DIExpression()), !dbg !7045
  store i64 %usec, i64* %usec.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %usec.addr, metadata !7046, metadata !DIExpression()), !dbg !7047
  %0 = load i64, i64* %kt.addr, align 8, !dbg !7048
  %1 = load i64, i64* %usec.addr, align 8, !dbg !7048
  %mul = mul i64 %1, 1000, !dbg !7048
  %add = add i64 %0, %mul, !dbg !7048
  ret i64 %add, !dbg !7049
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ktime_compare(i64 %cmp1, i64 %cmp2) #2 !dbg !7050 {
entry:
  %retval = alloca i32, align 4
  %cmp1.addr = alloca i64, align 8
  %cmp2.addr = alloca i64, align 8
  store i64 %cmp1, i64* %cmp1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp1.addr, metadata !7053, metadata !DIExpression()), !dbg !7054
  store i64 %cmp2, i64* %cmp2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp2.addr, metadata !7055, metadata !DIExpression()), !dbg !7056
  %0 = load i64, i64* %cmp1.addr, align 8, !dbg !7057
  %1 = load i64, i64* %cmp2.addr, align 8, !dbg !7059
  %cmp = icmp slt i64 %0, %1, !dbg !7060
  br i1 %cmp, label %if.then, label %if.end, !dbg !7061

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !7062
  br label %return, !dbg !7062

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %cmp1.addr, align 8, !dbg !7063
  %3 = load i64, i64* %cmp2.addr, align 8, !dbg !7065
  %cmp3 = icmp sgt i64 %2, %3, !dbg !7066
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7067

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !7068
  br label %return, !dbg !7068

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7069
  br label %return, !dbg !7069

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !7070
  ret i32 %4, !dbg !7070
}

; Function Attrs: noredzone
declare dso_local void @__bad_udelay() #1

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #1

; Function Attrs: noredzone
declare dso_local void @__udelay(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_done(%struct.net2280_ep* %ep, %struct.net2280_request* %req, i32 %dmacount, i32 %status) #2 !dbg !7071 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %req.addr = alloca %struct.net2280_request*, align 8
  %dmacount.addr = alloca i32, align 4
  %status.addr = alloca i32, align 4
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !7074, metadata !DIExpression()), !dbg !7075
  store %struct.net2280_request* %req, %struct.net2280_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %req.addr, metadata !7076, metadata !DIExpression()), !dbg !7077
  store i32 %dmacount, i32* %dmacount.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dmacount.addr, metadata !7078, metadata !DIExpression()), !dbg !7079
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !7080, metadata !DIExpression()), !dbg !7081
  %0 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !7082
  %req1 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %0, i32 0, i32 0, !dbg !7083
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req1, i32 0, i32 1, !dbg !7084
  %1 = load i32, i32* %length, align 8, !dbg !7084
  %2 = load i32, i32* %dmacount.addr, align 4, !dbg !7085
  %and = and i32 16777215, %2, !dbg !7086
  %sub = sub i32 %1, %and, !dbg !7087
  %3 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !7088
  %req2 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %3, i32 0, i32 0, !dbg !7089
  %actual = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req2, i32 0, i32 12, !dbg !7090
  store i32 %sub, i32* %actual, align 8, !dbg !7091
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !7092
  %5 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !7093
  %6 = load i32, i32* %status.addr, align 4, !dbg !7094
  call void @done(%struct.net2280_ep* %4, %struct.net2280_request* %5, i32 %6) #12, !dbg !7095
  ret void, !dbg !7096
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #2 !dbg !7097 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7100, metadata !DIExpression()), !dbg !7101
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7102
  call void @__list_del_entry(%struct.list_head* %0) #12, !dbg !7103
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7104
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #12, !dbg !7105
  ret void, !dbg !7106
}

; Function Attrs: noredzone
declare dso_local void @usb_gadget_unmap_request(%struct.usb_gadget*, %struct.usb_request*, i32) #1

; Function Attrs: noredzone
declare dso_local void @usb_gadget_giveback_request(%struct.usb_ep*, %struct.usb_request*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #2 !dbg !7107 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7108, metadata !DIExpression()), !dbg !7109
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7110
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #12, !dbg !7112
  br i1 %call, label %if.end, label %if.then, !dbg !7113

if.then:                                          ; preds = %entry
  br label %return, !dbg !7114

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7115
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7116
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7116
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7117
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7118
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7118
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #12, !dbg !7119
  br label %return, !dbg !7120

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7120
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #2 !dbg !7121 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !7122, metadata !DIExpression()), !dbg !7123
  br label %do.body, !dbg !7124

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7125

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !7127

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !7125

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7129
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7129
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !7129
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !7129
  br label %do.end3, !dbg !7129

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !7125

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7131
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7132
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !7133
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !7134
  ret void, !dbg !7135
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #2 !dbg !7136 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7139, metadata !DIExpression()), !dbg !7140
  ret i1 true, !dbg !7141
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !7142 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7145, metadata !DIExpression()), !dbg !7146
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7147, metadata !DIExpression()), !dbg !7148
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7149
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7150
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7151
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !7152
  br label %do.body, !dbg !7153

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !7154

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !7156

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !7154

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7158
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7158
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7158
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !7158
  br label %do.end5, !dbg !7158

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !7154

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !7160
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @net2280_led_active(%struct.net2280* %dev, i32 %is_active) #2 !dbg !7161 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  %is_active.addr = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !7164, metadata !DIExpression()), !dbg !7165
  store i32 %is_active, i32* %is_active.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_active.addr, metadata !7166, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.declare(metadata i32* %val, metadata !7168, metadata !DIExpression()), !dbg !7169
  %0 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7170
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %0, i32 0, i32 10, !dbg !7171
  %1 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !7171
  %gpioctl = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %1, i32 0, i32 20, !dbg !7172
  %2 = bitcast i32* %gpioctl to i8*, !dbg !7173
  %call = call i32 @readl(i8* %2) #12, !dbg !7174
  store i32 %call, i32* %val, align 4, !dbg !7169
  %3 = load i32, i32* %is_active.addr, align 4, !dbg !7175
  %tobool = icmp ne i32 %3, 0, !dbg !7175
  br i1 %tobool, label %if.then, label %if.else, !dbg !7177

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %val, align 4, !dbg !7178
  %or = or i32 %4, 2, !dbg !7178
  store i32 %or, i32* %val, align 4, !dbg !7178
  br label %if.end, !dbg !7179

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %val, align 4, !dbg !7180
  %and = and i32 %5, -3, !dbg !7180
  store i32 %and, i32* %val, align 4, !dbg !7180
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %val, align 4, !dbg !7181
  %7 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7182
  %regs1 = getelementptr inbounds %struct.net2280, %struct.net2280* %7, i32 0, i32 10, !dbg !7183
  %8 = load %struct.net2280_regs*, %struct.net2280_regs** %regs1, align 8, !dbg !7183
  %gpioctl2 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %8, i32 0, i32 20, !dbg !7184
  %9 = bitcast i32* %gpioctl2 to i8*, !dbg !7185
  call void @writel(i32 %6, i8* %9) #12, !dbg !7186
  ret void, !dbg !7187
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @defect7374_enable_data_eps_zero(%struct.net2280* %dev) #2 !dbg !7188 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  %tmp = alloca i32, align 4
  %tmp_reg = alloca i32, align 4
  %scratch = alloca i32, align 4
  %i = alloca i32, align 4
  %ep_sel = alloca i8, align 1
  %__ret_warn_on = alloca i32, align 4
  %tmp13 = alloca i64, align 8
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !7189, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7191, metadata !DIExpression()), !dbg !7192
  store i32 0, i32* %tmp, align 4, !dbg !7192
  call void @llvm.dbg.declare(metadata i32* %tmp_reg, metadata !7193, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.declare(metadata i32* %scratch, metadata !7195, metadata !DIExpression()), !dbg !7196
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7197, metadata !DIExpression()), !dbg !7198
  call void @llvm.dbg.declare(metadata i8* %ep_sel, metadata !7199, metadata !DIExpression()), !dbg !7200
  %0 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7201
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %0, i32 0, i32 10, !dbg !7202
  %1 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !7202
  %call = call i32 @get_idx_reg(%struct.net2280_regs* %1, i32 11) #12, !dbg !7203
  store i32 %call, i32* %scratch, align 4, !dbg !7204
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7205, metadata !DIExpression()), !dbg !7207
  %2 = load i32, i32* %scratch, align 4, !dbg !7207
  %and = and i32 %2, -268435456, !dbg !7207
  %cmp = icmp eq i32 %and, 805306368, !dbg !7207
  %lnot = xor i1 %cmp, true, !dbg !7207
  %lnot1 = xor i1 %lnot, true, !dbg !7207
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7207
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7207
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !7208
  %tobool = icmp ne i32 %3, 0, !dbg !7208
  %lnot2 = xor i1 %tobool, true, !dbg !7208
  %lnot4 = xor i1 %lnot2, true, !dbg !7208
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !7208
  %conv = sext i32 %lnot.ext5 to i64, !dbg !7208
  %tobool6 = icmp ne i64 %conv, 0, !dbg !7208
  br i1 %tobool6, label %if.then, label %if.end, !dbg !7207

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7208

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !7210

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !7212

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !7210

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i32 1989, i32 2305, i64 12) #10, !dbg !7214, !srcloc !7216
  br label %do.end9, !dbg !7214

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 262) #10, !dbg !7217, !srcloc !7219
  br label %do.body10, !dbg !7210

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !7220

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !7210

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !7210

if.end:                                           ; preds = %do.end12, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !7207
  %tobool14 = icmp ne i32 %4, 0, !dbg !7207
  %lnot15 = xor i1 %tobool14, true, !dbg !7207
  %lnot17 = xor i1 %lnot15, true, !dbg !7207
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !7207
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !7207
  store i64 %conv19, i64* %tmp13, align 8, !dbg !7208
  %5 = load i64, i64* %tmp13, align 8, !dbg !7207
  %6 = load i32, i32* %scratch, align 4, !dbg !7222
  %and20 = and i32 %6, 268435455, !dbg !7222
  store i32 %and20, i32* %scratch, align 4, !dbg !7222
  %7 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7223
  %pdev = getelementptr inbounds %struct.net2280, %struct.net2280* %7, i32 0, i32 9, !dbg !7223
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7223
  %dev21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !7223
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev21, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13, i64 0, i64 0)) #13, !dbg !7223
  %9 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7224
  %pdev22 = getelementptr inbounds %struct.net2280, %struct.net2280* %9, i32 0, i32 9, !dbg !7224
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev22, align 8, !dbg !7224
  %dev23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !7224
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev23, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.14, i64 0, i64 0)) #13, !dbg !7224
  %11 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7225
  %enhanced_mode = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 6, !dbg !7226
  %12 = load i32, i32* %enhanced_mode, align 4, !dbg !7226
  %tobool24 = icmp ne i32 %12, 0, !dbg !7227
  %13 = zext i1 %tobool24 to i64, !dbg !7227
  %cond = select i1 %tobool24, i64 17408, i64 1024, !dbg !7227
  %or = or i64 8832, %cond, !dbg !7228
  %conv25 = trunc i64 %or to i32, !dbg !7229
  store i32 %conv25, i32* %tmp, align 4, !dbg !7230
  store i32 1, i32* %i, align 4, !dbg !7231
  br label %for.cond, !dbg !7233

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i, align 4, !dbg !7234
  %cmp26 = icmp slt i32 %14, 5, !dbg !7236
  br i1 %cmp26, label %for.body, label %for.end, !dbg !7237

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %tmp, align 4, !dbg !7238
  %16 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7239
  %ep = getelementptr inbounds %struct.net2280, %struct.net2280* %16, i32 0, i32 2, !dbg !7240
  %17 = load i32, i32* %i, align 4, !dbg !7241
  %idxprom = sext i32 %17 to i64, !dbg !7239
  %arrayidx = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep, i64 0, i64 %idxprom, !dbg !7239
  %cfg = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx, i32 0, i32 1, !dbg !7242
  %18 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %cfg, align 8, !dbg !7242
  %ep_cfg = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %18, i32 0, i32 0, !dbg !7243
  %19 = bitcast i32* %ep_cfg to i8*, !dbg !7244
  call void @writel(i32 %15, i8* %19) #12, !dbg !7245
  br label %for.inc, !dbg !7245

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !7246
  %inc = add i32 %20, 1, !dbg !7246
  store i32 %inc, i32* %i, align 4, !dbg !7246
  br label %for.cond, !dbg !7247, !llvm.loop !7248

for.end:                                          ; preds = %for.cond
  store i32 1024, i32* %tmp, align 4, !dbg !7250
  %21 = load i32, i32* %tmp, align 4, !dbg !7251
  %22 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7252
  %dep = getelementptr inbounds %struct.net2280, %struct.net2280* %22, i32 0, i32 15, !dbg !7253
  %23 = load %struct.net2280_dep_regs*, %struct.net2280_dep_regs** %dep, align 8, !dbg !7253
  %arrayidx28 = getelementptr %struct.net2280_dep_regs, %struct.net2280_dep_regs* %23, i64 1, !dbg !7252
  %dep_cfg = getelementptr inbounds %struct.net2280_dep_regs, %struct.net2280_dep_regs* %arrayidx28, i32 0, i32 0, !dbg !7254
  %24 = bitcast i32* %dep_cfg to i8*, !dbg !7255
  call void @writel(i32 %21, i8* %24) #12, !dbg !7256
  %25 = load i32, i32* %tmp, align 4, !dbg !7257
  %26 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7258
  %dep29 = getelementptr inbounds %struct.net2280, %struct.net2280* %26, i32 0, i32 15, !dbg !7259
  %27 = load %struct.net2280_dep_regs*, %struct.net2280_dep_regs** %dep29, align 8, !dbg !7259
  %arrayidx30 = getelementptr %struct.net2280_dep_regs, %struct.net2280_dep_regs* %27, i64 3, !dbg !7258
  %dep_cfg31 = getelementptr inbounds %struct.net2280_dep_regs, %struct.net2280_dep_regs* %arrayidx30, i32 0, i32 0, !dbg !7260
  %28 = bitcast i32* %dep_cfg31 to i8*, !dbg !7261
  call void @writel(i32 %25, i8* %28) #12, !dbg !7262
  %29 = load i32, i32* %tmp, align 4, !dbg !7263
  %30 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7264
  %dep32 = getelementptr inbounds %struct.net2280, %struct.net2280* %30, i32 0, i32 15, !dbg !7265
  %31 = load %struct.net2280_dep_regs*, %struct.net2280_dep_regs** %dep32, align 8, !dbg !7265
  %arrayidx33 = getelementptr %struct.net2280_dep_regs, %struct.net2280_dep_regs* %31, i64 4, !dbg !7264
  %dep_cfg34 = getelementptr inbounds %struct.net2280_dep_regs, %struct.net2280_dep_regs* %arrayidx33, i32 0, i32 0, !dbg !7266
  %32 = bitcast i32* %dep_cfg34 to i8*, !dbg !7267
  call void @writel(i32 %29, i8* %32) #12, !dbg !7268
  %33 = load i32, i32* %tmp, align 4, !dbg !7269
  %34 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7270
  %dep35 = getelementptr inbounds %struct.net2280, %struct.net2280* %34, i32 0, i32 15, !dbg !7271
  %35 = load %struct.net2280_dep_regs*, %struct.net2280_dep_regs** %dep35, align 8, !dbg !7271
  %arrayidx36 = getelementptr %struct.net2280_dep_regs, %struct.net2280_dep_regs* %35, i64 5, !dbg !7270
  %dep_cfg37 = getelementptr inbounds %struct.net2280_dep_regs, %struct.net2280_dep_regs* %arrayidx36, i32 0, i32 0, !dbg !7272
  %36 = bitcast i32* %dep_cfg37 to i8*, !dbg !7273
  call void @writel(i32 %33, i8* %36) #12, !dbg !7274
  store i8 0, i8* %ep_sel, align 1, !dbg !7275
  br label %for.cond38, !dbg !7277

for.cond38:                                       ; preds = %for.inc96, %for.end
  %37 = load i8, i8* %ep_sel, align 1, !dbg !7278
  %conv39 = zext i8 %37 to i32, !dbg !7278
  %cmp40 = icmp sle i32 %conv39, 21, !dbg !7280
  br i1 %cmp40, label %for.body42, label %for.end98, !dbg !7281

for.body42:                                       ; preds = %for.cond38
  %38 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7282
  %plregs = getelementptr inbounds %struct.net2280, %struct.net2280* %38, i32 0, i32 18, !dbg !7284
  %39 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs, align 8, !dbg !7284
  %pl_ep_ctrl = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %39, i32 0, i32 4, !dbg !7285
  %40 = bitcast i32* %pl_ep_ctrl to i8*, !dbg !7286
  %call43 = call i32 @readl(i8* %40) #12, !dbg !7287
  store i32 %call43, i32* %tmp_reg, align 4, !dbg !7288
  %41 = load i32, i32* %tmp_reg, align 4, !dbg !7289
  %and44 = and i32 %41, -32, !dbg !7290
  %42 = load i8, i8* %ep_sel, align 1, !dbg !7291
  %conv45 = zext i8 %42 to i32, !dbg !7291
  %or46 = or i32 %and44, %conv45, !dbg !7292
  %43 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7293
  %plregs47 = getelementptr inbounds %struct.net2280, %struct.net2280* %43, i32 0, i32 18, !dbg !7294
  %44 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs47, align 8, !dbg !7294
  %pl_ep_ctrl48 = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %44, i32 0, i32 4, !dbg !7295
  %45 = bitcast i32* %pl_ep_ctrl48 to i8*, !dbg !7296
  call void @writel(i32 %or46, i8* %45) #12, !dbg !7297
  %46 = load i8, i8* %ep_sel, align 1, !dbg !7298
  %conv49 = zext i8 %46 to i32, !dbg !7298
  %cmp50 = icmp eq i32 %conv49, 1, !dbg !7300
  br i1 %cmp50, label %if.then52, label %if.end61, !dbg !7301

if.then52:                                        ; preds = %for.body42
  %47 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7302
  %plregs53 = getelementptr inbounds %struct.net2280, %struct.net2280* %47, i32 0, i32 18, !dbg !7304
  %48 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs53, align 8, !dbg !7304
  %pl_ep_ctrl54 = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %48, i32 0, i32 4, !dbg !7305
  %49 = bitcast i32* %pl_ep_ctrl54 to i8*, !dbg !7306
  %call55 = call i32 @readl(i8* %49) #12, !dbg !7307
  %conv56 = zext i32 %call55 to i64, !dbg !7307
  %or57 = or i64 %conv56, 1048576, !dbg !7308
  %conv58 = trunc i64 %or57 to i32, !dbg !7309
  store i32 %conv58, i32* %tmp, align 4, !dbg !7310
  %50 = load i32, i32* %tmp, align 4, !dbg !7311
  %51 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7312
  %plregs59 = getelementptr inbounds %struct.net2280, %struct.net2280* %51, i32 0, i32 18, !dbg !7313
  %52 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs59, align 8, !dbg !7313
  %pl_ep_ctrl60 = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %52, i32 0, i32 4, !dbg !7314
  %53 = bitcast i32* %pl_ep_ctrl60 to i8*, !dbg !7315
  call void @writel(i32 %50, i8* %53) #12, !dbg !7316
  br label %for.inc96, !dbg !7317

if.end61:                                         ; preds = %for.body42
  %54 = load i8, i8* %ep_sel, align 1, !dbg !7318
  %conv62 = zext i8 %54 to i32, !dbg !7318
  %cmp63 = icmp eq i32 %conv62, 0, !dbg !7320
  br i1 %cmp63, label %if.then79, label %lor.lhs.false, !dbg !7321

lor.lhs.false:                                    ; preds = %if.end61
  %55 = load i8, i8* %ep_sel, align 1, !dbg !7322
  %conv65 = zext i8 %55 to i32, !dbg !7322
  %cmp66 = icmp sgt i32 %conv65, 9, !dbg !7323
  br i1 %cmp66, label %land.lhs.true, label %lor.lhs.false71, !dbg !7324

land.lhs.true:                                    ; preds = %lor.lhs.false
  %56 = load i8, i8* %ep_sel, align 1, !dbg !7325
  %conv68 = zext i8 %56 to i32, !dbg !7325
  %cmp69 = icmp slt i32 %conv68, 14, !dbg !7326
  br i1 %cmp69, label %if.then79, label %lor.lhs.false71, !dbg !7327

lor.lhs.false71:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %57 = load i8, i8* %ep_sel, align 1, !dbg !7328
  %conv72 = zext i8 %57 to i32, !dbg !7328
  %cmp73 = icmp eq i32 %conv72, 18, !dbg !7329
  br i1 %cmp73, label %if.then79, label %lor.lhs.false75, !dbg !7330

lor.lhs.false75:                                  ; preds = %lor.lhs.false71
  %58 = load i8, i8* %ep_sel, align 1, !dbg !7331
  %conv76 = zext i8 %58 to i32, !dbg !7331
  %cmp77 = icmp eq i32 %conv76, 20, !dbg !7332
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !7333

if.then79:                                        ; preds = %lor.lhs.false75, %lor.lhs.false71, %land.lhs.true, %if.end61
  br label %for.inc96, !dbg !7334

if.end80:                                         ; preds = %lor.lhs.false75
  %59 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7335
  %plregs81 = getelementptr inbounds %struct.net2280, %struct.net2280* %59, i32 0, i32 18, !dbg !7336
  %60 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs81, align 8, !dbg !7336
  %pl_ep_cfg_4 = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %60, i32 0, i32 12, !dbg !7337
  %61 = bitcast i32* %pl_ep_cfg_4 to i8*, !dbg !7338
  %call82 = call i32 @readl(i8* %61) #12, !dbg !7339
  %conv83 = zext i32 %call82 to i64, !dbg !7339
  %or84 = or i64 %conv83, 64, !dbg !7340
  %conv85 = trunc i64 %or84 to i32, !dbg !7341
  store i32 %conv85, i32* %tmp, align 4, !dbg !7342
  %62 = load i32, i32* %tmp, align 4, !dbg !7343
  %63 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7344
  %plregs86 = getelementptr inbounds %struct.net2280, %struct.net2280* %63, i32 0, i32 18, !dbg !7345
  %64 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs86, align 8, !dbg !7345
  %pl_ep_cfg_487 = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %64, i32 0, i32 12, !dbg !7346
  %65 = bitcast i32* %pl_ep_cfg_487 to i8*, !dbg !7347
  call void @writel(i32 %62, i8* %65) #12, !dbg !7348
  %66 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7349
  %plregs88 = getelementptr inbounds %struct.net2280, %struct.net2280* %66, i32 0, i32 18, !dbg !7350
  %67 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs88, align 8, !dbg !7350
  %pl_ep_ctrl89 = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %67, i32 0, i32 4, !dbg !7351
  %68 = bitcast i32* %pl_ep_ctrl89 to i8*, !dbg !7352
  %call90 = call i32 @readl(i8* %68) #12, !dbg !7353
  %conv91 = zext i32 %call90 to i64, !dbg !7353
  %and92 = and i64 %conv91, -65537, !dbg !7354
  %conv93 = trunc i64 %and92 to i32, !dbg !7353
  store i32 %conv93, i32* %tmp, align 4, !dbg !7355
  %69 = load i32, i32* %tmp, align 4, !dbg !7356
  %70 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7357
  %plregs94 = getelementptr inbounds %struct.net2280, %struct.net2280* %70, i32 0, i32 18, !dbg !7358
  %71 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs94, align 8, !dbg !7358
  %pl_ep_ctrl95 = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %71, i32 0, i32 4, !dbg !7359
  %72 = bitcast i32* %pl_ep_ctrl95 to i8*, !dbg !7360
  call void @writel(i32 %69, i8* %72) #12, !dbg !7361
  br label %for.inc96, !dbg !7362

for.inc96:                                        ; preds = %if.end80, %if.then79, %if.then52
  %73 = load i8, i8* %ep_sel, align 1, !dbg !7363
  %inc97 = add i8 %73, 1, !dbg !7363
  store i8 %inc97, i8* %ep_sel, align 1, !dbg !7363
  br label %for.cond38, !dbg !7364, !llvm.loop !7365

for.end98:                                        ; preds = %for.cond38
  %74 = load i32, i32* %scratch, align 4, !dbg !7367
  %conv99 = zext i32 %74 to i64, !dbg !7367
  %or100 = or i64 %conv99, 268435456, !dbg !7367
  %conv101 = trunc i64 %or100 to i32, !dbg !7367
  store i32 %conv101, i32* %scratch, align 4, !dbg !7367
  %75 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7368
  %regs102 = getelementptr inbounds %struct.net2280, %struct.net2280* %75, i32 0, i32 10, !dbg !7369
  %76 = load %struct.net2280_regs*, %struct.net2280_regs** %regs102, align 8, !dbg !7369
  %77 = load i32, i32* %scratch, align 4, !dbg !7370
  call void @set_idx_reg(%struct.net2280_regs* %76, i32 11, i32 %77) #12, !dbg !7371
  ret void, !dbg !7372
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_idx_reg(%struct.net2280_regs* %regs, i32 %index, i32 %value) #2 !dbg !7373 {
entry:
  %regs.addr = alloca %struct.net2280_regs*, align 8
  %index.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.net2280_regs* %regs, %struct.net2280_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_regs** %regs.addr, metadata !7376, metadata !DIExpression()), !dbg !7377
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7378, metadata !DIExpression()), !dbg !7379
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !7380, metadata !DIExpression()), !dbg !7381
  %0 = load i32, i32* %index.addr, align 4, !dbg !7382
  %1 = load %struct.net2280_regs*, %struct.net2280_regs** %regs.addr, align 8, !dbg !7383
  %idxaddr = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %1, i32 0, i32 12, !dbg !7384
  %2 = bitcast i32* %idxaddr to i8*, !dbg !7385
  call void @writel(i32 %0, i8* %2) #12, !dbg !7386
  %3 = load i32, i32* %value.addr, align 4, !dbg !7387
  %4 = load %struct.net2280_regs*, %struct.net2280_regs** %regs.addr, align 8, !dbg !7388
  %idxdata = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %4, i32 0, i32 13, !dbg !7389
  %5 = bitcast i32* %idxdata to i8*, !dbg !7390
  call void @writel(i32 %3, i8* %5) #12, !dbg !7391
  ret void, !dbg !7392
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %epd) #2 !dbg !7393 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !7396, metadata !DIExpression()), !dbg !7397
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !7398
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3, !dbg !7399
  %1 = load i8, i8* %bmAttributes, align 1, !dbg !7399
  %conv = zext i8 %1 to i32, !dbg !7398
  %and = and i32 %conv, 3, !dbg !7400
  ret i32 %and, !dbg !7401
}

; Function Attrs: noredzone
declare dso_local %struct.usb_ep* @gadget_find_ep_by_name(%struct.usb_gadget*, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @usb_gadget_ep_match_desc(%struct.usb_gadget*, %struct.usb_ep*, %struct.usb_endpoint_descriptor*, %struct.usb_ss_ep_comp_descriptor*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %epd) #2 !dbg !7402 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !7403, metadata !DIExpression()), !dbg !7404
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !7405
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 2, !dbg !7406
  %1 = load i8, i8* %bEndpointAddress, align 1, !dbg !7406
  %conv = zext i8 %1 to i32, !dbg !7405
  %and = and i32 %conv, 128, !dbg !7407
  %cmp = icmp eq i32 %and, 128, !dbg !7408
  %conv1 = zext i1 %cmp to i32, !dbg !7408
  ret i32 %conv1, !dbg !7409
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_num(%struct.usb_endpoint_descriptor* %epd) #2 !dbg !7410 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !7411, metadata !DIExpression()), !dbg !7412
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !7413
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 2, !dbg !7414
  %1 = load i8, i8* %bEndpointAddress, align 1, !dbg !7414
  %conv = zext i8 %1 to i32, !dbg !7413
  %and = and i32 %conv, 15, !dbg !7415
  ret i32 %and, !dbg !7416
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_reset_228x(%struct.net2280* %dev) #2 !dbg !7417 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  %tmp = alloca i32, align 4
  %ep = alloca %struct.net2280_ep*, align 8
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !7418, metadata !DIExpression()), !dbg !7419
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7420, metadata !DIExpression()), !dbg !7421
  %0 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7422
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %0, i32 0, i32 0, !dbg !7423
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !7424
  store i32 0, i32* %speed, align 8, !dbg !7425
  %1 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7426
  %usb = getelementptr inbounds %struct.net2280, %struct.net2280* %1, i32 0, i32 11, !dbg !7427
  %2 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb, align 8, !dbg !7427
  %usbctl = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %2, i32 0, i32 3, !dbg !7428
  %3 = bitcast i32* %usbctl to i8*, !dbg !7429
  %call = call i32 @readl(i8* %3) #12, !dbg !7430
  %4 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7431
  call void @net2280_led_init(%struct.net2280* %4) #12, !dbg !7432
  %5 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7433
  %usb1 = getelementptr inbounds %struct.net2280, %struct.net2280* %5, i32 0, i32 11, !dbg !7434
  %6 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb1, align 8, !dbg !7434
  %stdrsp = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %6, i32 0, i32 0, !dbg !7435
  %7 = bitcast i32* %stdrsp to i8*, !dbg !7436
  call void @writel(i32 0, i8* %7) #12, !dbg !7437
  %8 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7438
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %8, i32 0, i32 10, !dbg !7439
  %9 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !7439
  %pciirqenb0 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %9, i32 0, i32 4, !dbg !7440
  %10 = bitcast i32* %pciirqenb0 to i8*, !dbg !7441
  call void @writel(i32 0, i8* %10) #12, !dbg !7442
  %11 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7443
  %regs2 = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 10, !dbg !7444
  %12 = load %struct.net2280_regs*, %struct.net2280_regs** %regs2, align 8, !dbg !7444
  %pciirqenb1 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %12, i32 0, i32 5, !dbg !7445
  %13 = bitcast i32* %pciirqenb1 to i8*, !dbg !7446
  call void @writel(i32 0, i8* %13) #12, !dbg !7447
  store i32 0, i32* %tmp, align 4, !dbg !7448
  br label %for.cond, !dbg !7450

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %tmp, align 4, !dbg !7451
  %cmp = icmp ult i32 %14, 4, !dbg !7453
  br i1 %cmp, label %for.body, label %for.end, !dbg !7454

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !7455, metadata !DIExpression()), !dbg !7457
  %15 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7458
  %ep3 = getelementptr inbounds %struct.net2280, %struct.net2280* %15, i32 0, i32 2, !dbg !7459
  %16 = load i32, i32* %tmp, align 4, !dbg !7460
  %add = add i32 %16, 1, !dbg !7461
  %idxprom = zext i32 %add to i64, !dbg !7458
  %arrayidx = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep3, i64 0, i64 %idxprom, !dbg !7458
  store %struct.net2280_ep* %arrayidx, %struct.net2280_ep** %ep, align 8, !dbg !7457
  %17 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7462
  %dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %17, i32 0, i32 3, !dbg !7464
  %18 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !7464
  %tobool = icmp ne %struct.net2280_dma_regs* %18, null, !dbg !7462
  br i1 %tobool, label %if.then, label %if.end, !dbg !7465

if.then:                                          ; preds = %for.body
  %19 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7466
  call void @abort_dma(%struct.net2280_ep* %19) #12, !dbg !7467
  br label %if.end, !dbg !7467

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7468

for.inc:                                          ; preds = %if.end
  %20 = load i32, i32* %tmp, align 4, !dbg !7469
  %inc = add i32 %20, 1, !dbg !7469
  store i32 %inc, i32* %tmp, align 4, !dbg !7469
  br label %for.cond, !dbg !7470, !llvm.loop !7471

for.end:                                          ; preds = %for.cond
  %21 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7473
  %regs4 = getelementptr inbounds %struct.net2280, %struct.net2280* %21, i32 0, i32 10, !dbg !7474
  %22 = load %struct.net2280_regs*, %struct.net2280_regs** %regs4, align 8, !dbg !7474
  %irqstat0 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %22, i32 0, i32 10, !dbg !7475
  %23 = bitcast i32* %irqstat0 to i8*, !dbg !7476
  call void @writel(i32 -1, i8* %23) #12, !dbg !7477
  %24 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7478
  %regs5 = getelementptr inbounds %struct.net2280, %struct.net2280* %24, i32 0, i32 10, !dbg !7479
  %25 = load %struct.net2280_regs*, %struct.net2280_regs** %regs5, align 8, !dbg !7479
  %irqstat1 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %25, i32 0, i32 11, !dbg !7480
  %26 = bitcast i32* %irqstat1 to i8*, !dbg !7481
  call void @writel(i32 -9, i8* %26) #12, !dbg !7482
  %27 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7483
  %regs6 = getelementptr inbounds %struct.net2280, %struct.net2280* %27, i32 0, i32 10, !dbg !7484
  %28 = load %struct.net2280_regs*, %struct.net2280_regs** %regs6, align 8, !dbg !7484
  %devinit = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %28, i32 0, i32 0, !dbg !7485
  %29 = bitcast i32* %devinit to i8*, !dbg !7486
  %call7 = call i32 @readl(i8* %29) #12, !dbg !7487
  %conv = zext i32 %call7 to i64, !dbg !7487
  %or = or i64 %conv, 32, !dbg !7488
  %or8 = or i64 %or, 16, !dbg !7489
  %or9 = or i64 %or8, 2, !dbg !7490
  %or10 = or i64 %or9, 1, !dbg !7491
  %conv11 = trunc i64 %or10 to i32, !dbg !7487
  store i32 %conv11, i32* %tmp, align 4, !dbg !7492
  %30 = load i32, i32* %tmp, align 4, !dbg !7493
  %31 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7494
  %regs12 = getelementptr inbounds %struct.net2280, %struct.net2280* %31, i32 0, i32 10, !dbg !7495
  %32 = load %struct.net2280_regs*, %struct.net2280_regs** %regs12, align 8, !dbg !7495
  %devinit13 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %32, i32 0, i32 0, !dbg !7496
  %33 = bitcast i32* %devinit13 to i8*, !dbg !7497
  call void @writel(i32 %30, i8* %33) #12, !dbg !7498
  %34 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7499
  %35 = load i16, i16* @fifo_mode, align 2, !dbg !7500
  %conv14 = zext i16 %35 to i32, !dbg !7500
  %cmp15 = icmp sle i32 %conv14, 2, !dbg !7501
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !7502

cond.true:                                        ; preds = %for.end
  %36 = load i16, i16* @fifo_mode, align 2, !dbg !7503
  %conv17 = zext i16 %36 to i32, !dbg !7503
  br label %cond.end, !dbg !7502

cond.false:                                       ; preds = %for.end
  br label %cond.end, !dbg !7502

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv17, %cond.true ], [ 0, %cond.false ], !dbg !7502
  call void @set_fifo_mode(%struct.net2280* %34, i32 %cond) #12, !dbg !7504
  ret void, !dbg !7505
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_reset_338x(%struct.net2280* %dev) #2 !dbg !7506 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  %tmp = alloca i32, align 4
  %ep = alloca %struct.net2280_ep*, align 8
  %dma = alloca %struct.net2280_dma_regs*, align 8
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !7507, metadata !DIExpression()), !dbg !7508
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7509, metadata !DIExpression()), !dbg !7510
  %0 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7511
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %0, i32 0, i32 0, !dbg !7512
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !7513
  store i32 0, i32* %speed, align 8, !dbg !7514
  %1 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7515
  %usb = getelementptr inbounds %struct.net2280, %struct.net2280* %1, i32 0, i32 11, !dbg !7516
  %2 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb, align 8, !dbg !7516
  %usbctl = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %2, i32 0, i32 3, !dbg !7517
  %3 = bitcast i32* %usbctl to i8*, !dbg !7518
  %call = call i32 @readl(i8* %3) #12, !dbg !7519
  %4 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7520
  call void @net2280_led_init(%struct.net2280* %4) #12, !dbg !7521
  %5 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7522
  %bug7734_patched = getelementptr inbounds %struct.net2280, %struct.net2280* %5, i32 0, i32 4, !dbg !7524
  %bf.load = load i16, i16* %bug7734_patched, align 8, !dbg !7524
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !7524
  %bf.clear = and i16 %bf.lshr, 1, !dbg !7524
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7524
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7522
  br i1 %tobool, label %if.then, label %if.end, !dbg !7525

if.then:                                          ; preds = %entry
  %6 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7526
  %usb1 = getelementptr inbounds %struct.net2280, %struct.net2280* %6, i32 0, i32 11, !dbg !7528
  %7 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb1, align 8, !dbg !7528
  %stdrsp = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %7, i32 0, i32 0, !dbg !7529
  %8 = bitcast i32* %stdrsp to i8*, !dbg !7530
  call void @writel(i32 0, i8* %8) #12, !dbg !7531
  %9 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7532
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %9, i32 0, i32 10, !dbg !7533
  %10 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !7533
  %pciirqenb0 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %10, i32 0, i32 4, !dbg !7534
  %11 = bitcast i32* %pciirqenb0 to i8*, !dbg !7535
  call void @writel(i32 0, i8* %11) #12, !dbg !7536
  %12 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7537
  %regs2 = getelementptr inbounds %struct.net2280, %struct.net2280* %12, i32 0, i32 10, !dbg !7538
  %13 = load %struct.net2280_regs*, %struct.net2280_regs** %regs2, align 8, !dbg !7538
  %pciirqenb1 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %13, i32 0, i32 5, !dbg !7539
  %14 = bitcast i32* %pciirqenb1 to i8*, !dbg !7540
  call void @writel(i32 0, i8* %14) #12, !dbg !7541
  br label %if.end, !dbg !7542

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %tmp, align 4, !dbg !7543
  br label %for.cond, !dbg !7545

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i32, i32* %tmp, align 4, !dbg !7546
  %cmp = icmp ult i32 %15, 4, !dbg !7548
  br i1 %cmp, label %for.body, label %for.end, !dbg !7549

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !7550, metadata !DIExpression()), !dbg !7552
  %16 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7553
  %ep3 = getelementptr inbounds %struct.net2280, %struct.net2280* %16, i32 0, i32 2, !dbg !7554
  %17 = load i32, i32* %tmp, align 4, !dbg !7555
  %add = add i32 %17, 1, !dbg !7556
  %idxprom = zext i32 %add to i64, !dbg !7553
  %arrayidx = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep3, i64 0, i64 %idxprom, !dbg !7553
  store %struct.net2280_ep* %arrayidx, %struct.net2280_ep** %ep, align 8, !dbg !7552
  call void @llvm.dbg.declare(metadata %struct.net2280_dma_regs** %dma, metadata !7557, metadata !DIExpression()), !dbg !7558
  %18 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7559
  %dma4 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %18, i32 0, i32 3, !dbg !7561
  %19 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma4, align 8, !dbg !7561
  %tobool5 = icmp ne %struct.net2280_dma_regs* %19, null, !dbg !7559
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !7562

if.then6:                                         ; preds = %for.body
  %20 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7563
  call void @abort_dma(%struct.net2280_ep* %20) #12, !dbg !7565
  br label %if.end10, !dbg !7566

if.else:                                          ; preds = %for.body
  %21 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7567
  %dma7 = getelementptr inbounds %struct.net2280, %struct.net2280* %21, i32 0, i32 14, !dbg !7569
  %22 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma7, align 8, !dbg !7569
  %23 = load i32, i32* %tmp, align 4, !dbg !7570
  %idxprom8 = zext i32 %23 to i64, !dbg !7567
  %arrayidx9 = getelementptr %struct.net2280_dma_regs, %struct.net2280_dma_regs* %22, i64 %idxprom8, !dbg !7567
  store %struct.net2280_dma_regs* %arrayidx9, %struct.net2280_dma_regs** %dma, align 8, !dbg !7571
  %24 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !7572
  %dmastat = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %24, i32 0, i32 1, !dbg !7573
  %25 = bitcast i32* %dmastat to i8*, !dbg !7574
  call void @writel(i32 2, i8* %25) #12, !dbg !7575
  %26 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !7576
  %dmactl = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %26, i32 0, i32 0, !dbg !7577
  %27 = bitcast i32* %dmactl to i8*, !dbg !7578
  call void @writel(i32 0, i8* %27) #12, !dbg !7579
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then6
  br label %for.inc, !dbg !7580

for.inc:                                          ; preds = %if.end10
  %28 = load i32, i32* %tmp, align 4, !dbg !7581
  %inc = add i32 %28, 1, !dbg !7581
  store i32 %inc, i32* %tmp, align 4, !dbg !7581
  br label %for.cond, !dbg !7582, !llvm.loop !7583

for.end:                                          ; preds = %for.cond
  %29 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7585
  %regs11 = getelementptr inbounds %struct.net2280, %struct.net2280* %29, i32 0, i32 10, !dbg !7586
  %30 = load %struct.net2280_regs*, %struct.net2280_regs** %regs11, align 8, !dbg !7586
  %irqstat0 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %30, i32 0, i32 10, !dbg !7587
  %31 = bitcast i32* %irqstat0 to i8*, !dbg !7588
  call void @writel(i32 -1, i8* %31) #12, !dbg !7589
  %32 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7590
  %regs12 = getelementptr inbounds %struct.net2280, %struct.net2280* %32, i32 0, i32 10, !dbg !7591
  %33 = load %struct.net2280_regs*, %struct.net2280_regs** %regs12, align 8, !dbg !7591
  %irqstat1 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %33, i32 0, i32 11, !dbg !7592
  %34 = bitcast i32* %irqstat1 to i8*, !dbg !7593
  call void @writel(i32 -1, i8* %34) #12, !dbg !7594
  %35 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7595
  %bug7734_patched13 = getelementptr inbounds %struct.net2280, %struct.net2280* %35, i32 0, i32 4, !dbg !7597
  %bf.load14 = load i16, i16* %bug7734_patched13, align 8, !dbg !7597
  %bf.lshr15 = lshr i16 %bf.load14, 11, !dbg !7597
  %bf.clear16 = and i16 %bf.lshr15, 1, !dbg !7597
  %bf.cast17 = zext i16 %bf.clear16 to i32, !dbg !7597
  %tobool18 = icmp ne i32 %bf.cast17, 0, !dbg !7595
  br i1 %tobool18, label %if.then19, label %if.end28, !dbg !7598

if.then19:                                        ; preds = %for.end
  %36 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7599
  %regs20 = getelementptr inbounds %struct.net2280, %struct.net2280* %36, i32 0, i32 10, !dbg !7601
  %37 = load %struct.net2280_regs*, %struct.net2280_regs** %regs20, align 8, !dbg !7601
  %devinit = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %37, i32 0, i32 0, !dbg !7602
  %38 = bitcast i32* %devinit to i8*, !dbg !7603
  %call21 = call i32 @readl(i8* %38) #12, !dbg !7604
  %conv = zext i32 %call21 to i64, !dbg !7604
  %or = or i64 %conv, 32, !dbg !7605
  %or22 = or i64 %or, 16, !dbg !7606
  %or23 = or i64 %or22, 2, !dbg !7607
  %or24 = or i64 %or23, 1, !dbg !7608
  %conv25 = trunc i64 %or24 to i32, !dbg !7604
  store i32 %conv25, i32* %tmp, align 4, !dbg !7609
  %39 = load i32, i32* %tmp, align 4, !dbg !7610
  %40 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7611
  %regs26 = getelementptr inbounds %struct.net2280, %struct.net2280* %40, i32 0, i32 10, !dbg !7612
  %41 = load %struct.net2280_regs*, %struct.net2280_regs** %regs26, align 8, !dbg !7612
  %devinit27 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %41, i32 0, i32 0, !dbg !7613
  %42 = bitcast i32* %devinit27 to i8*, !dbg !7614
  call void @writel(i32 %39, i8* %42) #12, !dbg !7615
  br label %if.end28, !dbg !7616

if.end28:                                         ; preds = %if.then19, %for.end
  %43 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7617
  %gadget29 = getelementptr inbounds %struct.net2280, %struct.net2280* %43, i32 0, i32 0, !dbg !7618
  %ep_list = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget29, i32 0, i32 4, !dbg !7619
  call void @INIT_LIST_HEAD(%struct.list_head* %ep_list) #12, !dbg !7620
  store i32 1, i32* %tmp, align 4, !dbg !7621
  br label %for.cond30, !dbg !7623

for.cond30:                                       ; preds = %for.inc41, %if.end28
  %44 = load i32, i32* %tmp, align 4, !dbg !7624
  %45 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7626
  %n_ep = getelementptr inbounds %struct.net2280, %struct.net2280* %45, i32 0, i32 7, !dbg !7627
  %46 = load i32, i32* %n_ep, align 8, !dbg !7627
  %cmp31 = icmp ult i32 %44, %46, !dbg !7628
  br i1 %cmp31, label %for.body33, label %for.end43, !dbg !7629

for.body33:                                       ; preds = %for.cond30
  %47 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7630
  %ep34 = getelementptr inbounds %struct.net2280, %struct.net2280* %47, i32 0, i32 2, !dbg !7631
  %48 = load i32, i32* %tmp, align 4, !dbg !7632
  %idxprom35 = zext i32 %48 to i64, !dbg !7630
  %arrayidx36 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep34, i64 0, i64 %idxprom35, !dbg !7630
  %ep37 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx36, i32 0, i32 0, !dbg !7633
  %ep_list38 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep37, i32 0, i32 3, !dbg !7634
  %49 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7635
  %gadget39 = getelementptr inbounds %struct.net2280, %struct.net2280* %49, i32 0, i32 0, !dbg !7636
  %ep_list40 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget39, i32 0, i32 4, !dbg !7637
  call void @list_add_tail(%struct.list_head* %ep_list38, %struct.list_head* %ep_list40) #12, !dbg !7638
  br label %for.inc41, !dbg !7638

for.inc41:                                        ; preds = %for.body33
  %50 = load i32, i32* %tmp, align 4, !dbg !7639
  %inc42 = add i32 %50, 1, !dbg !7639
  store i32 %inc42, i32* %tmp, align 4, !dbg !7639
  br label %for.cond30, !dbg !7640, !llvm.loop !7641

for.end43:                                        ; preds = %for.cond30
  ret void, !dbg !7643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @net2280_led_init(%struct.net2280* %dev) #2 !dbg !7644 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !7645, metadata !DIExpression()), !dbg !7646
  %0 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7647
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %0, i32 0, i32 10, !dbg !7648
  %1 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !7648
  %gpioctl = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %1, i32 0, i32 20, !dbg !7649
  %2 = bitcast i32* %gpioctl to i8*, !dbg !7650
  call void @writel(i32 4336, i8* %2) #12, !dbg !7651
  ret void, !dbg !7652
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_fifo_mode(%struct.net2280* %dev, i32 %mode) #2 !dbg !7653 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !7654, metadata !DIExpression()), !dbg !7655
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7656, metadata !DIExpression()), !dbg !7657
  %0 = load i32, i32* %mode.addr, align 4, !dbg !7658
  %or = or i32 -65536, %0, !dbg !7659
  %1 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7660
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %1, i32 0, i32 10, !dbg !7661
  %2 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !7661
  %fifoctl = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %2, i32 0, i32 14, !dbg !7662
  %3 = bitcast i32* %fifoctl to i8*, !dbg !7663
  call void @writel(i32 %or, i8* %3) #12, !dbg !7664
  %4 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7665
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %4, i32 0, i32 0, !dbg !7666
  %ep_list = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 4, !dbg !7667
  call void @INIT_LIST_HEAD(%struct.list_head* %ep_list) #12, !dbg !7668
  %5 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7669
  %ep = getelementptr inbounds %struct.net2280, %struct.net2280* %5, i32 0, i32 2, !dbg !7670
  %arrayidx = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep, i64 0, i64 1, !dbg !7669
  %ep1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx, i32 0, i32 0, !dbg !7671
  %ep_list2 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep1, i32 0, i32 3, !dbg !7672
  %6 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7673
  %gadget3 = getelementptr inbounds %struct.net2280, %struct.net2280* %6, i32 0, i32 0, !dbg !7674
  %ep_list4 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget3, i32 0, i32 4, !dbg !7675
  call void @list_add_tail(%struct.list_head* %ep_list2, %struct.list_head* %ep_list4) #12, !dbg !7676
  %7 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7677
  %ep5 = getelementptr inbounds %struct.net2280, %struct.net2280* %7, i32 0, i32 2, !dbg !7678
  %arrayidx6 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep5, i64 0, i64 2, !dbg !7677
  %ep7 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx6, i32 0, i32 0, !dbg !7679
  %ep_list8 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep7, i32 0, i32 3, !dbg !7680
  %8 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7681
  %gadget9 = getelementptr inbounds %struct.net2280, %struct.net2280* %8, i32 0, i32 0, !dbg !7682
  %ep_list10 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget9, i32 0, i32 4, !dbg !7683
  call void @list_add_tail(%struct.list_head* %ep_list8, %struct.list_head* %ep_list10) #12, !dbg !7684
  %9 = load i32, i32* %mode.addr, align 4, !dbg !7685
  switch i32 %9, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb31
    i32 2, label %sw.bb44
  ], !dbg !7686

sw.bb:                                            ; preds = %entry
  %10 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7687
  %ep11 = getelementptr inbounds %struct.net2280, %struct.net2280* %10, i32 0, i32 2, !dbg !7689
  %arrayidx12 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep11, i64 0, i64 3, !dbg !7687
  %ep13 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx12, i32 0, i32 0, !dbg !7690
  %ep_list14 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep13, i32 0, i32 3, !dbg !7691
  %11 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7692
  %gadget15 = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 0, !dbg !7693
  %ep_list16 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget15, i32 0, i32 4, !dbg !7694
  call void @list_add_tail(%struct.list_head* %ep_list14, %struct.list_head* %ep_list16) #12, !dbg !7695
  %12 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7696
  %ep17 = getelementptr inbounds %struct.net2280, %struct.net2280* %12, i32 0, i32 2, !dbg !7697
  %arrayidx18 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep17, i64 0, i64 4, !dbg !7696
  %ep19 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx18, i32 0, i32 0, !dbg !7698
  %ep_list20 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep19, i32 0, i32 3, !dbg !7699
  %13 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7700
  %gadget21 = getelementptr inbounds %struct.net2280, %struct.net2280* %13, i32 0, i32 0, !dbg !7701
  %ep_list22 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget21, i32 0, i32 4, !dbg !7702
  call void @list_add_tail(%struct.list_head* %ep_list20, %struct.list_head* %ep_list22) #12, !dbg !7703
  %14 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7704
  %ep23 = getelementptr inbounds %struct.net2280, %struct.net2280* %14, i32 0, i32 2, !dbg !7705
  %arrayidx24 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep23, i64 0, i64 2, !dbg !7704
  %fifo_size = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx24, i32 0, i32 10, !dbg !7706
  %bf.load = load i32, i32* %fifo_size, align 8, !dbg !7707
  %bf.clear = and i32 %bf.load, -1048321, !dbg !7707
  %bf.set = or i32 %bf.clear, 262144, !dbg !7707
  store i32 %bf.set, i32* %fifo_size, align 8, !dbg !7707
  %15 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7708
  %ep25 = getelementptr inbounds %struct.net2280, %struct.net2280* %15, i32 0, i32 2, !dbg !7709
  %arrayidx26 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep25, i64 0, i64 1, !dbg !7708
  %fifo_size27 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx26, i32 0, i32 10, !dbg !7710
  %bf.load28 = load i32, i32* %fifo_size27, align 8, !dbg !7711
  %bf.clear29 = and i32 %bf.load28, -1048321, !dbg !7711
  %bf.set30 = or i32 %bf.clear29, 262144, !dbg !7711
  store i32 %bf.set30, i32* %fifo_size27, align 8, !dbg !7711
  br label %sw.epilog, !dbg !7712

sw.bb31:                                          ; preds = %entry
  %16 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7713
  %ep32 = getelementptr inbounds %struct.net2280, %struct.net2280* %16, i32 0, i32 2, !dbg !7714
  %arrayidx33 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep32, i64 0, i64 2, !dbg !7713
  %fifo_size34 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx33, i32 0, i32 10, !dbg !7715
  %bf.load35 = load i32, i32* %fifo_size34, align 8, !dbg !7716
  %bf.clear36 = and i32 %bf.load35, -1048321, !dbg !7716
  %bf.set37 = or i32 %bf.clear36, 524288, !dbg !7716
  store i32 %bf.set37, i32* %fifo_size34, align 8, !dbg !7716
  %17 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7717
  %ep38 = getelementptr inbounds %struct.net2280, %struct.net2280* %17, i32 0, i32 2, !dbg !7718
  %arrayidx39 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep38, i64 0, i64 1, !dbg !7717
  %fifo_size40 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx39, i32 0, i32 10, !dbg !7719
  %bf.load41 = load i32, i32* %fifo_size40, align 8, !dbg !7720
  %bf.clear42 = and i32 %bf.load41, -1048321, !dbg !7720
  %bf.set43 = or i32 %bf.clear42, 524288, !dbg !7720
  store i32 %bf.set43, i32* %fifo_size40, align 8, !dbg !7720
  br label %sw.epilog, !dbg !7721

sw.bb44:                                          ; preds = %entry
  %18 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7722
  %ep45 = getelementptr inbounds %struct.net2280, %struct.net2280* %18, i32 0, i32 2, !dbg !7723
  %arrayidx46 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep45, i64 0, i64 3, !dbg !7722
  %ep47 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx46, i32 0, i32 0, !dbg !7724
  %ep_list48 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep47, i32 0, i32 3, !dbg !7725
  %19 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7726
  %gadget49 = getelementptr inbounds %struct.net2280, %struct.net2280* %19, i32 0, i32 0, !dbg !7727
  %ep_list50 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget49, i32 0, i32 4, !dbg !7728
  call void @list_add_tail(%struct.list_head* %ep_list48, %struct.list_head* %ep_list50) #12, !dbg !7729
  %20 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7730
  %ep51 = getelementptr inbounds %struct.net2280, %struct.net2280* %20, i32 0, i32 2, !dbg !7731
  %arrayidx52 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep51, i64 0, i64 1, !dbg !7730
  %fifo_size53 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx52, i32 0, i32 10, !dbg !7732
  %bf.load54 = load i32, i32* %fifo_size53, align 8, !dbg !7733
  %bf.clear55 = and i32 %bf.load54, -1048321, !dbg !7733
  %bf.set56 = or i32 %bf.clear55, 524288, !dbg !7733
  store i32 %bf.set56, i32* %fifo_size53, align 8, !dbg !7733
  %21 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7734
  %ep57 = getelementptr inbounds %struct.net2280, %struct.net2280* %21, i32 0, i32 2, !dbg !7735
  %arrayidx58 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep57, i64 0, i64 2, !dbg !7734
  %fifo_size59 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx58, i32 0, i32 10, !dbg !7736
  %bf.load60 = load i32, i32* %fifo_size59, align 8, !dbg !7737
  %bf.clear61 = and i32 %bf.load60, -1048321, !dbg !7737
  %bf.set62 = or i32 %bf.clear61, 262144, !dbg !7737
  store i32 %bf.set62, i32* %fifo_size59, align 8, !dbg !7737
  br label %sw.epilog, !dbg !7738

sw.epilog:                                        ; preds = %entry, %sw.bb44, %sw.bb31, %sw.bb
  %22 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7739
  %ep63 = getelementptr inbounds %struct.net2280, %struct.net2280* %22, i32 0, i32 2, !dbg !7740
  %arrayidx64 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep63, i64 0, i64 5, !dbg !7739
  %ep65 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx64, i32 0, i32 0, !dbg !7741
  %ep_list66 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep65, i32 0, i32 3, !dbg !7742
  %23 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7743
  %gadget67 = getelementptr inbounds %struct.net2280, %struct.net2280* %23, i32 0, i32 0, !dbg !7744
  %ep_list68 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget67, i32 0, i32 4, !dbg !7745
  call void @list_add_tail(%struct.list_head* %ep_list66, %struct.list_head* %ep_list68) #12, !dbg !7746
  %24 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7747
  %ep69 = getelementptr inbounds %struct.net2280, %struct.net2280* %24, i32 0, i32 2, !dbg !7748
  %arrayidx70 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep69, i64 0, i64 6, !dbg !7747
  %ep71 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx70, i32 0, i32 0, !dbg !7749
  %ep_list72 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep71, i32 0, i32 3, !dbg !7750
  %25 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7751
  %gadget73 = getelementptr inbounds %struct.net2280, %struct.net2280* %25, i32 0, i32 0, !dbg !7752
  %ep_list74 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget73, i32 0, i32 4, !dbg !7753
  call void @list_add_tail(%struct.list_head* %ep_list72, %struct.list_head* %ep_list74) #12, !dbg !7754
  ret void, !dbg !7755
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #2 !dbg !7756 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7757, metadata !DIExpression()), !dbg !7758
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7759, metadata !DIExpression()), !dbg !7760
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7761
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7762
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7763
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7763
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7764
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #12, !dbg !7765
  ret void, !dbg !7766
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !7767 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7770, metadata !DIExpression()), !dbg !7771
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7772, metadata !DIExpression()), !dbg !7773
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7774, metadata !DIExpression()), !dbg !7775
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7776
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7778
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7779
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #12, !dbg !7780
  br i1 %call, label %if.end, label %if.then, !dbg !7781

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !7782

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7783
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7784
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !7785
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !7786
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7787
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7788
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !7789
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !7790
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7791
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7792
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !7793
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !7794
  br label %do.body, !dbg !7795

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !7796

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !7798

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !7796

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7800
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7800
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !7800
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !7800
  br label %do.end7, !dbg !7800

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !7796

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !7802
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !7803 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7806, metadata !DIExpression()), !dbg !7807
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7808, metadata !DIExpression()), !dbg !7809
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7810, metadata !DIExpression()), !dbg !7811
  ret i1 true, !dbg !7812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_reinit_228x(%struct.net2280* %dev) #2 !dbg !7813 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  %tmp = alloca i32, align 4
  %ep = alloca %struct.net2280_ep*, align 8
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !7814, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7816, metadata !DIExpression()), !dbg !7817
  store i32 0, i32* %tmp, align 4, !dbg !7818
  br label %for.cond, !dbg !7820

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %tmp, align 4, !dbg !7821
  %cmp = icmp ult i32 %0, 7, !dbg !7823
  br i1 %cmp, label %for.body, label %for.end, !dbg !7824

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !7825, metadata !DIExpression()), !dbg !7827
  %1 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7828
  %ep1 = getelementptr inbounds %struct.net2280, %struct.net2280* %1, i32 0, i32 2, !dbg !7829
  %2 = load i32, i32* %tmp, align 4, !dbg !7830
  %idxprom = zext i32 %2 to i64, !dbg !7828
  %arrayidx = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep1, i64 0, i64 %idxprom, !dbg !7828
  store %struct.net2280_ep* %arrayidx, %struct.net2280_ep** %ep, align 8, !dbg !7827
  %3 = load i32, i32* %tmp, align 4, !dbg !7831
  %idxprom2 = zext i32 %3 to i64, !dbg !7832
  %arrayidx3 = getelementptr [9 x %struct.anon.67], [9 x %struct.anon.67]* @ep_info_dft, i64 0, i64 %idxprom2, !dbg !7832
  %name = getelementptr inbounds %struct.anon.67, %struct.anon.67* %arrayidx3, i32 0, i32 0, !dbg !7833
  %4 = load i8*, i8** %name, align 16, !dbg !7833
  %5 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7834
  %ep4 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %5, i32 0, i32 0, !dbg !7835
  %name5 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep4, i32 0, i32 1, !dbg !7836
  store i8* %4, i8** %name5, align 8, !dbg !7837
  %6 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7838
  %ep6 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %6, i32 0, i32 0, !dbg !7839
  %caps = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep6, i32 0, i32 4, !dbg !7840
  %7 = load i32, i32* %tmp, align 4, !dbg !7841
  %idxprom7 = zext i32 %7 to i64, !dbg !7842
  %arrayidx8 = getelementptr [9 x %struct.anon.67], [9 x %struct.anon.67]* @ep_info_dft, i64 0, i64 %idxprom7, !dbg !7842
  %caps9 = getelementptr inbounds %struct.anon.67, %struct.anon.67* %arrayidx8, i32 0, i32 1, !dbg !7843
  %8 = bitcast %struct.usb_ep_caps* %caps to i8*, !dbg !7843
  %9 = bitcast %struct.usb_ep_caps* %caps9 to i8*, !dbg !7843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 4, i1 false), !dbg !7843
  %10 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7844
  %11 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7845
  %dev10 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %11, i32 0, i32 6, !dbg !7846
  store %struct.net2280* %10, %struct.net2280** %dev10, align 8, !dbg !7847
  %12 = load i32, i32* %tmp, align 4, !dbg !7848
  %13 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7849
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %13, i32 0, i32 10, !dbg !7850
  %bf.load = load i32, i32* %num, align 8, !dbg !7851
  %bf.value = and i32 %12, 255, !dbg !7851
  %bf.clear = and i32 %bf.load, -256, !dbg !7851
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !7851
  store i32 %bf.set, i32* %num, align 8, !dbg !7851
  %14 = load i32, i32* %tmp, align 4, !dbg !7852
  %cmp11 = icmp ugt i32 %14, 0, !dbg !7854
  br i1 %cmp11, label %land.lhs.true, label %if.else, !dbg !7855

land.lhs.true:                                    ; preds = %for.body
  %15 = load i32, i32* %tmp, align 4, !dbg !7856
  %cmp12 = icmp ule i32 %15, 4, !dbg !7857
  br i1 %cmp12, label %if.then, label %if.else, !dbg !7858

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7859
  %fifo_size = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %16, i32 0, i32 10, !dbg !7861
  %bf.load13 = load i32, i32* %fifo_size, align 8, !dbg !7862
  %bf.clear14 = and i32 %bf.load13, -1048321, !dbg !7862
  %bf.set15 = or i32 %bf.clear14, 262144, !dbg !7862
  store i32 %bf.set15, i32* %fifo_size, align 8, !dbg !7862
  %17 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7863
  %dma = getelementptr inbounds %struct.net2280, %struct.net2280* %17, i32 0, i32 14, !dbg !7864
  %18 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !7864
  %19 = load i32, i32* %tmp, align 4, !dbg !7865
  %sub = sub i32 %19, 1, !dbg !7866
  %idxprom16 = zext i32 %sub to i64, !dbg !7863
  %arrayidx17 = getelementptr %struct.net2280_dma_regs, %struct.net2280_dma_regs* %18, i64 %idxprom16, !dbg !7863
  %20 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7867
  %dma18 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %20, i32 0, i32 3, !dbg !7868
  store %struct.net2280_dma_regs* %arrayidx17, %struct.net2280_dma_regs** %dma18, align 8, !dbg !7869
  br label %if.end, !dbg !7870

if.else:                                          ; preds = %land.lhs.true, %for.body
  %21 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7871
  %fifo_size19 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %21, i32 0, i32 10, !dbg !7872
  %bf.load20 = load i32, i32* %fifo_size19, align 8, !dbg !7873
  %bf.clear21 = and i32 %bf.load20, -1048321, !dbg !7873
  %bf.set22 = or i32 %bf.clear21, 16384, !dbg !7873
  store i32 %bf.set22, i32* %fifo_size19, align 8, !dbg !7873
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %22 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7874
  %epregs = getelementptr inbounds %struct.net2280, %struct.net2280* %22, i32 0, i32 16, !dbg !7875
  %23 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %epregs, align 8, !dbg !7875
  %24 = load i32, i32* %tmp, align 4, !dbg !7876
  %idxprom23 = zext i32 %24 to i64, !dbg !7874
  %arrayidx24 = getelementptr %struct.net2280_ep_regs, %struct.net2280_ep_regs* %23, i64 %idxprom23, !dbg !7874
  %25 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7877
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %25, i32 0, i32 2, !dbg !7878
  store %struct.net2280_ep_regs* %arrayidx24, %struct.net2280_ep_regs** %regs, align 8, !dbg !7879
  %26 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7880
  %epregs25 = getelementptr inbounds %struct.net2280, %struct.net2280* %26, i32 0, i32 16, !dbg !7881
  %27 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %epregs25, align 8, !dbg !7881
  %28 = load i32, i32* %tmp, align 4, !dbg !7882
  %idxprom26 = zext i32 %28 to i64, !dbg !7880
  %arrayidx27 = getelementptr %struct.net2280_ep_regs, %struct.net2280_ep_regs* %27, i64 %idxprom26, !dbg !7880
  %29 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7883
  %cfg = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %29, i32 0, i32 1, !dbg !7884
  store %struct.net2280_ep_regs* %arrayidx27, %struct.net2280_ep_regs** %cfg, align 8, !dbg !7885
  %30 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7886
  %regs28 = getelementptr inbounds %struct.net2280, %struct.net2280* %30, i32 0, i32 10, !dbg !7887
  %31 = load %struct.net2280_regs*, %struct.net2280_regs** %regs28, align 8, !dbg !7887
  %32 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7888
  call void @ep_reset_228x(%struct.net2280_regs* %31, %struct.net2280_ep* %32) #12, !dbg !7889
  br label %for.inc, !dbg !7890

for.inc:                                          ; preds = %if.end
  %33 = load i32, i32* %tmp, align 4, !dbg !7891
  %inc = add i32 %33, 1, !dbg !7891
  store i32 %inc, i32* %tmp, align 4, !dbg !7891
  br label %for.cond, !dbg !7892, !llvm.loop !7893

for.end:                                          ; preds = %for.cond
  %34 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7895
  %ep29 = getelementptr inbounds %struct.net2280, %struct.net2280* %34, i32 0, i32 2, !dbg !7896
  %arrayidx30 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep29, i64 0, i64 0, !dbg !7895
  %ep31 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx30, i32 0, i32 0, !dbg !7897
  call void @usb_ep_set_maxpacket_limit(%struct.usb_ep* %ep31, i32 64) #12, !dbg !7898
  %35 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7899
  %ep32 = getelementptr inbounds %struct.net2280, %struct.net2280* %35, i32 0, i32 2, !dbg !7900
  %arrayidx33 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep32, i64 0, i64 5, !dbg !7899
  %ep34 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx33, i32 0, i32 0, !dbg !7901
  call void @usb_ep_set_maxpacket_limit(%struct.usb_ep* %ep34, i32 64) #12, !dbg !7902
  %36 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7903
  %ep35 = getelementptr inbounds %struct.net2280, %struct.net2280* %36, i32 0, i32 2, !dbg !7904
  %arrayidx36 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep35, i64 0, i64 6, !dbg !7903
  %ep37 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx36, i32 0, i32 0, !dbg !7905
  call void @usb_ep_set_maxpacket_limit(%struct.usb_ep* %ep37, i32 64) #12, !dbg !7906
  %37 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7907
  %ep38 = getelementptr inbounds %struct.net2280, %struct.net2280* %37, i32 0, i32 2, !dbg !7908
  %arrayidx39 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep38, i64 0, i64 0, !dbg !7907
  %ep40 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx39, i32 0, i32 0, !dbg !7909
  %38 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7910
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %38, i32 0, i32 0, !dbg !7911
  %ep0 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 3, !dbg !7912
  store %struct.usb_ep* %ep40, %struct.usb_ep** %ep0, align 8, !dbg !7913
  %39 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7914
  %ep41 = getelementptr inbounds %struct.net2280, %struct.net2280* %39, i32 0, i32 2, !dbg !7915
  %arrayidx42 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep41, i64 0, i64 0, !dbg !7914
  %stopped = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx42, i32 0, i32 10, !dbg !7916
  %bf.load43 = load i32, i32* %stopped, align 8, !dbg !7917
  %bf.clear44 = and i32 %bf.load43, -4194305, !dbg !7917
  store i32 %bf.clear44, i32* %stopped, align 8, !dbg !7917
  %40 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7918
  %gadget45 = getelementptr inbounds %struct.net2280, %struct.net2280* %40, i32 0, i32 0, !dbg !7919
  %ep046 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget45, i32 0, i32 3, !dbg !7920
  %41 = load %struct.usb_ep*, %struct.usb_ep** %ep046, align 8, !dbg !7920
  %ep_list = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %41, i32 0, i32 3, !dbg !7921
  call void @INIT_LIST_HEAD(%struct.list_head* %ep_list) #12, !dbg !7922
  store i32 0, i32* %tmp, align 4, !dbg !7923
  br label %for.cond47, !dbg !7925

for.cond47:                                       ; preds = %for.inc52, %for.end
  %42 = load i32, i32* %tmp, align 4, !dbg !7926
  %cmp48 = icmp ult i32 %42, 5, !dbg !7928
  br i1 %cmp48, label %for.body49, label %for.end54, !dbg !7929

for.body49:                                       ; preds = %for.cond47
  %43 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7930
  %dep = getelementptr inbounds %struct.net2280, %struct.net2280* %43, i32 0, i32 15, !dbg !7931
  %44 = load %struct.net2280_dep_regs*, %struct.net2280_dep_regs** %dep, align 8, !dbg !7931
  %45 = load i32, i32* %tmp, align 4, !dbg !7932
  %idxprom50 = zext i32 %45 to i64, !dbg !7930
  %arrayidx51 = getelementptr %struct.net2280_dep_regs, %struct.net2280_dep_regs* %44, i64 %idxprom50, !dbg !7930
  %dep_cfg = getelementptr inbounds %struct.net2280_dep_regs, %struct.net2280_dep_regs* %arrayidx51, i32 0, i32 0, !dbg !7933
  %46 = bitcast i32* %dep_cfg to i8*, !dbg !7934
  call void @writel(i32 13, i8* %46) #12, !dbg !7935
  br label %for.inc52, !dbg !7935

for.inc52:                                        ; preds = %for.body49
  %47 = load i32, i32* %tmp, align 4, !dbg !7936
  %inc53 = add i32 %47, 1, !dbg !7936
  store i32 %inc53, i32* %tmp, align 4, !dbg !7936
  br label %for.cond47, !dbg !7937, !llvm.loop !7938

for.end54:                                        ; preds = %for.cond47
  ret void, !dbg !7940
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_reinit_338x(%struct.net2280* %dev) #2 !dbg !4633 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  %i = alloca i32, align 4
  %tmp = alloca i32, align 4
  %val = alloca i32, align 4
  %ep = alloca %struct.net2280_ep*, align 8
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !7941, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7943, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7945, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.declare(metadata i32* %val, metadata !7947, metadata !DIExpression()), !dbg !7948
  store i32 0, i32* %i, align 4, !dbg !7949
  br label %for.cond, !dbg !7951

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7952
  %1 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7954
  %n_ep = getelementptr inbounds %struct.net2280, %struct.net2280* %1, i32 0, i32 7, !dbg !7955
  %2 = load i32, i32* %n_ep, align 8, !dbg !7955
  %cmp = icmp slt i32 %0, %2, !dbg !7956
  br i1 %cmp, label %for.body, label %for.end, !dbg !7957

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !7958, metadata !DIExpression()), !dbg !7960
  %3 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7961
  %ep1 = getelementptr inbounds %struct.net2280, %struct.net2280* %3, i32 0, i32 2, !dbg !7962
  %4 = load i32, i32* %i, align 4, !dbg !7963
  %idxprom = sext i32 %4 to i64, !dbg !7961
  %arrayidx = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep1, i64 0, i64 %idxprom, !dbg !7961
  store %struct.net2280_ep* %arrayidx, %struct.net2280_ep** %ep, align 8, !dbg !7960
  %5 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7964
  %enhanced_mode = getelementptr inbounds %struct.net2280, %struct.net2280* %5, i32 0, i32 6, !dbg !7965
  %6 = load i32, i32* %enhanced_mode, align 4, !dbg !7965
  %tobool = icmp ne i32 %6, 0, !dbg !7964
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7964

cond.true:                                        ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !7966
  %idxprom2 = sext i32 %7 to i64, !dbg !7967
  %arrayidx3 = getelementptr [9 x %struct.anon.67], [9 x %struct.anon.67]* @ep_info_adv, i64 0, i64 %idxprom2, !dbg !7967
  %name = getelementptr inbounds %struct.anon.67, %struct.anon.67* %arrayidx3, i32 0, i32 0, !dbg !7968
  %8 = load i8*, i8** %name, align 16, !dbg !7968
  br label %cond.end, !dbg !7964

cond.false:                                       ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !7969
  %idxprom4 = sext i32 %9 to i64, !dbg !7970
  %arrayidx5 = getelementptr [9 x %struct.anon.67], [9 x %struct.anon.67]* @ep_info_dft, i64 0, i64 %idxprom4, !dbg !7970
  %name6 = getelementptr inbounds %struct.anon.67, %struct.anon.67* %arrayidx5, i32 0, i32 0, !dbg !7971
  %10 = load i8*, i8** %name6, align 16, !dbg !7971
  br label %cond.end, !dbg !7964

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %8, %cond.true ], [ %10, %cond.false ], !dbg !7964
  %11 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7972
  %ep7 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %11, i32 0, i32 0, !dbg !7973
  %name8 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep7, i32 0, i32 1, !dbg !7974
  store i8* %cond, i8** %name8, align 8, !dbg !7975
  %12 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7976
  %ep9 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %12, i32 0, i32 0, !dbg !7977
  %caps = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep9, i32 0, i32 4, !dbg !7978
  %13 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7979
  %enhanced_mode10 = getelementptr inbounds %struct.net2280, %struct.net2280* %13, i32 0, i32 6, !dbg !7980
  %14 = load i32, i32* %enhanced_mode10, align 4, !dbg !7980
  %tobool11 = icmp ne i32 %14, 0, !dbg !7979
  br i1 %tobool11, label %cond.true12, label %cond.false16, !dbg !7979

cond.true12:                                      ; preds = %cond.end
  %15 = load i32, i32* %i, align 4, !dbg !7981
  %idxprom13 = sext i32 %15 to i64, !dbg !7982
  %arrayidx14 = getelementptr [9 x %struct.anon.67], [9 x %struct.anon.67]* @ep_info_adv, i64 0, i64 %idxprom13, !dbg !7982
  %caps15 = getelementptr inbounds %struct.anon.67, %struct.anon.67* %arrayidx14, i32 0, i32 1, !dbg !7983
  %16 = bitcast %struct.usb_ep_caps* %caps to i8*, !dbg !7983
  %17 = bitcast %struct.usb_ep_caps* %caps15 to i8*, !dbg !7983
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 4, i1 false), !dbg !7983
  br label %cond.end20, !dbg !7979

cond.false16:                                     ; preds = %cond.end
  %18 = load i32, i32* %i, align 4, !dbg !7984
  %idxprom17 = sext i32 %18 to i64, !dbg !7985
  %arrayidx18 = getelementptr [9 x %struct.anon.67], [9 x %struct.anon.67]* @ep_info_dft, i64 0, i64 %idxprom17, !dbg !7985
  %caps19 = getelementptr inbounds %struct.anon.67, %struct.anon.67* %arrayidx18, i32 0, i32 1, !dbg !7986
  %19 = bitcast %struct.usb_ep_caps* %caps to i8*, !dbg !7986
  %20 = bitcast %struct.usb_ep_caps* %caps19 to i8*, !dbg !7986
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 4, i1 false), !dbg !7986
  br label %cond.end20, !dbg !7979

cond.end20:                                       ; preds = %cond.false16, %cond.true12
  %21 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !7987
  %22 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7988
  %dev21 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %22, i32 0, i32 6, !dbg !7989
  store %struct.net2280* %21, %struct.net2280** %dev21, align 8, !dbg !7990
  %23 = load i32, i32* %i, align 4, !dbg !7991
  %24 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !7992
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %24, i32 0, i32 10, !dbg !7993
  %bf.load = load i32, i32* %num, align 8, !dbg !7994
  %bf.value = and i32 %23, 255, !dbg !7994
  %bf.clear = and i32 %bf.load, -256, !dbg !7994
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !7994
  store i32 %bf.set, i32* %num, align 8, !dbg !7994
  %25 = load i32, i32* %i, align 4, !dbg !7995
  %cmp22 = icmp sgt i32 %25, 0, !dbg !7997
  br i1 %cmp22, label %land.lhs.true, label %if.end, !dbg !7998

land.lhs.true:                                    ; preds = %cond.end20
  %26 = load i32, i32* %i, align 4, !dbg !7999
  %cmp23 = icmp sle i32 %26, 4, !dbg !8000
  br i1 %cmp23, label %if.then, label %if.end, !dbg !8001

if.then:                                          ; preds = %land.lhs.true
  %27 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8002
  %dma = getelementptr inbounds %struct.net2280, %struct.net2280* %27, i32 0, i32 14, !dbg !8003
  %28 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !8003
  %29 = load i32, i32* %i, align 4, !dbg !8004
  %sub = sub i32 %29, 1, !dbg !8005
  %idxprom24 = sext i32 %sub to i64, !dbg !8002
  %arrayidx25 = getelementptr %struct.net2280_dma_regs, %struct.net2280_dma_regs* %28, i64 %idxprom24, !dbg !8002
  %30 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8006
  %dma26 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %30, i32 0, i32 3, !dbg !8007
  store %struct.net2280_dma_regs* %arrayidx25, %struct.net2280_dma_regs** %dma26, align 8, !dbg !8008
  br label %if.end, !dbg !8006

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end20
  %31 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8009
  %enhanced_mode27 = getelementptr inbounds %struct.net2280, %struct.net2280* %31, i32 0, i32 6, !dbg !8011
  %32 = load i32, i32* %enhanced_mode27, align 4, !dbg !8011
  %tobool28 = icmp ne i32 %32, 0, !dbg !8009
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !8012

if.then29:                                        ; preds = %if.end
  %33 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8013
  %epregs = getelementptr inbounds %struct.net2280, %struct.net2280* %33, i32 0, i32 16, !dbg !8015
  %34 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %epregs, align 8, !dbg !8015
  %35 = load i32, i32* %i, align 4, !dbg !8016
  %idxprom30 = sext i32 %35 to i64, !dbg !8017
  %arrayidx31 = getelementptr [9 x i32], [9 x i32]* @usb_reinit_338x.ne, i64 0, i64 %idxprom30, !dbg !8017
  %36 = load i32, i32* %arrayidx31, align 4, !dbg !8017
  %idxprom32 = zext i32 %36 to i64, !dbg !8013
  %arrayidx33 = getelementptr %struct.net2280_ep_regs, %struct.net2280_ep_regs* %34, i64 %idxprom32, !dbg !8013
  %37 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8018
  %cfg = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %37, i32 0, i32 1, !dbg !8019
  store %struct.net2280_ep_regs* %arrayidx33, %struct.net2280_ep_regs** %cfg, align 8, !dbg !8020
  %38 = load i32, i32* %i, align 4, !dbg !8021
  %cmp34 = icmp sgt i32 %38, 0, !dbg !8023
  br i1 %cmp34, label %land.lhs.true35, label %if.end41, !dbg !8024

land.lhs.true35:                                  ; preds = %if.then29
  %39 = load i32, i32* %i, align 4, !dbg !8025
  %cmp36 = icmp slt i32 %39, 5, !dbg !8026
  br i1 %cmp36, label %if.then37, label %if.end41, !dbg !8027

if.then37:                                        ; preds = %land.lhs.true35
  %40 = load i32, i32* %i, align 4, !dbg !8028
  %idxprom38 = sext i32 %40 to i64, !dbg !8029
  %arrayidx39 = getelementptr [9 x i32], [9 x i32]* @usb_reinit_338x.ne, i64 0, i64 %idxprom38, !dbg !8029
  %41 = load i32, i32* %arrayidx39, align 4, !dbg !8029
  %42 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8030
  %cfg40 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %42, i32 0, i32 1, !dbg !8031
  %43 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %cfg40, align 8, !dbg !8031
  %ep_cfg = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %43, i32 0, i32 0, !dbg !8032
  %44 = bitcast i32* %ep_cfg to i8*, !dbg !8033
  call void @writel(i32 %41, i8* %44) #12, !dbg !8034
  br label %if.end41, !dbg !8034

if.end41:                                         ; preds = %if.then37, %land.lhs.true35, %if.then29
  %45 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8035
  %epregs42 = getelementptr inbounds %struct.net2280, %struct.net2280* %45, i32 0, i32 16, !dbg !8036
  %46 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %epregs42, align 8, !dbg !8036
  %47 = load i32, i32* %i, align 4, !dbg !8037
  %idxprom43 = sext i32 %47 to i64, !dbg !8038
  %arrayidx44 = getelementptr [9 x i32], [9 x i32]* @usb_reinit_338x.ne, i64 0, i64 %idxprom43, !dbg !8038
  %48 = load i32, i32* %arrayidx44, align 4, !dbg !8038
  %idxprom45 = zext i32 %48 to i64, !dbg !8035
  %arrayidx46 = getelementptr %struct.net2280_ep_regs, %struct.net2280_ep_regs* %46, i64 %idxprom45, !dbg !8035
  %49 = bitcast %struct.net2280_ep_regs* %arrayidx46 to i8*, !dbg !8039
  %50 = load i32, i32* %i, align 4, !dbg !8040
  %idxprom47 = sext i32 %50 to i64, !dbg !8041
  %arrayidx48 = getelementptr [9 x i32], [9 x i32]* @usb_reinit_338x.ep_reg_addr, i64 0, i64 %idxprom47, !dbg !8041
  %51 = load i32, i32* %arrayidx48, align 4, !dbg !8041
  %idx.ext = zext i32 %51 to i64, !dbg !8042
  %add.ptr = getelementptr i8, i8* %49, i64 %idx.ext, !dbg !8042
  %52 = bitcast i8* %add.ptr to %struct.net2280_ep_regs*, !dbg !8043
  %53 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8044
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %53, i32 0, i32 2, !dbg !8045
  store %struct.net2280_ep_regs* %52, %struct.net2280_ep_regs** %regs, align 8, !dbg !8046
  br label %if.end57, !dbg !8047

if.else:                                          ; preds = %if.end
  %54 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8048
  %epregs49 = getelementptr inbounds %struct.net2280, %struct.net2280* %54, i32 0, i32 16, !dbg !8050
  %55 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %epregs49, align 8, !dbg !8050
  %56 = load i32, i32* %i, align 4, !dbg !8051
  %idxprom50 = sext i32 %56 to i64, !dbg !8048
  %arrayidx51 = getelementptr %struct.net2280_ep_regs, %struct.net2280_ep_regs* %55, i64 %idxprom50, !dbg !8048
  %57 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8052
  %cfg52 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %57, i32 0, i32 1, !dbg !8053
  store %struct.net2280_ep_regs* %arrayidx51, %struct.net2280_ep_regs** %cfg52, align 8, !dbg !8054
  %58 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8055
  %epregs53 = getelementptr inbounds %struct.net2280, %struct.net2280* %58, i32 0, i32 16, !dbg !8056
  %59 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %epregs53, align 8, !dbg !8056
  %60 = load i32, i32* %i, align 4, !dbg !8057
  %idxprom54 = sext i32 %60 to i64, !dbg !8055
  %arrayidx55 = getelementptr %struct.net2280_ep_regs, %struct.net2280_ep_regs* %59, i64 %idxprom54, !dbg !8055
  %61 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8058
  %regs56 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %61, i32 0, i32 2, !dbg !8059
  store %struct.net2280_ep_regs* %arrayidx55, %struct.net2280_ep_regs** %regs56, align 8, !dbg !8060
  br label %if.end57

if.end57:                                         ; preds = %if.else, %if.end41
  %62 = load i32, i32* %i, align 4, !dbg !8061
  %cmp58 = icmp ne i32 %62, 0, !dbg !8062
  %63 = zext i1 %cmp58 to i64, !dbg !8063
  %cond59 = select i1 %cmp58, i32 2048, i32 512, !dbg !8063
  %64 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8064
  %fifo_size = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %64, i32 0, i32 10, !dbg !8065
  %bf.load60 = load i32, i32* %fifo_size, align 8, !dbg !8066
  %bf.value61 = and i32 %cond59, 4095, !dbg !8066
  %bf.shl = shl i32 %bf.value61, 8, !dbg !8066
  %bf.clear62 = and i32 %bf.load60, -1048321, !dbg !8066
  %bf.set63 = or i32 %bf.clear62, %bf.shl, !dbg !8066
  store i32 %bf.set63, i32* %fifo_size, align 8, !dbg !8066
  %65 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8067
  %regs64 = getelementptr inbounds %struct.net2280, %struct.net2280* %65, i32 0, i32 10, !dbg !8068
  %66 = load %struct.net2280_regs*, %struct.net2280_regs** %regs64, align 8, !dbg !8068
  %67 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8069
  call void @ep_reset_338x(%struct.net2280_regs* %66, %struct.net2280_ep* %67) #12, !dbg !8070
  br label %for.inc, !dbg !8071

for.inc:                                          ; preds = %if.end57
  %68 = load i32, i32* %i, align 4, !dbg !8072
  %inc = add i32 %68, 1, !dbg !8072
  store i32 %inc, i32* %i, align 4, !dbg !8072
  br label %for.cond, !dbg !8073, !llvm.loop !8074

for.end:                                          ; preds = %for.cond
  %69 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8076
  %ep65 = getelementptr inbounds %struct.net2280, %struct.net2280* %69, i32 0, i32 2, !dbg !8077
  %arrayidx66 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep65, i64 0, i64 0, !dbg !8076
  %ep67 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx66, i32 0, i32 0, !dbg !8078
  call void @usb_ep_set_maxpacket_limit(%struct.usb_ep* %ep67, i32 512) #12, !dbg !8079
  %70 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8080
  %ep68 = getelementptr inbounds %struct.net2280, %struct.net2280* %70, i32 0, i32 2, !dbg !8081
  %arrayidx69 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep68, i64 0, i64 0, !dbg !8080
  %ep70 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx69, i32 0, i32 0, !dbg !8082
  %71 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8083
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %71, i32 0, i32 0, !dbg !8084
  %ep0 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 3, !dbg !8085
  store %struct.usb_ep* %ep70, %struct.usb_ep** %ep0, align 8, !dbg !8086
  %72 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8087
  %ep71 = getelementptr inbounds %struct.net2280, %struct.net2280* %72, i32 0, i32 2, !dbg !8088
  %arrayidx72 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep71, i64 0, i64 0, !dbg !8087
  %stopped = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx72, i32 0, i32 10, !dbg !8089
  %bf.load73 = load i32, i32* %stopped, align 8, !dbg !8090
  %bf.clear74 = and i32 %bf.load73, -4194305, !dbg !8090
  store i32 %bf.clear74, i32* %stopped, align 8, !dbg !8090
  %73 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8091
  %bug7734_patched = getelementptr inbounds %struct.net2280, %struct.net2280* %73, i32 0, i32 4, !dbg !8093
  %bf.load75 = load i16, i16* %bug7734_patched, align 8, !dbg !8093
  %bf.lshr = lshr i16 %bf.load75, 11, !dbg !8093
  %bf.clear76 = and i16 %bf.lshr, 1, !dbg !8093
  %bf.cast = zext i16 %bf.clear76 to i32, !dbg !8093
  %tobool77 = icmp ne i32 %bf.cast, 0, !dbg !8091
  br i1 %tobool77, label %if.then78, label %if.end82, !dbg !8094

if.then78:                                        ; preds = %for.end
  %74 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8095
  %usb_ext = getelementptr inbounds %struct.net2280, %struct.net2280* %74, i32 0, i32 12, !dbg !8097
  %75 = load %struct.usb338x_usb_ext_regs*, %struct.usb338x_usb_ext_regs** %usb_ext, align 8, !dbg !8097
  %usbctl2 = getelementptr inbounds %struct.usb338x_usb_ext_regs, %struct.usb338x_usb_ext_regs* %75, i32 0, i32 5, !dbg !8098
  %76 = bitcast i32* %usbctl2 to i8*, !dbg !8099
  %call = call i32 @readl(i8* %76) #12, !dbg !8100
  %conv = zext i32 %call to i64, !dbg !8100
  %and = and i64 %conv, -225, !dbg !8101
  %conv79 = trunc i64 %and to i32, !dbg !8100
  store i32 %conv79, i32* %tmp, align 4, !dbg !8102
  %77 = load i32, i32* %tmp, align 4, !dbg !8103
  %78 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8104
  %usb_ext80 = getelementptr inbounds %struct.net2280, %struct.net2280* %78, i32 0, i32 12, !dbg !8105
  %79 = load %struct.usb338x_usb_ext_regs*, %struct.usb338x_usb_ext_regs** %usb_ext80, align 8, !dbg !8105
  %usbctl281 = getelementptr inbounds %struct.usb338x_usb_ext_regs, %struct.usb338x_usb_ext_regs* %79, i32 0, i32 5, !dbg !8106
  %80 = bitcast i32* %usbctl281 to i8*, !dbg !8107
  call void @writel(i32 %77, i8* %80) #12, !dbg !8108
  br label %if.end82, !dbg !8109

if.end82:                                         ; preds = %if.then78, %for.end
  %81 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8110
  %llregs = getelementptr inbounds %struct.net2280, %struct.net2280* %81, i32 0, i32 17, !dbg !8111
  %82 = load %struct.usb338x_ll_regs*, %struct.usb338x_ll_regs** %llregs, align 8, !dbg !8111
  %ll_lfps_5 = getelementptr inbounds %struct.usb338x_ll_regs, %struct.usb338x_ll_regs* %82, i32 0, i32 14, !dbg !8112
  %83 = bitcast i32* %ll_lfps_5 to i8*, !dbg !8113
  %call83 = call i32 @readl(i8* %83) #12, !dbg !8114
  store i32 %call83, i32* %val, align 4, !dbg !8115
  %84 = load i32, i32* %val, align 4, !dbg !8116
  %and84 = and i32 %84, -983041, !dbg !8116
  store i32 %and84, i32* %val, align 4, !dbg !8116
  %85 = load i32, i32* %val, align 4, !dbg !8117
  %or = or i32 %85, 327680, !dbg !8117
  store i32 %or, i32* %val, align 4, !dbg !8117
  %86 = load i32, i32* %val, align 4, !dbg !8118
  %87 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8119
  %llregs85 = getelementptr inbounds %struct.net2280, %struct.net2280* %87, i32 0, i32 17, !dbg !8120
  %88 = load %struct.usb338x_ll_regs*, %struct.usb338x_ll_regs** %llregs85, align 8, !dbg !8120
  %ll_lfps_586 = getelementptr inbounds %struct.usb338x_ll_regs, %struct.usb338x_ll_regs* %88, i32 0, i32 14, !dbg !8121
  %89 = bitcast i32* %ll_lfps_586 to i8*, !dbg !8122
  call void @writel(i32 %86, i8* %89) #12, !dbg !8123
  %90 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8124
  %llregs87 = getelementptr inbounds %struct.net2280, %struct.net2280* %90, i32 0, i32 17, !dbg !8125
  %91 = load %struct.usb338x_ll_regs*, %struct.usb338x_ll_regs** %llregs87, align 8, !dbg !8125
  %ll_lfps_6 = getelementptr inbounds %struct.usb338x_ll_regs, %struct.usb338x_ll_regs* %91, i32 0, i32 15, !dbg !8126
  %92 = bitcast i32* %ll_lfps_6 to i8*, !dbg !8127
  %call88 = call i32 @readl(i8* %92) #12, !dbg !8128
  store i32 %call88, i32* %val, align 4, !dbg !8129
  %93 = load i32, i32* %val, align 4, !dbg !8130
  %and89 = and i32 %93, -65536, !dbg !8130
  store i32 %and89, i32* %val, align 4, !dbg !8130
  %94 = load i32, i32* %val, align 4, !dbg !8131
  %or90 = or i32 %94, 256, !dbg !8131
  store i32 %or90, i32* %val, align 4, !dbg !8131
  %95 = load i32, i32* %val, align 4, !dbg !8132
  %96 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8133
  %llregs91 = getelementptr inbounds %struct.net2280, %struct.net2280* %96, i32 0, i32 17, !dbg !8134
  %97 = load %struct.usb338x_ll_regs*, %struct.usb338x_ll_regs** %llregs91, align 8, !dbg !8134
  %ll_lfps_692 = getelementptr inbounds %struct.usb338x_ll_regs, %struct.usb338x_ll_regs* %97, i32 0, i32 15, !dbg !8135
  %98 = bitcast i32* %ll_lfps_692 to i8*, !dbg !8136
  call void @writel(i32 %95, i8* %98) #12, !dbg !8137
  %99 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8138
  %llregs93 = getelementptr inbounds %struct.net2280, %struct.net2280* %99, i32 0, i32 17, !dbg !8139
  %100 = load %struct.usb338x_ll_regs*, %struct.usb338x_ll_regs** %llregs93, align 8, !dbg !8139
  %ll_tsn_counters_2 = getelementptr inbounds %struct.usb338x_ll_regs, %struct.usb338x_ll_regs* %100, i32 0, i32 18, !dbg !8140
  %101 = bitcast i32* %ll_tsn_counters_2 to i8*, !dbg !8141
  %call94 = call i32 @readl(i8* %101) #12, !dbg !8142
  store i32 %call94, i32* %val, align 4, !dbg !8143
  %102 = load i32, i32* %val, align 4, !dbg !8144
  %and95 = and i32 %102, -520093697, !dbg !8144
  store i32 %and95, i32* %val, align 4, !dbg !8144
  %103 = load i32, i32* %val, align 4, !dbg !8145
  %or96 = or i32 %103, 268435456, !dbg !8145
  store i32 %or96, i32* %val, align 4, !dbg !8145
  %104 = load i32, i32* %val, align 4, !dbg !8146
  %105 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8147
  %llregs97 = getelementptr inbounds %struct.net2280, %struct.net2280* %105, i32 0, i32 17, !dbg !8148
  %106 = load %struct.usb338x_ll_regs*, %struct.usb338x_ll_regs** %llregs97, align 8, !dbg !8148
  %ll_tsn_counters_298 = getelementptr inbounds %struct.usb338x_ll_regs, %struct.usb338x_ll_regs* %106, i32 0, i32 18, !dbg !8149
  %107 = bitcast i32* %ll_tsn_counters_298 to i8*, !dbg !8150
  call void @writel(i32 %104, i8* %107) #12, !dbg !8151
  %108 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8152
  %llregs99 = getelementptr inbounds %struct.net2280, %struct.net2280* %108, i32 0, i32 17, !dbg !8153
  %109 = load %struct.usb338x_ll_regs*, %struct.usb338x_ll_regs** %llregs99, align 8, !dbg !8153
  %ll_tsn_counters_3 = getelementptr inbounds %struct.usb338x_ll_regs, %struct.usb338x_ll_regs* %109, i32 0, i32 19, !dbg !8154
  %110 = bitcast i32* %ll_tsn_counters_3 to i8*, !dbg !8155
  %call100 = call i32 @readl(i8* %110) #12, !dbg !8156
  store i32 %call100, i32* %val, align 4, !dbg !8157
  %111 = load i32, i32* %val, align 4, !dbg !8158
  %and101 = and i32 %111, -32, !dbg !8158
  store i32 %and101, i32* %val, align 4, !dbg !8158
  %112 = load i32, i32* %val, align 4, !dbg !8159
  %or102 = or i32 %112, 3, !dbg !8159
  store i32 %or102, i32* %val, align 4, !dbg !8159
  %113 = load i32, i32* %val, align 4, !dbg !8160
  %114 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8161
  %llregs103 = getelementptr inbounds %struct.net2280, %struct.net2280* %114, i32 0, i32 17, !dbg !8162
  %115 = load %struct.usb338x_ll_regs*, %struct.usb338x_ll_regs** %llregs103, align 8, !dbg !8162
  %ll_tsn_counters_3104 = getelementptr inbounds %struct.usb338x_ll_regs, %struct.usb338x_ll_regs* %115, i32 0, i32 19, !dbg !8163
  %116 = bitcast i32* %ll_tsn_counters_3104 to i8*, !dbg !8164
  call void @writel(i32 %113, i8* %116) #12, !dbg !8165
  %117 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8166
  %llregs105 = getelementptr inbounds %struct.net2280, %struct.net2280* %117, i32 0, i32 17, !dbg !8167
  %118 = load %struct.usb338x_ll_regs*, %struct.usb338x_ll_regs** %llregs105, align 8, !dbg !8167
  %ll_lfps_timers_2 = getelementptr inbounds %struct.usb338x_ll_regs, %struct.usb338x_ll_regs* %118, i32 0, i32 22, !dbg !8168
  %119 = bitcast i32* %ll_lfps_timers_2 to i8*, !dbg !8169
  %call106 = call i32 @readl(i8* %119) #12, !dbg !8170
  store i32 %call106, i32* %val, align 4, !dbg !8171
  %120 = load i32, i32* %val, align 4, !dbg !8172
  %and107 = and i32 %120, -65536, !dbg !8173
  %or108 = or i32 %and107, 2125, !dbg !8174
  %121 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8175
  %llregs109 = getelementptr inbounds %struct.net2280, %struct.net2280* %121, i32 0, i32 17, !dbg !8176
  %122 = load %struct.usb338x_ll_regs*, %struct.usb338x_ll_regs** %llregs109, align 8, !dbg !8176
  %ll_lfps_timers_2110 = getelementptr inbounds %struct.usb338x_ll_regs, %struct.usb338x_ll_regs* %122, i32 0, i32 22, !dbg !8177
  %123 = bitcast i32* %ll_lfps_timers_2110 to i8*, !dbg !8178
  call void @writel(i32 %or108, i8* %123) #12, !dbg !8179
  %124 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8180
  %llregs111 = getelementptr inbounds %struct.net2280, %struct.net2280* %124, i32 0, i32 17, !dbg !8181
  %125 = load %struct.usb338x_ll_regs*, %struct.usb338x_ll_regs** %llregs111, align 8, !dbg !8181
  %ll_tsn_chicken_bit = getelementptr inbounds %struct.usb338x_ll_regs, %struct.usb338x_ll_regs* %125, i32 0, i32 24, !dbg !8182
  %126 = bitcast i32* %ll_tsn_chicken_bit to i8*, !dbg !8183
  %call112 = call i32 @readl(i8* %126) #12, !dbg !8184
  store i32 %call112, i32* %val, align 4, !dbg !8185
  %127 = load i32, i32* %val, align 4, !dbg !8186
  %conv113 = zext i32 %127 to i64, !dbg !8186
  %or114 = or i64 %conv113, 8, !dbg !8186
  %conv115 = trunc i64 %or114 to i32, !dbg !8186
  store i32 %conv115, i32* %val, align 4, !dbg !8186
  %128 = load i32, i32* %val, align 4, !dbg !8187
  %129 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8188
  %llregs116 = getelementptr inbounds %struct.net2280, %struct.net2280* %129, i32 0, i32 17, !dbg !8189
  %130 = load %struct.usb338x_ll_regs*, %struct.usb338x_ll_regs** %llregs116, align 8, !dbg !8189
  %ll_tsn_chicken_bit117 = getelementptr inbounds %struct.usb338x_ll_regs, %struct.usb338x_ll_regs* %130, i32 0, i32 24, !dbg !8190
  %131 = bitcast i32* %ll_tsn_chicken_bit117 to i8*, !dbg !8191
  call void @writel(i32 %128, i8* %131) #12, !dbg !8192
  %132 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8193
  %gadget118 = getelementptr inbounds %struct.net2280, %struct.net2280* %132, i32 0, i32 0, !dbg !8194
  %ep0119 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget118, i32 0, i32 3, !dbg !8195
  %133 = load %struct.usb_ep*, %struct.usb_ep** %ep0119, align 8, !dbg !8195
  %ep_list = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %133, i32 0, i32 3, !dbg !8196
  call void @INIT_LIST_HEAD(%struct.list_head* %ep_list) #12, !dbg !8197
  %134 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8198
  %dep = getelementptr inbounds %struct.net2280, %struct.net2280* %134, i32 0, i32 15, !dbg !8199
  %135 = load %struct.net2280_dep_regs*, %struct.net2280_dep_regs** %dep, align 8, !dbg !8199
  %arrayidx120 = getelementptr %struct.net2280_dep_regs, %struct.net2280_dep_regs* %135, i64 0, !dbg !8198
  %dep_cfg = getelementptr inbounds %struct.net2280_dep_regs, %struct.net2280_dep_regs* %arrayidx120, i32 0, i32 0, !dbg !8200
  %136 = bitcast i32* %dep_cfg to i8*, !dbg !8201
  call void @writel(i32 13, i8* %136) #12, !dbg !8202
  %137 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8203
  %dep121 = getelementptr inbounds %struct.net2280, %struct.net2280* %137, i32 0, i32 15, !dbg !8204
  %138 = load %struct.net2280_dep_regs*, %struct.net2280_dep_regs** %dep121, align 8, !dbg !8204
  %arrayidx122 = getelementptr %struct.net2280_dep_regs, %struct.net2280_dep_regs* %138, i64 1, !dbg !8203
  %dep_cfg123 = getelementptr inbounds %struct.net2280_dep_regs, %struct.net2280_dep_regs* %arrayidx122, i32 0, i32 0, !dbg !8205
  %139 = bitcast i32* %dep_cfg123 to i8*, !dbg !8206
  call void @writel(i32 13, i8* %139) #12, !dbg !8207
  %140 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8208
  %dep124 = getelementptr inbounds %struct.net2280, %struct.net2280* %140, i32 0, i32 15, !dbg !8209
  %141 = load %struct.net2280_dep_regs*, %struct.net2280_dep_regs** %dep124, align 8, !dbg !8209
  %arrayidx125 = getelementptr %struct.net2280_dep_regs, %struct.net2280_dep_regs* %141, i64 2, !dbg !8208
  %dep_cfg126 = getelementptr inbounds %struct.net2280_dep_regs, %struct.net2280_dep_regs* %arrayidx125, i32 0, i32 0, !dbg !8210
  %142 = bitcast i32* %dep_cfg126 to i8*, !dbg !8211
  call void @writel(i32 14, i8* %142) #12, !dbg !8212
  %143 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8213
  %dep127 = getelementptr inbounds %struct.net2280, %struct.net2280* %143, i32 0, i32 15, !dbg !8214
  %144 = load %struct.net2280_dep_regs*, %struct.net2280_dep_regs** %dep127, align 8, !dbg !8214
  %arrayidx128 = getelementptr %struct.net2280_dep_regs, %struct.net2280_dep_regs* %144, i64 3, !dbg !8213
  %dep_cfg129 = getelementptr inbounds %struct.net2280_dep_regs, %struct.net2280_dep_regs* %arrayidx128, i32 0, i32 0, !dbg !8215
  %145 = bitcast i32* %dep_cfg129 to i8*, !dbg !8216
  call void @writel(i32 14, i8* %145) #12, !dbg !8217
  %146 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8218
  %dep130 = getelementptr inbounds %struct.net2280, %struct.net2280* %146, i32 0, i32 15, !dbg !8219
  %147 = load %struct.net2280_dep_regs*, %struct.net2280_dep_regs** %dep130, align 8, !dbg !8219
  %arrayidx131 = getelementptr %struct.net2280_dep_regs, %struct.net2280_dep_regs* %147, i64 4, !dbg !8218
  %dep_cfg132 = getelementptr inbounds %struct.net2280_dep_regs, %struct.net2280_dep_regs* %arrayidx131, i32 0, i32 0, !dbg !8220
  %148 = bitcast i32* %dep_cfg132 to i8*, !dbg !8221
  call void @writel(i32 15, i8* %148) #12, !dbg !8222
  %149 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !8223
  %dep133 = getelementptr inbounds %struct.net2280, %struct.net2280* %149, i32 0, i32 15, !dbg !8224
  %150 = load %struct.net2280_dep_regs*, %struct.net2280_dep_regs** %dep133, align 8, !dbg !8224
  %arrayidx134 = getelementptr %struct.net2280_dep_regs, %struct.net2280_dep_regs* %150, i64 5, !dbg !8223
  %dep_cfg135 = getelementptr inbounds %struct.net2280_dep_regs, %struct.net2280_dep_regs* %arrayidx134, i32 0, i32 0, !dbg !8225
  %151 = bitcast i32* %dep_cfg135 to i8*, !dbg !8226
  call void @writel(i32 12, i8* %151) #12, !dbg !8227
  ret void, !dbg !8228
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ep_reset_228x(%struct.net2280_regs* %regs, %struct.net2280_ep* %ep) #2 !dbg !8229 {
entry:
  %regs.addr = alloca %struct.net2280_regs*, align 8
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %tmp = alloca i32, align 4
  store %struct.net2280_regs* %regs, %struct.net2280_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_regs** %regs.addr, metadata !8232, metadata !DIExpression()), !dbg !8233
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !8234, metadata !DIExpression()), !dbg !8235
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !8236, metadata !DIExpression()), !dbg !8237
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8238
  %desc = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 9, !dbg !8239
  store %struct.usb_endpoint_descriptor* null, %struct.usb_endpoint_descriptor** %desc, align 8, !dbg !8240
  %1 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8241
  %queue = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %1, i32 0, i32 8, !dbg !8242
  call void @INIT_LIST_HEAD(%struct.list_head* %queue) #12, !dbg !8243
  %2 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8244
  %ep1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %2, i32 0, i32 0, !dbg !8245
  call void @usb_ep_set_maxpacket_limit(%struct.usb_ep* %ep1, i32 -1) #12, !dbg !8246
  %3 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8247
  %ep2 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %3, i32 0, i32 0, !dbg !8248
  %ops = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep2, i32 0, i32 2, !dbg !8249
  store %struct.usb_ep_ops* @net2280_ep_ops, %struct.usb_ep_ops** %ops, align 8, !dbg !8250
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8251
  %dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %4, i32 0, i32 3, !dbg !8253
  %5 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !8253
  %tobool = icmp ne %struct.net2280_dma_regs* %5, null, !dbg !8251
  br i1 %tobool, label %if.then, label %if.else, !dbg !8254

if.then:                                          ; preds = %entry
  %6 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8255
  %dma3 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %6, i32 0, i32 3, !dbg !8257
  %7 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma3, align 8, !dbg !8257
  %dmactl = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %7, i32 0, i32 0, !dbg !8258
  %8 = bitcast i32* %dmactl to i8*, !dbg !8259
  call void @writel(i32 0, i8* %8) #12, !dbg !8260
  %9 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8261
  %dma4 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %9, i32 0, i32 3, !dbg !8262
  %10 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma4, align 8, !dbg !8262
  %dmastat = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %10, i32 0, i32 1, !dbg !8263
  %11 = bitcast i32* %dmastat to i8*, !dbg !8264
  call void @writel(i32 50331650, i8* %11) #12, !dbg !8265
  %12 = load %struct.net2280_regs*, %struct.net2280_regs** %regs.addr, align 8, !dbg !8266
  %pciirqenb0 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %12, i32 0, i32 4, !dbg !8267
  %13 = bitcast i32* %pciirqenb0 to i8*, !dbg !8268
  %call = call i32 @readl(i8* %13) #12, !dbg !8269
  store i32 %call, i32* %tmp, align 4, !dbg !8270
  %14 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8271
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %14, i32 0, i32 10, !dbg !8271
  %bf.load = load i32, i32* %num, align 8, !dbg !8271
  %bf.clear = and i32 %bf.load, 255, !dbg !8271
  %sh_prom = zext i32 %bf.clear to i64, !dbg !8271
  %shl = shl i64 1, %sh_prom, !dbg !8271
  %neg = xor i64 %shl, -1, !dbg !8272
  %15 = load i32, i32* %tmp, align 4, !dbg !8273
  %conv = zext i32 %15 to i64, !dbg !8273
  %and = and i64 %conv, %neg, !dbg !8273
  %conv5 = trunc i64 %and to i32, !dbg !8273
  store i32 %conv5, i32* %tmp, align 4, !dbg !8273
  %16 = load i32, i32* %tmp, align 4, !dbg !8274
  %17 = load %struct.net2280_regs*, %struct.net2280_regs** %regs.addr, align 8, !dbg !8275
  %pciirqenb06 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %17, i32 0, i32 4, !dbg !8276
  %18 = bitcast i32* %pciirqenb06 to i8*, !dbg !8277
  call void @writel(i32 %16, i8* %18) #12, !dbg !8278
  br label %if.end, !dbg !8279

if.else:                                          ; preds = %entry
  %19 = load %struct.net2280_regs*, %struct.net2280_regs** %regs.addr, align 8, !dbg !8280
  %pciirqenb1 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %19, i32 0, i32 5, !dbg !8282
  %20 = bitcast i32* %pciirqenb1 to i8*, !dbg !8283
  %call7 = call i32 @readl(i8* %20) #12, !dbg !8284
  store i32 %call7, i32* %tmp, align 4, !dbg !8285
  %21 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8286
  %num8 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %21, i32 0, i32 10, !dbg !8286
  %bf.load9 = load i32, i32* %num8, align 8, !dbg !8286
  %bf.clear10 = and i32 %bf.load9, 255, !dbg !8286
  %add = add i32 8, %bf.clear10, !dbg !8286
  %sh_prom11 = zext i32 %add to i64, !dbg !8286
  %shl12 = shl i64 1, %sh_prom11, !dbg !8286
  %neg13 = xor i64 %shl12, -1, !dbg !8287
  %22 = load i32, i32* %tmp, align 4, !dbg !8288
  %conv14 = zext i32 %22 to i64, !dbg !8288
  %and15 = and i64 %conv14, %neg13, !dbg !8288
  %conv16 = trunc i64 %and15 to i32, !dbg !8288
  store i32 %conv16, i32* %tmp, align 4, !dbg !8288
  %23 = load i32, i32* %tmp, align 4, !dbg !8289
  %24 = load %struct.net2280_regs*, %struct.net2280_regs** %regs.addr, align 8, !dbg !8290
  %pciirqenb117 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %24, i32 0, i32 5, !dbg !8291
  %25 = bitcast i32* %pciirqenb117 to i8*, !dbg !8292
  call void @writel(i32 %23, i8* %25) #12, !dbg !8293
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %26 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8294
  %regs18 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %26, i32 0, i32 2, !dbg !8295
  %27 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs18, align 8, !dbg !8295
  %ep_irqenb = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %27, i32 0, i32 2, !dbg !8296
  %28 = bitcast i32* %ep_irqenb to i8*, !dbg !8297
  call void @writel(i32 0, i8* %28) #12, !dbg !8298
  %29 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8299
  %is_in = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %29, i32 0, i32 10, !dbg !8301
  %bf.load19 = load i32, i32* %is_in, align 8, !dbg !8301
  %bf.lshr = lshr i32 %bf.load19, 24, !dbg !8301
  %bf.clear20 = and i32 %bf.lshr, 1, !dbg !8301
  %tobool21 = icmp ne i32 %bf.clear20, 0, !dbg !8299
  br i1 %tobool21, label %lor.lhs.false, label %if.then24, !dbg !8302

lor.lhs.false:                                    ; preds = %if.end
  %30 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8303
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %30, i32 0, i32 6, !dbg !8304
  %31 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8304
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %31, i32 0, i32 8, !dbg !8305
  %32 = load i64, i64* %quirks, align 8, !dbg !8305
  %and22 = and i64 %32, 2, !dbg !8306
  %tobool23 = icmp ne i64 %and22, 0, !dbg !8306
  br i1 %tobool23, label %if.then24, label %if.else25, !dbg !8307

if.then24:                                        ; preds = %lor.lhs.false, %if.end
  store i32 33872, i32* %tmp, align 4, !dbg !8308
  br label %if.end26, !dbg !8310

if.else25:                                        ; preds = %lor.lhs.false
  store i32 212, i32* %tmp, align 4, !dbg !8311
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.then24
  %33 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8313
  %num27 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %33, i32 0, i32 10, !dbg !8315
  %bf.load28 = load i32, i32* %num27, align 8, !dbg !8315
  %bf.clear29 = and i32 %bf.load28, 255, !dbg !8315
  %cmp = icmp ne i32 %bf.clear29, 0, !dbg !8316
  br i1 %cmp, label %if.then31, label %if.end34, !dbg !8317

if.then31:                                        ; preds = %if.end26
  %34 = load i32, i32* %tmp, align 4, !dbg !8318
  %conv32 = zext i32 %34 to i64, !dbg !8318
  %or = or i64 %conv32, 3, !dbg !8318
  %conv33 = trunc i64 %or to i32, !dbg !8318
  store i32 %conv33, i32* %tmp, align 4, !dbg !8318
  br label %if.end34, !dbg !8320

if.end34:                                         ; preds = %if.then31, %if.end26
  %35 = load i32, i32* %tmp, align 4, !dbg !8321
  %36 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8322
  %regs35 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %36, i32 0, i32 2, !dbg !8323
  %37 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs35, align 8, !dbg !8323
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %37, i32 0, i32 1, !dbg !8324
  %38 = bitcast i32* %ep_rsp to i8*, !dbg !8325
  call void @writel(i32 %35, i8* %38) #12, !dbg !8326
  %39 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8327
  %dev36 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %39, i32 0, i32 6, !dbg !8329
  %40 = load %struct.net2280*, %struct.net2280** %dev36, align 8, !dbg !8329
  %quirks37 = getelementptr inbounds %struct.net2280, %struct.net2280* %40, i32 0, i32 8, !dbg !8330
  %41 = load i64, i64* %quirks37, align 8, !dbg !8330
  %and38 = and i64 %41, 2, !dbg !8331
  %tobool39 = icmp ne i64 %and38, 0, !dbg !8331
  br i1 %tobool39, label %if.then40, label %if.else41, !dbg !8332

if.then40:                                        ; preds = %if.end34
  store i32 12288, i32* %tmp, align 4, !dbg !8333
  br label %if.end42, !dbg !8334

if.else41:                                        ; preds = %if.end34
  store i32 0, i32* %tmp, align 4, !dbg !8335
  br label %if.end42

if.end42:                                         ; preds = %if.else41, %if.then40
  %42 = load i32, i32* %tmp, align 4, !dbg !8336
  %conv43 = zext i32 %42 to i64, !dbg !8336
  %or44 = or i64 %conv43, 2097152, !dbg !8337
  %or45 = or i64 %or44, 1048576, !dbg !8338
  %or46 = or i64 %or45, 524288, !dbg !8339
  %or47 = or i64 %or46, 262144, !dbg !8340
  %or48 = or i64 %or47, 131072, !dbg !8341
  %or49 = or i64 %or48, 65536, !dbg !8342
  %or50 = or i64 %or49, 512, !dbg !8343
  %or51 = or i64 %or50, 64, !dbg !8344
  %or52 = or i64 %or51, 32, !dbg !8345
  %or53 = or i64 %or52, 8, !dbg !8346
  %or54 = or i64 %or53, 4, !dbg !8347
  %or55 = or i64 %or54, 2, !dbg !8348
  %or56 = or i64 %or55, 1, !dbg !8349
  %conv57 = trunc i64 %or56 to i32, !dbg !8336
  %43 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !8350
  %regs58 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %43, i32 0, i32 2, !dbg !8351
  %44 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs58, align 8, !dbg !8351
  %ep_stat = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %44, i32 0, i32 3, !dbg !8352
  %45 = bitcast i32* %ep_stat to i8*, !dbg !8353
  call void @writel(i32 %conv57, i8* %45) #12, !dbg !8354
  ret void, !dbg !8355
}

; Function Attrs: noredzone
declare dso_local void @usb_ep_set_maxpacket_limit(%struct.usb_ep*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_enable(%struct.usb_ep* %_ep, %struct.usb_endpoint_descriptor* %desc) #2 !dbg !4614 {
entry:
  %lock.addr.i317 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i317, metadata !5734, metadata !DIExpression()), !dbg !8356
  %flags.addr.i318 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i318, metadata !5740, metadata !DIExpression()), !dbg !8363
  %tmp.i319 = alloca i32, align 4
  %tmp8.i320 = alloca i32, align 4
  %lock.addr.i312 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i312, metadata !5734, metadata !DIExpression()), !dbg !8364
  %flags.addr.i313 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i313, metadata !5740, metadata !DIExpression()), !dbg !8370
  %tmp.i314 = alloca i32, align 4
  %tmp8.i315 = alloca i32, align 4
  %lock.addr.i310 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i310, metadata !5734, metadata !DIExpression()), !dbg !8371
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5740, metadata !DIExpression()), !dbg !8373
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4661, metadata !DIExpression()), !dbg !8374
  %retval = alloca i32, align 4
  %_ep.addr = alloca %struct.usb_ep*, align 8
  %desc.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  %dev = alloca %struct.net2280*, align 8
  %ep = alloca %struct.net2280_ep*, align 8
  %max = alloca i32, align 4
  %tmp = alloca i32, align 4
  %type = alloca i32, align 4
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.net2280_ep*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp66 = alloca i32, align 4
  %__dummy70 = alloca i64, align 8
  %__dummy271 = alloca i64, align 8
  %tmp74 = alloca i32, align 4
  store %struct.usb_ep* %_ep, %struct.usb_ep** %_ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %_ep.addr, metadata !8381, metadata !DIExpression()), !dbg !8382
  store %struct.usb_endpoint_descriptor* %desc, %struct.usb_endpoint_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %desc.addr, metadata !8383, metadata !DIExpression()), !dbg !8384
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev, metadata !8385, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !8387, metadata !DIExpression()), !dbg !8388
  call void @llvm.dbg.declare(metadata i32* %max, metadata !8389, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !8391, metadata !DIExpression()), !dbg !8392
  store i32 0, i32* %tmp, align 4, !dbg !8392
  call void @llvm.dbg.declare(metadata i32* %type, metadata !8393, metadata !DIExpression()), !dbg !8394
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8395, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8397, metadata !DIExpression()), !dbg !8398
  store i32 0, i32* %ret, align 4, !dbg !8398
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8399, metadata !DIExpression()), !dbg !8401
  %0 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !8401
  %1 = bitcast %struct.usb_ep* %0 to i8*, !dbg !8401
  store i8* %1, i8** %__mptr, align 8, !dbg !8401
  br label %do.body, !dbg !8401

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8402

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8401
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8401
  %3 = bitcast i8* %add.ptr to %struct.net2280_ep*, !dbg !8401
  store %struct.net2280_ep* %3, %struct.net2280_ep** %tmp1, align 8, !dbg !8402
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %tmp1, align 8, !dbg !8401
  store %struct.net2280_ep* %4, %struct.net2280_ep** %ep, align 8, !dbg !8404
  %5 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !8405
  %tobool = icmp ne %struct.usb_ep* %5, null, !dbg !8405
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8407

lor.lhs.false:                                    ; preds = %do.end
  %6 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8408
  %tobool2 = icmp ne %struct.usb_endpoint_descriptor* %6, null, !dbg !8408
  br i1 %tobool2, label %lor.lhs.false3, label %if.then, !dbg !8409

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %7 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8410
  %desc4 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %7, i32 0, i32 9, !dbg !8411
  %8 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc4, align 8, !dbg !8411
  %tobool5 = icmp ne %struct.usb_endpoint_descriptor* %8, null, !dbg !8410
  br i1 %tobool5, label %if.then, label %lor.lhs.false6, !dbg !8412

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %9 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !8413
  %name = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %9, i32 0, i32 1, !dbg !8414
  %10 = load i8*, i8** %name, align 8, !dbg !8414
  %cmp = icmp eq i8* %10, getelementptr inbounds ([4 x i8], [4 x i8]* @ep0name, i64 0, i64 0), !dbg !8415
  br i1 %cmp, label %if.then, label %lor.lhs.false7, !dbg !8416

lor.lhs.false7:                                   ; preds = %lor.lhs.false6
  %11 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8417
  %bDescriptorType = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %11, i32 0, i32 1, !dbg !8418
  %12 = load i8, i8* %bDescriptorType, align 1, !dbg !8418
  %conv = zext i8 %12 to i32, !dbg !8417
  %cmp8 = icmp ne i32 %conv, 5, !dbg !8419
  br i1 %cmp8, label %if.then, label %if.end, !dbg !8420

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %do.end
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.net2280_enable, i64 0, i64 0), i32 196) #13, !dbg !8421
  store i32 -22, i32* %retval, align 4, !dbg !8423
  br label %return, !dbg !8423

if.end:                                           ; preds = %lor.lhs.false7
  %13 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8424
  %dev10 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %13, i32 0, i32 6, !dbg !8425
  %14 = load %struct.net2280*, %struct.net2280** %dev10, align 8, !dbg !8425
  store %struct.net2280* %14, %struct.net2280** %dev, align 8, !dbg !8426
  %15 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8427
  %driver = getelementptr inbounds %struct.net2280, %struct.net2280* %15, i32 0, i32 3, !dbg !8429
  %16 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver, align 8, !dbg !8429
  %tobool11 = icmp ne %struct.usb_gadget_driver* %16, null, !dbg !8427
  br i1 %tobool11, label %lor.lhs.false12, label %if.then15, !dbg !8430

lor.lhs.false12:                                  ; preds = %if.end
  %17 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8431
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %17, i32 0, i32 0, !dbg !8432
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !8433
  %18 = load i32, i32* %speed, align 8, !dbg !8433
  %cmp13 = icmp eq i32 %18, 0, !dbg !8434
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !8435

if.then15:                                        ; preds = %lor.lhs.false12, %if.end
  store i32 -108, i32* %ret, align 4, !dbg !8436
  br label %print_err, !dbg !8438

if.end16:                                         ; preds = %lor.lhs.false12
  %19 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8439
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %19, i32 0, i32 2, !dbg !8441
  %20 = load i8, i8* %bEndpointAddress, align 1, !dbg !8441
  %conv17 = zext i8 %20 to i32, !dbg !8439
  %and = and i32 %conv17, 15, !dbg !8442
  %cmp18 = icmp eq i32 %and, 13, !dbg !8443
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !8444

if.then20:                                        ; preds = %if.end16
  store i32 -33, i32* %ret, align 4, !dbg !8445
  br label %print_err, !dbg !8447

if.end21:                                         ; preds = %if.end16
  %21 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8448
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %21, i32 0, i32 8, !dbg !8450
  %22 = load i64, i64* %quirks, align 8, !dbg !8450
  %and22 = and i64 %22, 8, !dbg !8451
  %tobool23 = icmp ne i64 %and22, 0, !dbg !8451
  br i1 %tobool23, label %if.then24, label %if.end46, !dbg !8452

if.then24:                                        ; preds = %if.end21
  %23 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8453
  %bEndpointAddress25 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %23, i32 0, i32 2, !dbg !8456
  %24 = load i8, i8* %bEndpointAddress25, align 1, !dbg !8456
  %conv26 = zext i8 %24 to i32, !dbg !8453
  %and27 = and i32 %conv26, 15, !dbg !8457
  %cmp28 = icmp sge i32 %and27, 12, !dbg !8458
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !8459

if.then30:                                        ; preds = %if.then24
  store i32 -33, i32* %ret, align 4, !dbg !8460
  br label %print_err, !dbg !8462

if.end31:                                         ; preds = %if.then24
  %25 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8463
  %call32 = call i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %25) #12, !dbg !8464
  %tobool33 = icmp ne i32 %call32, 0, !dbg !8465
  %lnot = xor i1 %tobool33, true, !dbg !8465
  %lnot34 = xor i1 %lnot, true, !dbg !8466
  %lnot.ext = zext i1 %lnot34 to i32, !dbg !8466
  %26 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8467
  %is_in = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %26, i32 0, i32 10, !dbg !8468
  %bf.load = load i32, i32* %is_in, align 8, !dbg !8469
  %bf.value = and i32 %lnot.ext, 1, !dbg !8469
  %bf.shl = shl i32 %bf.value, 24, !dbg !8469
  %bf.clear = and i32 %bf.load, -16777217, !dbg !8469
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !8469
  store i32 %bf.set, i32* %is_in, align 8, !dbg !8469
  %27 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8470
  %enhanced_mode = getelementptr inbounds %struct.net2280, %struct.net2280* %27, i32 0, i32 6, !dbg !8472
  %28 = load i32, i32* %enhanced_mode, align 4, !dbg !8472
  %tobool35 = icmp ne i32 %28, 0, !dbg !8470
  br i1 %tobool35, label %land.lhs.true, label %if.end45, !dbg !8473

land.lhs.true:                                    ; preds = %if.end31
  %29 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8474
  %is_in36 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %29, i32 0, i32 10, !dbg !8475
  %bf.load37 = load i32, i32* %is_in36, align 8, !dbg !8475
  %bf.lshr = lshr i32 %bf.load37, 24, !dbg !8475
  %bf.clear38 = and i32 %bf.lshr, 1, !dbg !8475
  %tobool39 = icmp ne i32 %bf.clear38, 0, !dbg !8474
  br i1 %tobool39, label %land.lhs.true40, label %if.end45, !dbg !8476

land.lhs.true40:                                  ; preds = %land.lhs.true
  %30 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8477
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %30, i32 0, i32 10, !dbg !8478
  %bf.load41 = load i32, i32* %num, align 8, !dbg !8478
  %bf.clear42 = and i32 %bf.load41, 255, !dbg !8478
  %idxprom = zext i32 %bf.clear42 to i64, !dbg !8479
  %arrayidx = getelementptr [9 x i32], [9 x i32]* @net2280_enable.ep_key, i64 0, i64 %idxprom, !dbg !8479
  %31 = load i32, i32* %arrayidx, align 4, !dbg !8479
  %tobool43 = icmp ne i32 %31, 0, !dbg !8479
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !8480

if.then44:                                        ; preds = %land.lhs.true40
  store i32 -22, i32* %ret, align 4, !dbg !8481
  br label %print_err, !dbg !8483

if.end45:                                         ; preds = %land.lhs.true40, %land.lhs.true, %if.end31
  br label %if.end46, !dbg !8484

if.end46:                                         ; preds = %if.end45, %if.end21
  %32 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8485
  %call47 = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %32) #12, !dbg !8486
  store i32 %call47, i32* %max, align 4, !dbg !8487
  %33 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8488
  %num48 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %33, i32 0, i32 10, !dbg !8490
  %bf.load49 = load i32, i32* %num48, align 8, !dbg !8490
  %bf.clear50 = and i32 %bf.load49, 255, !dbg !8490
  %cmp51 = icmp sgt i32 %bf.clear50, 4, !dbg !8491
  br i1 %cmp51, label %land.lhs.true53, label %if.end61, !dbg !8492

land.lhs.true53:                                  ; preds = %if.end46
  %34 = load i32, i32* %max, align 4, !dbg !8493
  %cmp54 = icmp ugt i32 %34, 64, !dbg !8494
  br i1 %cmp54, label %land.lhs.true56, label %if.end61, !dbg !8495

land.lhs.true56:                                  ; preds = %land.lhs.true53
  %35 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8496
  %quirks57 = getelementptr inbounds %struct.net2280, %struct.net2280* %35, i32 0, i32 8, !dbg !8497
  %36 = load i64, i64* %quirks57, align 8, !dbg !8497
  %and58 = and i64 %36, 1, !dbg !8498
  %tobool59 = icmp ne i64 %and58, 0, !dbg !8498
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !8499

if.then60:                                        ; preds = %land.lhs.true56
  store i32 -34, i32* %ret, align 4, !dbg !8500
  br label %print_err, !dbg !8502

if.end61:                                         ; preds = %land.lhs.true56, %land.lhs.true53, %if.end46
  br label %do.body62, !dbg !8503

do.body62:                                        ; preds = %if.end61
  br label %do.body63, !dbg !8504

do.body63:                                        ; preds = %do.body62
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8505, metadata !DIExpression()), !dbg !8507
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8508, metadata !DIExpression()), !dbg !8507
  %cmp64 = icmp eq i64* %__dummy, %__dummy2, !dbg !8507
  %conv65 = zext i1 %cmp64 to i32, !dbg !8507
  store i32 1, i32* %tmp66, align 4, !dbg !8507
  %37 = load i32, i32* %tmp66, align 4, !dbg !8507
  br label %do.body67, !dbg !8509

do.body67:                                        ; preds = %do.body63
  br label %do.body68, !dbg !8510

do.body68:                                        ; preds = %do.body67
  br label %do.body69, !dbg !8511

do.body69:                                        ; preds = %do.body68
  call void @llvm.dbg.declare(metadata i64* %__dummy70, metadata !8513, metadata !DIExpression()), !dbg !8516
  call void @llvm.dbg.declare(metadata i64* %__dummy271, metadata !8517, metadata !DIExpression()), !dbg !8516
  %cmp72 = icmp eq i64* %__dummy70, %__dummy271, !dbg !8516
  %conv73 = zext i1 %cmp72 to i32, !dbg !8516
  store i32 1, i32* %tmp74, align 4, !dbg !8516
  %38 = load i32, i32* %tmp74, align 4, !dbg !8516
  %call75 = call i64 @arch_local_irq_save() #12, !dbg !8518
  store i64 %call75, i64* %flags, align 8, !dbg !8518
  br label %do.end76, !dbg !8518

do.end76:                                         ; preds = %do.body69
  br label %do.end77, !dbg !8511

do.end77:                                         ; preds = %do.end76
  br label %do.body78, !dbg !8510

do.body78:                                        ; preds = %do.end77
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8519, !srcloc !8520
  br label %do.body79, !dbg !8519

do.body79:                                        ; preds = %do.body78
  %39 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8521
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %39, i32 0, i32 1, !dbg !8521
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8522
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !8523
  %rlock.i = bitcast %union.anon.4* %41 to %struct.raw_spinlock*, !dbg !8523
  br label %do.end81, !dbg !8521

do.end81:                                         ; preds = %do.body79
  br label %do.end82, !dbg !8519

do.end82:                                         ; preds = %do.end81
  br label %do.end83, !dbg !8510

do.end83:                                         ; preds = %do.end82
  br label %do.end84, !dbg !8509

do.end84:                                         ; preds = %do.end83
  br label %do.end85, !dbg !8504

do.end85:                                         ; preds = %do.end84
  %42 = load i32, i32* %max, align 4, !dbg !8524
  %43 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !8525
  %maxpacket = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %43, i32 0, i32 7, !dbg !8526
  %44 = bitcast [7 x i8]* %maxpacket to i56*, !dbg !8526
  %45 = zext i32 %42 to i56, !dbg !8527
  %bf.load86 = load i56, i56* %44, align 2, !dbg !8527
  %bf.value87 = and i56 %45, 65535, !dbg !8527
  %bf.clear88 = and i56 %bf.load86, -65536, !dbg !8527
  %bf.set89 = or i56 %bf.clear88, %bf.value87, !dbg !8527
  store i56 %bf.set89, i56* %44, align 2, !dbg !8527
  %bf.result.cast = trunc i56 %bf.value87 to i32, !dbg !8527
  %46 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8528
  %47 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8529
  %desc90 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %47, i32 0, i32 9, !dbg !8530
  store %struct.usb_endpoint_descriptor* %46, %struct.usb_endpoint_descriptor** %desc90, align 8, !dbg !8531
  %48 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8532
  %stopped = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %48, i32 0, i32 10, !dbg !8533
  %bf.load91 = load i32, i32* %stopped, align 8, !dbg !8534
  %bf.clear92 = and i32 %bf.load91, -4194305, !dbg !8534
  store i32 %bf.clear92, i32* %stopped, align 8, !dbg !8534
  %49 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8535
  %wedged = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %49, i32 0, i32 10, !dbg !8536
  %bf.load93 = load i32, i32* %wedged, align 8, !dbg !8537
  %bf.clear94 = and i32 %bf.load93, -8388609, !dbg !8537
  store i32 %bf.clear94, i32* %wedged, align 8, !dbg !8537
  %50 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8538
  %out_overflow = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %50, i32 0, i32 10, !dbg !8539
  %bf.load95 = load i32, i32* %out_overflow, align 8, !dbg !8540
  %bf.clear96 = and i32 %bf.load95, -2097153, !dbg !8540
  store i32 %bf.clear96, i32* %out_overflow, align 8, !dbg !8540
  %51 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8541
  %52 = load i32, i32* %max, align 4, !dbg !8542
  call void @set_max_speed(%struct.net2280_ep* %51, i32 %52) #12, !dbg !8543
  %53 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8544
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %53, i32 0, i32 2, !dbg !8545
  %54 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !8545
  %ep_stat = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %54, i32 0, i32 3, !dbg !8546
  %55 = bitcast i32* %ep_stat to i8*, !dbg !8547
  call void @writel(i32 512, i8* %55) #12, !dbg !8548
  %56 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8549
  %quirks97 = getelementptr inbounds %struct.net2280, %struct.net2280* %56, i32 0, i32 8, !dbg !8550
  %57 = load i64, i64* %quirks97, align 8, !dbg !8550
  %and98 = and i64 %57, 8, !dbg !8551
  %tobool99 = icmp ne i64 %and98, 0, !dbg !8551
  br i1 %tobool99, label %land.lhs.true100, label %if.end125, !dbg !8552

land.lhs.true100:                                 ; preds = %do.end85
  %58 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8553
  %enhanced_mode101 = getelementptr inbounds %struct.net2280, %struct.net2280* %58, i32 0, i32 6, !dbg !8554
  %59 = load i32, i32* %enhanced_mode101, align 4, !dbg !8554
  %tobool102 = icmp ne i32 %59, 0, !dbg !8553
  br i1 %tobool102, label %if.then103, label %if.end125, !dbg !8555

if.then103:                                       ; preds = %land.lhs.true100
  %60 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8556
  %cfg = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %60, i32 0, i32 1, !dbg !8557
  %61 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %cfg, align 8, !dbg !8557
  %ep_cfg = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %61, i32 0, i32 0, !dbg !8558
  %62 = bitcast i32* %ep_cfg to i8*, !dbg !8559
  %call104 = call i32 @readl(i8* %62) #12, !dbg !8560
  store i32 %call104, i32* %tmp, align 4, !dbg !8561
  %63 = load i32, i32* %tmp, align 4, !dbg !8562
  %and105 = and i32 %63, 15, !dbg !8563
  %64 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8564
  %call106 = call i32 @usb_endpoint_num(%struct.usb_endpoint_descriptor* %64) #12, !dbg !8565
  %cmp107 = icmp ne i32 %and105, %call106, !dbg !8566
  br i1 %cmp107, label %if.then109, label %if.end111, !dbg !8567

if.then109:                                       ; preds = %if.then103
  store i32 -22, i32* %ret, align 4, !dbg !8568
  %65 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8569
  %lock110 = getelementptr inbounds %struct.net2280, %struct.net2280* %65, i32 0, i32 1, !dbg !8570
  %66 = load i64, i64* %flags, align 8, !dbg !8571
  store %struct.spinlock* %lock110, %struct.spinlock** %lock.addr.i312, align 8
  store i64 %66, i64* %flags.addr.i313, align 8
  call void @llvm.dbg.declare(metadata !443, metadata !5796, metadata !DIExpression()) #10, !dbg !8572
  call void @llvm.dbg.declare(metadata !443, metadata !5800, metadata !DIExpression()) #10, !dbg !8572
  store i32 1, i32* %tmp.i314, align 4, !dbg !8572
  %67 = load i32, i32* %tmp.i314, align 4, !dbg !8572
  call void @llvm.dbg.declare(metadata !443, metadata !5801, metadata !DIExpression()) #10, !dbg !8573
  call void @llvm.dbg.declare(metadata !443, metadata !5807, metadata !DIExpression()) #10, !dbg !8573
  store i32 1, i32* %tmp8.i315, align 4, !dbg !8573
  %68 = load i32, i32* %tmp8.i315, align 4, !dbg !8573
  %69 = load i64, i64* %flags.addr.i313, align 8, !dbg !8574
  call void @arch_local_irq_restore(i64 %69) #15, !dbg !8574
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8575, !srcloc !5811
  %70 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i312, align 8, !dbg !8576
  %71 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %70, i32 0, i32 0, !dbg !8576
  %rlock.i316 = bitcast %union.anon.4* %71 to %struct.raw_spinlock*, !dbg !8576
  br label %print_err, !dbg !8577

if.end111:                                        ; preds = %if.then103
  %72 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8578
  %is_in112 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %72, i32 0, i32 10, !dbg !8580
  %bf.load113 = load i32, i32* %is_in112, align 8, !dbg !8580
  %bf.lshr114 = lshr i32 %bf.load113, 24, !dbg !8580
  %bf.clear115 = and i32 %bf.lshr114, 1, !dbg !8580
  %tobool116 = icmp ne i32 %bf.clear115, 0, !dbg !8578
  br i1 %tobool116, label %if.then117, label %if.else, !dbg !8581

if.then117:                                       ; preds = %if.end111
  %73 = load i32, i32* %tmp, align 4, !dbg !8582
  %conv118 = zext i32 %73 to i64, !dbg !8582
  %and119 = and i64 %conv118, -28673, !dbg !8582
  %conv120 = trunc i64 %and119 to i32, !dbg !8582
  store i32 %conv120, i32* %tmp, align 4, !dbg !8582
  br label %if.end124, !dbg !8583

if.else:                                          ; preds = %if.end111
  %74 = load i32, i32* %tmp, align 4, !dbg !8584
  %conv121 = zext i32 %74 to i64, !dbg !8584
  %and122 = and i64 %conv121, -1793, !dbg !8584
  %conv123 = trunc i64 %and122 to i32, !dbg !8584
  store i32 %conv123, i32* %tmp, align 4, !dbg !8584
  br label %if.end124

if.end124:                                        ; preds = %if.else, %if.then117
  br label %if.end125, !dbg !8585

if.end125:                                        ; preds = %if.end124, %land.lhs.true100, %do.end85
  %75 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8586
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %75, i32 0, i32 3, !dbg !8587
  %76 = load i8, i8* %bmAttributes, align 1, !dbg !8587
  %conv126 = zext i8 %76 to i32, !dbg !8586
  %and127 = and i32 %conv126, 3, !dbg !8588
  store i32 %and127, i32* %type, align 4, !dbg !8589
  %77 = load i32, i32* %type, align 4, !dbg !8590
  %cmp128 = icmp eq i32 %77, 3, !dbg !8591
  br i1 %cmp128, label %if.then130, label %if.else147, !dbg !8592

if.then130:                                       ; preds = %if.end125
  %78 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8593
  %chiprev = getelementptr inbounds %struct.net2280, %struct.net2280* %78, i32 0, i32 5, !dbg !8596
  %79 = load i16, i16* %chiprev, align 2, !dbg !8596
  %conv131 = zext i16 %79 to i32, !dbg !8593
  %cmp132 = icmp eq i32 %conv131, 64, !dbg !8597
  br i1 %cmp132, label %land.lhs.true134, label %if.end146, !dbg !8598

land.lhs.true134:                                 ; preds = %if.then130
  %80 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8599
  %gadget135 = getelementptr inbounds %struct.net2280, %struct.net2280* %80, i32 0, i32 0, !dbg !8600
  %speed136 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget135, i32 0, i32 5, !dbg !8601
  %81 = load i32, i32* %speed136, align 8, !dbg !8601
  %cmp137 = icmp eq i32 %81, 3, !dbg !8602
  br i1 %cmp137, label %land.lhs.true139, label %if.end146, !dbg !8603

land.lhs.true139:                                 ; preds = %land.lhs.true134
  %82 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8604
  %bEndpointAddress140 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %82, i32 0, i32 2, !dbg !8605
  %83 = load i8, i8* %bEndpointAddress140, align 1, !dbg !8605
  %conv141 = zext i8 %83 to i32, !dbg !8604
  %and142 = and i32 %conv141, 128, !dbg !8606
  %tobool143 = icmp ne i32 %and142, 0, !dbg !8606
  br i1 %tobool143, label %if.end146, label %if.then144, !dbg !8607

if.then144:                                       ; preds = %land.lhs.true139
  %84 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8608
  %regs145 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %84, i32 0, i32 2, !dbg !8609
  %85 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs145, align 8, !dbg !8609
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %85, i32 0, i32 1, !dbg !8610
  %86 = bitcast i32* %ep_rsp to i8*, !dbg !8611
  call void @writel(i32 4, i8* %86) #12, !dbg !8612
  br label %if.end146, !dbg !8612

if.end146:                                        ; preds = %if.then144, %land.lhs.true139, %land.lhs.true134, %if.then130
  br label %if.end178, !dbg !8613

if.else147:                                       ; preds = %if.end125
  %87 = load i32, i32* %type, align 4, !dbg !8614
  %cmp148 = icmp eq i32 %87, 2, !dbg !8615
  br i1 %cmp148, label %if.then150, label %if.end177, !dbg !8616

if.then150:                                       ; preds = %if.else147
  %88 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8617
  %gadget151 = getelementptr inbounds %struct.net2280, %struct.net2280* %88, i32 0, i32 0, !dbg !8618
  %speed152 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget151, i32 0, i32 5, !dbg !8619
  %89 = load i32, i32* %speed152, align 8, !dbg !8619
  %cmp153 = icmp eq i32 %89, 5, !dbg !8620
  br i1 %cmp153, label %land.lhs.true155, label %lor.lhs.false158, !dbg !8621

land.lhs.true155:                                 ; preds = %if.then150
  %90 = load i32, i32* %max, align 4, !dbg !8622
  %cmp156 = icmp ne i32 %90, 1024, !dbg !8623
  br i1 %cmp156, label %if.then174, label %lor.lhs.false158, !dbg !8624

lor.lhs.false158:                                 ; preds = %land.lhs.true155, %if.then150
  %91 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8625
  %gadget159 = getelementptr inbounds %struct.net2280, %struct.net2280* %91, i32 0, i32 0, !dbg !8626
  %speed160 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget159, i32 0, i32 5, !dbg !8627
  %92 = load i32, i32* %speed160, align 8, !dbg !8627
  %cmp161 = icmp eq i32 %92, 3, !dbg !8628
  br i1 %cmp161, label %land.lhs.true163, label %lor.lhs.false166, !dbg !8629

land.lhs.true163:                                 ; preds = %lor.lhs.false158
  %93 = load i32, i32* %max, align 4, !dbg !8630
  %cmp164 = icmp ne i32 %93, 512, !dbg !8631
  br i1 %cmp164, label %if.then174, label %lor.lhs.false166, !dbg !8632

lor.lhs.false166:                                 ; preds = %land.lhs.true163, %lor.lhs.false158
  %94 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8633
  %gadget167 = getelementptr inbounds %struct.net2280, %struct.net2280* %94, i32 0, i32 0, !dbg !8634
  %speed168 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget167, i32 0, i32 5, !dbg !8635
  %95 = load i32, i32* %speed168, align 8, !dbg !8635
  %cmp169 = icmp eq i32 %95, 2, !dbg !8636
  br i1 %cmp169, label %land.lhs.true171, label %if.end176, !dbg !8637

land.lhs.true171:                                 ; preds = %lor.lhs.false166
  %96 = load i32, i32* %max, align 4, !dbg !8638
  %cmp172 = icmp ugt i32 %96, 64, !dbg !8639
  br i1 %cmp172, label %if.then174, label %if.end176, !dbg !8640

if.then174:                                       ; preds = %land.lhs.true171, %land.lhs.true163, %land.lhs.true155
  %97 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8641
  %lock175 = getelementptr inbounds %struct.net2280, %struct.net2280* %97, i32 0, i32 1, !dbg !8642
  %98 = load i64, i64* %flags, align 8, !dbg !8643
  store %struct.spinlock* %lock175, %struct.spinlock** %lock.addr.i317, align 8
  store i64 %98, i64* %flags.addr.i318, align 8
  call void @llvm.dbg.declare(metadata !443, metadata !5796, metadata !DIExpression()) #10, !dbg !8644
  call void @llvm.dbg.declare(metadata !443, metadata !5800, metadata !DIExpression()) #10, !dbg !8644
  store i32 1, i32* %tmp.i319, align 4, !dbg !8644
  %99 = load i32, i32* %tmp.i319, align 4, !dbg !8644
  call void @llvm.dbg.declare(metadata !443, metadata !5801, metadata !DIExpression()) #10, !dbg !8645
  call void @llvm.dbg.declare(metadata !443, metadata !5807, metadata !DIExpression()) #10, !dbg !8645
  store i32 1, i32* %tmp8.i320, align 4, !dbg !8645
  %100 = load i32, i32* %tmp8.i320, align 4, !dbg !8645
  %101 = load i64, i64* %flags.addr.i318, align 8, !dbg !8646
  call void @arch_local_irq_restore(i64 %101) #15, !dbg !8646
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8647, !srcloc !5811
  %102 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i317, align 8, !dbg !8648
  %103 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %102, i32 0, i32 0, !dbg !8648
  %rlock.i321 = bitcast %union.anon.4* %103 to %struct.raw_spinlock*, !dbg !8648
  store i32 -34, i32* %ret, align 4, !dbg !8649
  br label %print_err, !dbg !8650

if.end176:                                        ; preds = %land.lhs.true171, %lor.lhs.false166
  br label %if.end177, !dbg !8651

if.end177:                                        ; preds = %if.end176, %if.else147
  br label %if.end178

if.end178:                                        ; preds = %if.end177, %if.end146
  %104 = load i32, i32* %type, align 4, !dbg !8652
  %cmp179 = icmp eq i32 %104, 1, !dbg !8653
  %conv180 = zext i1 %cmp179 to i32, !dbg !8653
  %105 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8654
  %is_iso = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %105, i32 0, i32 10, !dbg !8655
  %bf.load181 = load i32, i32* %is_iso, align 8, !dbg !8656
  %bf.value182 = and i32 %conv180, 1, !dbg !8656
  %bf.shl183 = shl i32 %bf.value182, 25, !dbg !8656
  %bf.clear184 = and i32 %bf.load181, -33554433, !dbg !8656
  %bf.set185 = or i32 %bf.clear184, %bf.shl183, !dbg !8656
  store i32 %bf.set185, i32* %is_iso, align 8, !dbg !8656
  %106 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8657
  %quirks186 = getelementptr inbounds %struct.net2280, %struct.net2280* %106, i32 0, i32 8, !dbg !8659
  %107 = load i64, i64* %quirks186, align 8, !dbg !8659
  %and187 = and i64 %107, 1, !dbg !8660
  %tobool188 = icmp ne i64 %and187, 0, !dbg !8660
  br i1 %tobool188, label %if.then189, label %if.else206, !dbg !8661

if.then189:                                       ; preds = %if.end178
  %108 = load i32, i32* %type, align 4, !dbg !8662
  %shl = shl i32 %108, 8, !dbg !8664
  %109 = load i32, i32* %tmp, align 4, !dbg !8665
  %or = or i32 %109, %shl, !dbg !8665
  store i32 %or, i32* %tmp, align 4, !dbg !8665
  %110 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8666
  %bEndpointAddress190 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %110, i32 0, i32 2, !dbg !8667
  %111 = load i8, i8* %bEndpointAddress190, align 1, !dbg !8667
  %conv191 = zext i8 %111 to i32, !dbg !8666
  %112 = load i32, i32* %tmp, align 4, !dbg !8668
  %or192 = or i32 %112, %conv191, !dbg !8668
  store i32 %or192, i32* %tmp, align 4, !dbg !8668
  %113 = load i32, i32* %tmp, align 4, !dbg !8669
  %or193 = or i32 %113, 262144, !dbg !8669
  store i32 %or193, i32* %tmp, align 4, !dbg !8669
  %114 = load i32, i32* %tmp, align 4, !dbg !8670
  %conv194 = zext i32 %114 to i64, !dbg !8670
  %or195 = or i64 %conv194, 1024, !dbg !8670
  %conv196 = trunc i64 %or195 to i32, !dbg !8670
  store i32 %conv196, i32* %tmp, align 4, !dbg !8670
  %115 = load i32, i32* %tmp, align 4, !dbg !8671
  %and197 = and i32 %115, 128, !dbg !8672
  %cmp198 = icmp ne i32 %and197, 0, !dbg !8673
  %conv199 = zext i1 %cmp198 to i32, !dbg !8673
  %116 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8674
  %is_in200 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %116, i32 0, i32 10, !dbg !8675
  %bf.load201 = load i32, i32* %is_in200, align 8, !dbg !8676
  %bf.value202 = and i32 %conv199, 1, !dbg !8676
  %bf.shl203 = shl i32 %bf.value202, 24, !dbg !8676
  %bf.clear204 = and i32 %bf.load201, -16777217, !dbg !8676
  %bf.set205 = or i32 %bf.clear204, %bf.shl203, !dbg !8676
  store i32 %bf.set205, i32* %is_in200, align 8, !dbg !8676
  br label %if.end247, !dbg !8677

if.else206:                                       ; preds = %if.end178
  %117 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8678
  %enhanced_mode207 = getelementptr inbounds %struct.net2280, %struct.net2280* %117, i32 0, i32 6, !dbg !8681
  %118 = load i32, i32* %enhanced_mode207, align 4, !dbg !8681
  %tobool208 = icmp ne i32 %118, 0, !dbg !8678
  br i1 %tobool208, label %land.lhs.true209, label %if.else221, !dbg !8682

land.lhs.true209:                                 ; preds = %if.else206
  %119 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8683
  %is_in210 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %119, i32 0, i32 10, !dbg !8684
  %bf.load211 = load i32, i32* %is_in210, align 8, !dbg !8684
  %bf.lshr212 = lshr i32 %bf.load211, 24, !dbg !8684
  %bf.clear213 = and i32 %bf.lshr212, 1, !dbg !8684
  %tobool214 = icmp ne i32 %bf.clear213, 0, !dbg !8683
  br i1 %tobool214, label %if.then215, label %if.else221, !dbg !8685

if.then215:                                       ; preds = %land.lhs.true209
  %120 = load i32, i32* %type, align 4, !dbg !8686
  %shl216 = shl i32 %120, 12, !dbg !8688
  %121 = load i32, i32* %tmp, align 4, !dbg !8689
  %or217 = or i32 %121, %shl216, !dbg !8689
  store i32 %or217, i32* %tmp, align 4, !dbg !8689
  %122 = load i32, i32* %tmp, align 4, !dbg !8690
  %conv218 = zext i32 %122 to i64, !dbg !8690
  %or219 = or i64 %conv218, 16384, !dbg !8690
  %conv220 = trunc i64 %or219 to i32, !dbg !8690
  store i32 %conv220, i32* %tmp, align 4, !dbg !8690
  br label %if.end233, !dbg !8691

if.else221:                                       ; preds = %land.lhs.true209, %if.else206
  %123 = load i32, i32* %type, align 4, !dbg !8692
  %shl222 = shl i32 %123, 8, !dbg !8694
  %124 = load i32, i32* %tmp, align 4, !dbg !8695
  %or223 = or i32 %124, %shl222, !dbg !8695
  store i32 %or223, i32* %tmp, align 4, !dbg !8695
  %125 = load i32, i32* %tmp, align 4, !dbg !8696
  %conv224 = zext i32 %125 to i64, !dbg !8696
  %or225 = or i64 %conv224, 1024, !dbg !8696
  %conv226 = trunc i64 %or225 to i32, !dbg !8696
  store i32 %conv226, i32* %tmp, align 4, !dbg !8696
  %126 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8697
  %is_in227 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %126, i32 0, i32 10, !dbg !8698
  %bf.load228 = load i32, i32* %is_in227, align 8, !dbg !8698
  %bf.lshr229 = lshr i32 %bf.load228, 24, !dbg !8698
  %bf.clear230 = and i32 %bf.lshr229, 1, !dbg !8698
  %shl231 = shl i32 %bf.clear230, 7, !dbg !8699
  %127 = load i32, i32* %tmp, align 4, !dbg !8700
  %or232 = or i32 %127, %shl231, !dbg !8700
  store i32 %or232, i32* %tmp, align 4, !dbg !8700
  br label %if.end233

if.end233:                                        ; preds = %if.else221, %if.then215
  %128 = load i32, i32* %tmp, align 4, !dbg !8701
  %or234 = or i32 %128, 262144, !dbg !8701
  store i32 %or234, i32* %tmp, align 4, !dbg !8701
  %129 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8702
  %enhanced_mode235 = getelementptr inbounds %struct.net2280, %struct.net2280* %129, i32 0, i32 6, !dbg !8704
  %130 = load i32, i32* %enhanced_mode235, align 4, !dbg !8704
  %tobool236 = icmp ne i32 %130, 0, !dbg !8702
  br i1 %tobool236, label %if.end240, label %if.then237, !dbg !8705

if.then237:                                       ; preds = %if.end233
  %131 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8706
  %call238 = call i32 @usb_endpoint_num(%struct.usb_endpoint_descriptor* %131) #12, !dbg !8707
  %132 = load i32, i32* %tmp, align 4, !dbg !8708
  %or239 = or i32 %132, %call238, !dbg !8708
  store i32 %or239, i32* %tmp, align 4, !dbg !8708
  br label %if.end240, !dbg !8709

if.end240:                                        ; preds = %if.then237, %if.end233
  %133 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8710
  %ep241 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %133, i32 0, i32 0, !dbg !8711
  %maxburst = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep241, i32 0, i32 7, !dbg !8712
  %134 = bitcast [7 x i8]* %maxburst to i56*, !dbg !8712
  %bf.load242 = load i56, i56* %134, align 2, !dbg !8712
  %bf.lshr243 = lshr i56 %bf.load242, 50, !dbg !8712
  %bf.clear244 = and i56 %bf.lshr243, 31, !dbg !8712
  %bf.cast = trunc i56 %bf.clear244 to i32, !dbg !8712
  %shl245 = shl i32 %bf.cast, 24, !dbg !8713
  %135 = load i32, i32* %tmp, align 4, !dbg !8714
  %or246 = or i32 %135, %shl245, !dbg !8714
  store i32 %or246, i32* %tmp, align 4, !dbg !8714
  br label %if.end247

if.end247:                                        ; preds = %if.end240, %if.then189
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8715, !srcloc !8716
  %136 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8717
  %is_in248 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %136, i32 0, i32 10, !dbg !8719
  %bf.load249 = load i32, i32* %is_in248, align 8, !dbg !8719
  %bf.lshr250 = lshr i32 %bf.load249, 24, !dbg !8719
  %bf.clear251 = and i32 %bf.lshr250, 1, !dbg !8719
  %tobool252 = icmp ne i32 %bf.clear251, 0, !dbg !8717
  br i1 %tobool252, label %if.else256, label %if.then253, !dbg !8720

if.then253:                                       ; preds = %if.end247
  %137 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8721
  %regs254 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %137, i32 0, i32 2, !dbg !8722
  %138 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs254, align 8, !dbg !8722
  %ep_rsp255 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %138, i32 0, i32 1, !dbg !8723
  %139 = bitcast i32* %ep_rsp255 to i8*, !dbg !8724
  call void @writel(i32 32768, i8* %139) #12, !dbg !8725
  br label %if.end264, !dbg !8725

if.else256:                                       ; preds = %if.end247
  %140 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8726
  %quirks257 = getelementptr inbounds %struct.net2280, %struct.net2280* %140, i32 0, i32 8, !dbg !8728
  %141 = load i64, i64* %quirks257, align 8, !dbg !8728
  %and258 = and i64 %141, 2, !dbg !8729
  %tobool259 = icmp ne i64 %and258, 0, !dbg !8729
  br i1 %tobool259, label %if.end263, label %if.then260, !dbg !8730

if.then260:                                       ; preds = %if.else256
  %142 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8731
  %regs261 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %142, i32 0, i32 2, !dbg !8733
  %143 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs261, align 8, !dbg !8733
  %ep_rsp262 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %143, i32 0, i32 1, !dbg !8734
  %144 = bitcast i32* %ep_rsp262 to i8*, !dbg !8735
  call void @writel(i32 132, i8* %144) #12, !dbg !8736
  br label %if.end263, !dbg !8737

if.end263:                                        ; preds = %if.then260, %if.else256
  br label %if.end264

if.end264:                                        ; preds = %if.end263, %if.then253
  %145 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8738
  %quirks265 = getelementptr inbounds %struct.net2280, %struct.net2280* %145, i32 0, i32 8, !dbg !8740
  %146 = load i64, i64* %quirks265, align 8, !dbg !8740
  %and266 = and i64 %146, 8, !dbg !8741
  %tobool267 = icmp ne i64 %and266, 0, !dbg !8741
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !8742

if.then268:                                       ; preds = %if.end264
  %147 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8743
  call void @ep_clear_seqnum(%struct.net2280_ep* %147) #12, !dbg !8744
  br label %if.end269, !dbg !8744

if.end269:                                        ; preds = %if.then268, %if.end264
  %148 = load i32, i32* %tmp, align 4, !dbg !8745
  %149 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8746
  %cfg270 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %149, i32 0, i32 1, !dbg !8747
  %150 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %cfg270, align 8, !dbg !8747
  %ep_cfg271 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %150, i32 0, i32 0, !dbg !8748
  %151 = bitcast i32* %ep_cfg271 to i8*, !dbg !8749
  call void @writel(i32 %148, i8* %151) #12, !dbg !8750
  %152 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8751
  %dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %152, i32 0, i32 3, !dbg !8753
  %153 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !8753
  %tobool272 = icmp ne %struct.net2280_dma_regs* %153, null, !dbg !8751
  br i1 %tobool272, label %if.else284, label %if.then273, !dbg !8754

if.then273:                                       ; preds = %if.end269
  %154 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8755
  call void @enable_pciirqenb(%struct.net2280_ep* %154) #12, !dbg !8757
  store i32 12, i32* %tmp, align 4, !dbg !8758
  %155 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8759
  %quirks274 = getelementptr inbounds %struct.net2280, %struct.net2280* %155, i32 0, i32 8, !dbg !8761
  %156 = load i64, i64* %quirks274, align 8, !dbg !8761
  %and275 = and i64 %156, 2, !dbg !8762
  %tobool276 = icmp ne i64 %and275, 0, !dbg !8762
  br i1 %tobool276, label %if.then277, label %if.end281, !dbg !8763

if.then277:                                       ; preds = %if.then273
  %157 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8764
  %regs278 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %157, i32 0, i32 2, !dbg !8765
  %158 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs278, align 8, !dbg !8765
  %ep_irqenb = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %158, i32 0, i32 2, !dbg !8766
  %159 = bitcast i32* %ep_irqenb to i8*, !dbg !8767
  %call279 = call i32 @readl(i8* %159) #12, !dbg !8768
  %160 = load i32, i32* %tmp, align 4, !dbg !8769
  %or280 = or i32 %160, %call279, !dbg !8769
  store i32 %or280, i32* %tmp, align 4, !dbg !8769
  br label %if.end281, !dbg !8770

if.end281:                                        ; preds = %if.then277, %if.then273
  %161 = load i32, i32* %tmp, align 4, !dbg !8771
  %162 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8772
  %regs282 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %162, i32 0, i32 2, !dbg !8773
  %163 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs282, align 8, !dbg !8773
  %ep_irqenb283 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %163, i32 0, i32 2, !dbg !8774
  %164 = bitcast i32* %ep_irqenb283 to i8*, !dbg !8775
  call void @writel(i32 %161, i8* %164) #12, !dbg !8776
  br label %if.end304, !dbg !8777

if.else284:                                       ; preds = %if.end269
  %165 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8778
  %num285 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %165, i32 0, i32 10, !dbg !8778
  %bf.load286 = load i32, i32* %num285, align 8, !dbg !8778
  %bf.clear287 = and i32 %bf.load286, 255, !dbg !8778
  %add = add i32 8, %bf.clear287, !dbg !8778
  %sh_prom = zext i32 %add to i64, !dbg !8778
  %shl288 = shl i64 1, %sh_prom, !dbg !8778
  %conv289 = trunc i64 %shl288 to i32, !dbg !8778
  store i32 %conv289, i32* %tmp, align 4, !dbg !8780
  %166 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8781
  %regs290 = getelementptr inbounds %struct.net2280, %struct.net2280* %166, i32 0, i32 10, !dbg !8782
  %167 = load %struct.net2280_regs*, %struct.net2280_regs** %regs290, align 8, !dbg !8782
  %pciirqenb1 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %167, i32 0, i32 5, !dbg !8783
  %168 = bitcast i32* %pciirqenb1 to i8*, !dbg !8784
  %call291 = call i32 @readl(i8* %168) #12, !dbg !8785
  %169 = load i32, i32* %tmp, align 4, !dbg !8786
  %or292 = or i32 %169, %call291, !dbg !8786
  store i32 %or292, i32* %tmp, align 4, !dbg !8786
  %170 = load i32, i32* %tmp, align 4, !dbg !8787
  %171 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8788
  %regs293 = getelementptr inbounds %struct.net2280, %struct.net2280* %171, i32 0, i32 10, !dbg !8789
  %172 = load %struct.net2280_regs*, %struct.net2280_regs** %regs293, align 8, !dbg !8789
  %pciirqenb1294 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %172, i32 0, i32 5, !dbg !8790
  %173 = bitcast i32* %pciirqenb1294 to i8*, !dbg !8791
  call void @writel(i32 %170, i8* %173) #12, !dbg !8792
  %174 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8793
  %bEndpointAddress295 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %174, i32 0, i32 2, !dbg !8795
  %175 = load i8, i8* %bEndpointAddress295, align 1, !dbg !8795
  %conv296 = zext i8 %175 to i32, !dbg !8793
  %and297 = and i32 %conv296, 128, !dbg !8796
  %cmp298 = icmp eq i32 %and297, 0, !dbg !8797
  br i1 %cmp298, label %if.then300, label %if.end303, !dbg !8798

if.then300:                                       ; preds = %if.else284
  store i32 32, i32* %tmp, align 4, !dbg !8799
  %176 = load i32, i32* %tmp, align 4, !dbg !8801
  %177 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8802
  %regs301 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %177, i32 0, i32 2, !dbg !8803
  %178 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs301, align 8, !dbg !8803
  %ep_irqenb302 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %178, i32 0, i32 2, !dbg !8804
  %179 = bitcast i32* %ep_irqenb302 to i8*, !dbg !8805
  call void @writel(i32 %176, i8* %179) #12, !dbg !8806
  %180 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8807
  call void @enable_pciirqenb(%struct.net2280_ep* %180) #12, !dbg !8808
  br label %if.end303, !dbg !8809

if.end303:                                        ; preds = %if.then300, %if.else284
  br label %if.end304

if.end304:                                        ; preds = %if.end303, %if.end281
  %181 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8810
  %bEndpointAddress305 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %181, i32 0, i32 2, !dbg !8811
  %182 = load i8, i8* %bEndpointAddress305, align 1, !dbg !8811
  %conv306 = zext i8 %182 to i32, !dbg !8810
  store i32 %conv306, i32* %tmp, align 4, !dbg !8812
  %183 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8813
  %lock307 = getelementptr inbounds %struct.net2280, %struct.net2280* %183, i32 0, i32 1, !dbg !8814
  %184 = load i64, i64* %flags, align 8, !dbg !8815
  store %struct.spinlock* %lock307, %struct.spinlock** %lock.addr.i310, align 8
  store i64 %184, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !443, metadata !5796, metadata !DIExpression()) #10, !dbg !8816
  call void @llvm.dbg.declare(metadata !443, metadata !5800, metadata !DIExpression()) #10, !dbg !8816
  store i32 1, i32* %tmp.i, align 4, !dbg !8816
  %185 = load i32, i32* %tmp.i, align 4, !dbg !8816
  call void @llvm.dbg.declare(metadata !443, metadata !5801, metadata !DIExpression()) #10, !dbg !8817
  call void @llvm.dbg.declare(metadata !443, metadata !5807, metadata !DIExpression()) #10, !dbg !8817
  store i32 1, i32* %tmp8.i, align 4, !dbg !8817
  %186 = load i32, i32* %tmp8.i, align 4, !dbg !8817
  %187 = load i64, i64* %flags.addr.i, align 8, !dbg !8818
  call void @arch_local_irq_restore(i64 %187) #15, !dbg !8818
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8819, !srcloc !5811
  %188 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i310, align 8, !dbg !8820
  %189 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %188, i32 0, i32 0, !dbg !8820
  %rlock.i311 = bitcast %union.anon.4* %189 to %struct.raw_spinlock*, !dbg !8820
  %190 = load i32, i32* %ret, align 4, !dbg !8821
  store i32 %190, i32* %retval, align 4, !dbg !8822
  br label %return, !dbg !8822

print_err:                                        ; preds = %if.then174, %if.then109, %if.then60, %if.then44, %if.then30, %if.then20, %if.then15
  call void @llvm.dbg.label(metadata !8823), !dbg !8824
  %191 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8825
  %dev308 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %191, i32 0, i32 6, !dbg !8825
  %192 = load %struct.net2280*, %struct.net2280** %dev308, align 8, !dbg !8825
  %pdev = getelementptr inbounds %struct.net2280, %struct.net2280* %192, i32 0, i32 9, !dbg !8825
  %193 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !8825
  %dev309 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %193, i32 0, i32 41, !dbg !8825
  %194 = load i32, i32* %ret, align 4, !dbg !8825
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev309, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.net2280_enable, i64 0, i64 0), i32 %194) #13, !dbg !8825
  %195 = load i32, i32* %ret, align 4, !dbg !8826
  store i32 %195, i32* %retval, align 4, !dbg !8827
  br label %return, !dbg !8827

return:                                           ; preds = %print_err, %if.end304, %if.then
  %196 = load i32, i32* %retval, align 4, !dbg !8828
  ret i32 %196, !dbg !8828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_disable(%struct.usb_ep* %_ep) #2 !dbg !8829 {
entry:
  %lock.addr.i51 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i51, metadata !5734, metadata !DIExpression()), !dbg !8830
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5740, metadata !DIExpression()), !dbg !8832
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4661, metadata !DIExpression()), !dbg !8833
  %retval = alloca i32, align 4
  %_ep.addr = alloca %struct.usb_ep*, align 8
  %ep = alloca %struct.net2280_ep*, align 8
  %flags = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280_ep*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.usb_ep* %_ep, %struct.usb_ep** %_ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %_ep.addr, metadata !8840, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !8842, metadata !DIExpression()), !dbg !8843
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8844, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8846, metadata !DIExpression()), !dbg !8848
  %0 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !8848
  %1 = bitcast %struct.usb_ep* %0 to i8*, !dbg !8848
  store i8* %1, i8** %__mptr, align 8, !dbg !8848
  br label %do.body, !dbg !8848

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8849

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8848
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8848
  %3 = bitcast i8* %add.ptr to %struct.net2280_ep*, !dbg !8848
  store %struct.net2280_ep* %3, %struct.net2280_ep** %tmp, align 8, !dbg !8849
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %tmp, align 8, !dbg !8848
  store %struct.net2280_ep* %4, %struct.net2280_ep** %ep, align 8, !dbg !8851
  %5 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !8852
  %tobool = icmp ne %struct.usb_ep* %5, null, !dbg !8852
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8854

lor.lhs.false:                                    ; preds = %do.end
  %6 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !8855
  %name = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %6, i32 0, i32 1, !dbg !8856
  %7 = load i8*, i8** %name, align 8, !dbg !8856
  %cmp = icmp eq i8* %7, getelementptr inbounds ([4 x i8], [4 x i8]* @ep0name, i64 0, i64 0), !dbg !8857
  br i1 %cmp, label %if.then, label %if.end, !dbg !8858

if.then:                                          ; preds = %lor.lhs.false, %do.end
  %8 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !8859
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.net2280_disable, i64 0, i64 0), %struct.usb_ep* %8) #13, !dbg !8859
  store i32 -22, i32* %retval, align 4, !dbg !8861
  br label %return, !dbg !8861

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body1, !dbg !8862

do.body1:                                         ; preds = %if.end
  br label %do.body2, !dbg !8863

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8864, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8867, metadata !DIExpression()), !dbg !8866
  %cmp3 = icmp eq i64* %__dummy, %__dummy2, !dbg !8866
  %conv = zext i1 %cmp3 to i32, !dbg !8866
  store i32 1, i32* %tmp4, align 4, !dbg !8866
  %9 = load i32, i32* %tmp4, align 4, !dbg !8866
  br label %do.body5, !dbg !8868

do.body5:                                         ; preds = %do.body2
  br label %do.body6, !dbg !8869

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !8870

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !8872, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !8876, metadata !DIExpression()), !dbg !8875
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !8875
  %conv11 = zext i1 %cmp10 to i32, !dbg !8875
  store i32 1, i32* %tmp12, align 4, !dbg !8875
  %10 = load i32, i32* %tmp12, align 4, !dbg !8875
  %call13 = call i64 @arch_local_irq_save() #12, !dbg !8877
  store i64 %call13, i64* %flags, align 8, !dbg !8877
  br label %do.end14, !dbg !8877

do.end14:                                         ; preds = %do.body7
  br label %do.end15, !dbg !8870

do.end15:                                         ; preds = %do.end14
  br label %do.body16, !dbg !8869

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8878, !srcloc !8879
  br label %do.body17, !dbg !8878

do.body17:                                        ; preds = %do.body16
  %11 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8880
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %11, i32 0, i32 6, !dbg !8880
  %12 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8880
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %12, i32 0, i32 1, !dbg !8880
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8881
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !8882
  %rlock.i = bitcast %union.anon.4* %14 to %struct.raw_spinlock*, !dbg !8882
  br label %do.end19, !dbg !8880

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !8878

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !8869

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !8868

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !8863

do.end23:                                         ; preds = %do.end22
  %15 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8883
  call void @nuke(%struct.net2280_ep* %15) #12, !dbg !8884
  %16 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8885
  %dev24 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %16, i32 0, i32 6, !dbg !8887
  %17 = load %struct.net2280*, %struct.net2280** %dev24, align 8, !dbg !8887
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %17, i32 0, i32 8, !dbg !8888
  %18 = load i64, i64* %quirks, align 8, !dbg !8888
  %and = and i64 %18, 8, !dbg !8889
  %tobool25 = icmp ne i64 %and, 0, !dbg !8889
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !8890

if.then26:                                        ; preds = %do.end23
  %19 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8891
  %dev27 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %19, i32 0, i32 6, !dbg !8892
  %20 = load %struct.net2280*, %struct.net2280** %dev27, align 8, !dbg !8892
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %20, i32 0, i32 10, !dbg !8893
  %21 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !8893
  %22 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8894
  call void @ep_reset_338x(%struct.net2280_regs* %21, %struct.net2280_ep* %22) #12, !dbg !8895
  br label %if.end30, !dbg !8895

if.else:                                          ; preds = %do.end23
  %23 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8896
  %dev28 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %23, i32 0, i32 6, !dbg !8897
  %24 = load %struct.net2280*, %struct.net2280** %dev28, align 8, !dbg !8897
  %regs29 = getelementptr inbounds %struct.net2280, %struct.net2280* %24, i32 0, i32 10, !dbg !8898
  %25 = load %struct.net2280_regs*, %struct.net2280_regs** %regs29, align 8, !dbg !8898
  %26 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8899
  call void @ep_reset_228x(%struct.net2280_regs* %25, %struct.net2280_ep* %26) #12, !dbg !8900
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then26
  %27 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8901
  %cfg = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %27, i32 0, i32 1, !dbg !8902
  %28 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %cfg, align 8, !dbg !8902
  %ep_cfg = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %28, i32 0, i32 0, !dbg !8903
  %29 = bitcast i32* %ep_cfg to i8*, !dbg !8904
  %call31 = call i32 @readl(i8* %29) #12, !dbg !8905
  %30 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8906
  %dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %30, i32 0, i32 3, !dbg !8908
  %31 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !8908
  %tobool32 = icmp ne %struct.net2280_dma_regs* %31, null, !dbg !8906
  br i1 %tobool32, label %if.end48, label %land.lhs.true, !dbg !8909

land.lhs.true:                                    ; preds = %if.end30
  %32 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8910
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %32, i32 0, i32 10, !dbg !8911
  %bf.load = load i32, i32* %num, align 8, !dbg !8911
  %bf.clear = and i32 %bf.load, 255, !dbg !8911
  %cmp33 = icmp sge i32 %bf.clear, 1, !dbg !8912
  br i1 %cmp33, label %land.lhs.true35, label %if.end48, !dbg !8913

land.lhs.true35:                                  ; preds = %land.lhs.true
  %33 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8914
  %num36 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %33, i32 0, i32 10, !dbg !8915
  %bf.load37 = load i32, i32* %num36, align 8, !dbg !8915
  %bf.clear38 = and i32 %bf.load37, 255, !dbg !8915
  %cmp39 = icmp sle i32 %bf.clear38, 4, !dbg !8916
  br i1 %cmp39, label %if.then41, label %if.end48, !dbg !8917

if.then41:                                        ; preds = %land.lhs.true35
  %34 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8918
  %dev42 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %34, i32 0, i32 6, !dbg !8919
  %35 = load %struct.net2280*, %struct.net2280** %dev42, align 8, !dbg !8919
  %dma43 = getelementptr inbounds %struct.net2280, %struct.net2280* %35, i32 0, i32 14, !dbg !8920
  %36 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma43, align 8, !dbg !8920
  %37 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8921
  %num44 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %37, i32 0, i32 10, !dbg !8922
  %bf.load45 = load i32, i32* %num44, align 8, !dbg !8922
  %bf.clear46 = and i32 %bf.load45, 255, !dbg !8922
  %sub = sub i32 %bf.clear46, 1, !dbg !8923
  %idxprom = sext i32 %sub to i64, !dbg !8918
  %arrayidx = getelementptr %struct.net2280_dma_regs, %struct.net2280_dma_regs* %36, i64 %idxprom, !dbg !8918
  %38 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8924
  %dma47 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %38, i32 0, i32 3, !dbg !8925
  store %struct.net2280_dma_regs* %arrayidx, %struct.net2280_dma_regs** %dma47, align 8, !dbg !8926
  br label %if.end48, !dbg !8924

if.end48:                                         ; preds = %if.then41, %land.lhs.true35, %land.lhs.true, %if.end30
  %39 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8927
  %dev49 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %39, i32 0, i32 6, !dbg !8928
  %40 = load %struct.net2280*, %struct.net2280** %dev49, align 8, !dbg !8928
  %lock50 = getelementptr inbounds %struct.net2280, %struct.net2280* %40, i32 0, i32 1, !dbg !8929
  %41 = load i64, i64* %flags, align 8, !dbg !8930
  store %struct.spinlock* %lock50, %struct.spinlock** %lock.addr.i51, align 8
  store i64 %41, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !443, metadata !5796, metadata !DIExpression()) #10, !dbg !8931
  call void @llvm.dbg.declare(metadata !443, metadata !5800, metadata !DIExpression()) #10, !dbg !8931
  store i32 1, i32* %tmp.i, align 4, !dbg !8931
  %42 = load i32, i32* %tmp.i, align 4, !dbg !8931
  call void @llvm.dbg.declare(metadata !443, metadata !5801, metadata !DIExpression()) #10, !dbg !8932
  call void @llvm.dbg.declare(metadata !443, metadata !5807, metadata !DIExpression()) #10, !dbg !8932
  store i32 1, i32* %tmp8.i, align 4, !dbg !8932
  %43 = load i32, i32* %tmp8.i, align 4, !dbg !8932
  %44 = load i64, i64* %flags.addr.i, align 8, !dbg !8933
  call void @arch_local_irq_restore(i64 %44) #15, !dbg !8933
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8934, !srcloc !5811
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i51, align 8, !dbg !8935
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !8935
  %rlock.i52 = bitcast %union.anon.4* %46 to %struct.raw_spinlock*, !dbg !8935
  store i32 0, i32* %retval, align 4, !dbg !8936
  br label %return, !dbg !8936

return:                                           ; preds = %if.end48, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !8937
  ret i32 %47, !dbg !8937
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_request* @net2280_alloc_request(%struct.usb_ep* %_ep, i32 %gfp_flags) #2 !dbg !8938 {
entry:
  %retval = alloca %struct.usb_request*, align 8
  %_ep.addr = alloca %struct.usb_ep*, align 8
  %gfp_flags.addr = alloca i32, align 4
  %ep = alloca %struct.net2280_ep*, align 8
  %req = alloca %struct.net2280_request*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280_ep*, align 8
  %td = alloca %struct.net2280_dma*, align 8
  store %struct.usb_ep* %_ep, %struct.usb_ep** %_ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %_ep.addr, metadata !8939, metadata !DIExpression()), !dbg !8940
  store i32 %gfp_flags, i32* %gfp_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_flags.addr, metadata !8941, metadata !DIExpression()), !dbg !8942
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !8943, metadata !DIExpression()), !dbg !8944
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %req, metadata !8945, metadata !DIExpression()), !dbg !8946
  %0 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !8947
  %tobool = icmp ne %struct.usb_ep* %0, null, !dbg !8947
  br i1 %tobool, label %if.end, label %if.then, !dbg !8949

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.net2280_alloc_request, i64 0, i64 0)) #13, !dbg !8950
  store %struct.usb_request* null, %struct.usb_request** %retval, align 8, !dbg !8952
  br label %return, !dbg !8952

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8953, metadata !DIExpression()), !dbg !8955
  %1 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !8955
  %2 = bitcast %struct.usb_ep* %1 to i8*, !dbg !8955
  store i8* %2, i8** %__mptr, align 8, !dbg !8955
  br label %do.body, !dbg !8955

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !8956

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !8955
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !8955
  %4 = bitcast i8* %add.ptr to %struct.net2280_ep*, !dbg !8955
  store %struct.net2280_ep* %4, %struct.net2280_ep** %tmp, align 8, !dbg !8956
  %5 = load %struct.net2280_ep*, %struct.net2280_ep** %tmp, align 8, !dbg !8955
  store %struct.net2280_ep* %5, %struct.net2280_ep** %ep, align 8, !dbg !8958
  %6 = load i32, i32* %gfp_flags.addr, align 4, !dbg !8959
  %call1 = call i8* @kzalloc(i64 136, i32 %6) #12, !dbg !8960
  %7 = bitcast i8* %call1 to %struct.net2280_request*, !dbg !8960
  store %struct.net2280_request* %7, %struct.net2280_request** %req, align 8, !dbg !8961
  %8 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !8962
  %tobool2 = icmp ne %struct.net2280_request* %8, null, !dbg !8962
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !8964

if.then3:                                         ; preds = %do.end
  store %struct.usb_request* null, %struct.usb_request** %retval, align 8, !dbg !8965
  br label %return, !dbg !8965

if.end4:                                          ; preds = %do.end
  %9 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !8966
  %queue = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %9, i32 0, i32 3, !dbg !8967
  call void @INIT_LIST_HEAD(%struct.list_head* %queue) #12, !dbg !8968
  %10 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8969
  %dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %10, i32 0, i32 3, !dbg !8971
  %11 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !8971
  %tobool5 = icmp ne %struct.net2280_dma_regs* %11, null, !dbg !8969
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !8972

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.net2280_dma** %td, metadata !8973, metadata !DIExpression()), !dbg !8975
  %12 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !8976
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %12, i32 0, i32 6, !dbg !8977
  %13 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !8977
  %requests = getelementptr inbounds %struct.net2280, %struct.net2280* %13, i32 0, i32 19, !dbg !8978
  %14 = load %struct.dma_pool*, %struct.dma_pool** %requests, align 8, !dbg !8978
  %15 = load i32, i32* %gfp_flags.addr, align 4, !dbg !8979
  %16 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !8980
  %td_dma = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %16, i32 0, i32 2, !dbg !8981
  %call7 = call i8* @dma_pool_alloc(%struct.dma_pool* %14, i32 %15, i64* %td_dma) #12, !dbg !8982
  %17 = bitcast i8* %call7 to %struct.net2280_dma*, !dbg !8982
  store %struct.net2280_dma* %17, %struct.net2280_dma** %td, align 8, !dbg !8983
  %18 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !8984
  %tobool8 = icmp ne %struct.net2280_dma* %18, null, !dbg !8984
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !8986

if.then9:                                         ; preds = %if.then6
  %19 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !8987
  %20 = bitcast %struct.net2280_request* %19 to i8*, !dbg !8987
  call void @kfree(i8* %20) #12, !dbg !8989
  store %struct.usb_request* null, %struct.usb_request** %retval, align 8, !dbg !8990
  br label %return, !dbg !8990

if.end10:                                         ; preds = %if.then6
  %21 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !8991
  %dmacount = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %21, i32 0, i32 0, !dbg !8992
  store i32 0, i32* %dmacount, align 16, !dbg !8993
  %22 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !8994
  %dmaaddr = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %22, i32 0, i32 1, !dbg !8995
  %23 = load i32, i32* %dmaaddr, align 4, !dbg !8995
  %24 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !8996
  %dmadesc = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %24, i32 0, i32 2, !dbg !8997
  store i32 %23, i32* %dmadesc, align 8, !dbg !8998
  %25 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !8999
  %26 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9000
  %td11 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %26, i32 0, i32 1, !dbg !9001
  store %struct.net2280_dma* %25, %struct.net2280_dma** %td11, align 8, !dbg !9002
  br label %if.end12, !dbg !9003

if.end12:                                         ; preds = %if.end10, %if.end4
  %27 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9004
  %req13 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %27, i32 0, i32 0, !dbg !9005
  store %struct.usb_request* %req13, %struct.usb_request** %retval, align 8, !dbg !9006
  br label %return, !dbg !9006

return:                                           ; preds = %if.end12, %if.then9, %if.then3, %if.then
  %28 = load %struct.usb_request*, %struct.usb_request** %retval, align 8, !dbg !9007
  ret %struct.usb_request* %28, !dbg !9007
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @net2280_free_request(%struct.usb_ep* %_ep, %struct.usb_request* %_req) #2 !dbg !9008 {
entry:
  %_ep.addr = alloca %struct.usb_ep*, align 8
  %_req.addr = alloca %struct.usb_request*, align 8
  %ep = alloca %struct.net2280_ep*, align 8
  %req = alloca %struct.net2280_request*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280_ep*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp6 = alloca %struct.net2280_request*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp27 = alloca i64, align 8
  store %struct.usb_ep* %_ep, %struct.usb_ep** %_ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %_ep.addr, metadata !9009, metadata !DIExpression()), !dbg !9010
  store %struct.usb_request* %_req, %struct.usb_request** %_req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_request** %_req.addr, metadata !9011, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !9013, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %req, metadata !9015, metadata !DIExpression()), !dbg !9016
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9017, metadata !DIExpression()), !dbg !9019
  %0 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9019
  %1 = bitcast %struct.usb_ep* %0 to i8*, !dbg !9019
  store i8* %1, i8** %__mptr, align 8, !dbg !9019
  br label %do.body, !dbg !9019

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9020

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9019
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !9019
  %3 = bitcast i8* %add.ptr to %struct.net2280_ep*, !dbg !9019
  store %struct.net2280_ep* %3, %struct.net2280_ep** %tmp, align 8, !dbg !9020
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %tmp, align 8, !dbg !9019
  store %struct.net2280_ep* %4, %struct.net2280_ep** %ep, align 8, !dbg !9022
  %5 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9023
  %tobool = icmp ne %struct.usb_ep* %5, null, !dbg !9023
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9025

lor.lhs.false:                                    ; preds = %do.end
  %6 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9026
  %tobool1 = icmp ne %struct.usb_request* %6, null, !dbg !9026
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9027

if.then:                                          ; preds = %lor.lhs.false, %do.end
  %7 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9028
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %7, i32 0, i32 6, !dbg !9028
  %8 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9028
  %pdev = getelementptr inbounds %struct.net2280, %struct.net2280* %8, i32 0, i32 9, !dbg !9028
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9028
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !9028
  %10 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9028
  %11 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9028
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.net2280_free_request, i64 0, i64 0), %struct.usb_ep* %10, %struct.usb_request* %11) #13, !dbg !9028
  br label %return, !dbg !9030

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !9031, metadata !DIExpression()), !dbg !9033
  %12 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9033
  %13 = bitcast %struct.usb_request* %12 to i8*, !dbg !9033
  store i8* %13, i8** %__mptr3, align 8, !dbg !9033
  br label %do.body4, !dbg !9033

do.body4:                                         ; preds = %if.end
  br label %do.end5, !dbg !9034

do.end5:                                          ; preds = %do.body4
  %14 = load i8*, i8** %__mptr3, align 8, !dbg !9033
  %add.ptr7 = getelementptr i8, i8* %14, i64 0, !dbg !9033
  %15 = bitcast i8* %add.ptr7 to %struct.net2280_request*, !dbg !9033
  store %struct.net2280_request* %15, %struct.net2280_request** %tmp6, align 8, !dbg !9034
  %16 = load %struct.net2280_request*, %struct.net2280_request** %tmp6, align 8, !dbg !9033
  store %struct.net2280_request* %16, %struct.net2280_request** %req, align 8, !dbg !9036
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9037, metadata !DIExpression()), !dbg !9039
  %17 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9039
  %queue = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %17, i32 0, i32 3, !dbg !9039
  %call = call i32 @list_empty(%struct.list_head* %queue) #12, !dbg !9039
  %tobool8 = icmp ne i32 %call, 0, !dbg !9039
  %lnot = xor i1 %tobool8, true, !dbg !9039
  %lnot9 = xor i1 %lnot, true, !dbg !9039
  %lnot10 = xor i1 %lnot9, true, !dbg !9039
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !9039
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9039
  %18 = load i32, i32* %__ret_warn_on, align 4, !dbg !9040
  %tobool11 = icmp ne i32 %18, 0, !dbg !9040
  %lnot12 = xor i1 %tobool11, true, !dbg !9040
  %lnot14 = xor i1 %lnot12, true, !dbg !9040
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !9040
  %conv = sext i32 %lnot.ext15 to i64, !dbg !9040
  %tobool16 = icmp ne i64 %conv, 0, !dbg !9040
  br i1 %tobool16, label %if.then17, label %if.end26, !dbg !9039

if.then17:                                        ; preds = %do.end5
  br label %do.body18, !dbg !9040

do.body18:                                        ; preds = %if.then17
  br label %do.body19, !dbg !9042

do.body19:                                        ; preds = %do.body18
  br label %do.end20, !dbg !9044

do.end20:                                         ; preds = %do.body19
  br label %do.body21, !dbg !9042

do.body21:                                        ; preds = %do.end20
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i32 593, i32 2305, i64 12) #10, !dbg !9046, !srcloc !9048
  br label %do.end22, !dbg !9046

do.end22:                                         ; preds = %do.body21
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 242) #10, !dbg !9049, !srcloc !9051
  br label %do.body23, !dbg !9042

do.body23:                                        ; preds = %do.end22
  br label %do.end24, !dbg !9052

do.end24:                                         ; preds = %do.body23
  br label %do.end25, !dbg !9042

do.end25:                                         ; preds = %do.end24
  br label %if.end26, !dbg !9042

if.end26:                                         ; preds = %do.end25, %do.end5
  %19 = load i32, i32* %__ret_warn_on, align 4, !dbg !9039
  %tobool28 = icmp ne i32 %19, 0, !dbg !9039
  %lnot29 = xor i1 %tobool28, true, !dbg !9039
  %lnot31 = xor i1 %lnot29, true, !dbg !9039
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !9039
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !9039
  store i64 %conv33, i64* %tmp27, align 8, !dbg !9040
  %20 = load i64, i64* %tmp27, align 8, !dbg !9039
  %21 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9054
  %td = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %21, i32 0, i32 1, !dbg !9056
  %22 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !9056
  %tobool34 = icmp ne %struct.net2280_dma* %22, null, !dbg !9054
  br i1 %tobool34, label %if.then35, label %if.end38, !dbg !9057

if.then35:                                        ; preds = %if.end26
  %23 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9058
  %dev36 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %23, i32 0, i32 6, !dbg !9059
  %24 = load %struct.net2280*, %struct.net2280** %dev36, align 8, !dbg !9059
  %requests = getelementptr inbounds %struct.net2280, %struct.net2280* %24, i32 0, i32 19, !dbg !9060
  %25 = load %struct.dma_pool*, %struct.dma_pool** %requests, align 8, !dbg !9060
  %26 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9061
  %td37 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %26, i32 0, i32 1, !dbg !9062
  %27 = load %struct.net2280_dma*, %struct.net2280_dma** %td37, align 8, !dbg !9062
  %28 = bitcast %struct.net2280_dma* %27 to i8*, !dbg !9061
  %29 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9063
  %td_dma = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %29, i32 0, i32 2, !dbg !9064
  %30 = load i64, i64* %td_dma, align 8, !dbg !9064
  call void @dma_pool_free(%struct.dma_pool* %25, i8* %28, i64 %30) #12, !dbg !9065
  br label %if.end38, !dbg !9065

if.end38:                                         ; preds = %if.then35, %if.end26
  %31 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9066
  %32 = bitcast %struct.net2280_request* %31 to i8*, !dbg !9066
  call void @kfree(i8* %32) #12, !dbg !9067
  br label %return, !dbg !9068

return:                                           ; preds = %if.end38, %if.then
  ret void, !dbg !9068
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_queue(%struct.usb_ep* %_ep, %struct.usb_request* %_req, i32 %gfp_flags) #2 !dbg !9069 {
entry:
  %lock.addr.i194 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i194, metadata !5734, metadata !DIExpression()), !dbg !9070
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5740, metadata !DIExpression()), !dbg !9072
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4661, metadata !DIExpression()), !dbg !9073
  %retval = alloca i32, align 4
  %_ep.addr = alloca %struct.usb_ep*, align 8
  %_req.addr = alloca %struct.usb_request*, align 8
  %gfp_flags.addr = alloca i32, align 4
  %req = alloca %struct.net2280_request*, align 8
  %ep = alloca %struct.net2280_ep*, align 8
  %dev = alloca %struct.net2280*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280_ep*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp5 = alloca %struct.net2280_request*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp46 = alloca i32, align 4
  %__dummy50 = alloca i64, align 8
  %__dummy251 = alloca i64, align 8
  %tmp54 = alloca i32, align 4
  %s = alloca i32, align 4
  %valid = alloca i32, align 4
  %expect = alloca i32, align 4
  store %struct.usb_ep* %_ep, %struct.usb_ep** %_ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %_ep.addr, metadata !9080, metadata !DIExpression()), !dbg !9081
  store %struct.usb_request* %_req, %struct.usb_request** %_req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_request** %_req.addr, metadata !9082, metadata !DIExpression()), !dbg !9083
  store i32 %gfp_flags, i32* %gfp_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_flags.addr, metadata !9084, metadata !DIExpression()), !dbg !9085
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %req, metadata !9086, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !9088, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev, metadata !9090, metadata !DIExpression()), !dbg !9091
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9092, metadata !DIExpression()), !dbg !9093
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9094, metadata !DIExpression()), !dbg !9095
  store i32 0, i32* %ret, align 4, !dbg !9095
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9096, metadata !DIExpression()), !dbg !9098
  %0 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9098
  %1 = bitcast %struct.usb_ep* %0 to i8*, !dbg !9098
  store i8* %1, i8** %__mptr, align 8, !dbg !9098
  br label %do.body, !dbg !9098

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9099

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9098
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !9098
  %3 = bitcast i8* %add.ptr to %struct.net2280_ep*, !dbg !9098
  store %struct.net2280_ep* %3, %struct.net2280_ep** %tmp, align 8, !dbg !9099
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %tmp, align 8, !dbg !9098
  store %struct.net2280_ep* %4, %struct.net2280_ep** %ep, align 8, !dbg !9101
  %5 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9102
  %tobool = icmp ne %struct.usb_ep* %5, null, !dbg !9102
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9104

lor.lhs.false:                                    ; preds = %do.end
  %6 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9105
  %desc = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %6, i32 0, i32 9, !dbg !9106
  %7 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc, align 8, !dbg !9106
  %tobool1 = icmp ne %struct.usb_endpoint_descriptor* %7, null, !dbg !9105
  br i1 %tobool1, label %if.end, label %land.lhs.true, !dbg !9107

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9108
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %8, i32 0, i32 10, !dbg !9109
  %bf.load = load i32, i32* %num, align 8, !dbg !9109
  %bf.clear = and i32 %bf.load, 255, !dbg !9109
  %cmp = icmp ne i32 %bf.clear, 0, !dbg !9110
  br i1 %cmp, label %if.then, label %if.end, !dbg !9111

if.then:                                          ; preds = %land.lhs.true, %do.end
  %9 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9112
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.net2280_queue, i64 0, i64 0), %struct.usb_ep* %9) #13, !dbg !9112
  store i32 -22, i32* %retval, align 4, !dbg !9114
  br label %return, !dbg !9114

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !9115, metadata !DIExpression()), !dbg !9117
  %10 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9117
  %11 = bitcast %struct.usb_request* %10 to i8*, !dbg !9117
  store i8* %11, i8** %__mptr2, align 8, !dbg !9117
  br label %do.body3, !dbg !9117

do.body3:                                         ; preds = %if.end
  br label %do.end4, !dbg !9118

do.end4:                                          ; preds = %do.body3
  %12 = load i8*, i8** %__mptr2, align 8, !dbg !9117
  %add.ptr6 = getelementptr i8, i8* %12, i64 0, !dbg !9117
  %13 = bitcast i8* %add.ptr6 to %struct.net2280_request*, !dbg !9117
  store %struct.net2280_request* %13, %struct.net2280_request** %tmp5, align 8, !dbg !9118
  %14 = load %struct.net2280_request*, %struct.net2280_request** %tmp5, align 8, !dbg !9117
  store %struct.net2280_request* %14, %struct.net2280_request** %req, align 8, !dbg !9120
  %15 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9121
  %tobool7 = icmp ne %struct.usb_request* %15, null, !dbg !9121
  br i1 %tobool7, label %lor.lhs.false8, label %if.then15, !dbg !9123

lor.lhs.false8:                                   ; preds = %do.end4
  %16 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9124
  %complete = getelementptr inbounds %struct.usb_request, %struct.usb_request* %16, i32 0, i32 7, !dbg !9125
  %17 = load void (%struct.usb_ep*, %struct.usb_request*)*, void (%struct.usb_ep*, %struct.usb_request*)** %complete, align 8, !dbg !9125
  %tobool9 = icmp ne void (%struct.usb_ep*, %struct.usb_request*)* %17, null, !dbg !9124
  br i1 %tobool9, label %lor.lhs.false10, label %if.then15, !dbg !9126

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %18 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9127
  %buf = getelementptr inbounds %struct.usb_request, %struct.usb_request* %18, i32 0, i32 0, !dbg !9128
  %19 = load i8*, i8** %buf, align 8, !dbg !9128
  %tobool11 = icmp ne i8* %19, null, !dbg !9127
  br i1 %tobool11, label %lor.lhs.false12, label %if.then15, !dbg !9129

lor.lhs.false12:                                  ; preds = %lor.lhs.false10
  %20 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9130
  %queue = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %20, i32 0, i32 3, !dbg !9131
  %call13 = call i32 @list_empty(%struct.list_head* %queue) #12, !dbg !9132
  %tobool14 = icmp ne i32 %call13, 0, !dbg !9132
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !9133

if.then15:                                        ; preds = %lor.lhs.false12, %lor.lhs.false10, %lor.lhs.false8, %do.end4
  store i32 -22, i32* %ret, align 4, !dbg !9134
  br label %print_err, !dbg !9136

if.end16:                                         ; preds = %lor.lhs.false12
  %21 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9137
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %21, i32 0, i32 1, !dbg !9139
  %22 = load i32, i32* %length, align 8, !dbg !9139
  %cmp17 = icmp ugt i32 %22, 16777215, !dbg !9140
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !9141

if.then18:                                        ; preds = %if.end16
  store i32 -33, i32* %ret, align 4, !dbg !9142
  br label %print_err, !dbg !9144

if.end19:                                         ; preds = %if.end16
  %23 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9145
  %dev20 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %23, i32 0, i32 6, !dbg !9146
  %24 = load %struct.net2280*, %struct.net2280** %dev20, align 8, !dbg !9146
  store %struct.net2280* %24, %struct.net2280** %dev, align 8, !dbg !9147
  %25 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9148
  %driver = getelementptr inbounds %struct.net2280, %struct.net2280* %25, i32 0, i32 3, !dbg !9150
  %26 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver, align 8, !dbg !9150
  %tobool21 = icmp ne %struct.usb_gadget_driver* %26, null, !dbg !9148
  br i1 %tobool21, label %lor.lhs.false22, label %if.then24, !dbg !9151

lor.lhs.false22:                                  ; preds = %if.end19
  %27 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9152
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %27, i32 0, i32 0, !dbg !9153
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !9154
  %28 = load i32, i32* %speed, align 8, !dbg !9154
  %cmp23 = icmp eq i32 %28, 0, !dbg !9155
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !9156

if.then24:                                        ; preds = %lor.lhs.false22, %if.end19
  store i32 -108, i32* %ret, align 4, !dbg !9157
  br label %print_err, !dbg !9159

if.end25:                                         ; preds = %lor.lhs.false22
  %29 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9160
  %dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %29, i32 0, i32 3, !dbg !9162
  %30 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !9162
  %tobool26 = icmp ne %struct.net2280_dma_regs* %30, null, !dbg !9160
  br i1 %tobool26, label %land.lhs.true27, label %if.end31, !dbg !9163

land.lhs.true27:                                  ; preds = %if.end25
  %31 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9164
  %length28 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %31, i32 0, i32 1, !dbg !9165
  %32 = load i32, i32* %length28, align 8, !dbg !9165
  %cmp29 = icmp eq i32 %32, 0, !dbg !9166
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !9167

if.then30:                                        ; preds = %land.lhs.true27
  store i32 -95, i32* %ret, align 4, !dbg !9168
  br label %print_err, !dbg !9170

if.end31:                                         ; preds = %land.lhs.true27, %if.end25
  %33 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9171
  %dma32 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %33, i32 0, i32 3, !dbg !9173
  %34 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma32, align 8, !dbg !9173
  %tobool33 = icmp ne %struct.net2280_dma_regs* %34, null, !dbg !9171
  br i1 %tobool33, label %if.then34, label %if.end42, !dbg !9174

if.then34:                                        ; preds = %if.end31
  %35 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9175
  %gadget35 = getelementptr inbounds %struct.net2280, %struct.net2280* %35, i32 0, i32 0, !dbg !9177
  %36 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9178
  %37 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9179
  %is_in = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %37, i32 0, i32 10, !dbg !9180
  %bf.load36 = load i32, i32* %is_in, align 8, !dbg !9180
  %bf.lshr = lshr i32 %bf.load36, 24, !dbg !9180
  %bf.clear37 = and i32 %bf.lshr, 1, !dbg !9180
  %call38 = call i32 @usb_gadget_map_request(%struct.usb_gadget* %gadget35, %struct.usb_request* %36, i32 %bf.clear37) #12, !dbg !9181
  store i32 %call38, i32* %ret, align 4, !dbg !9182
  %38 = load i32, i32* %ret, align 4, !dbg !9183
  %tobool39 = icmp ne i32 %38, 0, !dbg !9183
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !9185

if.then40:                                        ; preds = %if.then34
  br label %print_err, !dbg !9186

if.end41:                                         ; preds = %if.then34
  br label %if.end42, !dbg !9187

if.end42:                                         ; preds = %if.end41, %if.end31
  br label %do.body43, !dbg !9188

do.body43:                                        ; preds = %if.end42
  br label %do.body44, !dbg !9189

do.body44:                                        ; preds = %do.body43
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9190, metadata !DIExpression()), !dbg !9192
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9193, metadata !DIExpression()), !dbg !9192
  %cmp45 = icmp eq i64* %__dummy, %__dummy2, !dbg !9192
  %conv = zext i1 %cmp45 to i32, !dbg !9192
  store i32 1, i32* %tmp46, align 4, !dbg !9192
  %39 = load i32, i32* %tmp46, align 4, !dbg !9192
  br label %do.body47, !dbg !9194

do.body47:                                        ; preds = %do.body44
  br label %do.body48, !dbg !9195

do.body48:                                        ; preds = %do.body47
  br label %do.body49, !dbg !9196

do.body49:                                        ; preds = %do.body48
  call void @llvm.dbg.declare(metadata i64* %__dummy50, metadata !9198, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.declare(metadata i64* %__dummy251, metadata !9202, metadata !DIExpression()), !dbg !9201
  %cmp52 = icmp eq i64* %__dummy50, %__dummy251, !dbg !9201
  %conv53 = zext i1 %cmp52 to i32, !dbg !9201
  store i32 1, i32* %tmp54, align 4, !dbg !9201
  %40 = load i32, i32* %tmp54, align 4, !dbg !9201
  %call55 = call i64 @arch_local_irq_save() #12, !dbg !9203
  store i64 %call55, i64* %flags, align 8, !dbg !9203
  br label %do.end56, !dbg !9203

do.end56:                                         ; preds = %do.body49
  br label %do.end57, !dbg !9196

do.end57:                                         ; preds = %do.end56
  br label %do.body58, !dbg !9195

do.body58:                                        ; preds = %do.end57
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9204, !srcloc !9205
  br label %do.body59, !dbg !9204

do.body59:                                        ; preds = %do.body58
  %41 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9206
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %41, i32 0, i32 1, !dbg !9206
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9207
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !9208
  %rlock.i = bitcast %union.anon.4* %43 to %struct.raw_spinlock*, !dbg !9208
  br label %do.end61, !dbg !9206

do.end61:                                         ; preds = %do.body59
  br label %do.end62, !dbg !9204

do.end62:                                         ; preds = %do.end61
  br label %do.end63, !dbg !9195

do.end63:                                         ; preds = %do.end62
  br label %do.end64, !dbg !9194

do.end64:                                         ; preds = %do.end63
  br label %do.end65, !dbg !9189

do.end65:                                         ; preds = %do.end64
  %44 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9209
  %status = getelementptr inbounds %struct.usb_request, %struct.usb_request* %44, i32 0, i32 11, !dbg !9210
  store i32 -115, i32* %status, align 4, !dbg !9211
  %45 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9212
  %actual = getelementptr inbounds %struct.usb_request, %struct.usb_request* %45, i32 0, i32 12, !dbg !9213
  store i32 0, i32* %actual, align 8, !dbg !9214
  %46 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9215
  %queue66 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %46, i32 0, i32 8, !dbg !9217
  %call67 = call i32 @list_empty(%struct.list_head* %queue66) #12, !dbg !9218
  %tobool68 = icmp ne i32 %call67, 0, !dbg !9218
  br i1 %tobool68, label %land.lhs.true69, label %if.else150, !dbg !9219

land.lhs.true69:                                  ; preds = %do.end65
  %47 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9220
  %stopped = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %47, i32 0, i32 10, !dbg !9221
  %bf.load70 = load i32, i32* %stopped, align 8, !dbg !9221
  %bf.lshr71 = lshr i32 %bf.load70, 22, !dbg !9221
  %bf.clear72 = and i32 %bf.lshr71, 1, !dbg !9221
  %tobool73 = icmp ne i32 %bf.clear72, 0, !dbg !9220
  br i1 %tobool73, label %if.else150, label %land.lhs.true74, !dbg !9222

land.lhs.true74:                                  ; preds = %land.lhs.true69
  %48 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9223
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %48, i32 0, i32 8, !dbg !9224
  %49 = load i64, i64* %quirks, align 8, !dbg !9224
  %and = and i64 %49, 8, !dbg !9225
  %tobool75 = icmp ne i64 %and, 0, !dbg !9225
  br i1 %tobool75, label %land.lhs.true76, label %if.then84, !dbg !9226

land.lhs.true76:                                  ; preds = %land.lhs.true74
  %50 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9227
  %dma77 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %50, i32 0, i32 3, !dbg !9228
  %51 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma77, align 8, !dbg !9228
  %tobool78 = icmp ne %struct.net2280_dma_regs* %51, null, !dbg !9227
  br i1 %tobool78, label %land.lhs.true79, label %if.then84, !dbg !9229

land.lhs.true79:                                  ; preds = %land.lhs.true76
  %52 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9230
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %52, i32 0, i32 2, !dbg !9231
  %53 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !9231
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %53, i32 0, i32 1, !dbg !9232
  %54 = bitcast i32* %ep_rsp to i8*, !dbg !9233
  %call80 = call i32 @readl(i8* %54) #12, !dbg !9234
  %conv81 = zext i32 %call80 to i64, !dbg !9234
  %and82 = and i64 %conv81, 1, !dbg !9235
  %tobool83 = icmp ne i64 %and82, 0, !dbg !9235
  br i1 %tobool83, label %if.else150, label %if.then84, !dbg !9236

if.then84:                                        ; preds = %land.lhs.true79, %land.lhs.true76, %land.lhs.true74
  %55 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9237
  %dma85 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %55, i32 0, i32 3, !dbg !9240
  %56 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma85, align 8, !dbg !9240
  %tobool86 = icmp ne %struct.net2280_dma_regs* %56, null, !dbg !9237
  br i1 %tobool86, label %if.then87, label %if.else, !dbg !9241

if.then87:                                        ; preds = %if.then84
  %57 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9242
  %58 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9243
  call void @start_dma(%struct.net2280_ep* %57, %struct.net2280_request* %58) #12, !dbg !9244
  br label %if.end149, !dbg !9244

if.else:                                          ; preds = %if.then84
  %59 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9245
  %num88 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %59, i32 0, i32 10, !dbg !9248
  %bf.load89 = load i32, i32* %num88, align 8, !dbg !9248
  %bf.clear90 = and i32 %bf.load89, 255, !dbg !9248
  %cmp91 = icmp eq i32 %bf.clear90, 0, !dbg !9249
  br i1 %cmp91, label %land.lhs.true93, label %if.end98, !dbg !9250

land.lhs.true93:                                  ; preds = %if.else
  %60 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9251
  %length94 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %60, i32 0, i32 1, !dbg !9252
  %61 = load i32, i32* %length94, align 8, !dbg !9252
  %cmp95 = icmp eq i32 %61, 0, !dbg !9253
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !9254

if.then97:                                        ; preds = %land.lhs.true93
  %62 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9255
  call void @allow_status(%struct.net2280_ep* %62) #12, !dbg !9257
  %63 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9258
  %64 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9259
  call void @done(%struct.net2280_ep* %63, %struct.net2280_request* %64, i32 0) #12, !dbg !9260
  br label %done, !dbg !9261

if.end98:                                         ; preds = %land.lhs.true93, %if.else
  %65 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9262
  %is_in99 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %65, i32 0, i32 10, !dbg !9264
  %bf.load100 = load i32, i32* %is_in99, align 8, !dbg !9264
  %bf.lshr101 = lshr i32 %bf.load100, 24, !dbg !9264
  %bf.clear102 = and i32 %bf.lshr101, 1, !dbg !9264
  %tobool103 = icmp ne i32 %bf.clear102, 0, !dbg !9262
  br i1 %tobool103, label %if.then104, label %if.else105, !dbg !9265

if.then104:                                       ; preds = %if.end98
  %66 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9266
  %67 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9267
  call void @write_fifo(%struct.net2280_ep* %66, %struct.usb_request* %67) #12, !dbg !9268
  br label %if.end148, !dbg !9268

if.else105:                                       ; preds = %if.end98
  call void @llvm.dbg.declare(metadata i32* %s, metadata !9269, metadata !DIExpression()), !dbg !9271
  %68 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9272
  %regs106 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %68, i32 0, i32 2, !dbg !9273
  %69 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs106, align 8, !dbg !9273
  %ep_stat = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %69, i32 0, i32 3, !dbg !9274
  %70 = bitcast i32* %ep_stat to i8*, !dbg !9275
  %call107 = call i32 @readl(i8* %70) #12, !dbg !9276
  store i32 %call107, i32* %s, align 4, !dbg !9277
  %71 = load i32, i32* %s, align 4, !dbg !9278
  %conv108 = zext i32 %71 to i64, !dbg !9278
  %and109 = and i64 %conv108, 1024, !dbg !9280
  %cmp110 = icmp eq i64 %and109, 0, !dbg !9281
  br i1 %cmp110, label %if.then112, label %if.end138, !dbg !9282

if.then112:                                       ; preds = %if.else105
  %72 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9283
  %73 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9286
  %call113 = call i32 @read_fifo(%struct.net2280_ep* %72, %struct.net2280_request* %73) #12, !dbg !9287
  %tobool114 = icmp ne i32 %call113, 0, !dbg !9287
  br i1 %tobool114, label %land.lhs.true115, label %if.else122, !dbg !9288

land.lhs.true115:                                 ; preds = %if.then112
  %74 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9289
  %num116 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %74, i32 0, i32 10, !dbg !9290
  %bf.load117 = load i32, i32* %num116, align 8, !dbg !9290
  %bf.clear118 = and i32 %bf.load117, 255, !dbg !9290
  %cmp119 = icmp eq i32 %bf.clear118, 0, !dbg !9291
  br i1 %cmp119, label %if.then121, label %if.else122, !dbg !9292

if.then121:                                       ; preds = %land.lhs.true115
  %75 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9293
  %76 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9295
  call void @done(%struct.net2280_ep* %75, %struct.net2280_request* %76, i32 0) #12, !dbg !9296
  %77 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9297
  call void @allow_status(%struct.net2280_ep* %77) #12, !dbg !9298
  store %struct.net2280_request* null, %struct.net2280_request** %req, align 8, !dbg !9299
  br label %if.end137, !dbg !9300

if.else122:                                       ; preds = %land.lhs.true115, %if.then112
  %78 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9301
  %79 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9303
  %call123 = call i32 @read_fifo(%struct.net2280_ep* %78, %struct.net2280_request* %79) #12, !dbg !9304
  %tobool124 = icmp ne i32 %call123, 0, !dbg !9304
  br i1 %tobool124, label %land.lhs.true125, label %if.else132, !dbg !9305

land.lhs.true125:                                 ; preds = %if.else122
  %80 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9306
  %num126 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %80, i32 0, i32 10, !dbg !9307
  %bf.load127 = load i32, i32* %num126, align 8, !dbg !9307
  %bf.clear128 = and i32 %bf.load127, 255, !dbg !9307
  %cmp129 = icmp ne i32 %bf.clear128, 0, !dbg !9308
  br i1 %cmp129, label %if.then131, label %if.else132, !dbg !9309

if.then131:                                       ; preds = %land.lhs.true125
  %81 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9310
  %82 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9312
  call void @done(%struct.net2280_ep* %81, %struct.net2280_request* %82, i32 0) #12, !dbg !9313
  store %struct.net2280_request* null, %struct.net2280_request** %req, align 8, !dbg !9314
  br label %if.end136, !dbg !9315

if.else132:                                       ; preds = %land.lhs.true125, %if.else122
  %83 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9316
  %regs133 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %83, i32 0, i32 2, !dbg !9317
  %84 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs133, align 8, !dbg !9317
  %ep_stat134 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %84, i32 0, i32 3, !dbg !9318
  %85 = bitcast i32* %ep_stat134 to i8*, !dbg !9319
  %call135 = call i32 @readl(i8* %85) #12, !dbg !9320
  store i32 %call135, i32* %s, align 4, !dbg !9321
  br label %if.end136

if.end136:                                        ; preds = %if.else132, %if.then131
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.then121
  br label %if.end138, !dbg !9322

if.end138:                                        ; preds = %if.end137, %if.else105
  %86 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9323
  %tobool139 = icmp ne %struct.net2280_request* %86, null, !dbg !9323
  br i1 %tobool139, label %land.lhs.true140, label %if.end147, !dbg !9325

land.lhs.true140:                                 ; preds = %if.end138
  %87 = load i32, i32* %s, align 4, !dbg !9326
  %conv141 = zext i32 %87 to i64, !dbg !9326
  %and142 = and i64 %conv141, 16, !dbg !9327
  %tobool143 = icmp ne i64 %and142, 0, !dbg !9327
  br i1 %tobool143, label %if.then144, label %if.end147, !dbg !9328

if.then144:                                       ; preds = %land.lhs.true140
  %88 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9329
  %regs145 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %88, i32 0, i32 2, !dbg !9330
  %89 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs145, align 8, !dbg !9330
  %ep_rsp146 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %89, i32 0, i32 1, !dbg !9331
  %90 = bitcast i32* %ep_rsp146 to i8*, !dbg !9332
  call void @writel(i32 128, i8* %90) #12, !dbg !9333
  br label %if.end147, !dbg !9333

if.end147:                                        ; preds = %if.then144, %land.lhs.true140, %if.end138
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %if.then104
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.then87
  br label %if.end183, !dbg !9334

if.else150:                                       ; preds = %land.lhs.true79, %land.lhs.true69, %do.end65
  %91 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9335
  %dma151 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %91, i32 0, i32 3, !dbg !9337
  %92 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma151, align 8, !dbg !9337
  %tobool152 = icmp ne %struct.net2280_dma_regs* %92, null, !dbg !9335
  br i1 %tobool152, label %if.then153, label %if.end182, !dbg !9338

if.then153:                                       ; preds = %if.else150
  call void @llvm.dbg.declare(metadata i32* %valid, metadata !9339, metadata !DIExpression()), !dbg !9341
  store i32 1, i32* %valid, align 4, !dbg !9341
  %93 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9342
  %is_in154 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %93, i32 0, i32 10, !dbg !9344
  %bf.load155 = load i32, i32* %is_in154, align 8, !dbg !9344
  %bf.lshr156 = lshr i32 %bf.load155, 24, !dbg !9344
  %bf.clear157 = and i32 %bf.lshr156, 1, !dbg !9344
  %tobool158 = icmp ne i32 %bf.clear157, 0, !dbg !9342
  br i1 %tobool158, label %if.then159, label %if.end181, !dbg !9345

if.then159:                                       ; preds = %if.then153
  call void @llvm.dbg.declare(metadata i32* %expect, metadata !9346, metadata !DIExpression()), !dbg !9348
  %94 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9349
  %req160 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %94, i32 0, i32 0, !dbg !9349
  %zero = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req160, i32 0, i32 6, !dbg !9349
  %95 = bitcast i24* %zero to i32*, !dbg !9349
  %bf.load161 = load i32, i32* %95, align 8, !dbg !9349
  %bf.lshr162 = lshr i32 %bf.load161, 18, !dbg !9349
  %bf.clear163 = and i32 %bf.lshr162, 1, !dbg !9349
  %tobool164 = icmp ne i32 %bf.clear163, 0, !dbg !9349
  br i1 %tobool164, label %lor.end, label %lor.rhs, !dbg !9349

lor.rhs:                                          ; preds = %if.then159
  %96 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9349
  %req165 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %96, i32 0, i32 0, !dbg !9349
  %length166 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req165, i32 0, i32 1, !dbg !9349
  %97 = load i32, i32* %length166, align 8, !dbg !9349
  %98 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9349
  %ep167 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %98, i32 0, i32 0, !dbg !9349
  %maxpacket = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep167, i32 0, i32 7, !dbg !9349
  %99 = bitcast [7 x i8]* %maxpacket to i56*, !dbg !9349
  %bf.load168 = load i56, i56* %99, align 2, !dbg !9349
  %bf.clear169 = and i56 %bf.load168, 65535, !dbg !9349
  %bf.cast = trunc i56 %bf.clear169 to i32, !dbg !9349
  %rem = urem i32 %97, %bf.cast, !dbg !9349
  %tobool170 = icmp ne i32 %rem, 0, !dbg !9349
  br label %lor.end, !dbg !9349

lor.end:                                          ; preds = %lor.rhs, %if.then159
  %100 = phi i1 [ true, %if.then159 ], [ %tobool170, %lor.rhs ]
  %lnot = xor i1 %100, true, !dbg !9349
  %lnot171 = xor i1 %lnot, true, !dbg !9349
  %lnot.ext = zext i1 %lnot171 to i32, !dbg !9349
  %conv172 = sext i32 %lnot.ext to i64, !dbg !9349
  %conv173 = trunc i64 %conv172 to i32, !dbg !9349
  store i32 %conv173, i32* %expect, align 4, !dbg !9350
  %101 = load i32, i32* %expect, align 4, !dbg !9351
  %102 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9353
  %in_fifo_validate = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %102, i32 0, i32 10, !dbg !9354
  %bf.load174 = load i32, i32* %in_fifo_validate, align 8, !dbg !9354
  %bf.lshr175 = lshr i32 %bf.load174, 20, !dbg !9354
  %bf.clear176 = and i32 %bf.lshr175, 1, !dbg !9354
  %cmp177 = icmp ne i32 %101, %bf.clear176, !dbg !9355
  br i1 %cmp177, label %if.then179, label %if.end180, !dbg !9356

if.then179:                                       ; preds = %lor.end
  store i32 0, i32* %valid, align 4, !dbg !9357
  br label %if.end180, !dbg !9358

if.end180:                                        ; preds = %if.then179, %lor.end
  br label %if.end181, !dbg !9359

if.end181:                                        ; preds = %if.end180, %if.then153
  %103 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9360
  %104 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9361
  %105 = load i32, i32* %valid, align 4, !dbg !9362
  call void @queue_dma(%struct.net2280_ep* %103, %struct.net2280_request* %104, i32 %105) #12, !dbg !9363
  br label %if.end182, !dbg !9364

if.end182:                                        ; preds = %if.end181, %if.else150
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %if.end149
  %106 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9365
  %responded = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %106, i32 0, i32 10, !dbg !9366
  %bf.load184 = load i32, i32* %responded, align 8, !dbg !9367
  %bf.clear185 = and i32 %bf.load184, -67108865, !dbg !9367
  %bf.set = or i32 %bf.clear185, 67108864, !dbg !9367
  store i32 %bf.set, i32* %responded, align 8, !dbg !9367
  %107 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9368
  %tobool186 = icmp ne %struct.net2280_request* %107, null, !dbg !9368
  br i1 %tobool186, label %if.then187, label %if.end190, !dbg !9370

if.then187:                                       ; preds = %if.end183
  %108 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9371
  %queue188 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %108, i32 0, i32 3, !dbg !9372
  %109 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9373
  %queue189 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %109, i32 0, i32 8, !dbg !9374
  call void @list_add_tail(%struct.list_head* %queue188, %struct.list_head* %queue189) #12, !dbg !9375
  br label %if.end190, !dbg !9375

if.end190:                                        ; preds = %if.then187, %if.end183
  br label %done, !dbg !9368

done:                                             ; preds = %if.end190, %if.then97
  call void @llvm.dbg.label(metadata !9376), !dbg !9377
  %110 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9378
  %lock191 = getelementptr inbounds %struct.net2280, %struct.net2280* %110, i32 0, i32 1, !dbg !9379
  %111 = load i64, i64* %flags, align 8, !dbg !9380
  store %struct.spinlock* %lock191, %struct.spinlock** %lock.addr.i194, align 8
  store i64 %111, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !443, metadata !5796, metadata !DIExpression()) #10, !dbg !9381
  call void @llvm.dbg.declare(metadata !443, metadata !5800, metadata !DIExpression()) #10, !dbg !9381
  store i32 1, i32* %tmp.i, align 4, !dbg !9381
  %112 = load i32, i32* %tmp.i, align 4, !dbg !9381
  call void @llvm.dbg.declare(metadata !443, metadata !5801, metadata !DIExpression()) #10, !dbg !9382
  call void @llvm.dbg.declare(metadata !443, metadata !5807, metadata !DIExpression()) #10, !dbg !9382
  store i32 1, i32* %tmp8.i, align 4, !dbg !9382
  %113 = load i32, i32* %tmp8.i, align 4, !dbg !9382
  %114 = load i64, i64* %flags.addr.i, align 8, !dbg !9383
  call void @arch_local_irq_restore(i64 %114) #15, !dbg !9383
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9384, !srcloc !5811
  %115 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i194, align 8, !dbg !9385
  %116 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %115, i32 0, i32 0, !dbg !9385
  %rlock.i195 = bitcast %union.anon.4* %116 to %struct.raw_spinlock*, !dbg !9385
  %117 = load i32, i32* %ret, align 4, !dbg !9386
  store i32 %117, i32* %retval, align 4, !dbg !9387
  br label %return, !dbg !9387

print_err:                                        ; preds = %if.then40, %if.then30, %if.then24, %if.then18, %if.then15
  call void @llvm.dbg.label(metadata !9388), !dbg !9389
  %118 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9390
  %dev192 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %118, i32 0, i32 6, !dbg !9390
  %119 = load %struct.net2280*, %struct.net2280** %dev192, align 8, !dbg !9390
  %pdev = getelementptr inbounds %struct.net2280, %struct.net2280* %119, i32 0, i32 9, !dbg !9390
  %120 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9390
  %dev193 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %120, i32 0, i32 41, !dbg !9390
  %121 = load i32, i32* %ret, align 4, !dbg !9390
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev193, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.net2280_queue, i64 0, i64 0), i32 %121) #13, !dbg !9390
  %122 = load i32, i32* %ret, align 4, !dbg !9391
  store i32 %122, i32* %retval, align 4, !dbg !9392
  br label %return, !dbg !9392

return:                                           ; preds = %print_err, %done, %if.then
  %123 = load i32, i32* %retval, align 4, !dbg !9393
  ret i32 %123, !dbg !9393
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_dequeue(%struct.usb_ep* %_ep, %struct.usb_request* %_req) #2 !dbg !9394 {
entry:
  %lock.addr.i142 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i142, metadata !5734, metadata !DIExpression()), !dbg !9395
  %flags.addr.i143 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i143, metadata !5740, metadata !DIExpression()), !dbg !9399
  %tmp.i144 = alloca i32, align 4
  %tmp8.i145 = alloca i32, align 4
  %lock.addr.i140 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i140, metadata !5734, metadata !DIExpression()), !dbg !9400
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5740, metadata !DIExpression()), !dbg !9402
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4661, metadata !DIExpression()), !dbg !9403
  %retval = alloca i32, align 4
  %_ep.addr = alloca %struct.usb_ep*, align 8
  %_req.addr = alloca %struct.usb_request*, align 8
  %ep = alloca %struct.net2280_ep*, align 8
  %req = alloca %struct.net2280_request*, align 8
  %flags = alloca i64, align 8
  %dmactl = alloca i32, align 4
  %stopped = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280_ep*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp7 = alloca i32, align 4
  %__dummy11 = alloca i64, align 8
  %__dummy212 = alloca i64, align 8
  %tmp15 = alloca i32, align 4
  %__mptr41 = alloca i8*, align 8
  %tmp44 = alloca %struct.net2280_request*, align 8
  %__mptr55 = alloca i8*, align 8
  %tmp60 = alloca %struct.net2280_request*, align 8
  %__mptr127 = alloca i8*, align 8
  %tmp132 = alloca %struct.net2280_request*, align 8
  store %struct.usb_ep* %_ep, %struct.usb_ep** %_ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %_ep.addr, metadata !9410, metadata !DIExpression()), !dbg !9411
  store %struct.usb_request* %_req, %struct.usb_request** %_req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_request** %_req.addr, metadata !9412, metadata !DIExpression()), !dbg !9413
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !9414, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %req, metadata !9416, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9418, metadata !DIExpression()), !dbg !9419
  call void @llvm.dbg.declare(metadata i32* %dmactl, metadata !9420, metadata !DIExpression()), !dbg !9421
  call void @llvm.dbg.declare(metadata i32* %stopped, metadata !9422, metadata !DIExpression()), !dbg !9423
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9424, metadata !DIExpression()), !dbg !9426
  %0 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9426
  %1 = bitcast %struct.usb_ep* %0 to i8*, !dbg !9426
  store i8* %1, i8** %__mptr, align 8, !dbg !9426
  br label %do.body, !dbg !9426

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9427

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9426
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !9426
  %3 = bitcast i8* %add.ptr to %struct.net2280_ep*, !dbg !9426
  store %struct.net2280_ep* %3, %struct.net2280_ep** %tmp, align 8, !dbg !9427
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %tmp, align 8, !dbg !9426
  store %struct.net2280_ep* %4, %struct.net2280_ep** %ep, align 8, !dbg !9429
  %5 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9430
  %tobool = icmp ne %struct.usb_ep* %5, null, !dbg !9430
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9432

lor.lhs.false:                                    ; preds = %do.end
  %6 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9433
  %desc = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %6, i32 0, i32 9, !dbg !9434
  %7 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc, align 8, !dbg !9434
  %tobool1 = icmp ne %struct.usb_endpoint_descriptor* %7, null, !dbg !9433
  br i1 %tobool1, label %lor.lhs.false2, label %land.lhs.true, !dbg !9435

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9436
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %8, i32 0, i32 10, !dbg !9437
  %bf.load = load i32, i32* %num, align 8, !dbg !9437
  %bf.clear = and i32 %bf.load, 255, !dbg !9437
  %cmp = icmp ne i32 %bf.clear, 0, !dbg !9438
  br i1 %cmp, label %if.then, label %lor.lhs.false2, !dbg !9439

lor.lhs.false2:                                   ; preds = %land.lhs.true, %lor.lhs.false
  %9 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9440
  %tobool3 = icmp ne %struct.usb_request* %9, null, !dbg !9440
  br i1 %tobool3, label %if.end, label %if.then, !dbg !9441

if.then:                                          ; preds = %lor.lhs.false2, %land.lhs.true, %do.end
  %10 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9442
  %11 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9442
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.net2280_dequeue, i64 0, i64 0), %struct.usb_ep* %10, %struct.usb_request* %11) #13, !dbg !9442
  store i32 -22, i32* %retval, align 4, !dbg !9444
  br label %return, !dbg !9444

if.end:                                           ; preds = %lor.lhs.false2
  br label %do.body4, !dbg !9445

do.body4:                                         ; preds = %if.end
  br label %do.body5, !dbg !9446

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9447, metadata !DIExpression()), !dbg !9449
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9450, metadata !DIExpression()), !dbg !9449
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !9449
  %conv = zext i1 %cmp6 to i32, !dbg !9449
  store i32 1, i32* %tmp7, align 4, !dbg !9449
  %12 = load i32, i32* %tmp7, align 4, !dbg !9449
  br label %do.body8, !dbg !9451

do.body8:                                         ; preds = %do.body5
  br label %do.body9, !dbg !9452

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !9453

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy11, metadata !9455, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.declare(metadata i64* %__dummy212, metadata !9459, metadata !DIExpression()), !dbg !9458
  %cmp13 = icmp eq i64* %__dummy11, %__dummy212, !dbg !9458
  %conv14 = zext i1 %cmp13 to i32, !dbg !9458
  store i32 1, i32* %tmp15, align 4, !dbg !9458
  %13 = load i32, i32* %tmp15, align 4, !dbg !9458
  %call16 = call i64 @arch_local_irq_save() #12, !dbg !9460
  store i64 %call16, i64* %flags, align 8, !dbg !9460
  br label %do.end17, !dbg !9460

do.end17:                                         ; preds = %do.body10
  br label %do.end18, !dbg !9453

do.end18:                                         ; preds = %do.end17
  br label %do.body19, !dbg !9452

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9461, !srcloc !9462
  br label %do.body20, !dbg !9461

do.body20:                                        ; preds = %do.body19
  %14 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9463
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %14, i32 0, i32 6, !dbg !9463
  %15 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9463
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %15, i32 0, i32 1, !dbg !9463
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9464
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !9465
  %rlock.i = bitcast %union.anon.4* %17 to %struct.raw_spinlock*, !dbg !9465
  br label %do.end22, !dbg !9463

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !9461

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !9452

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !9451

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !9446

do.end26:                                         ; preds = %do.end25
  %18 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9466
  %stopped27 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %18, i32 0, i32 10, !dbg !9467
  %bf.load28 = load i32, i32* %stopped27, align 8, !dbg !9467
  %bf.lshr = lshr i32 %bf.load28, 22, !dbg !9467
  %bf.clear29 = and i32 %bf.lshr, 1, !dbg !9467
  store i32 %bf.clear29, i32* %stopped, align 4, !dbg !9468
  store i32 0, i32* %dmactl, align 4, !dbg !9469
  %19 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9470
  %stopped30 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %19, i32 0, i32 10, !dbg !9471
  %bf.load31 = load i32, i32* %stopped30, align 8, !dbg !9472
  %bf.clear32 = and i32 %bf.load31, -4194305, !dbg !9472
  %bf.set = or i32 %bf.clear32, 4194304, !dbg !9472
  store i32 %bf.set, i32* %stopped30, align 8, !dbg !9472
  %20 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9473
  %dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %20, i32 0, i32 3, !dbg !9475
  %21 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !9475
  %tobool33 = icmp ne %struct.net2280_dma_regs* %21, null, !dbg !9473
  br i1 %tobool33, label %if.then34, label %if.end40, !dbg !9476

if.then34:                                        ; preds = %do.end26
  %22 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9477
  %dma35 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %22, i32 0, i32 3, !dbg !9479
  %23 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma35, align 8, !dbg !9479
  %dmactl36 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %23, i32 0, i32 0, !dbg !9480
  %24 = bitcast i32* %dmactl36 to i8*, !dbg !9481
  %call37 = call i32 @readl(i8* %24) #12, !dbg !9482
  store i32 %call37, i32* %dmactl, align 4, !dbg !9483
  %25 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9484
  %dma38 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %25, i32 0, i32 3, !dbg !9485
  %26 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma38, align 8, !dbg !9485
  call void @stop_dma(%struct.net2280_dma_regs* %26) #12, !dbg !9486
  %27 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9487
  %call39 = call i32 @scan_dma_completions(%struct.net2280_ep* %27) #12, !dbg !9488
  br label %if.end40, !dbg !9489

if.end40:                                         ; preds = %if.then34, %do.end26
  call void @llvm.dbg.declare(metadata i8** %__mptr41, metadata !9490, metadata !DIExpression()), !dbg !9493
  %28 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9493
  %queue = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %28, i32 0, i32 8, !dbg !9493
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queue, i32 0, i32 0, !dbg !9493
  %29 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9493
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !9493
  store i8* %30, i8** %__mptr41, align 8, !dbg !9493
  br label %do.body42, !dbg !9493

do.body42:                                        ; preds = %if.end40
  br label %do.end43, !dbg !9494

do.end43:                                         ; preds = %do.body42
  %31 = load i8*, i8** %__mptr41, align 8, !dbg !9493
  %add.ptr45 = getelementptr i8, i8* %31, i64 -112, !dbg !9493
  %32 = bitcast i8* %add.ptr45 to %struct.net2280_request*, !dbg !9493
  store %struct.net2280_request* %32, %struct.net2280_request** %tmp44, align 8, !dbg !9494
  %33 = load %struct.net2280_request*, %struct.net2280_request** %tmp44, align 8, !dbg !9493
  store %struct.net2280_request* %33, %struct.net2280_request** %req, align 8, !dbg !9496
  br label %for.cond, !dbg !9496

for.cond:                                         ; preds = %do.end59, %do.end43
  %34 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9497
  %queue46 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %34, i32 0, i32 3, !dbg !9497
  %35 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9497
  %queue47 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %35, i32 0, i32 8, !dbg !9497
  %cmp48 = icmp eq %struct.list_head* %queue46, %queue47, !dbg !9497
  %lnot = xor i1 %cmp48, true, !dbg !9497
  br i1 %lnot, label %for.body, label %for.end, !dbg !9496

for.body:                                         ; preds = %for.cond
  %36 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9499
  %req50 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %36, i32 0, i32 0, !dbg !9502
  %37 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9503
  %cmp51 = icmp eq %struct.usb_request* %req50, %37, !dbg !9504
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !9505

if.then53:                                        ; preds = %for.body
  br label %for.end, !dbg !9506

if.end54:                                         ; preds = %for.body
  br label %for.inc, !dbg !9507

for.inc:                                          ; preds = %if.end54
  call void @llvm.dbg.declare(metadata i8** %__mptr55, metadata !9508, metadata !DIExpression()), !dbg !9510
  %38 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9510
  %queue56 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %38, i32 0, i32 3, !dbg !9510
  %next57 = getelementptr inbounds %struct.list_head, %struct.list_head* %queue56, i32 0, i32 0, !dbg !9510
  %39 = load %struct.list_head*, %struct.list_head** %next57, align 8, !dbg !9510
  %40 = bitcast %struct.list_head* %39 to i8*, !dbg !9510
  store i8* %40, i8** %__mptr55, align 8, !dbg !9510
  br label %do.body58, !dbg !9510

do.body58:                                        ; preds = %for.inc
  br label %do.end59, !dbg !9511

do.end59:                                         ; preds = %do.body58
  %41 = load i8*, i8** %__mptr55, align 8, !dbg !9510
  %add.ptr61 = getelementptr i8, i8* %41, i64 -112, !dbg !9510
  %42 = bitcast i8* %add.ptr61 to %struct.net2280_request*, !dbg !9510
  store %struct.net2280_request* %42, %struct.net2280_request** %tmp60, align 8, !dbg !9511
  %43 = load %struct.net2280_request*, %struct.net2280_request** %tmp60, align 8, !dbg !9510
  store %struct.net2280_request* %43, %struct.net2280_request** %req, align 8, !dbg !9497
  br label %for.cond, !dbg !9497, !llvm.loop !9513

for.end:                                          ; preds = %if.then53, %for.cond
  %44 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9515
  %req62 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %44, i32 0, i32 0, !dbg !9516
  %45 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9517
  %cmp63 = icmp ne %struct.usb_request* %req62, %45, !dbg !9518
  br i1 %cmp63, label %if.then65, label %if.end72, !dbg !9519

if.then65:                                        ; preds = %for.end
  %46 = load i32, i32* %stopped, align 4, !dbg !9520
  %47 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9521
  %stopped66 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %47, i32 0, i32 10, !dbg !9522
  %bf.load67 = load i32, i32* %stopped66, align 8, !dbg !9523
  %bf.value = and i32 %46, 1, !dbg !9523
  %bf.shl = shl i32 %bf.value, 22, !dbg !9523
  %bf.clear68 = and i32 %bf.load67, -4194305, !dbg !9523
  %bf.set69 = or i32 %bf.clear68, %bf.shl, !dbg !9523
  store i32 %bf.set69, i32* %stopped66, align 8, !dbg !9523
  %48 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9524
  %dev70 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %48, i32 0, i32 6, !dbg !9525
  %49 = load %struct.net2280*, %struct.net2280** %dev70, align 8, !dbg !9525
  %lock71 = getelementptr inbounds %struct.net2280, %struct.net2280* %49, i32 0, i32 1, !dbg !9526
  %50 = load i64, i64* %flags, align 8, !dbg !9527
  store %struct.spinlock* %lock71, %struct.spinlock** %lock.addr.i142, align 8
  store i64 %50, i64* %flags.addr.i143, align 8
  call void @llvm.dbg.declare(metadata !443, metadata !5796, metadata !DIExpression()) #10, !dbg !9528
  call void @llvm.dbg.declare(metadata !443, metadata !5800, metadata !DIExpression()) #10, !dbg !9528
  store i32 1, i32* %tmp.i144, align 4, !dbg !9528
  %51 = load i32, i32* %tmp.i144, align 4, !dbg !9528
  call void @llvm.dbg.declare(metadata !443, metadata !5801, metadata !DIExpression()) #10, !dbg !9529
  call void @llvm.dbg.declare(metadata !443, metadata !5807, metadata !DIExpression()) #10, !dbg !9529
  store i32 1, i32* %tmp8.i145, align 4, !dbg !9529
  %52 = load i32, i32* %tmp8.i145, align 4, !dbg !9529
  %53 = load i64, i64* %flags.addr.i143, align 8, !dbg !9530
  call void @arch_local_irq_restore(i64 %53) #15, !dbg !9530
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9531, !srcloc !5811
  %54 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i142, align 8, !dbg !9532
  %55 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %54, i32 0, i32 0, !dbg !9532
  %rlock.i146 = bitcast %union.anon.4* %55 to %struct.raw_spinlock*, !dbg !9532
  store i32 -22, i32* %retval, align 4, !dbg !9533
  br label %return, !dbg !9533

if.end72:                                         ; preds = %for.end
  %56 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9534
  %queue73 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %56, i32 0, i32 8, !dbg !9536
  %next74 = getelementptr inbounds %struct.list_head, %struct.list_head* %queue73, i32 0, i32 0, !dbg !9537
  %57 = load %struct.list_head*, %struct.list_head** %next74, align 8, !dbg !9537
  %58 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9538
  %queue75 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %58, i32 0, i32 3, !dbg !9539
  %cmp76 = icmp eq %struct.list_head* %57, %queue75, !dbg !9540
  br i1 %cmp76, label %if.then78, label %if.end97, !dbg !9541

if.then78:                                        ; preds = %if.end72
  %59 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9542
  %dma79 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %59, i32 0, i32 3, !dbg !9545
  %60 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma79, align 8, !dbg !9545
  %tobool80 = icmp ne %struct.net2280_dma_regs* %60, null, !dbg !9542
  br i1 %tobool80, label %if.then81, label %if.else, !dbg !9546

if.then81:                                        ; preds = %if.then78
  %61 = load %struct.usb_request*, %struct.usb_request** %_req.addr, align 8, !dbg !9547
  %status = getelementptr inbounds %struct.usb_request, %struct.usb_request* %61, i32 0, i32 11, !dbg !9549
  store i32 -104, i32* %status, align 4, !dbg !9550
  %62 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9551
  call void @abort_dma(%struct.net2280_ep* %62) #12, !dbg !9552
  %63 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9553
  %queue82 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %63, i32 0, i32 8, !dbg !9553
  %next83 = getelementptr inbounds %struct.list_head, %struct.list_head* %queue82, i32 0, i32 0, !dbg !9553
  %64 = load %struct.list_head*, %struct.list_head** %next83, align 8, !dbg !9553
  %65 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9553
  %queue84 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %65, i32 0, i32 3, !dbg !9553
  %cmp85 = icmp eq %struct.list_head* %64, %queue84, !dbg !9553
  %lnot87 = xor i1 %cmp85, true, !dbg !9553
  %lnot88 = xor i1 %lnot87, true, !dbg !9553
  %lnot.ext = zext i1 %lnot88 to i32, !dbg !9553
  %conv89 = sext i32 %lnot.ext to i64, !dbg !9553
  %tobool90 = icmp ne i64 %conv89, 0, !dbg !9553
  br i1 %tobool90, label %if.then91, label %if.end95, !dbg !9555

if.then91:                                        ; preds = %if.then81
  %66 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9556
  %td = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %66, i32 0, i32 1, !dbg !9558
  %67 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !9558
  %dmacount = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %67, i32 0, i32 0, !dbg !9559
  store i32 0, i32* %dmacount, align 16, !dbg !9560
  %68 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9561
  %69 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9562
  %70 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9563
  %dma92 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %70, i32 0, i32 3, !dbg !9564
  %71 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma92, align 8, !dbg !9564
  %dmacount93 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %71, i32 0, i32 3, !dbg !9565
  %72 = bitcast i32* %dmacount93 to i8*, !dbg !9566
  %call94 = call i32 @readl(i8* %72) #12, !dbg !9567
  call void @dma_done(%struct.net2280_ep* %68, %struct.net2280_request* %69, i32 %call94, i32 -104) #12, !dbg !9568
  br label %if.end95, !dbg !9569

if.end95:                                         ; preds = %if.then91, %if.then81
  br label %if.end96, !dbg !9570

if.else:                                          ; preds = %if.then78
  %73 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9571
  %74 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9573
  call void @done(%struct.net2280_ep* %73, %struct.net2280_request* %74, i32 -104) #12, !dbg !9574
  br label %if.end96

if.end96:                                         ; preds = %if.else, %if.end95
  store %struct.net2280_request* null, %struct.net2280_request** %req, align 8, !dbg !9575
  br label %if.end97, !dbg !9576

if.end97:                                         ; preds = %if.end96, %if.end72
  %75 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9577
  %tobool98 = icmp ne %struct.net2280_request* %75, null, !dbg !9577
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !9579

if.then99:                                        ; preds = %if.end97
  %76 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9580
  %77 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9581
  call void @done(%struct.net2280_ep* %76, %struct.net2280_request* %77, i32 -104) #12, !dbg !9582
  br label %if.end100, !dbg !9582

if.end100:                                        ; preds = %if.then99, %if.end97
  %78 = load i32, i32* %stopped, align 4, !dbg !9583
  %79 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9584
  %stopped101 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %79, i32 0, i32 10, !dbg !9585
  %bf.load102 = load i32, i32* %stopped101, align 8, !dbg !9586
  %bf.value103 = and i32 %78, 1, !dbg !9586
  %bf.shl104 = shl i32 %bf.value103, 22, !dbg !9586
  %bf.clear105 = and i32 %bf.load102, -4194305, !dbg !9586
  %bf.set106 = or i32 %bf.clear105, %bf.shl104, !dbg !9586
  store i32 %bf.set106, i32* %stopped101, align 8, !dbg !9586
  %80 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9587
  %dma107 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %80, i32 0, i32 3, !dbg !9589
  %81 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma107, align 8, !dbg !9589
  %tobool108 = icmp ne %struct.net2280_dma_regs* %81, null, !dbg !9587
  br i1 %tobool108, label %if.then109, label %if.end137, !dbg !9590

if.then109:                                       ; preds = %if.end100
  %82 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9591
  %queue110 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %82, i32 0, i32 8, !dbg !9594
  %call111 = call i32 @list_empty(%struct.list_head* %queue110) #12, !dbg !9595
  %tobool112 = icmp ne i32 %call111, 0, !dbg !9595
  br i1 %tobool112, label %if.then113, label %if.else115, !dbg !9596

if.then113:                                       ; preds = %if.then109
  %83 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9597
  %dma114 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %83, i32 0, i32 3, !dbg !9598
  %84 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma114, align 8, !dbg !9598
  call void @stop_dma(%struct.net2280_dma_regs* %84) #12, !dbg !9599
  br label %if.end136, !dbg !9599

if.else115:                                       ; preds = %if.then109
  %85 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9600
  %stopped116 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %85, i32 0, i32 10, !dbg !9602
  %bf.load117 = load i32, i32* %stopped116, align 8, !dbg !9602
  %bf.lshr118 = lshr i32 %bf.load117, 22, !dbg !9602
  %bf.clear119 = and i32 %bf.lshr118, 1, !dbg !9602
  %tobool120 = icmp ne i32 %bf.clear119, 0, !dbg !9600
  br i1 %tobool120, label %if.end135, label %if.then121, !dbg !9603

if.then121:                                       ; preds = %if.else115
  %86 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !9604
  %tobool122 = icmp ne %struct.net2280_request* %86, null, !dbg !9604
  br i1 %tobool122, label %if.then123, label %if.else126, !dbg !9607

if.then123:                                       ; preds = %if.then121
  %87 = load i32, i32* %dmactl, align 4, !dbg !9608
  %88 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9609
  %dma124 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %88, i32 0, i32 3, !dbg !9610
  %89 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma124, align 8, !dbg !9610
  %dmactl125 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %89, i32 0, i32 0, !dbg !9611
  %90 = bitcast i32* %dmactl125 to i8*, !dbg !9612
  call void @writel(i32 %87, i8* %90) #12, !dbg !9613
  br label %if.end134, !dbg !9613

if.else126:                                       ; preds = %if.then121
  %91 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9614
  call void @llvm.dbg.declare(metadata i8** %__mptr127, metadata !9615, metadata !DIExpression()), !dbg !9617
  %92 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9617
  %queue128 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %92, i32 0, i32 8, !dbg !9617
  %next129 = getelementptr inbounds %struct.list_head, %struct.list_head* %queue128, i32 0, i32 0, !dbg !9617
  %93 = load %struct.list_head*, %struct.list_head** %next129, align 8, !dbg !9617
  %94 = bitcast %struct.list_head* %93 to i8*, !dbg !9617
  store i8* %94, i8** %__mptr127, align 8, !dbg !9617
  br label %do.body130, !dbg !9617

do.body130:                                       ; preds = %if.else126
  br label %do.end131, !dbg !9618

do.end131:                                        ; preds = %do.body130
  %95 = load i8*, i8** %__mptr127, align 8, !dbg !9617
  %add.ptr133 = getelementptr i8, i8* %95, i64 -112, !dbg !9617
  %96 = bitcast i8* %add.ptr133 to %struct.net2280_request*, !dbg !9617
  store %struct.net2280_request* %96, %struct.net2280_request** %tmp132, align 8, !dbg !9618
  %97 = load %struct.net2280_request*, %struct.net2280_request** %tmp132, align 8, !dbg !9617
  call void @start_dma(%struct.net2280_ep* %91, %struct.net2280_request* %97) #12, !dbg !9620
  br label %if.end134

if.end134:                                        ; preds = %do.end131, %if.then123
  br label %if.end135, !dbg !9621

if.end135:                                        ; preds = %if.end134, %if.else115
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.then113
  br label %if.end137, !dbg !9622

if.end137:                                        ; preds = %if.end136, %if.end100
  %98 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9623
  %dev138 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %98, i32 0, i32 6, !dbg !9624
  %99 = load %struct.net2280*, %struct.net2280** %dev138, align 8, !dbg !9624
  %lock139 = getelementptr inbounds %struct.net2280, %struct.net2280* %99, i32 0, i32 1, !dbg !9625
  %100 = load i64, i64* %flags, align 8, !dbg !9626
  store %struct.spinlock* %lock139, %struct.spinlock** %lock.addr.i140, align 8
  store i64 %100, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !443, metadata !5796, metadata !DIExpression()) #10, !dbg !9627
  call void @llvm.dbg.declare(metadata !443, metadata !5800, metadata !DIExpression()) #10, !dbg !9627
  store i32 1, i32* %tmp.i, align 4, !dbg !9627
  %101 = load i32, i32* %tmp.i, align 4, !dbg !9627
  call void @llvm.dbg.declare(metadata !443, metadata !5801, metadata !DIExpression()) #10, !dbg !9628
  call void @llvm.dbg.declare(metadata !443, metadata !5807, metadata !DIExpression()) #10, !dbg !9628
  store i32 1, i32* %tmp8.i, align 4, !dbg !9628
  %102 = load i32, i32* %tmp8.i, align 4, !dbg !9628
  %103 = load i64, i64* %flags.addr.i, align 8, !dbg !9629
  call void @arch_local_irq_restore(i64 %103) #15, !dbg !9629
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9630, !srcloc !5811
  %104 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i140, align 8, !dbg !9631
  %105 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %104, i32 0, i32 0, !dbg !9631
  %rlock.i141 = bitcast %union.anon.4* %105 to %struct.raw_spinlock*, !dbg !9631
  store i32 0, i32* %retval, align 4, !dbg !9632
  br label %return, !dbg !9632

return:                                           ; preds = %if.end137, %if.then65, %if.then
  %106 = load i32, i32* %retval, align 4, !dbg !9633
  ret i32 %106, !dbg !9633
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_set_halt(%struct.usb_ep* %_ep, i32 %value) #2 !dbg !9634 {
entry:
  %_ep.addr = alloca %struct.usb_ep*, align 8
  %value.addr = alloca i32, align 4
  store %struct.usb_ep* %_ep, %struct.usb_ep** %_ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %_ep.addr, metadata !9635, metadata !DIExpression()), !dbg !9636
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9637, metadata !DIExpression()), !dbg !9638
  %0 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9639
  %1 = load i32, i32* %value.addr, align 4, !dbg !9640
  %call = call i32 @net2280_set_halt_and_wedge(%struct.usb_ep* %0, i32 %1, i32 0) #12, !dbg !9641
  ret i32 %call, !dbg !9642
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_set_wedge(%struct.usb_ep* %_ep) #2 !dbg !9643 {
entry:
  %retval = alloca i32, align 4
  %_ep.addr = alloca %struct.usb_ep*, align 8
  store %struct.usb_ep* %_ep, %struct.usb_ep** %_ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %_ep.addr, metadata !9644, metadata !DIExpression()), !dbg !9645
  %0 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9646
  %tobool = icmp ne %struct.usb_ep* %0, null, !dbg !9646
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9648

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9649
  %name = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %1, i32 0, i32 1, !dbg !9650
  %2 = load i8*, i8** %name, align 8, !dbg !9650
  %cmp = icmp eq i8* %2, getelementptr inbounds ([4 x i8], [4 x i8]* @ep0name, i64 0, i64 0), !dbg !9651
  br i1 %cmp, label %if.then, label %if.end, !dbg !9652

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9653
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.net2280_set_wedge, i64 0, i64 0), %struct.usb_ep* %3) #13, !dbg !9653
  store i32 -22, i32* %retval, align 4, !dbg !9655
  br label %return, !dbg !9655

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9656
  %call1 = call i32 @net2280_set_halt_and_wedge(%struct.usb_ep* %4, i32 1, i32 1) #12, !dbg !9657
  store i32 %call1, i32* %retval, align 4, !dbg !9658
  br label %return, !dbg !9658

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !9659
  ret i32 %5, !dbg !9659
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_fifo_status(%struct.usb_ep* %_ep) #2 !dbg !9660 {
entry:
  %retval = alloca i32, align 4
  %_ep.addr = alloca %struct.usb_ep*, align 8
  %ep = alloca %struct.net2280_ep*, align 8
  %avail = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280_ep*, align 8
  store %struct.usb_ep* %_ep, %struct.usb_ep** %_ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %_ep.addr, metadata !9661, metadata !DIExpression()), !dbg !9662
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !9663, metadata !DIExpression()), !dbg !9664
  call void @llvm.dbg.declare(metadata i32* %avail, metadata !9665, metadata !DIExpression()), !dbg !9666
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9667, metadata !DIExpression()), !dbg !9669
  %0 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9669
  %1 = bitcast %struct.usb_ep* %0 to i8*, !dbg !9669
  store i8* %1, i8** %__mptr, align 8, !dbg !9669
  br label %do.body, !dbg !9669

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9670

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9669
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !9669
  %3 = bitcast i8* %add.ptr to %struct.net2280_ep*, !dbg !9669
  store %struct.net2280_ep* %3, %struct.net2280_ep** %tmp, align 8, !dbg !9670
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %tmp, align 8, !dbg !9669
  store %struct.net2280_ep* %4, %struct.net2280_ep** %ep, align 8, !dbg !9672
  %5 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9673
  %tobool = icmp ne %struct.usb_ep* %5, null, !dbg !9673
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9675

lor.lhs.false:                                    ; preds = %do.end
  %6 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9676
  %desc = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %6, i32 0, i32 9, !dbg !9677
  %7 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc, align 8, !dbg !9677
  %tobool1 = icmp ne %struct.usb_endpoint_descriptor* %7, null, !dbg !9676
  br i1 %tobool1, label %if.end, label %land.lhs.true, !dbg !9678

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9679
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %8, i32 0, i32 10, !dbg !9680
  %bf.load = load i32, i32* %num, align 8, !dbg !9680
  %bf.clear = and i32 %bf.load, 255, !dbg !9680
  %cmp = icmp ne i32 %bf.clear, 0, !dbg !9681
  br i1 %cmp, label %if.then, label %if.end, !dbg !9682

if.then:                                          ; preds = %land.lhs.true, %do.end
  %9 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9683
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.net2280_fifo_status, i64 0, i64 0), %struct.usb_ep* %9) #13, !dbg !9683
  store i32 -19, i32* %retval, align 4, !dbg !9685
  br label %return, !dbg !9685

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %10 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9686
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %10, i32 0, i32 6, !dbg !9688
  %11 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9688
  %driver = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 3, !dbg !9689
  %12 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver, align 8, !dbg !9689
  %tobool2 = icmp ne %struct.usb_gadget_driver* %12, null, !dbg !9686
  br i1 %tobool2, label %lor.lhs.false3, label %if.then6, !dbg !9690

lor.lhs.false3:                                   ; preds = %if.end
  %13 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9691
  %dev4 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %13, i32 0, i32 6, !dbg !9692
  %14 = load %struct.net2280*, %struct.net2280** %dev4, align 8, !dbg !9692
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %14, i32 0, i32 0, !dbg !9693
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !9694
  %15 = load i32, i32* %speed, align 8, !dbg !9694
  %cmp5 = icmp eq i32 %15, 0, !dbg !9695
  br i1 %cmp5, label %if.then6, label %if.end14, !dbg !9696

if.then6:                                         ; preds = %lor.lhs.false3, %if.end
  %16 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9697
  %dev7 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %16, i32 0, i32 6, !dbg !9697
  %17 = load %struct.net2280*, %struct.net2280** %dev7, align 8, !dbg !9697
  %pdev = getelementptr inbounds %struct.net2280, %struct.net2280* %17, i32 0, i32 9, !dbg !9697
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9697
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !9697
  %19 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9697
  %dev9 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %19, i32 0, i32 6, !dbg !9697
  %20 = load %struct.net2280*, %struct.net2280** %dev9, align 8, !dbg !9697
  %driver10 = getelementptr inbounds %struct.net2280, %struct.net2280* %20, i32 0, i32 3, !dbg !9697
  %21 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver10, align 8, !dbg !9697
  %22 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9697
  %dev11 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %22, i32 0, i32 6, !dbg !9697
  %23 = load %struct.net2280*, %struct.net2280** %dev11, align 8, !dbg !9697
  %gadget12 = getelementptr inbounds %struct.net2280, %struct.net2280* %23, i32 0, i32 0, !dbg !9697
  %speed13 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget12, i32 0, i32 5, !dbg !9697
  %24 = load i32, i32* %speed13, align 8, !dbg !9697
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.net2280_fifo_status, i64 0, i64 0), %struct.usb_gadget_driver* %21, i32 %24) #13, !dbg !9697
  store i32 -108, i32* %retval, align 4, !dbg !9699
  br label %return, !dbg !9699

if.end14:                                         ; preds = %lor.lhs.false3
  %25 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9700
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %25, i32 0, i32 2, !dbg !9701
  %26 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !9701
  %ep_avail = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %26, i32 0, i32 4, !dbg !9702
  %27 = bitcast i32* %ep_avail to i8*, !dbg !9703
  %call15 = call i32 @readl(i8* %27) #12, !dbg !9704
  %conv = zext i32 %call15 to i64, !dbg !9704
  %and = and i64 %conv, 4095, !dbg !9705
  %conv16 = trunc i64 %and to i32, !dbg !9704
  store i32 %conv16, i32* %avail, align 4, !dbg !9706
  %28 = load i32, i32* %avail, align 4, !dbg !9707
  %29 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9709
  %fifo_size = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %29, i32 0, i32 10, !dbg !9710
  %bf.load17 = load i32, i32* %fifo_size, align 8, !dbg !9710
  %bf.lshr = lshr i32 %bf.load17, 8, !dbg !9710
  %bf.clear18 = and i32 %bf.lshr, 4095, !dbg !9710
  %cmp19 = icmp ugt i32 %28, %bf.clear18, !dbg !9711
  br i1 %cmp19, label %if.then21, label %if.end25, !dbg !9712

if.then21:                                        ; preds = %if.end14
  %30 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9713
  %dev22 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %30, i32 0, i32 6, !dbg !9713
  %31 = load %struct.net2280*, %struct.net2280** %dev22, align 8, !dbg !9713
  %pdev23 = getelementptr inbounds %struct.net2280, %struct.net2280* %31, i32 0, i32 9, !dbg !9713
  %32 = load %struct.pci_dev*, %struct.pci_dev** %pdev23, align 8, !dbg !9713
  %dev24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 41, !dbg !9713
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev24, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.net2280_fifo_status, i64 0, i64 0)) #13, !dbg !9713
  store i32 -75, i32* %retval, align 4, !dbg !9715
  br label %return, !dbg !9715

if.end25:                                         ; preds = %if.end14
  %33 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9716
  %is_in = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %33, i32 0, i32 10, !dbg !9718
  %bf.load26 = load i32, i32* %is_in, align 8, !dbg !9718
  %bf.lshr27 = lshr i32 %bf.load26, 24, !dbg !9718
  %bf.clear28 = and i32 %bf.lshr27, 1, !dbg !9718
  %tobool29 = icmp ne i32 %bf.clear28, 0, !dbg !9716
  br i1 %tobool29, label %if.then30, label %if.end35, !dbg !9719

if.then30:                                        ; preds = %if.end25
  %34 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9720
  %fifo_size31 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %34, i32 0, i32 10, !dbg !9721
  %bf.load32 = load i32, i32* %fifo_size31, align 8, !dbg !9721
  %bf.lshr33 = lshr i32 %bf.load32, 8, !dbg !9721
  %bf.clear34 = and i32 %bf.lshr33, 4095, !dbg !9721
  %35 = load i32, i32* %avail, align 4, !dbg !9722
  %sub = sub i32 %bf.clear34, %35, !dbg !9723
  store i32 %sub, i32* %avail, align 4, !dbg !9724
  br label %if.end35, !dbg !9725

if.end35:                                         ; preds = %if.then30, %if.end25
  %36 = load i32, i32* %avail, align 4, !dbg !9726
  store i32 %36, i32* %retval, align 4, !dbg !9727
  br label %return, !dbg !9727

return:                                           ; preds = %if.end35, %if.then21, %if.then6, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !9728
  ret i32 %37, !dbg !9728
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @net2280_fifo_flush(%struct.usb_ep* %_ep) #2 !dbg !9729 {
entry:
  %_ep.addr = alloca %struct.usb_ep*, align 8
  %ep = alloca %struct.net2280_ep*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280_ep*, align 8
  store %struct.usb_ep* %_ep, %struct.usb_ep** %_ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %_ep.addr, metadata !9730, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !9732, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9734, metadata !DIExpression()), !dbg !9736
  %0 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9736
  %1 = bitcast %struct.usb_ep* %0 to i8*, !dbg !9736
  store i8* %1, i8** %__mptr, align 8, !dbg !9736
  br label %do.body, !dbg !9736

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9737

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9736
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !9736
  %3 = bitcast i8* %add.ptr to %struct.net2280_ep*, !dbg !9736
  store %struct.net2280_ep* %3, %struct.net2280_ep** %tmp, align 8, !dbg !9737
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %tmp, align 8, !dbg !9736
  store %struct.net2280_ep* %4, %struct.net2280_ep** %ep, align 8, !dbg !9739
  %5 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9740
  %tobool = icmp ne %struct.usb_ep* %5, null, !dbg !9740
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9742

lor.lhs.false:                                    ; preds = %do.end
  %6 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9743
  %desc = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %6, i32 0, i32 9, !dbg !9744
  %7 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc, align 8, !dbg !9744
  %tobool1 = icmp ne %struct.usb_endpoint_descriptor* %7, null, !dbg !9743
  br i1 %tobool1, label %if.end, label %land.lhs.true, !dbg !9745

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9746
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %8, i32 0, i32 10, !dbg !9747
  %bf.load = load i32, i32* %num, align 8, !dbg !9747
  %bf.clear = and i32 %bf.load, 255, !dbg !9747
  %cmp = icmp ne i32 %bf.clear, 0, !dbg !9748
  br i1 %cmp, label %if.then, label %if.end, !dbg !9749

if.then:                                          ; preds = %land.lhs.true, %do.end
  %9 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !9750
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.net2280_fifo_flush, i64 0, i64 0), %struct.usb_ep* %9) #13, !dbg !9750
  br label %return, !dbg !9752

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %10 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9753
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %10, i32 0, i32 6, !dbg !9755
  %11 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9755
  %driver = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 3, !dbg !9756
  %12 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver, align 8, !dbg !9756
  %tobool2 = icmp ne %struct.usb_gadget_driver* %12, null, !dbg !9753
  br i1 %tobool2, label %lor.lhs.false3, label %if.then6, !dbg !9757

lor.lhs.false3:                                   ; preds = %if.end
  %13 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9758
  %dev4 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %13, i32 0, i32 6, !dbg !9759
  %14 = load %struct.net2280*, %struct.net2280** %dev4, align 8, !dbg !9759
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %14, i32 0, i32 0, !dbg !9760
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !9761
  %15 = load i32, i32* %speed, align 8, !dbg !9761
  %cmp5 = icmp eq i32 %15, 0, !dbg !9762
  br i1 %cmp5, label %if.then6, label %if.end14, !dbg !9763

if.then6:                                         ; preds = %lor.lhs.false3, %if.end
  %16 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9764
  %dev7 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %16, i32 0, i32 6, !dbg !9764
  %17 = load %struct.net2280*, %struct.net2280** %dev7, align 8, !dbg !9764
  %pdev = getelementptr inbounds %struct.net2280, %struct.net2280* %17, i32 0, i32 9, !dbg !9764
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9764
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !9764
  %19 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9764
  %dev9 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %19, i32 0, i32 6, !dbg !9764
  %20 = load %struct.net2280*, %struct.net2280** %dev9, align 8, !dbg !9764
  %driver10 = getelementptr inbounds %struct.net2280, %struct.net2280* %20, i32 0, i32 3, !dbg !9764
  %21 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver10, align 8, !dbg !9764
  %22 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9764
  %dev11 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %22, i32 0, i32 6, !dbg !9764
  %23 = load %struct.net2280*, %struct.net2280** %dev11, align 8, !dbg !9764
  %gadget12 = getelementptr inbounds %struct.net2280, %struct.net2280* %23, i32 0, i32 0, !dbg !9764
  %speed13 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget12, i32 0, i32 5, !dbg !9764
  %24 = load i32, i32* %speed13, align 8, !dbg !9764
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.net2280_fifo_flush, i64 0, i64 0), %struct.usb_gadget_driver* %21, i32 %24) #13, !dbg !9764
  br label %return, !dbg !9766

if.end14:                                         ; preds = %lor.lhs.false3
  %25 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9767
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %25, i32 0, i32 2, !dbg !9768
  %26 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !9768
  %ep_stat = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %26, i32 0, i32 3, !dbg !9769
  %27 = bitcast i32* %ep_stat to i8*, !dbg !9770
  call void @writel(i32 512, i8* %27) #12, !dbg !9771
  %28 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !9772
  %regs15 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %28, i32 0, i32 2, !dbg !9773
  %29 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs15, align 8, !dbg !9773
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %29, i32 0, i32 1, !dbg !9774
  %30 = bitcast i32* %ep_rsp to i8*, !dbg !9775
  %call16 = call i32 @readl(i8* %30) #12, !dbg !9776
  br label %return, !dbg !9777

return:                                           ; preds = %if.end14, %if.then6, %if.then
  ret void, !dbg !9777
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %epd) #2 !dbg !9778 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !9779, metadata !DIExpression()), !dbg !9780
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !9781
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 4, !dbg !9781
  %1 = load i16, i16* %wMaxPacketSize, align 1, !dbg !9781
  %conv = zext i16 %1 to i32, !dbg !9781
  %and = and i32 %conv, 2047, !dbg !9782
  ret i32 %and, !dbg !9783
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_max_speed(%struct.net2280_ep* %ep, i32 %max) #2 !dbg !4619 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %max.addr = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !9784, metadata !DIExpression()), !dbg !9785
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !9786, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !9788, metadata !DIExpression()), !dbg !9789
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9790
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 6, !dbg !9792
  %1 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9792
  %enhanced_mode = getelementptr inbounds %struct.net2280, %struct.net2280* %1, i32 0, i32 6, !dbg !9793
  %2 = load i32, i32* %enhanced_mode, align 4, !dbg !9793
  %tobool = icmp ne i32 %2, 0, !dbg !9790
  br i1 %tobool, label %if.then, label %if.else, !dbg !9794

if.then:                                          ; preds = %entry
  %3 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9795
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %3, i32 0, i32 10, !dbg !9797
  %bf.load = load i32, i32* %num, align 8, !dbg !9797
  %bf.clear = and i32 %bf.load, 255, !dbg !9797
  %idxprom = zext i32 %bf.clear to i64, !dbg !9798
  %arrayidx = getelementptr [9 x i32], [9 x i32]* @set_max_speed.ep_enhanced, i64 0, i64 %idxprom, !dbg !9798
  %4 = load i32, i32* %arrayidx, align 4, !dbg !9798
  store i32 %4, i32* %reg, align 4, !dbg !9799
  %5 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9800
  %dev1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %5, i32 0, i32 6, !dbg !9801
  %6 = load %struct.net2280*, %struct.net2280** %dev1, align 8, !dbg !9801
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %6, i32 0, i32 0, !dbg !9802
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !9803
  %7 = load i32, i32* %speed, align 8, !dbg !9803
  switch i32 %7, label %sw.default [
    i32 5, label %sw.bb
    i32 2, label %sw.bb2
    i32 3, label %sw.bb4
  ], !dbg !9804

sw.bb:                                            ; preds = %if.then
  %8 = load i32, i32* %reg, align 4, !dbg !9805
  %add = add i32 %8, 2, !dbg !9805
  store i32 %add, i32* %reg, align 4, !dbg !9805
  br label %sw.epilog, !dbg !9807

sw.bb2:                                           ; preds = %if.then
  %9 = load i32, i32* %reg, align 4, !dbg !9808
  %add3 = add i32 %9, 1, !dbg !9808
  store i32 %add3, i32* %reg, align 4, !dbg !9808
  br label %sw.epilog, !dbg !9809

sw.bb4:                                           ; preds = %if.then
  br label %sw.default, !dbg !9809

sw.default:                                       ; preds = %if.then, %sw.bb4
  br label %sw.epilog, !dbg !9810

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb
  br label %if.end14, !dbg !9811

if.else:                                          ; preds = %entry
  %10 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9812
  %num5 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %10, i32 0, i32 10, !dbg !9814
  %bf.load6 = load i32, i32* %num5, align 8, !dbg !9814
  %bf.clear7 = and i32 %bf.load6, 255, !dbg !9814
  %add8 = add i32 %bf.clear7, 1, !dbg !9815
  %mul = mul i32 %add8, 16, !dbg !9816
  store i32 %mul, i32* %reg, align 4, !dbg !9817
  %11 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9818
  %dev9 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %11, i32 0, i32 6, !dbg !9820
  %12 = load %struct.net2280*, %struct.net2280** %dev9, align 8, !dbg !9820
  %gadget10 = getelementptr inbounds %struct.net2280, %struct.net2280* %12, i32 0, i32 0, !dbg !9821
  %speed11 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget10, i32 0, i32 5, !dbg !9822
  %13 = load i32, i32* %speed11, align 8, !dbg !9822
  %cmp = icmp ne i32 %13, 3, !dbg !9823
  br i1 %cmp, label %if.then12, label %if.end, !dbg !9824

if.then12:                                        ; preds = %if.else
  %14 = load i32, i32* %reg, align 4, !dbg !9825
  %add13 = add i32 %14, 1, !dbg !9825
  store i32 %add13, i32* %reg, align 4, !dbg !9825
  br label %if.end, !dbg !9826

if.end:                                           ; preds = %if.then12, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end, %sw.epilog
  %15 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9827
  %dev15 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %15, i32 0, i32 6, !dbg !9828
  %16 = load %struct.net2280*, %struct.net2280** %dev15, align 8, !dbg !9828
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %16, i32 0, i32 10, !dbg !9829
  %17 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !9829
  %18 = load i32, i32* %reg, align 4, !dbg !9830
  %19 = load i32, i32* %max.addr, align 4, !dbg !9831
  call void @set_idx_reg(%struct.net2280_regs* %17, i32 %18, i32 %19) #12, !dbg !9832
  ret void, !dbg !9833
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ep_clear_seqnum(%struct.net2280_ep* %ep) #2 !dbg !4624 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %dev = alloca %struct.net2280*, align 8
  %val = alloca i32, align 4
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !9834, metadata !DIExpression()), !dbg !9835
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev, metadata !9836, metadata !DIExpression()), !dbg !9837
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9838
  %dev1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 6, !dbg !9839
  %1 = load %struct.net2280*, %struct.net2280** %dev1, align 8, !dbg !9839
  store %struct.net2280* %1, %struct.net2280** %dev, align 8, !dbg !9837
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9840, metadata !DIExpression()), !dbg !9841
  %2 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9842
  %plregs = getelementptr inbounds %struct.net2280, %struct.net2280* %2, i32 0, i32 18, !dbg !9843
  %3 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs, align 8, !dbg !9843
  %pl_ep_ctrl = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %3, i32 0, i32 4, !dbg !9844
  %4 = bitcast i32* %pl_ep_ctrl to i8*, !dbg !9845
  %call = call i32 @readl(i8* %4) #12, !dbg !9846
  %and = and i32 %call, -32, !dbg !9847
  store i32 %and, i32* %val, align 4, !dbg !9848
  %5 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9849
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %5, i32 0, i32 10, !dbg !9850
  %bf.load = load i32, i32* %num, align 8, !dbg !9850
  %bf.clear = and i32 %bf.load, 255, !dbg !9850
  %idxprom = zext i32 %bf.clear to i64, !dbg !9851
  %arrayidx = getelementptr [9 x i32], [9 x i32]* @ep_clear_seqnum.ep_pl, i64 0, i64 %idxprom, !dbg !9851
  %6 = load i32, i32* %arrayidx, align 4, !dbg !9851
  %7 = load i32, i32* %val, align 4, !dbg !9852
  %or = or i32 %7, %6, !dbg !9852
  store i32 %or, i32* %val, align 4, !dbg !9852
  %8 = load i32, i32* %val, align 4, !dbg !9853
  %9 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9854
  %plregs2 = getelementptr inbounds %struct.net2280, %struct.net2280* %9, i32 0, i32 18, !dbg !9855
  %10 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs2, align 8, !dbg !9855
  %pl_ep_ctrl3 = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %10, i32 0, i32 4, !dbg !9856
  %11 = bitcast i32* %pl_ep_ctrl3 to i8*, !dbg !9857
  call void @writel(i32 %8, i8* %11) #12, !dbg !9858
  %12 = load i32, i32* %val, align 4, !dbg !9859
  %conv = zext i32 %12 to i64, !dbg !9859
  %or4 = or i64 %conv, 131072, !dbg !9859
  %conv5 = trunc i64 %or4 to i32, !dbg !9859
  store i32 %conv5, i32* %val, align 4, !dbg !9859
  %13 = load i32, i32* %val, align 4, !dbg !9860
  %14 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9861
  %plregs6 = getelementptr inbounds %struct.net2280, %struct.net2280* %14, i32 0, i32 18, !dbg !9862
  %15 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs6, align 8, !dbg !9862
  %pl_ep_ctrl7 = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %15, i32 0, i32 4, !dbg !9863
  %16 = bitcast i32* %pl_ep_ctrl7 to i8*, !dbg !9864
  call void @writel(i32 %13, i8* %16) #12, !dbg !9865
  ret void, !dbg !9866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @enable_pciirqenb(%struct.net2280_ep* %ep) #2 !dbg !9867 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %tmp = alloca i32, align 4
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !9868, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !9870, metadata !DIExpression()), !dbg !9871
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9872
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 6, !dbg !9873
  %1 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9873
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %1, i32 0, i32 10, !dbg !9874
  %2 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !9874
  %pciirqenb0 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %2, i32 0, i32 4, !dbg !9875
  %3 = bitcast i32* %pciirqenb0 to i8*, !dbg !9876
  %call = call i32 @readl(i8* %3) #12, !dbg !9877
  store i32 %call, i32* %tmp, align 4, !dbg !9871
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9878
  %dev1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %4, i32 0, i32 6, !dbg !9880
  %5 = load %struct.net2280*, %struct.net2280** %dev1, align 8, !dbg !9880
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %5, i32 0, i32 8, !dbg !9881
  %6 = load i64, i64* %quirks, align 8, !dbg !9881
  %and = and i64 %6, 1, !dbg !9882
  %tobool = icmp ne i64 %and, 0, !dbg !9882
  br i1 %tobool, label %if.then, label %if.else, !dbg !9883

if.then:                                          ; preds = %entry
  %7 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9884
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %7, i32 0, i32 10, !dbg !9884
  %bf.load = load i32, i32* %num, align 8, !dbg !9884
  %bf.clear = and i32 %bf.load, 255, !dbg !9884
  %sh_prom = zext i32 %bf.clear to i64, !dbg !9884
  %shl = shl i64 1, %sh_prom, !dbg !9884
  %8 = load i32, i32* %tmp, align 4, !dbg !9885
  %conv = zext i32 %8 to i64, !dbg !9885
  %or = or i64 %conv, %shl, !dbg !9885
  %conv2 = trunc i64 %or to i32, !dbg !9885
  store i32 %conv2, i32* %tmp, align 4, !dbg !9885
  br label %if.end, !dbg !9886

if.else:                                          ; preds = %entry
  %9 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9887
  %num3 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %9, i32 0, i32 10, !dbg !9887
  %bf.load4 = load i32, i32* %num3, align 8, !dbg !9887
  %bf.clear5 = and i32 %bf.load4, 255, !dbg !9887
  %idxprom = zext i32 %bf.clear5 to i64, !dbg !9887
  %arrayidx = getelementptr [9 x i32], [9 x i32]* @ep_bit, i64 0, i64 %idxprom, !dbg !9887
  %10 = load i32, i32* %arrayidx, align 4, !dbg !9887
  %sh_prom6 = zext i32 %10 to i64, !dbg !9887
  %shl7 = shl i64 1, %sh_prom6, !dbg !9887
  %11 = load i32, i32* %tmp, align 4, !dbg !9888
  %conv8 = zext i32 %11 to i64, !dbg !9888
  %or9 = or i64 %conv8, %shl7, !dbg !9888
  %conv10 = trunc i64 %or9 to i32, !dbg !9888
  store i32 %conv10, i32* %tmp, align 4, !dbg !9888
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load i32, i32* %tmp, align 4, !dbg !9889
  %13 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9890
  %dev11 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %13, i32 0, i32 6, !dbg !9891
  %14 = load %struct.net2280*, %struct.net2280** %dev11, align 8, !dbg !9891
  %regs12 = getelementptr inbounds %struct.net2280, %struct.net2280* %14, i32 0, i32 10, !dbg !9892
  %15 = load %struct.net2280_regs*, %struct.net2280_regs** %regs12, align 8, !dbg !9892
  %pciirqenb013 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %15, i32 0, i32 4, !dbg !9893
  %16 = bitcast i32* %pciirqenb013 to i8*, !dbg !9894
  call void @writel(i32 %12, i8* %16) #12, !dbg !9895
  ret void, !dbg !9896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ep_reset_338x(%struct.net2280_regs* %regs, %struct.net2280_ep* %ep) #2 !dbg !9897 {
entry:
  %regs.addr = alloca %struct.net2280_regs*, align 8
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %tmp = alloca i32, align 4
  %dmastat = alloca i32, align 4
  store %struct.net2280_regs* %regs, %struct.net2280_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_regs** %regs.addr, metadata !9898, metadata !DIExpression()), !dbg !9899
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !9900, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !9902, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.declare(metadata i32* %dmastat, metadata !9904, metadata !DIExpression()), !dbg !9905
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9906
  %desc = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 9, !dbg !9907
  store %struct.usb_endpoint_descriptor* null, %struct.usb_endpoint_descriptor** %desc, align 8, !dbg !9908
  %1 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9909
  %queue = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %1, i32 0, i32 8, !dbg !9910
  call void @INIT_LIST_HEAD(%struct.list_head* %queue) #12, !dbg !9911
  %2 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9912
  %ep1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %2, i32 0, i32 0, !dbg !9913
  call void @usb_ep_set_maxpacket_limit(%struct.usb_ep* %ep1, i32 -1) #12, !dbg !9914
  %3 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9915
  %ep2 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %3, i32 0, i32 0, !dbg !9916
  %ops = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep2, i32 0, i32 2, !dbg !9917
  store %struct.usb_ep_ops* @net2280_ep_ops, %struct.usb_ep_ops** %ops, align 8, !dbg !9918
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9919
  %dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %4, i32 0, i32 3, !dbg !9921
  %5 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !9921
  %tobool = icmp ne %struct.net2280_dma_regs* %5, null, !dbg !9919
  br i1 %tobool, label %if.then, label %if.else, !dbg !9922

if.then:                                          ; preds = %entry
  %6 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9923
  %dma3 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %6, i32 0, i32 3, !dbg !9925
  %7 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma3, align 8, !dbg !9925
  %dmactl = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %7, i32 0, i32 0, !dbg !9926
  %8 = bitcast i32* %dmactl to i8*, !dbg !9927
  call void @writel(i32 0, i8* %8) #12, !dbg !9928
  %9 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9929
  %dma4 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %9, i32 0, i32 3, !dbg !9930
  %10 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma4, align 8, !dbg !9930
  %dmastat5 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %10, i32 0, i32 1, !dbg !9931
  %11 = bitcast i32* %dmastat5 to i8*, !dbg !9932
  call void @writel(i32 251658240, i8* %11) #12, !dbg !9933
  %12 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9934
  %dma6 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %12, i32 0, i32 3, !dbg !9935
  %13 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma6, align 8, !dbg !9935
  %dmastat7 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %13, i32 0, i32 1, !dbg !9936
  %14 = bitcast i32* %dmastat7 to i8*, !dbg !9937
  %call = call i32 @readl(i8* %14) #12, !dbg !9938
  store i32 %call, i32* %dmastat, align 4, !dbg !9939
  %15 = load i32, i32* %dmastat, align 4, !dbg !9940
  %cmp = icmp eq i32 %15, 20482, !dbg !9942
  br i1 %cmp, label %if.then8, label %if.end, !dbg !9943

if.then8:                                         ; preds = %if.then
  %16 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9944
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %16, i32 0, i32 6, !dbg !9944
  %17 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !9944
  %pdev = getelementptr inbounds %struct.net2280, %struct.net2280* %17, i32 0, i32 9, !dbg !9944
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9944
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !9944
  %19 = load i32, i32* %dmastat, align 4, !dbg !9944
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev9, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0), i32 %19) #13, !dbg !9944
  %20 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9946
  %dma10 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %20, i32 0, i32 3, !dbg !9947
  %21 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma10, align 8, !dbg !9947
  %dmastat11 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %21, i32 0, i32 1, !dbg !9948
  %22 = bitcast i32* %dmastat11 to i8*, !dbg !9949
  call void @writel(i32 90, i8* %22) #12, !dbg !9950
  br label %if.end, !dbg !9951

if.end:                                           ; preds = %if.then8, %if.then
  %23 = load %struct.net2280_regs*, %struct.net2280_regs** %regs.addr, align 8, !dbg !9952
  %pciirqenb0 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %23, i32 0, i32 4, !dbg !9953
  %24 = bitcast i32* %pciirqenb0 to i8*, !dbg !9954
  %call12 = call i32 @readl(i8* %24) #12, !dbg !9955
  store i32 %call12, i32* %tmp, align 4, !dbg !9956
  %25 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9957
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %25, i32 0, i32 10, !dbg !9957
  %bf.load = load i32, i32* %num, align 8, !dbg !9957
  %bf.clear = and i32 %bf.load, 255, !dbg !9957
  %idxprom = zext i32 %bf.clear to i64, !dbg !9957
  %arrayidx = getelementptr [9 x i32], [9 x i32]* @ep_bit, i64 0, i64 %idxprom, !dbg !9957
  %26 = load i32, i32* %arrayidx, align 4, !dbg !9957
  %sh_prom = zext i32 %26 to i64, !dbg !9957
  %shl = shl i64 1, %sh_prom, !dbg !9957
  %neg = xor i64 %shl, -1, !dbg !9958
  %27 = load i32, i32* %tmp, align 4, !dbg !9959
  %conv = zext i32 %27 to i64, !dbg !9959
  %and = and i64 %conv, %neg, !dbg !9959
  %conv13 = trunc i64 %and to i32, !dbg !9959
  store i32 %conv13, i32* %tmp, align 4, !dbg !9959
  %28 = load i32, i32* %tmp, align 4, !dbg !9960
  %29 = load %struct.net2280_regs*, %struct.net2280_regs** %regs.addr, align 8, !dbg !9961
  %pciirqenb014 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %29, i32 0, i32 4, !dbg !9962
  %30 = bitcast i32* %pciirqenb014 to i8*, !dbg !9963
  call void @writel(i32 %28, i8* %30) #12, !dbg !9964
  br label %if.end33, !dbg !9965

if.else:                                          ; preds = %entry
  %31 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9966
  %num15 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %31, i32 0, i32 10, !dbg !9969
  %bf.load16 = load i32, i32* %num15, align 8, !dbg !9969
  %bf.clear17 = and i32 %bf.load16, 255, !dbg !9969
  %cmp18 = icmp slt i32 %bf.clear17, 5, !dbg !9970
  br i1 %cmp18, label %if.then20, label %if.end32, !dbg !9971

if.then20:                                        ; preds = %if.else
  %32 = load %struct.net2280_regs*, %struct.net2280_regs** %regs.addr, align 8, !dbg !9972
  %pciirqenb1 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %32, i32 0, i32 5, !dbg !9974
  %33 = bitcast i32* %pciirqenb1 to i8*, !dbg !9975
  %call21 = call i32 @readl(i8* %33) #12, !dbg !9976
  store i32 %call21, i32* %tmp, align 4, !dbg !9977
  %34 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9978
  %num22 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %34, i32 0, i32 10, !dbg !9978
  %bf.load23 = load i32, i32* %num22, align 8, !dbg !9978
  %bf.clear24 = and i32 %bf.load23, 255, !dbg !9978
  %add = add i32 8, %bf.clear24, !dbg !9978
  %sh_prom25 = zext i32 %add to i64, !dbg !9978
  %shl26 = shl i64 1, %sh_prom25, !dbg !9978
  %neg27 = xor i64 %shl26, -1, !dbg !9979
  %35 = load i32, i32* %tmp, align 4, !dbg !9980
  %conv28 = zext i32 %35 to i64, !dbg !9980
  %and29 = and i64 %conv28, %neg27, !dbg !9980
  %conv30 = trunc i64 %and29 to i32, !dbg !9980
  store i32 %conv30, i32* %tmp, align 4, !dbg !9980
  %36 = load i32, i32* %tmp, align 4, !dbg !9981
  %37 = load %struct.net2280_regs*, %struct.net2280_regs** %regs.addr, align 8, !dbg !9982
  %pciirqenb131 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %37, i32 0, i32 5, !dbg !9983
  %38 = bitcast i32* %pciirqenb131 to i8*, !dbg !9984
  call void @writel(i32 %36, i8* %38) #12, !dbg !9985
  br label %if.end32, !dbg !9986

if.end32:                                         ; preds = %if.then20, %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end
  %39 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9987
  %regs34 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %39, i32 0, i32 2, !dbg !9988
  %40 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs34, align 8, !dbg !9988
  %ep_irqenb = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %40, i32 0, i32 2, !dbg !9989
  %41 = bitcast i32* %ep_irqenb to i8*, !dbg !9990
  call void @writel(i32 0, i8* %41) #12, !dbg !9991
  %42 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9992
  %regs35 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %42, i32 0, i32 2, !dbg !9993
  %43 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs35, align 8, !dbg !9993
  %ep_stat = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %43, i32 0, i32 3, !dbg !9994
  %44 = bitcast i32* %ep_stat to i8*, !dbg !9995
  call void @writel(i32 8303, i8* %44) #12, !dbg !9996
  %45 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !9997
  %cfg = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %45, i32 0, i32 1, !dbg !9998
  %46 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %cfg, align 8, !dbg !9998
  %ep_cfg = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %46, i32 0, i32 0, !dbg !9999
  %47 = bitcast i32* %ep_cfg to i8*, !dbg !10000
  %call36 = call i32 @readl(i8* %47) #12, !dbg !10001
  store i32 %call36, i32* %tmp, align 4, !dbg !10002
  %48 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10003
  %is_in = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %48, i32 0, i32 10, !dbg !10005
  %bf.load37 = load i32, i32* %is_in, align 8, !dbg !10005
  %bf.lshr = lshr i32 %bf.load37, 24, !dbg !10005
  %bf.clear38 = and i32 %bf.lshr, 1, !dbg !10005
  %tobool39 = icmp ne i32 %bf.clear38, 0, !dbg !10003
  br i1 %tobool39, label %if.then40, label %if.else44, !dbg !10006

if.then40:                                        ; preds = %if.end33
  %49 = load i32, i32* %tmp, align 4, !dbg !10007
  %conv41 = zext i32 %49 to i64, !dbg !10007
  %and42 = and i64 %conv41, -28673, !dbg !10007
  %conv43 = trunc i64 %and42 to i32, !dbg !10007
  store i32 %conv43, i32* %tmp, align 4, !dbg !10007
  br label %if.end48, !dbg !10008

if.else44:                                        ; preds = %if.end33
  %50 = load i32, i32* %tmp, align 4, !dbg !10009
  %conv45 = zext i32 %50 to i64, !dbg !10009
  %and46 = and i64 %conv45, -1793, !dbg !10009
  %conv47 = trunc i64 %and46 to i32, !dbg !10009
  store i32 %conv47, i32* %tmp, align 4, !dbg !10009
  br label %if.end48

if.end48:                                         ; preds = %if.else44, %if.then40
  %51 = load i32, i32* %tmp, align 4, !dbg !10010
  %52 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10011
  %cfg49 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %52, i32 0, i32 1, !dbg !10012
  %53 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %cfg49, align 8, !dbg !10012
  %ep_cfg50 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %53, i32 0, i32 0, !dbg !10013
  %54 = bitcast i32* %ep_cfg50 to i8*, !dbg !10014
  call void @writel(i32 %51, i8* %54) #12, !dbg !10015
  ret void, !dbg !10016
}

; Function Attrs: noredzone
declare dso_local void @dma_pool_free(%struct.dma_pool*, i8*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @usb_gadget_map_request(%struct.usb_gadget*, %struct.usb_request*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @start_dma(%struct.net2280_ep* %ep, %struct.net2280_request* %req) #2 !dbg !10017 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %req.addr = alloca %struct.net2280_request*, align 8
  %tmp = alloca i32, align 4
  %dma = alloca %struct.net2280_dma_regs*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp16 = alloca i64, align 8
  %__UNIQUE_ID___x244 = alloca i32, align 4
  %__UNIQUE_ID___y245 = alloca i32, align 4
  %tmp43 = alloca i32, align 4
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !10020, metadata !DIExpression()), !dbg !10021
  store %struct.net2280_request* %req, %struct.net2280_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %req.addr, metadata !10022, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10024, metadata !DIExpression()), !dbg !10025
  call void @llvm.dbg.declare(metadata %struct.net2280_dma_regs** %dma, metadata !10026, metadata !DIExpression()), !dbg !10027
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10028
  %dma1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 3, !dbg !10029
  %1 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma1, align 8, !dbg !10029
  store %struct.net2280_dma_regs* %1, %struct.net2280_dma_regs** %dma, align 8, !dbg !10027
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10030, metadata !DIExpression()), !dbg !10032
  %2 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !10032
  %dmactl = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %2, i32 0, i32 0, !dbg !10032
  %3 = bitcast i32* %dmactl to i8*, !dbg !10032
  %call = call i32 @readl(i8* %3) #12, !dbg !10032
  %conv = zext i32 %call to i64, !dbg !10032
  %and = and i64 %conv, 2, !dbg !10032
  %tobool = icmp ne i64 %and, 0, !dbg !10032
  %lnot = xor i1 %tobool, true, !dbg !10032
  %lnot2 = xor i1 %lnot, true, !dbg !10032
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !10032
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10032
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !10033
  %tobool3 = icmp ne i32 %4, 0, !dbg !10033
  %lnot4 = xor i1 %tobool3, true, !dbg !10033
  %lnot6 = xor i1 %lnot4, true, !dbg !10033
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !10033
  %conv8 = sext i32 %lnot.ext7 to i64, !dbg !10033
  %tobool9 = icmp ne i64 %conv8, 0, !dbg !10033
  br i1 %tobool9, label %if.then, label %if.end, !dbg !10032

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10033

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !10035

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !10037

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !10035

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i32 877, i32 2305, i64 12) #10, !dbg !10039, !srcloc !10041
  br label %do.end12, !dbg !10039

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 243) #10, !dbg !10042, !srcloc !10044
  br label %do.body13, !dbg !10035

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !10045

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !10035

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !10035

if.end:                                           ; preds = %do.end15, %entry
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !10032
  %tobool17 = icmp ne i32 %5, 0, !dbg !10032
  %lnot18 = xor i1 %tobool17, true, !dbg !10032
  %lnot20 = xor i1 %lnot18, true, !dbg !10032
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !10032
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !10032
  store i64 %conv22, i64* %tmp16, align 8, !dbg !10033
  %6 = load i64, i64* %tmp16, align 8, !dbg !10032
  %7 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10047
  %dma23 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %7, i32 0, i32 3, !dbg !10048
  %8 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma23, align 8, !dbg !10048
  %dmactl24 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %8, i32 0, i32 0, !dbg !10049
  %9 = bitcast i32* %dmactl24 to i8*, !dbg !10050
  call void @writel(i32 0, i8* %9) #12, !dbg !10051
  %10 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10052
  %is_in = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %10, i32 0, i32 10, !dbg !10054
  %bf.load = load i32, i32* %is_in, align 8, !dbg !10054
  %bf.lshr = lshr i32 %bf.load, 24, !dbg !10054
  %bf.clear = and i32 %bf.lshr, 1, !dbg !10054
  %tobool25 = icmp ne i32 %bf.clear, 0, !dbg !10052
  br i1 %tobool25, label %if.end56, label %land.lhs.true, !dbg !10055

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10056
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %11, i32 0, i32 2, !dbg !10057
  %12 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !10057
  %ep_stat = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %12, i32 0, i32 3, !dbg !10058
  %13 = bitcast i32* %ep_stat to i8*, !dbg !10059
  %call26 = call i32 @readl(i8* %13) #12, !dbg !10060
  %conv27 = zext i32 %call26 to i64, !dbg !10060
  %and28 = and i64 %conv27, 16, !dbg !10061
  %tobool29 = icmp ne i64 %and28, 0, !dbg !10061
  br i1 %tobool29, label %if.then30, label %if.end56, !dbg !10062

if.then30:                                        ; preds = %land.lhs.true
  %14 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10063
  %regs31 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %14, i32 0, i32 2, !dbg !10065
  %15 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs31, align 8, !dbg !10065
  %ep_stat32 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %15, i32 0, i32 3, !dbg !10066
  %16 = bitcast i32* %ep_stat32 to i8*, !dbg !10067
  call void @writel(i32 32, i8* %16) #12, !dbg !10068
  %17 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10069
  %regs33 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %17, i32 0, i32 2, !dbg !10070
  %18 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs33, align 8, !dbg !10070
  %ep_avail = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %18, i32 0, i32 4, !dbg !10071
  %19 = bitcast i32* %ep_avail to i8*, !dbg !10072
  %call34 = call i32 @readl(i8* %19) #12, !dbg !10073
  store i32 %call34, i32* %tmp, align 4, !dbg !10074
  %20 = load i32, i32* %tmp, align 4, !dbg !10075
  %tobool35 = icmp ne i32 %20, 0, !dbg !10075
  br i1 %tobool35, label %if.then36, label %if.end55, !dbg !10077

if.then36:                                        ; preds = %if.then30
  %21 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !10078
  %dmastat = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %21, i32 0, i32 1, !dbg !10080
  %22 = bitcast i32* %dmastat to i8*, !dbg !10081
  %call37 = call i32 @readl(i8* %22) #12, !dbg !10082
  %23 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !10083
  %dmastat38 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %23, i32 0, i32 1, !dbg !10084
  %24 = bitcast i32* %dmastat38 to i8*, !dbg !10085
  call void @writel(i32 %call37, i8* %24) #12, !dbg !10086
  %25 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10087
  %req39 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %25, i32 0, i32 0, !dbg !10088
  %dma40 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req39, i32 0, i32 2, !dbg !10089
  %26 = load i64, i64* %dma40, align 8, !dbg !10089
  %conv41 = trunc i64 %26 to i32, !dbg !10087
  %27 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !10090
  %dmaaddr = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %27, i32 0, i32 4, !dbg !10091
  %28 = bitcast i32* %dmaaddr to i8*, !dbg !10092
  call void @writel(i32 %conv41, i8* %28) #12, !dbg !10093
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x244, metadata !10094, metadata !DIExpression()), !dbg !10096
  %29 = load i32, i32* %tmp, align 4, !dbg !10096
  store i32 %29, i32* %__UNIQUE_ID___x244, align 4, !dbg !10096
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y245, metadata !10097, metadata !DIExpression()), !dbg !10096
  %30 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10096
  %req42 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %30, i32 0, i32 0, !dbg !10096
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req42, i32 0, i32 1, !dbg !10096
  %31 = load i32, i32* %length, align 8, !dbg !10096
  store i32 %31, i32* %__UNIQUE_ID___y245, align 4, !dbg !10096
  %32 = load i32, i32* %__UNIQUE_ID___x244, align 4, !dbg !10096
  %33 = load i32, i32* %__UNIQUE_ID___y245, align 4, !dbg !10096
  %cmp = icmp ult i32 %32, %33, !dbg !10096
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10096

cond.true:                                        ; preds = %if.then36
  %34 = load i32, i32* %__UNIQUE_ID___x244, align 4, !dbg !10096
  br label %cond.end, !dbg !10096

cond.false:                                       ; preds = %if.then36
  %35 = load i32, i32* %__UNIQUE_ID___y245, align 4, !dbg !10096
  br label %cond.end, !dbg !10096

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ %35, %cond.false ], !dbg !10096
  store i32 %cond, i32* %tmp43, align 4, !dbg !10096
  %36 = load i32, i32* %tmp43, align 4, !dbg !10096
  store i32 %36, i32* %tmp, align 4, !dbg !10098
  %37 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10099
  %req45 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %37, i32 0, i32 0, !dbg !10099
  %length46 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req45, i32 0, i32 1, !dbg !10099
  %38 = load i32, i32* %length46, align 8, !dbg !10099
  %39 = load i32, i32* %tmp, align 4, !dbg !10099
  %sub = sub i32 %38, %39, !dbg !10099
  %40 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10100
  %td = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %40, i32 0, i32 1, !dbg !10101
  %41 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !10101
  %dmacount = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %41, i32 0, i32 0, !dbg !10102
  store i32 %sub, i32* %dmacount, align 16, !dbg !10103
  %42 = load i32, i32* %tmp, align 4, !dbg !10104
  %conv47 = zext i32 %42 to i64, !dbg !10104
  %or = or i64 536870912, %conv47, !dbg !10105
  %conv48 = trunc i64 %or to i32, !dbg !10106
  %43 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !10107
  %dmacount49 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %43, i32 0, i32 3, !dbg !10108
  %44 = bitcast i32* %dmacount49 to i8*, !dbg !10109
  call void @writel(i32 %conv48, i8* %44) #12, !dbg !10110
  %45 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10111
  %td50 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %45, i32 0, i32 1, !dbg !10112
  %46 = load %struct.net2280_dma*, %struct.net2280_dma** %td50, align 8, !dbg !10112
  %dmadesc = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %46, i32 0, i32 2, !dbg !10113
  store i32 0, i32* %dmadesc, align 8, !dbg !10114
  %47 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10115
  %valid = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %47, i32 0, i32 4, !dbg !10116
  %bf.load51 = load i8, i8* %valid, align 8, !dbg !10117
  %bf.clear52 = and i8 %bf.load51, -3, !dbg !10117
  %bf.set = or i8 %bf.clear52, 2, !dbg !10117
  store i8 %bf.set, i8* %valid, align 8, !dbg !10117
  %48 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !10118
  %dmactl53 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %48, i32 0, i32 0, !dbg !10119
  %49 = bitcast i32* %dmactl53 to i8*, !dbg !10120
  call void @writel(i32 2, i8* %49) #12, !dbg !10121
  %50 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !10122
  %dmastat54 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %50, i32 0, i32 1, !dbg !10123
  %51 = bitcast i32* %dmastat54 to i8*, !dbg !10124
  call void @writel(i32 1, i8* %51) #12, !dbg !10125
  br label %return, !dbg !10126

if.end55:                                         ; preds = %if.then30
  %52 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10127
  call void @stop_out_naking(%struct.net2280_ep* %52) #12, !dbg !10128
  br label %if.end56, !dbg !10129

if.end56:                                         ; preds = %if.end55, %land.lhs.true, %if.end
  store i32 37158914, i32* %tmp, align 4, !dbg !10130
  %53 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10131
  %is_in57 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %53, i32 0, i32 10, !dbg !10133
  %bf.load58 = load i32, i32* %is_in57, align 8, !dbg !10133
  %bf.lshr59 = lshr i32 %bf.load58, 24, !dbg !10133
  %bf.clear60 = and i32 %bf.lshr59, 1, !dbg !10133
  %tobool61 = icmp ne i32 %bf.clear60, 0, !dbg !10131
  br i1 %tobool61, label %if.then62, label %if.end91, !dbg !10134

if.then62:                                        ; preds = %if.end56
  %54 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10135
  %req63 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %54, i32 0, i32 0, !dbg !10135
  %length64 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req63, i32 0, i32 1, !dbg !10135
  %55 = load i32, i32* %length64, align 8, !dbg !10135
  %56 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10135
  %ep65 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %56, i32 0, i32 0, !dbg !10135
  %maxpacket = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep65, i32 0, i32 7, !dbg !10135
  %57 = bitcast [7 x i8]* %maxpacket to i56*, !dbg !10135
  %bf.load66 = load i56, i56* %57, align 2, !dbg !10135
  %bf.clear67 = and i56 %bf.load66, 65535, !dbg !10135
  %bf.cast = trunc i56 %bf.clear67 to i32, !dbg !10135
  %rem = urem i32 %55, %bf.cast, !dbg !10135
  %tobool68 = icmp ne i32 %rem, 0, !dbg !10135
  br i1 %tobool68, label %lor.end, label %lor.rhs, !dbg !10135

lor.rhs:                                          ; preds = %if.then62
  %58 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10135
  %req69 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %58, i32 0, i32 0, !dbg !10135
  %zero = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req69, i32 0, i32 6, !dbg !10135
  %59 = bitcast i24* %zero to i32*, !dbg !10135
  %bf.load70 = load i32, i32* %59, align 8, !dbg !10135
  %bf.lshr71 = lshr i32 %bf.load70, 18, !dbg !10135
  %bf.clear72 = and i32 %bf.lshr71, 1, !dbg !10135
  %tobool73 = icmp ne i32 %bf.clear72, 0, !dbg !10135
  br label %lor.end, !dbg !10135

lor.end:                                          ; preds = %lor.rhs, %if.then62
  %60 = phi i1 [ true, %if.then62 ], [ %tobool73, %lor.rhs ]
  %lnot74 = xor i1 %60, true, !dbg !10135
  %lnot76 = xor i1 %lnot74, true, !dbg !10135
  %lnot.ext77 = zext i1 %lnot76 to i32, !dbg !10135
  %conv78 = sext i32 %lnot.ext77 to i64, !dbg !10135
  %tobool79 = icmp ne i64 %conv78, 0, !dbg !10135
  br i1 %tobool79, label %if.then80, label %if.else, !dbg !10138

if.then80:                                        ; preds = %lor.end
  %61 = load i32, i32* %tmp, align 4, !dbg !10139
  %conv81 = zext i32 %61 to i64, !dbg !10139
  %or82 = or i64 %conv81, 4, !dbg !10139
  %conv83 = trunc i64 %or82 to i32, !dbg !10139
  store i32 %conv83, i32* %tmp, align 4, !dbg !10139
  %62 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10141
  %in_fifo_validate = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %62, i32 0, i32 10, !dbg !10142
  %bf.load84 = load i32, i32* %in_fifo_validate, align 8, !dbg !10143
  %bf.clear85 = and i32 %bf.load84, -1048577, !dbg !10143
  %bf.set86 = or i32 %bf.clear85, 1048576, !dbg !10143
  store i32 %bf.set86, i32* %in_fifo_validate, align 8, !dbg !10143
  br label %if.end90, !dbg !10144

if.else:                                          ; preds = %lor.end
  %63 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10145
  %in_fifo_validate87 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %63, i32 0, i32 10, !dbg !10146
  %bf.load88 = load i32, i32* %in_fifo_validate87, align 8, !dbg !10147
  %bf.clear89 = and i32 %bf.load88, -1048577, !dbg !10147
  store i32 %bf.clear89, i32* %in_fifo_validate87, align 8, !dbg !10147
  br label %if.end90

if.end90:                                         ; preds = %if.else, %if.then80
  br label %if.end91, !dbg !10148

if.end91:                                         ; preds = %if.end90, %if.end56
  %64 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10149
  %td_dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %64, i32 0, i32 5, !dbg !10149
  %65 = load i64, i64* %td_dma, align 8, !dbg !10149
  %conv92 = trunc i64 %65 to i32, !dbg !10149
  %66 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10150
  %td93 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %66, i32 0, i32 1, !dbg !10151
  %67 = load %struct.net2280_dma*, %struct.net2280_dma** %td93, align 8, !dbg !10151
  %dmadesc94 = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %67, i32 0, i32 2, !dbg !10152
  store i32 %conv92, i32* %dmadesc94, align 8, !dbg !10153
  %68 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10154
  %69 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10155
  call void @fill_dma_desc(%struct.net2280_ep* %68, %struct.net2280_request* %69, i32 1) #12, !dbg !10156
  %70 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10157
  %td95 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %70, i32 0, i32 1, !dbg !10158
  %71 = load %struct.net2280_dma*, %struct.net2280_dma** %td95, align 8, !dbg !10158
  %dmacount96 = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %71, i32 0, i32 0, !dbg !10159
  %72 = load i32, i32* %dmacount96, align 16, !dbg !10160
  %or97 = or i32 %72, 268435456, !dbg !10160
  store i32 %or97, i32* %dmacount96, align 16, !dbg !10160
  %73 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10161
  %74 = load i32, i32* %tmp, align 4, !dbg !10162
  %75 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10163
  %td_dma98 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %75, i32 0, i32 2, !dbg !10164
  %76 = load i64, i64* %td_dma98, align 8, !dbg !10164
  %conv99 = trunc i64 %76 to i32, !dbg !10163
  call void @start_queue(%struct.net2280_ep* %73, i32 %74, i32 %conv99) #12, !dbg !10165
  br label %return, !dbg !10166

return:                                           ; preds = %if.end91, %cond.end
  ret void, !dbg !10166
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @allow_status(%struct.net2280_ep* %ep) #2 !dbg !10167 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !10168, metadata !DIExpression()), !dbg !10169
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10170
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 2, !dbg !10171
  %1 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !10171
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %1, i32 0, i32 1, !dbg !10172
  %2 = bitcast i32* %ep_rsp to i8*, !dbg !10173
  call void @writel(i32 140, i8* %2) #12, !dbg !10174
  %3 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10175
  %stopped = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %3, i32 0, i32 10, !dbg !10176
  %bf.load = load i32, i32* %stopped, align 8, !dbg !10177
  %bf.clear = and i32 %bf.load, -4194305, !dbg !10177
  %bf.set = or i32 %bf.clear, 4194304, !dbg !10177
  store i32 %bf.set, i32* %stopped, align 8, !dbg !10177
  ret void, !dbg !10178
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @write_fifo(%struct.net2280_ep* %ep, %struct.usb_request* %req) #2 !dbg !10179 {
entry:
  %p.addr.i.i26 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i26, metadata !6848, metadata !DIExpression()), !dbg !10182
  %p.addr.i27 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i27, metadata !10192, metadata !DIExpression()), !dbg !10193
  %p.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i, metadata !6848, metadata !DIExpression()), !dbg !10194
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !10192, metadata !DIExpression()), !dbg !10199
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %req.addr = alloca %struct.usb_request*, align 8
  %regs = alloca %struct.net2280_ep_regs*, align 8
  %buf = alloca i8*, align 8
  %tmp = alloca i32, align 4
  %count = alloca i32, align 4
  %total = alloca i32, align 4
  %tmp8 = alloca i32, align 4
  %tmp20 = alloca i32, align 4
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !10200, metadata !DIExpression()), !dbg !10201
  store %struct.usb_request* %req, %struct.usb_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_request** %req.addr, metadata !10202, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.declare(metadata %struct.net2280_ep_regs** %regs, metadata !10204, metadata !DIExpression()), !dbg !10205
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10206
  %regs1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 2, !dbg !10207
  %1 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs1, align 8, !dbg !10207
  store %struct.net2280_ep_regs* %1, %struct.net2280_ep_regs** %regs, align 8, !dbg !10205
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !10208, metadata !DIExpression()), !dbg !10209
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10210, metadata !DIExpression()), !dbg !10211
  call void @llvm.dbg.declare(metadata i32* %count, metadata !10212, metadata !DIExpression()), !dbg !10213
  call void @llvm.dbg.declare(metadata i32* %total, metadata !10214, metadata !DIExpression()), !dbg !10215
  %2 = load %struct.usb_request*, %struct.usb_request** %req.addr, align 8, !dbg !10216
  %tobool = icmp ne %struct.usb_request* %2, null, !dbg !10216
  br i1 %tobool, label %if.then, label %if.else, !dbg !10218

if.then:                                          ; preds = %entry
  %3 = load %struct.usb_request*, %struct.usb_request** %req.addr, align 8, !dbg !10219
  %buf2 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %3, i32 0, i32 0, !dbg !10221
  %4 = load i8*, i8** %buf2, align 8, !dbg !10221
  %5 = load %struct.usb_request*, %struct.usb_request** %req.addr, align 8, !dbg !10222
  %actual = getelementptr inbounds %struct.usb_request, %struct.usb_request* %5, i32 0, i32 12, !dbg !10223
  %6 = load i32, i32* %actual, align 8, !dbg !10223
  %idx.ext = zext i32 %6 to i64, !dbg !10224
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext, !dbg !10224
  store i8* %add.ptr, i8** %buf, align 8, !dbg !10225
  %7 = load i8*, i8** %buf, align 8, !dbg !10226
  call void @llvm.prefetch.p0i8(i8* %7, i32 0, i32 3, i32 1), !dbg !10226
  %8 = load %struct.usb_request*, %struct.usb_request** %req.addr, align 8, !dbg !10227
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %8, i32 0, i32 1, !dbg !10228
  %9 = load i32, i32* %length, align 8, !dbg !10228
  %10 = load %struct.usb_request*, %struct.usb_request** %req.addr, align 8, !dbg !10229
  %actual3 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %10, i32 0, i32 12, !dbg !10230
  %11 = load i32, i32* %actual3, align 8, !dbg !10230
  %sub = sub i32 %9, %11, !dbg !10231
  store i32 %sub, i32* %total, align 4, !dbg !10232
  br label %if.end, !dbg !10233

if.else:                                          ; preds = %entry
  store i32 0, i32* %total, align 4, !dbg !10234
  store i8* null, i8** %buf, align 8, !dbg !10236
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10237
  %ep4 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %12, i32 0, i32 0, !dbg !10238
  %maxpacket = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep4, i32 0, i32 7, !dbg !10239
  %13 = bitcast [7 x i8]* %maxpacket to i56*, !dbg !10239
  %bf.load = load i56, i56* %13, align 2, !dbg !10239
  %bf.clear = and i56 %bf.load, 65535, !dbg !10239
  %bf.cast = trunc i56 %bf.clear to i32, !dbg !10239
  store i32 %bf.cast, i32* %count, align 4, !dbg !10240
  %14 = load i32, i32* %count, align 4, !dbg !10241
  %15 = load i32, i32* %total, align 4, !dbg !10243
  %cmp = icmp ugt i32 %14, %15, !dbg !10244
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !10245

if.then5:                                         ; preds = %if.end
  %16 = load i32, i32* %total, align 4, !dbg !10246
  store i32 %16, i32* %count, align 4, !dbg !10247
  br label %if.end6, !dbg !10248

if.end6:                                          ; preds = %if.then5, %if.end
  br label %while.cond, !dbg !10249

while.cond:                                       ; preds = %do.end, %if.end6
  %17 = load i32, i32* %count, align 4, !dbg !10250
  %cmp7 = icmp uge i32 %17, 4, !dbg !10251
  br i1 %cmp7, label %while.body, label %while.end, !dbg !10249

while.body:                                       ; preds = %while.cond
  %18 = load i8*, i8** %buf, align 8, !dbg !10252
  %19 = bitcast i8* %18 to i32*, !dbg !10252
  %20 = bitcast i32* %19 to i8*, !dbg !10252
  store i8* %20, i8** %p.addr.i, align 8
  %21 = load i8*, i8** %p.addr.i, align 8, !dbg !10253
  %22 = bitcast i8* %21 to i32*, !dbg !10254
  store i32* %22, i32** %p.addr.i.i, align 8
  %23 = load i32*, i32** %p.addr.i.i, align 8, !dbg !10255
  %24 = load i32, i32* %23, align 4, !dbg !10256
  store i32 %24, i32* %tmp8, align 4, !dbg !10257
  %25 = load i32, i32* %tmp8, align 4, !dbg !10252
  store i32 %25, i32* %tmp, align 4, !dbg !10258
  br label %do.body, !dbg !10259

do.body:                                          ; preds = %while.body
  br label %do.end, !dbg !10260

do.end:                                           ; preds = %do.body
  %26 = load i32, i32* %tmp, align 4, !dbg !10262
  %27 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !10263
  %ep_data = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %27, i32 0, i32 5, !dbg !10264
  %28 = bitcast i32* %ep_data to i8*, !dbg !10265
  call void @writel(i32 %26, i8* %28) #12, !dbg !10266
  %29 = load i8*, i8** %buf, align 8, !dbg !10267
  %add.ptr9 = getelementptr i8, i8* %29, i64 4, !dbg !10267
  store i8* %add.ptr9, i8** %buf, align 8, !dbg !10267
  %30 = load i32, i32* %count, align 4, !dbg !10268
  %sub10 = sub i32 %30, 4, !dbg !10268
  store i32 %sub10, i32* %count, align 4, !dbg !10268
  br label %while.cond, !dbg !10249, !llvm.loop !10269

while.end:                                        ; preds = %while.cond
  %31 = load i32, i32* %count, align 4, !dbg !10271
  %tobool11 = icmp ne i32 %31, 0, !dbg !10271
  br i1 %tobool11, label %if.then18, label %lor.lhs.false, !dbg !10272

lor.lhs.false:                                    ; preds = %while.end
  %32 = load i32, i32* %total, align 4, !dbg !10273
  %33 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10274
  %ep12 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %33, i32 0, i32 0, !dbg !10275
  %maxpacket13 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep12, i32 0, i32 7, !dbg !10276
  %34 = bitcast [7 x i8]* %maxpacket13 to i56*, !dbg !10276
  %bf.load14 = load i56, i56* %34, align 2, !dbg !10276
  %bf.clear15 = and i56 %bf.load14, 65535, !dbg !10276
  %bf.cast16 = trunc i56 %bf.clear15 to i32, !dbg !10276
  %cmp17 = icmp ult i32 %32, %bf.cast16, !dbg !10277
  br i1 %cmp17, label %if.then18, label %if.end25, !dbg !10278

if.then18:                                        ; preds = %lor.lhs.false, %while.end
  %35 = load i32, i32* %count, align 4, !dbg !10279
  %tobool19 = icmp ne i32 %35, 0, !dbg !10279
  br i1 %tobool19, label %cond.true, label %cond.false, !dbg !10279

cond.true:                                        ; preds = %if.then18
  %36 = load i8*, i8** %buf, align 8, !dbg !10280
  %37 = bitcast i8* %36 to i32*, !dbg !10280
  %38 = bitcast i32* %37 to i8*, !dbg !10280
  store i8* %38, i8** %p.addr.i27, align 8
  %39 = load i8*, i8** %p.addr.i27, align 8, !dbg !10281
  %40 = bitcast i8* %39 to i32*, !dbg !10282
  store i32* %40, i32** %p.addr.i.i26, align 8
  %41 = load i32*, i32** %p.addr.i.i26, align 8, !dbg !10283
  %42 = load i32, i32* %41, align 4, !dbg !10284
  store i32 %42, i32* %tmp20, align 4, !dbg !10285
  %43 = load i32, i32* %tmp20, align 4, !dbg !10280
  br label %cond.end, !dbg !10279

cond.false:                                       ; preds = %if.then18
  %44 = load i32, i32* %count, align 4, !dbg !10286
  br label %cond.end, !dbg !10279

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %43, %cond.true ], [ %44, %cond.false ], !dbg !10279
  store i32 %cond, i32* %tmp, align 4, !dbg !10287
  br label %do.body22, !dbg !10288

do.body22:                                        ; preds = %cond.end
  br label %do.end23, !dbg !10289

do.end23:                                         ; preds = %do.body22
  %45 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10291
  %46 = load i32, i32* %count, align 4, !dbg !10292
  %and = and i32 %46, 3, !dbg !10293
  call void @set_fifo_bytecount(%struct.net2280_ep* %45, i32 %and) #12, !dbg !10294
  %47 = load i32, i32* %tmp, align 4, !dbg !10295
  %48 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !10296
  %ep_data24 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %48, i32 0, i32 5, !dbg !10297
  %49 = bitcast i32* %ep_data24 to i8*, !dbg !10298
  call void @writel(i32 %47, i8* %49) #12, !dbg !10299
  br label %if.end25, !dbg !10300

if.end25:                                         ; preds = %do.end23, %lor.lhs.false
  ret void, !dbg !10301
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @read_fifo(%struct.net2280_ep* %ep, %struct.net2280_request* %req) #2 !dbg !10302 {
entry:
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !10305, metadata !DIExpression()), !dbg !10309
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !10313, metadata !DIExpression()), !dbg !10314
  %x.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr.i, metadata !10315, metadata !DIExpression()), !dbg !10319
  %retval = alloca i32, align 4
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %req.addr = alloca %struct.net2280_request*, align 8
  %regs = alloca %struct.net2280_ep_regs*, align 8
  %buf = alloca i8*, align 8
  %count = alloca i32, align 4
  %tmp = alloca i32, align 4
  %is_short = alloca i32, align 4
  %cleanup = alloca i32, align 4
  %prevent = alloca i32, align 4
  %__gu_p = alloca i8*, align 8
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !10321, metadata !DIExpression()), !dbg !10322
  store %struct.net2280_request* %req, %struct.net2280_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %req.addr, metadata !10323, metadata !DIExpression()), !dbg !10324
  call void @llvm.dbg.declare(metadata %struct.net2280_ep_regs** %regs, metadata !10325, metadata !DIExpression()), !dbg !10326
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10327
  %regs1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 2, !dbg !10328
  %1 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs1, align 8, !dbg !10328
  store %struct.net2280_ep_regs* %1, %struct.net2280_ep_regs** %regs, align 8, !dbg !10326
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !10329, metadata !DIExpression()), !dbg !10330
  %2 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10331
  %req2 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %2, i32 0, i32 0, !dbg !10332
  %buf3 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req2, i32 0, i32 0, !dbg !10333
  %3 = load i8*, i8** %buf3, align 8, !dbg !10333
  %4 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10334
  %req4 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %4, i32 0, i32 0, !dbg !10335
  %actual = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req4, i32 0, i32 12, !dbg !10336
  %5 = load i32, i32* %actual, align 8, !dbg !10336
  %idx.ext = zext i32 %5 to i64, !dbg !10337
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !10337
  store i8* %add.ptr, i8** %buf, align 8, !dbg !10330
  call void @llvm.dbg.declare(metadata i32* %count, metadata !10338, metadata !DIExpression()), !dbg !10339
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10340, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.declare(metadata i32* %is_short, metadata !10342, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.declare(metadata i32* %cleanup, metadata !10344, metadata !DIExpression()), !dbg !10345
  store i32 0, i32* %cleanup, align 4, !dbg !10345
  call void @llvm.dbg.declare(metadata i32* %prevent, metadata !10346, metadata !DIExpression()), !dbg !10347
  store i32 0, i32* %prevent, align 4, !dbg !10347
  %6 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10348
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %6, i32 0, i32 6, !dbg !10350
  %7 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !10350
  %chiprev = getelementptr inbounds %struct.net2280, %struct.net2280* %7, i32 0, i32 5, !dbg !10351
  %8 = load i16, i16* %chiprev, align 2, !dbg !10351
  %conv = zext i16 %8 to i32, !dbg !10348
  %cmp = icmp eq i32 %conv, 256, !dbg !10352
  br i1 %cmp, label %land.lhs.true, label %if.end17, !dbg !10353

land.lhs.true:                                    ; preds = %entry
  %9 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10354
  %dev6 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %9, i32 0, i32 6, !dbg !10355
  %10 = load %struct.net2280*, %struct.net2280** %dev6, align 8, !dbg !10355
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %10, i32 0, i32 0, !dbg !10356
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !10357
  %11 = load i32, i32* %speed, align 8, !dbg !10357
  %cmp7 = icmp eq i32 %11, 2, !dbg !10358
  br i1 %cmp7, label %if.then, label %if.end17, !dbg !10359

if.then:                                          ; preds = %land.lhs.true
  call void @__const_udelay(i64 4295) #12, !dbg !10360
  %12 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10366
  %regs9 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %12, i32 0, i32 2, !dbg !10367
  %13 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs9, align 8, !dbg !10367
  %ep_stat = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %13, i32 0, i32 3, !dbg !10368
  %14 = bitcast i32* %ep_stat to i8*, !dbg !10369
  %call = call i32 @readl(i8* %14) #12, !dbg !10370
  store i32 %call, i32* %tmp, align 4, !dbg !10371
  %15 = load i32, i32* %tmp, align 4, !dbg !10372
  %conv10 = zext i32 %15 to i64, !dbg !10372
  %and = and i64 %conv10, 16, !dbg !10374
  %tobool = icmp ne i64 %and, 0, !dbg !10374
  br i1 %tobool, label %if.then11, label %if.else, !dbg !10375

if.then11:                                        ; preds = %if.then
  store i32 1, i32* %cleanup, align 4, !dbg !10376
  br label %if.end16, !dbg !10377

if.else:                                          ; preds = %if.then
  %16 = load i32, i32* %tmp, align 4, !dbg !10378
  %conv12 = zext i32 %16 to i64, !dbg !10378
  %and13 = and i64 %conv12, 2048, !dbg !10380
  %tobool14 = icmp ne i64 %and13, 0, !dbg !10380
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !10381

if.then15:                                        ; preds = %if.else
  %17 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10382
  call void @start_out_naking(%struct.net2280_ep* %17) #12, !dbg !10384
  store i32 1, i32* %prevent, align 4, !dbg !10385
  br label %if.end, !dbg !10386

if.end:                                           ; preds = %if.then15, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then11
  br label %if.end17, !dbg !10387

if.end17:                                         ; preds = %if.end16, %land.lhs.true, %entry
  %18 = load i8*, i8** %buf, align 8, !dbg !10388
  store i8* %18, i8** %x.addr.i, align 8
  %19 = load i8*, i8** %x.addr.i, align 8, !dbg !10389
  call void asm sideeffect "# ALT: oldnstr\0A661:\0A\09prefetcht0 ${1:P}\0A662:\0A# ALT: padding\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 6*32+ 8)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A# ALT: replacement 1\0A6641:\0A\09prefetchw ${1:P}\0A6651:\0A.popsection\0A", "i,*m,~{dirflag},~{fpsr},~{flags}"(i32 0, i8* %19) #10, !dbg !10389, !srcloc !10390
  %20 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !10391
  %ep_avail = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %20, i32 0, i32 4, !dbg !10392
  %21 = bitcast i32* %ep_avail to i8*, !dbg !10393
  %call18 = call i32 @readl(i8* %21) #12, !dbg !10394
  store i32 %call18, i32* %count, align 4, !dbg !10395
  %22 = load i32, i32* %count, align 4, !dbg !10396
  %cmp19 = icmp eq i32 %22, 0, !dbg !10396
  %lnot = xor i1 %cmp19, true, !dbg !10396
  %lnot21 = xor i1 %lnot, true, !dbg !10396
  %lnot.ext = zext i1 %lnot21 to i32, !dbg !10396
  %conv22 = sext i32 %lnot.ext to i64, !dbg !10396
  %tobool23 = icmp ne i64 %conv22, 0, !dbg !10396
  br i1 %tobool23, label %if.then24, label %if.end39, !dbg !10398

if.then24:                                        ; preds = %if.end17
  call void @__const_udelay(i64 4295) #12, !dbg !10399
  %23 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10405
  %regs25 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %23, i32 0, i32 2, !dbg !10406
  %24 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs25, align 8, !dbg !10406
  %ep_stat26 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %24, i32 0, i32 3, !dbg !10407
  %25 = bitcast i32* %ep_stat26 to i8*, !dbg !10408
  %call27 = call i32 @readl(i8* %25) #12, !dbg !10409
  store i32 %call27, i32* %tmp, align 4, !dbg !10410
  %26 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !10411
  %ep_avail28 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %26, i32 0, i32 4, !dbg !10412
  %27 = bitcast i32* %ep_avail28 to i8*, !dbg !10413
  %call29 = call i32 @readl(i8* %27) #12, !dbg !10414
  store i32 %call29, i32* %count, align 4, !dbg !10415
  %28 = load i32, i32* %count, align 4, !dbg !10416
  %cmp30 = icmp eq i32 %28, 0, !dbg !10418
  br i1 %cmp30, label %land.lhs.true32, label %if.end38, !dbg !10419

land.lhs.true32:                                  ; preds = %if.then24
  %29 = load i32, i32* %tmp, align 4, !dbg !10420
  %conv33 = zext i32 %29 to i64, !dbg !10420
  %and34 = and i64 %conv33, 16, !dbg !10421
  %cmp35 = icmp eq i64 %and34, 0, !dbg !10422
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !10423

if.then37:                                        ; preds = %land.lhs.true32
  store i32 0, i32* %retval, align 4, !dbg !10424
  br label %return, !dbg !10424

if.end38:                                         ; preds = %land.lhs.true32, %if.then24
  br label %if.end39, !dbg !10425

if.end39:                                         ; preds = %if.end38, %if.end17
  %30 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10426
  %req40 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %30, i32 0, i32 0, !dbg !10427
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req40, i32 0, i32 1, !dbg !10428
  %31 = load i32, i32* %length, align 8, !dbg !10428
  %32 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10429
  %req41 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %32, i32 0, i32 0, !dbg !10430
  %actual42 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req41, i32 0, i32 12, !dbg !10431
  %33 = load i32, i32* %actual42, align 8, !dbg !10431
  %sub = sub i32 %31, %33, !dbg !10432
  store i32 %sub, i32* %tmp, align 4, !dbg !10433
  %34 = load i32, i32* %count, align 4, !dbg !10434
  %35 = load i32, i32* %tmp, align 4, !dbg !10436
  %cmp43 = icmp ugt i32 %34, %35, !dbg !10437
  br i1 %cmp43, label %if.then45, label %if.end55, !dbg !10438

if.then45:                                        ; preds = %if.end39
  %36 = load i32, i32* %tmp, align 4, !dbg !10439
  %37 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10442
  %ep46 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %37, i32 0, i32 0, !dbg !10443
  %maxpacket = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep46, i32 0, i32 7, !dbg !10444
  %38 = bitcast [7 x i8]* %maxpacket to i56*, !dbg !10444
  %bf.load = load i56, i56* %38, align 2, !dbg !10444
  %bf.clear = and i56 %bf.load, 65535, !dbg !10444
  %bf.cast = trunc i56 %bf.clear to i32, !dbg !10444
  %rem = urem i32 %36, %bf.cast, !dbg !10445
  %cmp47 = icmp ne i32 %rem, 0, !dbg !10446
  br i1 %cmp47, label %if.then49, label %if.end54, !dbg !10447

if.then49:                                        ; preds = %if.then45
  %39 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10448
  %dev50 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %39, i32 0, i32 6, !dbg !10448
  %40 = load %struct.net2280*, %struct.net2280** %dev50, align 8, !dbg !10448
  %pdev = getelementptr inbounds %struct.net2280, %struct.net2280* %40, i32 0, i32 9, !dbg !10448
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10448
  %dev51 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %41, i32 0, i32 41, !dbg !10448
  %42 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10448
  %ep52 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %42, i32 0, i32 0, !dbg !10448
  %name = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep52, i32 0, i32 1, !dbg !10448
  %43 = load i8*, i8** %name, align 8, !dbg !10448
  %44 = load i32, i32* %count, align 4, !dbg !10448
  %45 = load i32, i32* %tmp, align 4, !dbg !10448
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev51, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.41, i64 0, i64 0), i8* %43, i32 %44, i32 %45) #13, !dbg !10448
  %46 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10450
  %req53 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %46, i32 0, i32 0, !dbg !10451
  %status = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req53, i32 0, i32 11, !dbg !10452
  store i32 -75, i32* %status, align 4, !dbg !10453
  store i32 1, i32* %cleanup, align 4, !dbg !10454
  br label %if.end54, !dbg !10455

if.end54:                                         ; preds = %if.then49, %if.then45
  %47 = load i32, i32* %tmp, align 4, !dbg !10456
  store i32 %47, i32* %count, align 4, !dbg !10457
  br label %if.end55, !dbg !10458

if.end55:                                         ; preds = %if.end54, %if.end39
  %48 = load i32, i32* %count, align 4, !dbg !10459
  %49 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10460
  %req56 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %49, i32 0, i32 0, !dbg !10461
  %actual57 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req56, i32 0, i32 12, !dbg !10462
  %50 = load i32, i32* %actual57, align 8, !dbg !10463
  %add = add i32 %50, %48, !dbg !10463
  store i32 %add, i32* %actual57, align 8, !dbg !10463
  %51 = load i32, i32* %count, align 4, !dbg !10464
  %cmp58 = icmp eq i32 %51, 0, !dbg !10465
  br i1 %cmp58, label %lor.end, label %lor.rhs, !dbg !10466

lor.rhs:                                          ; preds = %if.end55
  %52 = load i32, i32* %count, align 4, !dbg !10467
  %53 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10468
  %ep60 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %53, i32 0, i32 0, !dbg !10469
  %maxpacket61 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep60, i32 0, i32 7, !dbg !10470
  %54 = bitcast [7 x i8]* %maxpacket61 to i56*, !dbg !10470
  %bf.load62 = load i56, i56* %54, align 2, !dbg !10470
  %bf.clear63 = and i56 %bf.load62, 65535, !dbg !10470
  %bf.cast64 = trunc i56 %bf.clear63 to i32, !dbg !10470
  %rem65 = urem i32 %52, %bf.cast64, !dbg !10471
  %cmp66 = icmp ne i32 %rem65, 0, !dbg !10472
  br label %lor.end, !dbg !10466

lor.end:                                          ; preds = %lor.rhs, %if.end55
  %55 = phi i1 [ true, %if.end55 ], [ %cmp66, %lor.rhs ]
  %lor.ext = zext i1 %55 to i32, !dbg !10466
  store i32 %lor.ext, i32* %is_short, align 4, !dbg !10473
  br label %while.cond, !dbg !10474

while.cond:                                       ; preds = %do.end, %lor.end
  %56 = load i32, i32* %count, align 4, !dbg !10475
  %cmp68 = icmp uge i32 %56, 4, !dbg !10476
  br i1 %cmp68, label %while.body, label %while.end, !dbg !10474

while.body:                                       ; preds = %while.cond
  %57 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !10477
  %ep_data = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %57, i32 0, i32 5, !dbg !10478
  %58 = bitcast i32* %ep_data to i8*, !dbg !10479
  %call70 = call i32 @readl(i8* %58) #12, !dbg !10480
  store i32 %call70, i32* %tmp, align 4, !dbg !10481
  br label %do.body, !dbg !10482

do.body:                                          ; preds = %while.body
  br label %do.end, !dbg !10483

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__gu_p, metadata !10485, metadata !DIExpression()), !dbg !10486
  %59 = load i8*, i8** %buf, align 8, !dbg !10486
  %60 = bitcast i8* %59 to i32*, !dbg !10486
  %61 = bitcast i32* %60 to i8*, !dbg !10486
  store i8* %61, i8** %__gu_p, align 8, !dbg !10486
  %62 = load i32, i32* %tmp, align 4, !dbg !10486
  %63 = load i8*, i8** %__gu_p, align 8, !dbg !10486
  store i32 %62, i32* %val.addr.i, align 4
  store i8* %63, i8** %p.addr.i, align 8
  %64 = load i32, i32* %val.addr.i, align 4, !dbg !10487
  %65 = load i8*, i8** %p.addr.i, align 8, !dbg !10488
  %66 = bitcast i8* %65 to i32*, !dbg !10489
  store i32 %64, i32* %66, align 4, !dbg !10490
  %67 = load i8*, i8** %buf, align 8, !dbg !10491
  %add.ptr71 = getelementptr i8, i8* %67, i64 4, !dbg !10491
  store i8* %add.ptr71, i8** %buf, align 8, !dbg !10491
  %68 = load i32, i32* %count, align 4, !dbg !10492
  %sub72 = sub i32 %68, 4, !dbg !10492
  store i32 %sub72, i32* %count, align 4, !dbg !10492
  br label %while.cond, !dbg !10474, !llvm.loop !10493

while.end:                                        ; preds = %while.cond
  %69 = load i32, i32* %count, align 4, !dbg !10495
  %tobool73 = icmp ne i32 %69, 0, !dbg !10495
  br i1 %tobool73, label %if.then74, label %if.end81, !dbg !10497

if.then74:                                        ; preds = %while.end
  %70 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !10498
  %ep_data75 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %70, i32 0, i32 5, !dbg !10500
  %71 = bitcast i32* %ep_data75 to i8*, !dbg !10501
  %call76 = call i32 @readl(i8* %71) #12, !dbg !10502
  store i32 %call76, i32* %tmp, align 4, !dbg !10503
  br label %do.body77, !dbg !10504

do.body77:                                        ; preds = %do.cond, %if.then74
  %72 = load i32, i32* %tmp, align 4, !dbg !10505
  %conv78 = trunc i32 %72 to i8, !dbg !10507
  %73 = load i8*, i8** %buf, align 8, !dbg !10508
  %incdec.ptr = getelementptr i8, i8* %73, i32 1, !dbg !10508
  store i8* %incdec.ptr, i8** %buf, align 8, !dbg !10508
  store i8 %conv78, i8* %73, align 1, !dbg !10509
  %74 = load i32, i32* %tmp, align 4, !dbg !10510
  %shr = lshr i32 %74, 8, !dbg !10510
  store i32 %shr, i32* %tmp, align 4, !dbg !10510
  br label %do.cond, !dbg !10511

do.cond:                                          ; preds = %do.body77
  %75 = load i32, i32* %count, align 4, !dbg !10512
  %dec = add i32 %75, -1, !dbg !10512
  store i32 %dec, i32* %count, align 4, !dbg !10512
  %tobool79 = icmp ne i32 %dec, 0, !dbg !10511
  br i1 %tobool79, label %do.body77, label %do.end80, !dbg !10511, !llvm.loop !10513

do.end80:                                         ; preds = %do.cond
  br label %if.end81, !dbg !10515

if.end81:                                         ; preds = %do.end80, %while.end
  %76 = load i32, i32* %cleanup, align 4, !dbg !10516
  %tobool82 = icmp ne i32 %76, 0, !dbg !10516
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !10518

if.then83:                                        ; preds = %if.end81
  %77 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10519
  call void @out_flush(%struct.net2280_ep* %77) #12, !dbg !10520
  br label %if.end84, !dbg !10520

if.end84:                                         ; preds = %if.then83, %if.end81
  %78 = load i32, i32* %prevent, align 4, !dbg !10521
  %tobool85 = icmp ne i32 %78, 0, !dbg !10521
  br i1 %tobool85, label %if.then86, label %if.end91, !dbg !10523

if.then86:                                        ; preds = %if.end84
  %79 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10524
  %regs87 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %79, i32 0, i32 2, !dbg !10526
  %80 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs87, align 8, !dbg !10526
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %80, i32 0, i32 1, !dbg !10527
  %81 = bitcast i32* %ep_rsp to i8*, !dbg !10528
  call void @writel(i32 128, i8* %81) #12, !dbg !10529
  %82 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10530
  %regs88 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %82, i32 0, i32 2, !dbg !10531
  %83 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs88, align 8, !dbg !10531
  %ep_rsp89 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %83, i32 0, i32 1, !dbg !10532
  %84 = bitcast i32* %ep_rsp89 to i8*, !dbg !10533
  %call90 = call i32 @readl(i8* %84) #12, !dbg !10534
  br label %if.end91, !dbg !10535

if.end91:                                         ; preds = %if.then86, %if.end84
  %85 = load i32, i32* %is_short, align 4, !dbg !10536
  %tobool92 = icmp ne i32 %85, 0, !dbg !10536
  br i1 %tobool92, label %lor.end100, label %lor.rhs93, !dbg !10537

lor.rhs93:                                        ; preds = %if.end91
  %86 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10538
  %req94 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %86, i32 0, i32 0, !dbg !10539
  %actual95 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req94, i32 0, i32 12, !dbg !10540
  %87 = load i32, i32* %actual95, align 8, !dbg !10540
  %88 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10541
  %req96 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %88, i32 0, i32 0, !dbg !10542
  %length97 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req96, i32 0, i32 1, !dbg !10543
  %89 = load i32, i32* %length97, align 8, !dbg !10543
  %cmp98 = icmp eq i32 %87, %89, !dbg !10544
  br label %lor.end100, !dbg !10537

lor.end100:                                       ; preds = %lor.rhs93, %if.end91
  %90 = phi i1 [ true, %if.end91 ], [ %cmp98, %lor.rhs93 ]
  %lor.ext101 = zext i1 %90 to i32, !dbg !10537
  store i32 %lor.ext101, i32* %retval, align 4, !dbg !10545
  br label %return, !dbg !10545

return:                                           ; preds = %lor.end100, %if.then37
  %91 = load i32, i32* %retval, align 4, !dbg !10546
  ret i32 %91, !dbg !10546
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @queue_dma(%struct.net2280_ep* %ep, %struct.net2280_request* %req, i32 %valid) #2 !dbg !10547 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %req.addr = alloca %struct.net2280_request*, align 8
  %valid.addr = alloca i32, align 4
  %end = alloca %struct.net2280_dma*, align 8
  %tmp = alloca i64, align 8
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !10548, metadata !DIExpression()), !dbg !10549
  store %struct.net2280_request* %req, %struct.net2280_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %req.addr, metadata !10550, metadata !DIExpression()), !dbg !10551
  store i32 %valid, i32* %valid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %valid.addr, metadata !10552, metadata !DIExpression()), !dbg !10553
  call void @llvm.dbg.declare(metadata %struct.net2280_dma** %end, metadata !10554, metadata !DIExpression()), !dbg !10555
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !10556, metadata !DIExpression()), !dbg !10557
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10558
  %dummy = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 4, !dbg !10559
  %1 = load %struct.net2280_dma*, %struct.net2280_dma** %dummy, align 8, !dbg !10559
  store %struct.net2280_dma* %1, %struct.net2280_dma** %end, align 8, !dbg !10560
  %2 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10561
  %td = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %2, i32 0, i32 1, !dbg !10562
  %3 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !10562
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10563
  %dummy1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %4, i32 0, i32 4, !dbg !10564
  store %struct.net2280_dma* %3, %struct.net2280_dma** %dummy1, align 8, !dbg !10565
  %5 = load %struct.net2280_dma*, %struct.net2280_dma** %end, align 8, !dbg !10566
  %6 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10567
  %td2 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %6, i32 0, i32 1, !dbg !10568
  store %struct.net2280_dma* %5, %struct.net2280_dma** %td2, align 8, !dbg !10569
  %7 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10570
  %td_dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %7, i32 0, i32 5, !dbg !10571
  %8 = load i64, i64* %td_dma, align 8, !dbg !10571
  store i64 %8, i64* %tmp, align 8, !dbg !10572
  %9 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10573
  %td_dma3 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %9, i32 0, i32 2, !dbg !10574
  %10 = load i64, i64* %td_dma3, align 8, !dbg !10574
  %11 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10575
  %td_dma4 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %11, i32 0, i32 5, !dbg !10576
  store i64 %10, i64* %td_dma4, align 8, !dbg !10577
  %12 = load i64, i64* %tmp, align 8, !dbg !10578
  %13 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10579
  %td_dma5 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %13, i32 0, i32 2, !dbg !10580
  store i64 %12, i64* %td_dma5, align 8, !dbg !10581
  %14 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10582
  %td_dma6 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %14, i32 0, i32 5, !dbg !10582
  %15 = load i64, i64* %td_dma6, align 8, !dbg !10582
  %conv = trunc i64 %15 to i32, !dbg !10582
  %16 = load %struct.net2280_dma*, %struct.net2280_dma** %end, align 8, !dbg !10583
  %dmadesc = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %16, i32 0, i32 2, !dbg !10584
  store i32 %conv, i32* %dmadesc, align 8, !dbg !10585
  %17 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10586
  %18 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10587
  %19 = load i32, i32* %valid.addr, align 4, !dbg !10588
  call void @fill_dma_desc(%struct.net2280_ep* %17, %struct.net2280_request* %18, i32 %19) #12, !dbg !10589
  ret void, !dbg !10590
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stop_out_naking(%struct.net2280_ep* %ep) #2 !dbg !10591 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %tmp = alloca i32, align 4
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !10592, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10594, metadata !DIExpression()), !dbg !10595
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10596
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 2, !dbg !10597
  %1 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !10597
  %ep_stat = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %1, i32 0, i32 3, !dbg !10598
  %2 = bitcast i32* %ep_stat to i8*, !dbg !10599
  %call = call i32 @readl(i8* %2) #12, !dbg !10600
  store i32 %call, i32* %tmp, align 4, !dbg !10601
  %3 = load i32, i32* %tmp, align 4, !dbg !10602
  %conv = zext i32 %3 to i64, !dbg !10602
  %and = and i64 %conv, 16, !dbg !10604
  %cmp = icmp ne i64 %and, 0, !dbg !10605
  br i1 %cmp, label %if.then, label %if.end, !dbg !10606

if.then:                                          ; preds = %entry
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10607
  %regs2 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %4, i32 0, i32 2, !dbg !10608
  %5 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs2, align 8, !dbg !10608
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %5, i32 0, i32 1, !dbg !10609
  %6 = bitcast i32* %ep_rsp to i8*, !dbg !10610
  call void @writel(i32 128, i8* %6) #12, !dbg !10611
  br label %if.end, !dbg !10611

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10612
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fill_dma_desc(%struct.net2280_ep* %ep, %struct.net2280_request* %req, i32 %valid) #2 !dbg !10613 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %req.addr = alloca %struct.net2280_request*, align 8
  %valid.addr = alloca i32, align 4
  %td = alloca %struct.net2280_dma*, align 8
  %dmacount = alloca i32, align 4
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !10614, metadata !DIExpression()), !dbg !10615
  store %struct.net2280_request* %req, %struct.net2280_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %req.addr, metadata !10616, metadata !DIExpression()), !dbg !10617
  store i32 %valid, i32* %valid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %valid.addr, metadata !10618, metadata !DIExpression()), !dbg !10619
  call void @llvm.dbg.declare(metadata %struct.net2280_dma** %td, metadata !10620, metadata !DIExpression()), !dbg !10621
  %0 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10622
  %td1 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %0, i32 0, i32 1, !dbg !10623
  %1 = load %struct.net2280_dma*, %struct.net2280_dma** %td1, align 8, !dbg !10623
  store %struct.net2280_dma* %1, %struct.net2280_dma** %td, align 8, !dbg !10621
  call void @llvm.dbg.declare(metadata i32* %dmacount, metadata !10624, metadata !DIExpression()), !dbg !10625
  %2 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10626
  %req2 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %2, i32 0, i32 0, !dbg !10627
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req2, i32 0, i32 1, !dbg !10628
  %3 = load i32, i32* %length, align 8, !dbg !10628
  store i32 %3, i32* %dmacount, align 4, !dbg !10625
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10629
  %is_in = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %4, i32 0, i32 10, !dbg !10631
  %bf.load = load i32, i32* %is_in, align 8, !dbg !10631
  %bf.lshr = lshr i32 %bf.load, 24, !dbg !10631
  %bf.clear = and i32 %bf.lshr, 1, !dbg !10631
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !10629
  br i1 %tobool, label %if.then, label %if.end, !dbg !10632

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %dmacount, align 4, !dbg !10633
  %conv = zext i32 %5 to i64, !dbg !10633
  %or = or i64 %conv, 1073741824, !dbg !10633
  %conv3 = trunc i64 %or to i32, !dbg !10633
  store i32 %conv3, i32* %dmacount, align 4, !dbg !10633
  br label %if.end, !dbg !10634

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10635
  %is_in4 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %6, i32 0, i32 10, !dbg !10637
  %bf.load5 = load i32, i32* %is_in4, align 8, !dbg !10637
  %bf.lshr6 = lshr i32 %bf.load5, 24, !dbg !10637
  %bf.clear7 = and i32 %bf.lshr6, 1, !dbg !10637
  %tobool8 = icmp ne i32 %bf.clear7, 0, !dbg !10635
  br i1 %tobool8, label %lor.lhs.false, label %land.lhs.true, !dbg !10638

land.lhs.true:                                    ; preds = %if.end
  %7 = load i32, i32* %dmacount, align 4, !dbg !10639
  %8 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10640
  %ep9 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %8, i32 0, i32 0, !dbg !10641
  %maxpacket = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep9, i32 0, i32 7, !dbg !10642
  %9 = bitcast [7 x i8]* %maxpacket to i56*, !dbg !10642
  %bf.load10 = load i56, i56* %9, align 2, !dbg !10642
  %bf.clear11 = and i56 %bf.load10, 65535, !dbg !10642
  %bf.cast = trunc i56 %bf.clear11 to i32, !dbg !10642
  %rem = urem i32 %7, %bf.cast, !dbg !10643
  %cmp = icmp ne i32 %rem, 0, !dbg !10644
  br i1 %cmp, label %if.then14, label %lor.lhs.false, !dbg !10645

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %10 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10646
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %10, i32 0, i32 6, !dbg !10647
  %11 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !10647
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 8, !dbg !10648
  %12 = load i64, i64* %quirks, align 8, !dbg !10648
  %and = and i64 %12, 2, !dbg !10649
  %tobool13 = icmp ne i64 %and, 0, !dbg !10649
  br i1 %tobool13, label %if.end18, label %if.then14, !dbg !10650

if.then14:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %13 = load i32, i32* %dmacount, align 4, !dbg !10651
  %conv15 = zext i32 %13 to i64, !dbg !10651
  %or16 = or i64 %conv15, 268435456, !dbg !10651
  %conv17 = trunc i64 %or16 to i32, !dbg !10651
  store i32 %conv17, i32* %dmacount, align 4, !dbg !10651
  br label %if.end18, !dbg !10652

if.end18:                                         ; preds = %if.then14, %lor.lhs.false
  %14 = load i32, i32* %valid.addr, align 4, !dbg !10653
  %15 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10654
  %valid19 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %15, i32 0, i32 4, !dbg !10655
  %16 = trunc i32 %14 to i8, !dbg !10656
  %bf.load20 = load i8, i8* %valid19, align 8, !dbg !10656
  %bf.value = and i8 %16, 1, !dbg !10656
  %bf.shl = shl i8 %bf.value, 1, !dbg !10656
  %bf.clear21 = and i8 %bf.load20, -3, !dbg !10656
  %bf.set = or i8 %bf.clear21, %bf.shl, !dbg !10656
  store i8 %bf.set, i8* %valid19, align 8, !dbg !10656
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !10656
  %17 = load i32, i32* %valid.addr, align 4, !dbg !10657
  %tobool22 = icmp ne i32 %17, 0, !dbg !10657
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !10659

if.then23:                                        ; preds = %if.end18
  %18 = load i32, i32* %dmacount, align 4, !dbg !10660
  %conv24 = zext i32 %18 to i64, !dbg !10660
  %or25 = or i64 %conv24, 2147483648, !dbg !10660
  %conv26 = trunc i64 %or25 to i32, !dbg !10660
  store i32 %conv26, i32* %dmacount, align 4, !dbg !10660
  br label %if.end27, !dbg !10661

if.end27:                                         ; preds = %if.then23, %if.end18
  %19 = load i32, i32* %dmacount, align 4, !dbg !10662
  %conv28 = zext i32 %19 to i64, !dbg !10662
  %or29 = or i64 %conv28, 536870912, !dbg !10662
  %conv30 = trunc i64 %or29 to i32, !dbg !10662
  store i32 %conv30, i32* %dmacount, align 4, !dbg !10662
  %20 = load %struct.net2280_request*, %struct.net2280_request** %req.addr, align 8, !dbg !10663
  %req31 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %20, i32 0, i32 0, !dbg !10663
  %dma = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req31, i32 0, i32 2, !dbg !10663
  %21 = load i64, i64* %dma, align 8, !dbg !10663
  %conv32 = trunc i64 %21 to i32, !dbg !10663
  %22 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !10664
  %dmaaddr = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %22, i32 0, i32 1, !dbg !10665
  store i32 %conv32, i32* %dmaaddr, align 4, !dbg !10666
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10667, !srcloc !10668
  %23 = load i32, i32* %dmacount, align 4, !dbg !10669
  %24 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !10670
  %dmacount33 = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %24, i32 0, i32 0, !dbg !10671
  store i32 %23, i32* %dmacount33, align 16, !dbg !10672
  ret void, !dbg !10673
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @start_queue(%struct.net2280_ep* %ep, i32 %dmactl, i32 %td_dma) #2 !dbg !10674 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %dmactl.addr = alloca i32, align 4
  %td_dma.addr = alloca i32, align 4
  %dma = alloca %struct.net2280_dma_regs*, align 8
  %tmp = alloca i32, align 4
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !10677, metadata !DIExpression()), !dbg !10678
  store i32 %dmactl, i32* %dmactl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dmactl.addr, metadata !10679, metadata !DIExpression()), !dbg !10680
  store i32 %td_dma, i32* %td_dma.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %td_dma.addr, metadata !10681, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.declare(metadata %struct.net2280_dma_regs** %dma, metadata !10683, metadata !DIExpression()), !dbg !10684
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10685
  %dma1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 3, !dbg !10686
  %1 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma1, align 8, !dbg !10686
  store %struct.net2280_dma_regs* %1, %struct.net2280_dma_regs** %dma, align 8, !dbg !10684
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10687, metadata !DIExpression()), !dbg !10688
  %2 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10689
  %is_in = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %2, i32 0, i32 10, !dbg !10690
  %bf.load = load i32, i32* %is_in, align 8, !dbg !10690
  %bf.lshr = lshr i32 %bf.load, 24, !dbg !10690
  %bf.clear = and i32 %bf.lshr, 1, !dbg !10690
  %shl = shl i32 %bf.clear, 30, !dbg !10691
  %conv = sext i32 %shl to i64, !dbg !10692
  %or = or i64 2147483648, %conv, !dbg !10693
  %conv2 = trunc i64 %or to i32, !dbg !10694
  store i32 %conv2, i32* %tmp, align 4, !dbg !10688
  %3 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10695
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %3, i32 0, i32 6, !dbg !10697
  %4 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !10697
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %4, i32 0, i32 8, !dbg !10698
  %5 = load i64, i64* %quirks, align 8, !dbg !10698
  %and = and i64 %5, 2, !dbg !10699
  %tobool = icmp ne i64 %and, 0, !dbg !10699
  br i1 %tobool, label %if.end, label %if.then, !dbg !10700

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %tmp, align 4, !dbg !10701
  %conv3 = zext i32 %6 to i64, !dbg !10701
  %or4 = or i64 %conv3, 268435456, !dbg !10701
  %conv5 = trunc i64 %or4 to i32, !dbg !10701
  store i32 %conv5, i32* %tmp, align 4, !dbg !10701
  br label %if.end, !dbg !10702

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %tmp, align 4, !dbg !10703
  %8 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !10704
  %dmacount = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %8, i32 0, i32 3, !dbg !10705
  %9 = bitcast i32* %dmacount to i8*, !dbg !10706
  call void @writel(i32 %7, i8* %9) #12, !dbg !10707
  %10 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !10708
  %dmastat = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %10, i32 0, i32 1, !dbg !10709
  %11 = bitcast i32* %dmastat to i8*, !dbg !10710
  %call = call i32 @readl(i8* %11) #12, !dbg !10711
  %12 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !10712
  %dmastat6 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %12, i32 0, i32 1, !dbg !10713
  %13 = bitcast i32* %dmastat6 to i8*, !dbg !10714
  call void @writel(i32 %call, i8* %13) #12, !dbg !10715
  %14 = load i32, i32* %td_dma.addr, align 4, !dbg !10716
  %15 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !10717
  %dmadesc = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %15, i32 0, i32 5, !dbg !10718
  %16 = bitcast i32* %dmadesc to i8*, !dbg !10719
  call void @writel(i32 %14, i8* %16) #12, !dbg !10720
  %17 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10721
  %dev7 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %17, i32 0, i32 6, !dbg !10723
  %18 = load %struct.net2280*, %struct.net2280** %dev7, align 8, !dbg !10723
  %quirks8 = getelementptr inbounds %struct.net2280, %struct.net2280* %18, i32 0, i32 8, !dbg !10724
  %19 = load i64, i64* %quirks8, align 8, !dbg !10724
  %and9 = and i64 %19, 8, !dbg !10725
  %tobool10 = icmp ne i64 %and9, 0, !dbg !10725
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !10726

if.then11:                                        ; preds = %if.end
  %20 = load i32, i32* %dmactl.addr, align 4, !dbg !10727
  %conv12 = zext i32 %20 to i64, !dbg !10727
  %or13 = or i64 %conv12, 32, !dbg !10727
  %conv14 = trunc i64 %or13 to i32, !dbg !10727
  store i32 %conv14, i32* %dmactl.addr, align 4, !dbg !10727
  br label %if.end15, !dbg !10728

if.end15:                                         ; preds = %if.then11, %if.end
  %21 = load i32, i32* %dmactl.addr, align 4, !dbg !10729
  %22 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !10730
  %dmactl16 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %22, i32 0, i32 0, !dbg !10731
  %23 = bitcast i32* %dmactl16 to i8*, !dbg !10732
  call void @writel(i32 %21, i8* %23) #12, !dbg !10733
  %24 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10734
  %dev17 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %24, i32 0, i32 6, !dbg !10735
  %25 = load %struct.net2280*, %struct.net2280** %dev17, align 8, !dbg !10735
  %pci = getelementptr inbounds %struct.net2280, %struct.net2280* %25, i32 0, i32 13, !dbg !10736
  %26 = load %struct.net2280_pci_regs*, %struct.net2280_pci_regs** %pci, align 8, !dbg !10736
  %pcimstctl = getelementptr inbounds %struct.net2280_pci_regs, %struct.net2280_pci_regs* %26, i32 0, i32 0, !dbg !10737
  %27 = bitcast i32* %pcimstctl to i8*, !dbg !10738
  %call18 = call i32 @readl(i8* %27) #12, !dbg !10739
  %28 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !10740
  %dmastat19 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %28, i32 0, i32 1, !dbg !10741
  %29 = bitcast i32* %dmastat19 to i8*, !dbg !10742
  call void @writel(i32 1, i8* %29) #12, !dbg !10743
  ret void, !dbg !10744
}

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_fifo_bytecount(%struct.net2280_ep* %ep, i32 %count) #2 !dbg !10745 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %count.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !10748, metadata !DIExpression()), !dbg !10749
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !10750, metadata !DIExpression()), !dbg !10751
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10752
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 6, !dbg !10754
  %1 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !10754
  %pdev = getelementptr inbounds %struct.net2280, %struct.net2280* %1, i32 0, i32 9, !dbg !10755
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10755
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 7, !dbg !10756
  %3 = load i16, i16* %vendor, align 4, !dbg !10756
  %conv = zext i16 %3 to i32, !dbg !10752
  %cmp = icmp eq i32 %conv, 6092, !dbg !10757
  br i1 %cmp, label %if.then, label %if.else, !dbg !10758

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %count.addr, align 4, !dbg !10759
  %conv2 = trunc i32 %4 to i8, !dbg !10759
  %5 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10760
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %5, i32 0, i32 2, !dbg !10761
  %6 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !10761
  %ep_cfg = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %6, i32 0, i32 0, !dbg !10762
  %7 = bitcast i32* %ep_cfg to i8*, !dbg !10763
  %add.ptr = getelementptr i8, i8* %7, i64 2, !dbg !10764
  call void @writeb(i8 zeroext %conv2, i8* %add.ptr) #12, !dbg !10765
  br label %if.end, !dbg !10765

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10766, metadata !DIExpression()), !dbg !10768
  %8 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10769
  %cfg = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %8, i32 0, i32 1, !dbg !10770
  %9 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %cfg, align 8, !dbg !10770
  %ep_cfg3 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %9, i32 0, i32 0, !dbg !10771
  %10 = bitcast i32* %ep_cfg3 to i8*, !dbg !10772
  %call = call i32 @readl(i8* %10) #12, !dbg !10773
  %and = and i32 %call, -458753, !dbg !10774
  store i32 %and, i32* %tmp, align 4, !dbg !10768
  %11 = load i32, i32* %tmp, align 4, !dbg !10775
  %12 = load i32, i32* %count.addr, align 4, !dbg !10776
  %shl = shl i32 %12, 16, !dbg !10777
  %or = or i32 %11, %shl, !dbg !10778
  %13 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10779
  %cfg4 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %13, i32 0, i32 1, !dbg !10780
  %14 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %cfg4, align 8, !dbg !10780
  %ep_cfg5 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %14, i32 0, i32 0, !dbg !10781
  %15 = bitcast i32* %ep_cfg5 to i8*, !dbg !10782
  call void @writel(i32 %or, i8* %15) #12, !dbg !10783
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10784
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #2 !dbg !10785 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !10788, metadata !DIExpression()), !dbg !10789
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10790, metadata !DIExpression()), !dbg !10789
  %0 = load i8, i8* %val.addr, align 1, !dbg !10789
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !10789
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #10, !dbg !10789, !srcloc !10791
  ret void, !dbg !10789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @start_out_naking(%struct.net2280_ep* %ep) #2 !dbg !10792 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !10793, metadata !DIExpression()), !dbg !10794
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10795
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 2, !dbg !10796
  %1 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !10796
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %1, i32 0, i32 1, !dbg !10797
  %2 = bitcast i32* %ep_rsp to i8*, !dbg !10798
  call void @writel(i32 32768, i8* %2) #12, !dbg !10799
  %3 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10800
  %regs1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %3, i32 0, i32 2, !dbg !10801
  %4 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs1, align 8, !dbg !10801
  %ep_rsp2 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %4, i32 0, i32 1, !dbg !10802
  %5 = bitcast i32* %ep_rsp2 to i8*, !dbg !10803
  %call = call i32 @readl(i8* %5) #12, !dbg !10804
  ret void, !dbg !10805
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @out_flush(%struct.net2280_ep* %ep) #2 !dbg !10806 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %statp = alloca i32*, align 8
  %tmp = alloca i32, align 4
  %usec = alloca i32, align 4
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !10807, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.declare(metadata i32** %statp, metadata !10809, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10811, metadata !DIExpression()), !dbg !10812
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10813
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 2, !dbg !10814
  %1 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !10814
  %ep_stat = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %1, i32 0, i32 3, !dbg !10815
  store i32* %ep_stat, i32** %statp, align 8, !dbg !10816
  %2 = load i32*, i32** %statp, align 8, !dbg !10817
  %3 = bitcast i32* %2 to i8*, !dbg !10817
  %call = call i32 @readl(i8* %3) #12, !dbg !10818
  store i32 %call, i32* %tmp, align 4, !dbg !10819
  %4 = load i32, i32* %tmp, align 4, !dbg !10820
  %conv = zext i32 %4 to i64, !dbg !10820
  %and = and i64 %conv, 16, !dbg !10822
  %tobool = icmp ne i64 %and, 0, !dbg !10822
  br i1 %tobool, label %if.then, label %if.end, !dbg !10823

if.then:                                          ; preds = %entry
  %5 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10824
  %regs1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %5, i32 0, i32 2, !dbg !10826
  %6 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs1, align 8, !dbg !10826
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %6, i32 0, i32 1, !dbg !10827
  %7 = bitcast i32* %ep_rsp to i8*, !dbg !10828
  call void @writel(i32 32768, i8* %7) #12, !dbg !10829
  br label %if.end, !dbg !10830

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32*, i32** %statp, align 8, !dbg !10831
  %9 = bitcast i32* %8 to i8*, !dbg !10831
  call void @writel(i32 10, i8* %9) #12, !dbg !10832
  %10 = load i32*, i32** %statp, align 8, !dbg !10833
  %11 = bitcast i32* %10 to i8*, !dbg !10833
  call void @writel(i32 512, i8* %11) #12, !dbg !10834
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10835, !srcloc !10836
  %12 = load i32*, i32** %statp, align 8, !dbg !10837
  %13 = bitcast i32* %12 to i8*, !dbg !10837
  %call2 = call i32 @readl(i8* %13) #12, !dbg !10838
  store i32 %call2, i32* %tmp, align 4, !dbg !10839
  %14 = load i32, i32* %tmp, align 4, !dbg !10840
  %conv3 = zext i32 %14 to i64, !dbg !10840
  %and4 = and i64 %conv3, 2, !dbg !10842
  %tobool5 = icmp ne i64 %and4, 0, !dbg !10842
  br i1 %tobool5, label %land.lhs.true, label %if.end9, !dbg !10843

land.lhs.true:                                    ; preds = %if.end
  %15 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !10844
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %15, i32 0, i32 6, !dbg !10845
  %16 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !10845
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %16, i32 0, i32 0, !dbg !10846
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !10847
  %17 = load i32, i32* %speed, align 8, !dbg !10847
  %cmp = icmp eq i32 %17, 2, !dbg !10848
  br i1 %cmp, label %if.then7, label %if.end9, !dbg !10849

if.then7:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %usec, metadata !10850, metadata !DIExpression()), !dbg !10852
  store i32 50, i32* %usec, align 4, !dbg !10853
  %18 = load i32*, i32** %statp, align 8, !dbg !10854
  %19 = load i32, i32* %usec, align 4, !dbg !10855
  %call8 = call i32 @handshake(i32* %18, i32 131072, i32 131072, i32 %19) #12, !dbg !10856
  br label %if.end9, !dbg !10857

if.end9:                                          ; preds = %if.then7, %land.lhs.true, %if.end
  ret void, !dbg !10858
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @net2280_set_halt_and_wedge(%struct.usb_ep* %_ep, i32 %value, i32 %wedged) #2 !dbg !10859 {
entry:
  %lock.addr.i103 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i103, metadata !5734, metadata !DIExpression()), !dbg !10862
  %flags.addr.i104 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i104, metadata !5740, metadata !DIExpression()), !dbg !10864
  %tmp.i105 = alloca i32, align 4
  %tmp8.i106 = alloca i32, align 4
  %lock.addr.i101 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i101, metadata !5734, metadata !DIExpression()), !dbg !10865
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5740, metadata !DIExpression()), !dbg !10867
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4661, metadata !DIExpression()), !dbg !10868
  %retval = alloca i32, align 4
  %_ep.addr = alloca %struct.usb_ep*, align 8
  %value.addr = alloca i32, align 4
  %wedged.addr = alloca i32, align 4
  %ep = alloca %struct.net2280_ep*, align 8
  %flags = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280_ep*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp21 = alloca i32, align 4
  %__dummy25 = alloca i64, align 8
  %__dummy226 = alloca i64, align 8
  %tmp29 = alloca i32, align 4
  store %struct.usb_ep* %_ep, %struct.usb_ep** %_ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %_ep.addr, metadata !10875, metadata !DIExpression()), !dbg !10876
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !10877, metadata !DIExpression()), !dbg !10878
  store i32 %wedged, i32* %wedged.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wedged.addr, metadata !10879, metadata !DIExpression()), !dbg !10880
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !10881, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10883, metadata !DIExpression()), !dbg !10884
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !10885, metadata !DIExpression()), !dbg !10886
  store i32 0, i32* %retval1, align 4, !dbg !10886
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10887, metadata !DIExpression()), !dbg !10889
  %0 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !10889
  %1 = bitcast %struct.usb_ep* %0 to i8*, !dbg !10889
  store i8* %1, i8** %__mptr, align 8, !dbg !10889
  br label %do.body, !dbg !10889

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10890

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10889
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10889
  %3 = bitcast i8* %add.ptr to %struct.net2280_ep*, !dbg !10889
  store %struct.net2280_ep* %3, %struct.net2280_ep** %tmp, align 8, !dbg !10890
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %tmp, align 8, !dbg !10889
  store %struct.net2280_ep* %4, %struct.net2280_ep** %ep, align 8, !dbg !10892
  %5 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !10893
  %tobool = icmp ne %struct.usb_ep* %5, null, !dbg !10893
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10895

lor.lhs.false:                                    ; preds = %do.end
  %6 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !10896
  %desc = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %6, i32 0, i32 9, !dbg !10897
  %7 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc, align 8, !dbg !10897
  %tobool2 = icmp ne %struct.usb_endpoint_descriptor* %7, null, !dbg !10896
  br i1 %tobool2, label %if.end, label %land.lhs.true, !dbg !10898

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !10899
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %8, i32 0, i32 10, !dbg !10900
  %bf.load = load i32, i32* %num, align 8, !dbg !10900
  %bf.clear = and i32 %bf.load, 255, !dbg !10900
  %cmp = icmp ne i32 %bf.clear, 0, !dbg !10901
  br i1 %cmp, label %if.then, label %if.end, !dbg !10902

if.then:                                          ; preds = %land.lhs.true, %do.end
  %9 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !10903
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.net2280_set_halt_and_wedge, i64 0, i64 0), %struct.usb_ep* %9) #13, !dbg !10903
  store i32 -22, i32* %retval, align 4, !dbg !10905
  br label %return, !dbg !10905

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %10 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !10906
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %10, i32 0, i32 6, !dbg !10908
  %11 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !10908
  %driver = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 3, !dbg !10909
  %12 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver, align 8, !dbg !10909
  %tobool3 = icmp ne %struct.usb_gadget_driver* %12, null, !dbg !10906
  br i1 %tobool3, label %lor.lhs.false4, label %if.then7, !dbg !10910

lor.lhs.false4:                                   ; preds = %if.end
  %13 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !10911
  %dev5 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %13, i32 0, i32 6, !dbg !10912
  %14 = load %struct.net2280*, %struct.net2280** %dev5, align 8, !dbg !10912
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %14, i32 0, i32 0, !dbg !10913
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !10914
  %15 = load i32, i32* %speed, align 8, !dbg !10914
  %cmp6 = icmp eq i32 %15, 0, !dbg !10915
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10916

if.then7:                                         ; preds = %lor.lhs.false4, %if.end
  store i32 -108, i32* %retval1, align 4, !dbg !10917
  br label %print_err, !dbg !10919

if.end8:                                          ; preds = %lor.lhs.false4
  %16 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !10920
  %desc9 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %16, i32 0, i32 9, !dbg !10922
  %17 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc9, align 8, !dbg !10922
  %tobool10 = icmp ne %struct.usb_endpoint_descriptor* %17, null, !dbg !10920
  br i1 %tobool10, label %land.lhs.true11, label %if.end16, !dbg !10923

land.lhs.true11:                                  ; preds = %if.end8
  %18 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !10924
  %desc12 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %18, i32 0, i32 9, !dbg !10925
  %19 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc12, align 8, !dbg !10925
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %19, i32 0, i32 3, !dbg !10926
  %20 = load i8, i8* %bmAttributes, align 1, !dbg !10926
  %conv = zext i8 %20 to i32, !dbg !10924
  %and = and i32 %conv, 3, !dbg !10927
  %cmp13 = icmp eq i32 %and, 1, !dbg !10928
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !10929

if.then15:                                        ; preds = %land.lhs.true11
  store i32 -22, i32* %retval1, align 4, !dbg !10930
  br label %print_err, !dbg !10932

if.end16:                                         ; preds = %land.lhs.true11, %if.end8
  br label %do.body17, !dbg !10933

do.body17:                                        ; preds = %if.end16
  br label %do.body18, !dbg !10934

do.body18:                                        ; preds = %do.body17
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10935, metadata !DIExpression()), !dbg !10937
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10938, metadata !DIExpression()), !dbg !10937
  %cmp19 = icmp eq i64* %__dummy, %__dummy2, !dbg !10937
  %conv20 = zext i1 %cmp19 to i32, !dbg !10937
  store i32 1, i32* %tmp21, align 4, !dbg !10937
  %21 = load i32, i32* %tmp21, align 4, !dbg !10937
  br label %do.body22, !dbg !10939

do.body22:                                        ; preds = %do.body18
  br label %do.body23, !dbg !10940

do.body23:                                        ; preds = %do.body22
  br label %do.body24, !dbg !10941

do.body24:                                        ; preds = %do.body23
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !10943, metadata !DIExpression()), !dbg !10946
  call void @llvm.dbg.declare(metadata i64* %__dummy226, metadata !10947, metadata !DIExpression()), !dbg !10946
  %cmp27 = icmp eq i64* %__dummy25, %__dummy226, !dbg !10946
  %conv28 = zext i1 %cmp27 to i32, !dbg !10946
  store i32 1, i32* %tmp29, align 4, !dbg !10946
  %22 = load i32, i32* %tmp29, align 4, !dbg !10946
  %call30 = call i64 @arch_local_irq_save() #12, !dbg !10948
  store i64 %call30, i64* %flags, align 8, !dbg !10948
  br label %do.end31, !dbg !10948

do.end31:                                         ; preds = %do.body24
  br label %do.end32, !dbg !10941

do.end32:                                         ; preds = %do.end31
  br label %do.body33, !dbg !10940

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10949, !srcloc !10950
  br label %do.body34, !dbg !10949

do.body34:                                        ; preds = %do.body33
  %23 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !10951
  %dev35 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %23, i32 0, i32 6, !dbg !10951
  %24 = load %struct.net2280*, %struct.net2280** %dev35, align 8, !dbg !10951
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %24, i32 0, i32 1, !dbg !10951
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10952
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !10953
  %rlock.i = bitcast %union.anon.4* %26 to %struct.raw_spinlock*, !dbg !10953
  br label %do.end37, !dbg !10951

do.end37:                                         ; preds = %do.body34
  br label %do.end38, !dbg !10949

do.end38:                                         ; preds = %do.end37
  br label %do.end39, !dbg !10940

do.end39:                                         ; preds = %do.end38
  br label %do.end40, !dbg !10939

do.end40:                                         ; preds = %do.end39
  br label %do.end41, !dbg !10934

do.end41:                                         ; preds = %do.end40
  %27 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !10954
  %queue = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %27, i32 0, i32 8, !dbg !10956
  %call42 = call i32 @list_empty(%struct.list_head* %queue) #12, !dbg !10957
  %tobool43 = icmp ne i32 %call42, 0, !dbg !10957
  br i1 %tobool43, label %if.else, label %if.then44, !dbg !10958

if.then44:                                        ; preds = %do.end41
  store i32 -11, i32* %retval1, align 4, !dbg !10959
  br label %print_unlock, !dbg !10961

if.else:                                          ; preds = %do.end41
  %28 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !10962
  %is_in = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %28, i32 0, i32 10, !dbg !10964
  %bf.load45 = load i32, i32* %is_in, align 8, !dbg !10964
  %bf.lshr = lshr i32 %bf.load45, 24, !dbg !10964
  %bf.clear46 = and i32 %bf.lshr, 1, !dbg !10964
  %tobool47 = icmp ne i32 %bf.clear46, 0, !dbg !10962
  br i1 %tobool47, label %land.lhs.true48, label %if.else55, !dbg !10965

land.lhs.true48:                                  ; preds = %if.else
  %29 = load i32, i32* %value.addr, align 4, !dbg !10966
  %tobool49 = icmp ne i32 %29, 0, !dbg !10966
  br i1 %tobool49, label %land.lhs.true50, label %if.else55, !dbg !10967

land.lhs.true50:                                  ; preds = %land.lhs.true48
  %30 = load %struct.usb_ep*, %struct.usb_ep** %_ep.addr, align 8, !dbg !10968
  %call51 = call i32 @net2280_fifo_status(%struct.usb_ep* %30) #12, !dbg !10969
  %cmp52 = icmp ne i32 %call51, 0, !dbg !10970
  br i1 %cmp52, label %if.then54, label %if.else55, !dbg !10971

if.then54:                                        ; preds = %land.lhs.true50
  store i32 -11, i32* %retval1, align 4, !dbg !10972
  br label %print_unlock, !dbg !10974

if.else55:                                        ; preds = %land.lhs.true50, %land.lhs.true48, %if.else
  %31 = load i32, i32* %value.addr, align 4, !dbg !10975
  %tobool56 = icmp ne i32 %31, 0, !dbg !10975
  br i1 %tobool56, label %if.then57, label %if.else76, !dbg !10978

if.then57:                                        ; preds = %if.else55
  %32 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !10979
  %num58 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %32, i32 0, i32 10, !dbg !10982
  %bf.load59 = load i32, i32* %num58, align 8, !dbg !10982
  %bf.clear60 = and i32 %bf.load59, 255, !dbg !10982
  %cmp61 = icmp eq i32 %bf.clear60, 0, !dbg !10983
  br i1 %cmp61, label %if.then63, label %if.else67, !dbg !10984

if.then63:                                        ; preds = %if.then57
  %33 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !10985
  %dev64 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %33, i32 0, i32 6, !dbg !10986
  %34 = load %struct.net2280*, %struct.net2280** %dev64, align 8, !dbg !10986
  %protocol_stall = getelementptr inbounds %struct.net2280, %struct.net2280* %34, i32 0, i32 4, !dbg !10987
  %bf.load65 = load i16, i16* %protocol_stall, align 8, !dbg !10988
  %bf.clear66 = and i16 %bf.load65, -3, !dbg !10988
  %bf.set = or i16 %bf.clear66, 2, !dbg !10988
  store i16 %bf.set, i16* %protocol_stall, align 8, !dbg !10988
  br label %if.end68, !dbg !10985

if.else67:                                        ; preds = %if.then57
  %35 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !10989
  call void @set_halt(%struct.net2280_ep* %35) #12, !dbg !10990
  br label %if.end68

if.end68:                                         ; preds = %if.else67, %if.then63
  %36 = load i32, i32* %wedged.addr, align 4, !dbg !10991
  %tobool69 = icmp ne i32 %36, 0, !dbg !10991
  br i1 %tobool69, label %if.then70, label %if.end75, !dbg !10993

if.then70:                                        ; preds = %if.end68
  %37 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !10994
  %wedged71 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %37, i32 0, i32 10, !dbg !10995
  %bf.load72 = load i32, i32* %wedged71, align 8, !dbg !10996
  %bf.clear73 = and i32 %bf.load72, -8388609, !dbg !10996
  %bf.set74 = or i32 %bf.clear73, 8388608, !dbg !10996
  store i32 %bf.set74, i32* %wedged71, align 8, !dbg !10996
  br label %if.end75, !dbg !10994

if.end75:                                         ; preds = %if.then70, %if.end68
  br label %if.end91, !dbg !10997

if.else76:                                        ; preds = %if.else55
  %38 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !10998
  call void @clear_halt(%struct.net2280_ep* %38) #12, !dbg !11000
  %39 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11001
  %dev77 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %39, i32 0, i32 6, !dbg !11003
  %40 = load %struct.net2280*, %struct.net2280** %dev77, align 8, !dbg !11003
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %40, i32 0, i32 8, !dbg !11004
  %41 = load i64, i64* %quirks, align 8, !dbg !11004
  %and78 = and i64 %41, 8, !dbg !11005
  %tobool79 = icmp ne i64 %and78, 0, !dbg !11005
  br i1 %tobool79, label %land.lhs.true80, label %if.end87, !dbg !11006

land.lhs.true80:                                  ; preds = %if.else76
  %42 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11007
  %queue81 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %42, i32 0, i32 8, !dbg !11008
  %call82 = call i32 @list_empty(%struct.list_head* %queue81) #12, !dbg !11009
  %tobool83 = icmp ne i32 %call82, 0, !dbg !11009
  br i1 %tobool83, label %if.end87, label %land.lhs.true84, !dbg !11010

land.lhs.true84:                                  ; preds = %land.lhs.true80
  %43 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11011
  %td_dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %43, i32 0, i32 5, !dbg !11012
  %44 = load i64, i64* %td_dma, align 8, !dbg !11012
  %tobool85 = icmp ne i64 %44, 0, !dbg !11011
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !11013

if.then86:                                        ; preds = %land.lhs.true84
  %45 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11014
  call void @restart_dma(%struct.net2280_ep* %45) #12, !dbg !11015
  br label %if.end87, !dbg !11015

if.end87:                                         ; preds = %if.then86, %land.lhs.true84, %land.lhs.true80, %if.else76
  %46 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11016
  %wedged88 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %46, i32 0, i32 10, !dbg !11017
  %bf.load89 = load i32, i32* %wedged88, align 8, !dbg !11018
  %bf.clear90 = and i32 %bf.load89, -8388609, !dbg !11018
  store i32 %bf.clear90, i32* %wedged88, align 8, !dbg !11018
  br label %if.end91

if.end91:                                         ; preds = %if.end87, %if.end75
  %47 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11019
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %47, i32 0, i32 2, !dbg !11020
  %48 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !11020
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %48, i32 0, i32 1, !dbg !11021
  %49 = bitcast i32* %ep_rsp to i8*, !dbg !11022
  %call92 = call i32 @readl(i8* %49) #12, !dbg !11023
  br label %if.end93

if.end93:                                         ; preds = %if.end91
  br label %if.end94

if.end94:                                         ; preds = %if.end93
  %50 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11024
  %dev95 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %50, i32 0, i32 6, !dbg !11025
  %51 = load %struct.net2280*, %struct.net2280** %dev95, align 8, !dbg !11025
  %lock96 = getelementptr inbounds %struct.net2280, %struct.net2280* %51, i32 0, i32 1, !dbg !11026
  %52 = load i64, i64* %flags, align 8, !dbg !11027
  store %struct.spinlock* %lock96, %struct.spinlock** %lock.addr.i103, align 8
  store i64 %52, i64* %flags.addr.i104, align 8
  call void @llvm.dbg.declare(metadata !443, metadata !5796, metadata !DIExpression()) #10, !dbg !11028
  call void @llvm.dbg.declare(metadata !443, metadata !5800, metadata !DIExpression()) #10, !dbg !11028
  store i32 1, i32* %tmp.i105, align 4, !dbg !11028
  %53 = load i32, i32* %tmp.i105, align 4, !dbg !11028
  call void @llvm.dbg.declare(metadata !443, metadata !5801, metadata !DIExpression()) #10, !dbg !11029
  call void @llvm.dbg.declare(metadata !443, metadata !5807, metadata !DIExpression()) #10, !dbg !11029
  store i32 1, i32* %tmp8.i106, align 4, !dbg !11029
  %54 = load i32, i32* %tmp8.i106, align 4, !dbg !11029
  %55 = load i64, i64* %flags.addr.i104, align 8, !dbg !11030
  call void @arch_local_irq_restore(i64 %55) #15, !dbg !11030
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11031, !srcloc !5811
  %56 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i103, align 8, !dbg !11032
  %57 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %56, i32 0, i32 0, !dbg !11032
  %rlock.i107 = bitcast %union.anon.4* %57 to %struct.raw_spinlock*, !dbg !11032
  %58 = load i32, i32* %retval1, align 4, !dbg !11033
  store i32 %58, i32* %retval, align 4, !dbg !11034
  br label %return, !dbg !11034

print_unlock:                                     ; preds = %if.then54, %if.then44
  call void @llvm.dbg.label(metadata !11035), !dbg !11036
  %59 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11037
  %dev97 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %59, i32 0, i32 6, !dbg !11038
  %60 = load %struct.net2280*, %struct.net2280** %dev97, align 8, !dbg !11038
  %lock98 = getelementptr inbounds %struct.net2280, %struct.net2280* %60, i32 0, i32 1, !dbg !11039
  %61 = load i64, i64* %flags, align 8, !dbg !11040
  store %struct.spinlock* %lock98, %struct.spinlock** %lock.addr.i101, align 8
  store i64 %61, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !443, metadata !5796, metadata !DIExpression()) #10, !dbg !11041
  call void @llvm.dbg.declare(metadata !443, metadata !5800, metadata !DIExpression()) #10, !dbg !11041
  store i32 1, i32* %tmp.i, align 4, !dbg !11041
  %62 = load i32, i32* %tmp.i, align 4, !dbg !11041
  call void @llvm.dbg.declare(metadata !443, metadata !5801, metadata !DIExpression()) #10, !dbg !11042
  call void @llvm.dbg.declare(metadata !443, metadata !5807, metadata !DIExpression()) #10, !dbg !11042
  store i32 1, i32* %tmp8.i, align 4, !dbg !11042
  %63 = load i32, i32* %tmp8.i, align 4, !dbg !11042
  %64 = load i64, i64* %flags.addr.i, align 8, !dbg !11043
  call void @arch_local_irq_restore(i64 %64) #15, !dbg !11043
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11044, !srcloc !5811
  %65 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i101, align 8, !dbg !11045
  %66 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %65, i32 0, i32 0, !dbg !11045
  %rlock.i102 = bitcast %union.anon.4* %66 to %struct.raw_spinlock*, !dbg !11045
  br label %print_err, !dbg !11046

print_err:                                        ; preds = %print_unlock, %if.then15, %if.then7
  call void @llvm.dbg.label(metadata !11047), !dbg !11048
  %67 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11049
  %dev99 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %67, i32 0, i32 6, !dbg !11049
  %68 = load %struct.net2280*, %struct.net2280** %dev99, align 8, !dbg !11049
  %pdev = getelementptr inbounds %struct.net2280, %struct.net2280* %68, i32 0, i32 9, !dbg !11049
  %69 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11049
  %dev100 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %69, i32 0, i32 41, !dbg !11049
  %70 = load i32, i32* %retval1, align 4, !dbg !11049
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev100, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.net2280_set_halt_and_wedge, i64 0, i64 0), i32 %70) #13, !dbg !11049
  %71 = load i32, i32* %retval1, align 4, !dbg !11050
  store i32 %71, i32* %retval, align 4, !dbg !11051
  br label %return, !dbg !11051

return:                                           ; preds = %print_err, %if.end94, %if.then
  %72 = load i32, i32* %retval, align 4, !dbg !11052
  ret i32 %72, !dbg !11052
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_halt(%struct.net2280_ep* %ep) #2 !dbg !11053 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !11054, metadata !DIExpression()), !dbg !11055
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !11056
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 6, !dbg !11057
  %1 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !11057
  %chiprev = getelementptr inbounds %struct.net2280, %struct.net2280* %1, i32 0, i32 5, !dbg !11058
  %2 = load i16, i16* %chiprev, align 2, !dbg !11058
  %conv = zext i16 %2 to i32, !dbg !11056
  %cmp = icmp eq i32 %conv, 256, !dbg !11059
  %conv1 = zext i1 %cmp to i32, !dbg !11059
  %shl = shl i32 %conv1, 15, !dbg !11060
  %conv2 = sext i32 %shl to i64, !dbg !11061
  %or = or i64 8, %conv2, !dbg !11062
  %or3 = or i64 %or, 256, !dbg !11063
  %conv4 = trunc i64 %or3 to i32, !dbg !11064
  %3 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !11065
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %3, i32 0, i32 2, !dbg !11066
  %4 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !11066
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %4, i32 0, i32 1, !dbg !11067
  %5 = bitcast i32* %ep_rsp to i8*, !dbg !11068
  call void @writel(i32 %conv4, i8* %5) #12, !dbg !11069
  ret void, !dbg !11070
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_halt(%struct.net2280_ep* %ep) #2 !dbg !11071 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !11072, metadata !DIExpression()), !dbg !11073
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !11074
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 6, !dbg !11075
  %1 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !11075
  %chiprev = getelementptr inbounds %struct.net2280, %struct.net2280* %1, i32 0, i32 5, !dbg !11076
  %2 = load i16, i16* %chiprev, align 2, !dbg !11076
  %conv = zext i16 %2 to i32, !dbg !11074
  %cmp = icmp eq i32 %conv, 256, !dbg !11077
  %conv1 = zext i1 %cmp to i32, !dbg !11077
  %shl = shl i32 %conv1, 7, !dbg !11078
  %conv2 = sext i32 %shl to i64, !dbg !11079
  %or = or i64 3, %conv2, !dbg !11080
  %conv3 = trunc i64 %or to i32, !dbg !11081
  %3 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !11082
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %3, i32 0, i32 2, !dbg !11083
  %4 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !11083
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %4, i32 0, i32 1, !dbg !11084
  %5 = bitcast i32* %ep_rsp to i8*, !dbg !11085
  call void @writel(i32 %conv3, i8* %5) #12, !dbg !11086
  ret void, !dbg !11087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @restart_dma(%struct.net2280_ep* %ep) #2 !dbg !11088 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %req = alloca %struct.net2280_request*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280_request*, align 8
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !11089, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %req, metadata !11091, metadata !DIExpression()), !dbg !11092
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !11093
  %stopped = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 10, !dbg !11095
  %bf.load = load i32, i32* %stopped, align 8, !dbg !11095
  %bf.lshr = lshr i32 %bf.load, 22, !dbg !11095
  %bf.clear = and i32 %bf.lshr, 1, !dbg !11095
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !11093
  br i1 %tobool, label %if.then, label %if.end, !dbg !11096

if.then:                                          ; preds = %entry
  br label %return, !dbg !11097

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11098, metadata !DIExpression()), !dbg !11100
  %1 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !11100
  %queue = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %1, i32 0, i32 8, !dbg !11100
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queue, i32 0, i32 0, !dbg !11100
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11100
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !11100
  store i8* %3, i8** %__mptr, align 8, !dbg !11100
  br label %do.body, !dbg !11100

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !11101

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !11100
  %add.ptr = getelementptr i8, i8* %4, i64 -112, !dbg !11100
  %5 = bitcast i8* %add.ptr to %struct.net2280_request*, !dbg !11100
  store %struct.net2280_request* %5, %struct.net2280_request** %tmp, align 8, !dbg !11101
  %6 = load %struct.net2280_request*, %struct.net2280_request** %tmp, align 8, !dbg !11100
  store %struct.net2280_request* %6, %struct.net2280_request** %req, align 8, !dbg !11103
  %7 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !11104
  %8 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !11105
  call void @start_dma(%struct.net2280_ep* %7, %struct.net2280_request* %8) #12, !dbg !11106
  br label %return, !dbg !11107

return:                                           ; preds = %do.end, %if.then
  ret void, !dbg !11107
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_stat1_irqs(%struct.net2280* %dev, i32 %stat) #2 !dbg !11108 {
entry:
  %lock.addr.i163 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i163, metadata !5567, metadata !DIExpression()), !dbg !11111
  %lock.addr.i161 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i161, metadata !5561, metadata !DIExpression()), !dbg !11115
  %lock.addr.i159 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i159, metadata !5567, metadata !DIExpression()), !dbg !11117
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5561, metadata !DIExpression()), !dbg !11125
  %dev.addr = alloca %struct.net2280*, align 8
  %stat.addr = alloca i32, align 4
  %ep = alloca %struct.net2280_ep*, align 8
  %tmp = alloca i32, align 4
  %num = alloca i32, align 4
  %mask = alloca i32, align 4
  %scratch = alloca i32, align 4
  %reset = alloca i8, align 1
  %disconnect = alloca i8, align 1
  %dma = alloca %struct.net2280_dma_regs*, align 8
  %r_dmacount = alloca i32, align 4
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !11127, metadata !DIExpression()), !dbg !11128
  store i32 %stat, i32* %stat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stat.addr, metadata !11129, metadata !DIExpression()), !dbg !11130
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !11131, metadata !DIExpression()), !dbg !11132
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !11133, metadata !DIExpression()), !dbg !11134
  call void @llvm.dbg.declare(metadata i32* %num, metadata !11135, metadata !DIExpression()), !dbg !11136
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !11137, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.declare(metadata i32* %scratch, metadata !11139, metadata !DIExpression()), !dbg !11140
  store i32 144, i32* %tmp, align 4, !dbg !11141
  store i32 448, i32* %mask, align 4, !dbg !11142
  %0 = load i32, i32* %stat.addr, align 4, !dbg !11143
  %1 = load i32, i32* %tmp, align 4, !dbg !11144
  %and = and i32 %0, %1, !dbg !11145
  %tobool = icmp ne i32 %and, 0, !dbg !11145
  br i1 %tobool, label %if.then, label %if.end41, !dbg !11146

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %reset, metadata !11147, metadata !DIExpression()), !dbg !11148
  store i8 0, i8* %reset, align 1, !dbg !11148
  call void @llvm.dbg.declare(metadata i8* %disconnect, metadata !11149, metadata !DIExpression()), !dbg !11150
  store i8 0, i8* %disconnect, align 1, !dbg !11150
  %2 = load i32, i32* %tmp, align 4, !dbg !11151
  %3 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11152
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %3, i32 0, i32 10, !dbg !11153
  %4 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !11153
  %irqstat1 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %4, i32 0, i32 11, !dbg !11154
  %5 = bitcast i32* %irqstat1 to i8*, !dbg !11155
  call void @writel(i32 %2, i8* %5) #12, !dbg !11156
  %6 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11157
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %6, i32 0, i32 0, !dbg !11158
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !11159
  %7 = load i32, i32* %speed, align 8, !dbg !11159
  %cmp = icmp ne i32 %7, 0, !dbg !11160
  br i1 %cmp, label %if.then1, label %if.end36, !dbg !11161

if.then1:                                         ; preds = %if.then
  %8 = load i32, i32* %stat.addr, align 4, !dbg !11162
  %conv = zext i32 %8 to i64, !dbg !11162
  %and2 = and i64 %conv, 128, !dbg !11164
  %tobool3 = icmp ne i64 %and2, 0, !dbg !11164
  br i1 %tobool3, label %land.lhs.true, label %if.else, !dbg !11165

land.lhs.true:                                    ; preds = %if.then1
  %9 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11166
  %usb = getelementptr inbounds %struct.net2280, %struct.net2280* %9, i32 0, i32 11, !dbg !11167
  %10 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb, align 8, !dbg !11167
  %usbctl = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %10, i32 0, i32 3, !dbg !11168
  %11 = bitcast i32* %usbctl to i8*, !dbg !11169
  %call = call i32 @readl(i8* %11) #12, !dbg !11170
  %conv4 = zext i32 %call to i64, !dbg !11170
  %and5 = and i64 %conv4, 1024, !dbg !11171
  %cmp6 = icmp eq i64 %and5, 0, !dbg !11172
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !11173

if.then8:                                         ; preds = %land.lhs.true
  store i8 1, i8* %disconnect, align 1, !dbg !11174
  br label %if.end19, !dbg !11176

if.else:                                          ; preds = %land.lhs.true, %if.then1
  %12 = load i32, i32* %stat.addr, align 4, !dbg !11177
  %conv9 = zext i32 %12 to i64, !dbg !11177
  %and10 = and i64 %conv9, 16, !dbg !11179
  %tobool11 = icmp ne i64 %and10, 0, !dbg !11179
  br i1 %tobool11, label %land.lhs.true12, label %if.end, !dbg !11180

land.lhs.true12:                                  ; preds = %if.else
  %13 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11181
  %usb13 = getelementptr inbounds %struct.net2280, %struct.net2280* %13, i32 0, i32 11, !dbg !11182
  %14 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb13, align 8, !dbg !11182
  %usbstat = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %14, i32 0, i32 4, !dbg !11183
  %15 = bitcast i32* %usbstat to i8*, !dbg !11184
  %call14 = call i32 @readl(i8* %15) #12, !dbg !11185
  %16 = load i32, i32* %mask, align 4, !dbg !11186
  %and15 = and i32 %call14, %16, !dbg !11187
  %cmp16 = icmp eq i32 %and15, 0, !dbg !11188
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !11189

if.then18:                                        ; preds = %land.lhs.true12
  store i8 1, i8* %reset, align 1, !dbg !11190
  br label %if.end, !dbg !11192

if.end:                                           ; preds = %if.then18, %land.lhs.true12, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then8
  %17 = load i8, i8* %disconnect, align 1, !dbg !11193
  %tobool20 = trunc i8 %17 to i1, !dbg !11193
  br i1 %tobool20, label %if.then24, label %lor.lhs.false, !dbg !11194

lor.lhs.false:                                    ; preds = %if.end19
  %18 = load i8, i8* %reset, align 1, !dbg !11195
  %tobool22 = trunc i8 %18 to i1, !dbg !11195
  br i1 %tobool22, label %if.then24, label %if.end35, !dbg !11196

if.then24:                                        ; preds = %lor.lhs.false, %if.end19
  %19 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11197
  %20 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11198
  %driver = getelementptr inbounds %struct.net2280, %struct.net2280* %20, i32 0, i32 3, !dbg !11199
  %21 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver, align 8, !dbg !11199
  call void @stop_activity(%struct.net2280* %19, %struct.usb_gadget_driver* %21) #12, !dbg !11200
  %22 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11201
  call void @ep0_start(%struct.net2280* %22) #12, !dbg !11202
  %23 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11203
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %23, i32 0, i32 1, !dbg !11204
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11205, !srcloc !5643
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11206
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !11206
  %rlock.i = bitcast %union.anon.4* %25 to %struct.raw_spinlock*, !dbg !11206
  %26 = load i8, i8* %reset, align 1, !dbg !11207
  %tobool25 = trunc i8 %26 to i1, !dbg !11207
  br i1 %tobool25, label %if.then26, label %if.else29, !dbg !11209

if.then26:                                        ; preds = %if.then24
  %27 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11210
  %gadget27 = getelementptr inbounds %struct.net2280, %struct.net2280* %27, i32 0, i32 0, !dbg !11211
  %28 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11212
  %driver28 = getelementptr inbounds %struct.net2280, %struct.net2280* %28, i32 0, i32 3, !dbg !11213
  %29 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver28, align 8, !dbg !11213
  call void @usb_gadget_udc_reset(%struct.usb_gadget* %gadget27, %struct.usb_gadget_driver* %29) #12, !dbg !11214
  br label %if.end33, !dbg !11214

if.else29:                                        ; preds = %if.then24
  %30 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11215
  %driver30 = getelementptr inbounds %struct.net2280, %struct.net2280* %30, i32 0, i32 3, !dbg !11216
  %31 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver30, align 8, !dbg !11216
  %disconnect31 = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %31, i32 0, i32 5, !dbg !11217
  %32 = load void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)** %disconnect31, align 8, !dbg !11217
  %33 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11218
  %gadget32 = getelementptr inbounds %struct.net2280, %struct.net2280* %33, i32 0, i32 0, !dbg !11219
  call void %32(%struct.usb_gadget* %gadget32) #12, !dbg !11220
  br label %if.end33

if.end33:                                         ; preds = %if.else29, %if.then26
  %34 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11221
  %lock34 = getelementptr inbounds %struct.net2280, %struct.net2280* %34, i32 0, i32 1, !dbg !11222
  store %struct.spinlock* %lock34, %struct.spinlock** %lock.addr.i159, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11223, !srcloc !5595
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i159, align 8, !dbg !11224
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !11224
  %rlock.i160 = bitcast %union.anon.4* %36 to %struct.raw_spinlock*, !dbg !11224
  br label %if.end158, !dbg !11225

if.end35:                                         ; preds = %lor.lhs.false
  br label %if.end36, !dbg !11226

if.end36:                                         ; preds = %if.end35, %if.then
  %37 = load i32, i32* %tmp, align 4, !dbg !11227
  %neg = xor i32 %37, -1, !dbg !11228
  %38 = load i32, i32* %stat.addr, align 4, !dbg !11229
  %and37 = and i32 %38, %neg, !dbg !11229
  store i32 %and37, i32* %stat.addr, align 4, !dbg !11229
  %39 = load i32, i32* %stat.addr, align 4, !dbg !11230
  %tobool38 = icmp ne i32 %39, 0, !dbg !11230
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !11232

if.then39:                                        ; preds = %if.end36
  br label %if.end158, !dbg !11233

if.end40:                                         ; preds = %if.end36
  br label %if.end41, !dbg !11234

if.end41:                                         ; preds = %if.end40, %entry
  store i32 4, i32* %tmp, align 4, !dbg !11235
  %40 = load i32, i32* %stat.addr, align 4, !dbg !11236
  %41 = load i32, i32* %tmp, align 4, !dbg !11237
  %and42 = and i32 %40, %41, !dbg !11238
  %tobool43 = icmp ne i32 %and42, 0, !dbg !11238
  br i1 %tobool43, label %if.then44, label %if.end77, !dbg !11239

if.then44:                                        ; preds = %if.end41
  %42 = load i32, i32* %tmp, align 4, !dbg !11240
  %43 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11241
  %regs45 = getelementptr inbounds %struct.net2280, %struct.net2280* %43, i32 0, i32 10, !dbg !11242
  %44 = load %struct.net2280_regs*, %struct.net2280_regs** %regs45, align 8, !dbg !11242
  %irqstat146 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %44, i32 0, i32 11, !dbg !11243
  %45 = bitcast i32* %irqstat146 to i8*, !dbg !11244
  call void @writel(i32 %42, i8* %45) #12, !dbg !11245
  %46 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11246
  %lock47 = getelementptr inbounds %struct.net2280, %struct.net2280* %46, i32 0, i32 1, !dbg !11247
  store %struct.spinlock* %lock47, %struct.spinlock** %lock.addr.i161, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11248, !srcloc !5643
  %47 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i161, align 8, !dbg !11249
  %48 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %47, i32 0, i32 0, !dbg !11249
  %rlock.i162 = bitcast %union.anon.4* %48 to %struct.raw_spinlock*, !dbg !11249
  %49 = load i32, i32* %stat.addr, align 4, !dbg !11250
  %conv48 = zext i32 %49 to i64, !dbg !11250
  %and49 = and i64 %conv48, 8, !dbg !11252
  %tobool50 = icmp ne i64 %and49, 0, !dbg !11252
  br i1 %tobool50, label %if.then51, label %if.else65, !dbg !11253

if.then51:                                        ; preds = %if.then44
  %50 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11254
  %driver52 = getelementptr inbounds %struct.net2280, %struct.net2280* %50, i32 0, i32 3, !dbg !11257
  %51 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver52, align 8, !dbg !11257
  %suspend = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %51, i32 0, i32 6, !dbg !11258
  %52 = load void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)** %suspend, align 8, !dbg !11258
  %tobool53 = icmp ne void (%struct.usb_gadget*)* %52, null, !dbg !11254
  br i1 %tobool53, label %if.then54, label %if.end58, !dbg !11259

if.then54:                                        ; preds = %if.then51
  %53 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11260
  %driver55 = getelementptr inbounds %struct.net2280, %struct.net2280* %53, i32 0, i32 3, !dbg !11261
  %54 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver55, align 8, !dbg !11261
  %suspend56 = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %54, i32 0, i32 6, !dbg !11262
  %55 = load void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)** %suspend56, align 8, !dbg !11262
  %56 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11263
  %gadget57 = getelementptr inbounds %struct.net2280, %struct.net2280* %56, i32 0, i32 0, !dbg !11264
  call void %55(%struct.usb_gadget* %gadget57) #12, !dbg !11260
  br label %if.end58, !dbg !11260

if.end58:                                         ; preds = %if.then54, %if.then51
  %57 = load i8, i8* @enable_suspend, align 1, !dbg !11265
  %tobool59 = trunc i8 %57 to i1, !dbg !11265
  br i1 %tobool59, label %if.end64, label %if.then60, !dbg !11267

if.then60:                                        ; preds = %if.end58
  %58 = load i32, i32* %stat.addr, align 4, !dbg !11268
  %conv61 = zext i32 %58 to i64, !dbg !11268
  %and62 = and i64 %conv61, -9, !dbg !11268
  %conv63 = trunc i64 %and62 to i32, !dbg !11268
  store i32 %conv63, i32* %stat.addr, align 4, !dbg !11268
  br label %if.end64, !dbg !11269

if.end64:                                         ; preds = %if.then60, %if.end58
  br label %if.end73, !dbg !11270

if.else65:                                        ; preds = %if.then44
  %59 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11271
  %driver66 = getelementptr inbounds %struct.net2280, %struct.net2280* %59, i32 0, i32 3, !dbg !11274
  %60 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver66, align 8, !dbg !11274
  %resume = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %60, i32 0, i32 7, !dbg !11275
  %61 = load void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)** %resume, align 8, !dbg !11275
  %tobool67 = icmp ne void (%struct.usb_gadget*)* %61, null, !dbg !11271
  br i1 %tobool67, label %if.then68, label %if.end72, !dbg !11276

if.then68:                                        ; preds = %if.else65
  %62 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11277
  %driver69 = getelementptr inbounds %struct.net2280, %struct.net2280* %62, i32 0, i32 3, !dbg !11278
  %63 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver69, align 8, !dbg !11278
  %resume70 = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %63, i32 0, i32 7, !dbg !11279
  %64 = load void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)** %resume70, align 8, !dbg !11279
  %65 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11280
  %gadget71 = getelementptr inbounds %struct.net2280, %struct.net2280* %65, i32 0, i32 0, !dbg !11281
  call void %64(%struct.usb_gadget* %gadget71) #12, !dbg !11277
  br label %if.end72, !dbg !11277

if.end72:                                         ; preds = %if.then68, %if.else65
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.end64
  %66 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11282
  %lock74 = getelementptr inbounds %struct.net2280, %struct.net2280* %66, i32 0, i32 1, !dbg !11283
  store %struct.spinlock* %lock74, %struct.spinlock** %lock.addr.i163, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11284, !srcloc !5595
  %67 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i163, align 8, !dbg !11285
  %68 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %67, i32 0, i32 0, !dbg !11285
  %rlock.i164 = bitcast %union.anon.4* %68 to %struct.raw_spinlock*, !dbg !11285
  %69 = load i32, i32* %tmp, align 4, !dbg !11286
  %neg75 = xor i32 %69, -1, !dbg !11287
  %70 = load i32, i32* %stat.addr, align 4, !dbg !11288
  %and76 = and i32 %70, %neg75, !dbg !11288
  store i32 %and76, i32* %stat.addr, align 4, !dbg !11288
  br label %if.end77, !dbg !11289

if.end77:                                         ; preds = %if.end73, %if.end41
  %71 = load i32, i32* %stat.addr, align 4, !dbg !11290
  %tobool78 = icmp ne i32 %71, 0, !dbg !11290
  br i1 %tobool78, label %if.then79, label %if.end82, !dbg !11292

if.then79:                                        ; preds = %if.end77
  %72 = load i32, i32* %stat.addr, align 4, !dbg !11293
  %73 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11294
  %regs80 = getelementptr inbounds %struct.net2280, %struct.net2280* %73, i32 0, i32 10, !dbg !11295
  %74 = load %struct.net2280_regs*, %struct.net2280_regs** %regs80, align 8, !dbg !11295
  %irqstat181 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %74, i32 0, i32 11, !dbg !11296
  %75 = bitcast i32* %irqstat181 to i8*, !dbg !11297
  call void @writel(i32 %72, i8* %75) #12, !dbg !11298
  br label %if.end82, !dbg !11298

if.end82:                                         ; preds = %if.then79, %if.end77
  %76 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11299
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %76, i32 0, i32 8, !dbg !11301
  %77 = load i64, i64* %quirks, align 8, !dbg !11301
  %and83 = and i64 %77, 2, !dbg !11302
  %tobool84 = icmp ne i64 %and83, 0, !dbg !11302
  br i1 %tobool84, label %if.then85, label %if.else89, !dbg !11303

if.then85:                                        ; preds = %if.end82
  %78 = load i32, i32* %stat.addr, align 4, !dbg !11304
  %conv86 = zext i32 %78 to i64, !dbg !11304
  %and87 = and i64 %conv86, -76, !dbg !11304
  %conv88 = trunc i64 %and87 to i32, !dbg !11304
  store i32 %conv88, i32* %stat.addr, align 4, !dbg !11304
  br label %if.end93, !dbg !11305

if.else89:                                        ; preds = %if.end82
  %79 = load i32, i32* %stat.addr, align 4, !dbg !11306
  %conv90 = zext i32 %79 to i64, !dbg !11306
  %and91 = and i64 %conv90, -16452, !dbg !11306
  %conv92 = trunc i64 %and91 to i32, !dbg !11306
  store i32 %conv92, i32* %stat.addr, align 4, !dbg !11306
  br label %if.end93

if.end93:                                         ; preds = %if.else89, %if.then85
  %80 = load i32, i32* %stat.addr, align 4, !dbg !11307
  %tobool94 = icmp ne i32 %80, 0, !dbg !11307
  br i1 %tobool94, label %if.end96, label %if.then95, !dbg !11309

if.then95:                                        ; preds = %if.end93
  br label %if.end158, !dbg !11310

if.end96:                                         ; preds = %if.end93
  %81 = load i32, i32* %stat.addr, align 4, !dbg !11311
  %conv97 = zext i32 %81 to i64, !dbg !11311
  %and98 = and i64 %conv97, 7680, !dbg !11312
  %conv99 = trunc i64 %and98 to i32, !dbg !11311
  store i32 %conv99, i32* %scratch, align 4, !dbg !11313
  %82 = load i32, i32* %stat.addr, align 4, !dbg !11314
  %conv100 = zext i32 %82 to i64, !dbg !11314
  %and101 = and i64 %conv100, -7681, !dbg !11314
  %conv102 = trunc i64 %and101 to i32, !dbg !11314
  store i32 %conv102, i32* %stat.addr, align 4, !dbg !11314
  %83 = load i32, i32* %scratch, align 4, !dbg !11315
  %shr = lshr i32 %83, 9, !dbg !11315
  store i32 %shr, i32* %scratch, align 4, !dbg !11315
  store i32 0, i32* %num, align 4, !dbg !11316
  br label %for.cond, !dbg !11318

for.cond:                                         ; preds = %for.inc, %if.end96
  %84 = load i32, i32* %scratch, align 4, !dbg !11319
  %tobool103 = icmp ne i32 %84, 0, !dbg !11321
  br i1 %tobool103, label %for.body, label %for.end, !dbg !11321

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.net2280_dma_regs** %dma, metadata !11322, metadata !DIExpression()), !dbg !11324
  %85 = load i32, i32* %num, align 4, !dbg !11325
  %sh_prom = zext i32 %85 to i64, !dbg !11325
  %shl = shl i64 1, %sh_prom, !dbg !11325
  %conv104 = trunc i64 %shl to i32, !dbg !11325
  store i32 %conv104, i32* %tmp, align 4, !dbg !11326
  %86 = load i32, i32* %tmp, align 4, !dbg !11327
  %87 = load i32, i32* %scratch, align 4, !dbg !11329
  %and105 = and i32 %86, %87, !dbg !11330
  %cmp106 = icmp eq i32 %and105, 0, !dbg !11331
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !11332

if.then108:                                       ; preds = %for.body
  br label %for.inc, !dbg !11333

if.end109:                                        ; preds = %for.body
  %88 = load i32, i32* %tmp, align 4, !dbg !11334
  %89 = load i32, i32* %scratch, align 4, !dbg !11335
  %xor = xor i32 %89, %88, !dbg !11335
  store i32 %xor, i32* %scratch, align 4, !dbg !11335
  %90 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11336
  %ep110 = getelementptr inbounds %struct.net2280, %struct.net2280* %90, i32 0, i32 2, !dbg !11337
  %91 = load i32, i32* %num, align 4, !dbg !11338
  %add = add i32 %91, 1, !dbg !11339
  %idxprom = zext i32 %add to i64, !dbg !11336
  %arrayidx = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep110, i64 0, i64 %idxprom, !dbg !11336
  store %struct.net2280_ep* %arrayidx, %struct.net2280_ep** %ep, align 8, !dbg !11340
  %92 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11341
  %dma111 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %92, i32 0, i32 3, !dbg !11342
  %93 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma111, align 8, !dbg !11342
  store %struct.net2280_dma_regs* %93, %struct.net2280_dma_regs** %dma, align 8, !dbg !11343
  %94 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !11344
  %tobool112 = icmp ne %struct.net2280_dma_regs* %94, null, !dbg !11344
  br i1 %tobool112, label %if.end114, label %if.then113, !dbg !11346

if.then113:                                       ; preds = %if.end109
  br label %for.inc, !dbg !11347

if.end114:                                        ; preds = %if.end109
  %95 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !11348
  %dmastat = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %95, i32 0, i32 1, !dbg !11349
  %96 = bitcast i32* %dmastat to i8*, !dbg !11350
  %call115 = call i32 @readl(i8* %96) #12, !dbg !11351
  store i32 %call115, i32* %tmp, align 4, !dbg !11352
  %97 = load i32, i32* %tmp, align 4, !dbg !11353
  %98 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !11354
  %dmastat116 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %98, i32 0, i32 1, !dbg !11355
  %99 = bitcast i32* %dmastat116 to i8*, !dbg !11356
  call void @writel(i32 %97, i8* %99) #12, !dbg !11357
  %100 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11358
  %quirks117 = getelementptr inbounds %struct.net2280, %struct.net2280* %100, i32 0, i32 8, !dbg !11360
  %101 = load i64, i64* %quirks117, align 8, !dbg !11360
  %and118 = and i64 %101, 8, !dbg !11361
  %tobool119 = icmp ne i64 %and118, 0, !dbg !11361
  br i1 %tobool119, label %if.then120, label %if.end132, !dbg !11362

if.then120:                                       ; preds = %if.end114
  call void @llvm.dbg.declare(metadata i32* %r_dmacount, metadata !11363, metadata !DIExpression()), !dbg !11365
  %102 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !11366
  %dmacount = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %102, i32 0, i32 3, !dbg !11367
  %103 = bitcast i32* %dmacount to i8*, !dbg !11368
  %call121 = call i32 @readl(i8* %103) #12, !dbg !11369
  store i32 %call121, i32* %r_dmacount, align 4, !dbg !11365
  %104 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11370
  %is_in = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %104, i32 0, i32 10, !dbg !11372
  %bf.load = load i32, i32* %is_in, align 8, !dbg !11372
  %bf.lshr = lshr i32 %bf.load, 24, !dbg !11372
  %bf.clear = and i32 %bf.lshr, 1, !dbg !11372
  %tobool122 = icmp ne i32 %bf.clear, 0, !dbg !11370
  br i1 %tobool122, label %if.end131, label %land.lhs.true123, !dbg !11373

land.lhs.true123:                                 ; preds = %if.then120
  %105 = load i32, i32* %r_dmacount, align 4, !dbg !11374
  %and124 = and i32 %105, 16777215, !dbg !11375
  %tobool125 = icmp ne i32 %and124, 0, !dbg !11375
  br i1 %tobool125, label %land.lhs.true126, label %if.end131, !dbg !11376

land.lhs.true126:                                 ; preds = %land.lhs.true123
  %106 = load i32, i32* %tmp, align 4, !dbg !11377
  %conv127 = zext i32 %106 to i64, !dbg !11377
  %and128 = and i64 %conv127, 16777216, !dbg !11378
  %tobool129 = icmp ne i64 %and128, 0, !dbg !11378
  br i1 %tobool129, label %if.then130, label %if.end131, !dbg !11379

if.then130:                                       ; preds = %land.lhs.true126
  br label %for.inc, !dbg !11380

if.end131:                                        ; preds = %land.lhs.true126, %land.lhs.true123, %if.then120
  br label %if.end132, !dbg !11381

if.end132:                                        ; preds = %if.end131, %if.end114
  %107 = load i32, i32* %tmp, align 4, !dbg !11382
  %conv133 = zext i32 %107 to i64, !dbg !11382
  %and134 = and i64 %conv133, 16777216, !dbg !11384
  %tobool135 = icmp ne i64 %and134, 0, !dbg !11384
  br i1 %tobool135, label %if.end137, label %if.then136, !dbg !11385

if.then136:                                       ; preds = %if.end132
  br label %for.inc, !dbg !11386

if.end137:                                        ; preds = %if.end132
  %108 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11388
  %dma138 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %108, i32 0, i32 3, !dbg !11389
  %109 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma138, align 8, !dbg !11389
  call void @stop_dma(%struct.net2280_dma_regs* %109) #12, !dbg !11390
  %110 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11391
  %call139 = call i32 @scan_dma_completions(%struct.net2280_ep* %110) #12, !dbg !11392
  %111 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11393
  %queue = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %111, i32 0, i32 8, !dbg !11395
  %call140 = call i32 @list_empty(%struct.list_head* %queue) #12, !dbg !11396
  %tobool141 = icmp ne i32 %call140, 0, !dbg !11396
  br i1 %tobool141, label %if.end144, label %if.then142, !dbg !11397

if.then142:                                       ; preds = %if.end137
  %112 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !11398
  %dmactl = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %112, i32 0, i32 0, !dbg !11400
  %113 = bitcast i32* %dmactl to i8*, !dbg !11401
  %call143 = call i32 @readl(i8* %113) #12, !dbg !11402
  store i32 %call143, i32* %tmp, align 4, !dbg !11403
  %114 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11404
  call void @restart_dma(%struct.net2280_ep* %114) #12, !dbg !11405
  br label %if.end144, !dbg !11406

if.end144:                                        ; preds = %if.then142, %if.end137
  %115 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11407
  %irqs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %115, i32 0, i32 7, !dbg !11408
  %116 = load i64, i64* %irqs, align 8, !dbg !11409
  %inc = add i64 %116, 1, !dbg !11409
  store i64 %inc, i64* %irqs, align 8, !dbg !11409
  br label %for.inc, !dbg !11410

for.inc:                                          ; preds = %if.end144, %if.then136, %if.then130, %if.then113, %if.then108
  %117 = load i32, i32* %num, align 4, !dbg !11411
  %inc145 = add i32 %117, 1, !dbg !11411
  store i32 %inc145, i32* %num, align 4, !dbg !11411
  br label %for.cond, !dbg !11412, !llvm.loop !11413

for.end:                                          ; preds = %for.cond
  %118 = load i32, i32* %stat.addr, align 4, !dbg !11415
  %conv146 = zext i32 %118 to i64, !dbg !11415
  %and147 = and i64 %conv146, 1703936, !dbg !11417
  %tobool148 = icmp ne i64 %and147, 0, !dbg !11417
  br i1 %tobool148, label %if.then149, label %if.end155, !dbg !11418

if.then149:                                       ; preds = %for.end
  %119 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11419
  %pdev = getelementptr inbounds %struct.net2280, %struct.net2280* %119, i32 0, i32 9, !dbg !11419
  %120 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11419
  %dev150 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %120, i32 0, i32 41, !dbg !11419
  %121 = load i32, i32* %stat.addr, align 4, !dbg !11419
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev150, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.46, i64 0, i64 0), i32 %121) #13, !dbg !11419
  %122 = load i32, i32* %stat.addr, align 4, !dbg !11421
  %conv151 = zext i32 %122 to i64, !dbg !11421
  %and152 = and i64 %conv151, -1703937, !dbg !11421
  %conv153 = trunc i64 %and152 to i32, !dbg !11421
  store i32 %conv153, i32* %stat.addr, align 4, !dbg !11421
  %123 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11422
  %124 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11423
  %driver154 = getelementptr inbounds %struct.net2280, %struct.net2280* %124, i32 0, i32 3, !dbg !11424
  %125 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver154, align 8, !dbg !11424
  call void @stop_activity(%struct.net2280* %123, %struct.usb_gadget_driver* %125) #12, !dbg !11425
  %126 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11426
  call void @ep0_start(%struct.net2280* %126) #12, !dbg !11427
  store i32 0, i32* %stat.addr, align 4, !dbg !11428
  br label %if.end155, !dbg !11429

if.end155:                                        ; preds = %if.then149, %for.end
  %127 = load i32, i32* %stat.addr, align 4, !dbg !11430
  %tobool156 = icmp ne i32 %127, 0, !dbg !11430
  br i1 %tobool156, label %if.then157, label %if.end158, !dbg !11432

if.then157:                                       ; preds = %if.end155
  br label %if.end158, !dbg !11433

if.end158:                                        ; preds = %if.end33, %if.then39, %if.then95, %if.then157, %if.end155
  ret void, !dbg !11434
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_stat0_irqs(%struct.net2280* %dev, i32 %stat) #2 !dbg !11435 {
entry:
  %lock.addr.i298 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i298, metadata !5567, metadata !DIExpression()), !dbg !11436
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5561, metadata !DIExpression()), !dbg !11441
  %dev.addr = alloca %struct.net2280*, align 8
  %stat.addr = alloca i32, align 4
  %ep = alloca %struct.net2280_ep*, align 8
  %num = alloca i32, align 4
  %scratch = alloca i32, align 4
  %u = alloca %union.anon.68, align 4
  %tmp = alloca i32, align 4
  %req = alloca %struct.net2280_request*, align 8
  %val = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp49 = alloca %struct.net2280_request*, align 8
  %e = alloca %struct.net2280_ep*, align 8
  %status = alloca i32, align 4
  %e167 = alloca %struct.net2280_ep*, align 8
  %e213 = alloca %struct.net2280_ep*, align 8
  %mask = alloca i32, align 4
  %t = alloca i32, align 4
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !11443, metadata !DIExpression()), !dbg !11444
  store i32 %stat, i32* %stat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stat.addr, metadata !11445, metadata !DIExpression()), !dbg !11446
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !11447, metadata !DIExpression()), !dbg !11448
  call void @llvm.dbg.declare(metadata i32* %num, metadata !11449, metadata !DIExpression()), !dbg !11450
  call void @llvm.dbg.declare(metadata i32* %scratch, metadata !11451, metadata !DIExpression()), !dbg !11452
  %0 = load i32, i32* %stat.addr, align 4, !dbg !11453
  %conv = zext i32 %0 to i64, !dbg !11453
  %and = and i64 %conv, -4097, !dbg !11453
  %conv1 = trunc i64 %and to i32, !dbg !11453
  store i32 %conv1, i32* %stat.addr, align 4, !dbg !11453
  %1 = load i32, i32* %stat.addr, align 4, !dbg !11454
  %tobool = icmp ne i32 %1, 0, !dbg !11454
  br i1 %tobool, label %if.end, label %if.then, !dbg !11456

if.then:                                          ; preds = %entry
  br label %if.end297, !dbg !11457

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %stat.addr, align 4, !dbg !11458
  %conv2 = zext i32 %2 to i64, !dbg !11458
  %and3 = and i64 %conv2, 128, !dbg !11458
  %tobool4 = icmp ne i64 %and3, 0, !dbg !11458
  %lnot = xor i1 %tobool4, true, !dbg !11458
  %lnot5 = xor i1 %lnot, true, !dbg !11458
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !11458
  %conv6 = sext i32 %lnot.ext to i64, !dbg !11458
  %tobool7 = icmp ne i64 %conv6, 0, !dbg !11458
  br i1 %tobool7, label %if.then8, label %if.end267, !dbg !11459

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %union.anon.68* %u, metadata !11460, metadata !DIExpression()), !dbg !11465
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !11466, metadata !DIExpression()), !dbg !11467
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %req, metadata !11468, metadata !DIExpression()), !dbg !11469
  %3 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11470
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %3, i32 0, i32 0, !dbg !11472
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !11473
  %4 = load i32, i32* %speed, align 8, !dbg !11473
  %cmp = icmp eq i32 %4, 0, !dbg !11474
  br i1 %cmp, label %if.then10, label %if.end38, !dbg !11475

if.then10:                                        ; preds = %if.then8
  call void @llvm.dbg.declare(metadata i32* %val, metadata !11476, metadata !DIExpression()), !dbg !11478
  %5 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11479
  %usb = getelementptr inbounds %struct.net2280, %struct.net2280* %5, i32 0, i32 11, !dbg !11480
  %6 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb, align 8, !dbg !11480
  %usbstat = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %6, i32 0, i32 4, !dbg !11481
  %7 = bitcast i32* %usbstat to i8*, !dbg !11482
  %call = call i32 @readl(i8* %7) #12, !dbg !11483
  store i32 %call, i32* %val, align 4, !dbg !11478
  %8 = load i32, i32* %val, align 4, !dbg !11484
  %conv11 = zext i32 %8 to i64, !dbg !11484
  %and12 = and i64 %conv11, 256, !dbg !11486
  %tobool13 = icmp ne i64 %and12, 0, !dbg !11486
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !11487

if.then14:                                        ; preds = %if.then10
  %9 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11488
  %gadget15 = getelementptr inbounds %struct.net2280, %struct.net2280* %9, i32 0, i32 0, !dbg !11490
  %speed16 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget15, i32 0, i32 5, !dbg !11491
  store i32 5, i32* %speed16, align 8, !dbg !11492
  %10 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11493
  %ep17 = getelementptr inbounds %struct.net2280, %struct.net2280* %10, i32 0, i32 2, !dbg !11494
  %arrayidx = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep17, i64 0, i64 0, !dbg !11493
  %ep18 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx, i32 0, i32 0, !dbg !11495
  call void @usb_ep_set_maxpacket_limit(%struct.usb_ep* %ep18, i32 512) #12, !dbg !11496
  br label %if.end35, !dbg !11497

if.else:                                          ; preds = %if.then10
  %11 = load i32, i32* %val, align 4, !dbg !11498
  %conv19 = zext i32 %11 to i64, !dbg !11498
  %and20 = and i64 %conv19, 128, !dbg !11500
  %tobool21 = icmp ne i64 %and20, 0, !dbg !11500
  br i1 %tobool21, label %if.then22, label %if.else28, !dbg !11501

if.then22:                                        ; preds = %if.else
  %12 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11502
  %gadget23 = getelementptr inbounds %struct.net2280, %struct.net2280* %12, i32 0, i32 0, !dbg !11504
  %speed24 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget23, i32 0, i32 5, !dbg !11505
  store i32 3, i32* %speed24, align 8, !dbg !11506
  %13 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11507
  %ep25 = getelementptr inbounds %struct.net2280, %struct.net2280* %13, i32 0, i32 2, !dbg !11508
  %arrayidx26 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep25, i64 0, i64 0, !dbg !11507
  %ep27 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx26, i32 0, i32 0, !dbg !11509
  call void @usb_ep_set_maxpacket_limit(%struct.usb_ep* %ep27, i32 64) #12, !dbg !11510
  br label %if.end34, !dbg !11511

if.else28:                                        ; preds = %if.else
  %14 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11512
  %gadget29 = getelementptr inbounds %struct.net2280, %struct.net2280* %14, i32 0, i32 0, !dbg !11514
  %speed30 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget29, i32 0, i32 5, !dbg !11515
  store i32 2, i32* %speed30, align 8, !dbg !11516
  %15 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11517
  %ep31 = getelementptr inbounds %struct.net2280, %struct.net2280* %15, i32 0, i32 2, !dbg !11518
  %arrayidx32 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep31, i64 0, i64 0, !dbg !11517
  %ep33 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %arrayidx32, i32 0, i32 0, !dbg !11519
  call void @usb_ep_set_maxpacket_limit(%struct.usb_ep* %ep33, i32 64) #12, !dbg !11520
  br label %if.end34

if.end34:                                         ; preds = %if.else28, %if.then22
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then14
  %16 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11521
  %17 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11522
  %gadget36 = getelementptr inbounds %struct.net2280, %struct.net2280* %17, i32 0, i32 0, !dbg !11523
  %speed37 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget36, i32 0, i32 5, !dbg !11524
  %18 = load i32, i32* %speed37, align 8, !dbg !11524
  call void @net2280_led_speed(%struct.net2280* %16, i32 %18) #12, !dbg !11525
  br label %if.end38, !dbg !11526

if.end38:                                         ; preds = %if.end35, %if.then8
  %19 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11527
  %ep39 = getelementptr inbounds %struct.net2280, %struct.net2280* %19, i32 0, i32 2, !dbg !11528
  %arrayidx40 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep39, i64 0, i64 0, !dbg !11527
  store %struct.net2280_ep* %arrayidx40, %struct.net2280_ep** %ep, align 8, !dbg !11529
  %20 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11530
  %irqs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %20, i32 0, i32 7, !dbg !11531
  %21 = load i64, i64* %irqs, align 8, !dbg !11532
  %inc = add i64 %21, 1, !dbg !11532
  store i64 %inc, i64* %irqs, align 8, !dbg !11532
  %22 = load i32, i32* %stat.addr, align 4, !dbg !11533
  %conv41 = zext i32 %22 to i64, !dbg !11533
  %and42 = and i64 %conv41, -2, !dbg !11533
  %conv43 = trunc i64 %and42 to i32, !dbg !11533
  store i32 %conv43, i32* %stat.addr, align 4, !dbg !11533
  br label %while.cond, !dbg !11534

while.cond:                                       ; preds = %do.end, %if.end38
  %23 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11535
  %queue = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %23, i32 0, i32 8, !dbg !11536
  %call44 = call i32 @list_empty(%struct.list_head* %queue) #12, !dbg !11537
  %tobool45 = icmp ne i32 %call44, 0, !dbg !11538
  %lnot46 = xor i1 %tobool45, true, !dbg !11538
  br i1 %lnot46, label %while.body, label %while.end, !dbg !11534

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11539, metadata !DIExpression()), !dbg !11542
  %24 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11542
  %queue48 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %24, i32 0, i32 8, !dbg !11542
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queue48, i32 0, i32 0, !dbg !11542
  %25 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11542
  %26 = bitcast %struct.list_head* %25 to i8*, !dbg !11542
  store i8* %26, i8** %__mptr, align 8, !dbg !11542
  br label %do.body, !dbg !11542

do.body:                                          ; preds = %while.body
  br label %do.end, !dbg !11543

do.end:                                           ; preds = %do.body
  %27 = load i8*, i8** %__mptr, align 8, !dbg !11542
  %add.ptr = getelementptr i8, i8* %27, i64 -112, !dbg !11542
  %28 = bitcast i8* %add.ptr to %struct.net2280_request*, !dbg !11542
  store %struct.net2280_request* %28, %struct.net2280_request** %tmp49, align 8, !dbg !11543
  %29 = load %struct.net2280_request*, %struct.net2280_request** %tmp49, align 8, !dbg !11542
  store %struct.net2280_request* %29, %struct.net2280_request** %req, align 8, !dbg !11545
  %30 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11546
  %31 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !11547
  %32 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !11548
  %req50 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %32, i32 0, i32 0, !dbg !11549
  %actual = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req50, i32 0, i32 12, !dbg !11550
  %33 = load i32, i32* %actual, align 8, !dbg !11550
  %34 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !11551
  %req51 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %34, i32 0, i32 0, !dbg !11552
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req51, i32 0, i32 1, !dbg !11553
  %35 = load i32, i32* %length, align 8, !dbg !11553
  %cmp52 = icmp eq i32 %33, %35, !dbg !11554
  %36 = zext i1 %cmp52 to i64, !dbg !11555
  %cond = select i1 %cmp52, i32 0, i32 -71, !dbg !11555
  call void @done(%struct.net2280_ep* %30, %struct.net2280_request* %31, i32 %cond) #12, !dbg !11556
  br label %while.cond, !dbg !11534, !llvm.loop !11557

while.end:                                        ; preds = %while.cond
  %37 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11559
  %stopped = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %37, i32 0, i32 10, !dbg !11560
  %bf.load = load i32, i32* %stopped, align 8, !dbg !11561
  %bf.clear = and i32 %bf.load, -4194305, !dbg !11561
  store i32 %bf.clear, i32* %stopped, align 8, !dbg !11561
  %38 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11562
  %protocol_stall = getelementptr inbounds %struct.net2280, %struct.net2280* %38, i32 0, i32 4, !dbg !11563
  %bf.load54 = load i16, i16* %protocol_stall, align 8, !dbg !11564
  %bf.clear55 = and i16 %bf.load54, -3, !dbg !11564
  store i16 %bf.clear55, i16* %protocol_stall, align 8, !dbg !11564
  %39 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11565
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %39, i32 0, i32 8, !dbg !11567
  %40 = load i64, i64* %quirks, align 8, !dbg !11567
  %and56 = and i64 %40, 8, !dbg !11568
  %tobool57 = icmp ne i64 %and56, 0, !dbg !11568
  br i1 %tobool57, label %if.end79, label %if.then58, !dbg !11569

if.then58:                                        ; preds = %while.end
  %41 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11570
  %dev59 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %41, i32 0, i32 6, !dbg !11573
  %42 = load %struct.net2280*, %struct.net2280** %dev59, align 8, !dbg !11573
  %quirks60 = getelementptr inbounds %struct.net2280, %struct.net2280* %42, i32 0, i32 8, !dbg !11574
  %43 = load i64, i64* %quirks60, align 8, !dbg !11574
  %and61 = and i64 %43, 2, !dbg !11575
  %tobool62 = icmp ne i64 %and61, 0, !dbg !11575
  br i1 %tobool62, label %if.then63, label %if.else64, !dbg !11576

if.then63:                                        ; preds = %if.then58
  store i32 12288, i32* %tmp, align 4, !dbg !11577
  br label %if.end65, !dbg !11578

if.else64:                                        ; preds = %if.then58
  store i32 0, i32* %tmp, align 4, !dbg !11579
  br label %if.end65

if.end65:                                         ; preds = %if.else64, %if.then63
  %44 = load i32, i32* %tmp, align 4, !dbg !11580
  %conv66 = sext i32 %44 to i64, !dbg !11580
  %or = or i64 %conv66, 2097152, !dbg !11581
  %or67 = or i64 %or, 1048576, !dbg !11582
  %or68 = or i64 %or67, 524288, !dbg !11583
  %or69 = or i64 %or68, 262144, !dbg !11584
  %or70 = or i64 %or69, 131072, !dbg !11585
  %or71 = or i64 %or70, 65536, !dbg !11586
  %or72 = or i64 %or71, 64, !dbg !11587
  %or73 = or i64 %or72, 32, !dbg !11588
  %or74 = or i64 %or73, 8, !dbg !11589
  %or75 = or i64 %or74, 4, !dbg !11590
  %or76 = or i64 %or75, 2, !dbg !11591
  %or77 = or i64 %or76, 1, !dbg !11592
  %conv78 = trunc i64 %or77 to i32, !dbg !11580
  %45 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11593
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %45, i32 0, i32 2, !dbg !11594
  %46 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !11594
  %ep_stat = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %46, i32 0, i32 3, !dbg !11595
  %47 = bitcast i32* %ep_stat to i8*, !dbg !11596
  call void @writel(i32 %conv78, i8* %47) #12, !dbg !11597
  br label %if.end79, !dbg !11598

if.end79:                                         ; preds = %if.end65, %while.end
  %48 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11599
  %usb80 = getelementptr inbounds %struct.net2280, %struct.net2280* %48, i32 0, i32 11, !dbg !11600
  %49 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb80, align 8, !dbg !11600
  %setup0123 = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %49, i32 0, i32 6, !dbg !11601
  %50 = bitcast i32* %setup0123 to i8*, !dbg !11602
  %call81 = call i32 @readl(i8* %50) #12, !dbg !11603
  %raw = bitcast %union.anon.68* %u to [2 x i32]*, !dbg !11604
  %arrayidx82 = getelementptr [2 x i32], [2 x i32]* %raw, i64 0, i64 0, !dbg !11605
  store i32 %call81, i32* %arrayidx82, align 4, !dbg !11606
  %51 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11607
  %usb83 = getelementptr inbounds %struct.net2280, %struct.net2280* %51, i32 0, i32 11, !dbg !11608
  %52 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb83, align 8, !dbg !11608
  %setup4567 = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %52, i32 0, i32 7, !dbg !11609
  %53 = bitcast i32* %setup4567 to i8*, !dbg !11610
  %call84 = call i32 @readl(i8* %53) #12, !dbg !11611
  %raw85 = bitcast %union.anon.68* %u to [2 x i32]*, !dbg !11612
  %arrayidx86 = getelementptr [2 x i32], [2 x i32]* %raw85, i64 0, i64 1, !dbg !11613
  store i32 %call84, i32* %arrayidx86, align 4, !dbg !11614
  br label %do.body87, !dbg !11615

do.body87:                                        ; preds = %if.end79
  %raw88 = bitcast %union.anon.68* %u to [2 x i32]*, !dbg !11616
  %arrayidx89 = getelementptr [2 x i32], [2 x i32]* %raw88, i64 0, i64 0, !dbg !11616
  br label %do.end90, !dbg !11616

do.end90:                                         ; preds = %do.body87
  br label %do.body91, !dbg !11618

do.body91:                                        ; preds = %do.end90
  %raw92 = bitcast %union.anon.68* %u to [2 x i32]*, !dbg !11619
  %arrayidx93 = getelementptr [2 x i32], [2 x i32]* %raw92, i64 0, i64 1, !dbg !11619
  br label %do.end94, !dbg !11619

do.end94:                                         ; preds = %do.body91
  %54 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11621
  %quirks95 = getelementptr inbounds %struct.net2280, %struct.net2280* %54, i32 0, i32 8, !dbg !11623
  %55 = load i64, i64* %quirks95, align 8, !dbg !11623
  %and96 = and i64 %55, 8, !dbg !11624
  %tobool97 = icmp ne i64 %and96, 0, !dbg !11624
  br i1 %tobool97, label %land.lhs.true, label %if.end102, !dbg !11625

land.lhs.true:                                    ; preds = %do.end94
  %56 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11626
  %bug7734_patched = getelementptr inbounds %struct.net2280, %struct.net2280* %56, i32 0, i32 4, !dbg !11627
  %bf.load98 = load i16, i16* %bug7734_patched, align 8, !dbg !11627
  %bf.lshr = lshr i16 %bf.load98, 11, !dbg !11627
  %bf.clear99 = and i16 %bf.lshr, 1, !dbg !11627
  %bf.cast = zext i16 %bf.clear99 to i32, !dbg !11627
  %tobool100 = icmp ne i32 %bf.cast, 0, !dbg !11626
  br i1 %tobool100, label %if.end102, label %if.then101, !dbg !11628

if.then101:                                       ; preds = %land.lhs.true
  %57 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11629
  %r = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11630
  %58 = bitcast %struct.usb_ctrlrequest* %r to i64*, !dbg !11631
  %59 = load i64, i64* %58, align 4, !dbg !11631
  call void @defect7374_workaround(%struct.net2280* %57, i64 %59) #12, !dbg !11631
  br label %if.end102, !dbg !11631

if.end102:                                        ; preds = %if.then101, %land.lhs.true, %do.end94
  store i32 0, i32* %tmp, align 4, !dbg !11632
  %60 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11633
  %regs103 = getelementptr inbounds %struct.net2280, %struct.net2280* %60, i32 0, i32 10, !dbg !11634
  %61 = load %struct.net2280_regs*, %struct.net2280_regs** %regs103, align 8, !dbg !11634
  %irqstat0 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %61, i32 0, i32 10, !dbg !11635
  %62 = bitcast i32* %irqstat0 to i8*, !dbg !11636
  call void @writel(i32 128, i8* %62) #12, !dbg !11637
  %63 = load i32, i32* %stat.addr, align 4, !dbg !11638
  %conv104 = zext i32 %63 to i64, !dbg !11638
  %xor = xor i64 %conv104, 128, !dbg !11638
  %conv105 = trunc i64 %xor to i32, !dbg !11638
  store i32 %conv105, i32* %stat.addr, align 4, !dbg !11638
  %r106 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11639
  %bRequestType = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r106, i32 0, i32 0, !dbg !11640
  %64 = load i8, i8* %bRequestType, align 4, !dbg !11640
  %conv107 = zext i8 %64 to i32, !dbg !11641
  %and108 = and i32 %conv107, 128, !dbg !11642
  %cmp109 = icmp ne i32 %and108, 0, !dbg !11643
  %conv110 = zext i1 %cmp109 to i32, !dbg !11643
  %65 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11644
  %is_in = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %65, i32 0, i32 10, !dbg !11645
  %bf.load111 = load i32, i32* %is_in, align 8, !dbg !11646
  %bf.value = and i32 %conv110, 1, !dbg !11646
  %bf.shl = shl i32 %bf.value, 24, !dbg !11646
  %bf.clear112 = and i32 %bf.load111, -16777217, !dbg !11646
  %bf.set = or i32 %bf.clear112, %bf.shl, !dbg !11646
  store i32 %bf.set, i32* %is_in, align 8, !dbg !11646
  %66 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11647
  %is_in113 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %66, i32 0, i32 10, !dbg !11649
  %bf.load114 = load i32, i32* %is_in113, align 8, !dbg !11649
  %bf.lshr115 = lshr i32 %bf.load114, 24, !dbg !11649
  %bf.clear116 = and i32 %bf.lshr115, 1, !dbg !11649
  %tobool117 = icmp ne i32 %bf.clear116, 0, !dbg !11647
  br i1 %tobool117, label %if.then118, label %if.else119, !dbg !11650

if.then118:                                       ; preds = %if.end102
  store i32 7, i32* %scratch, align 4, !dbg !11651
  %67 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11653
  call void @stop_out_naking(%struct.net2280_ep* %67) #12, !dbg !11654
  br label %if.end120, !dbg !11655

if.else119:                                       ; preds = %if.end102
  store i32 11, i32* %scratch, align 4, !dbg !11656
  br label %if.end120

if.end120:                                        ; preds = %if.else119, %if.then118
  %68 = load i32, i32* %scratch, align 4, !dbg !11657
  %69 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11658
  %epregs = getelementptr inbounds %struct.net2280, %struct.net2280* %69, i32 0, i32 16, !dbg !11659
  %70 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %epregs, align 8, !dbg !11659
  %arrayidx121 = getelementptr %struct.net2280_ep_regs, %struct.net2280_ep_regs* %70, i64 0, !dbg !11658
  %ep_irqenb = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %arrayidx121, i32 0, i32 2, !dbg !11660
  %71 = bitcast i32* %ep_irqenb to i8*, !dbg !11661
  call void @writel(i32 %68, i8* %71) #12, !dbg !11662
  %72 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11663
  %responded = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %72, i32 0, i32 10, !dbg !11664
  %bf.load122 = load i32, i32* %responded, align 8, !dbg !11665
  %bf.clear123 = and i32 %bf.load122, -67108865, !dbg !11665
  %bf.set124 = or i32 %bf.clear123, 67108864, !dbg !11665
  store i32 %bf.set124, i32* %responded, align 8, !dbg !11665
  %73 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11666
  %gadget125 = getelementptr inbounds %struct.net2280, %struct.net2280* %73, i32 0, i32 0, !dbg !11668
  %speed126 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget125, i32 0, i32 5, !dbg !11669
  %74 = load i32, i32* %speed126, align 8, !dbg !11669
  %cmp127 = icmp eq i32 %74, 5, !dbg !11670
  br i1 %cmp127, label %if.then129, label %if.end131, !dbg !11671

if.then129:                                       ; preds = %if.end120
  %75 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11672
  %76 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11674
  %r130 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11675
  %77 = bitcast %struct.usb_ctrlrequest* %r130 to i64*, !dbg !11676
  %78 = load i64, i64* %77, align 4, !dbg !11676
  call void @handle_stat0_irqs_superspeed(%struct.net2280* %75, %struct.net2280_ep* %76, i64 %78) #12, !dbg !11676
  br label %next_endpoints, !dbg !11677

if.end131:                                        ; preds = %if.end120
  %r132 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11678
  %bRequest = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r132, i32 0, i32 1, !dbg !11679
  %79 = load i8, i8* %bRequest, align 1, !dbg !11679
  %conv133 = zext i8 %79 to i32, !dbg !11680
  switch i32 %conv133, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb166
    i32 3, label %sw.bb212
  ], !dbg !11681

sw.bb:                                            ; preds = %if.end131
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %e, metadata !11682, metadata !DIExpression()), !dbg !11684
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11685, metadata !DIExpression()), !dbg !11686
  %r134 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11687
  %bRequestType135 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r134, i32 0, i32 0, !dbg !11689
  %80 = load i8, i8* %bRequestType135, align 4, !dbg !11689
  %conv136 = zext i8 %80 to i32, !dbg !11690
  %cmp137 = icmp ne i32 %conv136, 130, !dbg !11691
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !11692

if.then139:                                       ; preds = %sw.bb
  br label %delegate, !dbg !11693

if.end140:                                        ; preds = %sw.bb
  %81 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11694
  %r141 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11695
  %wIndex = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r141, i32 0, i32 3, !dbg !11695
  %82 = load i16, i16* %wIndex, align 4, !dbg !11695
  %call142 = call %struct.net2280_ep* @get_ep_by_addr(%struct.net2280* %81, i16 zeroext %82) #12, !dbg !11696
  store %struct.net2280_ep* %call142, %struct.net2280_ep** %e, align 8, !dbg !11697
  %83 = load %struct.net2280_ep*, %struct.net2280_ep** %e, align 8, !dbg !11698
  %tobool143 = icmp ne %struct.net2280_ep* %83, null, !dbg !11698
  br i1 %tobool143, label %lor.lhs.false, label %if.then148, !dbg !11700

lor.lhs.false:                                    ; preds = %if.end140
  %r144 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11701
  %wLength = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r144, i32 0, i32 4, !dbg !11701
  %84 = load i16, i16* %wLength, align 2, !dbg !11701
  %conv145 = zext i16 %84 to i32, !dbg !11701
  %cmp146 = icmp sgt i32 %conv145, 2, !dbg !11702
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !11703

if.then148:                                       ; preds = %lor.lhs.false, %if.end140
  br label %do_stall, !dbg !11704

if.end149:                                        ; preds = %lor.lhs.false
  %85 = load %struct.net2280_ep*, %struct.net2280_ep** %e, align 8, !dbg !11705
  %regs150 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %85, i32 0, i32 2, !dbg !11707
  %86 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs150, align 8, !dbg !11707
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %86, i32 0, i32 1, !dbg !11708
  %87 = bitcast i32* %ep_rsp to i8*, !dbg !11709
  %call151 = call i32 @readl(i8* %87) #12, !dbg !11710
  %conv152 = zext i32 %call151 to i64, !dbg !11710
  %and153 = and i64 %conv152, 256, !dbg !11711
  %tobool154 = icmp ne i64 %and153, 0, !dbg !11711
  br i1 %tobool154, label %if.then155, label %if.else156, !dbg !11712

if.then155:                                       ; preds = %if.end149
  store i32 1, i32* %status, align 4, !dbg !11713
  br label %if.end157, !dbg !11714

if.else156:                                       ; preds = %if.end149
  store i32 0, i32* %status, align 4, !dbg !11715
  br label %if.end157

if.end157:                                        ; preds = %if.else156, %if.then155
  %88 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11716
  %epregs158 = getelementptr inbounds %struct.net2280, %struct.net2280* %88, i32 0, i32 16, !dbg !11717
  %89 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %epregs158, align 8, !dbg !11717
  %arrayidx159 = getelementptr %struct.net2280_ep_regs, %struct.net2280_ep_regs* %89, i64 0, !dbg !11716
  %ep_irqenb160 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %arrayidx159, i32 0, i32 2, !dbg !11718
  %90 = bitcast i32* %ep_irqenb160 to i8*, !dbg !11719
  call void @writel(i32 0, i8* %90) #12, !dbg !11720
  %91 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11721
  %r161 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11722
  %wLength162 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r161, i32 0, i32 4, !dbg !11722
  %92 = load i16, i16* %wLength162, align 2, !dbg !11722
  %conv163 = zext i16 %92 to i32, !dbg !11722
  call void @set_fifo_bytecount(%struct.net2280_ep* %91, i32 %conv163) #12, !dbg !11723
  %93 = load i32, i32* %status, align 4, !dbg !11724
  %94 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11725
  %epregs164 = getelementptr inbounds %struct.net2280, %struct.net2280* %94, i32 0, i32 16, !dbg !11726
  %95 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %epregs164, align 8, !dbg !11726
  %arrayidx165 = getelementptr %struct.net2280_ep_regs, %struct.net2280_ep_regs* %95, i64 0, !dbg !11725
  %ep_data = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %arrayidx165, i32 0, i32 5, !dbg !11727
  %96 = bitcast i32* %ep_data to i8*, !dbg !11728
  call void @writel(i32 %93, i8* %96) #12, !dbg !11729
  %97 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11730
  call void @allow_status(%struct.net2280_ep* %97) #12, !dbg !11731
  br label %next_endpoints, !dbg !11732

sw.bb166:                                         ; preds = %if.end131
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %e167, metadata !11733, metadata !DIExpression()), !dbg !11735
  %r168 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11736
  %bRequestType169 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r168, i32 0, i32 0, !dbg !11738
  %98 = load i8, i8* %bRequestType169, align 4, !dbg !11738
  %conv170 = zext i8 %98 to i32, !dbg !11739
  %cmp171 = icmp ne i32 %conv170, 2, !dbg !11740
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !11741

if.then173:                                       ; preds = %sw.bb166
  br label %delegate, !dbg !11742

if.end174:                                        ; preds = %sw.bb166
  %r175 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11743
  %wValue = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r175, i32 0, i32 2, !dbg !11743
  %99 = load i16, i16* %wValue, align 2, !dbg !11743
  %conv176 = zext i16 %99 to i32, !dbg !11743
  %cmp177 = icmp ne i32 %conv176, 0, !dbg !11745
  br i1 %cmp177, label %if.then185, label %lor.lhs.false179, !dbg !11746

lor.lhs.false179:                                 ; preds = %if.end174
  %r180 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11747
  %wLength181 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r180, i32 0, i32 4, !dbg !11747
  %100 = load i16, i16* %wLength181, align 2, !dbg !11747
  %conv182 = zext i16 %100 to i32, !dbg !11747
  %cmp183 = icmp ne i32 %conv182, 0, !dbg !11748
  br i1 %cmp183, label %if.then185, label %if.end186, !dbg !11749

if.then185:                                       ; preds = %lor.lhs.false179, %if.end174
  br label %do_stall, !dbg !11750

if.end186:                                        ; preds = %lor.lhs.false179
  %101 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11751
  %r187 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11752
  %wIndex188 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r187, i32 0, i32 3, !dbg !11752
  %102 = load i16, i16* %wIndex188, align 4, !dbg !11752
  %call189 = call %struct.net2280_ep* @get_ep_by_addr(%struct.net2280* %101, i16 zeroext %102) #12, !dbg !11753
  store %struct.net2280_ep* %call189, %struct.net2280_ep** %e167, align 8, !dbg !11754
  %103 = load %struct.net2280_ep*, %struct.net2280_ep** %e167, align 8, !dbg !11755
  %tobool190 = icmp ne %struct.net2280_ep* %103, null, !dbg !11755
  br i1 %tobool190, label %if.end192, label %if.then191, !dbg !11757

if.then191:                                       ; preds = %if.end186
  br label %do_stall, !dbg !11758

if.end192:                                        ; preds = %if.end186
  %104 = load %struct.net2280_ep*, %struct.net2280_ep** %e167, align 8, !dbg !11759
  %wedged = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %104, i32 0, i32 10, !dbg !11761
  %bf.load193 = load i32, i32* %wedged, align 8, !dbg !11761
  %bf.lshr194 = lshr i32 %bf.load193, 23, !dbg !11761
  %bf.clear195 = and i32 %bf.lshr194, 1, !dbg !11761
  %tobool196 = icmp ne i32 %bf.clear195, 0, !dbg !11759
  br i1 %tobool196, label %if.then197, label %if.else198, !dbg !11762

if.then197:                                       ; preds = %if.end192
  br label %if.end211, !dbg !11763

if.else198:                                       ; preds = %if.end192
  %105 = load %struct.net2280_ep*, %struct.net2280_ep** %e167, align 8, !dbg !11765
  call void @clear_halt(%struct.net2280_ep* %105) #12, !dbg !11767
  %106 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11768
  %dev199 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %106, i32 0, i32 6, !dbg !11770
  %107 = load %struct.net2280*, %struct.net2280** %dev199, align 8, !dbg !11770
  %quirks200 = getelementptr inbounds %struct.net2280, %struct.net2280* %107, i32 0, i32 8, !dbg !11771
  %108 = load i64, i64* %quirks200, align 8, !dbg !11771
  %and201 = and i64 %108, 8, !dbg !11772
  %tobool202 = icmp ne i64 %and201, 0, !dbg !11772
  br i1 %tobool202, label %land.lhs.true203, label %if.end210, !dbg !11773

land.lhs.true203:                                 ; preds = %if.else198
  %109 = load %struct.net2280_ep*, %struct.net2280_ep** %e167, align 8, !dbg !11774
  %queue204 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %109, i32 0, i32 8, !dbg !11775
  %call205 = call i32 @list_empty(%struct.list_head* %queue204) #12, !dbg !11776
  %tobool206 = icmp ne i32 %call205, 0, !dbg !11776
  br i1 %tobool206, label %if.end210, label %land.lhs.true207, !dbg !11777

land.lhs.true207:                                 ; preds = %land.lhs.true203
  %110 = load %struct.net2280_ep*, %struct.net2280_ep** %e167, align 8, !dbg !11778
  %td_dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %110, i32 0, i32 5, !dbg !11779
  %111 = load i64, i64* %td_dma, align 8, !dbg !11779
  %tobool208 = icmp ne i64 %111, 0, !dbg !11778
  br i1 %tobool208, label %if.then209, label %if.end210, !dbg !11780

if.then209:                                       ; preds = %land.lhs.true207
  %112 = load %struct.net2280_ep*, %struct.net2280_ep** %e167, align 8, !dbg !11781
  call void @restart_dma(%struct.net2280_ep* %112) #12, !dbg !11782
  br label %if.end210, !dbg !11782

if.end210:                                        ; preds = %if.then209, %land.lhs.true207, %land.lhs.true203, %if.else198
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.then197
  %113 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11783
  call void @allow_status(%struct.net2280_ep* %113) #12, !dbg !11784
  br label %next_endpoints, !dbg !11785

sw.bb212:                                         ; preds = %if.end131
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %e213, metadata !11786, metadata !DIExpression()), !dbg !11788
  %r214 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11789
  %bRequestType215 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r214, i32 0, i32 0, !dbg !11791
  %114 = load i8, i8* %bRequestType215, align 4, !dbg !11791
  %conv216 = zext i8 %114 to i32, !dbg !11792
  %cmp217 = icmp ne i32 %conv216, 2, !dbg !11793
  br i1 %cmp217, label %if.then219, label %if.end220, !dbg !11794

if.then219:                                       ; preds = %sw.bb212
  br label %delegate, !dbg !11795

if.end220:                                        ; preds = %sw.bb212
  %r221 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11796
  %wValue222 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r221, i32 0, i32 2, !dbg !11796
  %115 = load i16, i16* %wValue222, align 2, !dbg !11796
  %conv223 = zext i16 %115 to i32, !dbg !11796
  %cmp224 = icmp ne i32 %conv223, 0, !dbg !11798
  br i1 %cmp224, label %if.then232, label %lor.lhs.false226, !dbg !11799

lor.lhs.false226:                                 ; preds = %if.end220
  %r227 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11800
  %wLength228 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r227, i32 0, i32 4, !dbg !11800
  %116 = load i16, i16* %wLength228, align 2, !dbg !11800
  %conv229 = zext i16 %116 to i32, !dbg !11800
  %cmp230 = icmp ne i32 %conv229, 0, !dbg !11801
  br i1 %cmp230, label %if.then232, label %if.end233, !dbg !11802

if.then232:                                       ; preds = %lor.lhs.false226, %if.end220
  br label %do_stall, !dbg !11803

if.end233:                                        ; preds = %lor.lhs.false226
  %117 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11804
  %r234 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11805
  %wIndex235 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r234, i32 0, i32 3, !dbg !11805
  %118 = load i16, i16* %wIndex235, align 4, !dbg !11805
  %call236 = call %struct.net2280_ep* @get_ep_by_addr(%struct.net2280* %117, i16 zeroext %118) #12, !dbg !11806
  store %struct.net2280_ep* %call236, %struct.net2280_ep** %e213, align 8, !dbg !11807
  %119 = load %struct.net2280_ep*, %struct.net2280_ep** %e213, align 8, !dbg !11808
  %tobool237 = icmp ne %struct.net2280_ep* %119, null, !dbg !11808
  br i1 %tobool237, label %if.end239, label %if.then238, !dbg !11810

if.then238:                                       ; preds = %if.end233
  br label %do_stall, !dbg !11811

if.end239:                                        ; preds = %if.end233
  %120 = load %struct.net2280_ep*, %struct.net2280_ep** %e213, align 8, !dbg !11812
  %ep240 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %120, i32 0, i32 0, !dbg !11814
  %name = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep240, i32 0, i32 1, !dbg !11815
  %121 = load i8*, i8** %name, align 8, !dbg !11815
  %cmp241 = icmp eq i8* %121, getelementptr inbounds ([4 x i8], [4 x i8]* @ep0name, i64 0, i64 0), !dbg !11816
  br i1 %cmp241, label %if.then243, label %if.end244, !dbg !11817

if.then243:                                       ; preds = %if.end239
  br label %do_stall, !dbg !11818

if.end244:                                        ; preds = %if.end239
  %122 = load %struct.net2280_ep*, %struct.net2280_ep** %e213, align 8, !dbg !11819
  call void @set_halt(%struct.net2280_ep* %122) #12, !dbg !11820
  %123 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11821
  %quirks245 = getelementptr inbounds %struct.net2280, %struct.net2280* %123, i32 0, i32 8, !dbg !11823
  %124 = load i64, i64* %quirks245, align 8, !dbg !11823
  %and246 = and i64 %124, 8, !dbg !11824
  %tobool247 = icmp ne i64 %and246, 0, !dbg !11824
  br i1 %tobool247, label %land.lhs.true248, label %if.end251, !dbg !11825

land.lhs.true248:                                 ; preds = %if.end244
  %125 = load %struct.net2280_ep*, %struct.net2280_ep** %e213, align 8, !dbg !11826
  %dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %125, i32 0, i32 3, !dbg !11827
  %126 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !11827
  %tobool249 = icmp ne %struct.net2280_dma_regs* %126, null, !dbg !11826
  br i1 %tobool249, label %if.then250, label %if.end251, !dbg !11828

if.then250:                                       ; preds = %land.lhs.true248
  %127 = load %struct.net2280_ep*, %struct.net2280_ep** %e213, align 8, !dbg !11829
  call void @abort_dma(%struct.net2280_ep* %127) #12, !dbg !11830
  br label %if.end251, !dbg !11830

if.end251:                                        ; preds = %if.then250, %land.lhs.true248, %if.end244
  %128 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11831
  call void @allow_status(%struct.net2280_ep* %128) #12, !dbg !11832
  br label %next_endpoints, !dbg !11833

sw.default:                                       ; preds = %if.end131
  br label %delegate, !dbg !11834

delegate:                                         ; preds = %sw.default, %if.then219, %if.then173, %if.then139
  call void @llvm.dbg.label(metadata !11835), !dbg !11836
  %129 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11837
  %responded252 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %129, i32 0, i32 10, !dbg !11838
  %bf.load253 = load i32, i32* %responded252, align 8, !dbg !11839
  %bf.clear254 = and i32 %bf.load253, -67108865, !dbg !11839
  store i32 %bf.clear254, i32* %responded252, align 8, !dbg !11839
  %130 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11840
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %130, i32 0, i32 1, !dbg !11841
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11842, !srcloc !5643
  %131 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11843
  %132 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %131, i32 0, i32 0, !dbg !11843
  %rlock.i = bitcast %union.anon.4* %132 to %struct.raw_spinlock*, !dbg !11843
  %133 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11844
  %driver = getelementptr inbounds %struct.net2280, %struct.net2280* %133, i32 0, i32 3, !dbg !11845
  %134 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver, align 8, !dbg !11845
  %setup = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %134, i32 0, i32 4, !dbg !11846
  %135 = load i32 (%struct.usb_gadget*, %struct.usb_ctrlrequest*)*, i32 (%struct.usb_gadget*, %struct.usb_ctrlrequest*)** %setup, align 8, !dbg !11846
  %136 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11847
  %gadget255 = getelementptr inbounds %struct.net2280, %struct.net2280* %136, i32 0, i32 0, !dbg !11848
  %r256 = bitcast %union.anon.68* %u to %struct.usb_ctrlrequest*, !dbg !11849
  %call257 = call i32 %135(%struct.usb_gadget* %gadget255, %struct.usb_ctrlrequest* %r256) #12, !dbg !11844
  store i32 %call257, i32* %tmp, align 4, !dbg !11850
  %137 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11851
  %lock258 = getelementptr inbounds %struct.net2280, %struct.net2280* %137, i32 0, i32 1, !dbg !11852
  store %struct.spinlock* %lock258, %struct.spinlock** %lock.addr.i298, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11853, !srcloc !5595
  %138 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i298, align 8, !dbg !11854
  %139 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %138, i32 0, i32 0, !dbg !11854
  %rlock.i299 = bitcast %union.anon.4* %139 to %struct.raw_spinlock*, !dbg !11854
  br label %sw.epilog, !dbg !11855

sw.epilog:                                        ; preds = %delegate
  %140 = load i32, i32* %tmp, align 4, !dbg !11856
  %cmp259 = icmp slt i32 %140, 0, !dbg !11858
  br i1 %cmp259, label %if.then261, label %if.end266, !dbg !11859

if.then261:                                       ; preds = %sw.epilog
  br label %do_stall, !dbg !11860

do_stall:                                         ; preds = %if.then261, %if.then243, %if.then238, %if.then232, %if.then191, %if.then185, %if.then148
  call void @llvm.dbg.label(metadata !11861), !dbg !11863
  %141 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11864
  %protocol_stall262 = getelementptr inbounds %struct.net2280, %struct.net2280* %141, i32 0, i32 4, !dbg !11865
  %bf.load263 = load i16, i16* %protocol_stall262, align 8, !dbg !11866
  %bf.clear264 = and i16 %bf.load263, -3, !dbg !11866
  %bf.set265 = or i16 %bf.clear264, 2, !dbg !11866
  store i16 %bf.set265, i16* %protocol_stall262, align 8, !dbg !11866
  br label %if.end266, !dbg !11867

if.end266:                                        ; preds = %do_stall, %sw.epilog
  br label %if.end267, !dbg !11868

if.end267:                                        ; preds = %if.end266, %if.end
  br label %next_endpoints, !dbg !11458

next_endpoints:                                   ; preds = %if.end267, %if.end251, %if.end211, %if.end157, %if.then129
  call void @llvm.dbg.label(metadata !11869), !dbg !11870
  %142 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11871
  %quirks268 = getelementptr inbounds %struct.net2280, %struct.net2280* %142, i32 0, i32 8, !dbg !11873
  %143 = load i64, i64* %quirks268, align 8, !dbg !11873
  %and269 = and i64 %143, 8, !dbg !11874
  %tobool270 = icmp ne i64 %and269, 0, !dbg !11874
  br i1 %tobool270, label %land.lhs.true271, label %if.else280, !dbg !11875

land.lhs.true271:                                 ; preds = %next_endpoints
  %144 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11876
  %enhanced_mode = getelementptr inbounds %struct.net2280, %struct.net2280* %144, i32 0, i32 6, !dbg !11877
  %145 = load i32, i32* %enhanced_mode, align 4, !dbg !11877
  %tobool272 = icmp ne i32 %145, 0, !dbg !11876
  br i1 %tobool272, label %if.then273, label %if.else280, !dbg !11878

if.then273:                                       ; preds = %land.lhs.true271
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !11879, metadata !DIExpression()), !dbg !11881
  store i32 1966111, i32* %mask, align 4, !dbg !11881
  %146 = load i32, i32* %stat.addr, align 4, !dbg !11882
  %147 = load i32, i32* %mask, align 4, !dbg !11884
  %and274 = and i32 %146, %147, !dbg !11885
  %tobool275 = icmp ne i32 %and274, 0, !dbg !11885
  br i1 %tobool275, label %if.then276, label %if.end279, !dbg !11886

if.then276:                                       ; preds = %if.then273
  %148 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11887
  %149 = load i32, i32* %stat.addr, align 4, !dbg !11889
  %150 = load i32, i32* %mask, align 4, !dbg !11890
  %and277 = and i32 %149, %150, !dbg !11891
  call void @usb338x_handle_ep_intr(%struct.net2280* %148, i32 %and277) #12, !dbg !11892
  %151 = load i32, i32* %mask, align 4, !dbg !11893
  %neg = xor i32 %151, -1, !dbg !11894
  %152 = load i32, i32* %stat.addr, align 4, !dbg !11895
  %and278 = and i32 %152, %neg, !dbg !11895
  store i32 %and278, i32* %stat.addr, align 4, !dbg !11895
  br label %if.end279, !dbg !11896

if.end279:                                        ; preds = %if.then276, %if.then273
  br label %if.end294, !dbg !11897

if.else280:                                       ; preds = %land.lhs.true271, %next_endpoints
  %153 = load i32, i32* %stat.addr, align 4, !dbg !11898
  %and281 = and i32 %153, 127, !dbg !11900
  store i32 %and281, i32* %scratch, align 4, !dbg !11901
  %154 = load i32, i32* %stat.addr, align 4, !dbg !11902
  %and282 = and i32 %154, -128, !dbg !11902
  store i32 %and282, i32* %stat.addr, align 4, !dbg !11902
  store i32 0, i32* %num, align 4, !dbg !11903
  br label %for.cond, !dbg !11905

for.cond:                                         ; preds = %for.inc, %if.else280
  %155 = load i32, i32* %scratch, align 4, !dbg !11906
  %tobool283 = icmp ne i32 %155, 0, !dbg !11908
  br i1 %tobool283, label %for.body, label %for.end, !dbg !11908

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %t, metadata !11909, metadata !DIExpression()), !dbg !11911
  %156 = load i32, i32* %num, align 4, !dbg !11912
  %sh_prom = zext i32 %156 to i64, !dbg !11912
  %shl = shl i64 1, %sh_prom, !dbg !11912
  %conv284 = trunc i64 %shl to i32, !dbg !11912
  store i32 %conv284, i32* %t, align 4, !dbg !11913
  %157 = load i32, i32* %scratch, align 4, !dbg !11914
  %158 = load i32, i32* %t, align 4, !dbg !11916
  %and285 = and i32 %157, %158, !dbg !11917
  %cmp286 = icmp eq i32 %and285, 0, !dbg !11918
  br i1 %cmp286, label %if.then288, label %if.end289, !dbg !11919

if.then288:                                       ; preds = %for.body
  br label %for.inc, !dbg !11920

if.end289:                                        ; preds = %for.body
  %159 = load i32, i32* %t, align 4, !dbg !11921
  %160 = load i32, i32* %scratch, align 4, !dbg !11922
  %xor290 = xor i32 %160, %159, !dbg !11922
  store i32 %xor290, i32* %scratch, align 4, !dbg !11922
  %161 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11923
  %ep291 = getelementptr inbounds %struct.net2280, %struct.net2280* %161, i32 0, i32 2, !dbg !11924
  %162 = load i32, i32* %num, align 4, !dbg !11925
  %idxprom = zext i32 %162 to i64, !dbg !11923
  %arrayidx292 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep291, i64 0, i64 %idxprom, !dbg !11923
  store %struct.net2280_ep* %arrayidx292, %struct.net2280_ep** %ep, align 8, !dbg !11926
  %163 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !11927
  call void @handle_ep_small(%struct.net2280_ep* %163) #12, !dbg !11928
  br label %for.inc, !dbg !11929

for.inc:                                          ; preds = %if.end289, %if.then288
  %164 = load i32, i32* %num, align 4, !dbg !11930
  %inc293 = add i32 %164, 1, !dbg !11930
  store i32 %inc293, i32* %num, align 4, !dbg !11930
  br label %for.cond, !dbg !11931, !llvm.loop !11932

for.end:                                          ; preds = %for.cond
  br label %if.end294

if.end294:                                        ; preds = %for.end, %if.end279
  %165 = load i32, i32* %stat.addr, align 4, !dbg !11934
  %tobool295 = icmp ne i32 %165, 0, !dbg !11934
  br i1 %tobool295, label %if.then296, label %if.end297, !dbg !11936

if.then296:                                       ; preds = %if.end294
  br label %if.end297, !dbg !11937

if.end297:                                        ; preds = %if.then, %if.then296, %if.end294
  ret void, !dbg !11938
}

; Function Attrs: noredzone
declare dso_local void @usb_gadget_udc_reset(%struct.usb_gadget*, %struct.usb_gadget_driver*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @net2280_led_speed(%struct.net2280* %dev, i32 %speed) #2 !dbg !11939 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  %speed.addr = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !11942, metadata !DIExpression()), !dbg !11943
  store i32 %speed, i32* %speed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %speed.addr, metadata !11944, metadata !DIExpression()), !dbg !11945
  call void @llvm.dbg.declare(metadata i32* %val, metadata !11946, metadata !DIExpression()), !dbg !11947
  %0 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11948
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %0, i32 0, i32 10, !dbg !11949
  %1 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !11949
  %gpioctl = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %1, i32 0, i32 20, !dbg !11950
  %2 = bitcast i32* %gpioctl to i8*, !dbg !11951
  %call = call i32 @readl(i8* %2) #12, !dbg !11952
  store i32 %call, i32* %val, align 4, !dbg !11947
  %3 = load i32, i32* %speed.addr, align 4, !dbg !11953
  switch i32 %3, label %sw.default [
    i32 5, label %sw.bb
    i32 3, label %sw.bb2
    i32 2, label %sw.bb8
  ], !dbg !11954

sw.bb:                                            ; preds = %entry
  %4 = load i32, i32* %val, align 4, !dbg !11955
  %conv = zext i32 %4 to i64, !dbg !11955
  %or = or i64 %conv, 3, !dbg !11955
  %conv1 = trunc i64 %or to i32, !dbg !11955
  store i32 %conv1, i32* %val, align 4, !dbg !11955
  br label %sw.epilog, !dbg !11957

sw.bb2:                                           ; preds = %entry
  %5 = load i32, i32* %val, align 4, !dbg !11958
  %conv3 = zext i32 %5 to i64, !dbg !11958
  %and = and i64 %conv3, -2, !dbg !11958
  %conv4 = trunc i64 %and to i32, !dbg !11958
  store i32 %conv4, i32* %val, align 4, !dbg !11958
  %6 = load i32, i32* %val, align 4, !dbg !11959
  %conv5 = zext i32 %6 to i64, !dbg !11959
  %or6 = or i64 %conv5, 2, !dbg !11959
  %conv7 = trunc i64 %or6 to i32, !dbg !11959
  store i32 %conv7, i32* %val, align 4, !dbg !11959
  br label %sw.epilog, !dbg !11960

sw.bb8:                                           ; preds = %entry
  %7 = load i32, i32* %val, align 4, !dbg !11961
  %conv9 = zext i32 %7 to i64, !dbg !11961
  %and10 = and i64 %conv9, -3, !dbg !11961
  %conv11 = trunc i64 %and10 to i32, !dbg !11961
  store i32 %conv11, i32* %val, align 4, !dbg !11961
  %8 = load i32, i32* %val, align 4, !dbg !11962
  %conv12 = zext i32 %8 to i64, !dbg !11962
  %or13 = or i64 %conv12, 1, !dbg !11962
  %conv14 = trunc i64 %or13 to i32, !dbg !11962
  store i32 %conv14, i32* %val, align 4, !dbg !11962
  br label %sw.epilog, !dbg !11963

sw.default:                                       ; preds = %entry
  %9 = load i32, i32* %val, align 4, !dbg !11964
  %conv15 = zext i32 %9 to i64, !dbg !11964
  %and16 = and i64 %conv15, -4, !dbg !11964
  %conv17 = trunc i64 %and16 to i32, !dbg !11964
  store i32 %conv17, i32* %val, align 4, !dbg !11964
  br label %sw.epilog, !dbg !11965

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb2, %sw.bb
  %10 = load i32, i32* %val, align 4, !dbg !11966
  %11 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11967
  %regs18 = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 10, !dbg !11968
  %12 = load %struct.net2280_regs*, %struct.net2280_regs** %regs18, align 8, !dbg !11968
  %gpioctl19 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %12, i32 0, i32 20, !dbg !11969
  %13 = bitcast i32* %gpioctl19 to i8*, !dbg !11970
  call void @writel(i32 %10, i8* %13) #12, !dbg !11971
  ret void, !dbg !11972
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @defect7374_workaround(%struct.net2280* %dev, i64 %r.coerce) #2 !dbg !11973 {
entry:
  %r = alloca %struct.usb_ctrlrequest, align 1
  %dev.addr = alloca %struct.net2280*, align 8
  %scratch = alloca i32, align 4
  %fsmvalue = alloca i32, align 4
  %ack_wait_timeout = alloca i32, align 4
  %state = alloca i32, align 4
  %0 = bitcast %struct.usb_ctrlrequest* %r to i64*
  store i64 %r.coerce, i64* %0, align 1
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !11976, metadata !DIExpression()), !dbg !11977
  call void @llvm.dbg.declare(metadata %struct.usb_ctrlrequest* %r, metadata !11978, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.declare(metadata i32* %scratch, metadata !11980, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.declare(metadata i32* %fsmvalue, metadata !11982, metadata !DIExpression()), !dbg !11983
  call void @llvm.dbg.declare(metadata i32* %ack_wait_timeout, metadata !11984, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.declare(metadata i32* %state, metadata !11986, metadata !DIExpression()), !dbg !11987
  %1 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !11988
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %1, i32 0, i32 10, !dbg !11989
  %2 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !11989
  %call = call i32 @get_idx_reg(%struct.net2280_regs* %2, i32 11) #12, !dbg !11990
  store i32 %call, i32* %scratch, align 4, !dbg !11991
  %3 = load i32, i32* %scratch, align 4, !dbg !11992
  %and = and i32 %3, -268435456, !dbg !11993
  store i32 %and, i32* %fsmvalue, align 4, !dbg !11994
  %4 = load i32, i32* %scratch, align 4, !dbg !11995
  %and1 = and i32 %4, 268435455, !dbg !11995
  store i32 %and1, i32* %scratch, align 4, !dbg !11995
  %5 = load i32, i32* %fsmvalue, align 4, !dbg !11996
  %conv = zext i32 %5 to i64, !dbg !11996
  %cmp = icmp eq i64 %conv, 268435456, !dbg !11998
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !11999

land.lhs.true:                                    ; preds = %entry
  %bRequestType = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r, i32 0, i32 0, !dbg !12000
  %6 = load i8, i8* %bRequestType, align 1, !dbg !12000
  %conv3 = zext i8 %6 to i32, !dbg !12001
  %and4 = and i32 %conv3, 128, !dbg !12002
  %tobool = icmp ne i32 %and4, 0, !dbg !12002
  br i1 %tobool, label %if.end, label %if.then, !dbg !12003

if.then:                                          ; preds = %land.lhs.true, %entry
  br label %return, !dbg !12004

if.end:                                           ; preds = %land.lhs.true
  %7 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12005
  %usb = getelementptr inbounds %struct.net2280, %struct.net2280* %7, i32 0, i32 11, !dbg !12007
  %8 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb, align 8, !dbg !12007
  %usbstat = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %8, i32 0, i32 4, !dbg !12008
  %9 = bitcast i32* %usbstat to i8*, !dbg !12009
  %call5 = call i32 @readl(i8* %9) #12, !dbg !12010
  %conv6 = zext i32 %call5 to i64, !dbg !12010
  %and7 = and i64 %conv6, 256, !dbg !12011
  %tobool8 = icmp ne i64 %and7, 0, !dbg !12011
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !12012

if.then9:                                         ; preds = %if.end
  %10 = load i32, i32* %scratch, align 4, !dbg !12013
  %or = or i32 %10, 536870912, !dbg !12013
  store i32 %or, i32* %scratch, align 4, !dbg !12013
  %11 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12015
  %bug7734_patched = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 4, !dbg !12016
  %bf.load = load i16, i16* %bug7734_patched, align 8, !dbg !12017
  %bf.clear = and i16 %bf.load, -2049, !dbg !12017
  %bf.set = or i16 %bf.clear, 2048, !dbg !12017
  store i16 %bf.set, i16* %bug7734_patched, align 8, !dbg !12017
  br label %restore_data_eps, !dbg !12018

if.end10:                                         ; preds = %if.end
  store i32 0, i32* %ack_wait_timeout, align 4, !dbg !12019
  br label %for.cond, !dbg !12021

for.cond:                                         ; preds = %for.inc, %if.end10
  %12 = load i32, i32* %ack_wait_timeout, align 4, !dbg !12022
  %cmp11 = icmp ult i32 %12, 200, !dbg !12024
  br i1 %cmp11, label %for.body, label %for.end, !dbg !12025

for.body:                                         ; preds = %for.cond
  %13 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12026
  %plregs = getelementptr inbounds %struct.net2280, %struct.net2280* %13, i32 0, i32 18, !dbg !12028
  %14 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs, align 8, !dbg !12028
  %pl_ep_status_1 = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %14, i32 0, i32 8, !dbg !12029
  %15 = bitcast i32* %pl_ep_status_1 to i8*, !dbg !12030
  %call13 = call i32 @readl(i8* %15) #12, !dbg !12031
  %and14 = and i32 %call13, 16711680, !dbg !12032
  store i32 %and14, i32* %state, align 4, !dbg !12033
  %16 = load i32, i32* %state, align 4, !dbg !12034
  %cmp15 = icmp uge i32 %16, 1114112, !dbg !12036
  br i1 %cmp15, label %land.lhs.true17, label %if.end26, !dbg !12037

land.lhs.true17:                                  ; preds = %for.body
  %17 = load i32, i32* %state, align 4, !dbg !12038
  %cmp18 = icmp ule i32 %17, 1441792, !dbg !12039
  br i1 %cmp18, label %if.then20, label %if.end26, !dbg !12040

if.then20:                                        ; preds = %land.lhs.true17
  %18 = load i32, i32* %scratch, align 4, !dbg !12041
  %or21 = or i32 %18, 805306368, !dbg !12041
  store i32 %or21, i32* %scratch, align 4, !dbg !12041
  %19 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12043
  %bug7734_patched22 = getelementptr inbounds %struct.net2280, %struct.net2280* %19, i32 0, i32 4, !dbg !12044
  %bf.load23 = load i16, i16* %bug7734_patched22, align 8, !dbg !12045
  %bf.clear24 = and i16 %bf.load23, -2049, !dbg !12045
  %bf.set25 = or i16 %bf.clear24, 2048, !dbg !12045
  store i16 %bf.set25, i16* %bug7734_patched22, align 8, !dbg !12045
  br label %for.end, !dbg !12046

if.end26:                                         ; preds = %land.lhs.true17, %for.body
  call void @__const_udelay(i64 42950) #12, !dbg !12047
  br label %for.inc, !dbg !12052

for.inc:                                          ; preds = %if.end26
  %20 = load i32, i32* %ack_wait_timeout, align 4, !dbg !12053
  %inc = add i32 %20, 1, !dbg !12053
  store i32 %inc, i32* %ack_wait_timeout, align 4, !dbg !12053
  br label %for.cond, !dbg !12054, !llvm.loop !12055

for.end:                                          ; preds = %if.then20, %for.cond
  %21 = load i32, i32* %ack_wait_timeout, align 4, !dbg !12057
  %cmp27 = icmp uge i32 %21, 200, !dbg !12059
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !12060

if.then29:                                        ; preds = %for.end
  %22 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12061
  %pdev = getelementptr inbounds %struct.net2280, %struct.net2280* %22, i32 0, i32 9, !dbg !12061
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12061
  %dev30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 41, !dbg !12061
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev30, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.47, i64 0, i64 0)) #13, !dbg !12061
  %24 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12063
  %pdev31 = getelementptr inbounds %struct.net2280, %struct.net2280* %24, i32 0, i32 9, !dbg !12063
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev31, align 8, !dbg !12063
  %dev32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !12063
  %26 = load i32, i32* %state, align 4, !dbg !12063
  %shr = lshr i32 %26, 16, !dbg !12063
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev32, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.48, i64 0, i64 0), i32 %shr) #13, !dbg !12063
  br label %if.end35, !dbg !12064

if.else:                                          ; preds = %for.end
  %27 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12065
  %pdev33 = getelementptr inbounds %struct.net2280, %struct.net2280* %27, i32 0, i32 9, !dbg !12065
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev33, align 8, !dbg !12065
  %dev34 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 41, !dbg !12065
  %29 = load i32, i32* %ack_wait_timeout, align 4, !dbg !12065
  %mul = mul i32 10, %29, !dbg !12065
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev34, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.49, i64 0, i64 0), i32 %mul) #13, !dbg !12065
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then29
  br label %restore_data_eps, !dbg !12067

restore_data_eps:                                 ; preds = %if.end35, %if.then9
  call void @llvm.dbg.label(metadata !12068), !dbg !12069
  %30 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12070
  call void @defect7374_disable_data_eps(%struct.net2280* %30) #12, !dbg !12071
  %31 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12072
  %regs36 = getelementptr inbounds %struct.net2280, %struct.net2280* %31, i32 0, i32 10, !dbg !12073
  %32 = load %struct.net2280_regs*, %struct.net2280_regs** %regs36, align 8, !dbg !12073
  %33 = load i32, i32* %scratch, align 4, !dbg !12074
  call void @set_idx_reg(%struct.net2280_regs* %32, i32 11, i32 %33) #12, !dbg !12075
  br label %return, !dbg !12076

return:                                           ; preds = %restore_data_eps, %if.then
  ret void, !dbg !12077
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_stat0_irqs_superspeed(%struct.net2280* %dev, %struct.net2280_ep* %ep, i64 %r.coerce) #2 !dbg !12078 {
entry:
  %lock.addr.i253 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i253, metadata !5567, metadata !DIExpression()), !dbg !12081
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5561, metadata !DIExpression()), !dbg !12084
  %r = alloca %struct.usb_ctrlrequest, align 1
  %dev.addr = alloca %struct.net2280*, align 8
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %e = alloca %struct.net2280_ep*, align 8
  %status = alloca i16, align 2
  %tmp = alloca i32, align 4
  %0 = bitcast %struct.usb_ctrlrequest* %r to i64*
  store i64 %r.coerce, i64* %0, align 1
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !12086, metadata !DIExpression()), !dbg !12087
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !12088, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.declare(metadata %struct.usb_ctrlrequest* %r, metadata !12090, metadata !DIExpression()), !dbg !12091
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %e, metadata !12092, metadata !DIExpression()), !dbg !12093
  call void @llvm.dbg.declare(metadata i16* %status, metadata !12094, metadata !DIExpression()), !dbg !12095
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !12096, metadata !DIExpression()), !dbg !12097
  store i32 0, i32* %tmp, align 4, !dbg !12097
  %bRequest = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r, i32 0, i32 1, !dbg !12098
  %1 = load i8, i8* %bRequest, align 1, !dbg !12098
  %conv = zext i8 %1 to i32, !dbg !12099
  switch i32 %conv, label %sw.default238 [
    i32 9, label %sw.bb
    i32 0, label %sw.bb1
    i32 1, label %sw.bb50
    i32 3, label %sw.bb136
  ], !dbg !12100

sw.bb:                                            ; preds = %entry
  %wValue = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r, i32 0, i32 2, !dbg !12101
  %2 = load i16, i16* %wValue, align 1, !dbg !12101
  %tobool = icmp ne i16 %2, 0, !dbg !12102
  %lnot = xor i1 %tobool, true, !dbg !12102
  %lnot.ext = zext i1 %lnot to i32, !dbg !12102
  %3 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12103
  %addressed_state = getelementptr inbounds %struct.net2280, %struct.net2280* %3, i32 0, i32 4, !dbg !12104
  %4 = trunc i32 %lnot.ext to i16, !dbg !12105
  %bf.load = load i16, i16* %addressed_state, align 8, !dbg !12105
  %bf.value = and i16 %4, 1, !dbg !12105
  %bf.shl = shl i16 %bf.value, 10, !dbg !12105
  %bf.clear = and i16 %bf.load, -1025, !dbg !12105
  %bf.set = or i16 %bf.clear, %bf.shl, !dbg !12105
  store i16 %bf.set, i16* %addressed_state, align 8, !dbg !12105
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !12105
  br label %usb3_delegate, !dbg !12106

sw.bb1:                                           ; preds = %entry
  %bRequestType = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r, i32 0, i32 0, !dbg !12107
  %5 = load i8, i8* %bRequestType, align 1, !dbg !12107
  %conv2 = zext i8 %5 to i32, !dbg !12108
  switch i32 %conv2, label %sw.default [
    i32 128, label %sw.bb3
    i32 130, label %sw.bb36
  ], !dbg !12109

sw.bb3:                                           ; preds = %sw.bb1
  %6 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12110
  %wakeup_enable = getelementptr inbounds %struct.net2280, %struct.net2280* %6, i32 0, i32 4, !dbg !12112
  %bf.load4 = load i16, i16* %wakeup_enable, align 8, !dbg !12112
  %bf.lshr = lshr i16 %bf.load4, 9, !dbg !12112
  %bf.clear5 = and i16 %bf.lshr, 1, !dbg !12112
  %bf.cast = zext i16 %bf.clear5 to i32, !dbg !12112
  %tobool6 = icmp ne i32 %bf.cast, 0, !dbg !12110
  %7 = zext i1 %tobool6 to i64, !dbg !12110
  %cond = select i1 %tobool6, i32 2, i32 0, !dbg !12110
  %conv7 = trunc i32 %cond to i16, !dbg !12110
  store i16 %conv7, i16* %status, align 2, !dbg !12113
  %8 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12114
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %8, i32 0, i32 0, !dbg !12116
  %is_selfpowered = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 15, !dbg !12117
  %9 = bitcast i24* %is_selfpowered to i32*, !dbg !12117
  %bf.load8 = load i32, i32* %9, align 8, !dbg !12117
  %bf.lshr9 = lshr i32 %bf.load8, 13, !dbg !12117
  %bf.clear10 = and i32 %bf.lshr9, 1, !dbg !12117
  %tobool11 = icmp ne i32 %bf.clear10, 0, !dbg !12114
  br i1 %tobool11, label %if.then, label %if.end, !dbg !12118

if.then:                                          ; preds = %sw.bb3
  %10 = load i16, i16* %status, align 2, !dbg !12119
  %conv12 = zext i16 %10 to i64, !dbg !12119
  %or = or i64 %conv12, 1, !dbg !12119
  %conv13 = trunc i64 %or to i16, !dbg !12119
  store i16 %conv13, i16* %status, align 2, !dbg !12119
  br label %if.end, !dbg !12120

if.end:                                           ; preds = %if.then, %sw.bb3
  %11 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12121
  %u1_enable = getelementptr inbounds %struct.net2280, %struct.net2280* %11, i32 0, i32 4, !dbg !12122
  %bf.load14 = load i16, i16* %u1_enable, align 8, !dbg !12122
  %bf.lshr15 = lshr i16 %bf.load14, 6, !dbg !12122
  %bf.clear16 = and i16 %bf.lshr15, 1, !dbg !12122
  %bf.cast17 = zext i16 %bf.clear16 to i32, !dbg !12122
  %shl = shl i32 %bf.cast17, 2, !dbg !12123
  %12 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12124
  %u2_enable = getelementptr inbounds %struct.net2280, %struct.net2280* %12, i32 0, i32 4, !dbg !12125
  %bf.load18 = load i16, i16* %u2_enable, align 8, !dbg !12125
  %bf.lshr19 = lshr i16 %bf.load18, 7, !dbg !12125
  %bf.clear20 = and i16 %bf.lshr19, 1, !dbg !12125
  %bf.cast21 = zext i16 %bf.clear20 to i32, !dbg !12125
  %shl22 = shl i32 %bf.cast21, 3, !dbg !12126
  %or23 = or i32 %shl, %shl22, !dbg !12127
  %13 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12128
  %ltm_enable = getelementptr inbounds %struct.net2280, %struct.net2280* %13, i32 0, i32 4, !dbg !12129
  %bf.load24 = load i16, i16* %ltm_enable, align 8, !dbg !12129
  %bf.lshr25 = lshr i16 %bf.load24, 8, !dbg !12129
  %bf.clear26 = and i16 %bf.lshr25, 1, !dbg !12129
  %bf.cast27 = zext i16 %bf.clear26 to i32, !dbg !12129
  %shl28 = shl i32 %bf.cast27, 4, !dbg !12130
  %or29 = or i32 %or23, %shl28, !dbg !12131
  %14 = load i16, i16* %status, align 2, !dbg !12132
  %conv30 = zext i16 %14 to i32, !dbg !12132
  %or31 = or i32 %conv30, %or29, !dbg !12132
  %conv32 = trunc i32 %or31 to i16, !dbg !12132
  store i16 %conv32, i16* %status, align 2, !dbg !12132
  %15 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12133
  %epregs = getelementptr inbounds %struct.net2280, %struct.net2280* %15, i32 0, i32 16, !dbg !12134
  %16 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %epregs, align 8, !dbg !12134
  %arrayidx = getelementptr %struct.net2280_ep_regs, %struct.net2280_ep_regs* %16, i64 0, !dbg !12133
  %ep_irqenb = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %arrayidx, i32 0, i32 2, !dbg !12135
  %17 = bitcast i32* %ep_irqenb to i8*, !dbg !12136
  call void @writel(i32 0, i8* %17) #12, !dbg !12137
  %18 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12138
  call void @set_fifo_bytecount(%struct.net2280_ep* %18, i32 2) #12, !dbg !12139
  %19 = load i16, i16* %status, align 2, !dbg !12140
  %conv33 = zext i16 %19 to i32, !dbg !12141
  %20 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12142
  %epregs34 = getelementptr inbounds %struct.net2280, %struct.net2280* %20, i32 0, i32 16, !dbg !12143
  %21 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %epregs34, align 8, !dbg !12143
  %arrayidx35 = getelementptr %struct.net2280_ep_regs, %struct.net2280_ep_regs* %21, i64 0, !dbg !12142
  %ep_data = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %arrayidx35, i32 0, i32 5, !dbg !12144
  %22 = bitcast i32* %ep_data to i8*, !dbg !12145
  call void @writel(i32 %conv33, i8* %22) #12, !dbg !12146
  %23 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12147
  call void @allow_status_338x(%struct.net2280_ep* %23) #12, !dbg !12148
  br label %sw.epilog, !dbg !12149

sw.bb36:                                          ; preds = %sw.bb1
  %24 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12150
  %wIndex = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r, i32 0, i32 3, !dbg !12151
  %25 = load i16, i16* %wIndex, align 1, !dbg !12151
  %call = call %struct.net2280_ep* @get_ep_by_addr(%struct.net2280* %24, i16 zeroext %25) #12, !dbg !12152
  store %struct.net2280_ep* %call, %struct.net2280_ep** %e, align 8, !dbg !12153
  %26 = load %struct.net2280_ep*, %struct.net2280_ep** %e, align 8, !dbg !12154
  %tobool37 = icmp ne %struct.net2280_ep* %26, null, !dbg !12154
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !12156

if.then38:                                        ; preds = %sw.bb36
  br label %do_stall3, !dbg !12157

if.end39:                                         ; preds = %sw.bb36
  %27 = load %struct.net2280_ep*, %struct.net2280_ep** %e, align 8, !dbg !12158
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %27, i32 0, i32 2, !dbg !12159
  %28 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !12159
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %28, i32 0, i32 1, !dbg !12160
  %29 = bitcast i32* %ep_rsp to i8*, !dbg !12161
  %call40 = call i32 @readl(i8* %29) #12, !dbg !12162
  %conv41 = zext i32 %call40 to i64, !dbg !12162
  %and = and i64 %conv41, 1, !dbg !12163
  %conv42 = trunc i64 %and to i16, !dbg !12162
  store i16 %conv42, i16* %status, align 2, !dbg !12164
  %30 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12165
  %epregs43 = getelementptr inbounds %struct.net2280, %struct.net2280* %30, i32 0, i32 16, !dbg !12166
  %31 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %epregs43, align 8, !dbg !12166
  %arrayidx44 = getelementptr %struct.net2280_ep_regs, %struct.net2280_ep_regs* %31, i64 0, !dbg !12165
  %ep_irqenb45 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %arrayidx44, i32 0, i32 2, !dbg !12167
  %32 = bitcast i32* %ep_irqenb45 to i8*, !dbg !12168
  call void @writel(i32 0, i8* %32) #12, !dbg !12169
  %33 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12170
  call void @set_fifo_bytecount(%struct.net2280_ep* %33, i32 2) #12, !dbg !12171
  %34 = load i16, i16* %status, align 2, !dbg !12172
  %conv46 = zext i16 %34 to i32, !dbg !12173
  %35 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12174
  %epregs47 = getelementptr inbounds %struct.net2280, %struct.net2280* %35, i32 0, i32 16, !dbg !12175
  %36 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %epregs47, align 8, !dbg !12175
  %arrayidx48 = getelementptr %struct.net2280_ep_regs, %struct.net2280_ep_regs* %36, i64 0, !dbg !12174
  %ep_data49 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %arrayidx48, i32 0, i32 5, !dbg !12176
  %37 = bitcast i32* %ep_data49 to i8*, !dbg !12177
  call void @writel(i32 %conv46, i8* %37) #12, !dbg !12178
  %38 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12179
  call void @allow_status_338x(%struct.net2280_ep* %38) #12, !dbg !12180
  br label %sw.epilog, !dbg !12181

sw.default:                                       ; preds = %sw.bb1
  br label %usb3_delegate, !dbg !12182

sw.epilog:                                        ; preds = %if.end39, %if.end
  br label %sw.epilog244, !dbg !12183

sw.bb50:                                          ; preds = %entry
  %bRequestType51 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r, i32 0, i32 0, !dbg !12184
  %39 = load i8, i8* %bRequestType51, align 1, !dbg !12184
  %conv52 = zext i8 %39 to i32, !dbg !12185
  switch i32 %conv52, label %sw.default134 [
    i32 0, label %sw.bb53
    i32 2, label %sw.bb114
  ], !dbg !12186

sw.bb53:                                          ; preds = %sw.bb50
  %40 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12187
  %addressed_state54 = getelementptr inbounds %struct.net2280, %struct.net2280* %40, i32 0, i32 4, !dbg !12190
  %bf.load55 = load i16, i16* %addressed_state54, align 8, !dbg !12190
  %bf.lshr56 = lshr i16 %bf.load55, 10, !dbg !12190
  %bf.clear57 = and i16 %bf.lshr56, 1, !dbg !12190
  %bf.cast58 = zext i16 %bf.clear57 to i32, !dbg !12190
  %tobool59 = icmp ne i32 %bf.cast58, 0, !dbg !12187
  br i1 %tobool59, label %if.end99, label %if.then60, !dbg !12191

if.then60:                                        ; preds = %sw.bb53
  %wValue61 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r, i32 0, i32 2, !dbg !12192
  %41 = load i16, i16* %wValue61, align 1, !dbg !12192
  %conv62 = zext i16 %41 to i32, !dbg !12192
  switch i32 %conv62, label %sw.default97 [
    i32 48, label %sw.bb63
    i32 49, label %sw.bb73
    i32 50, label %sw.bb85
  ], !dbg !12194

sw.bb63:                                          ; preds = %if.then60
  %42 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12195
  %u1_enable64 = getelementptr inbounds %struct.net2280, %struct.net2280* %42, i32 0, i32 4, !dbg !12197
  %bf.load65 = load i16, i16* %u1_enable64, align 8, !dbg !12198
  %bf.clear66 = and i16 %bf.load65, -65, !dbg !12198
  store i16 %bf.clear66, i16* %u1_enable64, align 8, !dbg !12198
  %43 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12199
  %usb_ext = getelementptr inbounds %struct.net2280, %struct.net2280* %43, i32 0, i32 12, !dbg !12200
  %44 = load %struct.usb338x_usb_ext_regs*, %struct.usb338x_usb_ext_regs** %usb_ext, align 8, !dbg !12200
  %usbctl2 = getelementptr inbounds %struct.usb338x_usb_ext_regs, %struct.usb338x_usb_ext_regs* %44, i32 0, i32 5, !dbg !12201
  %45 = bitcast i32* %usbctl2 to i8*, !dbg !12202
  %call67 = call i32 @readl(i8* %45) #12, !dbg !12203
  %conv68 = zext i32 %call67 to i64, !dbg !12203
  %and69 = and i64 %conv68, -33, !dbg !12204
  %conv70 = trunc i64 %and69 to i32, !dbg !12203
  %46 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12205
  %usb_ext71 = getelementptr inbounds %struct.net2280, %struct.net2280* %46, i32 0, i32 12, !dbg !12206
  %47 = load %struct.usb338x_usb_ext_regs*, %struct.usb338x_usb_ext_regs** %usb_ext71, align 8, !dbg !12206
  %usbctl272 = getelementptr inbounds %struct.usb338x_usb_ext_regs, %struct.usb338x_usb_ext_regs* %47, i32 0, i32 5, !dbg !12207
  %48 = bitcast i32* %usbctl272 to i8*, !dbg !12208
  call void @writel(i32 %conv70, i8* %48) #12, !dbg !12209
  %49 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12210
  call void @allow_status_338x(%struct.net2280_ep* %49) #12, !dbg !12211
  br label %next_endpoints3, !dbg !12212

sw.bb73:                                          ; preds = %if.then60
  %50 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12213
  %u2_enable74 = getelementptr inbounds %struct.net2280, %struct.net2280* %50, i32 0, i32 4, !dbg !12214
  %bf.load75 = load i16, i16* %u2_enable74, align 8, !dbg !12215
  %bf.clear76 = and i16 %bf.load75, -129, !dbg !12215
  store i16 %bf.clear76, i16* %u2_enable74, align 8, !dbg !12215
  %51 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12216
  %usb_ext77 = getelementptr inbounds %struct.net2280, %struct.net2280* %51, i32 0, i32 12, !dbg !12217
  %52 = load %struct.usb338x_usb_ext_regs*, %struct.usb338x_usb_ext_regs** %usb_ext77, align 8, !dbg !12217
  %usbctl278 = getelementptr inbounds %struct.usb338x_usb_ext_regs, %struct.usb338x_usb_ext_regs* %52, i32 0, i32 5, !dbg !12218
  %53 = bitcast i32* %usbctl278 to i8*, !dbg !12219
  %call79 = call i32 @readl(i8* %53) #12, !dbg !12220
  %conv80 = zext i32 %call79 to i64, !dbg !12220
  %and81 = and i64 %conv80, -65, !dbg !12221
  %conv82 = trunc i64 %and81 to i32, !dbg !12220
  %54 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12222
  %usb_ext83 = getelementptr inbounds %struct.net2280, %struct.net2280* %54, i32 0, i32 12, !dbg !12223
  %55 = load %struct.usb338x_usb_ext_regs*, %struct.usb338x_usb_ext_regs** %usb_ext83, align 8, !dbg !12223
  %usbctl284 = getelementptr inbounds %struct.usb338x_usb_ext_regs, %struct.usb338x_usb_ext_regs* %55, i32 0, i32 5, !dbg !12224
  %56 = bitcast i32* %usbctl284 to i8*, !dbg !12225
  call void @writel(i32 %conv82, i8* %56) #12, !dbg !12226
  %57 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12227
  call void @allow_status_338x(%struct.net2280_ep* %57) #12, !dbg !12228
  br label %next_endpoints3, !dbg !12229

sw.bb85:                                          ; preds = %if.then60
  %58 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12230
  %ltm_enable86 = getelementptr inbounds %struct.net2280, %struct.net2280* %58, i32 0, i32 4, !dbg !12231
  %bf.load87 = load i16, i16* %ltm_enable86, align 8, !dbg !12232
  %bf.clear88 = and i16 %bf.load87, -257, !dbg !12232
  store i16 %bf.clear88, i16* %ltm_enable86, align 8, !dbg !12232
  %59 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12233
  %usb_ext89 = getelementptr inbounds %struct.net2280, %struct.net2280* %59, i32 0, i32 12, !dbg !12234
  %60 = load %struct.usb338x_usb_ext_regs*, %struct.usb338x_usb_ext_regs** %usb_ext89, align 8, !dbg !12234
  %usbctl290 = getelementptr inbounds %struct.usb338x_usb_ext_regs, %struct.usb338x_usb_ext_regs* %60, i32 0, i32 5, !dbg !12235
  %61 = bitcast i32* %usbctl290 to i8*, !dbg !12236
  %call91 = call i32 @readl(i8* %61) #12, !dbg !12237
  %conv92 = zext i32 %call91 to i64, !dbg !12237
  %and93 = and i64 %conv92, -129, !dbg !12238
  %conv94 = trunc i64 %and93 to i32, !dbg !12237
  %62 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12239
  %usb_ext95 = getelementptr inbounds %struct.net2280, %struct.net2280* %62, i32 0, i32 12, !dbg !12240
  %63 = load %struct.usb338x_usb_ext_regs*, %struct.usb338x_usb_ext_regs** %usb_ext95, align 8, !dbg !12240
  %usbctl296 = getelementptr inbounds %struct.usb338x_usb_ext_regs, %struct.usb338x_usb_ext_regs* %63, i32 0, i32 5, !dbg !12241
  %64 = bitcast i32* %usbctl296 to i8*, !dbg !12242
  call void @writel(i32 %conv94, i8* %64) #12, !dbg !12243
  %65 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12244
  call void @allow_status_338x(%struct.net2280_ep* %65) #12, !dbg !12245
  br label %next_endpoints3, !dbg !12246

sw.default97:                                     ; preds = %if.then60
  br label %sw.epilog98, !dbg !12247

sw.epilog98:                                      ; preds = %sw.default97
  br label %if.end99, !dbg !12248

if.end99:                                         ; preds = %sw.epilog98, %sw.bb53
  %wValue100 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r, i32 0, i32 2, !dbg !12249
  %66 = load i16, i16* %wValue100, align 1, !dbg !12249
  %conv101 = zext i16 %66 to i32, !dbg !12249
  %cmp = icmp eq i32 %conv101, 1, !dbg !12251
  br i1 %cmp, label %if.then103, label %if.end113, !dbg !12252

if.then103:                                       ; preds = %if.end99
  %67 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12253
  %wakeup_enable104 = getelementptr inbounds %struct.net2280, %struct.net2280* %67, i32 0, i32 4, !dbg !12255
  %bf.load105 = load i16, i16* %wakeup_enable104, align 8, !dbg !12256
  %bf.clear106 = and i16 %bf.load105, -513, !dbg !12256
  store i16 %bf.clear106, i16* %wakeup_enable104, align 8, !dbg !12256
  %68 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12257
  %usb = getelementptr inbounds %struct.net2280, %struct.net2280* %68, i32 0, i32 11, !dbg !12258
  %69 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb, align 8, !dbg !12258
  %usbctl = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %69, i32 0, i32 3, !dbg !12259
  %70 = bitcast i32* %usbctl to i8*, !dbg !12260
  %call107 = call i32 @readl(i8* %70) #12, !dbg !12261
  %conv108 = zext i32 %call107 to i64, !dbg !12261
  %and109 = and i64 %conv108, -3, !dbg !12262
  %conv110 = trunc i64 %and109 to i32, !dbg !12261
  %71 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12263
  %usb111 = getelementptr inbounds %struct.net2280, %struct.net2280* %71, i32 0, i32 11, !dbg !12264
  %72 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb111, align 8, !dbg !12264
  %usbctl112 = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %72, i32 0, i32 3, !dbg !12265
  %73 = bitcast i32* %usbctl112 to i8*, !dbg !12266
  call void @writel(i32 %conv110, i8* %73) #12, !dbg !12267
  %74 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12268
  call void @allow_status_338x(%struct.net2280_ep* %74) #12, !dbg !12269
  br label %sw.epilog135, !dbg !12270

if.end113:                                        ; preds = %if.end99
  br label %usb3_delegate, !dbg !12271

sw.bb114:                                         ; preds = %sw.bb50
  %75 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12272
  %wIndex115 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r, i32 0, i32 3, !dbg !12273
  %76 = load i16, i16* %wIndex115, align 1, !dbg !12273
  %call116 = call %struct.net2280_ep* @get_ep_by_addr(%struct.net2280* %75, i16 zeroext %76) #12, !dbg !12274
  store %struct.net2280_ep* %call116, %struct.net2280_ep** %e, align 8, !dbg !12275
  %77 = load %struct.net2280_ep*, %struct.net2280_ep** %e, align 8, !dbg !12276
  %tobool117 = icmp ne %struct.net2280_ep* %77, null, !dbg !12276
  br i1 %tobool117, label %if.end119, label %if.then118, !dbg !12278

if.then118:                                       ; preds = %sw.bb114
  br label %do_stall3, !dbg !12279

if.end119:                                        ; preds = %sw.bb114
  %wValue120 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r, i32 0, i32 2, !dbg !12280
  %78 = load i16, i16* %wValue120, align 1, !dbg !12280
  %conv121 = zext i16 %78 to i32, !dbg !12280
  %cmp122 = icmp ne i32 %conv121, 0, !dbg !12282
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !12283

if.then124:                                       ; preds = %if.end119
  br label %do_stall3, !dbg !12284

if.end125:                                        ; preds = %if.end119
  %79 = load %struct.net2280_ep*, %struct.net2280_ep** %e, align 8, !dbg !12285
  call void @ep_clear_seqnum(%struct.net2280_ep* %79) #12, !dbg !12286
  %80 = load %struct.net2280_ep*, %struct.net2280_ep** %e, align 8, !dbg !12287
  call void @clear_halt(%struct.net2280_ep* %80) #12, !dbg !12288
  %81 = load %struct.net2280_ep*, %struct.net2280_ep** %e, align 8, !dbg !12289
  %queue = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %81, i32 0, i32 8, !dbg !12291
  %call126 = call i32 @list_empty(%struct.list_head* %queue) #12, !dbg !12292
  %tobool127 = icmp ne i32 %call126, 0, !dbg !12292
  br i1 %tobool127, label %if.end130, label %land.lhs.true, !dbg !12293

land.lhs.true:                                    ; preds = %if.end125
  %82 = load %struct.net2280_ep*, %struct.net2280_ep** %e, align 8, !dbg !12294
  %td_dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %82, i32 0, i32 5, !dbg !12295
  %83 = load i64, i64* %td_dma, align 8, !dbg !12295
  %tobool128 = icmp ne i64 %83, 0, !dbg !12294
  br i1 %tobool128, label %if.then129, label %if.end130, !dbg !12296

if.then129:                                       ; preds = %land.lhs.true
  %84 = load %struct.net2280_ep*, %struct.net2280_ep** %e, align 8, !dbg !12297
  call void @restart_dma(%struct.net2280_ep* %84) #12, !dbg !12298
  br label %if.end130, !dbg !12298

if.end130:                                        ; preds = %if.then129, %land.lhs.true, %if.end125
  %85 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12299
  call void @allow_status(%struct.net2280_ep* %85) #12, !dbg !12300
  %86 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12301
  %stopped = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %86, i32 0, i32 10, !dbg !12302
  %bf.load131 = load i32, i32* %stopped, align 8, !dbg !12303
  %bf.clear132 = and i32 %bf.load131, -4194305, !dbg !12303
  %bf.set133 = or i32 %bf.clear132, 4194304, !dbg !12303
  store i32 %bf.set133, i32* %stopped, align 8, !dbg !12303
  br label %sw.epilog135, !dbg !12304

sw.default134:                                    ; preds = %sw.bb50
  br label %usb3_delegate, !dbg !12305

sw.epilog135:                                     ; preds = %if.end130, %if.then103
  br label %sw.epilog244, !dbg !12306

sw.bb136:                                         ; preds = %entry
  %bRequestType137 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r, i32 0, i32 0, !dbg !12307
  %87 = load i8, i8* %bRequestType137, align 1, !dbg !12307
  %conv138 = zext i8 %87 to i32, !dbg !12308
  switch i32 %conv138, label %sw.default236 [
    i32 0, label %sw.bb139
    i32 2, label %sw.bb209
  ], !dbg !12309

sw.bb139:                                         ; preds = %sw.bb136
  %88 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12310
  %addressed_state140 = getelementptr inbounds %struct.net2280, %struct.net2280* %88, i32 0, i32 4, !dbg !12313
  %bf.load141 = load i16, i16* %addressed_state140, align 8, !dbg !12313
  %bf.lshr142 = lshr i16 %bf.load141, 10, !dbg !12313
  %bf.clear143 = and i16 %bf.lshr142, 1, !dbg !12313
  %bf.cast144 = zext i16 %bf.clear143 to i32, !dbg !12313
  %tobool145 = icmp ne i32 %bf.cast144, 0, !dbg !12310
  br i1 %tobool145, label %if.end190, label %if.then146, !dbg !12314

if.then146:                                       ; preds = %sw.bb139
  %wValue147 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r, i32 0, i32 2, !dbg !12315
  %89 = load i16, i16* %wValue147, align 1, !dbg !12315
  %conv148 = zext i16 %89 to i32, !dbg !12315
  switch i32 %conv148, label %sw.default188 [
    i32 48, label %sw.bb149
    i32 49, label %sw.bb162
    i32 50, label %sw.bb175
  ], !dbg !12317

sw.bb149:                                         ; preds = %if.then146
  %90 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12318
  %u1_enable150 = getelementptr inbounds %struct.net2280, %struct.net2280* %90, i32 0, i32 4, !dbg !12320
  %bf.load151 = load i16, i16* %u1_enable150, align 8, !dbg !12321
  %bf.clear152 = and i16 %bf.load151, -65, !dbg !12321
  %bf.set153 = or i16 %bf.clear152, 64, !dbg !12321
  store i16 %bf.set153, i16* %u1_enable150, align 8, !dbg !12321
  %91 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12322
  %usb_ext154 = getelementptr inbounds %struct.net2280, %struct.net2280* %91, i32 0, i32 12, !dbg !12323
  %92 = load %struct.usb338x_usb_ext_regs*, %struct.usb338x_usb_ext_regs** %usb_ext154, align 8, !dbg !12323
  %usbctl2155 = getelementptr inbounds %struct.usb338x_usb_ext_regs, %struct.usb338x_usb_ext_regs* %92, i32 0, i32 5, !dbg !12324
  %93 = bitcast i32* %usbctl2155 to i8*, !dbg !12325
  %call156 = call i32 @readl(i8* %93) #12, !dbg !12326
  %conv157 = zext i32 %call156 to i64, !dbg !12326
  %or158 = or i64 %conv157, 32, !dbg !12327
  %conv159 = trunc i64 %or158 to i32, !dbg !12326
  %94 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12328
  %usb_ext160 = getelementptr inbounds %struct.net2280, %struct.net2280* %94, i32 0, i32 12, !dbg !12329
  %95 = load %struct.usb338x_usb_ext_regs*, %struct.usb338x_usb_ext_regs** %usb_ext160, align 8, !dbg !12329
  %usbctl2161 = getelementptr inbounds %struct.usb338x_usb_ext_regs, %struct.usb338x_usb_ext_regs* %95, i32 0, i32 5, !dbg !12330
  %96 = bitcast i32* %usbctl2161 to i8*, !dbg !12331
  call void @writel(i32 %conv159, i8* %96) #12, !dbg !12332
  %97 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12333
  call void @allow_status_338x(%struct.net2280_ep* %97) #12, !dbg !12334
  br label %next_endpoints3, !dbg !12335

sw.bb162:                                         ; preds = %if.then146
  %98 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12336
  %u2_enable163 = getelementptr inbounds %struct.net2280, %struct.net2280* %98, i32 0, i32 4, !dbg !12337
  %bf.load164 = load i16, i16* %u2_enable163, align 8, !dbg !12338
  %bf.clear165 = and i16 %bf.load164, -129, !dbg !12338
  %bf.set166 = or i16 %bf.clear165, 128, !dbg !12338
  store i16 %bf.set166, i16* %u2_enable163, align 8, !dbg !12338
  %99 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12339
  %usb_ext167 = getelementptr inbounds %struct.net2280, %struct.net2280* %99, i32 0, i32 12, !dbg !12340
  %100 = load %struct.usb338x_usb_ext_regs*, %struct.usb338x_usb_ext_regs** %usb_ext167, align 8, !dbg !12340
  %usbctl2168 = getelementptr inbounds %struct.usb338x_usb_ext_regs, %struct.usb338x_usb_ext_regs* %100, i32 0, i32 5, !dbg !12341
  %101 = bitcast i32* %usbctl2168 to i8*, !dbg !12342
  %call169 = call i32 @readl(i8* %101) #12, !dbg !12343
  %conv170 = zext i32 %call169 to i64, !dbg !12343
  %or171 = or i64 %conv170, 64, !dbg !12344
  %conv172 = trunc i64 %or171 to i32, !dbg !12343
  %102 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12345
  %usb_ext173 = getelementptr inbounds %struct.net2280, %struct.net2280* %102, i32 0, i32 12, !dbg !12346
  %103 = load %struct.usb338x_usb_ext_regs*, %struct.usb338x_usb_ext_regs** %usb_ext173, align 8, !dbg !12346
  %usbctl2174 = getelementptr inbounds %struct.usb338x_usb_ext_regs, %struct.usb338x_usb_ext_regs* %103, i32 0, i32 5, !dbg !12347
  %104 = bitcast i32* %usbctl2174 to i8*, !dbg !12348
  call void @writel(i32 %conv172, i8* %104) #12, !dbg !12349
  %105 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12350
  call void @allow_status_338x(%struct.net2280_ep* %105) #12, !dbg !12351
  br label %next_endpoints3, !dbg !12352

sw.bb175:                                         ; preds = %if.then146
  %106 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12353
  %ltm_enable176 = getelementptr inbounds %struct.net2280, %struct.net2280* %106, i32 0, i32 4, !dbg !12354
  %bf.load177 = load i16, i16* %ltm_enable176, align 8, !dbg !12355
  %bf.clear178 = and i16 %bf.load177, -257, !dbg !12355
  %bf.set179 = or i16 %bf.clear178, 256, !dbg !12355
  store i16 %bf.set179, i16* %ltm_enable176, align 8, !dbg !12355
  %107 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12356
  %usb_ext180 = getelementptr inbounds %struct.net2280, %struct.net2280* %107, i32 0, i32 12, !dbg !12357
  %108 = load %struct.usb338x_usb_ext_regs*, %struct.usb338x_usb_ext_regs** %usb_ext180, align 8, !dbg !12357
  %usbctl2181 = getelementptr inbounds %struct.usb338x_usb_ext_regs, %struct.usb338x_usb_ext_regs* %108, i32 0, i32 5, !dbg !12358
  %109 = bitcast i32* %usbctl2181 to i8*, !dbg !12359
  %call182 = call i32 @readl(i8* %109) #12, !dbg !12360
  %conv183 = zext i32 %call182 to i64, !dbg !12360
  %or184 = or i64 %conv183, 128, !dbg !12361
  %conv185 = trunc i64 %or184 to i32, !dbg !12360
  %110 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12362
  %usb_ext186 = getelementptr inbounds %struct.net2280, %struct.net2280* %110, i32 0, i32 12, !dbg !12363
  %111 = load %struct.usb338x_usb_ext_regs*, %struct.usb338x_usb_ext_regs** %usb_ext186, align 8, !dbg !12363
  %usbctl2187 = getelementptr inbounds %struct.usb338x_usb_ext_regs, %struct.usb338x_usb_ext_regs* %111, i32 0, i32 5, !dbg !12364
  %112 = bitcast i32* %usbctl2187 to i8*, !dbg !12365
  call void @writel(i32 %conv185, i8* %112) #12, !dbg !12366
  %113 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12367
  call void @allow_status_338x(%struct.net2280_ep* %113) #12, !dbg !12368
  br label %next_endpoints3, !dbg !12369

sw.default188:                                    ; preds = %if.then146
  br label %sw.epilog189, !dbg !12370

sw.epilog189:                                     ; preds = %sw.default188
  br label %if.end190, !dbg !12371

if.end190:                                        ; preds = %sw.epilog189, %sw.bb139
  %wValue191 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r, i32 0, i32 2, !dbg !12372
  %114 = load i16, i16* %wValue191, align 1, !dbg !12372
  %conv192 = zext i16 %114 to i32, !dbg !12372
  %cmp193 = icmp eq i32 %conv192, 1, !dbg !12374
  br i1 %cmp193, label %if.then195, label %if.end208, !dbg !12375

if.then195:                                       ; preds = %if.end190
  %115 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12376
  %wakeup_enable196 = getelementptr inbounds %struct.net2280, %struct.net2280* %115, i32 0, i32 4, !dbg !12378
  %bf.load197 = load i16, i16* %wakeup_enable196, align 8, !dbg !12379
  %bf.clear198 = and i16 %bf.load197, -513, !dbg !12379
  %bf.set199 = or i16 %bf.clear198, 512, !dbg !12379
  store i16 %bf.set199, i16* %wakeup_enable196, align 8, !dbg !12379
  %116 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12380
  %usb200 = getelementptr inbounds %struct.net2280, %struct.net2280* %116, i32 0, i32 11, !dbg !12381
  %117 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb200, align 8, !dbg !12381
  %usbctl201 = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %117, i32 0, i32 3, !dbg !12382
  %118 = bitcast i32* %usbctl201 to i8*, !dbg !12383
  %call202 = call i32 @readl(i8* %118) #12, !dbg !12384
  %conv203 = zext i32 %call202 to i64, !dbg !12384
  %or204 = or i64 %conv203, 2, !dbg !12385
  %conv205 = trunc i64 %or204 to i32, !dbg !12384
  %119 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12386
  %usb206 = getelementptr inbounds %struct.net2280, %struct.net2280* %119, i32 0, i32 11, !dbg !12387
  %120 = load %struct.net2280_usb_regs*, %struct.net2280_usb_regs** %usb206, align 8, !dbg !12387
  %usbctl207 = getelementptr inbounds %struct.net2280_usb_regs, %struct.net2280_usb_regs* %120, i32 0, i32 3, !dbg !12388
  %121 = bitcast i32* %usbctl207 to i8*, !dbg !12389
  call void @writel(i32 %conv205, i8* %121) #12, !dbg !12390
  %122 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12391
  call void @allow_status_338x(%struct.net2280_ep* %122) #12, !dbg !12392
  br label %sw.epilog237, !dbg !12393

if.end208:                                        ; preds = %if.end190
  br label %usb3_delegate, !dbg !12394

sw.bb209:                                         ; preds = %sw.bb136
  %123 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12395
  %wIndex210 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r, i32 0, i32 3, !dbg !12396
  %124 = load i16, i16* %wIndex210, align 1, !dbg !12396
  %call211 = call %struct.net2280_ep* @get_ep_by_addr(%struct.net2280* %123, i16 zeroext %124) #12, !dbg !12397
  store %struct.net2280_ep* %call211, %struct.net2280_ep** %e, align 8, !dbg !12398
  %125 = load %struct.net2280_ep*, %struct.net2280_ep** %e, align 8, !dbg !12399
  %tobool212 = icmp ne %struct.net2280_ep* %125, null, !dbg !12399
  br i1 %tobool212, label %lor.lhs.false, label %if.then217, !dbg !12401

lor.lhs.false:                                    ; preds = %sw.bb209
  %wValue213 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %r, i32 0, i32 2, !dbg !12402
  %126 = load i16, i16* %wValue213, align 1, !dbg !12402
  %conv214 = zext i16 %126 to i32, !dbg !12402
  %cmp215 = icmp ne i32 %conv214, 0, !dbg !12403
  br i1 %cmp215, label %if.then217, label %if.end218, !dbg !12404

if.then217:                                       ; preds = %lor.lhs.false, %sw.bb209
  br label %do_stall3, !dbg !12405

if.end218:                                        ; preds = %lor.lhs.false
  %127 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12406
  %stopped219 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %127, i32 0, i32 10, !dbg !12407
  %bf.load220 = load i32, i32* %stopped219, align 8, !dbg !12408
  %bf.clear221 = and i32 %bf.load220, -4194305, !dbg !12408
  %bf.set222 = or i32 %bf.clear221, 4194304, !dbg !12408
  store i32 %bf.set222, i32* %stopped219, align 8, !dbg !12408
  %128 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12409
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %128, i32 0, i32 10, !dbg !12411
  %bf.load223 = load i32, i32* %num, align 8, !dbg !12411
  %bf.clear224 = and i32 %bf.load223, 255, !dbg !12411
  %cmp225 = icmp eq i32 %bf.clear224, 0, !dbg !12412
  br i1 %cmp225, label %if.then227, label %if.else, !dbg !12413

if.then227:                                       ; preds = %if.end218
  %129 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12414
  %dev228 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %129, i32 0, i32 6, !dbg !12415
  %130 = load %struct.net2280*, %struct.net2280** %dev228, align 8, !dbg !12415
  %protocol_stall = getelementptr inbounds %struct.net2280, %struct.net2280* %130, i32 0, i32 4, !dbg !12416
  %bf.load229 = load i16, i16* %protocol_stall, align 8, !dbg !12417
  %bf.clear230 = and i16 %bf.load229, -3, !dbg !12417
  %bf.set231 = or i16 %bf.clear230, 2, !dbg !12417
  store i16 %bf.set231, i16* %protocol_stall, align 8, !dbg !12417
  br label %if.end235, !dbg !12414

if.else:                                          ; preds = %if.end218
  %131 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12418
  %dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %131, i32 0, i32 3, !dbg !12421
  %132 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !12421
  %tobool232 = icmp ne %struct.net2280_dma_regs* %132, null, !dbg !12418
  br i1 %tobool232, label %if.then233, label %if.end234, !dbg !12422

if.then233:                                       ; preds = %if.else
  %133 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12423
  call void @abort_dma(%struct.net2280_ep* %133) #12, !dbg !12424
  br label %if.end234, !dbg !12424

if.end234:                                        ; preds = %if.then233, %if.else
  %134 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12425
  call void @set_halt(%struct.net2280_ep* %134) #12, !dbg !12426
  br label %if.end235

if.end235:                                        ; preds = %if.end234, %if.then227
  %135 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12427
  call void @allow_status_338x(%struct.net2280_ep* %135) #12, !dbg !12428
  br label %sw.epilog237, !dbg !12429

sw.default236:                                    ; preds = %sw.bb136
  br label %usb3_delegate, !dbg !12430

sw.epilog237:                                     ; preds = %if.end235, %if.then195
  br label %sw.epilog244, !dbg !12431

sw.default238:                                    ; preds = %entry
  br label %usb3_delegate, !dbg !12431

usb3_delegate:                                    ; preds = %sw.default238, %sw.default236, %if.end208, %sw.default134, %if.end113, %sw.default, %sw.bb
  call void @llvm.dbg.label(metadata !12432), !dbg !12433
  %136 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12434
  %responded = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %136, i32 0, i32 10, !dbg !12435
  %bf.load239 = load i32, i32* %responded, align 8, !dbg !12436
  %bf.clear240 = and i32 %bf.load239, -67108865, !dbg !12436
  store i32 %bf.clear240, i32* %responded, align 8, !dbg !12436
  %137 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12437
  %lock = getelementptr inbounds %struct.net2280, %struct.net2280* %137, i32 0, i32 1, !dbg !12438
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12439, !srcloc !5643
  %138 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12440
  %139 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %138, i32 0, i32 0, !dbg !12440
  %rlock.i = bitcast %union.anon.4* %139 to %struct.raw_spinlock*, !dbg !12440
  %140 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12441
  %driver = getelementptr inbounds %struct.net2280, %struct.net2280* %140, i32 0, i32 3, !dbg !12442
  %141 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver, align 8, !dbg !12442
  %setup = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %141, i32 0, i32 4, !dbg !12443
  %142 = load i32 (%struct.usb_gadget*, %struct.usb_ctrlrequest*)*, i32 (%struct.usb_gadget*, %struct.usb_ctrlrequest*)** %setup, align 8, !dbg !12443
  %143 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12444
  %gadget241 = getelementptr inbounds %struct.net2280, %struct.net2280* %143, i32 0, i32 0, !dbg !12445
  %call242 = call i32 %142(%struct.usb_gadget* %gadget241, %struct.usb_ctrlrequest* %r) #12, !dbg !12441
  store i32 %call242, i32* %tmp, align 4, !dbg !12446
  %144 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12447
  %lock243 = getelementptr inbounds %struct.net2280, %struct.net2280* %144, i32 0, i32 1, !dbg !12448
  store %struct.spinlock* %lock243, %struct.spinlock** %lock.addr.i253, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12449, !srcloc !5595
  %145 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i253, align 8, !dbg !12450
  %146 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %145, i32 0, i32 0, !dbg !12450
  %rlock.i254 = bitcast %union.anon.4* %146 to %struct.raw_spinlock*, !dbg !12450
  br label %sw.epilog244, !dbg !12451

sw.epilog244:                                     ; preds = %usb3_delegate, %sw.epilog237, %sw.epilog135, %sw.epilog
  br label %do_stall3, !dbg !12451

do_stall3:                                        ; preds = %sw.epilog244, %if.then217, %if.then124, %if.then118, %if.then38
  call void @llvm.dbg.label(metadata !12452), !dbg !12453
  %147 = load i32, i32* %tmp, align 4, !dbg !12454
  %cmp245 = icmp slt i32 %147, 0, !dbg !12456
  br i1 %cmp245, label %if.then247, label %if.end252, !dbg !12457

if.then247:                                       ; preds = %do_stall3
  %148 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12458
  %protocol_stall248 = getelementptr inbounds %struct.net2280, %struct.net2280* %148, i32 0, i32 4, !dbg !12460
  %bf.load249 = load i16, i16* %protocol_stall248, align 8, !dbg !12461
  %bf.clear250 = and i16 %bf.load249, -3, !dbg !12461
  %bf.set251 = or i16 %bf.clear250, 2, !dbg !12461
  store i16 %bf.set251, i16* %protocol_stall248, align 8, !dbg !12461
  %149 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12462
  call void @set_halt(%struct.net2280_ep* %149) #12, !dbg !12463
  br label %if.end252, !dbg !12464

if.end252:                                        ; preds = %if.then247, %do_stall3
  br label %next_endpoints3, !dbg !12465

next_endpoints3:                                  ; preds = %if.end252, %sw.bb175, %sw.bb162, %sw.bb149, %sw.bb85, %sw.bb73, %sw.bb63
  call void @llvm.dbg.label(metadata !12466), !dbg !12467
  ret void, !dbg !12468
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net2280_ep* @get_ep_by_addr(%struct.net2280* %dev, i16 zeroext %wIndex) #2 !dbg !12469 {
entry:
  %retval = alloca %struct.net2280_ep*, align 8
  %dev.addr = alloca %struct.net2280*, align 8
  %wIndex.addr = alloca i16, align 2
  %ep = alloca %struct.net2280_ep*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280_ep*, align 8
  %bEndpointAddress = alloca i8, align 1
  %__mptr27 = alloca i8*, align 8
  %tmp33 = alloca %struct.net2280_ep*, align 8
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !12472, metadata !DIExpression()), !dbg !12473
  store i16 %wIndex, i16* %wIndex.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %wIndex.addr, metadata !12474, metadata !DIExpression()), !dbg !12475
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !12476, metadata !DIExpression()), !dbg !12477
  %0 = load i16, i16* %wIndex.addr, align 2, !dbg !12478
  %conv = zext i16 %0 to i32, !dbg !12478
  %and = and i32 %conv, 15, !dbg !12480
  %cmp = icmp eq i32 %and, 0, !dbg !12481
  br i1 %cmp, label %if.then, label %if.end, !dbg !12482

if.then:                                          ; preds = %entry
  %1 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12483
  %ep2 = getelementptr inbounds %struct.net2280, %struct.net2280* %1, i32 0, i32 2, !dbg !12484
  %arrayidx = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep2, i64 0, i64 0, !dbg !12483
  store %struct.net2280_ep* %arrayidx, %struct.net2280_ep** %retval, align 8, !dbg !12485
  br label %return, !dbg !12485

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12486, metadata !DIExpression()), !dbg !12489
  %2 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12489
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %2, i32 0, i32 0, !dbg !12489
  %ep_list = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 4, !dbg !12489
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ep_list, i32 0, i32 0, !dbg !12489
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12489
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !12489
  store i8* %4, i8** %__mptr, align 8, !dbg !12489
  br label %do.body, !dbg !12489

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !12490

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !12489
  %add.ptr = getelementptr i8, i8* %5, i64 -24, !dbg !12489
  %6 = bitcast i8* %add.ptr to %struct.net2280_ep*, !dbg !12489
  store %struct.net2280_ep* %6, %struct.net2280_ep** %tmp, align 8, !dbg !12490
  %7 = load %struct.net2280_ep*, %struct.net2280_ep** %tmp, align 8, !dbg !12489
  store %struct.net2280_ep* %7, %struct.net2280_ep** %ep, align 8, !dbg !12492
  br label %for.cond, !dbg !12492

for.cond:                                         ; preds = %do.end32, %do.end
  %8 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !12493
  %ep3 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %8, i32 0, i32 0, !dbg !12493
  %ep_list4 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep3, i32 0, i32 3, !dbg !12493
  %9 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12493
  %gadget5 = getelementptr inbounds %struct.net2280, %struct.net2280* %9, i32 0, i32 0, !dbg !12493
  %ep_list6 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget5, i32 0, i32 4, !dbg !12493
  %cmp7 = icmp eq %struct.list_head* %ep_list4, %ep_list6, !dbg !12493
  %lnot = xor i1 %cmp7, true, !dbg !12493
  br i1 %lnot, label %for.body, label %for.end, !dbg !12492

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %bEndpointAddress, metadata !12495, metadata !DIExpression()), !dbg !12497
  %10 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !12498
  %desc = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %10, i32 0, i32 9, !dbg !12500
  %11 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc, align 8, !dbg !12500
  %tobool = icmp ne %struct.usb_endpoint_descriptor* %11, null, !dbg !12498
  br i1 %tobool, label %if.end10, label %if.then9, !dbg !12501

if.then9:                                         ; preds = %for.body
  br label %for.inc, !dbg !12502

if.end10:                                         ; preds = %for.body
  %12 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !12503
  %desc11 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %12, i32 0, i32 9, !dbg !12504
  %13 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc11, align 8, !dbg !12504
  %bEndpointAddress12 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %13, i32 0, i32 2, !dbg !12505
  %14 = load i8, i8* %bEndpointAddress12, align 1, !dbg !12505
  store i8 %14, i8* %bEndpointAddress, align 1, !dbg !12506
  %15 = load i16, i16* %wIndex.addr, align 2, !dbg !12507
  %conv13 = zext i16 %15 to i32, !dbg !12507
  %16 = load i8, i8* %bEndpointAddress, align 1, !dbg !12509
  %conv14 = zext i8 %16 to i32, !dbg !12509
  %xor = xor i32 %conv13, %conv14, !dbg !12510
  %and15 = and i32 %xor, 128, !dbg !12511
  %tobool16 = icmp ne i32 %and15, 0, !dbg !12511
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !12512

if.then17:                                        ; preds = %if.end10
  br label %for.inc, !dbg !12513

if.end18:                                         ; preds = %if.end10
  %17 = load i16, i16* %wIndex.addr, align 2, !dbg !12514
  %conv19 = zext i16 %17 to i32, !dbg !12514
  %and20 = and i32 %conv19, 15, !dbg !12516
  %18 = load i8, i8* %bEndpointAddress, align 1, !dbg !12517
  %conv21 = zext i8 %18 to i32, !dbg !12517
  %and22 = and i32 %conv21, 15, !dbg !12518
  %cmp23 = icmp eq i32 %and20, %and22, !dbg !12519
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !12520

if.then25:                                        ; preds = %if.end18
  %19 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !12521
  store %struct.net2280_ep* %19, %struct.net2280_ep** %retval, align 8, !dbg !12522
  br label %return, !dbg !12522

if.end26:                                         ; preds = %if.end18
  br label %for.inc, !dbg !12523

for.inc:                                          ; preds = %if.end26, %if.then17, %if.then9
  call void @llvm.dbg.declare(metadata i8** %__mptr27, metadata !12524, metadata !DIExpression()), !dbg !12526
  %20 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !12526
  %ep28 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %20, i32 0, i32 0, !dbg !12526
  %ep_list29 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep28, i32 0, i32 3, !dbg !12526
  %next30 = getelementptr inbounds %struct.list_head, %struct.list_head* %ep_list29, i32 0, i32 0, !dbg !12526
  %21 = load %struct.list_head*, %struct.list_head** %next30, align 8, !dbg !12526
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !12526
  store i8* %22, i8** %__mptr27, align 8, !dbg !12526
  br label %do.body31, !dbg !12526

do.body31:                                        ; preds = %for.inc
  br label %do.end32, !dbg !12527

do.end32:                                         ; preds = %do.body31
  %23 = load i8*, i8** %__mptr27, align 8, !dbg !12526
  %add.ptr34 = getelementptr i8, i8* %23, i64 -24, !dbg !12526
  %24 = bitcast i8* %add.ptr34 to %struct.net2280_ep*, !dbg !12526
  store %struct.net2280_ep* %24, %struct.net2280_ep** %tmp33, align 8, !dbg !12527
  %25 = load %struct.net2280_ep*, %struct.net2280_ep** %tmp33, align 8, !dbg !12526
  store %struct.net2280_ep* %25, %struct.net2280_ep** %ep, align 8, !dbg !12493
  br label %for.cond, !dbg !12493, !llvm.loop !12529

for.end:                                          ; preds = %for.cond
  store %struct.net2280_ep* null, %struct.net2280_ep** %retval, align 8, !dbg !12531
  br label %return, !dbg !12531

return:                                           ; preds = %for.end, %if.then25, %if.then
  %26 = load %struct.net2280_ep*, %struct.net2280_ep** %retval, align 8, !dbg !12532
  ret %struct.net2280_ep* %26, !dbg !12532
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb338x_handle_ep_intr(%struct.net2280* %dev, i32 %stat0) #2 !dbg !12533 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  %stat0.addr = alloca i32, align 4
  %index = alloca i32, align 4
  %bit = alloca i32, align 4
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !12534, metadata !DIExpression()), !dbg !12535
  store i32 %stat0, i32* %stat0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stat0.addr, metadata !12536, metadata !DIExpression()), !dbg !12537
  call void @llvm.dbg.declare(metadata i32* %index, metadata !12538, metadata !DIExpression()), !dbg !12539
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !12540, metadata !DIExpression()), !dbg !12541
  store i32 0, i32* %index, align 4, !dbg !12542
  br label %for.cond, !dbg !12544

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %index, align 4, !dbg !12545
  %conv = zext i32 %0 to i64, !dbg !12545
  %cmp = icmp ult i64 %conv, 9, !dbg !12547
  br i1 %cmp, label %for.body, label %for.end, !dbg !12548

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %index, align 4, !dbg !12549
  %idxprom = zext i32 %1 to i64, !dbg !12549
  %arrayidx = getelementptr [9 x i32], [9 x i32]* @ep_bit, i64 0, i64 %idxprom, !dbg !12549
  %2 = load i32, i32* %arrayidx, align 4, !dbg !12549
  %sh_prom = zext i32 %2 to i64, !dbg !12549
  %shl = shl i64 1, %sh_prom, !dbg !12549
  %conv2 = trunc i64 %shl to i32, !dbg !12549
  store i32 %conv2, i32* %bit, align 4, !dbg !12551
  %3 = load i32, i32* %stat0.addr, align 4, !dbg !12552
  %tobool = icmp ne i32 %3, 0, !dbg !12552
  br i1 %tobool, label %if.end, label %if.then, !dbg !12554

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !12555

if.end:                                           ; preds = %for.body
  %4 = load i32, i32* %stat0.addr, align 4, !dbg !12556
  %5 = load i32, i32* %bit, align 4, !dbg !12558
  %and = and i32 %4, %5, !dbg !12559
  %tobool3 = icmp ne i32 %and, 0, !dbg !12559
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !12560

if.then4:                                         ; preds = %if.end
  br label %for.inc, !dbg !12561

if.end5:                                          ; preds = %if.end
  %6 = load i32, i32* %bit, align 4, !dbg !12562
  %neg = xor i32 %6, -1, !dbg !12563
  %7 = load i32, i32* %stat0.addr, align 4, !dbg !12564
  %and6 = and i32 %7, %neg, !dbg !12564
  store i32 %and6, i32* %stat0.addr, align 4, !dbg !12564
  %8 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !12565
  %ep = getelementptr inbounds %struct.net2280, %struct.net2280* %8, i32 0, i32 2, !dbg !12566
  %9 = load i32, i32* %index, align 4, !dbg !12567
  %idxprom7 = zext i32 %9 to i64, !dbg !12565
  %arrayidx8 = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep, i64 0, i64 %idxprom7, !dbg !12565
  call void @handle_ep_small(%struct.net2280_ep* %arrayidx8) #12, !dbg !12568
  br label %for.inc, !dbg !12569

for.inc:                                          ; preds = %if.end5, %if.then4
  %10 = load i32, i32* %index, align 4, !dbg !12570
  %inc = add i32 %10, 1, !dbg !12570
  store i32 %inc, i32* %index, align 4, !dbg !12570
  br label %for.cond, !dbg !12571, !llvm.loop !12572

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !12574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_ep_small(%struct.net2280_ep* %ep) #2 !dbg !12575 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  %req = alloca %struct.net2280_request*, align 8
  %t = alloca i32, align 4
  %mode = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net2280_request*, align 8
  %stuck_req = alloca %struct.net2280_request*, align 8
  %stopped154 = alloca i32, align 4
  %num_completed = alloca i32, align 4
  %stuck = alloca i32, align 4
  %count = alloca i32, align 4
  %__mptr179 = alloca i8*, align 8
  %tmp184 = alloca %struct.net2280_request*, align 8
  %len = alloca i32, align 4
  %__mptr399 = alloca i8*, align 8
  %tmp404 = alloca %struct.net2280_request*, align 8
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !12576, metadata !DIExpression()), !dbg !12577
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %req, metadata !12578, metadata !DIExpression()), !dbg !12579
  call void @llvm.dbg.declare(metadata i32* %t, metadata !12580, metadata !DIExpression()), !dbg !12581
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !12582, metadata !DIExpression()), !dbg !12583
  store i32 1, i32* %mode, align 4, !dbg !12583
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12584
  %queue = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 8, !dbg !12586
  %call = call i32 @list_empty(%struct.list_head* %queue) #12, !dbg !12587
  %tobool = icmp ne i32 %call, 0, !dbg !12587
  br i1 %tobool, label %if.else, label %if.then, !dbg !12588

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12589, metadata !DIExpression()), !dbg !12591
  %1 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12591
  %queue1 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %1, i32 0, i32 8, !dbg !12591
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queue1, i32 0, i32 0, !dbg !12591
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12591
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !12591
  store i8* %3, i8** %__mptr, align 8, !dbg !12591
  br label %do.body, !dbg !12591

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !12592

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !12591
  %add.ptr = getelementptr i8, i8* %4, i64 -112, !dbg !12591
  %5 = bitcast i8* %add.ptr to %struct.net2280_request*, !dbg !12591
  store %struct.net2280_request* %5, %struct.net2280_request** %tmp, align 8, !dbg !12592
  %6 = load %struct.net2280_request*, %struct.net2280_request** %tmp, align 8, !dbg !12591
  store %struct.net2280_request* %6, %struct.net2280_request** %req, align 8, !dbg !12594
  br label %if.end, !dbg !12595

if.else:                                          ; preds = %entry
  store %struct.net2280_request* null, %struct.net2280_request** %req, align 8, !dbg !12596
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %7 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12597
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %7, i32 0, i32 2, !dbg !12598
  %8 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !12598
  %ep_stat = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %8, i32 0, i32 3, !dbg !12599
  %9 = bitcast i32* %ep_stat to i8*, !dbg !12600
  %call2 = call i32 @readl(i8* %9) #12, !dbg !12601
  store i32 %call2, i32* %t, align 4, !dbg !12602
  %10 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12603
  %irqs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %10, i32 0, i32 7, !dbg !12604
  %11 = load i64, i64* %irqs, align 8, !dbg !12605
  %inc = add i64 %11, 1, !dbg !12605
  store i64 %inc, i64* %irqs, align 8, !dbg !12605
  %12 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12606
  %is_in = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %12, i32 0, i32 10, !dbg !12608
  %bf.load = load i32, i32* %is_in, align 8, !dbg !12608
  %bf.lshr = lshr i32 %bf.load, 24, !dbg !12608
  %bf.clear = and i32 %bf.lshr, 1, !dbg !12608
  %tobool3 = icmp ne i32 %bf.clear, 0, !dbg !12606
  br i1 %tobool3, label %lor.lhs.false, label %if.then5, !dbg !12609

lor.lhs.false:                                    ; preds = %if.end
  %13 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12610
  %dev = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %13, i32 0, i32 6, !dbg !12611
  %14 = load %struct.net2280*, %struct.net2280** %dev, align 8, !dbg !12611
  %quirks = getelementptr inbounds %struct.net2280, %struct.net2280* %14, i32 0, i32 8, !dbg !12612
  %15 = load i64, i64* %quirks, align 8, !dbg !12612
  %and = and i64 %15, 2, !dbg !12613
  %tobool4 = icmp ne i64 %and, 0, !dbg !12613
  br i1 %tobool4, label %if.then5, label %if.else10, !dbg !12614

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %16 = load i32, i32* %t, align 4, !dbg !12615
  %conv = zext i32 %16 to i64, !dbg !12615
  %and6 = and i64 %conv, -17, !dbg !12616
  %conv7 = trunc i64 %and6 to i32, !dbg !12615
  %17 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12617
  %regs8 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %17, i32 0, i32 2, !dbg !12618
  %18 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs8, align 8, !dbg !12618
  %ep_stat9 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %18, i32 0, i32 3, !dbg !12619
  %19 = bitcast i32* %ep_stat9 to i8*, !dbg !12620
  call void @writel(i32 %conv7, i8* %19) #12, !dbg !12621
  br label %if.end13, !dbg !12621

if.else10:                                        ; preds = %lor.lhs.false
  %20 = load i32, i32* %t, align 4, !dbg !12622
  %21 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12623
  %regs11 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %21, i32 0, i32 2, !dbg !12624
  %22 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs11, align 8, !dbg !12624
  %ep_stat12 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %22, i32 0, i32 3, !dbg !12625
  %23 = bitcast i32* %ep_stat12 to i8*, !dbg !12626
  call void @writel(i32 %20, i8* %23) #12, !dbg !12627
  br label %if.end13

if.end13:                                         ; preds = %if.else10, %if.then5
  %24 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12628
  %num = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %24, i32 0, i32 10, !dbg !12628
  %bf.load14 = load i32, i32* %num, align 8, !dbg !12628
  %bf.clear15 = and i32 %bf.load14, 255, !dbg !12628
  %cmp = icmp eq i32 %bf.clear15, 0, !dbg !12628
  %lnot = xor i1 %cmp, true, !dbg !12628
  %lnot17 = xor i1 %lnot, true, !dbg !12628
  %lnot.ext = zext i1 %lnot17 to i32, !dbg !12628
  %conv18 = sext i32 %lnot.ext to i64, !dbg !12628
  %tobool19 = icmp ne i64 %conv18, 0, !dbg !12628
  br i1 %tobool19, label %if.then20, label %if.end130, !dbg !12630

if.then20:                                        ; preds = %if.end13
  %25 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12631
  %is_in21 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %25, i32 0, i32 10, !dbg !12634
  %bf.load22 = load i32, i32* %is_in21, align 8, !dbg !12634
  %bf.lshr23 = lshr i32 %bf.load22, 24, !dbg !12634
  %bf.clear24 = and i32 %bf.lshr23, 1, !dbg !12634
  %tobool25 = icmp ne i32 %bf.clear24, 0, !dbg !12631
  br i1 %tobool25, label %if.then26, label %if.else77, !dbg !12635

if.then26:                                        ; preds = %if.then20
  %26 = load i32, i32* %t, align 4, !dbg !12636
  %conv27 = zext i32 %26 to i64, !dbg !12636
  %and28 = and i64 %conv27, 2, !dbg !12639
  %tobool29 = icmp ne i64 %and28, 0, !dbg !12639
  br i1 %tobool29, label %if.then30, label %if.else43, !dbg !12640

if.then30:                                        ; preds = %if.then26
  %27 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12641
  %dev31 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %27, i32 0, i32 6, !dbg !12644
  %28 = load %struct.net2280*, %struct.net2280** %dev31, align 8, !dbg !12644
  %protocol_stall = getelementptr inbounds %struct.net2280, %struct.net2280* %28, i32 0, i32 4, !dbg !12645
  %bf.load32 = load i16, i16* %protocol_stall, align 8, !dbg !12645
  %bf.lshr33 = lshr i16 %bf.load32, 1, !dbg !12645
  %bf.clear34 = and i16 %bf.lshr33, 1, !dbg !12645
  %bf.cast = zext i16 %bf.clear34 to i32, !dbg !12645
  %tobool35 = icmp ne i32 %bf.cast, 0, !dbg !12641
  br i1 %tobool35, label %if.then36, label %if.end39, !dbg !12646

if.then36:                                        ; preds = %if.then30
  %29 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12647
  %stopped = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %29, i32 0, i32 10, !dbg !12649
  %bf.load37 = load i32, i32* %stopped, align 8, !dbg !12650
  %bf.clear38 = and i32 %bf.load37, -4194305, !dbg !12650
  %bf.set = or i32 %bf.clear38, 4194304, !dbg !12650
  store i32 %bf.set, i32* %stopped, align 8, !dbg !12650
  %30 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12651
  call void @set_halt(%struct.net2280_ep* %30) #12, !dbg !12652
  br label %if.end39, !dbg !12653

if.end39:                                         ; preds = %if.then36, %if.then30
  %31 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12654
  %tobool40 = icmp ne %struct.net2280_request* %31, null, !dbg !12654
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !12656

if.then41:                                        ; preds = %if.end39
  %32 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12657
  call void @allow_status(%struct.net2280_ep* %32) #12, !dbg !12658
  br label %if.end42, !dbg !12658

if.end42:                                         ; preds = %if.then41, %if.end39
  store i32 2, i32* %mode, align 4, !dbg !12659
  br label %if.end76, !dbg !12660

if.else43:                                        ; preds = %if.then26
  %33 = load i32, i32* %t, align 4, !dbg !12661
  %conv44 = zext i32 %33 to i64, !dbg !12661
  %and45 = and i64 %conv44, 1, !dbg !12663
  %tobool46 = icmp ne i64 %and45, 0, !dbg !12663
  br i1 %tobool46, label %if.then47, label %if.end75, !dbg !12664

if.then47:                                        ; preds = %if.else43
  %34 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12665
  %dev48 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %34, i32 0, i32 6, !dbg !12668
  %35 = load %struct.net2280*, %struct.net2280** %dev48, align 8, !dbg !12668
  %protocol_stall49 = getelementptr inbounds %struct.net2280, %struct.net2280* %35, i32 0, i32 4, !dbg !12669
  %bf.load50 = load i16, i16* %protocol_stall49, align 8, !dbg !12669
  %bf.lshr51 = lshr i16 %bf.load50, 1, !dbg !12669
  %bf.clear52 = and i16 %bf.lshr51, 1, !dbg !12669
  %bf.cast53 = zext i16 %bf.clear52 to i32, !dbg !12669
  %tobool54 = icmp ne i32 %bf.cast53, 0, !dbg !12665
  br i1 %tobool54, label %if.then55, label %if.else60, !dbg !12670

if.then55:                                        ; preds = %if.then47
  %36 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12671
  %stopped56 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %36, i32 0, i32 10, !dbg !12673
  %bf.load57 = load i32, i32* %stopped56, align 8, !dbg !12674
  %bf.clear58 = and i32 %bf.load57, -4194305, !dbg !12674
  %bf.set59 = or i32 %bf.clear58, 4194304, !dbg !12674
  store i32 %bf.set59, i32* %stopped56, align 8, !dbg !12674
  %37 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12675
  call void @set_halt(%struct.net2280_ep* %37) #12, !dbg !12676
  store i32 2, i32* %mode, align 4, !dbg !12677
  br label %if.end74, !dbg !12678

if.else60:                                        ; preds = %if.then47
  %38 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12679
  %responded = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %38, i32 0, i32 10, !dbg !12681
  %bf.load61 = load i32, i32* %responded, align 8, !dbg !12681
  %bf.lshr62 = lshr i32 %bf.load61, 26, !dbg !12681
  %bf.clear63 = and i32 %bf.lshr62, 1, !dbg !12681
  %tobool64 = icmp ne i32 %bf.clear63, 0, !dbg !12679
  br i1 %tobool64, label %land.lhs.true, label %if.end73, !dbg !12682

land.lhs.true:                                    ; preds = %if.else60
  %39 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12683
  %tobool65 = icmp ne %struct.net2280_request* %39, null, !dbg !12683
  br i1 %tobool65, label %if.end73, label %land.lhs.true66, !dbg !12684

land.lhs.true66:                                  ; preds = %land.lhs.true
  %40 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12685
  %stopped67 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %40, i32 0, i32 10, !dbg !12686
  %bf.load68 = load i32, i32* %stopped67, align 8, !dbg !12686
  %bf.lshr69 = lshr i32 %bf.load68, 22, !dbg !12686
  %bf.clear70 = and i32 %bf.lshr69, 1, !dbg !12686
  %tobool71 = icmp ne i32 %bf.clear70, 0, !dbg !12685
  br i1 %tobool71, label %if.end73, label %if.then72, !dbg !12687

if.then72:                                        ; preds = %land.lhs.true66
  %41 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12688
  call void @write_fifo(%struct.net2280_ep* %41, %struct.usb_request* null) #12, !dbg !12689
  br label %if.end73, !dbg !12689

if.end73:                                         ; preds = %if.then72, %land.lhs.true66, %land.lhs.true, %if.else60
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then55
  br label %if.end75, !dbg !12690

if.end75:                                         ; preds = %if.end74, %if.else43
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.end42
  br label %if.end129, !dbg !12691

if.else77:                                        ; preds = %if.then20
  %42 = load i32, i32* %t, align 4, !dbg !12692
  %conv78 = zext i32 %42 to i64, !dbg !12692
  %and79 = and i64 %conv78, 1, !dbg !12695
  %tobool80 = icmp ne i64 %and79, 0, !dbg !12695
  br i1 %tobool80, label %if.then81, label %if.else95, !dbg !12696

if.then81:                                        ; preds = %if.else77
  %43 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12697
  %dev82 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %43, i32 0, i32 6, !dbg !12700
  %44 = load %struct.net2280*, %struct.net2280** %dev82, align 8, !dbg !12700
  %protocol_stall83 = getelementptr inbounds %struct.net2280, %struct.net2280* %44, i32 0, i32 4, !dbg !12701
  %bf.load84 = load i16, i16* %protocol_stall83, align 8, !dbg !12701
  %bf.lshr85 = lshr i16 %bf.load84, 1, !dbg !12701
  %bf.clear86 = and i16 %bf.lshr85, 1, !dbg !12701
  %bf.cast87 = zext i16 %bf.clear86 to i32, !dbg !12701
  %tobool88 = icmp ne i32 %bf.cast87, 0, !dbg !12697
  br i1 %tobool88, label %if.then89, label %if.end94, !dbg !12702

if.then89:                                        ; preds = %if.then81
  %45 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12703
  %stopped90 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %45, i32 0, i32 10, !dbg !12705
  %bf.load91 = load i32, i32* %stopped90, align 8, !dbg !12706
  %bf.clear92 = and i32 %bf.load91, -4194305, !dbg !12706
  %bf.set93 = or i32 %bf.clear92, 4194304, !dbg !12706
  store i32 %bf.set93, i32* %stopped90, align 8, !dbg !12706
  %46 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12707
  call void @set_halt(%struct.net2280_ep* %46) #12, !dbg !12708
  br label %if.end94, !dbg !12709

if.end94:                                         ; preds = %if.then89, %if.then81
  store i32 2, i32* %mode, align 4, !dbg !12710
  br label %if.end128, !dbg !12711

if.else95:                                        ; preds = %if.else77
  %47 = load i32, i32* %t, align 4, !dbg !12712
  %conv96 = zext i32 %47 to i64, !dbg !12712
  %and97 = and i64 %conv96, 2, !dbg !12714
  %tobool98 = icmp ne i64 %and97, 0, !dbg !12714
  br i1 %tobool98, label %land.lhs.true99, label %lor.lhs.false106, !dbg !12715

land.lhs.true99:                                  ; preds = %if.else95
  %48 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12716
  %tobool100 = icmp ne %struct.net2280_request* %48, null, !dbg !12716
  br i1 %tobool100, label %land.lhs.true101, label %lor.lhs.false106, !dbg !12717

land.lhs.true101:                                 ; preds = %land.lhs.true99
  %49 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12718
  %req102 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %49, i32 0, i32 0, !dbg !12719
  %actual = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req102, i32 0, i32 12, !dbg !12720
  %50 = load i32, i32* %actual, align 8, !dbg !12720
  %51 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12721
  %req103 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %51, i32 0, i32 0, !dbg !12722
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req103, i32 0, i32 1, !dbg !12723
  %52 = load i32, i32* %length, align 8, !dbg !12723
  %cmp104 = icmp eq i32 %50, %52, !dbg !12724
  br i1 %cmp104, label %if.then114, label %lor.lhs.false106, !dbg !12725

lor.lhs.false106:                                 ; preds = %land.lhs.true101, %land.lhs.true99, %if.else95
  %53 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12726
  %responded107 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %53, i32 0, i32 10, !dbg !12727
  %bf.load108 = load i32, i32* %responded107, align 8, !dbg !12727
  %bf.lshr109 = lshr i32 %bf.load108, 26, !dbg !12727
  %bf.clear110 = and i32 %bf.lshr109, 1, !dbg !12727
  %tobool111 = icmp ne i32 %bf.clear110, 0, !dbg !12726
  br i1 %tobool111, label %land.lhs.true112, label %if.end127, !dbg !12728

land.lhs.true112:                                 ; preds = %lor.lhs.false106
  %54 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12729
  %tobool113 = icmp ne %struct.net2280_request* %54, null, !dbg !12729
  br i1 %tobool113, label %if.end127, label %if.then114, !dbg !12730

if.then114:                                       ; preds = %land.lhs.true112, %land.lhs.true101
  %55 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12731
  %dev115 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %55, i32 0, i32 6, !dbg !12733
  %56 = load %struct.net2280*, %struct.net2280** %dev115, align 8, !dbg !12733
  %protocol_stall116 = getelementptr inbounds %struct.net2280, %struct.net2280* %56, i32 0, i32 4, !dbg !12734
  %bf.load117 = load i16, i16* %protocol_stall116, align 8, !dbg !12735
  %bf.clear118 = and i16 %bf.load117, -3, !dbg !12735
  %bf.set119 = or i16 %bf.clear118, 2, !dbg !12735
  store i16 %bf.set119, i16* %protocol_stall116, align 8, !dbg !12735
  %57 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12736
  call void @set_halt(%struct.net2280_ep* %57) #12, !dbg !12737
  %58 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12738
  %stopped120 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %58, i32 0, i32 10, !dbg !12739
  %bf.load121 = load i32, i32* %stopped120, align 8, !dbg !12740
  %bf.clear122 = and i32 %bf.load121, -4194305, !dbg !12740
  %bf.set123 = or i32 %bf.clear122, 4194304, !dbg !12740
  store i32 %bf.set123, i32* %stopped120, align 8, !dbg !12740
  %59 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12741
  %tobool124 = icmp ne %struct.net2280_request* %59, null, !dbg !12741
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !12743

if.then125:                                       ; preds = %if.then114
  %60 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12744
  %61 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12745
  call void @done(%struct.net2280_ep* %60, %struct.net2280_request* %61, i32 -75) #12, !dbg !12746
  br label %if.end126, !dbg !12746

if.end126:                                        ; preds = %if.then125, %if.then114
  store %struct.net2280_request* null, %struct.net2280_request** %req, align 8, !dbg !12747
  br label %if.end127, !dbg !12748

if.end127:                                        ; preds = %if.end126, %land.lhs.true112, %lor.lhs.false106
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.end94
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end76
  br label %if.end130, !dbg !12749

if.end130:                                        ; preds = %if.end129, %if.end13
  %62 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12750
  %tobool131 = icmp ne %struct.net2280_request* %62, null, !dbg !12750
  %lnot132 = xor i1 %tobool131, true, !dbg !12750
  %lnot134 = xor i1 %lnot132, true, !dbg !12750
  %lnot136 = xor i1 %lnot134, true, !dbg !12750
  %lnot.ext137 = zext i1 %lnot136 to i32, !dbg !12750
  %conv138 = sext i32 %lnot.ext137 to i64, !dbg !12750
  %tobool139 = icmp ne i64 %conv138, 0, !dbg !12750
  br i1 %tobool139, label %if.then140, label %if.end141, !dbg !12752

if.then140:                                       ; preds = %if.end130
  br label %if.end433, !dbg !12753

if.end141:                                        ; preds = %if.end130
  %63 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12754
  %dma = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %63, i32 0, i32 3, !dbg !12754
  %64 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma, align 8, !dbg !12754
  %tobool142 = icmp ne %struct.net2280_dma_regs* %64, null, !dbg !12754
  %lnot143 = xor i1 %tobool142, true, !dbg !12754
  %lnot145 = xor i1 %lnot143, true, !dbg !12754
  %lnot.ext146 = zext i1 %lnot145 to i32, !dbg !12754
  %conv147 = sext i32 %lnot.ext146 to i64, !dbg !12754
  %tobool148 = icmp ne i64 %conv147, 0, !dbg !12754
  br i1 %tobool148, label %if.then149, label %if.else298, !dbg !12756

if.then149:                                       ; preds = %if.end141
  %65 = load i32, i32* %t, align 4, !dbg !12757
  %conv150 = zext i32 %65 to i64, !dbg !12757
  %and151 = and i64 %conv150, 32, !dbg !12760
  %tobool152 = icmp ne i64 %and151, 0, !dbg !12760
  br i1 %tobool152, label %if.then153, label %if.else296, !dbg !12761

if.then153:                                       ; preds = %if.then149
  call void @llvm.dbg.declare(metadata %struct.net2280_request** %stuck_req, metadata !12762, metadata !DIExpression()), !dbg !12764
  store %struct.net2280_request* null, %struct.net2280_request** %stuck_req, align 8, !dbg !12764
  call void @llvm.dbg.declare(metadata i32* %stopped154, metadata !12765, metadata !DIExpression()), !dbg !12766
  %66 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12767
  %stopped155 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %66, i32 0, i32 10, !dbg !12768
  %bf.load156 = load i32, i32* %stopped155, align 8, !dbg !12768
  %bf.lshr157 = lshr i32 %bf.load156, 22, !dbg !12768
  %bf.clear158 = and i32 %bf.lshr157, 1, !dbg !12768
  store i32 %bf.clear158, i32* %stopped154, align 4, !dbg !12766
  call void @llvm.dbg.declare(metadata i32* %num_completed, metadata !12769, metadata !DIExpression()), !dbg !12770
  call void @llvm.dbg.declare(metadata i32* %stuck, metadata !12771, metadata !DIExpression()), !dbg !12772
  store i32 0, i32* %stuck, align 4, !dbg !12772
  call void @llvm.dbg.declare(metadata i32* %count, metadata !12773, metadata !DIExpression()), !dbg !12774
  %67 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12775
  %stopped159 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %67, i32 0, i32 10, !dbg !12776
  %bf.load160 = load i32, i32* %stopped159, align 8, !dbg !12777
  %bf.clear161 = and i32 %bf.load160, -4194305, !dbg !12777
  %bf.set162 = or i32 %bf.clear161, 4194304, !dbg !12777
  store i32 %bf.set162, i32* %stopped159, align 8, !dbg !12777
  store i32 0, i32* %count, align 4, !dbg !12778
  br label %for.cond, !dbg !12780

for.cond:                                         ; preds = %for.inc, %if.then153
  %68 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12781
  %call163 = call i32 @scan_dma_completions(%struct.net2280_ep* %68) #12, !dbg !12784
  store i32 %call163, i32* %num_completed, align 4, !dbg !12785
  %69 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12786
  %queue164 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %69, i32 0, i32 8, !dbg !12786
  %call165 = call i32 @list_empty(%struct.list_head* %queue164) #12, !dbg !12786
  %tobool166 = icmp ne i32 %call165, 0, !dbg !12786
  br i1 %tobool166, label %lor.end, label %lor.rhs, !dbg !12786

lor.rhs:                                          ; preds = %for.cond
  %70 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12786
  %out_overflow = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %70, i32 0, i32 10, !dbg !12786
  %bf.load167 = load i32, i32* %out_overflow, align 8, !dbg !12786
  %bf.lshr168 = lshr i32 %bf.load167, 21, !dbg !12786
  %bf.clear169 = and i32 %bf.lshr168, 1, !dbg !12786
  %tobool170 = icmp ne i32 %bf.clear169, 0, !dbg !12786
  br label %lor.end, !dbg !12786

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %71 = phi i1 [ true, %for.cond ], [ %tobool170, %lor.rhs ]
  %lnot171 = xor i1 %71, true, !dbg !12786
  %lnot173 = xor i1 %lnot171, true, !dbg !12786
  %lnot.ext174 = zext i1 %lnot173 to i32, !dbg !12786
  %conv175 = sext i32 %lnot.ext174 to i64, !dbg !12786
  %tobool176 = icmp ne i64 %conv175, 0, !dbg !12786
  br i1 %tobool176, label %if.then177, label %if.end178, !dbg !12788

if.then177:                                       ; preds = %lor.end
  store %struct.net2280_request* null, %struct.net2280_request** %req, align 8, !dbg !12789
  br label %for.end, !dbg !12791

if.end178:                                        ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i8** %__mptr179, metadata !12792, metadata !DIExpression()), !dbg !12794
  %72 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12794
  %queue180 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %72, i32 0, i32 8, !dbg !12794
  %next181 = getelementptr inbounds %struct.list_head, %struct.list_head* %queue180, i32 0, i32 0, !dbg !12794
  %73 = load %struct.list_head*, %struct.list_head** %next181, align 8, !dbg !12794
  %74 = bitcast %struct.list_head* %73 to i8*, !dbg !12794
  store i8* %74, i8** %__mptr179, align 8, !dbg !12794
  br label %do.body182, !dbg !12794

do.body182:                                       ; preds = %if.end178
  br label %do.end183, !dbg !12795

do.end183:                                        ; preds = %do.body182
  %75 = load i8*, i8** %__mptr179, align 8, !dbg !12794
  %add.ptr185 = getelementptr i8, i8* %75, i64 -112, !dbg !12794
  %76 = bitcast i8* %add.ptr185 to %struct.net2280_request*, !dbg !12794
  store %struct.net2280_request* %76, %struct.net2280_request** %tmp184, align 8, !dbg !12795
  %77 = load %struct.net2280_request*, %struct.net2280_request** %tmp184, align 8, !dbg !12794
  store %struct.net2280_request* %77, %struct.net2280_request** %req, align 8, !dbg !12797
  %78 = load i32, i32* %t, align 4, !dbg !12798
  %conv186 = zext i32 %78 to i64, !dbg !12798
  %and187 = and i64 %conv186, 1024, !dbg !12798
  %tobool188 = icmp ne i64 %and187, 0, !dbg !12798
  %lnot189 = xor i1 %tobool188, true, !dbg !12798
  %lnot191 = xor i1 %lnot189, true, !dbg !12798
  %lnot.ext192 = zext i1 %lnot191 to i32, !dbg !12798
  %conv193 = sext i32 %lnot.ext192 to i64, !dbg !12798
  %tobool194 = icmp ne i64 %conv193, 0, !dbg !12798
  br i1 %tobool194, label %if.then195, label %if.end206, !dbg !12800

if.then195:                                       ; preds = %do.end183
  %79 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12801
  %dma196 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %79, i32 0, i32 3, !dbg !12803
  %80 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma196, align 8, !dbg !12803
  %dmacount = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %80, i32 0, i32 3, !dbg !12804
  %81 = bitcast i32* %dmacount to i8*, !dbg !12805
  %call197 = call i32 @readl(i8* %81) #12, !dbg !12806
  store i32 %call197, i32* %count, align 4, !dbg !12807
  %82 = load i32, i32* %count, align 4, !dbg !12808
  %and198 = and i32 %82, 16777215, !dbg !12808
  store i32 %and198, i32* %count, align 4, !dbg !12808
  %83 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12809
  %dma199 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %83, i32 0, i32 3, !dbg !12811
  %84 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma199, align 8, !dbg !12811
  %dmadesc = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %84, i32 0, i32 5, !dbg !12812
  %85 = bitcast i32* %dmadesc to i8*, !dbg !12813
  %call200 = call i32 @readl(i8* %85) #12, !dbg !12814
  %conv201 = zext i32 %call200 to i64, !dbg !12814
  %86 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12815
  %td_dma = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %86, i32 0, i32 2, !dbg !12816
  %87 = load i64, i64* %td_dma, align 8, !dbg !12816
  %cmp202 = icmp ne i64 %conv201, %87, !dbg !12817
  br i1 %cmp202, label %if.then204, label %if.end205, !dbg !12818

if.then204:                                       ; preds = %if.then195
  store %struct.net2280_request* null, %struct.net2280_request** %req, align 8, !dbg !12819
  br label %if.end205, !dbg !12820

if.end205:                                        ; preds = %if.then204, %if.then195
  br label %for.end, !dbg !12821

if.end206:                                        ; preds = %do.end183
  %88 = load i32, i32* %num_completed, align 4, !dbg !12822
  %cmp207 = icmp eq i32 %88, 0, !dbg !12824
  br i1 %cmp207, label %if.then209, label %if.else235, !dbg !12825

if.then209:                                       ; preds = %if.end206
  %89 = load %struct.net2280_request*, %struct.net2280_request** %stuck_req, align 8, !dbg !12826
  %90 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12829
  %cmp210 = icmp eq %struct.net2280_request* %89, %90, !dbg !12830
  br i1 %cmp210, label %land.lhs.true212, label %if.else229, !dbg !12831

land.lhs.true212:                                 ; preds = %if.then209
  %91 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12832
  %dma213 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %91, i32 0, i32 3, !dbg !12833
  %92 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma213, align 8, !dbg !12833
  %dmadesc214 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %92, i32 0, i32 5, !dbg !12834
  %93 = bitcast i32* %dmadesc214 to i8*, !dbg !12835
  %call215 = call i32 @readl(i8* %93) #12, !dbg !12836
  %conv216 = zext i32 %call215 to i64, !dbg !12836
  %94 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12837
  %td_dma217 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %94, i32 0, i32 2, !dbg !12838
  %95 = load i64, i64* %td_dma217, align 8, !dbg !12838
  %cmp218 = icmp ne i64 %conv216, %95, !dbg !12839
  br i1 %cmp218, label %land.lhs.true220, label %if.else229, !dbg !12840

land.lhs.true220:                                 ; preds = %land.lhs.true212
  %96 = load i32, i32* %stuck, align 4, !dbg !12841
  %inc221 = add i32 %96, 1, !dbg !12841
  store i32 %inc221, i32* %stuck, align 4, !dbg !12841
  %cmp222 = icmp sgt i32 %96, 5, !dbg !12842
  br i1 %cmp222, label %if.then224, label %if.else229, !dbg !12843

if.then224:                                       ; preds = %land.lhs.true220
  %97 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12844
  %dma225 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %97, i32 0, i32 3, !dbg !12846
  %98 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma225, align 8, !dbg !12846
  %dmacount226 = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %98, i32 0, i32 3, !dbg !12847
  %99 = bitcast i32* %dmacount226 to i8*, !dbg !12848
  %call227 = call i32 @readl(i8* %99) #12, !dbg !12849
  store i32 %call227, i32* %count, align 4, !dbg !12850
  %100 = load i32, i32* %count, align 4, !dbg !12851
  %and228 = and i32 %100, 16777215, !dbg !12851
  store i32 %and228, i32* %count, align 4, !dbg !12851
  store %struct.net2280_request* null, %struct.net2280_request** %req, align 8, !dbg !12852
  br label %for.end, !dbg !12853

if.else229:                                       ; preds = %land.lhs.true220, %land.lhs.true212, %if.then209
  %101 = load %struct.net2280_request*, %struct.net2280_request** %stuck_req, align 8, !dbg !12854
  %102 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12856
  %cmp230 = icmp ne %struct.net2280_request* %101, %102, !dbg !12857
  br i1 %cmp230, label %if.then232, label %if.end233, !dbg !12858

if.then232:                                       ; preds = %if.else229
  %103 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12859
  store %struct.net2280_request* %103, %struct.net2280_request** %stuck_req, align 8, !dbg !12861
  store i32 0, i32* %stuck, align 4, !dbg !12862
  br label %if.end233, !dbg !12863

if.end233:                                        ; preds = %if.then232, %if.else229
  br label %if.end234

if.end234:                                        ; preds = %if.end233
  br label %if.end236, !dbg !12864

if.else235:                                       ; preds = %if.end206
  store %struct.net2280_request* null, %struct.net2280_request** %stuck_req, align 8, !dbg !12865
  store i32 0, i32* %stuck, align 4, !dbg !12867
  br label %if.end236

if.end236:                                        ; preds = %if.else235, %if.end234
  call void @__const_udelay(i64 4295) #12, !dbg !12868
  br label %for.inc, !dbg !12873

for.inc:                                          ; preds = %if.end236
  %104 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12874
  %regs237 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %104, i32 0, i32 2, !dbg !12875
  %105 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs237, align 8, !dbg !12875
  %ep_stat238 = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %105, i32 0, i32 3, !dbg !12876
  %106 = bitcast i32* %ep_stat238 to i8*, !dbg !12877
  %call239 = call i32 @readl(i8* %106) #12, !dbg !12878
  store i32 %call239, i32* %t, align 4, !dbg !12879
  br label %for.cond, !dbg !12880, !llvm.loop !12881

for.end:                                          ; preds = %if.then224, %if.end205, %if.then177
  %107 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12884
  %dma240 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %107, i32 0, i32 3, !dbg !12885
  %108 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma240, align 8, !dbg !12885
  %dmastat = getelementptr inbounds %struct.net2280_dma_regs, %struct.net2280_dma_regs* %108, i32 0, i32 1, !dbg !12886
  %109 = bitcast i32* %dmastat to i8*, !dbg !12887
  call void @writel(i32 2, i8* %109) #12, !dbg !12888
  %110 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12889
  %dma241 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %110, i32 0, i32 3, !dbg !12890
  %111 = load %struct.net2280_dma_regs*, %struct.net2280_dma_regs** %dma241, align 8, !dbg !12890
  call void @spin_stop_dma(%struct.net2280_dma_regs* %111) #12, !dbg !12891
  %112 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12892
  %tobool242 = icmp ne %struct.net2280_request* %112, null, !dbg !12892
  %lnot243 = xor i1 %tobool242, true, !dbg !12892
  %lnot245 = xor i1 %lnot243, true, !dbg !12892
  %lnot.ext246 = zext i1 %lnot245 to i32, !dbg !12892
  %conv247 = sext i32 %lnot.ext246 to i64, !dbg !12892
  %tobool248 = icmp ne i64 %conv247, 0, !dbg !12892
  br i1 %tobool248, label %if.then249, label %if.end261, !dbg !12894

if.then249:                                       ; preds = %for.end
  %113 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12895
  %td = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %113, i32 0, i32 1, !dbg !12897
  %114 = load %struct.net2280_dma*, %struct.net2280_dma** %td, align 8, !dbg !12897
  %dmacount250 = getelementptr inbounds %struct.net2280_dma, %struct.net2280_dma* %114, i32 0, i32 0, !dbg !12898
  store i32 0, i32* %dmacount250, align 16, !dbg !12899
  %115 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12900
  %regs251 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %115, i32 0, i32 2, !dbg !12901
  %116 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs251, align 8, !dbg !12901
  %ep_avail = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %116, i32 0, i32 4, !dbg !12902
  %117 = bitcast i32* %ep_avail to i8*, !dbg !12903
  %call252 = call i32 @readl(i8* %117) #12, !dbg !12904
  store i32 %call252, i32* %t, align 4, !dbg !12905
  %118 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12906
  %119 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12907
  %120 = load i32, i32* %count, align 4, !dbg !12908
  %121 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12909
  %out_overflow253 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %121, i32 0, i32 10, !dbg !12910
  %bf.load254 = load i32, i32* %out_overflow253, align 8, !dbg !12910
  %bf.lshr255 = lshr i32 %bf.load254, 21, !dbg !12910
  %bf.clear256 = and i32 %bf.lshr255, 1, !dbg !12910
  %tobool257 = icmp ne i32 %bf.clear256, 0, !dbg !12909
  br i1 %tobool257, label %lor.end260, label %lor.rhs258, !dbg !12911

lor.rhs258:                                       ; preds = %if.then249
  %122 = load i32, i32* %t, align 4, !dbg !12912
  %tobool259 = icmp ne i32 %122, 0, !dbg !12911
  br label %lor.end260, !dbg !12911

lor.end260:                                       ; preds = %lor.rhs258, %if.then249
  %123 = phi i1 [ true, %if.then249 ], [ %tobool259, %lor.rhs258 ]
  %124 = zext i1 %123 to i64, !dbg !12913
  %cond = select i1 %123, i32 -75, i32 0, !dbg !12913
  call void @dma_done(%struct.net2280_ep* %118, %struct.net2280_request* %119, i32 %120, i32 %cond) #12, !dbg !12914
  br label %if.end261, !dbg !12915

if.end261:                                        ; preds = %lor.end260, %for.end
  %125 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12916
  %out_overflow262 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %125, i32 0, i32 10, !dbg !12916
  %bf.load263 = load i32, i32* %out_overflow262, align 8, !dbg !12916
  %bf.lshr264 = lshr i32 %bf.load263, 21, !dbg !12916
  %bf.clear265 = and i32 %bf.lshr264, 1, !dbg !12916
  %tobool266 = icmp ne i32 %bf.clear265, 0, !dbg !12916
  br i1 %tobool266, label %lor.end275, label %lor.rhs267, !dbg !12916

lor.rhs267:                                       ; preds = %if.end261
  %126 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12916
  %dev268 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %126, i32 0, i32 6, !dbg !12916
  %127 = load %struct.net2280*, %struct.net2280** %dev268, align 8, !dbg !12916
  %chiprev = getelementptr inbounds %struct.net2280, %struct.net2280* %127, i32 0, i32 5, !dbg !12916
  %128 = load i16, i16* %chiprev, align 2, !dbg !12916
  %conv269 = zext i16 %128 to i32, !dbg !12916
  %cmp270 = icmp eq i32 %conv269, 256, !dbg !12916
  br i1 %cmp270, label %land.rhs, label %land.end, !dbg !12916

land.rhs:                                         ; preds = %lor.rhs267
  %129 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12916
  %dev272 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %129, i32 0, i32 6, !dbg !12916
  %130 = load %struct.net2280*, %struct.net2280** %dev272, align 8, !dbg !12916
  %gadget = getelementptr inbounds %struct.net2280, %struct.net2280* %130, i32 0, i32 0, !dbg !12916
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !12916
  %131 = load i32, i32* %speed, align 8, !dbg !12916
  %cmp273 = icmp eq i32 %131, 2, !dbg !12916
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs267
  %132 = phi i1 [ false, %lor.rhs267 ], [ %cmp273, %land.rhs ], !dbg !12918
  br label %lor.end275, !dbg !12916

lor.end275:                                       ; preds = %land.end, %if.end261
  %133 = phi i1 [ true, %if.end261 ], [ %132, %land.end ]
  %lnot276 = xor i1 %133, true, !dbg !12916
  %lnot278 = xor i1 %lnot276, true, !dbg !12916
  %lnot.ext279 = zext i1 %lnot278 to i32, !dbg !12916
  %conv280 = sext i32 %lnot.ext279 to i64, !dbg !12916
  %tobool281 = icmp ne i64 %conv280, 0, !dbg !12916
  br i1 %tobool281, label %if.then282, label %if.end286, !dbg !12919

if.then282:                                       ; preds = %lor.end275
  %134 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12920
  call void @out_flush(%struct.net2280_ep* %134) #12, !dbg !12922
  %135 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12923
  %out_overflow283 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %135, i32 0, i32 10, !dbg !12924
  %bf.load284 = load i32, i32* %out_overflow283, align 8, !dbg !12925
  %bf.clear285 = and i32 %bf.load284, -2097153, !dbg !12925
  store i32 %bf.clear285, i32* %out_overflow283, align 8, !dbg !12925
  br label %if.end286, !dbg !12926

if.end286:                                        ; preds = %if.then282, %lor.end275
  %136 = load i32, i32* %stopped154, align 4, !dbg !12927
  %137 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12928
  %stopped287 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %137, i32 0, i32 10, !dbg !12929
  %bf.load288 = load i32, i32* %stopped287, align 8, !dbg !12930
  %bf.value = and i32 %136, 1, !dbg !12930
  %bf.shl = shl i32 %bf.value, 22, !dbg !12930
  %bf.clear289 = and i32 %bf.load288, -4194305, !dbg !12930
  %bf.set290 = or i32 %bf.clear289, %bf.shl, !dbg !12930
  store i32 %bf.set290, i32* %stopped287, align 8, !dbg !12930
  %138 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12931
  %queue291 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %138, i32 0, i32 8, !dbg !12933
  %call292 = call i32 @list_empty(%struct.list_head* %queue291) #12, !dbg !12934
  %tobool293 = icmp ne i32 %call292, 0, !dbg !12934
  br i1 %tobool293, label %if.end295, label %if.then294, !dbg !12935

if.then294:                                       ; preds = %if.end286
  %139 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12936
  call void @restart_dma(%struct.net2280_ep* %139) #12, !dbg !12937
  br label %if.end295, !dbg !12937

if.end295:                                        ; preds = %if.then294, %if.end286
  br label %if.end297, !dbg !12938

if.else296:                                       ; preds = %if.then149
  br label %if.end297

if.end297:                                        ; preds = %if.else296, %if.end295
  br label %if.end433, !dbg !12939

if.else298:                                       ; preds = %if.end141
  %140 = load i32, i32* %t, align 4, !dbg !12940
  %conv299 = zext i32 %140 to i64, !dbg !12940
  %and300 = and i64 %conv299, 8, !dbg !12942
  %tobool301 = icmp ne i64 %and300, 0, !dbg !12942
  br i1 %tobool301, label %if.then302, label %if.else313, !dbg !12943

if.then302:                                       ; preds = %if.else298
  %141 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12944
  %142 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12947
  %call303 = call i32 @read_fifo(%struct.net2280_ep* %141, %struct.net2280_request* %142) #12, !dbg !12948
  %tobool304 = icmp ne i32 %call303, 0, !dbg !12948
  br i1 %tobool304, label %land.lhs.true305, label %if.end312, !dbg !12949

land.lhs.true305:                                 ; preds = %if.then302
  %143 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12950
  %num306 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %143, i32 0, i32 10, !dbg !12951
  %bf.load307 = load i32, i32* %num306, align 8, !dbg !12951
  %bf.clear308 = and i32 %bf.load307, 255, !dbg !12951
  %cmp309 = icmp ne i32 %bf.clear308, 0, !dbg !12952
  br i1 %cmp309, label %if.then311, label %if.end312, !dbg !12953

if.then311:                                       ; preds = %land.lhs.true305
  store i32 2, i32* %mode, align 4, !dbg !12954
  br label %if.end312, !dbg !12955

if.end312:                                        ; preds = %if.then311, %land.lhs.true305, %if.then302
  br label %if.end370, !dbg !12956

if.else313:                                       ; preds = %if.else298
  %144 = load i32, i32* %t, align 4, !dbg !12957
  %conv314 = zext i32 %144 to i64, !dbg !12957
  %and315 = and i64 %conv314, 4, !dbg !12959
  %tobool316 = icmp ne i64 %and315, 0, !dbg !12959
  br i1 %tobool316, label %if.then317, label %if.else364, !dbg !12960

if.then317:                                       ; preds = %if.else313
  call void @llvm.dbg.declare(metadata i32* %len, metadata !12961, metadata !DIExpression()), !dbg !12963
  %145 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12964
  %req318 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %145, i32 0, i32 0, !dbg !12965
  %length319 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req318, i32 0, i32 1, !dbg !12966
  %146 = load i32, i32* %length319, align 8, !dbg !12966
  %147 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12967
  %req320 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %147, i32 0, i32 0, !dbg !12968
  %actual321 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req320, i32 0, i32 12, !dbg !12969
  %148 = load i32, i32* %actual321, align 8, !dbg !12969
  %sub = sub i32 %146, %148, !dbg !12970
  store i32 %sub, i32* %len, align 4, !dbg !12971
  %149 = load i32, i32* %len, align 4, !dbg !12972
  %150 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12974
  %ep322 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %150, i32 0, i32 0, !dbg !12975
  %maxpacket = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep322, i32 0, i32 7, !dbg !12976
  %151 = bitcast [7 x i8]* %maxpacket to i56*, !dbg !12976
  %bf.load323 = load i56, i56* %151, align 2, !dbg !12976
  %bf.clear324 = and i56 %bf.load323, 65535, !dbg !12976
  %bf.cast325 = trunc i56 %bf.clear324 to i32, !dbg !12976
  %cmp326 = icmp ugt i32 %149, %bf.cast325, !dbg !12977
  br i1 %cmp326, label %if.then328, label %if.end334, !dbg !12978

if.then328:                                       ; preds = %if.then317
  %152 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !12979
  %ep329 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %152, i32 0, i32 0, !dbg !12980
  %maxpacket330 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep329, i32 0, i32 7, !dbg !12981
  %153 = bitcast [7 x i8]* %maxpacket330 to i56*, !dbg !12981
  %bf.load331 = load i56, i56* %153, align 2, !dbg !12981
  %bf.clear332 = and i56 %bf.load331, 65535, !dbg !12981
  %bf.cast333 = trunc i56 %bf.clear332 to i32, !dbg !12981
  store i32 %bf.cast333, i32* %len, align 4, !dbg !12982
  br label %if.end334, !dbg !12983

if.end334:                                        ; preds = %if.then328, %if.then317
  %154 = load i32, i32* %len, align 4, !dbg !12984
  %155 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12985
  %req335 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %155, i32 0, i32 0, !dbg !12986
  %actual336 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req335, i32 0, i32 12, !dbg !12987
  %156 = load i32, i32* %actual336, align 8, !dbg !12988
  %add = add i32 %156, %154, !dbg !12988
  store i32 %add, i32* %actual336, align 8, !dbg !12988
  %157 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12989
  %req337 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %157, i32 0, i32 0, !dbg !12991
  %actual338 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req337, i32 0, i32 12, !dbg !12992
  %158 = load i32, i32* %actual338, align 8, !dbg !12992
  %159 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12993
  %req339 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %159, i32 0, i32 0, !dbg !12994
  %length340 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req339, i32 0, i32 1, !dbg !12995
  %160 = load i32, i32* %length340, align 8, !dbg !12995
  %cmp341 = icmp eq i32 %158, %160, !dbg !12996
  br i1 %cmp341, label %land.lhs.true343, label %if.end363, !dbg !12997

land.lhs.true343:                                 ; preds = %if.end334
  %161 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !12998
  %req344 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %161, i32 0, i32 0, !dbg !12999
  %zero = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req344, i32 0, i32 6, !dbg !13000
  %162 = bitcast i24* %zero to i32*, !dbg !13000
  %bf.load345 = load i32, i32* %162, align 8, !dbg !13000
  %bf.lshr346 = lshr i32 %bf.load345, 18, !dbg !13000
  %bf.clear347 = and i32 %bf.lshr346, 1, !dbg !13000
  %tobool348 = icmp ne i32 %bf.clear347, 0, !dbg !12998
  br i1 %tobool348, label %lor.lhs.false349, label %land.lhs.true357, !dbg !13001

lor.lhs.false349:                                 ; preds = %land.lhs.true343
  %163 = load i32, i32* %len, align 4, !dbg !13002
  %164 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13003
  %ep350 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %164, i32 0, i32 0, !dbg !13004
  %maxpacket351 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep350, i32 0, i32 7, !dbg !13005
  %165 = bitcast [7 x i8]* %maxpacket351 to i56*, !dbg !13005
  %bf.load352 = load i56, i56* %165, align 2, !dbg !13005
  %bf.clear353 = and i56 %bf.load352, 65535, !dbg !13005
  %bf.cast354 = trunc i56 %bf.clear353 to i32, !dbg !13005
  %cmp355 = icmp ne i32 %163, %bf.cast354, !dbg !13006
  br i1 %cmp355, label %land.lhs.true357, label %if.end363, !dbg !13007

land.lhs.true357:                                 ; preds = %lor.lhs.false349, %land.lhs.true343
  %166 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13008
  %num358 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %166, i32 0, i32 10, !dbg !13009
  %bf.load359 = load i32, i32* %num358, align 8, !dbg !13009
  %bf.clear360 = and i32 %bf.load359, 255, !dbg !13009
  %tobool361 = icmp ne i32 %bf.clear360, 0, !dbg !13008
  br i1 %tobool361, label %if.then362, label %if.end363, !dbg !13010

if.then362:                                       ; preds = %land.lhs.true357
  store i32 2, i32* %mode, align 4, !dbg !13011
  br label %if.end363, !dbg !13012

if.end363:                                        ; preds = %if.then362, %land.lhs.true357, %lor.lhs.false349, %if.end334
  br label %if.end369, !dbg !13013

if.else364:                                       ; preds = %if.else313
  %167 = load i32, i32* %mode, align 4, !dbg !13014
  %cmp365 = icmp eq i32 %167, 1, !dbg !13016
  br i1 %cmp365, label %if.then367, label %if.end368, !dbg !13017

if.then367:                                       ; preds = %if.else364
  br label %if.end433, !dbg !13018

if.end368:                                        ; preds = %if.else364
  br label %if.end369

if.end369:                                        ; preds = %if.end368, %if.end363
  br label %if.end370

if.end370:                                        ; preds = %if.end369, %if.end312
  br label %if.end371

if.end371:                                        ; preds = %if.end370
  %168 = load i32, i32* %mode, align 4, !dbg !13019
  %cmp372 = icmp eq i32 %168, 2, !dbg !13021
  br i1 %cmp372, label %if.then374, label %if.end418, !dbg !13022

if.then374:                                       ; preds = %if.end371
  %169 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13023
  %170 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !13025
  call void @done(%struct.net2280_ep* %169, %struct.net2280_request* %170, i32 0) #12, !dbg !13026
  %171 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13027
  %num375 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %171, i32 0, i32 10, !dbg !13029
  %bf.load376 = load i32, i32* %num375, align 8, !dbg !13029
  %bf.clear377 = and i32 %bf.load376, 255, !dbg !13029
  %cmp378 = icmp eq i32 %bf.clear377, 0, !dbg !13030
  br i1 %cmp378, label %if.then380, label %if.else388, !dbg !13031

if.then380:                                       ; preds = %if.then374
  %172 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13032
  %stopped381 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %172, i32 0, i32 10, !dbg !13035
  %bf.load382 = load i32, i32* %stopped381, align 8, !dbg !13035
  %bf.lshr383 = lshr i32 %bf.load382, 22, !dbg !13035
  %bf.clear384 = and i32 %bf.lshr383, 1, !dbg !13035
  %tobool385 = icmp ne i32 %bf.clear384, 0, !dbg !13032
  br i1 %tobool385, label %if.end387, label %if.then386, !dbg !13036

if.then386:                                       ; preds = %if.then380
  %173 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13037
  call void @allow_status(%struct.net2280_ep* %173) #12, !dbg !13038
  br label %if.end387, !dbg !13038

if.end387:                                        ; preds = %if.then386, %if.then380
  store %struct.net2280_request* null, %struct.net2280_request** %req, align 8, !dbg !13039
  br label %if.end417, !dbg !13040

if.else388:                                       ; preds = %if.then374
  %174 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13041
  %queue389 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %174, i32 0, i32 8, !dbg !13044
  %call390 = call i32 @list_empty(%struct.list_head* %queue389) #12, !dbg !13045
  %tobool391 = icmp ne i32 %call390, 0, !dbg !13045
  br i1 %tobool391, label %if.else406, label %land.lhs.true392, !dbg !13046

land.lhs.true392:                                 ; preds = %if.else388
  %175 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13047
  %stopped393 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %175, i32 0, i32 10, !dbg !13048
  %bf.load394 = load i32, i32* %stopped393, align 8, !dbg !13048
  %bf.lshr395 = lshr i32 %bf.load394, 22, !dbg !13048
  %bf.clear396 = and i32 %bf.lshr395, 1, !dbg !13048
  %tobool397 = icmp ne i32 %bf.clear396, 0, !dbg !13047
  br i1 %tobool397, label %if.else406, label %if.then398, !dbg !13049

if.then398:                                       ; preds = %land.lhs.true392
  call void @llvm.dbg.declare(metadata i8** %__mptr399, metadata !13050, metadata !DIExpression()), !dbg !13052
  %176 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13052
  %queue400 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %176, i32 0, i32 8, !dbg !13052
  %next401 = getelementptr inbounds %struct.list_head, %struct.list_head* %queue400, i32 0, i32 0, !dbg !13052
  %177 = load %struct.list_head*, %struct.list_head** %next401, align 8, !dbg !13052
  %178 = bitcast %struct.list_head* %177 to i8*, !dbg !13052
  store i8* %178, i8** %__mptr399, align 8, !dbg !13052
  br label %do.body402, !dbg !13052

do.body402:                                       ; preds = %if.then398
  br label %do.end403, !dbg !13053

do.end403:                                        ; preds = %do.body402
  %179 = load i8*, i8** %__mptr399, align 8, !dbg !13052
  %add.ptr405 = getelementptr i8, i8* %179, i64 -112, !dbg !13052
  %180 = bitcast i8* %add.ptr405 to %struct.net2280_request*, !dbg !13052
  store %struct.net2280_request* %180, %struct.net2280_request** %tmp404, align 8, !dbg !13053
  %181 = load %struct.net2280_request*, %struct.net2280_request** %tmp404, align 8, !dbg !13052
  store %struct.net2280_request* %181, %struct.net2280_request** %req, align 8, !dbg !13055
  br label %if.end407, !dbg !13056

if.else406:                                       ; preds = %land.lhs.true392, %if.else388
  store %struct.net2280_request* null, %struct.net2280_request** %req, align 8, !dbg !13057
  br label %if.end407

if.end407:                                        ; preds = %if.else406, %do.end403
  %182 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !13058
  %tobool408 = icmp ne %struct.net2280_request* %182, null, !dbg !13058
  br i1 %tobool408, label %land.lhs.true409, label %if.end416, !dbg !13060

land.lhs.true409:                                 ; preds = %if.end407
  %183 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13061
  %is_in410 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %183, i32 0, i32 10, !dbg !13062
  %bf.load411 = load i32, i32* %is_in410, align 8, !dbg !13062
  %bf.lshr412 = lshr i32 %bf.load411, 24, !dbg !13062
  %bf.clear413 = and i32 %bf.lshr412, 1, !dbg !13062
  %tobool414 = icmp ne i32 %bf.clear413, 0, !dbg !13061
  br i1 %tobool414, label %if.end416, label %if.then415, !dbg !13063

if.then415:                                       ; preds = %land.lhs.true409
  %184 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13064
  call void @stop_out_naking(%struct.net2280_ep* %184) #12, !dbg !13065
  br label %if.end416, !dbg !13065

if.end416:                                        ; preds = %if.then415, %land.lhs.true409, %if.end407
  br label %if.end417

if.end417:                                        ; preds = %if.end416, %if.end387
  br label %if.end418, !dbg !13066

if.end418:                                        ; preds = %if.end417, %if.end371
  %185 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !13067
  %tobool419 = icmp ne %struct.net2280_request* %185, null, !dbg !13067
  br i1 %tobool419, label %land.lhs.true420, label %if.end433, !dbg !13069

land.lhs.true420:                                 ; preds = %if.end418
  %186 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13070
  %stopped421 = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %186, i32 0, i32 10, !dbg !13071
  %bf.load422 = load i32, i32* %stopped421, align 8, !dbg !13071
  %bf.lshr423 = lshr i32 %bf.load422, 22, !dbg !13071
  %bf.clear424 = and i32 %bf.lshr423, 1, !dbg !13071
  %tobool425 = icmp ne i32 %bf.clear424, 0, !dbg !13070
  br i1 %tobool425, label %if.end433, label %if.then426, !dbg !13072

if.then426:                                       ; preds = %land.lhs.true420
  %187 = load i32, i32* %t, align 4, !dbg !13073
  %conv427 = zext i32 %187 to i64, !dbg !13073
  %and428 = and i64 %conv427, 4, !dbg !13076
  %tobool429 = icmp ne i64 %and428, 0, !dbg !13076
  br i1 %tobool429, label %if.then430, label %if.end432, !dbg !13077

if.then430:                                       ; preds = %if.then426
  %188 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13078
  %189 = load %struct.net2280_request*, %struct.net2280_request** %req, align 8, !dbg !13079
  %req431 = getelementptr inbounds %struct.net2280_request, %struct.net2280_request* %189, i32 0, i32 0, !dbg !13080
  call void @write_fifo(%struct.net2280_ep* %188, %struct.usb_request* %req431) #12, !dbg !13081
  br label %if.end432, !dbg !13081

if.end432:                                        ; preds = %if.then430, %if.then426
  br label %if.end433, !dbg !13082

if.end433:                                        ; preds = %if.then140, %if.end297, %if.then367, %if.end432, %land.lhs.true420, %if.end418
  ret void, !dbg !13083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @defect7374_disable_data_eps(%struct.net2280* %dev) #2 !dbg !13084 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  %ep = alloca %struct.net2280_ep*, align 8
  %i = alloca i32, align 4
  %ep_sel = alloca i8, align 1
  %tmp_reg = alloca i32, align 4
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !13085, metadata !DIExpression()), !dbg !13086
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep, metadata !13087, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13089, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.declare(metadata i8* %ep_sel, metadata !13091, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.declare(metadata i32* %tmp_reg, metadata !13093, metadata !DIExpression()), !dbg !13094
  store i32 1, i32* %i, align 4, !dbg !13095
  br label %for.cond, !dbg !13097

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !13098
  %cmp = icmp slt i32 %0, 5, !dbg !13100
  br i1 %cmp, label %for.body, label %for.end, !dbg !13101

for.body:                                         ; preds = %for.cond
  %1 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !13102
  %ep1 = getelementptr inbounds %struct.net2280, %struct.net2280* %1, i32 0, i32 2, !dbg !13104
  %2 = load i32, i32* %i, align 4, !dbg !13105
  %idxprom = sext i32 %2 to i64, !dbg !13102
  %arrayidx = getelementptr [9 x %struct.net2280_ep], [9 x %struct.net2280_ep]* %ep1, i64 0, i64 %idxprom, !dbg !13102
  store %struct.net2280_ep* %arrayidx, %struct.net2280_ep** %ep, align 8, !dbg !13106
  %3 = load i32, i32* %i, align 4, !dbg !13107
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %ep, align 8, !dbg !13108
  %cfg = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %4, i32 0, i32 1, !dbg !13109
  %5 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %cfg, align 8, !dbg !13109
  %ep_cfg = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %5, i32 0, i32 0, !dbg !13110
  %6 = bitcast i32* %ep_cfg to i8*, !dbg !13111
  call void @writel(i32 %3, i8* %6) #12, !dbg !13112
  br label %for.inc, !dbg !13113

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !13114
  %inc = add i32 %7, 1, !dbg !13114
  store i32 %inc, i32* %i, align 4, !dbg !13114
  br label %for.cond, !dbg !13115, !llvm.loop !13116

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !13118
  br label %for.cond2, !dbg !13120

for.cond2:                                        ; preds = %for.inc7, %for.end
  %8 = load i32, i32* %i, align 4, !dbg !13121
  %cmp3 = icmp slt i32 %8, 6, !dbg !13123
  br i1 %cmp3, label %for.body4, label %for.end9, !dbg !13124

for.body4:                                        ; preds = %for.cond2
  %9 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !13125
  %dep = getelementptr inbounds %struct.net2280, %struct.net2280* %9, i32 0, i32 15, !dbg !13126
  %10 = load %struct.net2280_dep_regs*, %struct.net2280_dep_regs** %dep, align 8, !dbg !13126
  %11 = load i32, i32* %i, align 4, !dbg !13127
  %idxprom5 = sext i32 %11 to i64, !dbg !13125
  %arrayidx6 = getelementptr %struct.net2280_dep_regs, %struct.net2280_dep_regs* %10, i64 %idxprom5, !dbg !13125
  %dep_cfg = getelementptr inbounds %struct.net2280_dep_regs, %struct.net2280_dep_regs* %arrayidx6, i32 0, i32 0, !dbg !13128
  %12 = bitcast i32* %dep_cfg to i8*, !dbg !13129
  call void @writel(i32 0, i8* %12) #12, !dbg !13130
  br label %for.inc7, !dbg !13130

for.inc7:                                         ; preds = %for.body4
  %13 = load i32, i32* %i, align 4, !dbg !13131
  %inc8 = add i32 %13, 1, !dbg !13131
  store i32 %inc8, i32* %i, align 4, !dbg !13131
  br label %for.cond2, !dbg !13132, !llvm.loop !13133

for.end9:                                         ; preds = %for.cond2
  store i8 0, i8* %ep_sel, align 1, !dbg !13135
  br label %for.cond10, !dbg !13137

for.cond10:                                       ; preds = %for.inc49, %for.end9
  %14 = load i8, i8* %ep_sel, align 1, !dbg !13138
  %conv = zext i8 %14 to i32, !dbg !13138
  %cmp11 = icmp sle i32 %conv, 21, !dbg !13140
  br i1 %cmp11, label %for.body13, label %for.end51, !dbg !13141

for.body13:                                       ; preds = %for.cond10
  %15 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !13142
  %plregs = getelementptr inbounds %struct.net2280, %struct.net2280* %15, i32 0, i32 18, !dbg !13144
  %16 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs, align 8, !dbg !13144
  %pl_ep_ctrl = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %16, i32 0, i32 4, !dbg !13145
  %17 = bitcast i32* %pl_ep_ctrl to i8*, !dbg !13146
  %call = call i32 @readl(i8* %17) #12, !dbg !13147
  store i32 %call, i32* %tmp_reg, align 4, !dbg !13148
  %18 = load i32, i32* %tmp_reg, align 4, !dbg !13149
  %and = and i32 %18, -32, !dbg !13150
  %19 = load i8, i8* %ep_sel, align 1, !dbg !13151
  %conv14 = zext i8 %19 to i32, !dbg !13151
  %or = or i32 %and, %conv14, !dbg !13152
  %20 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !13153
  %plregs15 = getelementptr inbounds %struct.net2280, %struct.net2280* %20, i32 0, i32 18, !dbg !13154
  %21 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs15, align 8, !dbg !13154
  %pl_ep_ctrl16 = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %21, i32 0, i32 4, !dbg !13155
  %22 = bitcast i32* %pl_ep_ctrl16 to i8*, !dbg !13156
  call void @writel(i32 %or, i8* %22) #12, !dbg !13157
  %23 = load i8, i8* %ep_sel, align 1, !dbg !13158
  %conv17 = zext i8 %23 to i32, !dbg !13158
  %cmp18 = icmp slt i32 %conv17, 2, !dbg !13160
  br i1 %cmp18, label %if.then, label %lor.lhs.false, !dbg !13161

lor.lhs.false:                                    ; preds = %for.body13
  %24 = load i8, i8* %ep_sel, align 1, !dbg !13162
  %conv20 = zext i8 %24 to i32, !dbg !13162
  %cmp21 = icmp sgt i32 %conv20, 9, !dbg !13163
  br i1 %cmp21, label %land.lhs.true, label %lor.lhs.false26, !dbg !13164

land.lhs.true:                                    ; preds = %lor.lhs.false
  %25 = load i8, i8* %ep_sel, align 1, !dbg !13165
  %conv23 = zext i8 %25 to i32, !dbg !13165
  %cmp24 = icmp slt i32 %conv23, 14, !dbg !13166
  br i1 %cmp24, label %if.then, label %lor.lhs.false26, !dbg !13167

lor.lhs.false26:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %26 = load i8, i8* %ep_sel, align 1, !dbg !13168
  %conv27 = zext i8 %26 to i32, !dbg !13168
  %cmp28 = icmp eq i32 %conv27, 18, !dbg !13169
  br i1 %cmp28, label %if.then, label %lor.lhs.false30, !dbg !13170

lor.lhs.false30:                                  ; preds = %lor.lhs.false26
  %27 = load i8, i8* %ep_sel, align 1, !dbg !13171
  %conv31 = zext i8 %27 to i32, !dbg !13171
  %cmp32 = icmp eq i32 %conv31, 20, !dbg !13172
  br i1 %cmp32, label %if.then, label %if.end, !dbg !13173

if.then:                                          ; preds = %lor.lhs.false30, %lor.lhs.false26, %land.lhs.true, %for.body13
  br label %for.inc49, !dbg !13174

if.end:                                           ; preds = %lor.lhs.false30
  %28 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !13175
  %plregs34 = getelementptr inbounds %struct.net2280, %struct.net2280* %28, i32 0, i32 18, !dbg !13176
  %29 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs34, align 8, !dbg !13176
  %pl_ep_cfg_4 = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %29, i32 0, i32 12, !dbg !13177
  %30 = bitcast i32* %pl_ep_cfg_4 to i8*, !dbg !13178
  %call35 = call i32 @readl(i8* %30) #12, !dbg !13179
  store i32 %call35, i32* %tmp_reg, align 4, !dbg !13180
  %31 = load i32, i32* %tmp_reg, align 4, !dbg !13181
  %conv36 = zext i32 %31 to i64, !dbg !13181
  %and37 = and i64 %conv36, -65, !dbg !13181
  %conv38 = trunc i64 %and37 to i32, !dbg !13181
  store i32 %conv38, i32* %tmp_reg, align 4, !dbg !13181
  %32 = load i32, i32* %tmp_reg, align 4, !dbg !13182
  %33 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !13183
  %plregs39 = getelementptr inbounds %struct.net2280, %struct.net2280* %33, i32 0, i32 18, !dbg !13184
  %34 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs39, align 8, !dbg !13184
  %pl_ep_cfg_440 = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %34, i32 0, i32 12, !dbg !13185
  %35 = bitcast i32* %pl_ep_cfg_440 to i8*, !dbg !13186
  call void @writel(i32 %32, i8* %35) #12, !dbg !13187
  %36 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !13188
  %plregs41 = getelementptr inbounds %struct.net2280, %struct.net2280* %36, i32 0, i32 18, !dbg !13189
  %37 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs41, align 8, !dbg !13189
  %pl_ep_ctrl42 = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %37, i32 0, i32 4, !dbg !13190
  %38 = bitcast i32* %pl_ep_ctrl42 to i8*, !dbg !13191
  %call43 = call i32 @readl(i8* %38) #12, !dbg !13192
  store i32 %call43, i32* %tmp_reg, align 4, !dbg !13193
  %39 = load i32, i32* %tmp_reg, align 4, !dbg !13194
  %conv44 = zext i32 %39 to i64, !dbg !13194
  %or45 = or i64 %conv44, 65536, !dbg !13194
  %conv46 = trunc i64 %or45 to i32, !dbg !13194
  store i32 %conv46, i32* %tmp_reg, align 4, !dbg !13194
  %40 = load i32, i32* %tmp_reg, align 4, !dbg !13195
  %41 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !13196
  %plregs47 = getelementptr inbounds %struct.net2280, %struct.net2280* %41, i32 0, i32 18, !dbg !13197
  %42 = load %struct.usb338x_pl_regs*, %struct.usb338x_pl_regs** %plregs47, align 8, !dbg !13197
  %pl_ep_ctrl48 = getelementptr inbounds %struct.usb338x_pl_regs, %struct.usb338x_pl_regs* %42, i32 0, i32 4, !dbg !13198
  %43 = bitcast i32* %pl_ep_ctrl48 to i8*, !dbg !13199
  call void @writel(i32 %40, i8* %43) #12, !dbg !13200
  br label %for.inc49, !dbg !13201

for.inc49:                                        ; preds = %if.end, %if.then
  %44 = load i8, i8* %ep_sel, align 1, !dbg !13202
  %inc50 = add i8 %44, 1, !dbg !13202
  store i8 %inc50, i8* %ep_sel, align 1, !dbg !13202
  br label %for.cond10, !dbg !13203, !llvm.loop !13204

for.end51:                                        ; preds = %for.cond10
  ret void, !dbg !13206
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @allow_status_338x(%struct.net2280_ep* %ep) #2 !dbg !13207 {
entry:
  %ep.addr = alloca %struct.net2280_ep*, align 8
  store %struct.net2280_ep* %ep, %struct.net2280_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280_ep** %ep.addr, metadata !13208, metadata !DIExpression()), !dbg !13209
  %0 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13210
  %regs = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %0, i32 0, i32 2, !dbg !13211
  %1 = load %struct.net2280_ep_regs*, %struct.net2280_ep_regs** %regs, align 8, !dbg !13211
  %ep_rsp = getelementptr inbounds %struct.net2280_ep_regs, %struct.net2280_ep_regs* %1, i32 0, i32 1, !dbg !13212
  %2 = bitcast i32* %ep_rsp to i8*, !dbg !13213
  call void @writel(i32 8, i8* %2) #12, !dbg !13214
  %3 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13215
  %stopped = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %3, i32 0, i32 10, !dbg !13216
  %bf.load = load i32, i32* %stopped, align 8, !dbg !13217
  %bf.clear = and i32 %bf.load, -4194305, !dbg !13217
  %bf.set = or i32 %bf.clear, 4194304, !dbg !13217
  store i32 %bf.set, i32* %stopped, align 8, !dbg !13217
  %4 = load %struct.net2280_ep*, %struct.net2280_ep** %ep.addr, align 8, !dbg !13218
  %responded = getelementptr inbounds %struct.net2280_ep, %struct.net2280_ep* %4, i32 0, i32 10, !dbg !13219
  %bf.load1 = load i32, i32* %responded, align 8, !dbg !13220
  %bf.clear2 = and i32 %bf.load1, -67108865, !dbg !13220
  store i32 %bf.clear2, i32* %responded, align 8, !dbg !13220
  ret void, !dbg !13221
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #2 !dbg !13222 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !13225, metadata !DIExpression()), !dbg !13226
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !13227
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !13228
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #12, !dbg !13229
  ret i8* %call, !dbg !13230
}

; Function Attrs: noredzone
declare dso_local void @usb_del_gadget(%struct.usb_gadget*) #1

; Function Attrs: noredzone
declare dso_local void @dma_pool_destroy(%struct.dma_pool*) #1

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #1

; Function Attrs: noredzone
declare dso_local void @pci_disable_msi(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @net2280_led_shutdown(%struct.net2280* %dev) #2 !dbg !13231 {
entry:
  %dev.addr = alloca %struct.net2280*, align 8
  store %struct.net2280* %dev, %struct.net2280** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net2280** %dev.addr, metadata !13232, metadata !DIExpression()), !dbg !13233
  %0 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !13234
  %regs = getelementptr inbounds %struct.net2280, %struct.net2280* %0, i32 0, i32 10, !dbg !13235
  %1 = load %struct.net2280_regs*, %struct.net2280_regs** %regs, align 8, !dbg !13235
  %gpioctl = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %1, i32 0, i32 20, !dbg !13236
  %2 = bitcast i32* %gpioctl to i8*, !dbg !13237
  %call = call i32 @readl(i8* %2) #12, !dbg !13238
  %and = and i32 %call, -16, !dbg !13239
  %3 = load %struct.net2280*, %struct.net2280** %dev.addr, align 8, !dbg !13240
  %regs1 = getelementptr inbounds %struct.net2280, %struct.net2280* %3, i32 0, i32 10, !dbg !13241
  %4 = load %struct.net2280_regs*, %struct.net2280_regs** %regs1, align 8, !dbg !13241
  %gpioctl2 = getelementptr inbounds %struct.net2280_regs, %struct.net2280_regs* %4, i32 0, i32 20, !dbg !13242
  %5 = bitcast i32* %gpioctl2 to i8*, !dbg !13243
  call void @writel(i32 %and, i8* %5) #12, !dbg !13244
  ret void, !dbg !13245
}

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #1

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #1

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_put_gadget(%struct.usb_gadget* %gadget) #2 !dbg !13246 {
entry:
  %gadget.addr = alloca %struct.usb_gadget*, align 8
  store %struct.usb_gadget* %gadget, %struct.usb_gadget** %gadget.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget** %gadget.addr, metadata !13247, metadata !DIExpression()), !dbg !13248
  %0 = load %struct.usb_gadget*, %struct.usb_gadget** %gadget.addr, align 8, !dbg !13249
  %dev = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %0, i32 0, i32 9, !dbg !13250
  call void @put_device(%struct.device* %dev) #12, !dbg !13251
  ret void, !dbg !13252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !13253 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13256, metadata !DIExpression()), !dbg !13257
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13258
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !13259
  %1 = load i8*, i8** %driver_data, align 8, !dbg !13259
  ret i8* %1, !dbg !13260
}

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #1

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { noredzone }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind readnone }
attributes #15 = { noredzone nounwind }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4648}
!llvm.module.flags = !{!4649, !4650, !4651, !4652}
!llvm.ident = !{!4653}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_fifo_mode", scope: !2, file: !3, line: 133, type: !4645, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !132, globals: !4490, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/usb/gadget/udc/net2280.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !103, !114, !121, !126}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_speed", file: !94, line: 1146, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/uapi/linux/usb/ch9.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100, !101, !102}
!96 = !DIEnumerator(name: "USB_SPEED_UNKNOWN", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "USB_SPEED_LOW", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "USB_SPEED_FULL", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "USB_SPEED_HIGH", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "USB_SPEED_WIRELESS", value: 4, isUnsigned: true)
!101 = !DIEnumerator(name: "USB_SPEED_SUPER", value: 5, isUnsigned: true)
!102 = !DIEnumerator(name: "USB_SPEED_SUPER_PLUS", value: 6, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_state", file: !94, line: 1156, baseType: !7, size: 32, elements: !104)
!104 = !{!105, !106, !107, !108, !109, !110, !111, !112, !113}
!105 = !DIEnumerator(name: "USB_STATE_NOTATTACHED", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "USB_STATE_ATTACHED", value: 1, isUnsigned: true)
!107 = !DIEnumerator(name: "USB_STATE_POWERED", value: 2, isUnsigned: true)
!108 = !DIEnumerator(name: "USB_STATE_RECONNECTING", value: 3, isUnsigned: true)
!109 = !DIEnumerator(name: "USB_STATE_UNAUTHENTICATED", value: 4, isUnsigned: true)
!110 = !DIEnumerator(name: "USB_STATE_DEFAULT", value: 5, isUnsigned: true)
!111 = !DIEnumerator(name: "USB_STATE_ADDRESS", value: 6, isUnsigned: true)
!112 = !DIEnumerator(name: "USB_STATE_CONFIGURED", value: 7, isUnsigned: true)
!113 = !DIEnumerator(name: "USB_STATE_SUSPENDED", value: 8, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !115, line: 305, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119, !120}
!117 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!119 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!120 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !122, line: 10, baseType: !7, size: 32, elements: !123)
!122 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!123 = !{!124, !125}
!124 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !127, line: 11, baseType: !7, size: 32, elements: !128)
!127 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!128 = !{!129, !130, !131}
!129 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!132 = !{!133, !136, !137, !139, !169, !183, !190, !203, !209, !219, !231, !268, !284, !347, !4470, !144, !146, !4479, !4482, !4483, !4485, !361, !359, !4142, !1586, !4486, !4487, !4488, !1524, !402, !330}
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!134 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !135, line: 76, flags: DIFlagFwdDecl)
!135 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !138, line: 148, baseType: !7)
!138 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net2280_regs", file: !141, line: 39, size: 704, elements: !142)
!141 = !DIFile(filename: "./include/linux/usb/net2280.h", directory: "/home/lizy2001/genbc/linux")
!142 = !{!143, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "devinit", scope: !140, file: !141, line: 41, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !145, line: 21, baseType: !146)
!145 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !147, line: 27, baseType: !7)
!147 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!148 = !DIDerivedType(tag: DW_TAG_member, name: "eectl", scope: !140, file: !141, line: 51, baseType: !144, size: 32, offset: 32)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "eeclkfreq", scope: !140, file: !141, line: 62, baseType: !144, size: 32, offset: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "_unused0", scope: !140, file: !141, line: 63, baseType: !144, size: 32, offset: 96)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "pciirqenb0", scope: !140, file: !141, line: 66, baseType: !144, size: 32, offset: 128)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "pciirqenb1", scope: !140, file: !141, line: 75, baseType: !144, size: 32, offset: 160)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_irqenb0", scope: !140, file: !141, line: 98, baseType: !144, size: 32, offset: 192)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_irqenb1", scope: !140, file: !141, line: 107, baseType: !144, size: 32, offset: 224)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "_unused1", scope: !140, file: !141, line: 135, baseType: !144, size: 32, offset: 256)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "usbirqenb1", scope: !140, file: !141, line: 136, baseType: !144, size: 32, offset: 288)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "irqstat0", scope: !140, file: !141, line: 162, baseType: !144, size: 32, offset: 320)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "irqstat1", scope: !140, file: !141, line: 175, baseType: !144, size: 32, offset: 352)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "idxaddr", scope: !140, file: !141, line: 202, baseType: !144, size: 32, offset: 384)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "idxdata", scope: !140, file: !141, line: 203, baseType: !144, size: 32, offset: 416)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "fifoctl", scope: !140, file: !141, line: 204, baseType: !144, size: 32, offset: 448)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !140, file: !141, line: 209, baseType: !144, size: 32, offset: 480)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "memaddr", scope: !140, file: !141, line: 211, baseType: !144, size: 32, offset: 512)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "memdata0", scope: !140, file: !141, line: 216, baseType: !144, size: 32, offset: 544)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "memdata1", scope: !140, file: !141, line: 217, baseType: !144, size: 32, offset: 576)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "_unused3", scope: !140, file: !141, line: 218, baseType: !144, size: 32, offset: 608)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "gpioctl", scope: !140, file: !141, line: 220, baseType: !144, size: 32, offset: 640)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "gpiostat", scope: !140, file: !141, line: 234, baseType: !144, size: 32, offset: 672)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net2280_usb_regs", file: !141, line: 242, size: 352, elements: !171)
!171 = !{!172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "stdrsp", scope: !170, file: !141, line: 244, baseType: !144, size: 32)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "prodvendid", scope: !170, file: !141, line: 262, baseType: !144, size: 32, offset: 32)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "relnum", scope: !170, file: !141, line: 265, baseType: !144, size: 32, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "usbctl", scope: !170, file: !141, line: 266, baseType: !144, size: 32, offset: 96)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "usbstat", scope: !170, file: !141, line: 282, baseType: !144, size: 32, offset: 128)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "xcvrdiag", scope: !170, file: !141, line: 287, baseType: !144, size: 32, offset: 160)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "setup0123", scope: !170, file: !141, line: 295, baseType: !144, size: 32, offset: 192)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "setup4567", scope: !170, file: !141, line: 296, baseType: !144, size: 32, offset: 224)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "_unused0", scope: !170, file: !141, line: 298, baseType: !144, size: 32, offset: 256)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "ouraddr", scope: !170, file: !141, line: 299, baseType: !144, size: 32, offset: 288)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "ourconfig", scope: !170, file: !141, line: 302, baseType: !144, size: 32, offset: 320)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net2280_pci_regs", file: !141, line: 306, size: 128, elements: !185)
!185 = !{!186, !187, !188, !189}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "pcimstctl", scope: !184, file: !141, line: 308, baseType: !144, size: 32)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "pcimstaddr", scope: !184, file: !141, line: 324, baseType: !144, size: 32, offset: 32)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "pcimstdata", scope: !184, file: !141, line: 325, baseType: !144, size: 32, offset: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "pcimststat", scope: !184, file: !141, line: 326, baseType: !144, size: 32, offset: 96)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net2280_dma_regs", file: !141, line: 336, size: 256, elements: !192)
!192 = !{!193, !194, !195, !199, !200, !201, !202}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "dmactl", scope: !191, file: !141, line: 338, baseType: !144, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dmastat", scope: !191, file: !141, line: 354, baseType: !144, size: 32, offset: 32)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "_unused0", scope: !191, file: !141, line: 360, baseType: !196, size: 64, offset: 64)
!196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 64, elements: !197)
!197 = !{!198}
!198 = !DISubrange(count: 2)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "dmacount", scope: !191, file: !141, line: 362, baseType: !144, size: 32, offset: 128)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "dmaaddr", scope: !191, file: !141, line: 369, baseType: !144, size: 32, offset: 160)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "dmadesc", scope: !191, file: !141, line: 370, baseType: !144, size: 32, offset: 192)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "_unused1", scope: !191, file: !141, line: 371, baseType: !144, size: 32, offset: 224)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net2280_dep_regs", file: !141, line: 376, size: 128, elements: !205)
!205 = !{!206, !207, !208}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "dep_cfg", scope: !204, file: !141, line: 378, baseType: !144, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "dep_rsp", scope: !204, file: !141, line: 380, baseType: !144, size: 32, offset: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !204, file: !141, line: 381, baseType: !196, size: 64, offset: 64)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net2280_ep_regs", file: !141, line: 388, size: 256, elements: !211)
!211 = !{!212, !213, !214, !215, !216, !217, !218}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "ep_cfg", scope: !210, file: !141, line: 390, baseType: !144, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "ep_rsp", scope: !210, file: !141, line: 396, baseType: !144, size: 32, offset: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "ep_irqenb", scope: !210, file: !141, line: 413, baseType: !144, size: 32, offset: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "ep_stat", scope: !210, file: !141, line: 420, baseType: !144, size: 32, offset: 96)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "ep_avail", scope: !210, file: !141, line: 442, baseType: !144, size: 32, offset: 128)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "ep_data", scope: !210, file: !141, line: 443, baseType: !144, size: 32, offset: 160)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "_unused0", scope: !210, file: !141, line: 444, baseType: !196, size: 64, offset: 192)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb338x_usb_ext_regs", file: !221, line: 52, size: 256, elements: !222)
!221 = !DIFile(filename: "./include/linux/usb/usb338x.h", directory: "/home/lizy2001/genbc/linux")
!222 = !{!223, !224, !225, !226, !227, !228, !229, !230}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "usbclass", scope: !220, file: !221, line: 53, baseType: !144, size: 32)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "ss_sel", scope: !220, file: !221, line: 57, baseType: !144, size: 32, offset: 32)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "ss_del", scope: !220, file: !221, line: 60, baseType: !144, size: 32, offset: 64)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "usb2lpm", scope: !220, file: !221, line: 63, baseType: !144, size: 32, offset: 96)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "usb3belt", scope: !220, file: !221, line: 67, baseType: !144, size: 32, offset: 128)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "usbctl2", scope: !220, file: !221, line: 70, baseType: !144, size: 32, offset: 160)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "in_timeout", scope: !220, file: !221, line: 78, baseType: !144, size: 32, offset: 192)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "isodelay", scope: !220, file: !221, line: 91, baseType: !144, size: 32, offset: 224)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb338x_ll_regs", file: !221, line: 111, size: 1280, elements: !233)
!233 = !{!234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !250, !251, !252, !253, !257, !261, !262, !263, !264, !265, !266, !267}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "ll_ltssm_ctrl1", scope: !232, file: !221, line: 113, baseType: !144, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "ll_ltssm_ctrl2", scope: !232, file: !221, line: 114, baseType: !144, size: 32, offset: 32)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "ll_ltssm_ctrl3", scope: !232, file: !221, line: 115, baseType: !144, size: 32, offset: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "unused1", scope: !232, file: !221, line: 116, baseType: !144, size: 32, offset: 96)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "unused2", scope: !232, file: !221, line: 119, baseType: !144, size: 32, offset: 128)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "ll_general_ctrl0", scope: !232, file: !221, line: 120, baseType: !144, size: 32, offset: 160)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "ll_general_ctrl1", scope: !232, file: !221, line: 121, baseType: !144, size: 32, offset: 192)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "ll_general_ctrl2", scope: !232, file: !221, line: 139, baseType: !144, size: 32, offset: 224)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "ll_general_ctrl3", scope: !232, file: !221, line: 144, baseType: !144, size: 32, offset: 256)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "ll_general_ctrl4", scope: !232, file: !221, line: 145, baseType: !144, size: 32, offset: 288)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "ll_error_gen", scope: !232, file: !221, line: 146, baseType: !144, size: 32, offset: 320)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "unused3", scope: !232, file: !221, line: 147, baseType: !144, size: 32, offset: 352)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "unused4", scope: !232, file: !221, line: 150, baseType: !247, size: 128, offset: 384)
!247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 128, elements: !248)
!248 = !{!249}
!249 = !DISubrange(count: 4)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "unused5", scope: !232, file: !221, line: 153, baseType: !196, size: 64, offset: 512)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "ll_lfps_5", scope: !232, file: !221, line: 154, baseType: !144, size: 32, offset: 576)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "ll_lfps_6", scope: !232, file: !221, line: 156, baseType: !144, size: 32, offset: 608)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "unused6", scope: !232, file: !221, line: 160, baseType: !254, size: 256, offset: 640)
!254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !255)
!255 = !{!256}
!256 = !DISubrange(count: 8)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "unused7", scope: !232, file: !221, line: 163, baseType: !258, size: 96, offset: 896)
!258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 96, elements: !259)
!259 = !{!260}
!260 = !DISubrange(count: 3)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "ll_tsn_counters_2", scope: !232, file: !221, line: 164, baseType: !144, size: 32, offset: 992)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "ll_tsn_counters_3", scope: !232, file: !221, line: 168, baseType: !144, size: 32, offset: 1024)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "unused8", scope: !232, file: !221, line: 170, baseType: !258, size: 96, offset: 1056)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "unused9", scope: !232, file: !221, line: 173, baseType: !144, size: 32, offset: 1152)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "ll_lfps_timers_2", scope: !232, file: !221, line: 174, baseType: !144, size: 32, offset: 1184)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "unused10", scope: !232, file: !221, line: 176, baseType: !144, size: 32, offset: 1216)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "ll_tsn_chicken_bit", scope: !232, file: !221, line: 177, baseType: !144, size: 32, offset: 1248)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb338x_pl_regs", file: !221, line: 182, size: 416, elements: !270)
!270 = !{!271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "pl_reg_1", scope: !269, file: !221, line: 184, baseType: !144, size: 32)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "pl_reg_2", scope: !269, file: !221, line: 185, baseType: !144, size: 32, offset: 32)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "pl_reg_3", scope: !269, file: !221, line: 186, baseType: !144, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "pl_reg_4", scope: !269, file: !221, line: 187, baseType: !144, size: 32, offset: 96)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "pl_ep_ctrl", scope: !269, file: !221, line: 188, baseType: !144, size: 32, offset: 128)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "pl_reg_6", scope: !269, file: !221, line: 196, baseType: !144, size: 32, offset: 160)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "pl_reg_7", scope: !269, file: !221, line: 197, baseType: !144, size: 32, offset: 192)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "pl_reg_8", scope: !269, file: !221, line: 198, baseType: !144, size: 32, offset: 224)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "pl_ep_status_1", scope: !269, file: !221, line: 199, baseType: !144, size: 32, offset: 256)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "pl_ep_status_2", scope: !269, file: !221, line: 205, baseType: !144, size: 32, offset: 288)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "pl_ep_status_3", scope: !269, file: !221, line: 206, baseType: !144, size: 32, offset: 320)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "pl_ep_status_4", scope: !269, file: !221, line: 210, baseType: !144, size: 32, offset: 352)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "pl_ep_cfg_4", scope: !269, file: !221, line: 213, baseType: !144, size: 32, offset: 384)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net2280", file: !286, line: 148, size: 19072, elements: !287)
!286 = !DIFile(filename: "drivers/usb/gadget/udc/net2280.h", directory: "/home/lizy2001/genbc/linux")
!287 = !{!288, !4128, !4129, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "gadget", scope: !285, file: !286, line: 150, baseType: !289, size: 6592)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_gadget", file: !290, line: 400, size: 6592, elements: !291)
!290 = !DIFile(filename: "./include/linux/usb/gadget.h", directory: "/home/lizy2001/genbc/linux")
!291 = !{!292, !318, !321, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4107, !4110, !4111, !4112, !4113, !4114, !4115, !4116, !4117, !4118, !4119, !4120, !4121, !4122, !4123, !4124, !4125, !4126, !4127}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !289, file: !290, line: 401, baseType: !293, size: 256)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !294, line: 102, size: 256, elements: !295)
!294 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!295 = !{!296, !306, !312}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !293, file: !294, line: 103, baseType: !297, size: 64)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !298, line: 13, baseType: !299)
!298 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !138, line: 175, baseType: !300)
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !138, line: 173, size: 64, elements: !301)
!301 = !{!302}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !300, file: !138, line: 174, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !145, line: 22, baseType: !304)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !147, line: 30, baseType: !305)
!305 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !293, file: !294, line: 104, baseType: !307, size: 128, offset: 64)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !138, line: 178, size: 128, elements: !308)
!308 = !{!309, !311}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !307, file: !138, line: 179, baseType: !310, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !307, file: !138, line: 179, baseType: !310, size: 64, offset: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !293, file: !294, line: 105, baseType: !313, size: 64, offset: 192)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !294, line: 21, baseType: !314)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = !DISubroutineType(types: !316)
!316 = !{null, !317}
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "udc", scope: !289, file: !290, line: 402, baseType: !319, size: 64, offset: 256)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = !DICompositeType(tag: DW_TAG_structure_type, name: "usb_udc", file: !290, line: 306, flags: DIFlagFwdDecl)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !289, file: !290, line: 404, baseType: !322, size: 64, offset: 320)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_gadget_ops", file: !290, line: 311, size: 768, elements: !325)
!325 = !{!326, !332, !333, !337, !338, !342, !343, !348, !365, !3969, !3970, !3974}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "get_frame", scope: !324, file: !290, line: 312, baseType: !327, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!328 = !DISubroutineType(types: !329)
!329 = !{!330, !331}
!330 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !324, file: !290, line: 313, baseType: !327, size: 64, offset: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "set_selfpowered", scope: !324, file: !290, line: 314, baseType: !334, size: 64, offset: 128)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!335 = !DISubroutineType(types: !336)
!336 = !{!330, !331, !330}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "vbus_session", scope: !324, file: !290, line: 315, baseType: !334, size: 64, offset: 192)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "vbus_draw", scope: !324, file: !290, line: 316, baseType: !339, size: 64, offset: 256)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DISubroutineType(types: !341)
!341 = !{!330, !331, !7}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "pullup", scope: !324, file: !290, line: 317, baseType: !334, size: 64, offset: 320)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !324, file: !290, line: 318, baseType: !344, size: 64, offset: 384)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = !DISubroutineType(types: !346)
!346 = !{!330, !331, !7, !347}
!347 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "get_config_params", scope: !324, file: !290, line: 320, baseType: !349, size: 64, offset: 448)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!350 = !DISubroutineType(types: !351)
!351 = !{null, !331, !352}
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_dcd_config_params", file: !290, line: 293, size: 48, elements: !354)
!354 = !{!355, !358, !363, !364}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "bU1devExitLat", scope: !353, file: !290, line: 294, baseType: !356, size: 8)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !147, line: 21, baseType: !357)
!357 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "bU2DevExitLat", scope: !353, file: !290, line: 296, baseType: !359, size: 16, offset: 16)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !360, line: 29, baseType: !361)
!360 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !147, line: 24, baseType: !362)
!362 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "besl_baseline", scope: !353, file: !290, line: 298, baseType: !356, size: 8, offset: 32)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "besl_deep", scope: !353, file: !290, line: 299, baseType: !356, size: 8, offset: 40)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "udc_start", scope: !324, file: !290, line: 322, baseType: !366, size: 64, offset: 512)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DISubroutineType(types: !368)
!368 = !{!330, !331, !369}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_gadget_driver", file: !290, line: 699, size: 1984, elements: !371)
!371 = !{!372, !375, !376, !377, !381, !394, !395, !396, !397, !398, !3966, !3967, !3968}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !370, file: !290, line: 700, baseType: !373, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!374 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "max_speed", scope: !370, file: !290, line: 701, baseType: !93, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !370, file: !290, line: 702, baseType: !366, size: 64, offset: 128)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "unbind", scope: !370, file: !290, line: 704, baseType: !378, size: 64, offset: 192)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = !DISubroutineType(types: !380)
!380 = !{null, !331}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !370, file: !290, line: 705, baseType: !382, size: 64, offset: 256)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!383 = !DISubroutineType(types: !384)
!384 = !{!330, !331, !385}
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !387)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ctrlrequest", file: !94, line: 213, size: 64, elements: !388)
!388 = !{!389, !390, !391, !392, !393}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "bRequestType", scope: !387, file: !94, line: 214, baseType: !356, size: 8)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "bRequest", scope: !387, file: !94, line: 215, baseType: !356, size: 8, offset: 8)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "wValue", scope: !387, file: !94, line: 216, baseType: !359, size: 16, offset: 16)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "wIndex", scope: !387, file: !94, line: 217, baseType: !359, size: 16, offset: 32)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "wLength", scope: !387, file: !94, line: 218, baseType: !359, size: 16, offset: 48)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !370, file: !290, line: 707, baseType: !378, size: 64, offset: 320)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !370, file: !290, line: 708, baseType: !378, size: 64, offset: 384)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !370, file: !290, line: 709, baseType: !378, size: 64, offset: 448)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !370, file: !290, line: 710, baseType: !378, size: 64, offset: 512)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !370, file: !290, line: 713, baseType: !399, size: 1152, offset: 576)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !400)
!400 = !{!401, !404, !3923, !3924, !3925, !3926, !3927, !3940, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !399, file: !67, line: 96, baseType: !402, size: 64)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !374)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !399, file: !67, line: 97, baseType: !405, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !407, line: 82, size: 1408, elements: !408)
!407 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!408 = !{!409, !410, !411, !3894, !3895, !3896, !3897, !3901, !3902, !3903, !3904, !3905, !3906, !3907, !3908, !3912, !3913, !3914, !3915, !3916, !3920, !3921, !3922}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !406, file: !407, line: 83, baseType: !402, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !406, file: !407, line: 84, baseType: !402, size: 64, offset: 64)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !406, file: !407, line: 85, baseType: !412, size: 64, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !414)
!414 = !{!415, !3531, !3532, !3535, !3536, !3587, !3588, !3590, !3591, !3592, !3593, !3602, !3711, !3724, !3727, !3728, !3732, !3734, !3735, !3736, !3740, !3746, !3747, !3750, !3754, !3844, !3845, !3846, !3847, !3848, !3882, !3883, !3884, !3887, !3890, !3891, !3892, !3893}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !413, file: !73, line: 462, baseType: !416, size: 512)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !417, line: 64, size: 512, elements: !418)
!417 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!418 = !{!419, !420, !421, !423, !480, !3382, !3521, !3526, !3527, !3528, !3529, !3530}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !416, file: !417, line: 65, baseType: !402, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !416, file: !417, line: 66, baseType: !307, size: 128, offset: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !416, file: !417, line: 67, baseType: !422, size: 64, offset: 192)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !416, file: !417, line: 68, baseType: !424, size: 64, offset: 256)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !417, line: 192, size: 704, elements: !426)
!426 = !{!427, !428, !444, !445}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !425, file: !417, line: 193, baseType: !307, size: 128)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !425, file: !417, line: 194, baseType: !429, offset: 128)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !430, line: 83, baseType: !431)
!430 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !430, line: 71, elements: !432)
!432 = !{!433}
!433 = !DIDerivedType(tag: DW_TAG_member, scope: !431, file: !430, line: 72, baseType: !434)
!434 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !431, file: !430, line: 72, elements: !435)
!435 = !{!436}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !434, file: !430, line: 73, baseType: !437)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !430, line: 20, elements: !438)
!438 = !{!439}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !437, file: !430, line: 21, baseType: !440)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !441, line: 25, baseType: !442)
!441 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 25, elements: !443)
!443 = !{}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !425, file: !417, line: 195, baseType: !416, size: 512, offset: 128)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !425, file: !417, line: 196, baseType: !446, size: 64, offset: 640)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !448)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !417, line: 156, size: 192, elements: !449)
!449 = !{!450, !455, !460}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !448, file: !417, line: 157, baseType: !451, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!453 = !DISubroutineType(types: !454)
!454 = !{!330, !424, !422}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !448, file: !417, line: 158, baseType: !456, size: 64, offset: 64)
!456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !457)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = !DISubroutineType(types: !459)
!459 = !{!402, !424, !422}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !448, file: !417, line: 159, baseType: !461, size: 64, offset: 128)
!461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !462)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DISubroutineType(types: !464)
!464 = !{!330, !424, !422, !465}
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !417, line: 148, size: 20736, elements: !467)
!467 = !{!468, !470, !474, !475, !479}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !466, file: !417, line: 149, baseType: !469, size: 192)
!469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !373, size: 192, elements: !259)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !466, file: !417, line: 150, baseType: !471, size: 4096, offset: 192)
!471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !373, size: 4096, elements: !472)
!472 = !{!473}
!473 = !DISubrange(count: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !466, file: !417, line: 151, baseType: !330, size: 32, offset: 4288)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !466, file: !417, line: 152, baseType: !476, size: 16384, offset: 4320)
!476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 16384, elements: !477)
!477 = !{!478}
!478 = !DISubrange(count: 2048)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !466, file: !417, line: 153, baseType: !330, size: 32, offset: 20704)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !416, file: !417, line: 69, baseType: !481, size: 64, offset: 320)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !417, line: 138, size: 448, elements: !483)
!483 = !{!484, !488, !516, !518, !3344, !3372, !3376}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !482, file: !417, line: 139, baseType: !485, size: 64)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = !DISubroutineType(types: !487)
!487 = !{null, !422}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !482, file: !417, line: 140, baseType: !489, size: 64, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !491)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !492, line: 230, size: 128, elements: !493)
!492 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!493 = !{!494, !509}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !491, file: !492, line: 231, baseType: !495, size: 64)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DISubroutineType(types: !497)
!497 = !{!498, !422, !503, !373}
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !138, line: 60, baseType: !499)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !500, line: 73, baseType: !501)
!500 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!501 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !500, line: 15, baseType: !502)
!502 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !492, line: 30, size: 128, elements: !505)
!505 = !{!506, !507}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !504, file: !492, line: 31, baseType: !402, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !504, file: !492, line: 32, baseType: !508, size: 16, offset: 64)
!508 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !138, line: 19, baseType: !362)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !491, file: !492, line: 232, baseType: !510, size: 64, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DISubroutineType(types: !512)
!512 = !{!498, !422, !503, !402, !513}
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !138, line: 55, baseType: !514)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !500, line: 72, baseType: !515)
!515 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !500, line: 16, baseType: !347)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !482, file: !417, line: 141, baseType: !517, size: 64, offset: 128)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !482, file: !417, line: 142, baseType: !519, size: 64, offset: 192)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !492, line: 84, size: 320, elements: !523)
!523 = !{!524, !525, !529, !3341, !3342}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !522, file: !492, line: 85, baseType: !402, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !522, file: !492, line: 86, baseType: !526, size: 64, offset: 64)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = !DISubroutineType(types: !528)
!528 = !{!508, !422, !503, !330}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !522, file: !492, line: 88, baseType: !530, size: 64, offset: 128)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DISubroutineType(types: !532)
!532 = !{!508, !422, !533, !330}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !492, line: 168, size: 448, elements: !535)
!535 = !{!536, !537, !538, !539, !3336, !3337}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !534, file: !492, line: 169, baseType: !504, size: 128)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !534, file: !492, line: 170, baseType: !513, size: 64, offset: 128)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !534, file: !492, line: 171, baseType: !136, size: 64, offset: 192)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !534, file: !492, line: 172, baseType: !540, size: 64, offset: 256)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = !DISubroutineType(types: !542)
!542 = !{!498, !543, !422, !533, !373, !717, !513}
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !545)
!545 = !{!546, !564, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3319, !3320, !3329, !3330, !3331, !3332, !3333, !3334, !3335}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !544, file: !44, line: 920, baseType: !547, size: 128)
!547 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !544, file: !44, line: 917, size: 128, elements: !548)
!548 = !{!549, !555}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !547, file: !44, line: 918, baseType: !550, size: 64)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !551, line: 58, size: 64, elements: !552)
!551 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!552 = !{!553}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !550, file: !551, line: 59, baseType: !554, size: 64)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !547, file: !44, line: 919, baseType: !556, size: 128, align: 64)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !138, line: 216, size: 128, align: 64, elements: !557)
!557 = !{!558, !560}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !556, file: !138, line: 217, baseType: !559, size: 64)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !556, file: !138, line: 218, baseType: !561, size: 64, offset: 64)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DISubroutineType(types: !563)
!563 = !{null, !559}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !544, file: !44, line: 921, baseType: !565, size: 128, offset: 128)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !566, line: 8, size: 128, elements: !567)
!566 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!567 = !{!568, !572}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !565, file: !566, line: 9, baseType: !569, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !571, line: 18, flags: DIFlagFwdDecl)
!571 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!572 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !565, file: !566, line: 10, baseType: !573, size: 64, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !571, line: 89, size: 1536, elements: !575)
!575 = !{!576, !577, !587, !595, !596, !614, !3269, !3271, !3283, !3284, !3285, !3286, !3287, !3293, !3294, !3295}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !574, file: !571, line: 91, baseType: !7, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !574, file: !571, line: 92, baseType: !578, size: 32, offset: 32)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !579, line: 277, baseType: !580)
!579 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !579, line: 277, size: 32, elements: !581)
!581 = !{!582}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !580, file: !579, line: 277, baseType: !583, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !579, line: 70, baseType: !584)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !579, line: 65, size: 32, elements: !585)
!585 = !{!586}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !584, file: !579, line: 66, baseType: !7, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !574, file: !571, line: 93, baseType: !588, size: 128, offset: 64)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !589, line: 38, size: 128, elements: !590)
!589 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!590 = !{!591, !593}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !588, file: !589, line: 39, baseType: !592, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !588, file: !589, line: 39, baseType: !594, size: 64, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !574, file: !571, line: 94, baseType: !573, size: 64, offset: 192)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !574, file: !571, line: 95, baseType: !597, size: 128, offset: 256)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !571, line: 47, size: 128, elements: !598)
!598 = !{!599, !611}
!599 = !DIDerivedType(tag: DW_TAG_member, scope: !597, file: !571, line: 48, baseType: !600, size: 64)
!600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !597, file: !571, line: 48, size: 64, elements: !601)
!601 = !{!602, !607}
!602 = !DIDerivedType(tag: DW_TAG_member, scope: !600, file: !571, line: 49, baseType: !603, size: 64)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !600, file: !571, line: 49, size: 64, elements: !604)
!604 = !{!605, !606}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !603, file: !571, line: 50, baseType: !144, size: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !603, file: !571, line: 50, baseType: !144, size: 32, offset: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !600, file: !571, line: 52, baseType: !608, size: 64)
!608 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !145, line: 23, baseType: !609)
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !147, line: 31, baseType: !610)
!610 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !597, file: !571, line: 54, baseType: !612, size: 64, offset: 64)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !357)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !574, file: !571, line: 96, baseType: !615, size: 64, offset: 384)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !617)
!617 = !{!618, !619, !620, !628, !635, !636, !782, !2981, !2982, !2983, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3245, !3253, !3254, !3255, !3265, !3266, !3267, !3268}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !616, file: !44, line: 611, baseType: !508, size: 16)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !616, file: !44, line: 612, baseType: !362, size: 16, offset: 16)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !616, file: !44, line: 613, baseType: !621, size: 32, offset: 32)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !622, line: 23, baseType: !623)
!622 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !622, line: 21, size: 32, elements: !624)
!624 = !{!625}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !623, file: !622, line: 22, baseType: !626, size: 32)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !138, line: 32, baseType: !627)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !500, line: 49, baseType: !7)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !616, file: !44, line: 614, baseType: !629, size: 32, offset: 64)
!629 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !622, line: 28, baseType: !630)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !622, line: 26, size: 32, elements: !631)
!631 = !{!632}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !630, file: !622, line: 27, baseType: !633, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !138, line: 33, baseType: !634)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !500, line: 50, baseType: !7)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !616, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !616, file: !44, line: 622, baseType: !637, size: 64, offset: 128)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !639)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !640)
!640 = !{!641, !645, !658, !662, !668, !672, !678, !682, !686, !690, !694, !695, !701, !705, !729, !758, !762, !768, !773, !777, !778}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !639, file: !44, line: 1865, baseType: !642, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DISubroutineType(types: !644)
!644 = !{!573, !615, !573, !7}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !639, file: !44, line: 1866, baseType: !646, size: 64, offset: 64)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DISubroutineType(types: !648)
!648 = !{!402, !573, !615, !649}
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !651, line: 10, size: 128, elements: !652)
!651 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!652 = !{!653, !657}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !650, file: !651, line: 11, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!655 = !DISubroutineType(types: !656)
!656 = !{null, !136}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !650, file: !651, line: 12, baseType: !136, size: 64, offset: 64)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !639, file: !44, line: 1867, baseType: !659, size: 64, offset: 128)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DISubroutineType(types: !661)
!661 = !{!330, !615, !330}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !639, file: !44, line: 1868, baseType: !663, size: 64, offset: 192)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = !DISubroutineType(types: !665)
!665 = !{!666, !615, !330}
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !639, file: !44, line: 1870, baseType: !669, size: 64, offset: 256)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = !DISubroutineType(types: !671)
!671 = !{!330, !573, !373, !330}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !639, file: !44, line: 1872, baseType: !673, size: 64, offset: 320)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DISubroutineType(types: !675)
!675 = !{!330, !615, !573, !508, !676}
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !138, line: 30, baseType: !677)
!677 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !639, file: !44, line: 1873, baseType: !679, size: 64, offset: 384)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = !DISubroutineType(types: !681)
!681 = !{!330, !573, !615, !573}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !639, file: !44, line: 1874, baseType: !683, size: 64, offset: 448)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = !DISubroutineType(types: !685)
!685 = !{!330, !615, !573}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !639, file: !44, line: 1875, baseType: !687, size: 64, offset: 512)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DISubroutineType(types: !689)
!689 = !{!330, !615, !573, !402}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !639, file: !44, line: 1876, baseType: !691, size: 64, offset: 576)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{!330, !615, !573, !508}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !639, file: !44, line: 1877, baseType: !683, size: 64, offset: 640)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !639, file: !44, line: 1878, baseType: !696, size: 64, offset: 704)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DISubroutineType(types: !698)
!698 = !{!330, !615, !573, !508, !699}
!699 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !138, line: 16, baseType: !700)
!700 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !138, line: 13, baseType: !144)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !639, file: !44, line: 1879, baseType: !702, size: 64, offset: 768)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = !DISubroutineType(types: !704)
!704 = !{!330, !615, !573, !615, !573, !7}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !639, file: !44, line: 1881, baseType: !706, size: 64, offset: 832)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DISubroutineType(types: !708)
!708 = !{!330, !573, !709}
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !711)
!711 = !{!712, !713, !714, !715, !716, !719, !726, !727, !728}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !710, file: !44, line: 220, baseType: !7, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !710, file: !44, line: 221, baseType: !508, size: 16, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !710, file: !44, line: 222, baseType: !621, size: 32, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !710, file: !44, line: 223, baseType: !629, size: 32, offset: 96)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !710, file: !44, line: 224, baseType: !717, size: 64, offset: 128)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !138, line: 46, baseType: !718)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !500, line: 88, baseType: !305)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !710, file: !44, line: 225, baseType: !720, size: 128, offset: 192)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !721, line: 13, size: 128, elements: !722)
!721 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!722 = !{!723, !725}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !720, file: !721, line: 14, baseType: !724, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !721, line: 8, baseType: !304)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !720, file: !721, line: 15, baseType: !502, size: 64, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !710, file: !44, line: 226, baseType: !720, size: 128, offset: 320)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !710, file: !44, line: 227, baseType: !720, size: 128, offset: 448)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !710, file: !44, line: 234, baseType: !543, size: 64, offset: 576)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !639, file: !44, line: 1882, baseType: !730, size: 64, offset: 896)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DISubroutineType(types: !732)
!732 = !{!330, !733, !735, !144, !7}
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !565)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !737, line: 22, size: 1152, elements: !738)
!737 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!738 = !{!739, !740, !741, !742, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !736, file: !737, line: 23, baseType: !144, size: 32)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !736, file: !737, line: 24, baseType: !508, size: 16, offset: 32)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !736, file: !737, line: 25, baseType: !7, size: 32, offset: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !736, file: !737, line: 26, baseType: !743, size: 32, offset: 96)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !138, line: 104, baseType: !144)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !736, file: !737, line: 27, baseType: !608, size: 64, offset: 128)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !736, file: !737, line: 28, baseType: !608, size: 64, offset: 192)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !736, file: !737, line: 37, baseType: !608, size: 64, offset: 256)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !736, file: !737, line: 38, baseType: !699, size: 32, offset: 320)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !736, file: !737, line: 39, baseType: !699, size: 32, offset: 352)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !736, file: !737, line: 40, baseType: !621, size: 32, offset: 384)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !736, file: !737, line: 41, baseType: !629, size: 32, offset: 416)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !736, file: !737, line: 42, baseType: !717, size: 64, offset: 448)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !736, file: !737, line: 43, baseType: !720, size: 128, offset: 512)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !736, file: !737, line: 44, baseType: !720, size: 128, offset: 640)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !736, file: !737, line: 45, baseType: !720, size: 128, offset: 768)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !736, file: !737, line: 46, baseType: !720, size: 128, offset: 896)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !736, file: !737, line: 47, baseType: !608, size: 64, offset: 1024)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !736, file: !737, line: 48, baseType: !608, size: 64, offset: 1088)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !639, file: !44, line: 1883, baseType: !759, size: 64, offset: 960)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DISubroutineType(types: !761)
!761 = !{!498, !573, !373, !513}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !639, file: !44, line: 1884, baseType: !763, size: 64, offset: 1024)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DISubroutineType(types: !765)
!765 = !{!330, !615, !766, !608, !608}
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !639, file: !44, line: 1886, baseType: !769, size: 64, offset: 1088)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DISubroutineType(types: !771)
!771 = !{!330, !615, !772, !330}
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !639, file: !44, line: 1887, baseType: !774, size: 64, offset: 1152)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DISubroutineType(types: !776)
!776 = !{!330, !615, !573, !543, !7, !508}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !639, file: !44, line: 1890, baseType: !691, size: 64, offset: 1216)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !639, file: !44, line: 1891, baseType: !779, size: 64, offset: 1280)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{!330, !615, !666, !330}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !616, file: !44, line: 623, baseType: !783, size: 64, offset: 192)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !785)
!785 = !{!786, !787, !788, !789, !790, !791, !838, !2588, !2670, !2753, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2769, !2773, !2774, !2777, !2778, !2781, !2782, !2783, !2824, !2851, !2852, !2853, !2854, !2855, !2856, !2859, !2861, !2868, !2869, !2871, !2872, !2873, !2932, !2933, !2948, !2949, !2950, !2951, !2952, !2955, !2956, !2957, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !784, file: !44, line: 1417, baseType: !307, size: 128)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !784, file: !44, line: 1418, baseType: !699, size: 32, offset: 128)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !784, file: !44, line: 1419, baseType: !357, size: 8, offset: 160)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !784, file: !44, line: 1420, baseType: !347, size: 64, offset: 192)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !784, file: !44, line: 1421, baseType: !717, size: 64, offset: 256)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !784, file: !44, line: 1422, baseType: !792, size: 64, offset: 320)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !794)
!794 = !{!795, !796, !797, !804, !808, !812, !816, !817, !818, !828, !831, !832, !833, !835, !836, !837}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !793, file: !44, line: 2229, baseType: !402, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !793, file: !44, line: 2230, baseType: !330, size: 32, offset: 64)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !793, file: !44, line: 2238, baseType: !798, size: 64, offset: 128)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DISubroutineType(types: !800)
!800 = !{!330, !801}
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !803, line: 28, flags: DIFlagFwdDecl)
!803 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!804 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !793, file: !44, line: 2239, baseType: !805, size: 64, offset: 192)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !807)
!807 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !793, file: !44, line: 2240, baseType: !809, size: 64, offset: 256)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!573, !792, !330, !402, !136}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !793, file: !44, line: 2242, baseType: !813, size: 64, offset: 320)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DISubroutineType(types: !815)
!815 = !{null, !783}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !793, file: !44, line: 2243, baseType: !133, size: 64, offset: 384)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !793, file: !44, line: 2244, baseType: !792, size: 64, offset: 448)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !793, file: !44, line: 2245, baseType: !819, size: 64, offset: 512)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !138, line: 182, size: 64, elements: !820)
!820 = !{!821}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !819, file: !138, line: 183, baseType: !822, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !138, line: 186, size: 128, elements: !824)
!824 = !{!825, !826}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !823, file: !138, line: 187, baseType: !822, size: 64)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !823, file: !138, line: 187, baseType: !827, size: 64, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !793, file: !44, line: 2247, baseType: !829, offset: 576)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !830, line: 187, elements: !443)
!830 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!831 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !793, file: !44, line: 2248, baseType: !829, offset: 576)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !793, file: !44, line: 2249, baseType: !829, offset: 576)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !793, file: !44, line: 2250, baseType: !834, offset: 576)
!834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, elements: !259)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !793, file: !44, line: 2252, baseType: !829, offset: 576)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !793, file: !44, line: 2253, baseType: !829, offset: 576)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !793, file: !44, line: 2254, baseType: !829, offset: 576)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !784, file: !44, line: 1423, baseType: !839, size: 64, offset: 384)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !841)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !842)
!842 = !{!843, !847, !851, !852, !856, !862, !866, !867, !868, !872, !876, !877, !878, !879, !885, !890, !891, !898, !899, !900, !901, !2572, !2587}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !841, file: !44, line: 1936, baseType: !844, size: 64)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{!615, !783}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !841, file: !44, line: 1937, baseType: !848, size: 64, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DISubroutineType(types: !850)
!850 = !{null, !615}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !841, file: !44, line: 1938, baseType: !848, size: 64, offset: 128)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !841, file: !44, line: 1940, baseType: !853, size: 64, offset: 192)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DISubroutineType(types: !855)
!855 = !{null, !615, !330}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !841, file: !44, line: 1941, baseType: !857, size: 64, offset: 256)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DISubroutineType(types: !859)
!859 = !{!330, !615, !860}
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !841, file: !44, line: 1942, baseType: !863, size: 64, offset: 320)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{!330, !615}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !841, file: !44, line: 1943, baseType: !848, size: 64, offset: 384)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !841, file: !44, line: 1944, baseType: !813, size: 64, offset: 448)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !841, file: !44, line: 1945, baseType: !869, size: 64, offset: 512)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = !DISubroutineType(types: !871)
!871 = !{!330, !783, !330}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !841, file: !44, line: 1946, baseType: !873, size: 64, offset: 576)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DISubroutineType(types: !875)
!875 = !{!330, !783}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !841, file: !44, line: 1947, baseType: !873, size: 64, offset: 640)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !841, file: !44, line: 1948, baseType: !873, size: 64, offset: 704)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !841, file: !44, line: 1949, baseType: !873, size: 64, offset: 768)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !841, file: !44, line: 1950, baseType: !880, size: 64, offset: 832)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DISubroutineType(types: !882)
!882 = !{!330, !573, !883}
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !841, file: !44, line: 1951, baseType: !886, size: 64, offset: 896)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{!330, !783, !889, !373}
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !841, file: !44, line: 1952, baseType: !813, size: 64, offset: 960)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !841, file: !44, line: 1954, baseType: !892, size: 64, offset: 1024)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{!330, !895, !573}
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !897, line: 539, flags: DIFlagFwdDecl)
!897 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!898 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !841, file: !44, line: 1955, baseType: !892, size: 64, offset: 1088)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !841, file: !44, line: 1956, baseType: !892, size: 64, offset: 1152)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !841, file: !44, line: 1957, baseType: !892, size: 64, offset: 1216)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !841, file: !44, line: 1963, baseType: !902, size: 64, offset: 1280)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = !DISubroutineType(types: !904)
!904 = !{!330, !783, !905, !137}
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !907, line: 68, size: 512, align: 128, elements: !908)
!907 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!908 = !{!909, !910, !2564, !2571}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !906, file: !907, line: 69, baseType: !347, size: 64)
!910 = !DIDerivedType(tag: DW_TAG_member, scope: !906, file: !907, line: 77, baseType: !911, size: 320, offset: 64)
!911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !906, file: !907, line: 77, size: 320, elements: !912)
!912 = !{!913, !1092, !1097, !1125, !1133, !1139, !2495, !2563}
!913 = !DIDerivedType(tag: DW_TAG_member, scope: !911, file: !907, line: 78, baseType: !914, size: 320)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !911, file: !907, line: 78, size: 320, elements: !915)
!915 = !{!916, !917, !1090, !1091}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !914, file: !907, line: 84, baseType: !307, size: 128)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !914, file: !907, line: 86, baseType: !918, size: 64, offset: 128)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !920)
!920 = !{!921, !922, !929, !930, !935, !950, !959, !960, !961, !962, !1083, !1084, !1087, !1088, !1089}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !919, file: !44, line: 452, baseType: !615, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !919, file: !44, line: 453, baseType: !923, size: 128, offset: 64)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !924, line: 292, size: 128, elements: !925)
!924 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!925 = !{!926, !927, !928}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !923, file: !924, line: 293, baseType: !429)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !923, file: !924, line: 295, baseType: !137, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !923, file: !924, line: 296, baseType: !136, size: 64, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !919, file: !44, line: 454, baseType: !137, size: 32, offset: 192)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !919, file: !44, line: 455, baseType: !931, size: 32, offset: 224)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !138, line: 168, baseType: !932)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !138, line: 166, size: 32, elements: !933)
!933 = !{!934}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !932, file: !138, line: 167, baseType: !330, size: 32)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !919, file: !44, line: 460, baseType: !936, size: 128, offset: 256)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !937, line: 125, size: 128, elements: !938)
!937 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!938 = !{!939, !949}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !936, file: !937, line: 126, baseType: !940, size: 64)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !937, line: 31, size: 64, elements: !941)
!941 = !{!942}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !940, file: !937, line: 32, baseType: !943, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !937, line: 24, size: 192, align: 64, elements: !945)
!945 = !{!946, !947, !948}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !944, file: !937, line: 25, baseType: !347, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !944, file: !937, line: 26, baseType: !943, size: 64, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !944, file: !937, line: 27, baseType: !943, size: 64, offset: 128)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !936, file: !937, line: 127, baseType: !943, size: 64, offset: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !919, file: !44, line: 461, baseType: !951, size: 256, offset: 384)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !952, line: 35, size: 256, elements: !953)
!952 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!953 = !{!954, !955, !956, !958}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !951, file: !952, line: 36, baseType: !297, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !951, file: !952, line: 42, baseType: !297, size: 64, offset: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !951, file: !952, line: 46, baseType: !957, offset: 128)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !430, line: 29, baseType: !437)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !951, file: !952, line: 47, baseType: !307, size: 128, offset: 128)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !919, file: !44, line: 462, baseType: !347, size: 64, offset: 640)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !919, file: !44, line: 463, baseType: !347, size: 64, offset: 704)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !919, file: !44, line: 464, baseType: !347, size: 64, offset: 768)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !919, file: !44, line: 465, baseType: !963, size: 64, offset: 832)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !966)
!966 = !{!967, !971, !975, !979, !983, !987, !993, !999, !1003, !1008, !1012, !1016, !1020, !1047, !1051, !1057, !1058, !1059, !1063, !1068, !1072, !1079}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !965, file: !44, line: 368, baseType: !968, size: 64)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DISubroutineType(types: !970)
!970 = !{!330, !905, !860}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !965, file: !44, line: 369, baseType: !972, size: 64, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!973 = !DISubroutineType(types: !974)
!974 = !{!330, !543, !905}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !965, file: !44, line: 372, baseType: !976, size: 64, offset: 128)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64)
!977 = !DISubroutineType(types: !978)
!978 = !{!330, !918, !860}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !965, file: !44, line: 375, baseType: !980, size: 64, offset: 192)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DISubroutineType(types: !982)
!982 = !{!330, !905}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !965, file: !44, line: 381, baseType: !984, size: 64, offset: 256)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DISubroutineType(types: !986)
!986 = !{!330, !543, !918, !310, !7}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !965, file: !44, line: 383, baseType: !988, size: 64, offset: 320)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = !DISubroutineType(types: !990)
!990 = !{null, !991}
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !965, file: !44, line: 385, baseType: !994, size: 64, offset: 384)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = !DISubroutineType(types: !996)
!996 = !{!330, !543, !918, !717, !7, !7, !997, !998}
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !965, file: !44, line: 388, baseType: !1000, size: 64, offset: 448)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!330, !543, !918, !717, !7, !7, !905, !136}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !965, file: !44, line: 393, baseType: !1004, size: 64, offset: 512)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{!1007, !918, !1007}
!1007 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !138, line: 125, baseType: !608)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !965, file: !44, line: 394, baseType: !1009, size: 64, offset: 576)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{null, !905, !7, !7}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !965, file: !44, line: 395, baseType: !1013, size: 64, offset: 640)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!330, !905, !137}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !965, file: !44, line: 396, baseType: !1017, size: 64, offset: 704)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{null, !905}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !965, file: !44, line: 397, baseType: !1021, size: 64, offset: 768)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!498, !1024, !1045}
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !1026)
!1026 = !{!1027, !1028, !1029, !1033, !1034, !1035, !1037, !1038}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1025, file: !44, line: 321, baseType: !543, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1025, file: !44, line: 326, baseType: !717, size: 64, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1025, file: !44, line: 327, baseType: !1030, size: 64, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{null, !1024, !502, !502}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1025, file: !44, line: 328, baseType: !136, size: 64, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1025, file: !44, line: 329, baseType: !330, size: 32, offset: 256)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1025, file: !44, line: 330, baseType: !1036, size: 16, offset: 288)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !145, line: 19, baseType: !361)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1025, file: !44, line: 331, baseType: !1036, size: 16, offset: 304)
!1038 = !DIDerivedType(tag: DW_TAG_member, scope: !1025, file: !44, line: 332, baseType: !1039, size: 64, offset: 320)
!1039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1025, file: !44, line: 332, size: 64, elements: !1040)
!1040 = !{!1041, !1042}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1039, file: !44, line: 333, baseType: !7, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1039, file: !44, line: 334, baseType: !1043, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !965, file: !44, line: 402, baseType: !1048, size: 64, offset: 832)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!330, !918, !905, !905, !5}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !965, file: !44, line: 404, baseType: !1052, size: 64, offset: 896)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!676, !905, !1055}
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1056, line: 305, baseType: !7)
!1056 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !965, file: !44, line: 405, baseType: !1017, size: 64, offset: 960)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !965, file: !44, line: 406, baseType: !980, size: 64, offset: 1024)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !965, file: !44, line: 407, baseType: !1060, size: 64, offset: 1088)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!330, !905, !347, !347}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !965, file: !44, line: 409, baseType: !1064, size: 64, offset: 1152)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{null, !905, !1067, !1067}
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !965, file: !44, line: 410, baseType: !1069, size: 64, offset: 1216)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!330, !918, !905}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !965, file: !44, line: 413, baseType: !1073, size: 64, offset: 1280)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!330, !1076, !543, !1078}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !965, file: !44, line: 415, baseType: !1080, size: 64, offset: 1344)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{null, !543}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !919, file: !44, line: 466, baseType: !347, size: 64, offset: 896)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !919, file: !44, line: 467, baseType: !1085, size: 32, offset: 960)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1086, line: 8, baseType: !144)
!1086 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !919, file: !44, line: 468, baseType: !429, offset: 992)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !919, file: !44, line: 469, baseType: !307, size: 128, offset: 1024)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !919, file: !44, line: 470, baseType: !136, size: 64, offset: 1152)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !914, file: !907, line: 87, baseType: !347, size: 64, offset: 192)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !914, file: !907, line: 94, baseType: !347, size: 64, offset: 256)
!1092 = !DIDerivedType(tag: DW_TAG_member, scope: !911, file: !907, line: 96, baseType: !1093, size: 64)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !911, file: !907, line: 96, size: 64, elements: !1094)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1093, file: !907, line: 101, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !138, line: 143, baseType: !608)
!1097 = !DIDerivedType(tag: DW_TAG_member, scope: !911, file: !907, line: 103, baseType: !1098, size: 320)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !911, file: !907, line: 103, size: 320, elements: !1099)
!1099 = !{!1100, !1110, !1113, !1114}
!1100 = !DIDerivedType(tag: DW_TAG_member, scope: !1098, file: !907, line: 104, baseType: !1101, size: 128)
!1101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1098, file: !907, line: 104, size: 128, elements: !1102)
!1102 = !{!1103, !1104}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1101, file: !907, line: 105, baseType: !307, size: 128)
!1104 = !DIDerivedType(tag: DW_TAG_member, scope: !1101, file: !907, line: 106, baseType: !1105, size: 128)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1101, file: !907, line: 106, size: 128, elements: !1106)
!1106 = !{!1107, !1108, !1109}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1105, file: !907, line: 107, baseType: !905, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1105, file: !907, line: 109, baseType: !330, size: 32, offset: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1105, file: !907, line: 110, baseType: !330, size: 32, offset: 96)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1098, file: !907, line: 117, baseType: !1111, size: 64, offset: 128)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !907, line: 117, flags: DIFlagFwdDecl)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1098, file: !907, line: 119, baseType: !136, size: 64, offset: 192)
!1114 = !DIDerivedType(tag: DW_TAG_member, scope: !1098, file: !907, line: 120, baseType: !1115, size: 64, offset: 256)
!1115 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1098, file: !907, line: 120, size: 64, elements: !1116)
!1116 = !{!1117, !1118, !1119}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1115, file: !907, line: 121, baseType: !136, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1115, file: !907, line: 122, baseType: !347, size: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, scope: !1115, file: !907, line: 123, baseType: !1120, size: 32)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1115, file: !907, line: 123, size: 32, elements: !1121)
!1121 = !{!1122, !1123, !1124}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1120, file: !907, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1120, file: !907, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1120, file: !907, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1125 = !DIDerivedType(tag: DW_TAG_member, scope: !911, file: !907, line: 130, baseType: !1126, size: 192)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !911, file: !907, line: 130, size: 192, elements: !1127)
!1127 = !{!1128, !1129, !1130, !1131, !1132}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1126, file: !907, line: 131, baseType: !347, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1126, file: !907, line: 134, baseType: !357, size: 8, offset: 64)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1126, file: !907, line: 135, baseType: !357, size: 8, offset: 72)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1126, file: !907, line: 136, baseType: !931, size: 32, offset: 96)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1126, file: !907, line: 137, baseType: !7, size: 32, offset: 128)
!1133 = !DIDerivedType(tag: DW_TAG_member, scope: !911, file: !907, line: 139, baseType: !1134, size: 256)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !911, file: !907, line: 139, size: 256, elements: !1135)
!1135 = !{!1136, !1137, !1138}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1134, file: !907, line: 140, baseType: !347, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1134, file: !907, line: 141, baseType: !931, size: 32, offset: 64)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1134, file: !907, line: 143, baseType: !307, size: 128, offset: 128)
!1139 = !DIDerivedType(tag: DW_TAG_member, scope: !911, file: !907, line: 145, baseType: !1140, size: 256)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !911, file: !907, line: 145, size: 256, elements: !1141)
!1141 = !{!1142, !1143, !1145, !1146, !2494}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1140, file: !907, line: 146, baseType: !347, size: 64)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1140, file: !907, line: 147, baseType: !1144, size: 64, offset: 64)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !897, line: 509, baseType: !905)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1140, file: !907, line: 148, baseType: !347, size: 64, offset: 128)
!1146 = !DIDerivedType(tag: DW_TAG_member, scope: !1140, file: !907, line: 149, baseType: !1147, size: 64, offset: 192)
!1147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1140, file: !907, line: 149, size: 64, elements: !1148)
!1148 = !{!1149, !2493}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1147, file: !907, line: 150, baseType: !1150, size: 64)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !907, line: 388, size: 7296, elements: !1152)
!1152 = !{!1153, !2489}
!1153 = !DIDerivedType(tag: DW_TAG_member, scope: !1151, file: !907, line: 389, baseType: !1154, size: 7296)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1151, file: !907, line: 389, size: 7296, elements: !1155)
!1155 = !{!1156, !1274, !1275, !1276, !1280, !1281, !1282, !1283, !1284, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1325, !1331, !1334, !1380, !1381, !2473, !2474, !2477, !2478, !2479, !2482, !2483, !2484, !2487, !2488}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1154, file: !907, line: 390, baseType: !1157, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !907, line: 305, size: 1472, elements: !1159)
!1159 = !{!1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1174, !1175, !1180, !1181, !1184, !1268, !1269, !1270, !1271, !1272}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1158, file: !907, line: 308, baseType: !347, size: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1158, file: !907, line: 309, baseType: !347, size: 64, offset: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1158, file: !907, line: 313, baseType: !1157, size: 64, offset: 128)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1158, file: !907, line: 313, baseType: !1157, size: 64, offset: 192)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1158, file: !907, line: 315, baseType: !944, size: 192, align: 64, offset: 256)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1158, file: !907, line: 323, baseType: !347, size: 64, offset: 448)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1158, file: !907, line: 327, baseType: !1150, size: 64, offset: 512)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1158, file: !907, line: 333, baseType: !1168, size: 64, offset: 576)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !897, line: 284, baseType: !1169)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !897, line: 284, size: 64, elements: !1170)
!1170 = !{!1171}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1169, file: !897, line: 284, baseType: !1172, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1173, line: 19, baseType: !347)
!1173 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1158, file: !907, line: 334, baseType: !347, size: 64, offset: 640)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1158, file: !907, line: 343, baseType: !1176, size: 256, offset: 704)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !907, line: 340, size: 256, elements: !1177)
!1177 = !{!1178, !1179}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1176, file: !907, line: 341, baseType: !944, size: 192, align: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1176, file: !907, line: 342, baseType: !347, size: 64, offset: 192)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1158, file: !907, line: 351, baseType: !307, size: 128, offset: 960)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1158, file: !907, line: 353, baseType: !1182, size: 64, offset: 1088)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!1183 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !907, line: 353, flags: DIFlagFwdDecl)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1158, file: !907, line: 356, baseType: !1185, size: 64, offset: 1152)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!1186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1187)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1188)
!1188 = !{!1189, !1193, !1194, !1198, !1202, !1242, !1246, !1250, !1254, !1255, !1256, !1260, !1264}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1187, file: !14, line: 558, baseType: !1190, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{null, !1157}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1187, file: !14, line: 559, baseType: !1190, size: 64, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1187, file: !14, line: 560, baseType: !1195, size: 64, offset: 128)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!330, !1157, !347}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1187, file: !14, line: 561, baseType: !1199, size: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!330, !1157}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1187, file: !14, line: 562, baseType: !1203, size: 64, offset: 256)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{!1206, !1207}
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !907, line: 682, baseType: !7)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1209)
!1209 = !{!1210, !1211, !1212, !1213, !1214, !1215, !1222, !1229, !1235, !1236, !1237, !1239, !1241}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1208, file: !14, line: 509, baseType: !1157, size: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1208, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1208, file: !14, line: 511, baseType: !137, size: 32, offset: 96)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1208, file: !14, line: 512, baseType: !347, size: 64, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1208, file: !14, line: 513, baseType: !347, size: 64, offset: 192)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1208, file: !14, line: 514, baseType: !1216, size: 64, offset: 256)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !897, line: 385, baseType: !1218)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !897, line: 385, size: 64, elements: !1219)
!1219 = !{!1220}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1218, file: !897, line: 385, baseType: !1221, size: 64)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1173, line: 15, baseType: !347)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1208, file: !14, line: 516, baseType: !1223, size: 64, offset: 320)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !897, line: 359, baseType: !1225)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !897, line: 359, size: 64, elements: !1226)
!1226 = !{!1227}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1225, file: !897, line: 359, baseType: !1228, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1173, line: 16, baseType: !347)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1208, file: !14, line: 519, baseType: !1230, size: 64, offset: 384)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1173, line: 21, baseType: !1231)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1173, line: 21, size: 64, elements: !1232)
!1232 = !{!1233}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1231, file: !1173, line: 21, baseType: !1234, size: 64)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1173, line: 14, baseType: !347)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1208, file: !14, line: 521, baseType: !905, size: 64, offset: 448)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1208, file: !14, line: 522, baseType: !905, size: 64, offset: 512)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1208, file: !14, line: 528, baseType: !1238, size: 64, offset: 576)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1208, file: !14, line: 532, baseType: !1240, size: 64, offset: 640)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1208, file: !14, line: 536, baseType: !1144, size: 64, offset: 704)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1187, file: !14, line: 563, baseType: !1243, size: 64, offset: 320)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!1206, !1207, !13}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1187, file: !14, line: 565, baseType: !1247, size: 64, offset: 384)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{null, !1207, !347, !347}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1187, file: !14, line: 567, baseType: !1251, size: 64, offset: 448)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{!347, !1157}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1187, file: !14, line: 571, baseType: !1203, size: 64, offset: 512)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1187, file: !14, line: 574, baseType: !1203, size: 64, offset: 576)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1187, file: !14, line: 579, baseType: !1257, size: 64, offset: 640)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!330, !1157, !347, !136, !330, !330}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1187, file: !14, line: 585, baseType: !1261, size: 64, offset: 704)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!402, !1157}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1187, file: !14, line: 615, baseType: !1265, size: 64, offset: 768)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!905, !1157, !347}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1158, file: !907, line: 359, baseType: !347, size: 64, offset: 1216)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1158, file: !907, line: 361, baseType: !543, size: 64, offset: 1280)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1158, file: !907, line: 362, baseType: !136, size: 64, offset: 1344)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1158, file: !907, line: 365, baseType: !297, size: 64, offset: 1408)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1158, file: !907, line: 373, baseType: !1273, offset: 1472)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !907, line: 296, elements: !443)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1154, file: !907, line: 391, baseType: !940, size: 64, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1154, file: !907, line: 392, baseType: !608, size: 64, offset: 128)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1154, file: !907, line: 394, baseType: !1277, size: 64, offset: 192)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!347, !543, !347, !347, !347, !347}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1154, file: !907, line: 398, baseType: !347, size: 64, offset: 256)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1154, file: !907, line: 399, baseType: !347, size: 64, offset: 320)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1154, file: !907, line: 405, baseType: !347, size: 64, offset: 384)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1154, file: !907, line: 406, baseType: !347, size: 64, offset: 448)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1154, file: !907, line: 407, baseType: !1285, size: 64, offset: 512)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !897, line: 286, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !897, line: 286, size: 64, elements: !1288)
!1288 = !{!1289}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1287, file: !897, line: 286, baseType: !1290, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1173, line: 18, baseType: !347)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1154, file: !907, line: 416, baseType: !931, size: 32, offset: 576)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1154, file: !907, line: 428, baseType: !931, size: 32, offset: 608)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1154, file: !907, line: 437, baseType: !931, size: 32, offset: 640)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1154, file: !907, line: 447, baseType: !931, size: 32, offset: 672)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1154, file: !907, line: 450, baseType: !297, size: 64, offset: 704)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1154, file: !907, line: 452, baseType: !330, size: 32, offset: 768)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1154, file: !907, line: 454, baseType: !429, offset: 800)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1154, file: !907, line: 457, baseType: !951, size: 256, offset: 832)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1154, file: !907, line: 459, baseType: !307, size: 128, offset: 1088)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1154, file: !907, line: 466, baseType: !347, size: 64, offset: 1216)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1154, file: !907, line: 467, baseType: !347, size: 64, offset: 1280)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1154, file: !907, line: 469, baseType: !347, size: 64, offset: 1344)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1154, file: !907, line: 470, baseType: !347, size: 64, offset: 1408)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1154, file: !907, line: 471, baseType: !299, size: 64, offset: 1472)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1154, file: !907, line: 472, baseType: !347, size: 64, offset: 1536)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1154, file: !907, line: 473, baseType: !347, size: 64, offset: 1600)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1154, file: !907, line: 474, baseType: !347, size: 64, offset: 1664)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1154, file: !907, line: 475, baseType: !347, size: 64, offset: 1728)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1154, file: !907, line: 477, baseType: !429, offset: 1792)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1154, file: !907, line: 478, baseType: !347, size: 64, offset: 1792)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1154, file: !907, line: 478, baseType: !347, size: 64, offset: 1856)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1154, file: !907, line: 478, baseType: !347, size: 64, offset: 1920)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1154, file: !907, line: 478, baseType: !347, size: 64, offset: 1984)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1154, file: !907, line: 479, baseType: !347, size: 64, offset: 2048)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1154, file: !907, line: 479, baseType: !347, size: 64, offset: 2112)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1154, file: !907, line: 479, baseType: !347, size: 64, offset: 2176)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1154, file: !907, line: 480, baseType: !347, size: 64, offset: 2240)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1154, file: !907, line: 480, baseType: !347, size: 64, offset: 2304)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1154, file: !907, line: 480, baseType: !347, size: 64, offset: 2368)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1154, file: !907, line: 480, baseType: !347, size: 64, offset: 2432)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1154, file: !907, line: 482, baseType: !1322, size: 2816, offset: 2496)
!1322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 2816, elements: !1323)
!1323 = !{!1324}
!1324 = !DISubrange(count: 44)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1154, file: !907, line: 488, baseType: !1326, size: 256, offset: 5312)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1327, line: 60, size: 256, elements: !1328)
!1327 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1328 = !{!1329}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1326, file: !1327, line: 61, baseType: !1330, size: 256)
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 256, elements: !248)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1154, file: !907, line: 490, baseType: !1332, size: 64, offset: 5568)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !907, line: 490, flags: DIFlagFwdDecl)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1154, file: !907, line: 493, baseType: !1335, size: 896, offset: 5632)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1336, line: 53, baseType: !1337)
!1336 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1336, line: 13, size: 896, elements: !1338)
!1338 = !{!1339, !1340, !1341, !1342, !1345, !1346, !1353, !1354, !1374, !1375, !1376}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1337, file: !1336, line: 18, baseType: !608, size: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1337, file: !1336, line: 28, baseType: !299, size: 64, offset: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1337, file: !1336, line: 31, baseType: !951, size: 256, offset: 128)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1337, file: !1336, line: 32, baseType: !1343, size: 64, offset: 384)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1336, line: 32, flags: DIFlagFwdDecl)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1337, file: !1336, line: 37, baseType: !362, size: 16, offset: 448)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1337, file: !1336, line: 40, baseType: !1347, size: 192, offset: 512)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1348, line: 53, size: 192, elements: !1349)
!1348 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1349 = !{!1350, !1351, !1352}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1347, file: !1348, line: 54, baseType: !297, size: 64)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1347, file: !1348, line: 55, baseType: !429, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1347, file: !1348, line: 59, baseType: !307, size: 128, offset: 64)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1337, file: !1336, line: 41, baseType: !136, size: 64, offset: 704)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1337, file: !1336, line: 42, baseType: !1355, size: 64, offset: 768)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1357)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1358, line: 13, size: 896, elements: !1359)
!1358 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1359 = !{!1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1357, file: !1358, line: 14, baseType: !136, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1357, file: !1358, line: 15, baseType: !347, size: 64, offset: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1357, file: !1358, line: 17, baseType: !347, size: 64, offset: 128)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1357, file: !1358, line: 17, baseType: !347, size: 64, offset: 192)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1357, file: !1358, line: 19, baseType: !502, size: 64, offset: 256)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1357, file: !1358, line: 21, baseType: !502, size: 64, offset: 320)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1357, file: !1358, line: 22, baseType: !502, size: 64, offset: 384)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1357, file: !1358, line: 23, baseType: !502, size: 64, offset: 448)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1357, file: !1358, line: 24, baseType: !502, size: 64, offset: 512)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1357, file: !1358, line: 25, baseType: !502, size: 64, offset: 576)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1357, file: !1358, line: 26, baseType: !502, size: 64, offset: 640)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1357, file: !1358, line: 27, baseType: !502, size: 64, offset: 704)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1357, file: !1358, line: 28, baseType: !502, size: 64, offset: 768)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1357, file: !1358, line: 29, baseType: !502, size: 64, offset: 832)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1337, file: !1336, line: 44, baseType: !931, size: 32, offset: 832)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1337, file: !1336, line: 50, baseType: !1036, size: 16, offset: 864)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1337, file: !1336, line: 51, baseType: !1377, size: 16, offset: 880)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !145, line: 18, baseType: !1378)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !147, line: 23, baseType: !1379)
!1379 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1154, file: !907, line: 495, baseType: !347, size: 64, offset: 6528)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1154, file: !907, line: 497, baseType: !1382, size: 64, offset: 6592)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !907, line: 381, size: 384, elements: !1384)
!1384 = !{!1385, !1386, !2472}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1383, file: !907, line: 382, baseType: !931, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1383, file: !907, line: 383, baseType: !1387, size: 128, offset: 64)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !907, line: 376, size: 128, elements: !1388)
!1388 = !{!1389, !2470}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1387, file: !907, line: 377, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1392, line: 640, size: 48640, elements: !1393)
!1392 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1393 = !{!1394, !1400, !1402, !1403, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1420, !1438, !1449, !1531, !1532, !1533, !1544, !1545, !1547, !1548, !1549, !1550, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1629, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1667, !1669, !1670, !1671, !1683, !1684, !1685, !1686, !1687, !1688, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1712, !1717, !1899, !1900, !1901, !1902, !1906, !1909, !1912, !1915, !1918, !1922, !2023, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2069, !2070, !2071, !2072, !2073, !2078, !2079, !2080, !2083, !2084, !2087, !2090, !2093, !2096, !2128, !2131, !2132, !2211, !2212, !2215, !2216, !2219, !2220, !2221, !2225, !2226, !2227, !2240, !2241, !2242, !2252, !2257, !2260, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1391, file: !1392, line: 646, baseType: !1395, size: 128)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1396, line: 56, size: 128, elements: !1397)
!1396 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1397 = !{!1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1395, file: !1396, line: 57, baseType: !347, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1395, file: !1396, line: 58, baseType: !144, size: 32, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1391, file: !1392, line: 649, baseType: !1401, size: 64, offset: 128)
!1401 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !502)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1391, file: !1392, line: 657, baseType: !136, size: 64, offset: 192)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1391, file: !1392, line: 658, baseType: !1404, size: 32, offset: 256)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1405, line: 113, baseType: !1406)
!1405 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1405, line: 111, size: 32, elements: !1407)
!1407 = !{!1408}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1406, file: !1405, line: 112, baseType: !931, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1391, file: !1392, line: 660, baseType: !7, size: 32, offset: 288)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1391, file: !1392, line: 661, baseType: !7, size: 32, offset: 320)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1391, file: !1392, line: 684, baseType: !330, size: 32, offset: 352)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1391, file: !1392, line: 686, baseType: !330, size: 32, offset: 384)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1391, file: !1392, line: 687, baseType: !330, size: 32, offset: 416)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1391, file: !1392, line: 688, baseType: !330, size: 32, offset: 448)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1391, file: !1392, line: 689, baseType: !7, size: 32, offset: 480)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1391, file: !1392, line: 691, baseType: !1417, size: 64, offset: 512)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1419)
!1419 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1392, line: 691, flags: DIFlagFwdDecl)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1391, file: !1392, line: 692, baseType: !1421, size: 832, offset: 576)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1392, line: 451, size: 832, elements: !1422)
!1422 = !{!1423, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1421, file: !1392, line: 453, baseType: !1424, size: 128)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1392, line: 325, size: 128, elements: !1425)
!1425 = !{!1426, !1427}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1424, file: !1392, line: 326, baseType: !347, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1424, file: !1392, line: 327, baseType: !144, size: 32, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1421, file: !1392, line: 454, baseType: !944, size: 192, align: 64, offset: 128)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1421, file: !1392, line: 455, baseType: !307, size: 128, offset: 320)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1421, file: !1392, line: 456, baseType: !7, size: 32, offset: 448)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1421, file: !1392, line: 458, baseType: !608, size: 64, offset: 512)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1421, file: !1392, line: 459, baseType: !608, size: 64, offset: 576)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1421, file: !1392, line: 460, baseType: !608, size: 64, offset: 640)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1421, file: !1392, line: 461, baseType: !608, size: 64, offset: 704)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1421, file: !1392, line: 463, baseType: !608, size: 64, offset: 768)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1421, file: !1392, line: 465, baseType: !1437, offset: 832)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1392, line: 415, elements: !443)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1391, file: !1392, line: 693, baseType: !1439, size: 384, offset: 1408)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1392, line: 489, size: 384, elements: !1440)
!1440 = !{!1441, !1442, !1443, !1444, !1445, !1446, !1447}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1439, file: !1392, line: 490, baseType: !307, size: 128)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1439, file: !1392, line: 491, baseType: !347, size: 64, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1439, file: !1392, line: 492, baseType: !347, size: 64, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1439, file: !1392, line: 493, baseType: !7, size: 32, offset: 256)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1439, file: !1392, line: 494, baseType: !362, size: 16, offset: 288)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1439, file: !1392, line: 495, baseType: !362, size: 16, offset: 304)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1439, file: !1392, line: 497, baseType: !1448, size: 64, offset: 320)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1391, file: !1392, line: 697, baseType: !1450, size: 1792, offset: 1792)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1392, line: 507, size: 1792, elements: !1451)
!1451 = !{!1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1528, !1529}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1450, file: !1392, line: 508, baseType: !944, size: 192, align: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1450, file: !1392, line: 515, baseType: !608, size: 64, offset: 192)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1450, file: !1392, line: 516, baseType: !608, size: 64, offset: 256)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1450, file: !1392, line: 517, baseType: !608, size: 64, offset: 320)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1450, file: !1392, line: 518, baseType: !608, size: 64, offset: 384)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1450, file: !1392, line: 519, baseType: !608, size: 64, offset: 448)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1450, file: !1392, line: 526, baseType: !303, size: 64, offset: 512)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1450, file: !1392, line: 527, baseType: !608, size: 64, offset: 576)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1450, file: !1392, line: 528, baseType: !7, size: 32, offset: 640)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1450, file: !1392, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1450, file: !1392, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1450, file: !1392, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1450, file: !1392, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1450, file: !1392, line: 563, baseType: !1466, size: 512, offset: 704)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1467)
!1467 = !{!1468, !1476, !1477, !1482, !1523, !1525, !1526, !1527}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1466, file: !20, line: 119, baseType: !1469, size: 256)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1470, line: 9, size: 256, elements: !1471)
!1470 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1471 = !{!1472, !1473}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1469, file: !1470, line: 10, baseType: !944, size: 192, align: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1469, file: !1470, line: 11, baseType: !1474, size: 64, offset: 192)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1475, line: 29, baseType: !303)
!1475 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1466, file: !20, line: 120, baseType: !1474, size: 64, offset: 256)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1466, file: !20, line: 121, baseType: !1478, size: 64, offset: 320)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!19, !1481}
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1466, file: !20, line: 122, baseType: !1483, size: 64, offset: 384)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1485)
!1485 = !{!1486, !1504, !1505, !1508, !1513, !1514, !1518, !1522}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1484, file: !20, line: 160, baseType: !1487, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1489)
!1489 = !{!1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1488, file: !20, line: 215, baseType: !957)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1488, file: !20, line: 216, baseType: !7, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1488, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1488, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1488, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1488, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1488, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1488, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1488, file: !20, line: 233, baseType: !1474, size: 64, offset: 128)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1488, file: !20, line: 234, baseType: !1481, size: 64, offset: 192)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1488, file: !20, line: 235, baseType: !1474, size: 64, offset: 256)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1488, file: !20, line: 236, baseType: !1481, size: 64, offset: 320)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1488, file: !20, line: 237, baseType: !1503, size: 4096, offset: 512)
!1503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1484, size: 4096, elements: !255)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1484, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1484, file: !20, line: 162, baseType: !1506, size: 32, offset: 96)
!1506 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !138, line: 27, baseType: !1507)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !500, line: 96, baseType: !330)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1484, file: !20, line: 163, baseType: !1509, size: 32, offset: 128)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !579, line: 276, baseType: !1510)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !579, line: 276, size: 32, elements: !1511)
!1511 = !{!1512}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1510, file: !579, line: 276, baseType: !583, size: 32)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1484, file: !20, line: 164, baseType: !1481, size: 64, offset: 192)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1484, file: !20, line: 165, baseType: !1515, size: 128, offset: 256)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1470, line: 14, size: 128, elements: !1516)
!1516 = !{!1517}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1515, file: !1470, line: 15, baseType: !936, size: 128)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1484, file: !20, line: 166, baseType: !1519, size: 64, offset: 384)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{!1474}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1484, file: !20, line: 167, baseType: !1474, size: 64, offset: 448)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1466, file: !20, line: 123, baseType: !1524, size: 8, offset: 448)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !145, line: 17, baseType: !356)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1466, file: !20, line: 124, baseType: !1524, size: 8, offset: 456)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1466, file: !20, line: 125, baseType: !1524, size: 8, offset: 464)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1466, file: !20, line: 126, baseType: !1524, size: 8, offset: 472)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1450, file: !1392, line: 572, baseType: !1466, size: 512, offset: 1216)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1450, file: !1392, line: 580, baseType: !1530, size: 64, offset: 1728)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1391, file: !1392, line: 721, baseType: !7, size: 32, offset: 3584)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1391, file: !1392, line: 722, baseType: !330, size: 32, offset: 3616)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1391, file: !1392, line: 723, baseType: !1534, size: 64, offset: 3648)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1536)
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1537, line: 17, baseType: !1538)
!1537 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1537, line: 17, size: 64, elements: !1539)
!1539 = !{!1540}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1538, file: !1537, line: 17, baseType: !1541, size: 64)
!1541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 64, elements: !1542)
!1542 = !{!1543}
!1543 = !DISubrange(count: 1)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1391, file: !1392, line: 724, baseType: !1536, size: 64, offset: 3712)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1391, file: !1392, line: 749, baseType: !1546, offset: 3776)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1392, line: 290, elements: !443)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1391, file: !1392, line: 751, baseType: !307, size: 128, offset: 3776)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1391, file: !1392, line: 757, baseType: !1150, size: 64, offset: 3904)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1391, file: !1392, line: 758, baseType: !1150, size: 64, offset: 3968)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1391, file: !1392, line: 761, baseType: !1551, size: 320, offset: 4032)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1327, line: 34, size: 320, elements: !1552)
!1552 = !{!1553, !1554}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1551, file: !1327, line: 35, baseType: !608, size: 64)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1551, file: !1327, line: 36, baseType: !1555, size: 256, offset: 64)
!1555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1157, size: 256, elements: !248)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1391, file: !1392, line: 766, baseType: !330, size: 32, offset: 4352)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1391, file: !1392, line: 767, baseType: !330, size: 32, offset: 4384)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1391, file: !1392, line: 768, baseType: !330, size: 32, offset: 4416)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1391, file: !1392, line: 770, baseType: !330, size: 32, offset: 4448)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1391, file: !1392, line: 772, baseType: !347, size: 64, offset: 4480)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1391, file: !1392, line: 775, baseType: !7, size: 32, offset: 4544)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1391, file: !1392, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1391, file: !1392, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1391, file: !1392, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1391, file: !1392, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1391, file: !1392, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1391, file: !1392, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1391, file: !1392, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1391, file: !1392, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1391, file: !1392, line: 831, baseType: !347, size: 64, offset: 4672)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1391, file: !1392, line: 833, baseType: !1572, size: 384, offset: 4736)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1573)
!1573 = !{!1574, !1579}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1572, file: !25, line: 26, baseType: !1575, size: 64)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!502, !1578}
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, scope: !1572, file: !25, line: 27, baseType: !1580, size: 320, offset: 64)
!1580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1572, file: !25, line: 27, size: 320, elements: !1581)
!1581 = !{!1582, !1592, !1619}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1580, file: !25, line: 36, baseType: !1583, size: 320)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1580, file: !25, line: 29, size: 320, elements: !1584)
!1584 = !{!1585, !1587, !1588, !1589, !1590, !1591}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1583, file: !25, line: 30, baseType: !1586, size: 64)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1583, file: !25, line: 31, baseType: !144, size: 32, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1583, file: !25, line: 32, baseType: !144, size: 32, offset: 96)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1583, file: !25, line: 33, baseType: !144, size: 32, offset: 128)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1583, file: !25, line: 34, baseType: !608, size: 64, offset: 192)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1583, file: !25, line: 35, baseType: !1586, size: 64, offset: 256)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1580, file: !25, line: 46, baseType: !1593, size: 192)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1580, file: !25, line: 38, size: 192, elements: !1594)
!1594 = !{!1595, !1596, !1597, !1618}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1593, file: !25, line: 39, baseType: !1506, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1593, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, scope: !1593, file: !25, line: 41, baseType: !1598, size: 64, offset: 64)
!1598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1593, file: !25, line: 41, size: 64, elements: !1599)
!1599 = !{!1600, !1608}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1598, file: !25, line: 42, baseType: !1601, size: 64)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1603, line: 7, size: 128, elements: !1604)
!1603 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1604 = !{!1605, !1607}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1602, file: !1603, line: 8, baseType: !1606, size: 64)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !500, line: 93, baseType: !305)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1602, file: !1603, line: 9, baseType: !305, size: 64, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1598, file: !25, line: 43, baseType: !1609, size: 64)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1611, line: 7, size: 64, elements: !1612)
!1611 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1612 = !{!1613, !1617}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1610, file: !1611, line: 8, baseType: !1614, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1611, line: 5, baseType: !1615)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !145, line: 20, baseType: !1616)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !147, line: 26, baseType: !330)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1610, file: !1611, line: 9, baseType: !1615, size: 32, offset: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1593, file: !25, line: 45, baseType: !608, size: 64, offset: 128)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1580, file: !25, line: 54, baseType: !1620, size: 256)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1580, file: !25, line: 48, size: 256, elements: !1621)
!1621 = !{!1622, !1625, !1626, !1627, !1628}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1620, file: !25, line: 49, baseType: !1623, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1620, file: !25, line: 50, baseType: !330, size: 32, offset: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1620, file: !25, line: 51, baseType: !330, size: 32, offset: 96)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1620, file: !25, line: 52, baseType: !347, size: 64, offset: 128)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1620, file: !25, line: 53, baseType: !347, size: 64, offset: 192)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1391, file: !1392, line: 835, baseType: !1630, size: 32, offset: 5120)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !138, line: 22, baseType: !1631)
!1631 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !500, line: 28, baseType: !330)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1391, file: !1392, line: 836, baseType: !1630, size: 32, offset: 5152)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1391, file: !1392, line: 840, baseType: !347, size: 64, offset: 5184)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1391, file: !1392, line: 849, baseType: !1390, size: 64, offset: 5248)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1391, file: !1392, line: 852, baseType: !1390, size: 64, offset: 5312)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1391, file: !1392, line: 857, baseType: !307, size: 128, offset: 5376)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1391, file: !1392, line: 858, baseType: !307, size: 128, offset: 5504)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1391, file: !1392, line: 859, baseType: !1390, size: 64, offset: 5632)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1391, file: !1392, line: 867, baseType: !307, size: 128, offset: 5696)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1391, file: !1392, line: 868, baseType: !307, size: 128, offset: 5824)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1391, file: !1392, line: 871, baseType: !1642, size: 64, offset: 5952)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1644)
!1644 = !{!1645, !1646, !1647, !1648, !1650, !1651, !1658, !1659}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1643, file: !53, line: 61, baseType: !1404, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1643, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1643, file: !53, line: 63, baseType: !429, offset: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1643, file: !53, line: 65, baseType: !1649, size: 256, offset: 64)
!1649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !819, size: 256, elements: !248)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1643, file: !53, line: 66, baseType: !819, size: 64, offset: 320)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1643, file: !53, line: 68, baseType: !1652, size: 128, offset: 384)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1653, line: 40, baseType: !1654)
!1653 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1653, line: 36, size: 128, elements: !1655)
!1655 = !{!1656, !1657}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1654, file: !1653, line: 37, baseType: !429)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1654, file: !1653, line: 38, baseType: !307, size: 128)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1643, file: !53, line: 69, baseType: !556, size: 128, align: 64, offset: 512)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1643, file: !53, line: 70, baseType: !1660, size: 128, offset: 640)
!1660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1661, size: 128, elements: !1542)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1662)
!1662 = !{!1663, !1664}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1661, file: !53, line: 55, baseType: !330, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1661, file: !53, line: 56, baseType: !1665, size: 64, offset: 64)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1391, file: !1392, line: 872, baseType: !1668, size: 512, offset: 6016)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !823, size: 512, elements: !248)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1391, file: !1392, line: 873, baseType: !307, size: 128, offset: 6528)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1391, file: !1392, line: 874, baseType: !307, size: 128, offset: 6656)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1391, file: !1392, line: 876, baseType: !1672, size: 64, offset: 6784)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1674, line: 26, size: 192, elements: !1675)
!1674 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1675 = !{!1676, !1677}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1673, file: !1674, line: 27, baseType: !7, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1673, file: !1674, line: 28, baseType: !1678, size: 128, offset: 64)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1679, line: 43, size: 128, elements: !1680)
!1679 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1680 = !{!1681, !1682}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1678, file: !1679, line: 44, baseType: !957)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1678, file: !1679, line: 45, baseType: !307, size: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1391, file: !1392, line: 879, baseType: !889, size: 64, offset: 6848)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1391, file: !1392, line: 882, baseType: !889, size: 64, offset: 6912)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1391, file: !1392, line: 884, baseType: !608, size: 64, offset: 6976)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1391, file: !1392, line: 885, baseType: !608, size: 64, offset: 7040)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1391, file: !1392, line: 890, baseType: !608, size: 64, offset: 7104)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1391, file: !1392, line: 891, baseType: !1689, size: 128, offset: 7168)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1392, line: 242, size: 128, elements: !1690)
!1690 = !{!1691, !1692, !1693}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1689, file: !1392, line: 244, baseType: !608, size: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1689, file: !1392, line: 245, baseType: !608, size: 64, offset: 64)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1689, file: !1392, line: 246, baseType: !957, offset: 128)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1391, file: !1392, line: 900, baseType: !347, size: 64, offset: 7296)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1391, file: !1392, line: 901, baseType: !347, size: 64, offset: 7360)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1391, file: !1392, line: 904, baseType: !608, size: 64, offset: 7424)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1391, file: !1392, line: 907, baseType: !608, size: 64, offset: 7488)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1391, file: !1392, line: 910, baseType: !347, size: 64, offset: 7552)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1391, file: !1392, line: 911, baseType: !347, size: 64, offset: 7616)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1391, file: !1392, line: 914, baseType: !1701, size: 640, offset: 7680)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1702, line: 123, size: 640, elements: !1703)
!1702 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1703 = !{!1704, !1710, !1711}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1701, file: !1702, line: 124, baseType: !1705, size: 576)
!1705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1706, size: 576, elements: !259)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1702, line: 108, size: 192, elements: !1707)
!1707 = !{!1708, !1709}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1706, file: !1702, line: 109, baseType: !608, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1706, file: !1702, line: 110, baseType: !1515, size: 128, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1701, file: !1702, line: 125, baseType: !7, size: 32, offset: 576)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1701, file: !1702, line: 126, baseType: !7, size: 32, offset: 608)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1391, file: !1392, line: 917, baseType: !1713, size: 192, offset: 8320)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1702, line: 134, size: 192, elements: !1714)
!1714 = !{!1715, !1716}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1713, file: !1702, line: 135, baseType: !556, size: 128, align: 64)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1713, file: !1702, line: 136, baseType: !7, size: 32, offset: 128)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1391, file: !1392, line: 923, baseType: !1718, size: 64, offset: 8512)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1720)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1721, line: 111, size: 1280, elements: !1722)
!1721 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1722 = !{!1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1740, !1741, !1742, !1743, !1744, !1745, !1852, !1853, !1854, !1855, !1881, !1884, !1894}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1720, file: !1721, line: 112, baseType: !931, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1720, file: !1721, line: 120, baseType: !621, size: 32, offset: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1720, file: !1721, line: 121, baseType: !629, size: 32, offset: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1720, file: !1721, line: 122, baseType: !621, size: 32, offset: 96)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1720, file: !1721, line: 123, baseType: !629, size: 32, offset: 128)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1720, file: !1721, line: 124, baseType: !621, size: 32, offset: 160)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1720, file: !1721, line: 125, baseType: !629, size: 32, offset: 192)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1720, file: !1721, line: 126, baseType: !621, size: 32, offset: 224)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1720, file: !1721, line: 127, baseType: !629, size: 32, offset: 256)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1720, file: !1721, line: 128, baseType: !7, size: 32, offset: 288)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1720, file: !1721, line: 129, baseType: !1734, size: 64, offset: 320)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1735, line: 26, baseType: !1736)
!1735 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1735, line: 24, size: 64, elements: !1737)
!1737 = !{!1738}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1736, file: !1735, line: 25, baseType: !1739, size: 64)
!1739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 64, elements: !197)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1720, file: !1721, line: 130, baseType: !1734, size: 64, offset: 384)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1720, file: !1721, line: 131, baseType: !1734, size: 64, offset: 448)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1720, file: !1721, line: 132, baseType: !1734, size: 64, offset: 512)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1720, file: !1721, line: 133, baseType: !1734, size: 64, offset: 576)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1720, file: !1721, line: 135, baseType: !357, size: 8, offset: 640)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1720, file: !1721, line: 137, baseType: !1746, size: 64, offset: 704)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1748, line: 189, size: 1664, elements: !1749)
!1748 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1749 = !{!1750, !1751, !1754, !1759, !1760, !1763, !1764, !1769, !1770, !1771, !1772, !1774, !1775, !1776, !1777, !1778, !1816, !1837}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1747, file: !1748, line: 190, baseType: !1404, size: 32)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1747, file: !1748, line: 191, baseType: !1752, size: 32, offset: 32)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1748, line: 28, baseType: !1753)
!1753 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !138, line: 98, baseType: !1615)
!1754 = !DIDerivedType(tag: DW_TAG_member, scope: !1747, file: !1748, line: 192, baseType: !1755, size: 192, offset: 64)
!1755 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1747, file: !1748, line: 192, size: 192, elements: !1756)
!1756 = !{!1757, !1758}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1755, file: !1748, line: 193, baseType: !307, size: 128)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1755, file: !1748, line: 194, baseType: !944, size: 192, align: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1747, file: !1748, line: 199, baseType: !951, size: 256, offset: 256)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1747, file: !1748, line: 200, baseType: !1761, size: 64, offset: 512)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1748, line: 200, flags: DIFlagFwdDecl)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1747, file: !1748, line: 201, baseType: !136, size: 64, offset: 576)
!1764 = !DIDerivedType(tag: DW_TAG_member, scope: !1747, file: !1748, line: 202, baseType: !1765, size: 64, offset: 640)
!1765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1747, file: !1748, line: 202, size: 64, elements: !1766)
!1766 = !{!1767, !1768}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1765, file: !1748, line: 203, baseType: !724, size: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1765, file: !1748, line: 204, baseType: !724, size: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1747, file: !1748, line: 206, baseType: !724, size: 64, offset: 704)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1747, file: !1748, line: 207, baseType: !621, size: 32, offset: 768)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1747, file: !1748, line: 208, baseType: !629, size: 32, offset: 800)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1747, file: !1748, line: 209, baseType: !1773, size: 32, offset: 832)
!1773 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1748, line: 31, baseType: !743)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1747, file: !1748, line: 210, baseType: !362, size: 16, offset: 864)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1747, file: !1748, line: 211, baseType: !362, size: 16, offset: 880)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1747, file: !1748, line: 215, baseType: !1379, size: 16, offset: 896)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1747, file: !1748, line: 222, baseType: !347, size: 64, offset: 960)
!1778 = !DIDerivedType(tag: DW_TAG_member, scope: !1747, file: !1748, line: 239, baseType: !1779, size: 320, offset: 1024)
!1779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1747, file: !1748, line: 239, size: 320, elements: !1780)
!1780 = !{!1781, !1808}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1779, file: !1748, line: 240, baseType: !1782, size: 320)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1748, line: 108, size: 320, elements: !1783)
!1783 = !{!1784, !1785, !1797, !1800, !1807}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1782, file: !1748, line: 110, baseType: !347, size: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, scope: !1782, file: !1748, line: 111, baseType: !1786, size: 64, offset: 64)
!1786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1782, file: !1748, line: 111, size: 64, elements: !1787)
!1787 = !{!1788, !1796}
!1788 = !DIDerivedType(tag: DW_TAG_member, scope: !1786, file: !1748, line: 112, baseType: !1789, size: 64)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1786, file: !1748, line: 112, size: 64, elements: !1790)
!1790 = !{!1791, !1792}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1789, file: !1748, line: 114, baseType: !1036, size: 16)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1789, file: !1748, line: 115, baseType: !1793, size: 48, offset: 16)
!1793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 48, elements: !1794)
!1794 = !{!1795}
!1795 = !DISubrange(count: 6)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1786, file: !1748, line: 121, baseType: !347, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1782, file: !1748, line: 123, baseType: !1798, size: 64, offset: 128)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1748, line: 96, flags: DIFlagFwdDecl)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1782, file: !1748, line: 124, baseType: !1801, size: 64, offset: 192)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1748, line: 102, size: 192, elements: !1803)
!1803 = !{!1804, !1805, !1806}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1802, file: !1748, line: 103, baseType: !556, size: 128, align: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1802, file: !1748, line: 104, baseType: !1404, size: 32, offset: 128)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1802, file: !1748, line: 105, baseType: !676, size: 8, offset: 160)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1782, file: !1748, line: 125, baseType: !402, size: 64, offset: 256)
!1808 = !DIDerivedType(tag: DW_TAG_member, scope: !1779, file: !1748, line: 241, baseType: !1809, size: 320)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1779, file: !1748, line: 241, size: 320, elements: !1810)
!1810 = !{!1811, !1812, !1813, !1814, !1815}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1809, file: !1748, line: 242, baseType: !347, size: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1809, file: !1748, line: 243, baseType: !347, size: 64, offset: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1809, file: !1748, line: 244, baseType: !1798, size: 64, offset: 128)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1809, file: !1748, line: 245, baseType: !1801, size: 64, offset: 192)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1809, file: !1748, line: 246, baseType: !373, size: 64, offset: 256)
!1816 = !DIDerivedType(tag: DW_TAG_member, scope: !1747, file: !1748, line: 254, baseType: !1817, size: 256, offset: 1344)
!1817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1747, file: !1748, line: 254, size: 256, elements: !1818)
!1818 = !{!1819, !1825}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1817, file: !1748, line: 255, baseType: !1820, size: 256)
!1820 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1748, line: 128, size: 256, elements: !1821)
!1821 = !{!1822, !1823}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1820, file: !1748, line: 129, baseType: !136, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1820, file: !1748, line: 130, baseType: !1824, size: 256)
!1824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 256, elements: !248)
!1825 = !DIDerivedType(tag: DW_TAG_member, scope: !1817, file: !1748, line: 256, baseType: !1826, size: 256)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1817, file: !1748, line: 256, size: 256, elements: !1827)
!1827 = !{!1828, !1829}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1826, file: !1748, line: 258, baseType: !307, size: 128)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1826, file: !1748, line: 259, baseType: !1830, size: 128, offset: 128)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1831, line: 22, size: 128, elements: !1832)
!1831 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1832 = !{!1833, !1836}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1830, file: !1831, line: 23, baseType: !1834, size: 64)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1831, line: 23, flags: DIFlagFwdDecl)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1830, file: !1831, line: 24, baseType: !347, size: 64, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1747, file: !1748, line: 274, baseType: !1838, size: 64, offset: 1600)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1748, line: 170, size: 192, elements: !1840)
!1840 = !{!1841, !1850, !1851}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1839, file: !1748, line: 171, baseType: !1842, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1748, line: 165, baseType: !1843)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{!330, !1746, !1846, !1848, !1746}
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1799)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1839, file: !1748, line: 172, baseType: !1746, size: 64, offset: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1839, file: !1748, line: 173, baseType: !1798, size: 64, offset: 128)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1720, file: !1721, line: 138, baseType: !1746, size: 64, offset: 768)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1720, file: !1721, line: 139, baseType: !1746, size: 64, offset: 832)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1720, file: !1721, line: 140, baseType: !1746, size: 64, offset: 896)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1720, file: !1721, line: 145, baseType: !1856, size: 64, offset: 960)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1858, line: 13, size: 896, elements: !1859)
!1858 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1859 = !{!1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1857, file: !1858, line: 14, baseType: !1404, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1857, file: !1858, line: 15, baseType: !931, size: 32, offset: 32)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1857, file: !1858, line: 16, baseType: !931, size: 32, offset: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1857, file: !1858, line: 21, baseType: !297, size: 64, offset: 128)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1857, file: !1858, line: 27, baseType: !347, size: 64, offset: 192)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1857, file: !1858, line: 28, baseType: !347, size: 64, offset: 256)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1857, file: !1858, line: 29, baseType: !297, size: 64, offset: 320)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1857, file: !1858, line: 32, baseType: !823, size: 128, offset: 384)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1857, file: !1858, line: 33, baseType: !621, size: 32, offset: 512)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1857, file: !1858, line: 37, baseType: !297, size: 64, offset: 576)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1857, file: !1858, line: 44, baseType: !1871, size: 256, offset: 640)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1872, line: 15, size: 256, elements: !1873)
!1872 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1873 = !{!1874, !1875, !1876, !1877, !1878, !1879, !1880}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1871, file: !1872, line: 16, baseType: !957)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1871, file: !1872, line: 18, baseType: !330, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1871, file: !1872, line: 19, baseType: !330, size: 32, offset: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1871, file: !1872, line: 20, baseType: !330, size: 32, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1871, file: !1872, line: 21, baseType: !330, size: 32, offset: 96)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1871, file: !1872, line: 22, baseType: !347, size: 64, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1871, file: !1872, line: 23, baseType: !347, size: 64, offset: 192)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1720, file: !1721, line: 146, baseType: !1882, size: 64, offset: 1024)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !622, line: 18, flags: DIFlagFwdDecl)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1720, file: !1721, line: 147, baseType: !1885, size: 64, offset: 1088)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1721, line: 25, size: 64, elements: !1887)
!1887 = !{!1888, !1889, !1890}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1886, file: !1721, line: 26, baseType: !931, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1886, file: !1721, line: 27, baseType: !330, size: 32, offset: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1886, file: !1721, line: 28, baseType: !1891, offset: 64)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !629, elements: !1892)
!1892 = !{!1893}
!1893 = !DISubrange(count: 0)
!1894 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1721, line: 149, baseType: !1895, size: 128, offset: 1152)
!1895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1720, file: !1721, line: 149, size: 128, elements: !1896)
!1896 = !{!1897, !1898}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1895, file: !1721, line: 150, baseType: !330, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1895, file: !1721, line: 151, baseType: !556, size: 128, align: 64)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1391, file: !1392, line: 926, baseType: !1718, size: 64, offset: 8576)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1391, file: !1392, line: 929, baseType: !1718, size: 64, offset: 8640)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1391, file: !1392, line: 933, baseType: !1746, size: 64, offset: 8704)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1391, file: !1392, line: 943, baseType: !1903, size: 128, offset: 8768)
!1903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 128, elements: !1904)
!1904 = !{!1905}
!1905 = !DISubrange(count: 16)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1391, file: !1392, line: 945, baseType: !1907, size: 64, offset: 8896)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1392, line: 49, flags: DIFlagFwdDecl)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1391, file: !1392, line: 956, baseType: !1910, size: 64, offset: 8960)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1392, line: 45, flags: DIFlagFwdDecl)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1391, file: !1392, line: 959, baseType: !1913, size: 64, offset: 9024)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1392, line: 959, flags: DIFlagFwdDecl)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1391, file: !1392, line: 962, baseType: !1916, size: 64, offset: 9088)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1392, line: 66, flags: DIFlagFwdDecl)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1391, file: !1392, line: 966, baseType: !1919, size: 64, offset: 9152)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1921, line: 35, flags: DIFlagFwdDecl)
!1921 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1391, file: !1392, line: 969, baseType: !1923, size: 64, offset: 9216)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1925, line: 82, size: 7296, elements: !1926)
!1925 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1926 = !{!1927, !1928, !1929, !1930, !1931, !1932, !1933, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1962, !1971, !1972, !1974, !1975, !1976, !1979, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2009, !2010, !2017, !2018, !2019, !2020, !2021, !2022}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1924, file: !1925, line: 83, baseType: !1404, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1924, file: !1925, line: 84, baseType: !931, size: 32, offset: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1924, file: !1925, line: 85, baseType: !330, size: 32, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1924, file: !1925, line: 86, baseType: !307, size: 128, offset: 128)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1924, file: !1925, line: 88, baseType: !1652, size: 128, offset: 256)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1924, file: !1925, line: 91, baseType: !1390, size: 64, offset: 384)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1924, file: !1925, line: 94, baseType: !1934, size: 192, offset: 448)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1935, line: 30, size: 192, elements: !1936)
!1935 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1936 = !{!1937, !1938}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1934, file: !1935, line: 31, baseType: !307, size: 128)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1934, file: !1935, line: 32, baseType: !1939, size: 64, offset: 128)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1940, line: 25, baseType: !1941)
!1940 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1940, line: 23, size: 64, elements: !1942)
!1942 = !{!1943}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1941, file: !1940, line: 24, baseType: !1541, size: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1924, file: !1925, line: 97, baseType: !819, size: 64, offset: 640)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1924, file: !1925, line: 100, baseType: !330, size: 32, offset: 704)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1924, file: !1925, line: 106, baseType: !330, size: 32, offset: 736)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1924, file: !1925, line: 107, baseType: !1390, size: 64, offset: 768)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1924, file: !1925, line: 110, baseType: !330, size: 32, offset: 832)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1924, file: !1925, line: 111, baseType: !7, size: 32, offset: 864)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1924, file: !1925, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1924, file: !1925, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1924, file: !1925, line: 128, baseType: !330, size: 32, offset: 928)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1924, file: !1925, line: 129, baseType: !307, size: 128, offset: 960)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1924, file: !1925, line: 132, baseType: !1466, size: 512, offset: 1088)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1924, file: !1925, line: 133, baseType: !1474, size: 64, offset: 1600)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1924, file: !1925, line: 140, baseType: !1957, size: 256, offset: 1664)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1958, size: 256, elements: !197)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1925, line: 38, size: 128, elements: !1959)
!1959 = !{!1960, !1961}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1958, file: !1925, line: 39, baseType: !608, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1958, file: !1925, line: 40, baseType: !608, size: 64, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1924, file: !1925, line: 146, baseType: !1963, size: 192, offset: 1920)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1925, line: 66, size: 192, elements: !1964)
!1964 = !{!1965}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1963, file: !1925, line: 67, baseType: !1966, size: 192)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1925, line: 47, size: 192, elements: !1967)
!1967 = !{!1968, !1969, !1970}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1966, file: !1925, line: 48, baseType: !299, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1966, file: !1925, line: 49, baseType: !299, size: 64, offset: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1966, file: !1925, line: 50, baseType: !299, size: 64, offset: 128)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1924, file: !1925, line: 150, baseType: !1701, size: 640, offset: 2112)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1924, file: !1925, line: 153, baseType: !1973, size: 256, offset: 2752)
!1973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1642, size: 256, elements: !248)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1924, file: !1925, line: 159, baseType: !1642, size: 64, offset: 3008)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1924, file: !1925, line: 162, baseType: !330, size: 32, offset: 3072)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1924, file: !1925, line: 164, baseType: !1977, size: 64, offset: 3136)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 64)
!1978 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1925, line: 164, flags: DIFlagFwdDecl)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1924, file: !1925, line: 175, baseType: !1980, size: 32, offset: 3200)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !579, line: 805, baseType: !1981)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !579, line: 798, size: 32, elements: !1982)
!1982 = !{!1983, !1984}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1981, file: !579, line: 803, baseType: !578, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1981, file: !579, line: 804, baseType: !429, offset: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1924, file: !1925, line: 176, baseType: !608, size: 64, offset: 3264)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1924, file: !1925, line: 176, baseType: !608, size: 64, offset: 3328)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1924, file: !1925, line: 176, baseType: !608, size: 64, offset: 3392)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1924, file: !1925, line: 176, baseType: !608, size: 64, offset: 3456)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1924, file: !1925, line: 177, baseType: !608, size: 64, offset: 3520)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1924, file: !1925, line: 178, baseType: !608, size: 64, offset: 3584)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1924, file: !1925, line: 179, baseType: !1689, size: 128, offset: 3648)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1924, file: !1925, line: 180, baseType: !347, size: 64, offset: 3776)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1924, file: !1925, line: 180, baseType: !347, size: 64, offset: 3840)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1924, file: !1925, line: 180, baseType: !347, size: 64, offset: 3904)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1924, file: !1925, line: 180, baseType: !347, size: 64, offset: 3968)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1924, file: !1925, line: 181, baseType: !347, size: 64, offset: 4032)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1924, file: !1925, line: 181, baseType: !347, size: 64, offset: 4096)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1924, file: !1925, line: 181, baseType: !347, size: 64, offset: 4160)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1924, file: !1925, line: 181, baseType: !347, size: 64, offset: 4224)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1924, file: !1925, line: 182, baseType: !347, size: 64, offset: 4288)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1924, file: !1925, line: 182, baseType: !347, size: 64, offset: 4352)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1924, file: !1925, line: 182, baseType: !347, size: 64, offset: 4416)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1924, file: !1925, line: 182, baseType: !347, size: 64, offset: 4480)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1924, file: !1925, line: 183, baseType: !347, size: 64, offset: 4544)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1924, file: !1925, line: 183, baseType: !347, size: 64, offset: 4608)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1924, file: !1925, line: 184, baseType: !2007, offset: 4672)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2008, line: 12, elements: !443)
!2008 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1924, file: !1925, line: 192, baseType: !610, size: 64, offset: 4672)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1924, file: !1925, line: 203, baseType: !2011, size: 2048, offset: 4736)
!2011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2012, size: 2048, elements: !1904)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2013, line: 43, size: 128, elements: !2014)
!2013 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2014 = !{!2015, !2016}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2012, file: !2013, line: 44, baseType: !515, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2012, file: !2013, line: 45, baseType: !515, size: 64, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1924, file: !1925, line: 220, baseType: !676, size: 8, offset: 6784)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1924, file: !1925, line: 221, baseType: !1379, size: 16, offset: 6800)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1924, file: !1925, line: 222, baseType: !1379, size: 16, offset: 6816)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1924, file: !1925, line: 224, baseType: !1150, size: 64, offset: 6848)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1924, file: !1925, line: 227, baseType: !1347, size: 192, offset: 6912)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1924, file: !1925, line: 233, baseType: !1347, size: 192, offset: 7104)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1391, file: !1392, line: 970, baseType: !2024, size: 64, offset: 9280)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1925, line: 20, size: 16576, elements: !2026)
!2026 = !{!2027, !2028, !2029, !2030}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2025, file: !1925, line: 21, baseType: !429)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2025, file: !1925, line: 22, baseType: !1404, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2025, file: !1925, line: 23, baseType: !1652, size: 128, offset: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2025, file: !1925, line: 24, baseType: !2031, size: 16384, offset: 192)
!2031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2032, size: 16384, elements: !472)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1935, line: 49, size: 256, elements: !2033)
!2033 = !{!2034}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2032, file: !1935, line: 50, baseType: !2035, size: 256)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1935, line: 35, size: 256, elements: !2036)
!2036 = !{!2037, !2044, !2045, !2051}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2035, file: !1935, line: 37, baseType: !2038, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2039, line: 19, baseType: !2040)
!2039 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2039, line: 18, baseType: !2042)
!2042 = !DISubroutineType(types: !2043)
!2043 = !{null, !330}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2035, file: !1935, line: 38, baseType: !347, size: 64, offset: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2035, file: !1935, line: 44, baseType: !2046, size: 64, offset: 128)
!2046 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2039, line: 22, baseType: !2047)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2039, line: 21, baseType: !2049)
!2049 = !DISubroutineType(types: !2050)
!2050 = !{null}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2035, file: !1935, line: 46, baseType: !1939, size: 64, offset: 192)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1391, file: !1392, line: 971, baseType: !1939, size: 64, offset: 9344)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1391, file: !1392, line: 972, baseType: !1939, size: 64, offset: 9408)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1391, file: !1392, line: 974, baseType: !1939, size: 64, offset: 9472)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1391, file: !1392, line: 975, baseType: !1934, size: 192, offset: 9536)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1391, file: !1392, line: 976, baseType: !347, size: 64, offset: 9728)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1391, file: !1392, line: 977, baseType: !513, size: 64, offset: 9792)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1391, file: !1392, line: 978, baseType: !7, size: 32, offset: 9856)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1391, file: !1392, line: 980, baseType: !559, size: 64, offset: 9920)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1391, file: !1392, line: 989, baseType: !2061, size: 128, offset: 9984)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2062, line: 35, size: 128, elements: !2063)
!2062 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2063 = !{!2064, !2065, !2066}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2061, file: !2062, line: 36, baseType: !330, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2061, file: !2062, line: 37, baseType: !931, size: 32, offset: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2061, file: !2062, line: 38, baseType: !2067, size: 64, offset: 64)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2062, line: 23, flags: DIFlagFwdDecl)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1391, file: !1392, line: 992, baseType: !608, size: 64, offset: 10112)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1391, file: !1392, line: 993, baseType: !608, size: 64, offset: 10176)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1391, file: !1392, line: 996, baseType: !429, offset: 10240)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1391, file: !1392, line: 999, baseType: !957, offset: 10240)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1391, file: !1392, line: 1001, baseType: !2074, size: 64, offset: 10240)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1392, line: 636, size: 64, elements: !2075)
!2075 = !{!2076}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2074, file: !1392, line: 637, baseType: !2077, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1391, file: !1392, line: 1005, baseType: !936, size: 128, offset: 10304)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1391, file: !1392, line: 1007, baseType: !1390, size: 64, offset: 10432)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1391, file: !1392, line: 1009, baseType: !2081, size: 64, offset: 10496)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1392, line: 1009, flags: DIFlagFwdDecl)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1391, file: !1392, line: 1043, baseType: !136, size: 64, offset: 10560)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1391, file: !1392, line: 1046, baseType: !2085, size: 64, offset: 10624)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1392, line: 41, flags: DIFlagFwdDecl)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1391, file: !1392, line: 1050, baseType: !2088, size: 64, offset: 10688)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1392, line: 42, flags: DIFlagFwdDecl)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1391, file: !1392, line: 1054, baseType: !2091, size: 64, offset: 10752)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1392, line: 55, flags: DIFlagFwdDecl)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1391, file: !1392, line: 1056, baseType: !2094, size: 64, offset: 10816)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1392, line: 40, flags: DIFlagFwdDecl)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1391, file: !1392, line: 1058, baseType: !2097, size: 64, offset: 10880)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2099, line: 99, size: 704, elements: !2100)
!2099 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2100 = !{!2101, !2102, !2103, !2104, !2105, !2106, !2107, !2126, !2127}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2098, file: !2099, line: 100, baseType: !297, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2098, file: !2099, line: 101, baseType: !931, size: 32, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2098, file: !2099, line: 102, baseType: !931, size: 32, offset: 96)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2098, file: !2099, line: 105, baseType: !429, offset: 128)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2098, file: !2099, line: 107, baseType: !362, size: 16, offset: 128)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2098, file: !2099, line: 109, baseType: !923, size: 128, offset: 192)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2098, file: !2099, line: 110, baseType: !2108, size: 64, offset: 320)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2099, line: 73, size: 448, elements: !2110)
!2110 = !{!2111, !2114, !2115, !2120, !2125}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2109, file: !2099, line: 74, baseType: !2112, size: 64)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2099, line: 74, flags: DIFlagFwdDecl)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2109, file: !2099, line: 75, baseType: !2097, size: 64, offset: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, scope: !2109, file: !2099, line: 83, baseType: !2116, size: 128, offset: 128)
!2116 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2109, file: !2099, line: 83, size: 128, elements: !2117)
!2117 = !{!2118, !2119}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2116, file: !2099, line: 84, baseType: !307, size: 128)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2116, file: !2099, line: 85, baseType: !1111, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, scope: !2109, file: !2099, line: 87, baseType: !2121, size: 128, offset: 256)
!2121 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2109, file: !2099, line: 87, size: 128, elements: !2122)
!2122 = !{!2123, !2124}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2121, file: !2099, line: 88, baseType: !823, size: 128)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2121, file: !2099, line: 89, baseType: !556, size: 128, align: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2109, file: !2099, line: 92, baseType: !7, size: 32, offset: 384)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2098, file: !2099, line: 111, baseType: !819, size: 64, offset: 384)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2098, file: !2099, line: 113, baseType: !293, size: 256, offset: 448)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1391, file: !1392, line: 1061, baseType: !2129, size: 64, offset: 10944)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1392, line: 43, flags: DIFlagFwdDecl)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1391, file: !1392, line: 1064, baseType: !347, size: 64, offset: 11008)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1391, file: !1392, line: 1065, baseType: !2133, size: 64, offset: 11072)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1935, line: 14, baseType: !2135)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1935, line: 12, size: 384, elements: !2136)
!2136 = !{!2137}
!2137 = !DIDerivedType(tag: DW_TAG_member, scope: !2135, file: !1935, line: 13, baseType: !2138, size: 384)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2135, file: !1935, line: 13, size: 384, elements: !2139)
!2139 = !{!2140, !2141, !2142, !2143}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2138, file: !1935, line: 13, baseType: !330, size: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2138, file: !1935, line: 13, baseType: !330, size: 32, offset: 32)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2138, file: !1935, line: 13, baseType: !330, size: 32, offset: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2138, file: !1935, line: 13, baseType: !2144, size: 256, offset: 128)
!2144 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2145, line: 32, size: 256, elements: !2146)
!2145 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2146 = !{!2147, !2152, !2165, !2171, !2180, !2200, !2205}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2144, file: !2145, line: 37, baseType: !2148, size: 64)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2144, file: !2145, line: 34, size: 64, elements: !2149)
!2149 = !{!2150, !2151}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2148, file: !2145, line: 35, baseType: !1631, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2148, file: !2145, line: 36, baseType: !627, size: 32, offset: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2144, file: !2145, line: 45, baseType: !2153, size: 192)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2144, file: !2145, line: 40, size: 192, elements: !2154)
!2154 = !{!2155, !2157, !2158, !2164}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2153, file: !2145, line: 41, baseType: !2156, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !500, line: 95, baseType: !330)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2153, file: !2145, line: 42, baseType: !330, size: 32, offset: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2153, file: !2145, line: 43, baseType: !2159, size: 64, offset: 64)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2145, line: 11, baseType: !2160)
!2160 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2145, line: 8, size: 64, elements: !2161)
!2161 = !{!2162, !2163}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2160, file: !2145, line: 9, baseType: !330, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2160, file: !2145, line: 10, baseType: !136, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2153, file: !2145, line: 44, baseType: !330, size: 32, offset: 128)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2144, file: !2145, line: 52, baseType: !2166, size: 128)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2144, file: !2145, line: 48, size: 128, elements: !2167)
!2167 = !{!2168, !2169, !2170}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2166, file: !2145, line: 49, baseType: !1631, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2166, file: !2145, line: 50, baseType: !627, size: 32, offset: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2166, file: !2145, line: 51, baseType: !2159, size: 64, offset: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2144, file: !2145, line: 61, baseType: !2172, size: 256)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2144, file: !2145, line: 55, size: 256, elements: !2173)
!2173 = !{!2174, !2175, !2176, !2177, !2179}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2172, file: !2145, line: 56, baseType: !1631, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2172, file: !2145, line: 57, baseType: !627, size: 32, offset: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2172, file: !2145, line: 58, baseType: !330, size: 32, offset: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2172, file: !2145, line: 59, baseType: !2178, size: 64, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !500, line: 94, baseType: !501)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2172, file: !2145, line: 60, baseType: !2178, size: 64, offset: 192)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2144, file: !2145, line: 95, baseType: !2181, size: 256)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2144, file: !2145, line: 64, size: 256, elements: !2182)
!2182 = !{!2183, !2184}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2181, file: !2145, line: 65, baseType: !136, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, scope: !2181, file: !2145, line: 77, baseType: !2185, size: 192, offset: 64)
!2185 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2181, file: !2145, line: 77, size: 192, elements: !2186)
!2186 = !{!2187, !2188, !2195}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2185, file: !2145, line: 82, baseType: !1379, size: 16)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2185, file: !2145, line: 88, baseType: !2189, size: 192)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2185, file: !2145, line: 84, size: 192, elements: !2190)
!2190 = !{!2191, !2193, !2194}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2189, file: !2145, line: 85, baseType: !2192, size: 64)
!2192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 64, elements: !255)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2189, file: !2145, line: 86, baseType: !136, size: 64, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2189, file: !2145, line: 87, baseType: !136, size: 64, offset: 128)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2185, file: !2145, line: 93, baseType: !2196, size: 96)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2185, file: !2145, line: 90, size: 96, elements: !2197)
!2197 = !{!2198, !2199}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2196, file: !2145, line: 91, baseType: !2192, size: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2196, file: !2145, line: 92, baseType: !146, size: 32, offset: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2144, file: !2145, line: 101, baseType: !2201, size: 128)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2144, file: !2145, line: 98, size: 128, elements: !2202)
!2202 = !{!2203, !2204}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2201, file: !2145, line: 99, baseType: !502, size: 64)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2201, file: !2145, line: 100, baseType: !330, size: 32, offset: 64)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2144, file: !2145, line: 108, baseType: !2206, size: 128)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2144, file: !2145, line: 104, size: 128, elements: !2207)
!2207 = !{!2208, !2209, !2210}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2206, file: !2145, line: 105, baseType: !136, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2206, file: !2145, line: 106, baseType: !330, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2206, file: !2145, line: 107, baseType: !7, size: 32, offset: 96)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1391, file: !1392, line: 1067, baseType: !2007, offset: 11136)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1391, file: !1392, line: 1099, baseType: !2213, size: 64, offset: 11136)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64)
!2214 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1392, line: 56, flags: DIFlagFwdDecl)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1391, file: !1392, line: 1103, baseType: !307, size: 128, offset: 11200)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1391, file: !1392, line: 1104, baseType: !2217, size: 64, offset: 11328)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1392, line: 46, flags: DIFlagFwdDecl)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1391, file: !1392, line: 1105, baseType: !1347, size: 192, offset: 11392)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1391, file: !1392, line: 1106, baseType: !7, size: 32, offset: 11584)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1391, file: !1392, line: 1109, baseType: !2222, size: 128, offset: 11648)
!2222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2223, size: 128, elements: !197)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 64)
!2224 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1392, line: 51, flags: DIFlagFwdDecl)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1391, file: !1392, line: 1110, baseType: !1347, size: 192, offset: 11776)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1391, file: !1392, line: 1111, baseType: !307, size: 128, offset: 11968)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1391, file: !1392, line: 1173, baseType: !2228, size: 64, offset: 12096)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2230, line: 62, size: 256, align: 256, elements: !2231)
!2230 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2231 = !{!2232, !2233, !2234, !2239}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2229, file: !2230, line: 75, baseType: !146, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2229, file: !2230, line: 90, baseType: !146, size: 32, offset: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2229, file: !2230, line: 124, baseType: !2235, size: 64, offset: 64)
!2235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2229, file: !2230, line: 109, size: 64, elements: !2236)
!2236 = !{!2237, !2238}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2235, file: !2230, line: 110, baseType: !609, size: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2235, file: !2230, line: 112, baseType: !609, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2229, file: !2230, line: 144, baseType: !146, size: 32, offset: 128)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1391, file: !1392, line: 1174, baseType: !144, size: 32, offset: 12160)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1391, file: !1392, line: 1179, baseType: !347, size: 64, offset: 12224)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1391, file: !1392, line: 1182, baseType: !2243, size: 128, offset: 12288)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1327, line: 76, size: 128, elements: !2244)
!2244 = !{!2245, !2250, !2251}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2243, file: !1327, line: 85, baseType: !2246, size: 64)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2247, line: 7, size: 64, elements: !2248)
!2247 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2248 = !{!2249}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2246, file: !2247, line: 12, baseType: !1538, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2243, file: !1327, line: 88, baseType: !676, size: 8, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2243, file: !1327, line: 95, baseType: !676, size: 8, offset: 72)
!2252 = !DIDerivedType(tag: DW_TAG_member, scope: !1391, file: !1392, line: 1184, baseType: !2253, size: 128, offset: 12416)
!2253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1391, file: !1392, line: 1184, size: 128, elements: !2254)
!2254 = !{!2255, !2256}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2253, file: !1392, line: 1185, baseType: !1404, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2253, file: !1392, line: 1186, baseType: !556, size: 128, align: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1391, file: !1392, line: 1190, baseType: !2258, size: 64, offset: 12544)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1392, line: 53, flags: DIFlagFwdDecl)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1391, file: !1392, line: 1192, baseType: !2261, size: 128, offset: 12608)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1327, line: 64, size: 128, elements: !2262)
!2262 = !{!2263, !2264, !2265}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2261, file: !1327, line: 65, baseType: !905, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2261, file: !1327, line: 67, baseType: !146, size: 32, offset: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2261, file: !1327, line: 68, baseType: !146, size: 32, offset: 96)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1391, file: !1392, line: 1206, baseType: !330, size: 32, offset: 12736)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1391, file: !1392, line: 1207, baseType: !330, size: 32, offset: 12768)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1391, file: !1392, line: 1209, baseType: !347, size: 64, offset: 12800)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1391, file: !1392, line: 1219, baseType: !608, size: 64, offset: 12864)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1391, file: !1392, line: 1220, baseType: !608, size: 64, offset: 12928)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1391, file: !1392, line: 1317, baseType: !330, size: 32, offset: 12992)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1391, file: !1392, line: 1319, baseType: !1390, size: 64, offset: 13056)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1391, file: !1392, line: 1322, baseType: !2274, size: 64, offset: 13120)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2276, line: 56, size: 512, elements: !2277)
!2276 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2277 = !{!2278, !2279, !2280, !2281, !2282, !2283, !2284, !2286}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2275, file: !2276, line: 57, baseType: !2274, size: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2275, file: !2276, line: 58, baseType: !136, size: 64, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2275, file: !2276, line: 59, baseType: !347, size: 64, offset: 128)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2275, file: !2276, line: 60, baseType: !347, size: 64, offset: 192)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2275, file: !2276, line: 61, baseType: !997, size: 64, offset: 256)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2275, file: !2276, line: 62, baseType: !7, size: 32, offset: 320)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2275, file: !2276, line: 63, baseType: !2285, size: 64, offset: 384)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !138, line: 153, baseType: !608)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2275, file: !2276, line: 64, baseType: !2287, size: 64, offset: 448)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1391, file: !1392, line: 1326, baseType: !1404, size: 32, offset: 13184)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1391, file: !1392, line: 1342, baseType: !136, size: 64, offset: 13248)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1391, file: !1392, line: 1343, baseType: !609, size: 64, offset: 13312)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1391, file: !1392, line: 1344, baseType: !608, size: 64, offset: 13376)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1391, file: !1392, line: 1345, baseType: !609, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1391, file: !1392, line: 1346, baseType: !609, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1391, file: !1392, line: 1347, baseType: !609, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1391, file: !1392, line: 1348, baseType: !556, size: 128, align: 64, offset: 13504)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1391, file: !1392, line: 1358, baseType: !2298, size: 34816, offset: 13824)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2299, line: 485, size: 34816, elements: !2300)
!2299 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2300 = !{!2301, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2330, !2331, !2332, !2333, !2334, !2335, !2338, !2339, !2340}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2298, file: !2299, line: 487, baseType: !2302, size: 192)
!2302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2303, size: 192, elements: !259)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2304, line: 16, size: 64, elements: !2305)
!2304 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2305 = !{!2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2303, file: !2304, line: 17, baseType: !1036, size: 16)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2303, file: !2304, line: 18, baseType: !1036, size: 16, offset: 16)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2303, file: !2304, line: 19, baseType: !1036, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2303, file: !2304, line: 19, baseType: !1036, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2303, file: !2304, line: 19, baseType: !1036, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2303, file: !2304, line: 19, baseType: !1036, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2303, file: !2304, line: 19, baseType: !1036, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2303, file: !2304, line: 20, baseType: !1036, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2303, file: !2304, line: 20, baseType: !1036, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2303, file: !2304, line: 20, baseType: !1036, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2303, file: !2304, line: 20, baseType: !1036, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2303, file: !2304, line: 20, baseType: !1036, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2303, file: !2304, line: 20, baseType: !1036, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2298, file: !2299, line: 491, baseType: !347, size: 64, offset: 192)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2298, file: !2299, line: 495, baseType: !362, size: 16, offset: 256)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2298, file: !2299, line: 496, baseType: !362, size: 16, offset: 272)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2298, file: !2299, line: 497, baseType: !362, size: 16, offset: 288)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2298, file: !2299, line: 498, baseType: !362, size: 16, offset: 304)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2298, file: !2299, line: 502, baseType: !347, size: 64, offset: 320)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2298, file: !2299, line: 503, baseType: !347, size: 64, offset: 384)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2298, file: !2299, line: 514, baseType: !2327, size: 256, offset: 448)
!2327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2328, size: 256, elements: !248)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64)
!2329 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2299, line: 483, flags: DIFlagFwdDecl)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2298, file: !2299, line: 516, baseType: !347, size: 64, offset: 704)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2298, file: !2299, line: 518, baseType: !347, size: 64, offset: 768)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2298, file: !2299, line: 520, baseType: !347, size: 64, offset: 832)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2298, file: !2299, line: 521, baseType: !347, size: 64, offset: 896)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2298, file: !2299, line: 522, baseType: !347, size: 64, offset: 960)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2298, file: !2299, line: 528, baseType: !2336, size: 64, offset: 1024)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!2337 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2299, line: 10, flags: DIFlagFwdDecl)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2298, file: !2299, line: 535, baseType: !347, size: 64, offset: 1088)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2298, file: !2299, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2298, file: !2299, line: 540, baseType: !2341, size: 33280, offset: 1536)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2342, line: 317, size: 33280, elements: !2343)
!2342 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2343 = !{!2344, !2345, !2346}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2341, file: !2342, line: 330, baseType: !7, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2341, file: !2342, line: 337, baseType: !347, size: 64, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2341, file: !2342, line: 348, baseType: !2347, size: 32768, offset: 512)
!2347 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2342, line: 304, size: 32768, elements: !2348)
!2348 = !{!2349, !2364, !2403, !2453, !2466}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2347, file: !2342, line: 305, baseType: !2350, size: 896)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2342, line: 12, size: 896, elements: !2351)
!2351 = !{!2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2363}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2350, file: !2342, line: 13, baseType: !144, size: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2350, file: !2342, line: 14, baseType: !144, size: 32, offset: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2350, file: !2342, line: 15, baseType: !144, size: 32, offset: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2350, file: !2342, line: 16, baseType: !144, size: 32, offset: 96)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2350, file: !2342, line: 17, baseType: !144, size: 32, offset: 128)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2350, file: !2342, line: 18, baseType: !144, size: 32, offset: 160)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2350, file: !2342, line: 19, baseType: !144, size: 32, offset: 192)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2350, file: !2342, line: 22, baseType: !2360, size: 640, offset: 224)
!2360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 640, elements: !2361)
!2361 = !{!2362}
!2362 = !DISubrange(count: 20)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2350, file: !2342, line: 25, baseType: !144, size: 32, offset: 864)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2347, file: !2342, line: 306, baseType: !2365, size: 4096, align: 128)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2342, line: 34, size: 4096, align: 128, elements: !2366)
!2366 = !{!2367, !2368, !2369, !2370, !2371, !2386, !2387, !2388, !2392, !2394, !2398}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2365, file: !2342, line: 35, baseType: !1036, size: 16)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2365, file: !2342, line: 36, baseType: !1036, size: 16, offset: 16)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2365, file: !2342, line: 37, baseType: !1036, size: 16, offset: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2365, file: !2342, line: 38, baseType: !1036, size: 16, offset: 48)
!2371 = !DIDerivedType(tag: DW_TAG_member, scope: !2365, file: !2342, line: 39, baseType: !2372, size: 128, offset: 64)
!2372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2365, file: !2342, line: 39, size: 128, elements: !2373)
!2373 = !{!2374, !2379}
!2374 = !DIDerivedType(tag: DW_TAG_member, scope: !2372, file: !2342, line: 40, baseType: !2375, size: 128)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2372, file: !2342, line: 40, size: 128, elements: !2376)
!2376 = !{!2377, !2378}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2375, file: !2342, line: 41, baseType: !608, size: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2375, file: !2342, line: 42, baseType: !608, size: 64, offset: 64)
!2379 = !DIDerivedType(tag: DW_TAG_member, scope: !2372, file: !2342, line: 44, baseType: !2380, size: 128)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2372, file: !2342, line: 44, size: 128, elements: !2381)
!2381 = !{!2382, !2383, !2384, !2385}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2380, file: !2342, line: 45, baseType: !144, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2380, file: !2342, line: 46, baseType: !144, size: 32, offset: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2380, file: !2342, line: 47, baseType: !144, size: 32, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2380, file: !2342, line: 48, baseType: !144, size: 32, offset: 96)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2365, file: !2342, line: 51, baseType: !144, size: 32, offset: 192)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2365, file: !2342, line: 52, baseType: !144, size: 32, offset: 224)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2365, file: !2342, line: 55, baseType: !2389, size: 1024, offset: 256)
!2389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 1024, elements: !2390)
!2390 = !{!2391}
!2391 = !DISubrange(count: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2365, file: !2342, line: 58, baseType: !2393, size: 2048, offset: 1280)
!2393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 2048, elements: !472)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2365, file: !2342, line: 60, baseType: !2395, size: 384, offset: 3328)
!2395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 384, elements: !2396)
!2396 = !{!2397}
!2397 = !DISubrange(count: 12)
!2398 = !DIDerivedType(tag: DW_TAG_member, scope: !2365, file: !2342, line: 62, baseType: !2399, size: 384, offset: 3712)
!2399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2365, file: !2342, line: 62, size: 384, elements: !2400)
!2400 = !{!2401, !2402}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2399, file: !2342, line: 63, baseType: !2395, size: 384)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2399, file: !2342, line: 64, baseType: !2395, size: 384)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2347, file: !2342, line: 307, baseType: !2404, size: 1088)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2342, line: 79, size: 1088, elements: !2405)
!2405 = !{!2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2452}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2404, file: !2342, line: 80, baseType: !144, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2404, file: !2342, line: 81, baseType: !144, size: 32, offset: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2404, file: !2342, line: 82, baseType: !144, size: 32, offset: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2404, file: !2342, line: 83, baseType: !144, size: 32, offset: 96)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2404, file: !2342, line: 84, baseType: !144, size: 32, offset: 128)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2404, file: !2342, line: 85, baseType: !144, size: 32, offset: 160)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2404, file: !2342, line: 86, baseType: !144, size: 32, offset: 192)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2404, file: !2342, line: 88, baseType: !2360, size: 640, offset: 224)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2404, file: !2342, line: 89, baseType: !1524, size: 8, offset: 864)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2404, file: !2342, line: 90, baseType: !1524, size: 8, offset: 872)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2404, file: !2342, line: 91, baseType: !1524, size: 8, offset: 880)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2404, file: !2342, line: 92, baseType: !1524, size: 8, offset: 888)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2404, file: !2342, line: 93, baseType: !1524, size: 8, offset: 896)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2404, file: !2342, line: 94, baseType: !1524, size: 8, offset: 904)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2404, file: !2342, line: 95, baseType: !2421, size: 64, offset: 960)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2423, line: 11, size: 128, elements: !2424)
!2423 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2424 = !{!2425, !2426}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2422, file: !2423, line: 12, baseType: !502, size: 64)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2422, file: !2423, line: 13, baseType: !2427, size: 64, offset: 64)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2429, line: 56, size: 1344, elements: !2430)
!2429 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2430 = !{!2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2428, file: !2429, line: 61, baseType: !347, size: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2428, file: !2429, line: 62, baseType: !347, size: 64, offset: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2428, file: !2429, line: 63, baseType: !347, size: 64, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2428, file: !2429, line: 64, baseType: !347, size: 64, offset: 192)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2428, file: !2429, line: 65, baseType: !347, size: 64, offset: 256)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2428, file: !2429, line: 66, baseType: !347, size: 64, offset: 320)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2428, file: !2429, line: 68, baseType: !347, size: 64, offset: 384)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2428, file: !2429, line: 69, baseType: !347, size: 64, offset: 448)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2428, file: !2429, line: 70, baseType: !347, size: 64, offset: 512)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2428, file: !2429, line: 71, baseType: !347, size: 64, offset: 576)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2428, file: !2429, line: 72, baseType: !347, size: 64, offset: 640)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2428, file: !2429, line: 73, baseType: !347, size: 64, offset: 704)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2428, file: !2429, line: 74, baseType: !347, size: 64, offset: 768)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2428, file: !2429, line: 75, baseType: !347, size: 64, offset: 832)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2428, file: !2429, line: 76, baseType: !347, size: 64, offset: 896)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2428, file: !2429, line: 81, baseType: !347, size: 64, offset: 960)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2428, file: !2429, line: 83, baseType: !347, size: 64, offset: 1024)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2428, file: !2429, line: 84, baseType: !347, size: 64, offset: 1088)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2428, file: !2429, line: 85, baseType: !347, size: 64, offset: 1152)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2428, file: !2429, line: 86, baseType: !347, size: 64, offset: 1216)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2428, file: !2429, line: 87, baseType: !347, size: 64, offset: 1280)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2404, file: !2342, line: 96, baseType: !144, size: 32, offset: 1024)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2347, file: !2342, line: 308, baseType: !2454, size: 4608, align: 512)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2342, line: 289, size: 4608, align: 512, elements: !2455)
!2455 = !{!2456, !2457, !2464}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2454, file: !2342, line: 290, baseType: !2365, size: 4096, align: 128)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2454, file: !2342, line: 291, baseType: !2458, size: 512, offset: 4096)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2342, line: 268, size: 512, elements: !2459)
!2459 = !{!2460, !2461, !2462}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2458, file: !2342, line: 269, baseType: !608, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2458, file: !2342, line: 270, baseType: !608, size: 64, offset: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2458, file: !2342, line: 271, baseType: !2463, size: 384, offset: 128)
!2463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !608, size: 384, elements: !1794)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2454, file: !2342, line: 292, baseType: !2465, offset: 4608)
!2465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1524, elements: !1892)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2347, file: !2342, line: 309, baseType: !2467, size: 32768)
!2467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1524, size: 32768, elements: !2468)
!2468 = !{!2469}
!2469 = !DISubrange(count: 4096)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1387, file: !907, line: 378, baseType: !2471, size: 64, offset: 64)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1383, file: !907, line: 384, baseType: !1673, size: 192, offset: 192)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1154, file: !907, line: 500, baseType: !429, offset: 6656)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1154, file: !907, line: 501, baseType: !2475, size: 64, offset: 6656)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !907, line: 387, flags: DIFlagFwdDecl)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1154, file: !907, line: 516, baseType: !1882, size: 64, offset: 6720)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1154, file: !907, line: 519, baseType: !543, size: 64, offset: 6784)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1154, file: !907, line: 521, baseType: !2480, size: 64, offset: 6848)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !907, line: 521, flags: DIFlagFwdDecl)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1154, file: !907, line: 545, baseType: !931, size: 32, offset: 6912)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1154, file: !907, line: 548, baseType: !676, size: 8, offset: 6944)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1154, file: !907, line: 550, baseType: !2485, offset: 6952)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2486, line: 142, elements: !443)
!2486 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1154, file: !907, line: 554, baseType: !293, size: 256, offset: 6976)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1154, file: !907, line: 557, baseType: !144, size: 32, offset: 7232)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1151, file: !907, line: 565, baseType: !2490, offset: 7296)
!2490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, elements: !2491)
!2491 = !{!2492}
!2492 = !DISubrange(count: -1)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1147, file: !907, line: 151, baseType: !931, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1140, file: !907, line: 156, baseType: !429, offset: 256)
!2495 = !DIDerivedType(tag: DW_TAG_member, scope: !911, file: !907, line: 159, baseType: !2496, size: 128)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !911, file: !907, line: 159, size: 128, elements: !2497)
!2497 = !{!2498, !2562}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2496, file: !907, line: 161, baseType: !2499, size: 64)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2501)
!2501 = !{!2502, !2512, !2533, !2534, !2535, !2536, !2537, !2549, !2550, !2551}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2500, file: !31, line: 111, baseType: !2503, size: 384)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2504)
!2504 = !{!2505, !2507, !2508, !2509, !2510, !2511}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2503, file: !31, line: 20, baseType: !2506, size: 64)
!2506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2503, file: !31, line: 21, baseType: !2506, size: 64, offset: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2503, file: !31, line: 22, baseType: !2506, size: 64, offset: 128)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2503, file: !31, line: 23, baseType: !347, size: 64, offset: 192)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2503, file: !31, line: 24, baseType: !347, size: 64, offset: 256)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2503, file: !31, line: 25, baseType: !347, size: 64, offset: 320)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2500, file: !31, line: 112, baseType: !2513, size: 64, offset: 384)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2515, line: 105, size: 128, elements: !2516)
!2515 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2516 = !{!2517, !2518}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2514, file: !2515, line: 110, baseType: !347, size: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2514, file: !2515, line: 118, baseType: !2519, size: 64, offset: 64)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2515, line: 95, size: 448, elements: !2521)
!2521 = !{!2522, !2523, !2528, !2529, !2530, !2531, !2532}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2520, file: !2515, line: 96, baseType: !297, size: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2520, file: !2515, line: 97, baseType: !2524, size: 64, offset: 64)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 64)
!2525 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2515, line: 60, baseType: !2526)
!2526 = !DISubroutineType(types: !2527)
!2527 = !{null, !2513}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2520, file: !2515, line: 98, baseType: !2524, size: 64, offset: 128)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2520, file: !2515, line: 99, baseType: !676, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2520, file: !2515, line: 100, baseType: !676, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2520, file: !2515, line: 101, baseType: !556, size: 128, align: 64, offset: 256)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2520, file: !2515, line: 102, baseType: !2513, size: 64, offset: 384)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2500, file: !31, line: 113, baseType: !2514, size: 128, offset: 448)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2500, file: !31, line: 114, baseType: !1673, size: 192, offset: 576)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2500, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2500, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2500, file: !31, line: 117, baseType: !2538, size: 64, offset: 832)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2540)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2541)
!2541 = !{!2542, !2543, !2547, !2548}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2540, file: !31, line: 73, baseType: !1017, size: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2540, file: !31, line: 78, baseType: !2544, size: 64, offset: 64)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 64)
!2545 = !DISubroutineType(types: !2546)
!2546 = !{null, !2499}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2540, file: !31, line: 83, baseType: !2544, size: 64, offset: 128)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2540, file: !31, line: 89, baseType: !1203, size: 64, offset: 192)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2500, file: !31, line: 118, baseType: !136, size: 64, offset: 896)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2500, file: !31, line: 119, baseType: !330, size: 32, offset: 960)
!2551 = !DIDerivedType(tag: DW_TAG_member, scope: !2500, file: !31, line: 120, baseType: !2552, size: 128, offset: 1024)
!2552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2500, file: !31, line: 120, size: 128, elements: !2553)
!2553 = !{!2554, !2560}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2552, file: !31, line: 121, baseType: !2555, size: 128)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2556, line: 6, size: 128, elements: !2557)
!2556 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2557 = !{!2558, !2559}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2555, file: !2556, line: 7, baseType: !608, size: 64)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2555, file: !2556, line: 8, baseType: !608, size: 64, offset: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2552, file: !31, line: 122, baseType: !2561)
!2561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2555, elements: !1892)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2496, file: !907, line: 162, baseType: !136, size: 64, offset: 64)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !911, file: !907, line: 176, baseType: !556, size: 128, align: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, scope: !906, file: !907, line: 179, baseType: !2565, size: 32, offset: 384)
!2565 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !906, file: !907, line: 179, size: 32, elements: !2566)
!2566 = !{!2567, !2568, !2569, !2570}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2565, file: !907, line: 184, baseType: !931, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2565, file: !907, line: 192, baseType: !7, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2565, file: !907, line: 194, baseType: !7, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2565, file: !907, line: 195, baseType: !330, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !906, file: !907, line: 199, baseType: !931, size: 32, offset: 416)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !841, file: !44, line: 1964, baseType: !2573, size: 64, offset: 1344)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64)
!2574 = !DISubroutineType(types: !2575)
!2575 = !{!502, !783, !2576}
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 64)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2578, line: 12, size: 256, elements: !2579)
!2578 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2579 = !{!2580, !2581, !2582, !2583, !2584}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2577, file: !2578, line: 13, baseType: !137, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2577, file: !2578, line: 16, baseType: !330, size: 32, offset: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2577, file: !2578, line: 23, baseType: !347, size: 64, offset: 64)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2577, file: !2578, line: 30, baseType: !347, size: 64, offset: 128)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2577, file: !2578, line: 33, baseType: !2585, size: 64, offset: 192)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 64)
!2586 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !907, line: 27, flags: DIFlagFwdDecl)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !841, file: !44, line: 1966, baseType: !2573, size: 64, offset: 1408)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !784, file: !44, line: 1424, baseType: !2589, size: 64, offset: 448)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2591)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2592)
!2592 = !{!2593, !2639, !2643, !2647, !2648, !2649, !2650, !2651, !2656, !2661, !2665}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2591, file: !38, line: 323, baseType: !2594, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{!330, !2597}
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2599)
!2599 = !{!2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2624, !2625, !2626}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2598, file: !38, line: 295, baseType: !823, size: 128)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2598, file: !38, line: 296, baseType: !307, size: 128, offset: 128)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2598, file: !38, line: 297, baseType: !307, size: 128, offset: 256)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2598, file: !38, line: 298, baseType: !307, size: 128, offset: 384)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2598, file: !38, line: 299, baseType: !1347, size: 192, offset: 512)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2598, file: !38, line: 300, baseType: !429, offset: 704)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2598, file: !38, line: 301, baseType: !931, size: 32, offset: 704)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2598, file: !38, line: 302, baseType: !783, size: 64, offset: 768)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2598, file: !38, line: 303, baseType: !2609, size: 64, offset: 832)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2610)
!2610 = !{!2611, !2623}
!2611 = !DIDerivedType(tag: DW_TAG_member, scope: !2609, file: !38, line: 69, baseType: !2612, size: 32)
!2612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2609, file: !38, line: 69, size: 32, elements: !2613)
!2613 = !{!2614, !2615, !2616}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2612, file: !38, line: 70, baseType: !621, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2612, file: !38, line: 71, baseType: !629, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2612, file: !38, line: 72, baseType: !2617, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2618, line: 24, baseType: !2619)
!2618 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2618, line: 22, size: 32, elements: !2620)
!2620 = !{!2621}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2619, file: !2618, line: 23, baseType: !2622, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2618, line: 20, baseType: !627)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2609, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2598, file: !38, line: 304, baseType: !717, size: 64, offset: 896)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2598, file: !38, line: 305, baseType: !347, size: 64, offset: 960)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2598, file: !38, line: 306, baseType: !2627, size: 576, offset: 1024)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2628)
!2628 = !{!2629, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2627, file: !38, line: 206, baseType: !2630, size: 64)
!2630 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !305)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2627, file: !38, line: 207, baseType: !2630, size: 64, offset: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2627, file: !38, line: 208, baseType: !2630, size: 64, offset: 128)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2627, file: !38, line: 209, baseType: !2630, size: 64, offset: 192)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2627, file: !38, line: 210, baseType: !2630, size: 64, offset: 256)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2627, file: !38, line: 211, baseType: !2630, size: 64, offset: 320)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2627, file: !38, line: 212, baseType: !2630, size: 64, offset: 384)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2627, file: !38, line: 213, baseType: !724, size: 64, offset: 448)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2627, file: !38, line: 214, baseType: !724, size: 64, offset: 512)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2591, file: !38, line: 324, baseType: !2640, size: 64, offset: 64)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64)
!2641 = !DISubroutineType(types: !2642)
!2642 = !{!2597, !783, !330}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2591, file: !38, line: 325, baseType: !2644, size: 64, offset: 128)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{null, !2597}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2591, file: !38, line: 326, baseType: !2594, size: 64, offset: 192)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2591, file: !38, line: 327, baseType: !2594, size: 64, offset: 256)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2591, file: !38, line: 328, baseType: !2594, size: 64, offset: 320)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2591, file: !38, line: 329, baseType: !869, size: 64, offset: 384)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2591, file: !38, line: 332, baseType: !2652, size: 64, offset: 448)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 64)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!2655, !615}
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 64)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2591, file: !38, line: 333, baseType: !2657, size: 64, offset: 512)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = !DISubroutineType(types: !2659)
!2659 = !{!330, !615, !2660}
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2591, file: !38, line: 335, baseType: !2662, size: 64, offset: 576)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!330, !615, !2655}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2591, file: !38, line: 337, baseType: !2666, size: 64, offset: 640)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = !DISubroutineType(types: !2668)
!2668 = !{!330, !783, !2669}
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !784, file: !44, line: 1425, baseType: !2671, size: 64, offset: 512)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 64)
!2672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2673)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2674)
!2674 = !{!2675, !2679, !2680, !2684, !2685, !2686, !2701, !2724, !2728, !2729, !2752}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2673, file: !38, line: 429, baseType: !2676, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64)
!2677 = !DISubroutineType(types: !2678)
!2678 = !{!330, !783, !330, !330, !733}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2673, file: !38, line: 430, baseType: !869, size: 64, offset: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2673, file: !38, line: 431, baseType: !2681, size: 64, offset: 128)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{!330, !783, !7}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2673, file: !38, line: 432, baseType: !2681, size: 64, offset: 192)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2673, file: !38, line: 433, baseType: !869, size: 64, offset: 256)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2673, file: !38, line: 434, baseType: !2687, size: 64, offset: 320)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2688 = !DISubroutineType(types: !2689)
!2689 = !{!330, !783, !330, !2690}
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2692)
!2692 = !{!2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2691, file: !38, line: 416, baseType: !330, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2691, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2691, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2691, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2691, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2691, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2691, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2691, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2673, file: !38, line: 435, baseType: !2702, size: 64, offset: 384)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = !DISubroutineType(types: !2704)
!2704 = !{!330, !783, !2609, !2705}
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 64)
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2707)
!2707 = !{!2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2706, file: !38, line: 344, baseType: !330, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2706, file: !38, line: 345, baseType: !608, size: 64, offset: 64)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2706, file: !38, line: 346, baseType: !608, size: 64, offset: 128)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2706, file: !38, line: 347, baseType: !608, size: 64, offset: 192)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2706, file: !38, line: 348, baseType: !608, size: 64, offset: 256)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2706, file: !38, line: 349, baseType: !608, size: 64, offset: 320)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2706, file: !38, line: 350, baseType: !608, size: 64, offset: 384)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2706, file: !38, line: 351, baseType: !303, size: 64, offset: 448)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2706, file: !38, line: 353, baseType: !303, size: 64, offset: 512)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2706, file: !38, line: 354, baseType: !330, size: 32, offset: 576)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2706, file: !38, line: 355, baseType: !330, size: 32, offset: 608)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2706, file: !38, line: 356, baseType: !608, size: 64, offset: 640)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2706, file: !38, line: 357, baseType: !608, size: 64, offset: 704)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2706, file: !38, line: 358, baseType: !608, size: 64, offset: 768)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2706, file: !38, line: 359, baseType: !303, size: 64, offset: 832)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2706, file: !38, line: 360, baseType: !330, size: 32, offset: 896)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2673, file: !38, line: 436, baseType: !2725, size: 64, offset: 448)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = !DISubroutineType(types: !2727)
!2727 = !{!330, !783, !2669, !2705}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2673, file: !38, line: 438, baseType: !2702, size: 64, offset: 512)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2673, file: !38, line: 439, baseType: !2730, size: 64, offset: 576)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{!330, !783, !2733}
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2735)
!2735 = !{!2736, !2737}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2734, file: !38, line: 410, baseType: !7, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2734, file: !38, line: 411, baseType: !2738, size: 1344, offset: 64)
!2738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2739, size: 1344, elements: !259)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2740)
!2740 = !{!2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2751}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2739, file: !38, line: 396, baseType: !7, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2739, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2739, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2739, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2739, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2739, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2739, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2739, file: !38, line: 404, baseType: !610, size: 64, offset: 256)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2739, file: !38, line: 405, baseType: !2750, size: 64, offset: 320)
!2750 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !138, line: 126, baseType: !608)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2739, file: !38, line: 406, baseType: !2750, size: 64, offset: 384)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2673, file: !38, line: 440, baseType: !2681, size: 64, offset: 640)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !784, file: !44, line: 1426, baseType: !2754, size: 64, offset: 576)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 64)
!2755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2756)
!2756 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !784, file: !44, line: 1427, baseType: !347, size: 64, offset: 640)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !784, file: !44, line: 1428, baseType: !347, size: 64, offset: 704)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !784, file: !44, line: 1429, baseType: !347, size: 64, offset: 768)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !784, file: !44, line: 1430, baseType: !573, size: 64, offset: 832)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !784, file: !44, line: 1431, baseType: !951, size: 256, offset: 896)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !784, file: !44, line: 1432, baseType: !330, size: 32, offset: 1152)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !784, file: !44, line: 1433, baseType: !931, size: 32, offset: 1184)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !784, file: !44, line: 1437, baseType: !2765, size: 64, offset: 1216)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2768)
!2768 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !784, file: !44, line: 1449, baseType: !2770, size: 64, offset: 1280)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !589, line: 34, size: 64, elements: !2771)
!2771 = !{!2772}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2770, file: !589, line: 35, baseType: !592, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !784, file: !44, line: 1450, baseType: !307, size: 128, offset: 1344)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !784, file: !44, line: 1451, baseType: !2775, size: 64, offset: 1472)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 64)
!2776 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !784, file: !44, line: 1452, baseType: !2094, size: 64, offset: 1536)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !784, file: !44, line: 1453, baseType: !2779, size: 64, offset: 1600)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !784, file: !44, line: 1454, baseType: !823, size: 128, offset: 1664)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !784, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !784, file: !44, line: 1456, baseType: !2784, size: 2432, offset: 1856)
!2784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2785)
!2785 = !{!2786, !2787, !2788, !2790, !2822}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2784, file: !38, line: 519, baseType: !7, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2784, file: !38, line: 520, baseType: !951, size: 256, offset: 64)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2784, file: !38, line: 521, baseType: !2789, size: 192, offset: 320)
!2789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !615, size: 192, elements: !259)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2784, file: !38, line: 522, baseType: !2791, size: 1728, offset: 512)
!2791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2792, size: 1728, elements: !259)
!2792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2793)
!2793 = !{!2794, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2792, file: !38, line: 223, baseType: !2795, size: 64)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 64)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2797)
!2797 = !{!2798, !2799, !2812, !2813}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2796, file: !38, line: 444, baseType: !330, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2796, file: !38, line: 445, baseType: !2800, size: 64, offset: 64)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64)
!2801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2802)
!2802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2803)
!2803 = !{!2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2802, file: !38, line: 311, baseType: !869, size: 64)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2802, file: !38, line: 312, baseType: !869, size: 64, offset: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2802, file: !38, line: 313, baseType: !869, size: 64, offset: 128)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2802, file: !38, line: 314, baseType: !869, size: 64, offset: 192)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2802, file: !38, line: 315, baseType: !2594, size: 64, offset: 256)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2802, file: !38, line: 316, baseType: !2594, size: 64, offset: 320)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2802, file: !38, line: 317, baseType: !2594, size: 64, offset: 384)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2802, file: !38, line: 318, baseType: !2666, size: 64, offset: 448)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2796, file: !38, line: 446, baseType: !133, size: 64, offset: 128)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2796, file: !38, line: 447, baseType: !2795, size: 64, offset: 192)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2792, file: !38, line: 224, baseType: !330, size: 32, offset: 64)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2792, file: !38, line: 226, baseType: !307, size: 128, offset: 128)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2792, file: !38, line: 227, baseType: !347, size: 64, offset: 256)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2792, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2792, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2792, file: !38, line: 230, baseType: !2630, size: 64, offset: 384)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2792, file: !38, line: 231, baseType: !2630, size: 64, offset: 448)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2792, file: !38, line: 232, baseType: !136, size: 64, offset: 512)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2784, file: !38, line: 523, baseType: !2823, size: 192, offset: 2240)
!2823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2800, size: 192, elements: !259)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !784, file: !44, line: 1458, baseType: !2825, size: 2112, offset: 4288)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2826)
!2826 = !{!2827, !2828, !2829}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2825, file: !44, line: 1411, baseType: !330, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2825, file: !44, line: 1412, baseType: !1652, size: 128, offset: 64)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2825, file: !44, line: 1413, baseType: !2830, size: 1920, offset: 192)
!2830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2831, size: 1920, elements: !259)
!2831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2832, line: 12, size: 640, elements: !2833)
!2832 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2833 = !{!2834, !2842, !2844, !2849, !2850}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2831, file: !2832, line: 13, baseType: !2835, size: 320)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2836, line: 17, size: 320, elements: !2837)
!2836 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2837 = !{!2838, !2839, !2840, !2841}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2835, file: !2836, line: 18, baseType: !330, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2835, file: !2836, line: 19, baseType: !330, size: 32, offset: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2835, file: !2836, line: 20, baseType: !1652, size: 128, offset: 64)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2835, file: !2836, line: 22, baseType: !556, size: 128, align: 64, offset: 192)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2831, file: !2832, line: 14, baseType: !2843, size: 64, offset: 320)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2831, file: !2832, line: 15, baseType: !2845, size: 64, offset: 384)
!2845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2846, line: 16, size: 64, elements: !2847)
!2846 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2847 = !{!2848}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2845, file: !2846, line: 17, baseType: !1390, size: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2831, file: !2832, line: 16, baseType: !1652, size: 128, offset: 448)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2831, file: !2832, line: 17, baseType: !931, size: 32, offset: 576)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !784, file: !44, line: 1465, baseType: !136, size: 64, offset: 6400)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !784, file: !44, line: 1468, baseType: !144, size: 32, offset: 6464)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !784, file: !44, line: 1470, baseType: !724, size: 64, offset: 6528)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !784, file: !44, line: 1471, baseType: !724, size: 64, offset: 6592)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !784, file: !44, line: 1473, baseType: !146, size: 32, offset: 6656)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !784, file: !44, line: 1474, baseType: !2857, size: 64, offset: 6720)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !784, file: !44, line: 1477, baseType: !2860, size: 256, offset: 6784)
!2860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 256, elements: !2390)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !784, file: !44, line: 1478, baseType: !2862, size: 128, offset: 7040)
!2862 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2863, line: 18, baseType: !2864)
!2863 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2863, line: 16, size: 128, elements: !2865)
!2865 = !{!2866}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2864, file: !2863, line: 17, baseType: !2867, size: 128)
!2867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 128, elements: !1904)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !784, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !784, file: !44, line: 1481, baseType: !2870, size: 32, offset: 7200)
!2870 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !138, line: 150, baseType: !7)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !784, file: !44, line: 1487, baseType: !1347, size: 192, offset: 7232)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !784, file: !44, line: 1493, baseType: !402, size: 64, offset: 7424)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !784, file: !44, line: 1495, baseType: !2874, size: 64, offset: 7488)
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2875, size: 64)
!2875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2876)
!2876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !571, line: 135, size: 1024, align: 512, elements: !2877)
!2877 = !{!2878, !2882, !2883, !2890, !2896, !2900, !2904, !2908, !2909, !2913, !2917, !2922, !2926}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2876, file: !571, line: 136, baseType: !2879, size: 64)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DISubroutineType(types: !2881)
!2881 = !{!330, !573, !7}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2876, file: !571, line: 137, baseType: !2879, size: 64, offset: 64)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2876, file: !571, line: 138, baseType: !2884, size: 64, offset: 128)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 64)
!2885 = !DISubroutineType(types: !2886)
!2886 = !{!330, !2887, !2889}
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 64)
!2888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !574)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2876, file: !571, line: 139, baseType: !2891, size: 64, offset: 192)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = !DISubroutineType(types: !2893)
!2893 = !{!330, !2887, !7, !402, !2894}
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 64)
!2895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !597)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2876, file: !571, line: 141, baseType: !2897, size: 64, offset: 256)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!330, !2887}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2876, file: !571, line: 142, baseType: !2901, size: 64, offset: 320)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 64)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{!330, !573}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2876, file: !571, line: 143, baseType: !2905, size: 64, offset: 384)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = !DISubroutineType(types: !2907)
!2907 = !{null, !573}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2876, file: !571, line: 144, baseType: !2905, size: 64, offset: 448)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2876, file: !571, line: 145, baseType: !2910, size: 64, offset: 512)
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!2911 = !DISubroutineType(types: !2912)
!2912 = !{null, !573, !615}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2876, file: !571, line: 146, baseType: !2914, size: 64, offset: 576)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = !DISubroutineType(types: !2916)
!2916 = !{!373, !573, !373, !330}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2876, file: !571, line: 147, baseType: !2918, size: 64, offset: 640)
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 64)
!2919 = !DISubroutineType(types: !2920)
!2920 = !{!569, !2921}
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2876, file: !571, line: 148, baseType: !2923, size: 64, offset: 704)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = !DISubroutineType(types: !2925)
!2925 = !{!330, !733, !676}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2876, file: !571, line: 149, baseType: !2927, size: 64, offset: 768)
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!2928 = !DISubroutineType(types: !2929)
!2929 = !{!573, !573, !2930}
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 64)
!2931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !616)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !784, file: !44, line: 1500, baseType: !330, size: 32, offset: 7552)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !784, file: !44, line: 1502, baseType: !2934, size: 448, offset: 7616)
!2934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2578, line: 60, size: 448, elements: !2935)
!2935 = !{!2936, !2941, !2942, !2943, !2944, !2945, !2946}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2934, file: !2578, line: 61, baseType: !2937, size: 64)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = !DISubroutineType(types: !2939)
!2939 = !{!347, !2940, !2576}
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 64)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2934, file: !2578, line: 63, baseType: !2937, size: 64, offset: 64)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2934, file: !2578, line: 66, baseType: !502, size: 64, offset: 128)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2934, file: !2578, line: 67, baseType: !330, size: 32, offset: 192)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2934, file: !2578, line: 68, baseType: !7, size: 32, offset: 224)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2934, file: !2578, line: 71, baseType: !307, size: 128, offset: 256)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2934, file: !2578, line: 77, baseType: !2947, size: 64, offset: 384)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !784, file: !44, line: 1505, baseType: !297, size: 64, offset: 8064)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !784, file: !44, line: 1508, baseType: !297, size: 64, offset: 8128)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !784, file: !44, line: 1511, baseType: !330, size: 32, offset: 8192)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !784, file: !44, line: 1514, baseType: !1085, size: 32, offset: 8224)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !784, file: !44, line: 1517, baseType: !2953, size: 64, offset: 8256)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !294, line: 18, flags: DIFlagFwdDecl)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !784, file: !44, line: 1518, baseType: !819, size: 64, offset: 8320)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !784, file: !44, line: 1525, baseType: !1882, size: 64, offset: 8384)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !784, file: !44, line: 1532, baseType: !2958, size: 64, offset: 8448)
!2958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2959, line: 52, size: 64, elements: !2960)
!2959 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2960 = !{!2961}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2958, file: !2959, line: 53, baseType: !2962, size: 64)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 64)
!2963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2959, line: 40, size: 256, elements: !2964)
!2964 = !{!2965, !2966, !2971}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2963, file: !2959, line: 42, baseType: !429)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2963, file: !2959, line: 44, baseType: !2967, size: 192)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2959, line: 28, size: 192, elements: !2968)
!2968 = !{!2969, !2970}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2967, file: !2959, line: 29, baseType: !307, size: 128)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2967, file: !2959, line: 31, baseType: !502, size: 64, offset: 128)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2963, file: !2959, line: 49, baseType: !502, size: 64, offset: 192)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !784, file: !44, line: 1533, baseType: !2958, size: 64, offset: 8512)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !784, file: !44, line: 1534, baseType: !556, size: 128, align: 64, offset: 8576)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !784, file: !44, line: 1535, baseType: !293, size: 256, offset: 8704)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !784, file: !44, line: 1537, baseType: !1347, size: 192, offset: 8960)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !784, file: !44, line: 1542, baseType: !330, size: 32, offset: 9152)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !784, file: !44, line: 1545, baseType: !429, offset: 9184)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !784, file: !44, line: 1546, baseType: !307, size: 128, offset: 9216)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !784, file: !44, line: 1548, baseType: !429, offset: 9344)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !784, file: !44, line: 1549, baseType: !307, size: 128, offset: 9344)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !616, file: !44, line: 624, baseType: !918, size: 64, offset: 256)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !616, file: !44, line: 631, baseType: !347, size: 64, offset: 320)
!2983 = !DIDerivedType(tag: DW_TAG_member, scope: !616, file: !44, line: 639, baseType: !2984, size: 32, offset: 384)
!2984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !616, file: !44, line: 639, size: 32, elements: !2985)
!2985 = !{!2986, !2988}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2984, file: !44, line: 640, baseType: !2987, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2984, file: !44, line: 641, baseType: !7, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !616, file: !44, line: 643, baseType: !699, size: 32, offset: 416)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !616, file: !44, line: 644, baseType: !717, size: 64, offset: 448)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !616, file: !44, line: 645, baseType: !720, size: 128, offset: 512)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !616, file: !44, line: 646, baseType: !720, size: 128, offset: 640)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !616, file: !44, line: 647, baseType: !720, size: 128, offset: 768)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !616, file: !44, line: 648, baseType: !429, offset: 896)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !616, file: !44, line: 649, baseType: !362, size: 16, offset: 896)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !616, file: !44, line: 650, baseType: !1524, size: 8, offset: 912)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !616, file: !44, line: 651, baseType: !1524, size: 8, offset: 920)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !616, file: !44, line: 652, baseType: !2750, size: 64, offset: 960)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !616, file: !44, line: 659, baseType: !347, size: 64, offset: 1024)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !616, file: !44, line: 660, baseType: !951, size: 256, offset: 1088)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !616, file: !44, line: 662, baseType: !347, size: 64, offset: 1344)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !616, file: !44, line: 663, baseType: !347, size: 64, offset: 1408)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !616, file: !44, line: 665, baseType: !823, size: 128, offset: 1472)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !616, file: !44, line: 666, baseType: !307, size: 128, offset: 1600)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !616, file: !44, line: 675, baseType: !307, size: 128, offset: 1728)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !616, file: !44, line: 676, baseType: !307, size: 128, offset: 1856)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !616, file: !44, line: 677, baseType: !307, size: 128, offset: 1984)
!3008 = !DIDerivedType(tag: DW_TAG_member, scope: !616, file: !44, line: 678, baseType: !3009, size: 128, offset: 2112)
!3009 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !616, file: !44, line: 678, size: 128, elements: !3010)
!3010 = !{!3011, !3012}
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3009, file: !44, line: 679, baseType: !819, size: 64)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3009, file: !44, line: 680, baseType: !556, size: 128, align: 64)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !616, file: !44, line: 682, baseType: !299, size: 64, offset: 2240)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !616, file: !44, line: 683, baseType: !299, size: 64, offset: 2304)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !616, file: !44, line: 684, baseType: !931, size: 32, offset: 2368)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !616, file: !44, line: 685, baseType: !931, size: 32, offset: 2400)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !616, file: !44, line: 686, baseType: !931, size: 32, offset: 2432)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !616, file: !44, line: 688, baseType: !931, size: 32, offset: 2464)
!3019 = !DIDerivedType(tag: DW_TAG_member, scope: !616, file: !44, line: 690, baseType: !3020, size: 64, offset: 2496)
!3020 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !616, file: !44, line: 690, size: 64, elements: !3021)
!3021 = !{!3022, !3244}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3020, file: !44, line: 691, baseType: !3023, size: 64)
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 64)
!3024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3025)
!3025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !3026)
!3026 = !{!3027, !3028, !3032, !3037, !3041, !3042, !3043, !3047, !3060, !3061, !3068, !3072, !3073, !3077, !3078, !3082, !3087, !3088, !3092, !3096, !3204, !3208, !3209, !3213, !3214, !3218, !3222, !3227, !3231, !3235, !3239, !3243}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3025, file: !44, line: 1823, baseType: !133, size: 64)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3025, file: !44, line: 1824, baseType: !3029, size: 64, offset: 64)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 64)
!3030 = !DISubroutineType(types: !3031)
!3031 = !{!717, !543, !717, !330}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3025, file: !44, line: 1825, baseType: !3033, size: 64, offset: 128)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!498, !543, !373, !513, !3036}
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3025, file: !44, line: 1826, baseType: !3038, size: 64, offset: 192)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{!498, !543, !402, !513, !3036}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3025, file: !44, line: 1827, baseType: !1021, size: 64, offset: 256)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3025, file: !44, line: 1828, baseType: !1021, size: 64, offset: 320)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3025, file: !44, line: 1829, baseType: !3044, size: 64, offset: 384)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = !DISubroutineType(types: !3046)
!3046 = !{!330, !1024, !676}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3025, file: !44, line: 1830, baseType: !3048, size: 64, offset: 448)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{!330, !543, !3051}
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !3053)
!3053 = !{!3054, !3059}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3052, file: !44, line: 1777, baseType: !3055, size: 64)
!3055 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !3056)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = !DISubroutineType(types: !3058)
!3058 = !{!330, !3051, !402, !330, !717, !608, !7}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3052, file: !44, line: 1778, baseType: !717, size: 64, offset: 64)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3025, file: !44, line: 1831, baseType: !3048, size: 64, offset: 512)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3025, file: !44, line: 1832, baseType: !3062, size: 64, offset: 576)
!3062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 64)
!3063 = !DISubroutineType(types: !3064)
!3064 = !{!3065, !543, !3066}
!3065 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !360, line: 52, baseType: !7)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !803, line: 27, flags: DIFlagFwdDecl)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3025, file: !44, line: 1833, baseType: !3069, size: 64, offset: 640)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{!502, !543, !7, !347}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3025, file: !44, line: 1834, baseType: !3069, size: 64, offset: 704)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3025, file: !44, line: 1835, baseType: !3074, size: 64, offset: 768)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = !DISubroutineType(types: !3076)
!3076 = !{!330, !543, !1157}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3025, file: !44, line: 1836, baseType: !347, size: 64, offset: 832)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3025, file: !44, line: 1837, baseType: !3079, size: 64, offset: 896)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!330, !615, !543}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3025, file: !44, line: 1838, baseType: !3083, size: 64, offset: 960)
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 64)
!3084 = !DISubroutineType(types: !3085)
!3085 = !{!330, !543, !3086}
!3086 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !136)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3025, file: !44, line: 1839, baseType: !3079, size: 64, offset: 1024)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3025, file: !44, line: 1840, baseType: !3089, size: 64, offset: 1088)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 64)
!3090 = !DISubroutineType(types: !3091)
!3091 = !{!330, !543, !717, !717, !330}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3025, file: !44, line: 1841, baseType: !3093, size: 64, offset: 1152)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64)
!3094 = !DISubroutineType(types: !3095)
!3095 = !{!330, !330, !543, !330}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3025, file: !44, line: 1842, baseType: !3097, size: 64, offset: 1216)
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 64)
!3098 = !DISubroutineType(types: !3099)
!3099 = !{!330, !543, !330, !3100}
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !3102)
!3102 = !{!3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3134, !3135, !3136, !3149, !3180}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3101, file: !44, line: 1063, baseType: !3100, size: 64)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3101, file: !44, line: 1064, baseType: !307, size: 128, offset: 64)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3101, file: !44, line: 1065, baseType: !823, size: 128, offset: 192)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3101, file: !44, line: 1066, baseType: !307, size: 128, offset: 320)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3101, file: !44, line: 1069, baseType: !307, size: 128, offset: 448)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3101, file: !44, line: 1072, baseType: !3086, size: 64, offset: 576)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3101, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3101, file: !44, line: 1074, baseType: !357, size: 8, offset: 672)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3101, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3101, file: !44, line: 1076, baseType: !330, size: 32, offset: 736)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3101, file: !44, line: 1077, baseType: !1652, size: 128, offset: 768)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3101, file: !44, line: 1078, baseType: !543, size: 64, offset: 896)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3101, file: !44, line: 1079, baseType: !717, size: 64, offset: 960)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3101, file: !44, line: 1080, baseType: !717, size: 64, offset: 1024)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3101, file: !44, line: 1082, baseType: !3118, size: 64, offset: 1088)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 64)
!3119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3120)
!3120 = !{!3121, !3129, !3130, !3131, !3132, !3133}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3119, file: !44, line: 1315, baseType: !3122)
!3122 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3123, line: 20, baseType: !3124)
!3123 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3123, line: 11, elements: !3125)
!3125 = !{!3126}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3124, file: !3123, line: 12, baseType: !3127)
!3127 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !441, line: 33, baseType: !3128)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 31, elements: !443)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3119, file: !44, line: 1316, baseType: !330, size: 32)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3119, file: !44, line: 1317, baseType: !330, size: 32, offset: 32)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3119, file: !44, line: 1318, baseType: !3118, size: 64, offset: 64)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3119, file: !44, line: 1319, baseType: !543, size: 64, offset: 128)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3119, file: !44, line: 1320, baseType: !556, size: 128, align: 64, offset: 192)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3101, file: !44, line: 1084, baseType: !347, size: 64, offset: 1152)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3101, file: !44, line: 1085, baseType: !347, size: 64, offset: 1216)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3101, file: !44, line: 1087, baseType: !3137, size: 64, offset: 1280)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3139)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3140)
!3140 = !{!3141, !3145}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3139, file: !44, line: 1012, baseType: !3142, size: 64)
!3142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3143, size: 64)
!3143 = !DISubroutineType(types: !3144)
!3144 = !{null, !3100, !3100}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3139, file: !44, line: 1013, baseType: !3146, size: 64, offset: 64)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 64)
!3147 = !DISubroutineType(types: !3148)
!3148 = !{null, !3100}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3101, file: !44, line: 1088, baseType: !3150, size: 64, offset: 1344)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3152)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3153)
!3153 = !{!3154, !3158, !3162, !3163, !3167, !3171, !3175, !3179}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3152, file: !44, line: 1017, baseType: !3155, size: 64)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = !DISubroutineType(types: !3157)
!3157 = !{!3086, !3086}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3152, file: !44, line: 1018, baseType: !3159, size: 64, offset: 64)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!3160 = !DISubroutineType(types: !3161)
!3161 = !{null, !3086}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3152, file: !44, line: 1019, baseType: !3146, size: 64, offset: 128)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3152, file: !44, line: 1020, baseType: !3164, size: 64, offset: 192)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!3165 = !DISubroutineType(types: !3166)
!3166 = !{!330, !3100, !330}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3152, file: !44, line: 1021, baseType: !3168, size: 64, offset: 256)
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3169, size: 64)
!3169 = !DISubroutineType(types: !3170)
!3170 = !{!676, !3100}
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3152, file: !44, line: 1022, baseType: !3172, size: 64, offset: 320)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!3173 = !DISubroutineType(types: !3174)
!3174 = !{!330, !3100, !330, !310}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3152, file: !44, line: 1023, baseType: !3176, size: 64, offset: 384)
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 64)
!3177 = !DISubroutineType(types: !3178)
!3178 = !{null, !3100, !998}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3152, file: !44, line: 1024, baseType: !3168, size: 64, offset: 448)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3101, file: !44, line: 1097, baseType: !3181, size: 256, offset: 1408)
!3181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3101, file: !44, line: 1089, size: 256, elements: !3182)
!3182 = !{!3183, !3192, !3198}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3181, file: !44, line: 1090, baseType: !3184, size: 256)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3185, line: 10, size: 256, elements: !3186)
!3185 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3186 = !{!3187, !3188, !3191}
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3184, file: !3185, line: 11, baseType: !144, size: 32)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3184, file: !3185, line: 12, baseType: !3189, size: 64, offset: 64)
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3190, size: 64)
!3190 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3185, line: 5, flags: DIFlagFwdDecl)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3184, file: !3185, line: 13, baseType: !307, size: 128, offset: 128)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3181, file: !44, line: 1091, baseType: !3193, size: 64)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3185, line: 17, size: 64, elements: !3194)
!3194 = !{!3195}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3193, file: !3185, line: 18, baseType: !3196, size: 64)
!3196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3197, size: 64)
!3197 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3185, line: 16, flags: DIFlagFwdDecl)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3181, file: !44, line: 1096, baseType: !3199, size: 192)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3181, file: !44, line: 1092, size: 192, elements: !3200)
!3200 = !{!3201, !3202, !3203}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3199, file: !44, line: 1093, baseType: !307, size: 128)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3199, file: !44, line: 1094, baseType: !330, size: 32, offset: 128)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3199, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3025, file: !44, line: 1843, baseType: !3205, size: 64, offset: 1280)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 64)
!3206 = !DISubroutineType(types: !3207)
!3207 = !{!498, !543, !905, !330, !513, !3036, !330}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3025, file: !44, line: 1844, baseType: !1277, size: 64, offset: 1344)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3025, file: !44, line: 1845, baseType: !3210, size: 64, offset: 1408)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{!330, !330}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3025, file: !44, line: 1846, baseType: !3097, size: 64, offset: 1472)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3025, file: !44, line: 1847, baseType: !3215, size: 64, offset: 1536)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 64)
!3216 = !DISubroutineType(types: !3217)
!3217 = !{!498, !2258, !543, !3036, !513, !7}
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3025, file: !44, line: 1848, baseType: !3219, size: 64, offset: 1600)
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 64)
!3220 = !DISubroutineType(types: !3221)
!3221 = !{!498, !543, !3036, !2258, !513, !7}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3025, file: !44, line: 1849, baseType: !3223, size: 64, offset: 1664)
!3223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3224, size: 64)
!3224 = !DISubroutineType(types: !3225)
!3225 = !{!330, !543, !502, !3226, !998}
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3025, file: !44, line: 1850, baseType: !3228, size: 64, offset: 1728)
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 64)
!3229 = !DISubroutineType(types: !3230)
!3230 = !{!502, !543, !330, !717, !717}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3025, file: !44, line: 1852, baseType: !3232, size: 64, offset: 1792)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 64)
!3233 = !DISubroutineType(types: !3234)
!3234 = !{null, !895, !543}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3025, file: !44, line: 1856, baseType: !3236, size: 64, offset: 1856)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!3237 = !DISubroutineType(types: !3238)
!3238 = !{!498, !543, !717, !543, !717, !513, !7}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3025, file: !44, line: 1858, baseType: !3240, size: 64, offset: 1920)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 64)
!3241 = !DISubroutineType(types: !3242)
!3242 = !{!717, !543, !717, !543, !717, !717, !7}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3025, file: !44, line: 1861, baseType: !3089, size: 64, offset: 1984)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3020, file: !44, line: 692, baseType: !848, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !616, file: !44, line: 694, baseType: !3246, size: 64, offset: 2560)
!3246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3247, size: 64)
!3247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3248)
!3248 = !{!3249, !3250, !3251, !3252}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3247, file: !44, line: 1101, baseType: !429)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3247, file: !44, line: 1102, baseType: !307, size: 128)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3247, file: !44, line: 1103, baseType: !307, size: 128, offset: 128)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3247, file: !44, line: 1104, baseType: !307, size: 128, offset: 256)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !616, file: !44, line: 695, baseType: !919, size: 1216, align: 64, offset: 2624)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !616, file: !44, line: 696, baseType: !307, size: 128, offset: 3840)
!3255 = !DIDerivedType(tag: DW_TAG_member, scope: !616, file: !44, line: 697, baseType: !3256, size: 64, offset: 3968)
!3256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !616, file: !44, line: 697, size: 64, elements: !3257)
!3257 = !{!3258, !3259, !3260, !3263, !3264}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3256, file: !44, line: 698, baseType: !2258, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3256, file: !44, line: 699, baseType: !2775, size: 64)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3256, file: !44, line: 700, baseType: !3261, size: 64)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !44, line: 700, flags: DIFlagFwdDecl)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3256, file: !44, line: 701, baseType: !373, size: 64)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3256, file: !44, line: 702, baseType: !7, size: 32)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !616, file: !44, line: 705, baseType: !146, size: 32, offset: 4032)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !616, file: !44, line: 708, baseType: !146, size: 32, offset: 4064)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !616, file: !44, line: 709, baseType: !2857, size: 64, offset: 4096)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !616, file: !44, line: 720, baseType: !136, size: 64, offset: 4160)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !574, file: !571, line: 98, baseType: !3270, size: 256, offset: 448)
!3270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !357, size: 256, elements: !2390)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !574, file: !571, line: 101, baseType: !3272, size: 32, offset: 704)
!3272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3273, line: 25, size: 32, elements: !3274)
!3273 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3274 = !{!3275}
!3275 = !DIDerivedType(tag: DW_TAG_member, scope: !3272, file: !3273, line: 26, baseType: !3276, size: 32)
!3276 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3272, file: !3273, line: 26, size: 32, elements: !3277)
!3277 = !{!3278}
!3278 = !DIDerivedType(tag: DW_TAG_member, scope: !3276, file: !3273, line: 30, baseType: !3279, size: 32)
!3279 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3276, file: !3273, line: 30, size: 32, elements: !3280)
!3280 = !{!3281, !3282}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3279, file: !3273, line: 31, baseType: !429)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3279, file: !3273, line: 32, baseType: !330, size: 32)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !574, file: !571, line: 102, baseType: !2874, size: 64, offset: 768)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !574, file: !571, line: 103, baseType: !783, size: 64, offset: 832)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !574, file: !571, line: 104, baseType: !347, size: 64, offset: 896)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !574, file: !571, line: 105, baseType: !136, size: 64, offset: 960)
!3287 = !DIDerivedType(tag: DW_TAG_member, scope: !574, file: !571, line: 107, baseType: !3288, size: 128, offset: 1024)
!3288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !574, file: !571, line: 107, size: 128, elements: !3289)
!3289 = !{!3290, !3291}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3288, file: !571, line: 108, baseType: !307, size: 128)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3288, file: !571, line: 109, baseType: !3292, size: 64)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !574, file: !571, line: 111, baseType: !307, size: 128, offset: 1152)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !574, file: !571, line: 112, baseType: !307, size: 128, offset: 1280)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !574, file: !571, line: 120, baseType: !3296, size: 128, offset: 1408)
!3296 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !574, file: !571, line: 116, size: 128, elements: !3297)
!3297 = !{!3298, !3299, !3300}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3296, file: !571, line: 117, baseType: !823, size: 128)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3296, file: !571, line: 118, baseType: !588, size: 128)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3296, file: !571, line: 119, baseType: !556, size: 128, align: 64)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !544, file: !44, line: 922, baseType: !615, size: 64, offset: 256)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !544, file: !44, line: 923, baseType: !3023, size: 64, offset: 320)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !544, file: !44, line: 929, baseType: !429, offset: 384)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !544, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !544, file: !44, line: 931, baseType: !297, size: 64, offset: 448)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !544, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !544, file: !44, line: 933, baseType: !2870, size: 32, offset: 544)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !544, file: !44, line: 934, baseType: !1347, size: 192, offset: 576)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !544, file: !44, line: 935, baseType: !717, size: 64, offset: 768)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !544, file: !44, line: 936, baseType: !3311, size: 192, offset: 832)
!3311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3312)
!3312 = !{!3313, !3314, !3315, !3316, !3317, !3318}
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3311, file: !44, line: 886, baseType: !3122)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3311, file: !44, line: 887, baseType: !1642, size: 64)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3311, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3311, file: !44, line: 889, baseType: !621, size: 32, offset: 96)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3311, file: !44, line: 889, baseType: !621, size: 32, offset: 128)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3311, file: !44, line: 890, baseType: !330, size: 32, offset: 160)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !544, file: !44, line: 937, baseType: !1718, size: 64, offset: 1024)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !544, file: !44, line: 938, baseType: !3321, size: 256, offset: 1088)
!3321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3322)
!3322 = !{!3323, !3324, !3325, !3326, !3327, !3328}
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3321, file: !44, line: 897, baseType: !347, size: 64)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3321, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3321, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3321, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3321, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3321, file: !44, line: 904, baseType: !717, size: 64, offset: 192)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !544, file: !44, line: 940, baseType: !608, size: 64, offset: 1344)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !544, file: !44, line: 945, baseType: !136, size: 64, offset: 1408)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !544, file: !44, line: 949, baseType: !307, size: 128, offset: 1472)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !544, file: !44, line: 950, baseType: !307, size: 128, offset: 1600)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !544, file: !44, line: 952, baseType: !918, size: 64, offset: 1728)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !544, file: !44, line: 953, baseType: !1085, size: 32, offset: 1792)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !544, file: !44, line: 954, baseType: !1085, size: 32, offset: 1824)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !534, file: !492, line: 174, baseType: !540, size: 64, offset: 320)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !534, file: !492, line: 176, baseType: !3338, size: 64, offset: 384)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = !DISubroutineType(types: !3340)
!3340 = !{!330, !543, !422, !533, !1157}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !522, file: !492, line: 90, baseType: !517, size: 64, offset: 192)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !522, file: !492, line: 91, baseType: !3343, size: 64, offset: 256)
!3343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !482, file: !417, line: 143, baseType: !3345, size: 64, offset: 256)
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 64)
!3346 = !DISubroutineType(types: !3347)
!3347 = !{!3348, !422}
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 64)
!3349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3350)
!3350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3351)
!3351 = !{!3352, !3353, !3357, !3361, !3367, !3371}
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3350, file: !61, line: 40, baseType: !60, size: 32)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3350, file: !61, line: 41, baseType: !3354, size: 64, offset: 64)
!3354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3355, size: 64)
!3355 = !DISubroutineType(types: !3356)
!3356 = !{!676}
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3350, file: !61, line: 42, baseType: !3358, size: 64, offset: 128)
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 64)
!3359 = !DISubroutineType(types: !3360)
!3360 = !{!136}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3350, file: !61, line: 43, baseType: !3362, size: 64, offset: 192)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = !DISubroutineType(types: !3364)
!3364 = !{!2287, !3365}
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 64)
!3366 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3350, file: !61, line: 44, baseType: !3368, size: 64, offset: 256)
!3368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3369, size: 64)
!3369 = !DISubroutineType(types: !3370)
!3370 = !{!2287}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3350, file: !61, line: 45, baseType: !654, size: 64, offset: 320)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !482, file: !417, line: 144, baseType: !3373, size: 64, offset: 320)
!3373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3374, size: 64)
!3374 = !DISubroutineType(types: !3375)
!3375 = !{!2287, !422}
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !482, file: !417, line: 145, baseType: !3377, size: 64, offset: 384)
!3377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3378, size: 64)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{null, !422, !3380, !3381}
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !416, file: !417, line: 70, baseType: !3383, size: 64, offset: 384)
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 64)
!3384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !803, line: 123, size: 1024, elements: !3385)
!3385 = !{!3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3514, !3515, !3516, !3517, !3518}
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3384, file: !803, line: 124, baseType: !931, size: 32)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3384, file: !803, line: 125, baseType: !931, size: 32, offset: 32)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3384, file: !803, line: 135, baseType: !3383, size: 64, offset: 64)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3384, file: !803, line: 136, baseType: !402, size: 64, offset: 128)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3384, file: !803, line: 138, baseType: !944, size: 192, align: 64, offset: 192)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3384, file: !803, line: 140, baseType: !2287, size: 64, offset: 384)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3384, file: !803, line: 141, baseType: !7, size: 32, offset: 448)
!3393 = !DIDerivedType(tag: DW_TAG_member, scope: !3384, file: !803, line: 142, baseType: !3394, size: 256, offset: 512)
!3394 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3384, file: !803, line: 142, size: 256, elements: !3395)
!3395 = !{!3396, !3442, !3446}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3394, file: !803, line: 143, baseType: !3397, size: 192)
!3397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !803, line: 91, size: 192, elements: !3398)
!3398 = !{!3399, !3400, !3401}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3397, file: !803, line: 92, baseType: !347, size: 64)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3397, file: !803, line: 94, baseType: !940, size: 64, offset: 64)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3397, file: !803, line: 100, baseType: !3402, size: 64, offset: 128)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !803, line: 180, size: 704, elements: !3404)
!3404 = !{!3405, !3406, !3407, !3414, !3415, !3416, !3440, !3441}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3403, file: !803, line: 182, baseType: !3383, size: 64)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3403, file: !803, line: 183, baseType: !7, size: 32, offset: 64)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3403, file: !803, line: 186, baseType: !3408, size: 192, offset: 128)
!3408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3409, line: 19, size: 192, elements: !3410)
!3409 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3410 = !{!3411, !3412, !3413}
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3408, file: !3409, line: 20, baseType: !923, size: 128)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3408, file: !3409, line: 21, baseType: !7, size: 32, offset: 128)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3408, file: !3409, line: 22, baseType: !7, size: 32, offset: 160)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3403, file: !803, line: 187, baseType: !144, size: 32, offset: 320)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3403, file: !803, line: 188, baseType: !144, size: 32, offset: 352)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3403, file: !803, line: 189, baseType: !3417, size: 64, offset: 384)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !803, line: 168, size: 320, elements: !3419)
!3419 = !{!3420, !3424, !3428, !3432, !3436}
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3418, file: !803, line: 169, baseType: !3421, size: 64)
!3421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3422, size: 64)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!330, !895, !3402}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3418, file: !803, line: 171, baseType: !3425, size: 64, offset: 64)
!3425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3426, size: 64)
!3426 = !DISubroutineType(types: !3427)
!3427 = !{!330, !3383, !402, !508}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3418, file: !803, line: 173, baseType: !3429, size: 64, offset: 128)
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!3430 = !DISubroutineType(types: !3431)
!3431 = !{!330, !3383}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3418, file: !803, line: 174, baseType: !3433, size: 64, offset: 192)
!3433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3434, size: 64)
!3434 = !DISubroutineType(types: !3435)
!3435 = !{!330, !3383, !3383, !402}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3418, file: !803, line: 176, baseType: !3437, size: 64, offset: 256)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DISubroutineType(types: !3439)
!3439 = !{!330, !895, !3383, !3402}
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3403, file: !803, line: 192, baseType: !307, size: 128, offset: 448)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3403, file: !803, line: 194, baseType: !1652, size: 128, offset: 576)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3394, file: !803, line: 144, baseType: !3443, size: 64)
!3443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !803, line: 103, size: 64, elements: !3444)
!3444 = !{!3445}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3443, file: !803, line: 104, baseType: !3383, size: 64)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3394, file: !803, line: 145, baseType: !3447, size: 256)
!3447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !803, line: 107, size: 256, elements: !3448)
!3448 = !{!3449, !3509, !3512, !3513}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3447, file: !803, line: 108, baseType: !3450, size: 64)
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3452)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !803, line: 217, size: 768, elements: !3453)
!3453 = !{!3454, !3474, !3478, !3482, !3486, !3490, !3494, !3498, !3499, !3500, !3501, !3505}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3452, file: !803, line: 222, baseType: !3455, size: 64)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DISubroutineType(types: !3457)
!3457 = !{!330, !3458}
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3459, size: 64)
!3459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !803, line: 197, size: 1088, elements: !3460)
!3460 = !{!3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473}
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3459, file: !803, line: 199, baseType: !3383, size: 64)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3459, file: !803, line: 200, baseType: !543, size: 64, offset: 64)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3459, file: !803, line: 201, baseType: !895, size: 64, offset: 128)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3459, file: !803, line: 202, baseType: !136, size: 64, offset: 192)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3459, file: !803, line: 205, baseType: !1347, size: 192, offset: 256)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3459, file: !803, line: 206, baseType: !1347, size: 192, offset: 448)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3459, file: !803, line: 207, baseType: !330, size: 32, offset: 640)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3459, file: !803, line: 208, baseType: !307, size: 128, offset: 704)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3459, file: !803, line: 209, baseType: !373, size: 64, offset: 832)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3459, file: !803, line: 211, baseType: !513, size: 64, offset: 896)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3459, file: !803, line: 212, baseType: !676, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3459, file: !803, line: 213, baseType: !676, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3459, file: !803, line: 214, baseType: !1185, size: 64, offset: 1024)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3452, file: !803, line: 223, baseType: !3475, size: 64, offset: 64)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 64)
!3476 = !DISubroutineType(types: !3477)
!3477 = !{null, !3458}
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3452, file: !803, line: 236, baseType: !3479, size: 64, offset: 128)
!3479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3480, size: 64)
!3480 = !DISubroutineType(types: !3481)
!3481 = !{!330, !895, !136}
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3452, file: !803, line: 238, baseType: !3483, size: 64, offset: 192)
!3483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3484, size: 64)
!3484 = !DISubroutineType(types: !3485)
!3485 = !{!136, !895, !3036}
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3452, file: !803, line: 239, baseType: !3487, size: 64, offset: 256)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DISubroutineType(types: !3489)
!3489 = !{!136, !895, !136, !3036}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3452, file: !803, line: 240, baseType: !3491, size: 64, offset: 320)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = !DISubroutineType(types: !3493)
!3493 = !{null, !895, !136}
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3452, file: !803, line: 242, baseType: !3495, size: 64, offset: 384)
!3495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3496, size: 64)
!3496 = !DISubroutineType(types: !3497)
!3497 = !{!498, !3458, !373, !513, !717}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3452, file: !803, line: 252, baseType: !513, size: 64, offset: 448)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3452, file: !803, line: 259, baseType: !676, size: 8, offset: 512)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3452, file: !803, line: 260, baseType: !3495, size: 64, offset: 576)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3452, file: !803, line: 263, baseType: !3502, size: 64, offset: 640)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{!3065, !3458, !3066}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3452, file: !803, line: 266, baseType: !3506, size: 64, offset: 704)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DISubroutineType(types: !3508)
!3508 = !{!330, !3458, !1157}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3447, file: !803, line: 109, baseType: !3510, size: 64, offset: 64)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !803, line: 31, flags: DIFlagFwdDecl)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3447, file: !803, line: 110, baseType: !717, size: 64, offset: 128)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3447, file: !803, line: 111, baseType: !3383, size: 64, offset: 192)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3384, file: !803, line: 148, baseType: !136, size: 64, offset: 768)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3384, file: !803, line: 154, baseType: !608, size: 64, offset: 832)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3384, file: !803, line: 156, baseType: !362, size: 16, offset: 896)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3384, file: !803, line: 157, baseType: !508, size: 16, offset: 912)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3384, file: !803, line: 158, baseType: !3519, size: 64, offset: 960)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 64)
!3520 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !803, line: 32, flags: DIFlagFwdDecl)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !416, file: !417, line: 71, baseType: !3522, size: 32, offset: 448)
!3522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3523, line: 19, size: 32, elements: !3524)
!3523 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3524 = !{!3525}
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3522, file: !3523, line: 20, baseType: !1404, size: 32)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !416, file: !417, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !416, file: !417, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !416, file: !417, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !416, file: !417, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !416, file: !417, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !413, file: !73, line: 463, baseType: !412, size: 64, offset: 512)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !413, file: !73, line: 465, baseType: !3533, size: 64, offset: 576)
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 64)
!3534 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !413, file: !73, line: 467, baseType: !402, size: 64, offset: 640)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !413, file: !73, line: 468, baseType: !3537, size: 64, offset: 704)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3539)
!3539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3540)
!3540 = !{!3541, !3542, !3543, !3547, !3552, !3556}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3539, file: !73, line: 88, baseType: !402, size: 64)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3539, file: !73, line: 89, baseType: !519, size: 64, offset: 64)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3539, file: !73, line: 90, baseType: !3544, size: 64, offset: 128)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!330, !412, !465}
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3539, file: !73, line: 91, baseType: !3548, size: 64, offset: 192)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{!373, !412, !3551, !3380, !3381}
!3551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3539, file: !73, line: 93, baseType: !3553, size: 64, offset: 256)
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 64)
!3554 = !DISubroutineType(types: !3555)
!3555 = !{null, !412}
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3539, file: !73, line: 95, baseType: !3557, size: 64, offset: 320)
!3557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3558, size: 64)
!3558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3559)
!3559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3560)
!3560 = !{!3561, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586}
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3559, file: !80, line: 279, baseType: !3562, size: 64)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3563, size: 64)
!3563 = !DISubroutineType(types: !3564)
!3564 = !{!330, !412}
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3559, file: !80, line: 280, baseType: !3553, size: 64, offset: 64)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3559, file: !80, line: 281, baseType: !3562, size: 64, offset: 128)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3559, file: !80, line: 282, baseType: !3562, size: 64, offset: 192)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3559, file: !80, line: 283, baseType: !3562, size: 64, offset: 256)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3559, file: !80, line: 284, baseType: !3562, size: 64, offset: 320)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3559, file: !80, line: 285, baseType: !3562, size: 64, offset: 384)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3559, file: !80, line: 286, baseType: !3562, size: 64, offset: 448)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3559, file: !80, line: 287, baseType: !3562, size: 64, offset: 512)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3559, file: !80, line: 288, baseType: !3562, size: 64, offset: 576)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3559, file: !80, line: 289, baseType: !3562, size: 64, offset: 640)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3559, file: !80, line: 290, baseType: !3562, size: 64, offset: 704)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3559, file: !80, line: 291, baseType: !3562, size: 64, offset: 768)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3559, file: !80, line: 292, baseType: !3562, size: 64, offset: 832)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3559, file: !80, line: 293, baseType: !3562, size: 64, offset: 896)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3559, file: !80, line: 294, baseType: !3562, size: 64, offset: 960)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3559, file: !80, line: 295, baseType: !3562, size: 64, offset: 1024)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3559, file: !80, line: 296, baseType: !3562, size: 64, offset: 1088)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3559, file: !80, line: 297, baseType: !3562, size: 64, offset: 1152)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3559, file: !80, line: 298, baseType: !3562, size: 64, offset: 1216)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3559, file: !80, line: 299, baseType: !3562, size: 64, offset: 1280)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3559, file: !80, line: 300, baseType: !3562, size: 64, offset: 1344)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3559, file: !80, line: 301, baseType: !3562, size: 64, offset: 1408)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !413, file: !73, line: 470, baseType: !405, size: 64, offset: 768)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !413, file: !73, line: 471, baseType: !3589, size: 64, offset: 832)
!3589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !413, file: !73, line: 473, baseType: !136, size: 64, offset: 896)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !413, file: !73, line: 475, baseType: !136, size: 64, offset: 960)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !413, file: !73, line: 480, baseType: !1347, size: 192, offset: 1024)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !413, file: !73, line: 484, baseType: !3594, size: 576, offset: 1216)
!3594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3595)
!3595 = !{!3596, !3597, !3598, !3599, !3600, !3601}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3594, file: !73, line: 362, baseType: !307, size: 128)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3594, file: !73, line: 363, baseType: !307, size: 128, offset: 128)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3594, file: !73, line: 364, baseType: !307, size: 128, offset: 256)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3594, file: !73, line: 365, baseType: !307, size: 128, offset: 384)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3594, file: !73, line: 366, baseType: !676, size: 8, offset: 512)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3594, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !413, file: !73, line: 485, baseType: !3603, size: 2304, offset: 1792)
!3603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3604)
!3604 = !{!3605, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3704, !3708}
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3603, file: !80, line: 566, baseType: !3606, size: 32)
!3606 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3607)
!3607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3608)
!3608 = !{!3609}
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3607, file: !80, line: 51, baseType: !330, size: 32)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3603, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3603, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3603, file: !80, line: 569, baseType: !676, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3603, file: !80, line: 570, baseType: !676, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3603, file: !80, line: 571, baseType: !676, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3603, file: !80, line: 572, baseType: !676, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3603, file: !80, line: 573, baseType: !676, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3603, file: !80, line: 574, baseType: !676, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3603, file: !80, line: 575, baseType: !676, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3603, file: !80, line: 576, baseType: !676, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3603, file: !80, line: 577, baseType: !144, size: 32, offset: 64)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3603, file: !80, line: 578, baseType: !429, offset: 96)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3603, file: !80, line: 580, baseType: !307, size: 128, offset: 128)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3603, file: !80, line: 581, baseType: !1673, size: 192, offset: 256)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3603, file: !80, line: 582, baseType: !3625, size: 64, offset: 448)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 64)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3627, line: 43, size: 1472, elements: !3628)
!3627 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3628 = !{!3629, !3630, !3631, !3632, !3633, !3636, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661}
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3626, file: !3627, line: 44, baseType: !402, size: 64)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3626, file: !3627, line: 45, baseType: !330, size: 32, offset: 64)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3626, file: !3627, line: 46, baseType: !307, size: 128, offset: 128)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3626, file: !3627, line: 47, baseType: !429, offset: 256)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3626, file: !3627, line: 48, baseType: !3634, size: 64, offset: 256)
!3634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3635, size: 64)
!3635 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3626, file: !3627, line: 49, baseType: !3637, size: 320, offset: 320)
!3637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3638, line: 11, size: 320, elements: !3639)
!3638 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3639 = !{!3640, !3641, !3642, !3647}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3637, file: !3638, line: 16, baseType: !823, size: 128)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3637, file: !3638, line: 17, baseType: !347, size: 64, offset: 128)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3637, file: !3638, line: 18, baseType: !3643, size: 64, offset: 192)
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3644, size: 64)
!3644 = !DISubroutineType(types: !3645)
!3645 = !{null, !3646}
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3637, size: 64)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3637, file: !3638, line: 19, baseType: !144, size: 32, offset: 256)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3626, file: !3627, line: 50, baseType: !347, size: 64, offset: 640)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3626, file: !3627, line: 51, baseType: !1474, size: 64, offset: 704)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3626, file: !3627, line: 52, baseType: !1474, size: 64, offset: 768)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3626, file: !3627, line: 53, baseType: !1474, size: 64, offset: 832)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3626, file: !3627, line: 54, baseType: !1474, size: 64, offset: 896)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3626, file: !3627, line: 55, baseType: !1474, size: 64, offset: 960)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3626, file: !3627, line: 56, baseType: !347, size: 64, offset: 1024)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3626, file: !3627, line: 57, baseType: !347, size: 64, offset: 1088)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3626, file: !3627, line: 58, baseType: !347, size: 64, offset: 1152)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3626, file: !3627, line: 59, baseType: !347, size: 64, offset: 1216)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3626, file: !3627, line: 60, baseType: !347, size: 64, offset: 1280)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3626, file: !3627, line: 61, baseType: !412, size: 64, offset: 1344)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3626, file: !3627, line: 62, baseType: !676, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3626, file: !3627, line: 63, baseType: !676, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3603, file: !80, line: 583, baseType: !676, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3603, file: !80, line: 584, baseType: !676, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3603, file: !80, line: 585, baseType: !676, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3603, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3603, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3603, file: !80, line: 592, baseType: !1466, size: 512, offset: 576)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3603, file: !80, line: 593, baseType: !608, size: 64, offset: 1088)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3603, file: !80, line: 594, baseType: !293, size: 256, offset: 1152)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3603, file: !80, line: 595, baseType: !1652, size: 128, offset: 1408)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3603, file: !80, line: 596, baseType: !3634, size: 64, offset: 1536)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3603, file: !80, line: 597, baseType: !931, size: 32, offset: 1600)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3603, file: !80, line: 598, baseType: !931, size: 32, offset: 1632)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3603, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3603, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3603, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3603, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3603, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3603, file: !80, line: 604, baseType: !676, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3603, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3603, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3603, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3603, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3603, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3603, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3603, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3603, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3603, file: !80, line: 613, baseType: !330, size: 32, offset: 1792)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3603, file: !80, line: 614, baseType: !330, size: 32, offset: 1824)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3603, file: !80, line: 615, baseType: !608, size: 64, offset: 1856)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3603, file: !80, line: 616, baseType: !608, size: 64, offset: 1920)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3603, file: !80, line: 617, baseType: !608, size: 64, offset: 1984)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3603, file: !80, line: 618, baseType: !608, size: 64, offset: 2048)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3603, file: !80, line: 620, baseType: !3695, size: 64, offset: 2112)
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3696, size: 64)
!3696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3697)
!3697 = !{!3698, !3699, !3700, !3701}
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3696, file: !80, line: 537, baseType: !429)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3696, file: !80, line: 538, baseType: !7, size: 32)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3696, file: !80, line: 540, baseType: !307, size: 128, offset: 64)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3696, file: !80, line: 543, baseType: !3702, size: 64, offset: 192)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 64)
!3703 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3603, file: !80, line: 621, baseType: !3705, size: 64, offset: 2176)
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3706, size: 64)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{null, !412, !1615}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3603, file: !80, line: 622, baseType: !3709, size: 64, offset: 2240)
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3710, size: 64)
!3710 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !413, file: !73, line: 486, baseType: !3712, size: 64, offset: 4096)
!3712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3713, size: 64)
!3713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3714)
!3714 = !{!3715, !3716, !3717, !3721, !3722, !3723}
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3713, file: !80, line: 643, baseType: !3559, size: 1472)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3713, file: !80, line: 644, baseType: !3562, size: 64, offset: 1472)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3713, file: !80, line: 645, baseType: !3718, size: 64, offset: 1536)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 64)
!3719 = !DISubroutineType(types: !3720)
!3720 = !{null, !412, !676}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3713, file: !80, line: 646, baseType: !3562, size: 64, offset: 1600)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3713, file: !80, line: 647, baseType: !3553, size: 64, offset: 1664)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3713, file: !80, line: 648, baseType: !3553, size: 64, offset: 1728)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !413, file: !73, line: 493, baseType: !3725, size: 64, offset: 4160)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !73, line: 493, flags: DIFlagFwdDecl)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !413, file: !73, line: 499, baseType: !307, size: 128, offset: 4224)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !413, file: !73, line: 502, baseType: !3729, size: 64, offset: 4352)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3731)
!3731 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !413, file: !73, line: 504, baseType: !3733, size: 64, offset: 4416)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !413, file: !73, line: 505, baseType: !608, size: 64, offset: 4480)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !413, file: !73, line: 510, baseType: !608, size: 64, offset: 4544)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !413, file: !73, line: 511, baseType: !3737, size: 64, offset: 4608)
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3739)
!3739 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !413, file: !73, line: 513, baseType: !3741, size: 64, offset: 4672)
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3742, size: 64)
!3742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3743)
!3743 = !{!3744, !3745}
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3742, file: !73, line: 293, baseType: !7, size: 32)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3742, file: !73, line: 294, baseType: !347, size: 64, offset: 64)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !413, file: !73, line: 515, baseType: !307, size: 128, offset: 4736)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !413, file: !73, line: 526, baseType: !3748, offset: 4864)
!3748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3749, line: 5, elements: !443)
!3749 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !413, file: !73, line: 528, baseType: !3751, size: 64, offset: 4864)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3753, line: 14, flags: DIFlagFwdDecl)
!3753 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !413, file: !73, line: 529, baseType: !3755, size: 64, offset: 4928)
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 64)
!3756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3757, line: 17, size: 192, elements: !3758)
!3757 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3758 = !{!3759, !3760, !3843}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3756, file: !3757, line: 18, baseType: !3755, size: 64)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3756, file: !3757, line: 19, baseType: !3761, size: 64, offset: 64)
!3761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3762, size: 64)
!3762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3763)
!3763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3757, line: 110, size: 1152, elements: !3764)
!3764 = !{!3765, !3769, !3773, !3779, !3785, !3789, !3793, !3798, !3802, !3803, !3807, !3811, !3815, !3826, !3827, !3828, !3829, !3839}
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3763, file: !3757, line: 111, baseType: !3766, size: 64)
!3766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3767, size: 64)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!3755, !3755}
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3763, file: !3757, line: 112, baseType: !3770, size: 64, offset: 64)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = !DISubroutineType(types: !3772)
!3772 = !{null, !3755}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3763, file: !3757, line: 113, baseType: !3774, size: 64, offset: 128)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!3775 = !DISubroutineType(types: !3776)
!3776 = !{!676, !3777}
!3777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3778, size: 64)
!3778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3756)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3763, file: !3757, line: 114, baseType: !3780, size: 64, offset: 192)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{!2287, !3777, !3783}
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !413)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3763, file: !3757, line: 116, baseType: !3786, size: 64, offset: 256)
!3786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3787, size: 64)
!3787 = !DISubroutineType(types: !3788)
!3788 = !{!676, !3777, !402}
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3763, file: !3757, line: 118, baseType: !3790, size: 64, offset: 320)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = !DISubroutineType(types: !3792)
!3792 = !{!330, !3777, !402, !7, !136, !513}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3763, file: !3757, line: 123, baseType: !3794, size: 64, offset: 384)
!3794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3795, size: 64)
!3795 = !DISubroutineType(types: !3796)
!3796 = !{!330, !3777, !402, !3797, !513}
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3763, file: !3757, line: 126, baseType: !3799, size: 64, offset: 448)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = !DISubroutineType(types: !3801)
!3801 = !{!402, !3777}
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3763, file: !3757, line: 127, baseType: !3799, size: 64, offset: 512)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3763, file: !3757, line: 128, baseType: !3804, size: 64, offset: 576)
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 64)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{!3755, !3777}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3763, file: !3757, line: 130, baseType: !3808, size: 64, offset: 640)
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{!3755, !3777, !3755}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3763, file: !3757, line: 133, baseType: !3812, size: 64, offset: 704)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!3755, !3777, !402}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3763, file: !3757, line: 135, baseType: !3816, size: 64, offset: 768)
!3816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3817, size: 64)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{!330, !3777, !402, !402, !7, !7, !3819}
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3757, line: 43, size: 640, elements: !3821)
!3821 = !{!3822, !3823, !3824}
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3820, file: !3757, line: 44, baseType: !3755, size: 64)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3820, file: !3757, line: 45, baseType: !7, size: 32, offset: 64)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3820, file: !3757, line: 46, baseType: !3825, size: 512, offset: 128)
!3825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !608, size: 512, elements: !255)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3763, file: !3757, line: 140, baseType: !3808, size: 64, offset: 832)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3763, file: !3757, line: 143, baseType: !3804, size: 64, offset: 896)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3763, file: !3757, line: 145, baseType: !3766, size: 64, offset: 960)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3763, file: !3757, line: 146, baseType: !3830, size: 64, offset: 1024)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3831 = !DISubroutineType(types: !3832)
!3832 = !{!330, !3777, !3833}
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3757, line: 29, size: 128, elements: !3835)
!3835 = !{!3836, !3837, !3838}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3834, file: !3757, line: 30, baseType: !7, size: 32)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3834, file: !3757, line: 31, baseType: !7, size: 32, offset: 32)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3834, file: !3757, line: 32, baseType: !3777, size: 64, offset: 64)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3763, file: !3757, line: 148, baseType: !3840, size: 64, offset: 1088)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!330, !3777, !412}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3756, file: !3757, line: 20, baseType: !412, size: 64, offset: 128)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !413, file: !73, line: 534, baseType: !699, size: 32, offset: 4992)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !413, file: !73, line: 535, baseType: !144, size: 32, offset: 5024)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !413, file: !73, line: 537, baseType: !429, offset: 5056)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !413, file: !73, line: 538, baseType: !307, size: 128, offset: 5056)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !413, file: !73, line: 540, baseType: !3849, size: 64, offset: 5184)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3851, line: 54, size: 960, elements: !3852)
!3851 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3852 = !{!3853, !3854, !3855, !3856, !3857, !3858, !3859, !3863, !3867, !3868, !3869, !3870, !3874, !3878, !3879}
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3850, file: !3851, line: 55, baseType: !402, size: 64)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3850, file: !3851, line: 56, baseType: !133, size: 64, offset: 64)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3850, file: !3851, line: 58, baseType: !519, size: 64, offset: 128)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3850, file: !3851, line: 59, baseType: !519, size: 64, offset: 192)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3850, file: !3851, line: 60, baseType: !422, size: 64, offset: 256)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3850, file: !3851, line: 62, baseType: !3544, size: 64, offset: 320)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3850, file: !3851, line: 63, baseType: !3860, size: 64, offset: 384)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = !DISubroutineType(types: !3862)
!3862 = !{!373, !412, !3551}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3850, file: !3851, line: 65, baseType: !3864, size: 64, offset: 448)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{null, !3849}
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3850, file: !3851, line: 66, baseType: !3553, size: 64, offset: 512)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3850, file: !3851, line: 68, baseType: !3562, size: 64, offset: 576)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3850, file: !3851, line: 70, baseType: !3348, size: 64, offset: 640)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3850, file: !3851, line: 71, baseType: !3871, size: 64, offset: 704)
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{!2287, !412}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3850, file: !3851, line: 73, baseType: !3875, size: 64, offset: 768)
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 64)
!3876 = !DISubroutineType(types: !3877)
!3877 = !{null, !412, !3380, !3381}
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3850, file: !3851, line: 75, baseType: !3557, size: 64, offset: 832)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3850, file: !3851, line: 77, baseType: !3880, size: 64, offset: 896)
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 64)
!3881 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !407, line: 111, flags: DIFlagFwdDecl)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !413, file: !73, line: 541, baseType: !519, size: 64, offset: 5248)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !413, file: !73, line: 543, baseType: !3553, size: 64, offset: 5312)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !413, file: !73, line: 544, baseType: !3885, size: 64, offset: 5376)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3886, size: 64)
!3886 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !413, file: !73, line: 545, baseType: !3888, size: 64, offset: 5440)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !413, file: !73, line: 547, baseType: !676, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !413, file: !73, line: 548, baseType: !676, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !413, file: !73, line: 549, baseType: !676, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !413, file: !73, line: 550, baseType: !676, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !406, file: !407, line: 86, baseType: !519, size: 64, offset: 192)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !406, file: !407, line: 87, baseType: !519, size: 64, offset: 256)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !406, file: !407, line: 88, baseType: !519, size: 64, offset: 320)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !406, file: !407, line: 90, baseType: !3898, size: 64, offset: 384)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = !DISubroutineType(types: !3900)
!3900 = !{!330, !412, !3589}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !406, file: !407, line: 91, baseType: !3544, size: 64, offset: 448)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !406, file: !407, line: 92, baseType: !3562, size: 64, offset: 512)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !406, file: !407, line: 93, baseType: !3553, size: 64, offset: 576)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !406, file: !407, line: 94, baseType: !3562, size: 64, offset: 640)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !406, file: !407, line: 95, baseType: !3553, size: 64, offset: 704)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !406, file: !407, line: 97, baseType: !3562, size: 64, offset: 768)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !406, file: !407, line: 98, baseType: !3562, size: 64, offset: 832)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !406, file: !407, line: 100, baseType: !3909, size: 64, offset: 896)
!3909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3910, size: 64)
!3910 = !DISubroutineType(types: !3911)
!3911 = !{!330, !412, !3606}
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !406, file: !407, line: 101, baseType: !3562, size: 64, offset: 960)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !406, file: !407, line: 103, baseType: !3562, size: 64, offset: 1024)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !406, file: !407, line: 105, baseType: !3562, size: 64, offset: 1088)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !406, file: !407, line: 107, baseType: !3557, size: 64, offset: 1152)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !406, file: !407, line: 109, baseType: !3917, size: 64, offset: 1216)
!3917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 64)
!3918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3919)
!3919 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !407, line: 109, flags: DIFlagFwdDecl)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !406, file: !407, line: 111, baseType: !3880, size: 64, offset: 1280)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !406, file: !407, line: 112, baseType: !829, offset: 1344)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !406, file: !407, line: 114, baseType: !676, size: 8, offset: 1344)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !399, file: !67, line: 99, baseType: !133, size: 64, offset: 128)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !399, file: !67, line: 100, baseType: !402, size: 64, offset: 192)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !399, file: !67, line: 102, baseType: !676, size: 8, offset: 256)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !399, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !399, file: !67, line: 105, baseType: !3928, size: 64, offset: 320)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3930)
!3930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3931, line: 262, size: 1600, elements: !3932)
!3931 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3932 = !{!3933, !3934, !3935, !3939}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3930, file: !3931, line: 263, baseType: !2860, size: 256)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3930, file: !3931, line: 264, baseType: !2860, size: 256, offset: 256)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3930, file: !3931, line: 265, baseType: !3936, size: 1024, offset: 512)
!3936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 1024, elements: !3937)
!3937 = !{!3938}
!3938 = !DISubrange(count: 128)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3930, file: !3931, line: 266, baseType: !2287, size: 64, offset: 1536)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !399, file: !67, line: 106, baseType: !3941, size: 64, offset: 384)
!3941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3942, size: 64)
!3942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3943)
!3943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3931, line: 210, size: 256, elements: !3944)
!3944 = !{!3945, !3949, !3951, !3952}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3943, file: !3931, line: 211, baseType: !3946, size: 72)
!3946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 72, elements: !3947)
!3947 = !{!3948}
!3948 = !DISubrange(count: 9)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3943, file: !3931, line: 212, baseType: !3950, size: 64, offset: 128)
!3950 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3931, line: 14, baseType: !347)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3943, file: !3931, line: 213, baseType: !146, size: 32, offset: 192)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3943, file: !3931, line: 214, baseType: !146, size: 32, offset: 224)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !399, file: !67, line: 108, baseType: !3562, size: 64, offset: 448)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !399, file: !67, line: 109, baseType: !3553, size: 64, offset: 512)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !399, file: !67, line: 110, baseType: !3562, size: 64, offset: 576)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !399, file: !67, line: 111, baseType: !3553, size: 64, offset: 640)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !399, file: !67, line: 112, baseType: !3909, size: 64, offset: 704)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !399, file: !67, line: 113, baseType: !3562, size: 64, offset: 768)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !399, file: !67, line: 114, baseType: !519, size: 64, offset: 832)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !399, file: !67, line: 115, baseType: !519, size: 64, offset: 896)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !399, file: !67, line: 117, baseType: !3557, size: 64, offset: 960)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !399, file: !67, line: 118, baseType: !3553, size: 64, offset: 1024)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !399, file: !67, line: 120, baseType: !3964, size: 64, offset: 1088)
!3964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3965, size: 64)
!3965 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "udc_name", scope: !370, file: !290, line: 715, baseType: !373, size: 64, offset: 1728)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !370, file: !290, line: 716, baseType: !307, size: 128, offset: 1792)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "match_existing_only", scope: !370, file: !290, line: 717, baseType: !7, size: 1, offset: 1920, flags: DIFlagBitField, extraData: i64 1920)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "udc_stop", scope: !324, file: !290, line: 324, baseType: !327, size: 64, offset: 576)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "udc_set_speed", scope: !324, file: !290, line: 325, baseType: !3971, size: 64, offset: 640)
!3971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3972, size: 64)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{null, !331, !93}
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "match_ep", scope: !324, file: !290, line: 326, baseType: !3975, size: 64, offset: 704)
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3976, size: 64)
!3976 = !DISubroutineType(types: !3977)
!3977 = !{!3978, !331, !4094, !4095}
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ep", file: !290, line: 226, size: 576, elements: !3980)
!3980 = !{!3981, !3982, !3983, !4065, !4066, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3979, file: !290, line: 227, baseType: !136, size: 64)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3979, file: !290, line: 229, baseType: !402, size: 64, offset: 64)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3979, file: !290, line: 230, baseType: !3984, size: 64, offset: 128)
!3984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!3985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3986)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ep_ops", file: !290, line: 136, size: 704, elements: !3987)
!3987 = !{!3988, !4004, !4008, !4012, !4049, !4050, !4054, !4058, !4062, !4063, !4064}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !3986, file: !290, line: 137, baseType: !3989, size: 64)
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3990, size: 64)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{!330, !3978, !3992}
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3993, size: 64)
!3993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3994)
!3994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_endpoint_descriptor", file: !94, line: 407, size: 72, elements: !3995)
!3995 = !{!3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !3994, file: !94, line: 408, baseType: !356, size: 8)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !3994, file: !94, line: 409, baseType: !356, size: 8, offset: 8)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "bEndpointAddress", scope: !3994, file: !94, line: 411, baseType: !356, size: 8, offset: 16)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !3994, file: !94, line: 412, baseType: !356, size: 8, offset: 24)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "wMaxPacketSize", scope: !3994, file: !94, line: 413, baseType: !359, size: 16, offset: 32)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "bInterval", scope: !3994, file: !94, line: 414, baseType: !356, size: 8, offset: 48)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "bRefresh", scope: !3994, file: !94, line: 418, baseType: !356, size: 8, offset: 56)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "bSynchAddress", scope: !3994, file: !94, line: 419, baseType: !356, size: 8, offset: 64)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !3986, file: !290, line: 139, baseType: !4005, size: 64, offset: 64)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 64)
!4006 = !DISubroutineType(types: !4007)
!4007 = !{!330, !3978}
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !3986, file: !290, line: 140, baseType: !4009, size: 64, offset: 128)
!4009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4010, size: 64)
!4010 = !DISubroutineType(types: !4011)
!4011 = !{null, !3978}
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_request", scope: !3986, file: !290, line: 142, baseType: !4013, size: 64, offset: 192)
!4013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4014 = !DISubroutineType(types: !4015)
!4015 = !{!4016, !3978, !137}
!4016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4017, size: 64)
!4017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_request", file: !290, line: 100, size: 768, elements: !4018)
!4018 = !{!4019, !4020, !4021, !4022, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4044, !4045, !4046, !4047, !4048}
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4017, file: !290, line: 101, baseType: !136, size: 64)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4017, file: !290, line: 102, baseType: !7, size: 32, offset: 64)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !4017, file: !290, line: 103, baseType: !1096, size: 64, offset: 128)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !4017, file: !290, line: 105, baseType: !4023, size: 64, offset: 192)
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4024, size: 64)
!4024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4025, line: 11, size: 256, elements: !4026)
!4025 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4026 = !{!4027, !4028, !4029, !4030, !4031}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4024, file: !4025, line: 12, baseType: !347, size: 64)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4024, file: !4025, line: 13, baseType: !7, size: 32, offset: 64)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4024, file: !4025, line: 14, baseType: !7, size: 32, offset: 96)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4024, file: !4025, line: 15, baseType: !1096, size: 64, offset: 128)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4024, file: !4025, line: 17, baseType: !7, size: 32, offset: 192)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "num_sgs", scope: !4017, file: !290, line: 106, baseType: !7, size: 32, offset: 256)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "num_mapped_sgs", scope: !4017, file: !290, line: 107, baseType: !7, size: 32, offset: 288)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !4017, file: !290, line: 109, baseType: !7, size: 16, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "is_last", scope: !4017, file: !290, line: 110, baseType: !7, size: 1, offset: 336, flags: DIFlagBitField, extraData: i64 320)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "no_interrupt", scope: !4017, file: !290, line: 111, baseType: !7, size: 1, offset: 337, flags: DIFlagBitField, extraData: i64 320)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !4017, file: !290, line: 112, baseType: !7, size: 1, offset: 338, flags: DIFlagBitField, extraData: i64 320)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "short_not_ok", scope: !4017, file: !290, line: 113, baseType: !7, size: 1, offset: 339, flags: DIFlagBitField, extraData: i64 320)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mapped", scope: !4017, file: !290, line: 114, baseType: !7, size: 1, offset: 340, flags: DIFlagBitField, extraData: i64 320)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4017, file: !290, line: 116, baseType: !4041, size: 64, offset: 384)
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 64)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{null, !3978, !4016}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4017, file: !290, line: 118, baseType: !136, size: 64, offset: 448)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4017, file: !290, line: 119, baseType: !307, size: 128, offset: 512)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !4017, file: !290, line: 121, baseType: !7, size: 32, offset: 640)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4017, file: !290, line: 123, baseType: !330, size: 32, offset: 672)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "actual", scope: !4017, file: !290, line: 124, baseType: !7, size: 32, offset: 704)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "free_request", scope: !3986, file: !290, line: 144, baseType: !4041, size: 64, offset: 256)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3986, file: !290, line: 146, baseType: !4051, size: 64, offset: 320)
!4051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4052, size: 64)
!4052 = !DISubroutineType(types: !4053)
!4053 = !{!330, !3978, !4016, !137}
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !3986, file: !290, line: 148, baseType: !4055, size: 64, offset: 384)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{!330, !3978, !4016}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "set_halt", scope: !3986, file: !290, line: 150, baseType: !4059, size: 64, offset: 448)
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = !DISubroutineType(types: !4061)
!4061 = !{!330, !3978, !330}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "set_wedge", scope: !3986, file: !290, line: 151, baseType: !4005, size: 64, offset: 512)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_status", scope: !3986, file: !290, line: 153, baseType: !4005, size: 64, offset: 576)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_flush", scope: !3986, file: !290, line: 154, baseType: !4009, size: 64, offset: 640)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "ep_list", scope: !3979, file: !290, line: 231, baseType: !307, size: 128, offset: 192)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !3979, file: !290, line: 232, baseType: !4067, size: 32, offset: 320)
!4067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ep_caps", file: !290, line: 166, size: 32, elements: !4068)
!4068 = !{!4069, !4070, !4071, !4072, !4073, !4074}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "type_control", scope: !4067, file: !290, line: 167, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "type_iso", scope: !4067, file: !290, line: 168, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "type_bulk", scope: !4067, file: !290, line: 169, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "type_int", scope: !4067, file: !290, line: 170, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "dir_in", scope: !4067, file: !290, line: 171, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "dir_out", scope: !4067, file: !290, line: 172, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "claimed", scope: !3979, file: !290, line: 233, baseType: !676, size: 8, offset: 352)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !3979, file: !290, line: 234, baseType: !676, size: 8, offset: 360)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "maxpacket", scope: !3979, file: !290, line: 235, baseType: !7, size: 16, offset: 368, flags: DIFlagBitField, extraData: i64 368)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "maxpacket_limit", scope: !3979, file: !290, line: 236, baseType: !7, size: 16, offset: 384, flags: DIFlagBitField, extraData: i64 368)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "max_streams", scope: !3979, file: !290, line: 237, baseType: !7, size: 16, offset: 400, flags: DIFlagBitField, extraData: i64 368)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "mult", scope: !3979, file: !290, line: 238, baseType: !7, size: 2, offset: 416, flags: DIFlagBitField, extraData: i64 368)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "maxburst", scope: !3979, file: !290, line: 239, baseType: !7, size: 5, offset: 418, flags: DIFlagBitField, extraData: i64 368)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !3979, file: !290, line: 240, baseType: !1524, size: 8, offset: 424)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3979, file: !290, line: 241, baseType: !3992, size: 64, offset: 448)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "comp_desc", scope: !3979, file: !290, line: 242, baseType: !4085, size: 64, offset: 512)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4087)
!4087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_ep_comp_descriptor", file: !94, line: 689, size: 48, elements: !4088)
!4088 = !{!4089, !4090, !4091, !4092, !4093}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4087, file: !94, line: 690, baseType: !356, size: 8)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4087, file: !94, line: 691, baseType: !356, size: 8, offset: 8)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxBurst", scope: !4087, file: !94, line: 693, baseType: !356, size: 8, offset: 16)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4087, file: !94, line: 694, baseType: !356, size: 8, offset: 24)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "wBytesPerInterval", scope: !4087, file: !94, line: 695, baseType: !359, size: 16, offset: 32)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 64)
!4095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "ep0", scope: !289, file: !290, line: 405, baseType: !3978, size: 64, offset: 384)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "ep_list", scope: !289, file: !290, line: 406, baseType: !307, size: 128, offset: 448)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !289, file: !290, line: 407, baseType: !93, size: 32, offset: 576)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "max_speed", scope: !289, file: !290, line: 408, baseType: !93, size: 32, offset: 608)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !289, file: !290, line: 409, baseType: !103, size: 32, offset: 640)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !289, file: !290, line: 410, baseType: !402, size: 64, offset: 704)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !289, file: !290, line: 411, baseType: !413, size: 5568, offset: 768)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "isoch_delay", scope: !289, file: !290, line: 412, baseType: !7, size: 32, offset: 6336)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "out_epnum", scope: !289, file: !290, line: 413, baseType: !7, size: 32, offset: 6368)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "in_epnum", scope: !289, file: !290, line: 414, baseType: !7, size: 32, offset: 6400)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "mA", scope: !289, file: !290, line: 415, baseType: !7, size: 32, offset: 6432)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "otg_caps", scope: !289, file: !290, line: 416, baseType: !4108, size: 64, offset: 6464)
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 64)
!4109 = !DICompositeType(tag: DW_TAG_structure_type, name: "usb_otg_caps", file: !290, line: 416, flags: DIFlagFwdDecl)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "sg_supported", scope: !289, file: !290, line: 418, baseType: !7, size: 1, offset: 6528, flags: DIFlagBitField, extraData: i64 6528)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "is_otg", scope: !289, file: !290, line: 419, baseType: !7, size: 1, offset: 6529, flags: DIFlagBitField, extraData: i64 6528)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "is_a_peripheral", scope: !289, file: !290, line: 420, baseType: !7, size: 1, offset: 6530, flags: DIFlagBitField, extraData: i64 6528)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "b_hnp_enable", scope: !289, file: !290, line: 421, baseType: !7, size: 1, offset: 6531, flags: DIFlagBitField, extraData: i64 6528)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "a_hnp_support", scope: !289, file: !290, line: 422, baseType: !7, size: 1, offset: 6532, flags: DIFlagBitField, extraData: i64 6528)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "a_alt_hnp_support", scope: !289, file: !290, line: 423, baseType: !7, size: 1, offset: 6533, flags: DIFlagBitField, extraData: i64 6528)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "hnp_polling_support", scope: !289, file: !290, line: 424, baseType: !7, size: 1, offset: 6534, flags: DIFlagBitField, extraData: i64 6528)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "host_request_flag", scope: !289, file: !290, line: 425, baseType: !7, size: 1, offset: 6535, flags: DIFlagBitField, extraData: i64 6528)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_ep_out_aligned_size", scope: !289, file: !290, line: 426, baseType: !7, size: 1, offset: 6536, flags: DIFlagBitField, extraData: i64 6528)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_altset_not_supp", scope: !289, file: !290, line: 427, baseType: !7, size: 1, offset: 6537, flags: DIFlagBitField, extraData: i64 6528)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_stall_not_supp", scope: !289, file: !290, line: 428, baseType: !7, size: 1, offset: 6538, flags: DIFlagBitField, extraData: i64 6528)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_zlp_not_supp", scope: !289, file: !290, line: 429, baseType: !7, size: 1, offset: 6539, flags: DIFlagBitField, extraData: i64 6528)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_avoids_skb_reserve", scope: !289, file: !290, line: 430, baseType: !7, size: 1, offset: 6540, flags: DIFlagBitField, extraData: i64 6528)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "is_selfpowered", scope: !289, file: !290, line: 431, baseType: !7, size: 1, offset: 6541, flags: DIFlagBitField, extraData: i64 6528)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "deactivated", scope: !289, file: !290, line: 432, baseType: !7, size: 1, offset: 6542, flags: DIFlagBitField, extraData: i64 6528)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "connected", scope: !289, file: !290, line: 433, baseType: !7, size: 1, offset: 6543, flags: DIFlagBitField, extraData: i64 6528)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_capable", scope: !289, file: !290, line: 434, baseType: !7, size: 1, offset: 6544, flags: DIFlagBitField, extraData: i64 6528)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !289, file: !290, line: 435, baseType: !330, size: 32, offset: 6560)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !285, file: !286, line: 151, baseType: !429, offset: 6592)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "ep", scope: !285, file: !286, line: 152, baseType: !4130, size: 11520, offset: 6592)
!4130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4131, size: 11520, elements: !3947)
!4131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net2280_ep", file: !286, line: 90, size: 1280, elements: !4132)
!4132 = !{!4133, !4134, !4135, !4136, !4137, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159}
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "ep", scope: !4131, file: !286, line: 91, baseType: !3979, size: 576)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !4131, file: !286, line: 92, baseType: !209, size: 64, offset: 576)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4131, file: !286, line: 93, baseType: !209, size: 64, offset: 640)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !4131, file: !286, line: 94, baseType: !190, size: 64, offset: 704)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !4131, file: !286, line: 95, baseType: !4138, size: 64, offset: 768)
!4138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4139, size: 64)
!4139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net2280_dma", file: !286, line: 79, size: 128, align: 128, elements: !4140)
!4140 = !{!4141, !4143, !4144, !4145}
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "dmacount", scope: !4139, file: !286, line: 80, baseType: !4142, size: 32)
!4142 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !360, line: 31, baseType: !146)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "dmaaddr", scope: !4139, file: !286, line: 81, baseType: !4142, size: 32, offset: 32)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "dmadesc", scope: !4139, file: !286, line: 82, baseType: !4142, size: 32, offset: 64)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved", scope: !4139, file: !286, line: 83, baseType: !4142, size: 32, offset: 96)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "td_dma", scope: !4131, file: !286, line: 96, baseType: !1096, size: 64, offset: 832)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4131, file: !286, line: 97, baseType: !284, size: 64, offset: 896)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "irqs", scope: !4131, file: !286, line: 98, baseType: !347, size: 64, offset: 960)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !4131, file: !286, line: 101, baseType: !307, size: 128, offset: 1024)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4131, file: !286, line: 102, baseType: !3992, size: 64, offset: 1152)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4131, file: !286, line: 103, baseType: !7, size: 8, offset: 1216, flags: DIFlagBitField, extraData: i64 1216)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_size", scope: !4131, file: !286, line: 104, baseType: !7, size: 12, offset: 1224, flags: DIFlagBitField, extraData: i64 1216)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "in_fifo_validate", scope: !4131, file: !286, line: 105, baseType: !7, size: 1, offset: 1236, flags: DIFlagBitField, extraData: i64 1216)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "out_overflow", scope: !4131, file: !286, line: 106, baseType: !7, size: 1, offset: 1237, flags: DIFlagBitField, extraData: i64 1216)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !4131, file: !286, line: 107, baseType: !7, size: 1, offset: 1238, flags: DIFlagBitField, extraData: i64 1216)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "wedged", scope: !4131, file: !286, line: 108, baseType: !7, size: 1, offset: 1239, flags: DIFlagBitField, extraData: i64 1216)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "is_in", scope: !4131, file: !286, line: 109, baseType: !7, size: 1, offset: 1240, flags: DIFlagBitField, extraData: i64 1216)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "is_iso", scope: !4131, file: !286, line: 110, baseType: !7, size: 1, offset: 1241, flags: DIFlagBitField, extraData: i64 1216)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "responded", scope: !4131, file: !286, line: 111, baseType: !7, size: 1, offset: 1242, flags: DIFlagBitField, extraData: i64 1216)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !285, file: !286, line: 153, baseType: !369, size: 64, offset: 18112)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !285, file: !286, line: 154, baseType: !7, size: 1, offset: 18176, flags: DIFlagBitField, extraData: i64 18176)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_stall", scope: !285, file: !286, line: 155, baseType: !7, size: 1, offset: 18177, flags: DIFlagBitField, extraData: i64 18176)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "softconnect", scope: !285, file: !286, line: 156, baseType: !7, size: 1, offset: 18178, flags: DIFlagBitField, extraData: i64 18176)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "got_irq", scope: !285, file: !286, line: 157, baseType: !7, size: 1, offset: 18179, flags: DIFlagBitField, extraData: i64 18176)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !285, file: !286, line: 158, baseType: !7, size: 1, offset: 18180, flags: DIFlagBitField, extraData: i64 18176)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "added", scope: !285, file: !286, line: 159, baseType: !7, size: 1, offset: 18181, flags: DIFlagBitField, extraData: i64 18176)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "u1_enable", scope: !285, file: !286, line: 160, baseType: !7, size: 1, offset: 18182, flags: DIFlagBitField, extraData: i64 18176)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "u2_enable", scope: !285, file: !286, line: 161, baseType: !7, size: 1, offset: 18183, flags: DIFlagBitField, extraData: i64 18176)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "ltm_enable", scope: !285, file: !286, line: 162, baseType: !7, size: 1, offset: 18184, flags: DIFlagBitField, extraData: i64 18176)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_enable", scope: !285, file: !286, line: 163, baseType: !7, size: 1, offset: 18185, flags: DIFlagBitField, extraData: i64 18176)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "addressed_state", scope: !285, file: !286, line: 164, baseType: !7, size: 1, offset: 18186, flags: DIFlagBitField, extraData: i64 18176)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "bug7734_patched", scope: !285, file: !286, line: 165, baseType: !7, size: 1, offset: 18187, flags: DIFlagBitField, extraData: i64 18176)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "chiprev", scope: !285, file: !286, line: 166, baseType: !1036, size: 16, offset: 18192)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_mode", scope: !285, file: !286, line: 167, baseType: !330, size: 32, offset: 18208)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "n_ep", scope: !285, file: !286, line: 168, baseType: !330, size: 32, offset: 18240)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !285, file: !286, line: 169, baseType: !3950, size: 64, offset: 18304)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !285, file: !286, line: 173, baseType: !4178, size: 64, offset: 18368)
!4178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4179, size: 64)
!4179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !4180, line: 309, size: 19264, elements: !4181)
!4180 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!4181 = !{!4182, !4183, !4258, !4259, !4260, !4261, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4289, !4354, !4355, !4356, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387, !4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4425, !4426, !4427, !4428, !4430, !4431, !4433, !4434, !4435, !4436, !4438, !4439, !4440, !4443, !4450, !4451, !4452, !4453, !4454, !4455, !4456}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !4179, file: !4180, line: 310, baseType: !307, size: 128)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4179, file: !4180, line: 311, baseType: !4184, size: 64, offset: 128)
!4184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4185, size: 64)
!4185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !4180, line: 605, size: 8064, elements: !4186)
!4186 = !{!4187, !4188, !4189, !4190, !4191, !4192, !4193, !4208, !4209, !4210, !4234, !4237, !4238, !4242, !4243, !4244, !4245, !4246, !4250, !4251, !4253, !4254, !4255, !4256, !4257}
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4185, file: !4180, line: 606, baseType: !307, size: 128)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4185, file: !4180, line: 607, baseType: !4184, size: 64, offset: 128)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4185, file: !4180, line: 608, baseType: !307, size: 128, offset: 192)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !4185, file: !4180, line: 609, baseType: !307, size: 128, offset: 320)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4185, file: !4180, line: 610, baseType: !4178, size: 64, offset: 448)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !4185, file: !4180, line: 611, baseType: !307, size: 128, offset: 512)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4185, file: !4180, line: 613, baseType: !4194, size: 256, offset: 640)
!4194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4195, size: 256, elements: !248)
!4195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4196, size: 64)
!4196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4197, line: 20, size: 512, elements: !4198)
!4197 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4198 = !{!4199, !4201, !4202, !4203, !4204, !4205, !4206, !4207}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4196, file: !4197, line: 21, baseType: !4200, size: 64)
!4200 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !138, line: 158, baseType: !2285)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4196, file: !4197, line: 22, baseType: !4200, size: 64, offset: 64)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4196, file: !4197, line: 23, baseType: !402, size: 64, offset: 128)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4196, file: !4197, line: 24, baseType: !347, size: 64, offset: 192)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4196, file: !4197, line: 25, baseType: !347, size: 64, offset: 256)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4196, file: !4197, line: 26, baseType: !4195, size: 64, offset: 320)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4196, file: !4197, line: 26, baseType: !4195, size: 64, offset: 384)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4196, file: !4197, line: 26, baseType: !4195, size: 64, offset: 448)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4185, file: !4180, line: 614, baseType: !307, size: 128, offset: 896)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !4185, file: !4180, line: 615, baseType: !4196, size: 512, offset: 1024)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4185, file: !4180, line: 617, baseType: !4211, size: 64, offset: 1536)
!4211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4212, size: 64)
!4212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !4180, line: 731, size: 320, elements: !4213)
!4213 = !{!4214, !4218, !4222, !4226, !4230}
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !4212, file: !4180, line: 732, baseType: !4215, size: 64)
!4215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4216, size: 64)
!4216 = !DISubroutineType(types: !4217)
!4217 = !{!330, !4184}
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !4212, file: !4180, line: 733, baseType: !4219, size: 64, offset: 64)
!4219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4220, size: 64)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{null, !4184}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !4212, file: !4180, line: 734, baseType: !4223, size: 64, offset: 128)
!4223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4224, size: 64)
!4224 = !DISubroutineType(types: !4225)
!4225 = !{!136, !4184, !7, !330}
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4212, file: !4180, line: 735, baseType: !4227, size: 64, offset: 192)
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4228, size: 64)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{!330, !4184, !7, !330, !330, !1586}
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4212, file: !4180, line: 736, baseType: !4231, size: 64, offset: 256)
!4231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4232, size: 64)
!4232 = !DISubroutineType(types: !4233)
!4233 = !{!330, !4184, !7, !330, !330, !144}
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !4185, file: !4180, line: 618, baseType: !4235, size: 64, offset: 1600)
!4235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4236, size: 64)
!4236 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !4180, line: 537, flags: DIFlagFwdDecl)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4185, file: !4180, line: 619, baseType: !136, size: 64, offset: 1664)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !4185, file: !4180, line: 620, baseType: !4239, size: 64, offset: 1728)
!4239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4240, size: 64)
!4240 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !4241, line: 123, flags: DIFlagFwdDecl)
!4241 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4185, file: !4180, line: 622, baseType: !357, size: 8, offset: 1792)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !4185, file: !4180, line: 623, baseType: !357, size: 8, offset: 1800)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !4185, file: !4180, line: 624, baseType: !357, size: 8, offset: 1808)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !4185, file: !4180, line: 625, baseType: !357, size: 8, offset: 1816)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4185, file: !4180, line: 630, baseType: !4247, size: 384, offset: 1824)
!4247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 384, elements: !4248)
!4248 = !{!4249}
!4249 = !DISubrange(count: 48)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !4185, file: !4180, line: 632, baseType: !362, size: 16, offset: 2208)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !4185, file: !4180, line: 633, baseType: !4252, size: 16, offset: 2224)
!4252 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !4180, line: 237, baseType: !362)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !4185, file: !4180, line: 634, baseType: !412, size: 64, offset: 2240)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4185, file: !4180, line: 635, baseType: !413, size: 5568, offset: 2304)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !4185, file: !4180, line: 636, baseType: !533, size: 64, offset: 7872)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !4185, file: !4180, line: 637, baseType: !533, size: 64, offset: 7936)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !4185, file: !4180, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !4179, file: !4180, line: 312, baseType: !4184, size: 64, offset: 192)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4179, file: !4180, line: 314, baseType: !136, size: 64, offset: 256)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !4179, file: !4180, line: 315, baseType: !4239, size: 64, offset: 320)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !4179, file: !4180, line: 316, baseType: !4262, size: 64, offset: 384)
!4262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4263, size: 64)
!4263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !4180, line: 69, size: 832, elements: !4264)
!4264 = !{!4265, !4266, !4267, !4270, !4271}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4263, file: !4180, line: 70, baseType: !4184, size: 64)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4263, file: !4180, line: 71, baseType: !307, size: 128, offset: 64)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4263, file: !4180, line: 72, baseType: !4268, size: 64, offset: 192)
!4268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4269, size: 64)
!4269 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !4180, line: 72, flags: DIFlagFwdDecl)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4263, file: !4180, line: 73, baseType: !357, size: 8, offset: 256)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4263, file: !4180, line: 74, baseType: !416, size: 512, offset: 320)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !4179, file: !4180, line: 318, baseType: !7, size: 32, offset: 448)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4179, file: !4180, line: 319, baseType: !362, size: 16, offset: 480)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4179, file: !4180, line: 320, baseType: !362, size: 16, offset: 496)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !4179, file: !4180, line: 321, baseType: !362, size: 16, offset: 512)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !4179, file: !4180, line: 322, baseType: !362, size: 16, offset: 528)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4179, file: !4180, line: 323, baseType: !7, size: 32, offset: 544)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !4179, file: !4180, line: 324, baseType: !1524, size: 8, offset: 576)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !4179, file: !4180, line: 325, baseType: !1524, size: 8, offset: 584)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !4179, file: !4180, line: 330, baseType: !1524, size: 8, offset: 592)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !4179, file: !4180, line: 331, baseType: !1524, size: 8, offset: 600)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !4179, file: !4180, line: 332, baseType: !1524, size: 8, offset: 608)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !4179, file: !4180, line: 333, baseType: !1524, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !4179, file: !4180, line: 334, baseType: !1524, size: 8, offset: 624)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4179, file: !4180, line: 335, baseType: !1524, size: 8, offset: 632)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !4179, file: !4180, line: 336, baseType: !1036, size: 16, offset: 640)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !4179, file: !4180, line: 337, baseType: !4288, size: 64, offset: 704)
!4288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4179, file: !4180, line: 339, baseType: !4290, size: 64, offset: 768)
!4290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4291, size: 64)
!4291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !4180, line: 858, size: 2048, elements: !4292)
!4292 = !{!4293, !4294, !4295, !4307, !4311, !4315, !4319, !4323, !4324, !4328, !4347, !4348, !4349}
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4291, file: !4180, line: 859, baseType: !307, size: 128)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4291, file: !4180, line: 860, baseType: !402, size: 64, offset: 128)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4291, file: !4180, line: 861, baseType: !4296, size: 64, offset: 192)
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4298)
!4298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3931, line: 38, size: 256, elements: !4299)
!4299 = !{!4300, !4301, !4302, !4303, !4304, !4305, !4306}
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4298, file: !3931, line: 39, baseType: !146, size: 32)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4298, file: !3931, line: 39, baseType: !146, size: 32, offset: 32)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !4298, file: !3931, line: 40, baseType: !146, size: 32, offset: 64)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4298, file: !3931, line: 40, baseType: !146, size: 32, offset: 96)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4298, file: !3931, line: 41, baseType: !146, size: 32, offset: 128)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !4298, file: !3931, line: 41, baseType: !146, size: 32, offset: 160)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4298, file: !3931, line: 42, baseType: !3950, size: 64, offset: 192)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4291, file: !4180, line: 862, baseType: !4308, size: 64, offset: 256)
!4308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4309, size: 64)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{!330, !4178, !4296}
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4291, file: !4180, line: 863, baseType: !4312, size: 64, offset: 320)
!4312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4313, size: 64)
!4313 = !DISubroutineType(types: !4314)
!4314 = !{null, !4178}
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4291, file: !4180, line: 864, baseType: !4316, size: 64, offset: 384)
!4316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4317, size: 64)
!4317 = !DISubroutineType(types: !4318)
!4318 = !{!330, !4178, !3606}
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4291, file: !4180, line: 865, baseType: !4320, size: 64, offset: 448)
!4320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 64)
!4321 = !DISubroutineType(types: !4322)
!4322 = !{!330, !4178}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4291, file: !4180, line: 866, baseType: !4312, size: 64, offset: 512)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !4291, file: !4180, line: 867, baseType: !4325, size: 64, offset: 576)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{!330, !4178, !330}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !4291, file: !4180, line: 868, baseType: !4329, size: 64, offset: 640)
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64)
!4330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4331)
!4331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !4180, line: 795, size: 384, elements: !4332)
!4332 = !{!4333, !4339, !4343, !4344, !4345, !4346}
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4331, file: !4180, line: 797, baseType: !4334, size: 64)
!4334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4335, size: 64)
!4335 = !DISubroutineType(types: !4336)
!4336 = !{!4337, !4178, !4338}
!4337 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !4180, line: 772, baseType: !7)
!4338 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !4180, line: 180, baseType: !7)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4331, file: !4180, line: 801, baseType: !4340, size: 64, offset: 64)
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4341, size: 64)
!4341 = !DISubroutineType(types: !4342)
!4342 = !{!4337, !4178}
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4331, file: !4180, line: 804, baseType: !4340, size: 64, offset: 128)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4331, file: !4180, line: 807, baseType: !4312, size: 64, offset: 192)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4331, file: !4180, line: 808, baseType: !4312, size: 64, offset: 256)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4331, file: !4180, line: 811, baseType: !4312, size: 64, offset: 320)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4291, file: !4180, line: 869, baseType: !519, size: 64, offset: 704)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4291, file: !4180, line: 870, baseType: !399, size: 1152, offset: 768)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4291, file: !4180, line: 871, baseType: !4350, size: 128, offset: 1920)
!4350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !4180, line: 759, size: 128, elements: !4351)
!4351 = !{!4352, !4353}
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4350, file: !4180, line: 760, baseType: !429)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4350, file: !4180, line: 761, baseType: !307, size: 128)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !4179, file: !4180, line: 340, baseType: !608, size: 64, offset: 832)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4179, file: !4180, line: 346, baseType: !3742, size: 128, offset: 896)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !4179, file: !4180, line: 348, baseType: !4357, size: 32, offset: 1024)
!4357 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !4180, line: 155, baseType: !330)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !4179, file: !4180, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !4179, file: !4180, line: 352, baseType: !1524, size: 8, offset: 1064)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !4179, file: !4180, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !4179, file: !4180, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !4179, file: !4180, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !4179, file: !4180, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !4179, file: !4180, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !4179, file: !4180, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !4179, file: !4180, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !4179, file: !4180, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !4179, file: !4180, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !4179, file: !4180, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !4179, file: !4180, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !4179, file: !4180, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !4179, file: !4180, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !4179, file: !4180, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !4179, file: !4180, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !4179, file: !4180, line: 376, baseType: !7, size: 32, offset: 1120)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !4179, file: !4180, line: 377, baseType: !7, size: 32, offset: 1152)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !4179, file: !4180, line: 380, baseType: !4378, size: 64, offset: 1216)
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4379, size: 64)
!4379 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !4180, line: 303, flags: DIFlagFwdDecl)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !4179, file: !4180, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !4179, file: !4180, line: 383, baseType: !330, size: 32, offset: 1312)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !4179, file: !4180, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !4179, file: !4180, line: 387, baseType: !4338, size: 32, offset: 1376)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4179, file: !4180, line: 388, baseType: !413, size: 5568, offset: 1408)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !4179, file: !4180, line: 390, baseType: !330, size: 32, offset: 6976)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4179, file: !4180, line: 396, baseType: !7, size: 32, offset: 7008)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4179, file: !4180, line: 397, baseType: !4388, size: 8704, offset: 7040)
!4388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4196, size: 8704, elements: !4389)
!4389 = !{!4390}
!4390 = !DISubrange(count: 17)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4179, file: !4180, line: 399, baseType: !676, size: 8, offset: 15744)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !4179, file: !4180, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !4179, file: !4180, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !4179, file: !4180, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !4179, file: !4180, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !4179, file: !4180, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !4179, file: !4180, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !4179, file: !4180, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !4179, file: !4180, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !4179, file: !4180, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !4179, file: !4180, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !4179, file: !4180, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !4179, file: !4180, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !4179, file: !4180, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !4179, file: !4180, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !4179, file: !4180, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !4179, file: !4180, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !4179, file: !4180, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !4179, file: !4180, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !4179, file: !4180, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !4179, file: !4180, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !4179, file: !4180, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !4179, file: !4180, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !4179, file: !4180, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !4179, file: !4180, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !4179, file: !4180, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !4179, file: !4180, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !4179, file: !4180, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !4179, file: !4180, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !4179, file: !4180, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !4179, file: !4180, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !4179, file: !4180, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !4179, file: !4180, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !4179, file: !4180, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !4179, file: !4180, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !4179, file: !4180, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !4179, file: !4180, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !4179, file: !4180, line: 450, baseType: !4429, size: 16, offset: 15792)
!4429 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !4180, line: 206, baseType: !362)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !4179, file: !4180, line: 451, baseType: !931, size: 32, offset: 15808)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !4179, file: !4180, line: 453, baseType: !4432, size: 512, offset: 15840)
!4432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 512, elements: !1904)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !4179, file: !4180, line: 454, baseType: !819, size: 64, offset: 16384)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !4179, file: !4180, line: 455, baseType: !533, size: 64, offset: 16448)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !4179, file: !4180, line: 456, baseType: !330, size: 32, offset: 16512)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !4179, file: !4180, line: 457, baseType: !4437, size: 1088, offset: 16576)
!4437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !533, size: 1088, elements: !4389)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !4179, file: !4180, line: 458, baseType: !4437, size: 1088, offset: 17664)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !4179, file: !4180, line: 469, baseType: !519, size: 64, offset: 18752)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !4179, file: !4180, line: 471, baseType: !4441, size: 64, offset: 18816)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 64)
!4442 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !4180, line: 304, flags: DIFlagFwdDecl)
!4443 = !DIDerivedType(tag: DW_TAG_member, scope: !4179, file: !4180, line: 478, baseType: !4444, size: 64, offset: 18880)
!4444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4179, file: !4180, line: 478, size: 64, elements: !4445)
!4445 = !{!4446, !4449}
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4444, file: !4180, line: 479, baseType: !4447, size: 64)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4448 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !4180, line: 305, flags: DIFlagFwdDecl)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4444, file: !4180, line: 480, baseType: !4178, size: 64)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !4179, file: !4180, line: 482, baseType: !1036, size: 16, offset: 18944)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !4179, file: !4180, line: 483, baseType: !1524, size: 8, offset: 18960)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !4179, file: !4180, line: 497, baseType: !1036, size: 16, offset: 18976)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !4179, file: !4180, line: 498, baseType: !2285, size: 64, offset: 19008)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !4179, file: !4180, line: 499, baseType: !513, size: 64, offset: 19072)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !4179, file: !4180, line: 500, baseType: !373, size: 64, offset: 19136)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !4179, file: !4180, line: 502, baseType: !347, size: 64, offset: 19200)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !285, file: !286, line: 174, baseType: !139, size: 64, offset: 18432)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "usb", scope: !285, file: !286, line: 175, baseType: !169, size: 64, offset: 18496)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "usb_ext", scope: !285, file: !286, line: 176, baseType: !219, size: 64, offset: 18560)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "pci", scope: !285, file: !286, line: 177, baseType: !183, size: 64, offset: 18624)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !285, file: !286, line: 178, baseType: !190, size: 64, offset: 18688)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "dep", scope: !285, file: !286, line: 179, baseType: !203, size: 64, offset: 18752)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "epregs", scope: !285, file: !286, line: 180, baseType: !209, size: 64, offset: 18816)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "llregs", scope: !285, file: !286, line: 181, baseType: !231, size: 64, offset: 18880)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "plregs", scope: !285, file: !286, line: 182, baseType: !268, size: 64, offset: 18944)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "requests", scope: !285, file: !286, line: 184, baseType: !4467, size: 64, offset: 19008)
!4467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4468, size: 64)
!4468 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_pool", file: !4469, line: 21, flags: DIFlagFwdDecl)
!4469 = !DIFile(filename: "./include/linux/dmapool.h", directory: "/home/lizy2001/genbc/linux")
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!4471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net2280_request", file: !286, line: 139, size: 1088, elements: !4472)
!4472 = !{!4473, !4474, !4475, !4476, !4477, !4478}
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !4471, file: !286, line: 140, baseType: !4017, size: 768)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "td", scope: !4471, file: !286, line: 141, baseType: !4138, size: 64, offset: 768)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "td_dma", scope: !4471, file: !286, line: 142, baseType: !1096, size: 64, offset: 832)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !4471, file: !286, line: 143, baseType: !307, size: 128, offset: 896)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "mapped", scope: !4471, file: !286, line: 144, baseType: !7, size: 1, offset: 1024, flags: DIFlagBitField, extraData: i64 1024)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4471, file: !286, line: 145, baseType: !7, size: 1, offset: 1025, flags: DIFlagBitField, extraData: i64 1024)
!4479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4480, size: 64)
!4480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4481)
!4481 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !310)
!4482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4481, size: 64)
!4483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4484, size: 64)
!4484 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!4485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4131, size: 64)
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 64)
!4489 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !357)
!4490 = !{!4491, !4543, !4548, !4550, !4555, !4557, !4562, !4567, !4572, !4575, !4578, !4581, !0, !4583, !4588, !4590, !4593, !4596, !4598, !4607, !4610, !4612, !4617, !4622, !4627, !4629, !4631, !4636, !4638, !4640}
!4491 = !DIGlobalVariableExpression(var: !4492, expr: !DIExpression())
!4492 = distinct !DIGlobalVariable(name: "__param_fifo_mode", scope: !2, file: !3, line: 133, type: !4493, isLocal: true, isDefinition: true, align: 64)
!4493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4494)
!4494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !4495, line: 69, size: 320, elements: !4496)
!4495 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!4496 = !{!4497, !4498, !4499, !4515, !4517, !4521, !4522}
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4494, file: !4495, line: 70, baseType: !402, size: 64)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4494, file: !4495, line: 71, baseType: !133, size: 64, offset: 64)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4494, file: !4495, line: 72, baseType: !4500, size: 64, offset: 128)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 64)
!4501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4502)
!4502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !4495, line: 47, size: 256, elements: !4503)
!4503 = !{!4504, !4505, !4510, !4514}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4502, file: !4495, line: 49, baseType: !7, size: 32)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4502, file: !4495, line: 51, baseType: !4506, size: 64, offset: 64)
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4507, size: 64)
!4507 = !DISubroutineType(types: !4508)
!4508 = !{!330, !402, !4509}
!4509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4493, size: 64)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4502, file: !4495, line: 53, baseType: !4511, size: 64, offset: 128)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{!330, !373, !4509}
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4502, file: !4495, line: 55, baseType: !654, size: 64, offset: 192)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !4494, file: !4495, line: 73, baseType: !4516, size: 16, offset: 192)
!4516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1036)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4494, file: !4495, line: 74, baseType: !4518, size: 8, offset: 208)
!4518 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !145, line: 16, baseType: !4519)
!4519 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !147, line: 20, baseType: !4520)
!4520 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4494, file: !4495, line: 75, baseType: !1524, size: 8, offset: 216)
!4522 = !DIDerivedType(tag: DW_TAG_member, scope: !4494, file: !4495, line: 76, baseType: !4523, size: 64, offset: 256)
!4523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4494, file: !4495, line: 76, size: 64, elements: !4524)
!4524 = !{!4525, !4526, !4533}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4523, file: !4495, line: 77, baseType: !136, size: 64)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4523, file: !4495, line: 78, baseType: !4527, size: 64)
!4527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4528, size: 64)
!4528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4529)
!4529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !4495, line: 86, size: 128, elements: !4530)
!4530 = !{!4531, !4532}
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !4529, file: !4495, line: 87, baseType: !7, size: 32)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4529, file: !4495, line: 88, baseType: !373, size: 64, offset: 64)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !4523, file: !4495, line: 79, baseType: !4534, size: 64)
!4534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4535, size: 64)
!4535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4536)
!4536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !4495, line: 92, size: 256, elements: !4537)
!4537 = !{!4538, !4539, !4540, !4541, !4542}
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4536, file: !4495, line: 94, baseType: !7, size: 32)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !4536, file: !4495, line: 95, baseType: !7, size: 32, offset: 32)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4536, file: !4495, line: 96, baseType: !2843, size: 64, offset: 64)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4536, file: !4495, line: 97, baseType: !4500, size: 64, offset: 128)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4536, file: !4495, line: 98, baseType: !136, size: 64, offset: 192)
!4543 = !DIGlobalVariableExpression(var: !4544, expr: !DIExpression())
!4544 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_fifo_modetype235", scope: !2, file: !3, line: 133, type: !4545, isLocal: true, isDefinition: true, align: 8)
!4545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 272, elements: !4546)
!4546 = !{!4547}
!4547 = !DISubrange(count: 34)
!4548 = !DIGlobalVariableExpression(var: !4549, expr: !DIExpression())
!4549 = distinct !DIGlobalVariable(name: "__param_enable_suspend", scope: !2, file: !3, line: 143, type: !4493, isLocal: true, isDefinition: true, align: 64)
!4550 = !DIGlobalVariableExpression(var: !4551, expr: !DIExpression())
!4551 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_enable_suspendtype236", scope: !2, file: !3, line: 143, type: !4552, isLocal: true, isDefinition: true, align: 8)
!4552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 296, elements: !4553)
!4553 = !{!4554}
!4554 = !DISubrange(count: 37)
!4555 = !DIGlobalVariableExpression(var: !4556, expr: !DIExpression())
!4556 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_net2280_pci_driver_init273", scope: !2, file: !3, line: 3873, type: !136, isLocal: true, isDefinition: true)
!4557 = !DIGlobalVariableExpression(var: !4558, expr: !DIExpression())
!4558 = distinct !DIGlobalVariable(name: "__exitcall_net2280_pci_driver_exit", scope: !2, file: !3, line: 3873, type: !4559, isLocal: true, isDefinition: true)
!4559 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4560, line: 117, baseType: !4561)
!4560 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!4562 = !DIGlobalVariableExpression(var: !4563, expr: !DIExpression())
!4563 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description274", scope: !2, file: !3, line: 3875, type: !4564, isLocal: true, isDefinition: true, align: 8)
!4564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 528, elements: !4565)
!4565 = !{!4566}
!4566 = !DISubrange(count: 66)
!4567 = !DIGlobalVariableExpression(var: !4568, expr: !DIExpression())
!4568 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author275", scope: !2, file: !3, line: 3876, type: !4569, isLocal: true, isDefinition: true, align: 8)
!4569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 240, elements: !4570)
!4570 = !{!4571}
!4571 = !DISubrange(count: 30)
!4572 = !DIGlobalVariableExpression(var: !4573, expr: !DIExpression())
!4573 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file276", scope: !2, file: !3, line: 3877, type: !4574, isLocal: true, isDefinition: true, align: 8)
!4574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 352, elements: !1323)
!4575 = !DIGlobalVariableExpression(var: !4576, expr: !DIExpression())
!4576 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license277", scope: !2, file: !3, line: 3877, type: !4577, isLocal: true, isDefinition: true, align: 8)
!4577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 160, elements: !2361)
!4578 = !DIGlobalVariableExpression(var: !4579, expr: !DIExpression())
!4579 = distinct !DIGlobalVariable(name: "fifo_mode", scope: !2, file: !3, line: 130, type: !4580, isLocal: true, isDefinition: true)
!4580 = !DIDerivedType(tag: DW_TAG_typedef, name: "ushort", file: !138, line: 86, baseType: !362)
!4581 = !DIGlobalVariableExpression(var: !4582, expr: !DIExpression())
!4582 = distinct !DIGlobalVariable(name: "enable_suspend", scope: !2, file: !3, line: 140, type: !676, isLocal: true, isDefinition: true)
!4583 = !DIGlobalVariableExpression(var: !4584, expr: !DIExpression())
!4584 = distinct !DIGlobalVariable(name: "__param_str_enable_suspend", scope: !2, file: !3, line: 143, type: !4585, isLocal: true, isDefinition: true)
!4585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 184, elements: !4586)
!4586 = !{!4587}
!4587 = !DISubrange(count: 23)
!4588 = !DIGlobalVariableExpression(var: !4589, expr: !DIExpression())
!4589 = distinct !DIGlobalVariable(name: "net2280_pci_driver", scope: !2, file: !3, line: 3862, type: !4291, isLocal: true, isDefinition: true)
!4590 = !DIGlobalVariableExpression(var: !4591, expr: !DIExpression())
!4591 = distinct !DIGlobalVariable(name: "driver_name", scope: !2, file: !3, line: 69, type: !4592, isLocal: true, isDefinition: true)
!4592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 64, elements: !255)
!4593 = !DIGlobalVariableExpression(var: !4594, expr: !DIExpression())
!4594 = distinct !DIGlobalVariable(name: "pci_ids", scope: !2, file: !3, line: 3813, type: !4595, isLocal: true, isDefinition: true)
!4595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4297, size: 1536, elements: !1794)
!4596 = !DIGlobalVariableExpression(var: !4597, expr: !DIExpression())
!4597 = distinct !DIGlobalVariable(name: "net2280_ops", scope: !2, file: !3, line: 1621, type: !323, isLocal: true, isDefinition: true)
!4598 = !DIGlobalVariableExpression(var: !4599, expr: !DIExpression())
!4599 = distinct !DIGlobalVariable(name: "ep_info_dft", scope: !2, file: !3, line: 84, type: !4600, isLocal: true, isDefinition: true)
!4600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4601, size: 1152, elements: !3947)
!4601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4602)
!4602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 81, size: 128, elements: !4603)
!4603 = !{!4604, !4605}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4602, file: !3, line: 82, baseType: !402, size: 64)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !4602, file: !3, line: 83, baseType: !4606, size: 32, offset: 64)
!4606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4067)
!4607 = !DIGlobalVariableExpression(var: !4608, expr: !DIExpression())
!4608 = distinct !DIGlobalVariable(name: "ep0name", scope: !2, file: !3, line: 73, type: !4609, isLocal: true, isDefinition: true)
!4609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 32, elements: !248)
!4610 = !DIGlobalVariableExpression(var: !4611, expr: !DIExpression())
!4611 = distinct !DIGlobalVariable(name: "net2280_ep_ops", scope: !2, file: !3, line: 1448, type: !3985, isLocal: true, isDefinition: true)
!4612 = !DIGlobalVariableExpression(var: !4613, expr: !DIExpression())
!4613 = distinct !DIGlobalVariable(name: "ep_key", scope: !4614, file: !3, line: 190, type: !4615, isLocal: true, isDefinition: true)
!4614 = distinct !DISubprogram(name: "net2280_enable", scope: !3, file: !3, line: 182, type: !3990, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!4615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4616, size: 288, elements: !3947)
!4616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!4617 = !DIGlobalVariableExpression(var: !4618, expr: !DIExpression())
!4618 = distinct !DIGlobalVariable(name: "ep_enhanced", scope: !4619, file: !286, line: 364, type: !4615, isLocal: true, isDefinition: true)
!4619 = distinct !DISubprogram(name: "set_max_speed", scope: !286, file: !286, line: 361, type: !4620, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!4620 = !DISubroutineType(types: !4621)
!4621 = !{null, !4485, !144}
!4622 = !DIGlobalVariableExpression(var: !4623, expr: !DIExpression())
!4623 = distinct !DIGlobalVariable(name: "ep_pl", scope: !4624, file: !3, line: 2849, type: !4615, isLocal: true, isDefinition: true)
!4624 = distinct !DISubprogram(name: "ep_clear_seqnum", scope: !3, file: !3, line: 2845, type: !4625, scopeLine: 2846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!4625 = !DISubroutineType(types: !4626)
!4626 = !{null, !4485}
!4627 = !DIGlobalVariableExpression(var: !4628, expr: !DIExpression())
!4628 = distinct !DIGlobalVariable(name: "ep_bit", scope: !2, file: !3, line: 72, type: !4615, isLocal: true, isDefinition: true)
!4629 = !DIGlobalVariableExpression(var: !4630, expr: !DIExpression(DW_OP_constu, 37158914, DW_OP_stack_value))
!4630 = distinct !DIGlobalVariable(name: "dmactl_default", scope: !2, file: !3, line: 825, type: !4616, isLocal: true, isDefinition: true)
!4631 = !DIGlobalVariableExpression(var: !4632, expr: !DIExpression())
!4632 = distinct !DIGlobalVariable(name: "ne", scope: !4633, file: !3, line: 2195, type: !4615, isLocal: true, isDefinition: true)
!4633 = distinct !DISubprogram(name: "usb_reinit_338x", scope: !3, file: !3, line: 2191, type: !4634, scopeLine: 2192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!4634 = !DISubroutineType(types: !4635)
!4635 = !{null, !284}
!4636 = !DIGlobalVariableExpression(var: !4637, expr: !DIExpression())
!4637 = distinct !DIGlobalVariable(name: "ep_reg_addr", scope: !4633, file: !3, line: 2196, type: !4615, isLocal: true, isDefinition: true)
!4638 = !DIGlobalVariableExpression(var: !4639, expr: !DIExpression())
!4639 = distinct !DIGlobalVariable(name: "ep_info_adv", scope: !2, file: !3, line: 103, type: !4600, isLocal: true, isDefinition: true)
!4640 = !DIGlobalVariableExpression(var: !4641, expr: !DIExpression())
!4641 = distinct !DIGlobalVariable(name: "driver_desc", scope: !2, file: !3, line: 70, type: !4642, isLocal: true, isDefinition: true)
!4642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 368, elements: !4643)
!4643 = !{!4644}
!4644 = !DISubrange(count: 46)
!4645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 144, elements: !4646)
!4646 = !{!4647}
!4647 = !DISubrange(count: 18)
!4648 = !{!"rsp"}
!4649 = !{i32 7, !"Dwarf Version", i32 4}
!4650 = !{i32 2, !"Debug Info Version", i32 3}
!4651 = !{i32 1, !"wchar_size", i32 2}
!4652 = !{i32 1, !"Code Model", i32 2}
!4653 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4654 = distinct !DISubprogram(name: "net2280_pci_driver_init", scope: !3, file: !3, line: 3873, type: !4655, scopeLine: 3873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!4655 = !DISubroutineType(types: !4656)
!4656 = !{!330}
!4657 = !DILocation(line: 3873, column: 1, scope: !4654)
!4658 = distinct !DISubprogram(name: "net2280_pci_driver_exit", scope: !3, file: !3, line: 3873, type: !2049, scopeLine: 3873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!4659 = !DILocation(line: 3873, column: 1, scope: !4658)
!4660 = distinct !DISubprogram(name: "net2280_probe", scope: !3, file: !3, line: 3613, type: !4309, scopeLine: 3614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!4661 = !DILocalVariable(name: "lock", arg: 1, scope: !4662, file: !4663, line: 327, type: !1240)
!4662 = distinct !DISubprogram(name: "spinlock_check", scope: !4663, file: !4663, line: 327, type: !4664, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!4663 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!4664 = !DISubroutineType(types: !4665)
!4665 = !{!4666, !1240}
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!4667 = !DILocation(line: 327, column: 67, scope: !4662, inlinedAt: !4668)
!4668 = distinct !DILocation(line: 3629, column: 2, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 3629, column: 2)
!4670 = !DILocalVariable(name: "pdev", arg: 1, scope: !4660, file: !3, line: 3613, type: !4178)
!4671 = !DILocation(line: 3613, column: 42, scope: !4660)
!4672 = !DILocalVariable(name: "id", arg: 2, scope: !4660, file: !3, line: 3613, type: !4296)
!4673 = !DILocation(line: 3613, column: 76, scope: !4660)
!4674 = !DILocalVariable(name: "dev", scope: !4660, file: !3, line: 3615, type: !284)
!4675 = !DILocation(line: 3615, column: 19, scope: !4660)
!4676 = !DILocalVariable(name: "resource", scope: !4660, file: !3, line: 3616, type: !347)
!4677 = !DILocation(line: 3616, column: 17, scope: !4660)
!4678 = !DILocalVariable(name: "len", scope: !4660, file: !3, line: 3616, type: !347)
!4679 = !DILocation(line: 3616, column: 27, scope: !4660)
!4680 = !DILocalVariable(name: "base", scope: !4660, file: !3, line: 3617, type: !136)
!4681 = !DILocation(line: 3617, column: 18, scope: !4660)
!4682 = !DILocalVariable(name: "retval", scope: !4660, file: !3, line: 3618, type: !330)
!4683 = !DILocation(line: 3618, column: 8, scope: !4660)
!4684 = !DILocalVariable(name: "i", scope: !4660, file: !3, line: 3618, type: !330)
!4685 = !DILocation(line: 3618, column: 16, scope: !4660)
!4686 = !DILocation(line: 3621, column: 8, scope: !4660)
!4687 = !DILocation(line: 3621, column: 6, scope: !4660)
!4688 = !DILocation(line: 3622, column: 6, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 3622, column: 6)
!4690 = !DILocation(line: 3622, column: 10, scope: !4689)
!4691 = !DILocation(line: 3622, column: 6, scope: !4660)
!4692 = !DILocation(line: 3623, column: 10, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4689, file: !3, line: 3622, column: 19)
!4694 = !DILocation(line: 3624, column: 3, scope: !4693)
!4695 = !DILocation(line: 3627, column: 18, scope: !4660)
!4696 = !DILocation(line: 3627, column: 24, scope: !4660)
!4697 = !DILocation(line: 3627, column: 2, scope: !4660)
!4698 = !DILocation(line: 3628, column: 25, scope: !4660)
!4699 = !DILocation(line: 3628, column: 31, scope: !4660)
!4700 = !DILocation(line: 3628, column: 37, scope: !4660)
!4701 = !DILocation(line: 3628, column: 42, scope: !4660)
!4702 = !DILocation(line: 3628, column: 2, scope: !4660)
!4703 = !DILocation(line: 3629, column: 2, scope: !4660)
!4704 = !DILocation(line: 3629, column: 2, scope: !4669)
!4705 = !DILocation(line: 329, column: 10, scope: !4662, inlinedAt: !4668)
!4706 = !DILocation(line: 329, column: 16, scope: !4662, inlinedAt: !4668)
!4707 = !DILocation(line: 3630, column: 16, scope: !4660)
!4708 = !DILocation(line: 3630, column: 20, scope: !4660)
!4709 = !DILocation(line: 3630, column: 2, scope: !4660)
!4710 = !DILocation(line: 3630, column: 7, scope: !4660)
!4711 = !DILocation(line: 3630, column: 14, scope: !4660)
!4712 = !DILocation(line: 3631, column: 14, scope: !4660)
!4713 = !DILocation(line: 3631, column: 2, scope: !4660)
!4714 = !DILocation(line: 3631, column: 7, scope: !4660)
!4715 = !DILocation(line: 3631, column: 12, scope: !4660)
!4716 = !DILocation(line: 3632, column: 2, scope: !4660)
!4717 = !DILocation(line: 3632, column: 7, scope: !4660)
!4718 = !DILocation(line: 3632, column: 14, scope: !4660)
!4719 = !DILocation(line: 3632, column: 18, scope: !4660)
!4720 = !DILocation(line: 3633, column: 27, scope: !4660)
!4721 = !DILocation(line: 3633, column: 32, scope: !4660)
!4722 = !DILocation(line: 3633, column: 39, scope: !4660)
!4723 = !DILocation(line: 3633, column: 26, scope: !4660)
!4724 = !DILocation(line: 3633, column: 2, scope: !4660)
!4725 = !DILocation(line: 3633, column: 7, scope: !4660)
!4726 = !DILocation(line: 3633, column: 14, scope: !4660)
!4727 = !DILocation(line: 3633, column: 24, scope: !4660)
!4728 = !DILocation(line: 3637, column: 2, scope: !4660)
!4729 = !DILocation(line: 3637, column: 7, scope: !4660)
!4730 = !DILocation(line: 3637, column: 14, scope: !4660)
!4731 = !DILocation(line: 3637, column: 19, scope: !4660)
!4732 = !DILocation(line: 3640, column: 24, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 3640, column: 6)
!4734 = !DILocation(line: 3640, column: 6, scope: !4733)
!4735 = !DILocation(line: 3640, column: 30, scope: !4733)
!4736 = !DILocation(line: 3640, column: 6, scope: !4660)
!4737 = !DILocation(line: 3641, column: 10, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 3640, column: 35)
!4739 = !DILocation(line: 3642, column: 3, scope: !4738)
!4740 = !DILocation(line: 3644, column: 2, scope: !4660)
!4741 = !DILocation(line: 3644, column: 7, scope: !4660)
!4742 = !DILocation(line: 3644, column: 15, scope: !4660)
!4743 = !DILocation(line: 3650, column: 13, scope: !4660)
!4744 = !DILocation(line: 3650, column: 11, scope: !4660)
!4745 = !DILocation(line: 3651, column: 8, scope: !4660)
!4746 = !DILocation(line: 3651, column: 6, scope: !4660)
!4747 = !DILocation(line: 3652, column: 7, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 3652, column: 6)
!4749 = !DILocation(line: 3652, column: 6, scope: !4660)
!4750 = !DILocation(line: 3654, column: 10, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4748, file: !3, line: 3652, column: 55)
!4752 = !DILocation(line: 3655, column: 3, scope: !4751)
!4753 = !DILocation(line: 3657, column: 2, scope: !4660)
!4754 = !DILocation(line: 3657, column: 7, scope: !4660)
!4755 = !DILocation(line: 3657, column: 14, scope: !4660)
!4756 = !DILocation(line: 3663, column: 17, scope: !4660)
!4757 = !DILocation(line: 3663, column: 27, scope: !4660)
!4758 = !DILocation(line: 3663, column: 9, scope: !4660)
!4759 = !DILocation(line: 3663, column: 7, scope: !4660)
!4760 = !DILocation(line: 3664, column: 6, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 3664, column: 6)
!4762 = !DILocation(line: 3664, column: 11, scope: !4761)
!4763 = !DILocation(line: 3664, column: 6, scope: !4660)
!4764 = !DILocation(line: 3666, column: 10, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 3664, column: 20)
!4766 = !DILocation(line: 3667, column: 3, scope: !4765)
!4767 = !DILocation(line: 3669, column: 46, scope: !4660)
!4768 = !DILocation(line: 3669, column: 14, scope: !4660)
!4769 = !DILocation(line: 3669, column: 2, scope: !4660)
!4770 = !DILocation(line: 3669, column: 7, scope: !4660)
!4771 = !DILocation(line: 3669, column: 12, scope: !4660)
!4772 = !DILocation(line: 3670, column: 50, scope: !4660)
!4773 = !DILocation(line: 3670, column: 55, scope: !4660)
!4774 = !DILocation(line: 3670, column: 13, scope: !4660)
!4775 = !DILocation(line: 3670, column: 2, scope: !4660)
!4776 = !DILocation(line: 3670, column: 7, scope: !4660)
!4777 = !DILocation(line: 3670, column: 11, scope: !4660)
!4778 = !DILocation(line: 3671, column: 50, scope: !4660)
!4779 = !DILocation(line: 3671, column: 55, scope: !4660)
!4780 = !DILocation(line: 3671, column: 13, scope: !4660)
!4781 = !DILocation(line: 3671, column: 2, scope: !4660)
!4782 = !DILocation(line: 3671, column: 7, scope: !4660)
!4783 = !DILocation(line: 3671, column: 11, scope: !4660)
!4784 = !DILocation(line: 3672, column: 50, scope: !4660)
!4785 = !DILocation(line: 3672, column: 55, scope: !4660)
!4786 = !DILocation(line: 3672, column: 13, scope: !4660)
!4787 = !DILocation(line: 3672, column: 2, scope: !4660)
!4788 = !DILocation(line: 3672, column: 7, scope: !4660)
!4789 = !DILocation(line: 3672, column: 11, scope: !4660)
!4790 = !DILocation(line: 3673, column: 50, scope: !4660)
!4791 = !DILocation(line: 3673, column: 55, scope: !4660)
!4792 = !DILocation(line: 3673, column: 13, scope: !4660)
!4793 = !DILocation(line: 3673, column: 2, scope: !4660)
!4794 = !DILocation(line: 3673, column: 7, scope: !4660)
!4795 = !DILocation(line: 3673, column: 11, scope: !4660)
!4796 = !DILocation(line: 3674, column: 52, scope: !4660)
!4797 = !DILocation(line: 3674, column: 57, scope: !4660)
!4798 = !DILocation(line: 3674, column: 16, scope: !4660)
!4799 = !DILocation(line: 3674, column: 2, scope: !4660)
!4800 = !DILocation(line: 3674, column: 7, scope: !4660)
!4801 = !DILocation(line: 3674, column: 14, scope: !4660)
!4802 = !DILocation(line: 3676, column: 6, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 3676, column: 6)
!4804 = !DILocation(line: 3676, column: 11, scope: !4803)
!4805 = !DILocation(line: 3676, column: 18, scope: !4803)
!4806 = !DILocation(line: 3676, column: 6, scope: !4660)
!4807 = !DILocalVariable(name: "fsmvalue", scope: !4808, file: !3, line: 3677, type: !144)
!4808 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 3676, column: 30)
!4809 = !DILocation(line: 3677, column: 7, scope: !4808)
!4810 = !DILocalVariable(name: "usbstat", scope: !4808, file: !3, line: 3678, type: !144)
!4811 = !DILocation(line: 3678, column: 7, scope: !4808)
!4812 = !DILocation(line: 3680, column: 9, scope: !4808)
!4813 = !DILocation(line: 3680, column: 14, scope: !4808)
!4814 = !DILocation(line: 3679, column: 18, scope: !4808)
!4815 = !DILocation(line: 3679, column: 3, scope: !4808)
!4816 = !DILocation(line: 3679, column: 8, scope: !4808)
!4817 = !DILocation(line: 3679, column: 16, scope: !4808)
!4818 = !DILocation(line: 3682, column: 9, scope: !4808)
!4819 = !DILocation(line: 3682, column: 14, scope: !4808)
!4820 = !DILocation(line: 3681, column: 17, scope: !4808)
!4821 = !DILocation(line: 3681, column: 3, scope: !4808)
!4822 = !DILocation(line: 3681, column: 8, scope: !4808)
!4823 = !DILocation(line: 3681, column: 15, scope: !4808)
!4824 = !DILocation(line: 3684, column: 9, scope: !4808)
!4825 = !DILocation(line: 3684, column: 14, scope: !4808)
!4826 = !DILocation(line: 3683, column: 17, scope: !4808)
!4827 = !DILocation(line: 3683, column: 3, scope: !4808)
!4828 = !DILocation(line: 3683, column: 8, scope: !4808)
!4829 = !DILocation(line: 3683, column: 15, scope: !4808)
!4830 = !DILocation(line: 3685, column: 20, scope: !4808)
!4831 = !DILocation(line: 3685, column: 25, scope: !4808)
!4832 = !DILocation(line: 3685, column: 30, scope: !4808)
!4833 = !DILocation(line: 3685, column: 19, scope: !4808)
!4834 = !DILocation(line: 3685, column: 13, scope: !4808)
!4835 = !DILocation(line: 3685, column: 11, scope: !4808)
!4836 = !DILocation(line: 3686, column: 27, scope: !4808)
!4837 = !DILocation(line: 3686, column: 35, scope: !4808)
!4838 = !DILocation(line: 3686, column: 25, scope: !4808)
!4839 = !DILocation(line: 3686, column: 24, scope: !4808)
!4840 = !DILocation(line: 3686, column: 3, scope: !4808)
!4841 = !DILocation(line: 3686, column: 8, scope: !4808)
!4842 = !DILocation(line: 3686, column: 22, scope: !4808)
!4843 = !DILocation(line: 3687, column: 16, scope: !4808)
!4844 = !DILocation(line: 3687, column: 21, scope: !4808)
!4845 = !DILocation(line: 3687, column: 15, scope: !4808)
!4846 = !DILocation(line: 3687, column: 3, scope: !4808)
!4847 = !DILocation(line: 3687, column: 8, scope: !4808)
!4848 = !DILocation(line: 3687, column: 13, scope: !4808)
!4849 = !DILocation(line: 3689, column: 26, scope: !4808)
!4850 = !DILocation(line: 3689, column: 31, scope: !4808)
!4851 = !DILocation(line: 3689, column: 14, scope: !4808)
!4852 = !DILocation(line: 3689, column: 46, scope: !4808)
!4853 = !DILocation(line: 3689, column: 12, scope: !4808)
!4854 = !DILocation(line: 3692, column: 7, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 3692, column: 7)
!4856 = !DILocation(line: 3692, column: 16, scope: !4855)
!4857 = !DILocation(line: 3692, column: 7, scope: !4808)
!4858 = !DILocation(line: 3693, column: 4, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 3692, column: 51)
!4860 = !DILocation(line: 3693, column: 9, scope: !4859)
!4861 = !DILocation(line: 3693, column: 25, scope: !4859)
!4862 = !DILocation(line: 3694, column: 15, scope: !4859)
!4863 = !DILocation(line: 3694, column: 20, scope: !4859)
!4864 = !DILocation(line: 3694, column: 25, scope: !4859)
!4865 = !DILocation(line: 3694, column: 14, scope: !4859)
!4866 = !DILocation(line: 3694, column: 4, scope: !4859)
!4867 = !DILocation(line: 3695, column: 3, scope: !4859)
!4868 = !DILocation(line: 3696, column: 4, scope: !4855)
!4869 = !DILocation(line: 3696, column: 9, scope: !4855)
!4870 = !DILocation(line: 3696, column: 25, scope: !4855)
!4871 = !DILocation(line: 3697, column: 2, scope: !4808)
!4872 = !DILocation(line: 3698, column: 3, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 3697, column: 9)
!4874 = !DILocation(line: 3698, column: 8, scope: !4873)
!4875 = !DILocation(line: 3698, column: 22, scope: !4873)
!4876 = !DILocation(line: 3699, column: 3, scope: !4873)
!4877 = !DILocation(line: 3699, column: 8, scope: !4873)
!4878 = !DILocation(line: 3699, column: 13, scope: !4873)
!4879 = !DILocation(line: 3701, column: 14, scope: !4873)
!4880 = !DILocation(line: 3701, column: 19, scope: !4873)
!4881 = !DILocation(line: 3701, column: 24, scope: !4873)
!4882 = !DILocation(line: 3701, column: 13, scope: !4873)
!4883 = !DILocation(line: 3701, column: 3, scope: !4873)
!4884 = !DILocation(line: 3704, column: 12, scope: !4660)
!4885 = !DILocation(line: 3704, column: 2, scope: !4660)
!4886 = !DILocation(line: 3705, column: 13, scope: !4660)
!4887 = !DILocation(line: 3705, column: 2, scope: !4660)
!4888 = !DILocation(line: 3708, column: 7, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 3708, column: 6)
!4890 = !DILocation(line: 3708, column: 13, scope: !4889)
!4891 = !DILocation(line: 3708, column: 6, scope: !4660)
!4892 = !DILocation(line: 3709, column: 3, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 3708, column: 18)
!4894 = !DILocation(line: 3710, column: 10, scope: !4893)
!4895 = !DILocation(line: 3711, column: 3, scope: !4893)
!4896 = !DILocation(line: 3714, column: 6, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 3714, column: 6)
!4898 = !DILocation(line: 3714, column: 11, scope: !4897)
!4899 = !DILocation(line: 3714, column: 18, scope: !4897)
!4900 = !DILocation(line: 3714, column: 6, scope: !4660)
!4901 = !DILocation(line: 3715, column: 22, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 3715, column: 7)
!4903 = !DILocation(line: 3715, column: 7, scope: !4902)
!4904 = !DILocation(line: 3715, column: 7, scope: !4897)
!4905 = !DILocation(line: 3716, column: 4, scope: !4902)
!4906 = !DILocation(line: 3715, column: 26, scope: !4902)
!4907 = !DILocation(line: 3718, column: 18, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 3718, column: 6)
!4909 = !DILocation(line: 3718, column: 24, scope: !4908)
!4910 = !DILocation(line: 3719, column: 21, scope: !4908)
!4911 = !DILocation(line: 3718, column: 6, scope: !4908)
!4912 = !DILocation(line: 3718, column: 6, scope: !4660)
!4913 = !DILocation(line: 3720, column: 3, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4908, file: !3, line: 3719, column: 27)
!4915 = !DILocation(line: 3721, column: 10, scope: !4914)
!4916 = !DILocation(line: 3722, column: 3, scope: !4914)
!4917 = !DILocation(line: 3724, column: 2, scope: !4660)
!4918 = !DILocation(line: 3724, column: 7, scope: !4660)
!4919 = !DILocation(line: 3724, column: 15, scope: !4660)
!4920 = !DILocation(line: 3728, column: 47, scope: !4660)
!4921 = !DILocation(line: 3728, column: 53, scope: !4660)
!4922 = !DILocation(line: 3728, column: 18, scope: !4660)
!4923 = !DILocation(line: 3728, column: 2, scope: !4660)
!4924 = !DILocation(line: 3728, column: 7, scope: !4660)
!4925 = !DILocation(line: 3728, column: 16, scope: !4660)
!4926 = !DILocation(line: 3732, column: 7, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 3732, column: 6)
!4928 = !DILocation(line: 3732, column: 12, scope: !4927)
!4929 = !DILocation(line: 3732, column: 6, scope: !4660)
!4930 = !DILocation(line: 3734, column: 10, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 3732, column: 22)
!4932 = !DILocation(line: 3735, column: 3, scope: !4931)
!4933 = !DILocation(line: 3737, column: 9, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 3737, column: 2)
!4935 = !DILocation(line: 3737, column: 7, scope: !4934)
!4936 = !DILocation(line: 3737, column: 14, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 3737, column: 2)
!4938 = !DILocation(line: 3737, column: 16, scope: !4937)
!4939 = !DILocation(line: 3737, column: 2, scope: !4934)
!4940 = !DILocalVariable(name: "td", scope: !4941, file: !3, line: 3738, type: !4138)
!4941 = distinct !DILexicalBlock(scope: !4937, file: !3, line: 3737, column: 26)
!4942 = !DILocation(line: 3738, column: 23, scope: !4941)
!4943 = !DILocation(line: 3740, column: 23, scope: !4941)
!4944 = !DILocation(line: 3740, column: 28, scope: !4941)
!4945 = !DILocation(line: 3741, column: 6, scope: !4941)
!4946 = !DILocation(line: 3741, column: 11, scope: !4941)
!4947 = !DILocation(line: 3741, column: 14, scope: !4941)
!4948 = !DILocation(line: 3741, column: 17, scope: !4941)
!4949 = !DILocation(line: 3740, column: 8, scope: !4941)
!4950 = !DILocation(line: 3740, column: 6, scope: !4941)
!4951 = !DILocation(line: 3742, column: 8, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 3742, column: 7)
!4953 = !DILocation(line: 3742, column: 7, scope: !4941)
!4954 = !DILocation(line: 3744, column: 11, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 3742, column: 12)
!4956 = !DILocation(line: 3745, column: 4, scope: !4955)
!4957 = !DILocation(line: 3747, column: 3, scope: !4941)
!4958 = !DILocation(line: 3747, column: 7, scope: !4941)
!4959 = !DILocation(line: 3747, column: 16, scope: !4941)
!4960 = !DILocation(line: 3748, column: 17, scope: !4941)
!4961 = !DILocation(line: 3748, column: 21, scope: !4941)
!4962 = !DILocation(line: 3748, column: 3, scope: !4941)
!4963 = !DILocation(line: 3748, column: 7, scope: !4941)
!4964 = !DILocation(line: 3748, column: 15, scope: !4941)
!4965 = !DILocation(line: 3749, column: 22, scope: !4941)
!4966 = !DILocation(line: 3749, column: 3, scope: !4941)
!4967 = !DILocation(line: 3749, column: 8, scope: !4941)
!4968 = !DILocation(line: 3749, column: 11, scope: !4941)
!4969 = !DILocation(line: 3749, column: 14, scope: !4941)
!4970 = !DILocation(line: 3749, column: 20, scope: !4941)
!4971 = !DILocation(line: 3750, column: 2, scope: !4941)
!4972 = !DILocation(line: 3737, column: 22, scope: !4937)
!4973 = !DILocation(line: 3737, column: 2, scope: !4937)
!4974 = distinct !{!4974, !4939, !4975}
!4975 = !DILocation(line: 3750, column: 2, scope: !4934)
!4976 = !DILocation(line: 3753, column: 6, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 3753, column: 6)
!4978 = !DILocation(line: 3753, column: 11, scope: !4977)
!4979 = !DILocation(line: 3753, column: 18, scope: !4977)
!4980 = !DILocation(line: 3753, column: 6, scope: !4660)
!4981 = !DILocation(line: 3761, column: 5, scope: !4977)
!4982 = !DILocation(line: 3761, column: 10, scope: !4977)
!4983 = !DILocation(line: 3761, column: 15, scope: !4977)
!4984 = !DILocation(line: 3761, column: 4, scope: !4977)
!4985 = !DILocation(line: 3754, column: 3, scope: !4977)
!4986 = !DILocation(line: 3763, column: 17, scope: !4660)
!4987 = !DILocation(line: 3763, column: 2, scope: !4660)
!4988 = !DILocation(line: 3764, column: 18, scope: !4660)
!4989 = !DILocation(line: 3764, column: 2, scope: !4660)
!4990 = !DILocation(line: 3767, column: 29, scope: !4660)
!4991 = !DILocation(line: 3767, column: 34, scope: !4660)
!4992 = !DILocation(line: 3767, column: 17, scope: !4660)
!4993 = !DILocation(line: 3767, column: 53, scope: !4660)
!4994 = !DILocation(line: 3767, column: 2, scope: !4660)
!4995 = !DILocation(line: 3767, column: 7, scope: !4660)
!4996 = !DILocation(line: 3767, column: 15, scope: !4660)
!4997 = !DILocation(line: 3770, column: 2, scope: !4660)
!4998 = !DILocation(line: 3771, column: 2, scope: !4660)
!4999 = !DILocation(line: 3773, column: 2, scope: !4660)
!5000 = !DILocation(line: 3775, column: 9, scope: !4660)
!5001 = !DILocation(line: 3776, column: 6, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 3776, column: 6)
!5003 = !DILocation(line: 3776, column: 6, scope: !4660)
!5004 = !DILocation(line: 3777, column: 3, scope: !5002)
!5005 = !DILocation(line: 3779, column: 27, scope: !4660)
!5006 = !DILocation(line: 3779, column: 32, scope: !4660)
!5007 = !DILocation(line: 3779, column: 11, scope: !4660)
!5008 = !DILocation(line: 3779, column: 9, scope: !4660)
!5009 = !DILocation(line: 3780, column: 6, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 3780, column: 6)
!5011 = !DILocation(line: 3780, column: 6, scope: !4660)
!5012 = !DILocation(line: 3781, column: 3, scope: !5010)
!5013 = !DILocation(line: 3782, column: 2, scope: !4660)
!5014 = !DILocation(line: 3782, column: 7, scope: !4660)
!5015 = !DILocation(line: 3782, column: 13, scope: !4660)
!5016 = !DILocation(line: 3783, column: 2, scope: !4660)
!5017 = !DILabel(scope: !4660, name: "done", file: !3, line: 3785)
!5018 = !DILocation(line: 3785, column: 1, scope: !4660)
!5019 = !DILocation(line: 3786, column: 6, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 3786, column: 6)
!5021 = !DILocation(line: 3786, column: 6, scope: !4660)
!5022 = !DILocation(line: 3787, column: 18, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 3786, column: 11)
!5024 = !DILocation(line: 3787, column: 3, scope: !5023)
!5025 = !DILocation(line: 3788, column: 9, scope: !5023)
!5026 = !DILocation(line: 3788, column: 3, scope: !5023)
!5027 = !DILocation(line: 3789, column: 2, scope: !5023)
!5028 = !DILocation(line: 3790, column: 9, scope: !4660)
!5029 = !DILocation(line: 3790, column: 2, scope: !4660)
!5030 = !DILocation(line: 3791, column: 1, scope: !4660)
!5031 = distinct !DISubprogram(name: "net2280_remove", scope: !3, file: !3, line: 3570, type: !4313, scopeLine: 3571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5032 = !DILocalVariable(name: "pdev", arg: 1, scope: !5031, file: !3, line: 3570, type: !4178)
!5033 = !DILocation(line: 3570, column: 44, scope: !5031)
!5034 = !DILocalVariable(name: "dev", scope: !5031, file: !3, line: 3572, type: !284)
!5035 = !DILocation(line: 3572, column: 19, scope: !5031)
!5036 = !DILocation(line: 3572, column: 41, scope: !5031)
!5037 = !DILocation(line: 3572, column: 25, scope: !5031)
!5038 = !DILocation(line: 3574, column: 6, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 3574, column: 6)
!5040 = !DILocation(line: 3574, column: 11, scope: !5039)
!5041 = !DILocation(line: 3574, column: 6, scope: !5031)
!5042 = !DILocation(line: 3575, column: 19, scope: !5039)
!5043 = !DILocation(line: 3575, column: 24, scope: !5039)
!5044 = !DILocation(line: 3575, column: 3, scope: !5039)
!5045 = !DILocation(line: 3577, column: 2, scope: !5031)
!5046 = !DILocation(line: 3577, column: 2, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 3577, column: 2)
!5048 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 3577, column: 2)
!5049 = !DILocation(line: 3577, column: 2, scope: !5048)
!5050 = !DILocation(line: 3577, column: 2, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5047, file: !3, line: 3577, column: 2)
!5052 = !DILocation(line: 3577, column: 2, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 3577, column: 2)
!5054 = !DILocation(line: 3577, column: 2, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 3577, column: 2)
!5056 = !{i32 -2141354540, i32 -2141354511, i32 -2141354465, i32 -2141354407, i32 -2141354353, i32 -2141354299, i32 -2141354244, i32 -2141354213}
!5057 = !DILocation(line: 3577, column: 2, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 3577, column: 2)
!5059 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 3577, column: 2)
!5060 = !{i32 -2141353757, i32 -2141353750, i32 -2141353696, i32 -2141353665, i32 -2141353635}
!5061 = !DILocation(line: 3577, column: 2, scope: !5059)
!5062 = !DILocation(line: 3580, column: 6, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 3580, column: 6)
!5064 = !DILocation(line: 3580, column: 11, scope: !5063)
!5065 = !DILocation(line: 3580, column: 6, scope: !5031)
!5066 = !DILocalVariable(name: "i", scope: !5067, file: !3, line: 3581, type: !330)
!5067 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 3580, column: 21)
!5068 = !DILocation(line: 3581, column: 8, scope: !5067)
!5069 = !DILocation(line: 3582, column: 10, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5067, file: !3, line: 3582, column: 3)
!5071 = !DILocation(line: 3582, column: 8, scope: !5070)
!5072 = !DILocation(line: 3582, column: 15, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 3582, column: 3)
!5074 = !DILocation(line: 3582, column: 17, scope: !5073)
!5075 = !DILocation(line: 3582, column: 3, scope: !5070)
!5076 = !DILocation(line: 3583, column: 9, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 3583, column: 8)
!5078 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 3582, column: 27)
!5079 = !DILocation(line: 3583, column: 14, scope: !5077)
!5080 = !DILocation(line: 3583, column: 17, scope: !5077)
!5081 = !DILocation(line: 3583, column: 20, scope: !5077)
!5082 = !DILocation(line: 3583, column: 8, scope: !5078)
!5083 = !DILocation(line: 3584, column: 5, scope: !5077)
!5084 = !DILocation(line: 3585, column: 18, scope: !5078)
!5085 = !DILocation(line: 3585, column: 23, scope: !5078)
!5086 = !DILocation(line: 3585, column: 33, scope: !5078)
!5087 = !DILocation(line: 3585, column: 38, scope: !5078)
!5088 = !DILocation(line: 3585, column: 41, scope: !5078)
!5089 = !DILocation(line: 3585, column: 44, scope: !5078)
!5090 = !DILocation(line: 3586, column: 6, scope: !5078)
!5091 = !DILocation(line: 3586, column: 11, scope: !5078)
!5092 = !DILocation(line: 3586, column: 14, scope: !5078)
!5093 = !DILocation(line: 3586, column: 17, scope: !5078)
!5094 = !DILocation(line: 3585, column: 4, scope: !5078)
!5095 = !DILocation(line: 3587, column: 3, scope: !5078)
!5096 = !DILocation(line: 3582, column: 23, scope: !5073)
!5097 = !DILocation(line: 3582, column: 3, scope: !5073)
!5098 = distinct !{!5098, !5075, !5099}
!5099 = !DILocation(line: 3587, column: 3, scope: !5070)
!5100 = !DILocation(line: 3588, column: 20, scope: !5067)
!5101 = !DILocation(line: 3588, column: 25, scope: !5067)
!5102 = !DILocation(line: 3588, column: 3, scope: !5067)
!5103 = !DILocation(line: 3589, column: 2, scope: !5067)
!5104 = !DILocation(line: 3590, column: 6, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 3590, column: 6)
!5106 = !DILocation(line: 3590, column: 11, scope: !5105)
!5107 = !DILocation(line: 3590, column: 6, scope: !5031)
!5108 = !DILocation(line: 3591, column: 12, scope: !5105)
!5109 = !DILocation(line: 3591, column: 18, scope: !5105)
!5110 = !DILocation(line: 3591, column: 23, scope: !5105)
!5111 = !DILocation(line: 3591, column: 3, scope: !5105)
!5112 = !DILocation(line: 3592, column: 6, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 3592, column: 6)
!5114 = !DILocation(line: 3592, column: 11, scope: !5113)
!5115 = !DILocation(line: 3592, column: 18, scope: !5113)
!5116 = !DILocation(line: 3592, column: 6, scope: !5031)
!5117 = !DILocation(line: 3593, column: 19, scope: !5113)
!5118 = !DILocation(line: 3593, column: 3, scope: !5113)
!5119 = !DILocation(line: 3594, column: 6, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 3594, column: 6)
!5121 = !DILocation(line: 3594, column: 11, scope: !5120)
!5122 = !DILocation(line: 3594, column: 6, scope: !5031)
!5123 = !DILocation(line: 3595, column: 24, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 3594, column: 17)
!5125 = !DILocation(line: 3595, column: 3, scope: !5124)
!5126 = !DILocation(line: 3596, column: 11, scope: !5124)
!5127 = !DILocation(line: 3596, column: 16, scope: !5124)
!5128 = !DILocation(line: 3596, column: 3, scope: !5124)
!5129 = !DILocation(line: 3597, column: 2, scope: !5124)
!5130 = !DILocation(line: 3598, column: 6, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 3598, column: 6)
!5132 = !DILocation(line: 3598, column: 11, scope: !5131)
!5133 = !DILocation(line: 3598, column: 6, scope: !5031)
!5134 = !DILocation(line: 3599, column: 3, scope: !5131)
!5135 = !DILocation(line: 3601, column: 6, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 3601, column: 6)
!5137 = !DILocation(line: 3601, column: 11, scope: !5136)
!5138 = !DILocation(line: 3601, column: 6, scope: !5031)
!5139 = !DILocation(line: 3602, column: 22, scope: !5136)
!5140 = !DILocation(line: 3602, column: 3, scope: !5136)
!5141 = !DILocation(line: 3603, column: 2, scope: !5031)
!5142 = !DILocation(line: 3603, column: 2, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 3603, column: 2)
!5144 = !DILocation(line: 3605, column: 2, scope: !5031)
!5145 = !DILocation(line: 3606, column: 18, scope: !5031)
!5146 = !DILocation(line: 3606, column: 23, scope: !5031)
!5147 = !DILocation(line: 3606, column: 2, scope: !5031)
!5148 = !DILocation(line: 3607, column: 1, scope: !5031)
!5149 = distinct !DISubprogram(name: "net2280_shutdown", scope: !3, file: !3, line: 3797, type: !4313, scopeLine: 3798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5150 = !DILocalVariable(name: "pdev", arg: 1, scope: !5149, file: !3, line: 3797, type: !4178)
!5151 = !DILocation(line: 3797, column: 46, scope: !5149)
!5152 = !DILocalVariable(name: "dev", scope: !5149, file: !3, line: 3799, type: !284)
!5153 = !DILocation(line: 3799, column: 19, scope: !5149)
!5154 = !DILocation(line: 3799, column: 41, scope: !5149)
!5155 = !DILocation(line: 3799, column: 25, scope: !5149)
!5156 = !DILocation(line: 3802, column: 13, scope: !5149)
!5157 = !DILocation(line: 3802, column: 18, scope: !5149)
!5158 = !DILocation(line: 3802, column: 24, scope: !5149)
!5159 = !DILocation(line: 3802, column: 12, scope: !5149)
!5160 = !DILocation(line: 3802, column: 2, scope: !5149)
!5161 = !DILocation(line: 3803, column: 13, scope: !5149)
!5162 = !DILocation(line: 3803, column: 18, scope: !5149)
!5163 = !DILocation(line: 3803, column: 24, scope: !5149)
!5164 = !DILocation(line: 3803, column: 12, scope: !5149)
!5165 = !DILocation(line: 3803, column: 2, scope: !5149)
!5166 = !DILocation(line: 3806, column: 13, scope: !5149)
!5167 = !DILocation(line: 3806, column: 18, scope: !5149)
!5168 = !DILocation(line: 3806, column: 23, scope: !5149)
!5169 = !DILocation(line: 3806, column: 12, scope: !5149)
!5170 = !DILocation(line: 3806, column: 2, scope: !5149)
!5171 = !DILocation(line: 3808, column: 1, scope: !5149)
!5172 = distinct !DISubprogram(name: "kzalloc", scope: !115, file: !115, line: 662, type: !5173, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5173 = !DISubroutineType(types: !5174)
!5174 = !{!136, !513, !137}
!5175 = !DILocalVariable(name: "s", arg: 1, scope: !5176, file: !115, line: 445, type: !1111)
!5176 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !115, file: !115, line: 445, type: !5177, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{!136, !1111, !137, !513}
!5179 = !DILocation(line: 445, column: 72, scope: !5176, inlinedAt: !5180)
!5180 = distinct !DILocation(line: 552, column: 10, scope: !5181, inlinedAt: !5184)
!5181 = distinct !DILexicalBlock(scope: !5182, file: !115, line: 540, column: 34)
!5182 = distinct !DILexicalBlock(scope: !5183, file: !115, line: 540, column: 6)
!5183 = distinct !DISubprogram(name: "kmalloc", scope: !115, file: !115, line: 538, type: !5173, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5184 = distinct !DILocation(line: 664, column: 9, scope: !5172)
!5185 = !DILocalVariable(name: "flags", arg: 2, scope: !5176, file: !115, line: 446, type: !137)
!5186 = !DILocation(line: 446, column: 9, scope: !5176, inlinedAt: !5180)
!5187 = !DILocalVariable(name: "size", arg: 3, scope: !5176, file: !115, line: 446, type: !513)
!5188 = !DILocation(line: 446, column: 23, scope: !5176, inlinedAt: !5180)
!5189 = !DILocalVariable(name: "ret", scope: !5176, file: !115, line: 448, type: !136)
!5190 = !DILocation(line: 448, column: 8, scope: !5176, inlinedAt: !5180)
!5191 = !DILocalVariable(name: "flags", arg: 1, scope: !5192, file: !115, line: 318, type: !137)
!5192 = distinct !DISubprogram(name: "kmalloc_type", scope: !115, file: !115, line: 318, type: !5193, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5193 = !DISubroutineType(types: !5194)
!5194 = !{!114, !137}
!5195 = !DILocation(line: 318, column: 67, scope: !5192, inlinedAt: !5196)
!5196 = distinct !DILocation(line: 553, column: 20, scope: !5181, inlinedAt: !5184)
!5197 = !DILocalVariable(name: "size", arg: 1, scope: !5198, file: !115, line: 346, type: !513)
!5198 = distinct !DISubprogram(name: "kmalloc_index", scope: !115, file: !115, line: 346, type: !5199, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5199 = !DISubroutineType(types: !5200)
!5200 = !{!7, !513}
!5201 = !DILocation(line: 346, column: 58, scope: !5198, inlinedAt: !5202)
!5202 = distinct !DILocation(line: 547, column: 11, scope: !5181, inlinedAt: !5184)
!5203 = !DILocalVariable(name: "size", arg: 1, scope: !5204, file: !115, line: 472, type: !513)
!5204 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !115, file: !115, line: 472, type: !5205, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5205 = !DISubroutineType(types: !5206)
!5206 = !{!136, !513, !137, !7}
!5207 = !DILocation(line: 472, column: 28, scope: !5204, inlinedAt: !5208)
!5208 = distinct !DILocation(line: 481, column: 9, scope: !5209, inlinedAt: !5210)
!5209 = distinct !DISubprogram(name: "kmalloc_large", scope: !115, file: !115, line: 478, type: !5173, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5210 = distinct !DILocation(line: 545, column: 11, scope: !5211, inlinedAt: !5184)
!5211 = distinct !DILexicalBlock(scope: !5181, file: !115, line: 544, column: 7)
!5212 = !DILocalVariable(name: "flags", arg: 2, scope: !5204, file: !115, line: 472, type: !137)
!5213 = !DILocation(line: 472, column: 40, scope: !5204, inlinedAt: !5208)
!5214 = !DILocalVariable(name: "order", arg: 3, scope: !5204, file: !115, line: 472, type: !7)
!5215 = !DILocation(line: 472, column: 60, scope: !5204, inlinedAt: !5208)
!5216 = !DILocalVariable(name: "size", arg: 1, scope: !5209, file: !115, line: 478, type: !513)
!5217 = !DILocation(line: 478, column: 51, scope: !5209, inlinedAt: !5210)
!5218 = !DILocalVariable(name: "flags", arg: 2, scope: !5209, file: !115, line: 478, type: !137)
!5219 = !DILocation(line: 478, column: 63, scope: !5209, inlinedAt: !5210)
!5220 = !DILocalVariable(name: "order", scope: !5209, file: !115, line: 480, type: !7)
!5221 = !DILocation(line: 480, column: 15, scope: !5209, inlinedAt: !5210)
!5222 = !DILocalVariable(name: "size", arg: 1, scope: !5183, file: !115, line: 538, type: !513)
!5223 = !DILocation(line: 538, column: 45, scope: !5183, inlinedAt: !5184)
!5224 = !DILocalVariable(name: "flags", arg: 2, scope: !5183, file: !115, line: 538, type: !137)
!5225 = !DILocation(line: 538, column: 57, scope: !5183, inlinedAt: !5184)
!5226 = !DILocalVariable(name: "index", scope: !5181, file: !115, line: 542, type: !7)
!5227 = !DILocation(line: 542, column: 16, scope: !5181, inlinedAt: !5184)
!5228 = !DILocalVariable(name: "size", arg: 1, scope: !5172, file: !115, line: 662, type: !513)
!5229 = !DILocation(line: 662, column: 36, scope: !5172)
!5230 = !DILocalVariable(name: "flags", arg: 2, scope: !5172, file: !115, line: 662, type: !137)
!5231 = !DILocation(line: 662, column: 48, scope: !5172)
!5232 = !DILocation(line: 664, column: 17, scope: !5172)
!5233 = !DILocation(line: 664, column: 23, scope: !5172)
!5234 = !DILocation(line: 664, column: 29, scope: !5172)
!5235 = !DILocation(line: 540, column: 27, scope: !5182, inlinedAt: !5184)
!5236 = !DILocation(line: 540, column: 6, scope: !5182, inlinedAt: !5184)
!5237 = !DILocation(line: 540, column: 6, scope: !5183, inlinedAt: !5184)
!5238 = !DILocation(line: 544, column: 7, scope: !5211, inlinedAt: !5184)
!5239 = !DILocation(line: 544, column: 12, scope: !5211, inlinedAt: !5184)
!5240 = !DILocation(line: 544, column: 7, scope: !5181, inlinedAt: !5184)
!5241 = !DILocation(line: 545, column: 25, scope: !5211, inlinedAt: !5184)
!5242 = !DILocation(line: 545, column: 31, scope: !5211, inlinedAt: !5184)
!5243 = !DILocation(line: 480, column: 33, scope: !5209, inlinedAt: !5210)
!5244 = !DILocation(line: 480, column: 23, scope: !5209, inlinedAt: !5210)
!5245 = !DILocation(line: 481, column: 29, scope: !5209, inlinedAt: !5210)
!5246 = !DILocation(line: 481, column: 35, scope: !5209, inlinedAt: !5210)
!5247 = !DILocation(line: 481, column: 42, scope: !5209, inlinedAt: !5210)
!5248 = !DILocation(line: 474, column: 23, scope: !5204, inlinedAt: !5208)
!5249 = !DILocation(line: 474, column: 29, scope: !5204, inlinedAt: !5208)
!5250 = !DILocation(line: 474, column: 36, scope: !5204, inlinedAt: !5208)
!5251 = !DILocation(line: 474, column: 9, scope: !5204, inlinedAt: !5208)
!5252 = !DILocation(line: 545, column: 4, scope: !5211, inlinedAt: !5184)
!5253 = !DILocation(line: 547, column: 25, scope: !5181, inlinedAt: !5184)
!5254 = !DILocation(line: 348, column: 7, scope: !5255, inlinedAt: !5202)
!5255 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 348, column: 6)
!5256 = !DILocation(line: 348, column: 6, scope: !5198, inlinedAt: !5202)
!5257 = !DILocation(line: 349, column: 3, scope: !5255, inlinedAt: !5202)
!5258 = !DILocation(line: 351, column: 6, scope: !5259, inlinedAt: !5202)
!5259 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 351, column: 6)
!5260 = !DILocation(line: 351, column: 11, scope: !5259, inlinedAt: !5202)
!5261 = !DILocation(line: 351, column: 6, scope: !5198, inlinedAt: !5202)
!5262 = !DILocation(line: 352, column: 3, scope: !5259, inlinedAt: !5202)
!5263 = !DILocation(line: 354, column: 32, scope: !5264, inlinedAt: !5202)
!5264 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 354, column: 6)
!5265 = !DILocation(line: 354, column: 37, scope: !5264, inlinedAt: !5202)
!5266 = !DILocation(line: 354, column: 42, scope: !5264, inlinedAt: !5202)
!5267 = !DILocation(line: 354, column: 45, scope: !5264, inlinedAt: !5202)
!5268 = !DILocation(line: 354, column: 50, scope: !5264, inlinedAt: !5202)
!5269 = !DILocation(line: 354, column: 6, scope: !5198, inlinedAt: !5202)
!5270 = !DILocation(line: 355, column: 3, scope: !5264, inlinedAt: !5202)
!5271 = !DILocation(line: 356, column: 32, scope: !5272, inlinedAt: !5202)
!5272 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 356, column: 6)
!5273 = !DILocation(line: 356, column: 37, scope: !5272, inlinedAt: !5202)
!5274 = !DILocation(line: 356, column: 43, scope: !5272, inlinedAt: !5202)
!5275 = !DILocation(line: 356, column: 46, scope: !5272, inlinedAt: !5202)
!5276 = !DILocation(line: 356, column: 51, scope: !5272, inlinedAt: !5202)
!5277 = !DILocation(line: 356, column: 6, scope: !5198, inlinedAt: !5202)
!5278 = !DILocation(line: 357, column: 3, scope: !5272, inlinedAt: !5202)
!5279 = !DILocation(line: 358, column: 6, scope: !5280, inlinedAt: !5202)
!5280 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 358, column: 6)
!5281 = !DILocation(line: 358, column: 11, scope: !5280, inlinedAt: !5202)
!5282 = !DILocation(line: 358, column: 6, scope: !5198, inlinedAt: !5202)
!5283 = !DILocation(line: 358, column: 26, scope: !5280, inlinedAt: !5202)
!5284 = !DILocation(line: 359, column: 6, scope: !5285, inlinedAt: !5202)
!5285 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 359, column: 6)
!5286 = !DILocation(line: 359, column: 11, scope: !5285, inlinedAt: !5202)
!5287 = !DILocation(line: 359, column: 6, scope: !5198, inlinedAt: !5202)
!5288 = !DILocation(line: 359, column: 26, scope: !5285, inlinedAt: !5202)
!5289 = !DILocation(line: 360, column: 6, scope: !5290, inlinedAt: !5202)
!5290 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 360, column: 6)
!5291 = !DILocation(line: 360, column: 11, scope: !5290, inlinedAt: !5202)
!5292 = !DILocation(line: 360, column: 6, scope: !5198, inlinedAt: !5202)
!5293 = !DILocation(line: 360, column: 26, scope: !5290, inlinedAt: !5202)
!5294 = !DILocation(line: 361, column: 6, scope: !5295, inlinedAt: !5202)
!5295 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 361, column: 6)
!5296 = !DILocation(line: 361, column: 11, scope: !5295, inlinedAt: !5202)
!5297 = !DILocation(line: 361, column: 6, scope: !5198, inlinedAt: !5202)
!5298 = !DILocation(line: 361, column: 26, scope: !5295, inlinedAt: !5202)
!5299 = !DILocation(line: 362, column: 6, scope: !5300, inlinedAt: !5202)
!5300 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 362, column: 6)
!5301 = !DILocation(line: 362, column: 11, scope: !5300, inlinedAt: !5202)
!5302 = !DILocation(line: 362, column: 6, scope: !5198, inlinedAt: !5202)
!5303 = !DILocation(line: 362, column: 26, scope: !5300, inlinedAt: !5202)
!5304 = !DILocation(line: 363, column: 6, scope: !5305, inlinedAt: !5202)
!5305 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 363, column: 6)
!5306 = !DILocation(line: 363, column: 11, scope: !5305, inlinedAt: !5202)
!5307 = !DILocation(line: 363, column: 6, scope: !5198, inlinedAt: !5202)
!5308 = !DILocation(line: 363, column: 26, scope: !5305, inlinedAt: !5202)
!5309 = !DILocation(line: 364, column: 6, scope: !5310, inlinedAt: !5202)
!5310 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 364, column: 6)
!5311 = !DILocation(line: 364, column: 11, scope: !5310, inlinedAt: !5202)
!5312 = !DILocation(line: 364, column: 6, scope: !5198, inlinedAt: !5202)
!5313 = !DILocation(line: 364, column: 26, scope: !5310, inlinedAt: !5202)
!5314 = !DILocation(line: 365, column: 6, scope: !5315, inlinedAt: !5202)
!5315 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 365, column: 6)
!5316 = !DILocation(line: 365, column: 11, scope: !5315, inlinedAt: !5202)
!5317 = !DILocation(line: 365, column: 6, scope: !5198, inlinedAt: !5202)
!5318 = !DILocation(line: 365, column: 26, scope: !5315, inlinedAt: !5202)
!5319 = !DILocation(line: 366, column: 6, scope: !5320, inlinedAt: !5202)
!5320 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 366, column: 6)
!5321 = !DILocation(line: 366, column: 11, scope: !5320, inlinedAt: !5202)
!5322 = !DILocation(line: 366, column: 6, scope: !5198, inlinedAt: !5202)
!5323 = !DILocation(line: 366, column: 26, scope: !5320, inlinedAt: !5202)
!5324 = !DILocation(line: 367, column: 6, scope: !5325, inlinedAt: !5202)
!5325 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 367, column: 6)
!5326 = !DILocation(line: 367, column: 11, scope: !5325, inlinedAt: !5202)
!5327 = !DILocation(line: 367, column: 6, scope: !5198, inlinedAt: !5202)
!5328 = !DILocation(line: 367, column: 26, scope: !5325, inlinedAt: !5202)
!5329 = !DILocation(line: 368, column: 6, scope: !5330, inlinedAt: !5202)
!5330 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 368, column: 6)
!5331 = !DILocation(line: 368, column: 11, scope: !5330, inlinedAt: !5202)
!5332 = !DILocation(line: 368, column: 6, scope: !5198, inlinedAt: !5202)
!5333 = !DILocation(line: 368, column: 26, scope: !5330, inlinedAt: !5202)
!5334 = !DILocation(line: 369, column: 6, scope: !5335, inlinedAt: !5202)
!5335 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 369, column: 6)
!5336 = !DILocation(line: 369, column: 11, scope: !5335, inlinedAt: !5202)
!5337 = !DILocation(line: 369, column: 6, scope: !5198, inlinedAt: !5202)
!5338 = !DILocation(line: 369, column: 26, scope: !5335, inlinedAt: !5202)
!5339 = !DILocation(line: 370, column: 6, scope: !5340, inlinedAt: !5202)
!5340 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 370, column: 6)
!5341 = !DILocation(line: 370, column: 11, scope: !5340, inlinedAt: !5202)
!5342 = !DILocation(line: 370, column: 6, scope: !5198, inlinedAt: !5202)
!5343 = !DILocation(line: 370, column: 26, scope: !5340, inlinedAt: !5202)
!5344 = !DILocation(line: 371, column: 6, scope: !5345, inlinedAt: !5202)
!5345 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 371, column: 6)
!5346 = !DILocation(line: 371, column: 11, scope: !5345, inlinedAt: !5202)
!5347 = !DILocation(line: 371, column: 6, scope: !5198, inlinedAt: !5202)
!5348 = !DILocation(line: 371, column: 26, scope: !5345, inlinedAt: !5202)
!5349 = !DILocation(line: 372, column: 6, scope: !5350, inlinedAt: !5202)
!5350 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 372, column: 6)
!5351 = !DILocation(line: 372, column: 11, scope: !5350, inlinedAt: !5202)
!5352 = !DILocation(line: 372, column: 6, scope: !5198, inlinedAt: !5202)
!5353 = !DILocation(line: 372, column: 26, scope: !5350, inlinedAt: !5202)
!5354 = !DILocation(line: 373, column: 6, scope: !5355, inlinedAt: !5202)
!5355 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 373, column: 6)
!5356 = !DILocation(line: 373, column: 11, scope: !5355, inlinedAt: !5202)
!5357 = !DILocation(line: 373, column: 6, scope: !5198, inlinedAt: !5202)
!5358 = !DILocation(line: 373, column: 26, scope: !5355, inlinedAt: !5202)
!5359 = !DILocation(line: 374, column: 6, scope: !5360, inlinedAt: !5202)
!5360 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 374, column: 6)
!5361 = !DILocation(line: 374, column: 11, scope: !5360, inlinedAt: !5202)
!5362 = !DILocation(line: 374, column: 6, scope: !5198, inlinedAt: !5202)
!5363 = !DILocation(line: 374, column: 26, scope: !5360, inlinedAt: !5202)
!5364 = !DILocation(line: 375, column: 6, scope: !5365, inlinedAt: !5202)
!5365 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 375, column: 6)
!5366 = !DILocation(line: 375, column: 11, scope: !5365, inlinedAt: !5202)
!5367 = !DILocation(line: 375, column: 6, scope: !5198, inlinedAt: !5202)
!5368 = !DILocation(line: 375, column: 27, scope: !5365, inlinedAt: !5202)
!5369 = !DILocation(line: 376, column: 6, scope: !5370, inlinedAt: !5202)
!5370 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 376, column: 6)
!5371 = !DILocation(line: 376, column: 11, scope: !5370, inlinedAt: !5202)
!5372 = !DILocation(line: 376, column: 6, scope: !5198, inlinedAt: !5202)
!5373 = !DILocation(line: 376, column: 32, scope: !5370, inlinedAt: !5202)
!5374 = !DILocation(line: 377, column: 6, scope: !5375, inlinedAt: !5202)
!5375 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 377, column: 6)
!5376 = !DILocation(line: 377, column: 11, scope: !5375, inlinedAt: !5202)
!5377 = !DILocation(line: 377, column: 6, scope: !5198, inlinedAt: !5202)
!5378 = !DILocation(line: 377, column: 32, scope: !5375, inlinedAt: !5202)
!5379 = !DILocation(line: 378, column: 6, scope: !5380, inlinedAt: !5202)
!5380 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 378, column: 6)
!5381 = !DILocation(line: 378, column: 11, scope: !5380, inlinedAt: !5202)
!5382 = !DILocation(line: 378, column: 6, scope: !5198, inlinedAt: !5202)
!5383 = !DILocation(line: 378, column: 32, scope: !5380, inlinedAt: !5202)
!5384 = !DILocation(line: 379, column: 6, scope: !5385, inlinedAt: !5202)
!5385 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 379, column: 6)
!5386 = !DILocation(line: 379, column: 11, scope: !5385, inlinedAt: !5202)
!5387 = !DILocation(line: 379, column: 6, scope: !5198, inlinedAt: !5202)
!5388 = !DILocation(line: 379, column: 33, scope: !5385, inlinedAt: !5202)
!5389 = !DILocation(line: 380, column: 6, scope: !5390, inlinedAt: !5202)
!5390 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 380, column: 6)
!5391 = !DILocation(line: 380, column: 11, scope: !5390, inlinedAt: !5202)
!5392 = !DILocation(line: 380, column: 6, scope: !5198, inlinedAt: !5202)
!5393 = !DILocation(line: 380, column: 33, scope: !5390, inlinedAt: !5202)
!5394 = !DILocation(line: 381, column: 6, scope: !5395, inlinedAt: !5202)
!5395 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 381, column: 6)
!5396 = !DILocation(line: 381, column: 11, scope: !5395, inlinedAt: !5202)
!5397 = !DILocation(line: 381, column: 6, scope: !5198, inlinedAt: !5202)
!5398 = !DILocation(line: 381, column: 33, scope: !5395, inlinedAt: !5202)
!5399 = !DILocation(line: 382, column: 2, scope: !5400, inlinedAt: !5202)
!5400 = distinct !DILexicalBlock(scope: !5401, file: !115, line: 382, column: 2)
!5401 = distinct !DILexicalBlock(scope: !5198, file: !115, line: 382, column: 2)
!5402 = !{i32 -2143178271, i32 -2143178242, i32 -2143178196, i32 -2143178138, i32 -2143178084, i32 -2143178030, i32 -2143177975, i32 -2143177944}
!5403 = !DILocation(line: 382, column: 2, scope: !5404, inlinedAt: !5202)
!5404 = distinct !DILexicalBlock(scope: !5405, file: !115, line: 382, column: 2)
!5405 = distinct !DILexicalBlock(scope: !5401, file: !115, line: 382, column: 2)
!5406 = !{i32 -2143177501, i32 -2143177494, i32 -2143177440, i32 -2143177409, i32 -2143177379}
!5407 = !DILocation(line: 382, column: 2, scope: !5405, inlinedAt: !5202)
!5408 = !DILocation(line: 386, column: 1, scope: !5198, inlinedAt: !5202)
!5409 = !DILocation(line: 547, column: 9, scope: !5181, inlinedAt: !5184)
!5410 = !DILocation(line: 549, column: 8, scope: !5411, inlinedAt: !5184)
!5411 = distinct !DILexicalBlock(scope: !5181, file: !115, line: 549, column: 7)
!5412 = !DILocation(line: 549, column: 7, scope: !5181, inlinedAt: !5184)
!5413 = !DILocation(line: 550, column: 4, scope: !5411, inlinedAt: !5184)
!5414 = !DILocation(line: 553, column: 33, scope: !5181, inlinedAt: !5184)
!5415 = !DILocation(line: 325, column: 6, scope: !5416, inlinedAt: !5196)
!5416 = distinct !DILexicalBlock(scope: !5192, file: !115, line: 325, column: 6)
!5417 = !DILocation(line: 325, column: 6, scope: !5192, inlinedAt: !5196)
!5418 = !DILocation(line: 326, column: 3, scope: !5416, inlinedAt: !5196)
!5419 = !DILocation(line: 332, column: 9, scope: !5192, inlinedAt: !5196)
!5420 = !DILocation(line: 332, column: 15, scope: !5192, inlinedAt: !5196)
!5421 = !DILocation(line: 332, column: 2, scope: !5192, inlinedAt: !5196)
!5422 = !DILocation(line: 336, column: 1, scope: !5192, inlinedAt: !5196)
!5423 = !DILocation(line: 553, column: 5, scope: !5181, inlinedAt: !5184)
!5424 = !DILocation(line: 553, column: 41, scope: !5181, inlinedAt: !5184)
!5425 = !DILocation(line: 554, column: 5, scope: !5181, inlinedAt: !5184)
!5426 = !DILocation(line: 554, column: 12, scope: !5181, inlinedAt: !5184)
!5427 = !DILocation(line: 448, column: 31, scope: !5176, inlinedAt: !5180)
!5428 = !DILocation(line: 448, column: 34, scope: !5176, inlinedAt: !5180)
!5429 = !DILocation(line: 448, column: 14, scope: !5176, inlinedAt: !5180)
!5430 = !DILocation(line: 450, column: 22, scope: !5176, inlinedAt: !5180)
!5431 = !DILocation(line: 450, column: 25, scope: !5176, inlinedAt: !5180)
!5432 = !DILocation(line: 450, column: 30, scope: !5176, inlinedAt: !5180)
!5433 = !DILocation(line: 450, column: 36, scope: !5176, inlinedAt: !5180)
!5434 = !DILocation(line: 450, column: 8, scope: !5176, inlinedAt: !5180)
!5435 = !DILocation(line: 450, column: 6, scope: !5176, inlinedAt: !5180)
!5436 = !DILocation(line: 451, column: 9, scope: !5176, inlinedAt: !5180)
!5437 = !DILocation(line: 552, column: 3, scope: !5181, inlinedAt: !5184)
!5438 = !DILocation(line: 557, column: 19, scope: !5183, inlinedAt: !5184)
!5439 = !DILocation(line: 557, column: 25, scope: !5183, inlinedAt: !5184)
!5440 = !DILocation(line: 557, column: 9, scope: !5183, inlinedAt: !5184)
!5441 = !DILocation(line: 557, column: 2, scope: !5183, inlinedAt: !5184)
!5442 = !DILocation(line: 558, column: 1, scope: !5183, inlinedAt: !5184)
!5443 = !DILocation(line: 664, column: 2, scope: !5172)
!5444 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !4180, file: !4180, line: 1870, type: !5445, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5445 = !DISubroutineType(types: !5446)
!5446 = !{null, !4178, !136}
!5447 = !DILocalVariable(name: "pdev", arg: 1, scope: !5444, file: !4180, line: 1870, type: !4178)
!5448 = !DILocation(line: 1870, column: 52, scope: !5444)
!5449 = !DILocalVariable(name: "data", arg: 2, scope: !5444, file: !4180, line: 1870, type: !136)
!5450 = !DILocation(line: 1870, column: 64, scope: !5444)
!5451 = !DILocation(line: 1872, column: 19, scope: !5444)
!5452 = !DILocation(line: 1872, column: 25, scope: !5444)
!5453 = !DILocation(line: 1872, column: 30, scope: !5444)
!5454 = !DILocation(line: 1872, column: 2, scope: !5444)
!5455 = !DILocation(line: 1873, column: 1, scope: !5444)
!5456 = distinct !DISubprogram(name: "gadget_release", scope: !3, file: !3, line: 3561, type: !3554, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5457 = !DILocalVariable(name: "_dev", arg: 1, scope: !5456, file: !3, line: 3561, type: !412)
!5458 = !DILocation(line: 3561, column: 43, scope: !5456)
!5459 = !DILocalVariable(name: "dev", scope: !5456, file: !3, line: 3563, type: !284)
!5460 = !DILocation(line: 3563, column: 18, scope: !5456)
!5461 = !DILocalVariable(name: "__mptr", scope: !5462, file: !3, line: 3563, type: !136)
!5462 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 3563, column: 24)
!5463 = !DILocation(line: 3563, column: 24, scope: !5462)
!5464 = !DILocation(line: 3563, column: 24, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5462, file: !3, line: 3563, column: 24)
!5466 = !DILocation(line: 3565, column: 8, scope: !5456)
!5467 = !DILocation(line: 3565, column: 2, scope: !5456)
!5468 = !DILocation(line: 3566, column: 1, scope: !5456)
!5469 = distinct !DISubprogram(name: "readl", scope: !5470, file: !5470, line: 59, type: !5471, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5470 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!5471 = !DISubroutineType(types: !5472)
!5472 = !{!7, !5473}
!5473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5474, size: 64)
!5474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5475)
!5475 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5476 = !DILocalVariable(name: "addr", arg: 1, scope: !5469, file: !5470, line: 59, type: !5473)
!5477 = !DILocation(line: 59, column: 1, scope: !5469)
!5478 = !DILocalVariable(name: "ret", scope: !5469, file: !5470, line: 59, type: !7)
!5479 = !{i32 -2143334254}
!5480 = distinct !DISubprogram(name: "get_idx_reg", scope: !286, file: !286, line: 24, type: !5481, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5481 = !DISubroutineType(types: !5482)
!5482 = !{!144, !139, !144}
!5483 = !DILocalVariable(name: "regs", arg: 1, scope: !5480, file: !286, line: 24, type: !139)
!5484 = !DILocation(line: 24, column: 60, scope: !5480)
!5485 = !DILocalVariable(name: "index", arg: 2, scope: !5480, file: !286, line: 24, type: !144)
!5486 = !DILocation(line: 24, column: 70, scope: !5480)
!5487 = !DILocation(line: 26, column: 9, scope: !5480)
!5488 = !DILocation(line: 26, column: 17, scope: !5480)
!5489 = !DILocation(line: 26, column: 23, scope: !5480)
!5490 = !DILocation(line: 26, column: 16, scope: !5480)
!5491 = !DILocation(line: 26, column: 2, scope: !5480)
!5492 = !DILocation(line: 28, column: 16, scope: !5480)
!5493 = !DILocation(line: 28, column: 22, scope: !5480)
!5494 = !DILocation(line: 28, column: 15, scope: !5480)
!5495 = !DILocation(line: 28, column: 9, scope: !5480)
!5496 = !DILocation(line: 28, column: 2, scope: !5480)
!5497 = distinct !DISubprogram(name: "writel", scope: !5470, file: !5470, line: 67, type: !5498, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5498 = !DISubroutineType(types: !5499)
!5499 = !{null, !7, !5500}
!5500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5475, size: 64)
!5501 = !DILocalVariable(name: "val", arg: 1, scope: !5497, file: !5470, line: 67, type: !7)
!5502 = !DILocation(line: 67, column: 1, scope: !5497)
!5503 = !DILocalVariable(name: "addr", arg: 2, scope: !5497, file: !5470, line: 67, type: !5500)
!5504 = !{i32 -2143331861}
!5505 = distinct !DISubprogram(name: "usb_reset", scope: !3, file: !3, line: 2147, type: !4634, scopeLine: 2148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5506 = !DILocalVariable(name: "dev", arg: 1, scope: !5505, file: !3, line: 2147, type: !284)
!5507 = !DILocation(line: 2147, column: 39, scope: !5505)
!5508 = !DILocation(line: 2149, column: 6, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 2149, column: 6)
!5510 = !DILocation(line: 2149, column: 11, scope: !5509)
!5511 = !DILocation(line: 2149, column: 18, scope: !5509)
!5512 = !DILocation(line: 2149, column: 6, scope: !5505)
!5513 = !DILocation(line: 2150, column: 25, scope: !5509)
!5514 = !DILocation(line: 2150, column: 10, scope: !5509)
!5515 = !DILocation(line: 2150, column: 3, scope: !5509)
!5516 = !DILocation(line: 2151, column: 24, scope: !5505)
!5517 = !DILocation(line: 2151, column: 9, scope: !5505)
!5518 = !DILocation(line: 2151, column: 2, scope: !5505)
!5519 = !DILocation(line: 2152, column: 1, scope: !5505)
!5520 = distinct !DISubprogram(name: "usb_reinit", scope: !3, file: !3, line: 2304, type: !4634, scopeLine: 2305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5521 = !DILocalVariable(name: "dev", arg: 1, scope: !5520, file: !3, line: 2304, type: !284)
!5522 = !DILocation(line: 2304, column: 40, scope: !5520)
!5523 = !DILocation(line: 2306, column: 6, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 2306, column: 6)
!5525 = !DILocation(line: 2306, column: 11, scope: !5524)
!5526 = !DILocation(line: 2306, column: 18, scope: !5524)
!5527 = !DILocation(line: 2306, column: 6, scope: !5520)
!5528 = !DILocation(line: 2307, column: 26, scope: !5524)
!5529 = !DILocation(line: 2307, column: 10, scope: !5524)
!5530 = !DILocation(line: 2307, column: 3, scope: !5524)
!5531 = !DILocation(line: 2308, column: 25, scope: !5520)
!5532 = !DILocation(line: 2308, column: 9, scope: !5520)
!5533 = !DILocation(line: 2308, column: 2, scope: !5520)
!5534 = !DILocation(line: 2309, column: 1, scope: !5520)
!5535 = distinct !DISubprogram(name: "request_irq", scope: !4241, file: !4241, line: 157, type: !5536, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5536 = !DISubroutineType(types: !5537)
!5537 = !{!330, !7, !5538, !347, !402, !136}
!5538 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !4241, line: 92, baseType: !5539)
!5539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5540, size: 64)
!5540 = !DISubroutineType(types: !5541)
!5541 = !{!5542, !330, !136}
!5542 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !127, line: 17, baseType: !126)
!5543 = !DILocalVariable(name: "irq", arg: 1, scope: !5535, file: !4241, line: 157, type: !7)
!5544 = !DILocation(line: 157, column: 26, scope: !5535)
!5545 = !DILocalVariable(name: "handler", arg: 2, scope: !5535, file: !4241, line: 157, type: !5538)
!5546 = !DILocation(line: 157, column: 45, scope: !5535)
!5547 = !DILocalVariable(name: "flags", arg: 3, scope: !5535, file: !4241, line: 157, type: !347)
!5548 = !DILocation(line: 157, column: 68, scope: !5535)
!5549 = !DILocalVariable(name: "name", arg: 4, scope: !5535, file: !4241, line: 158, type: !402)
!5550 = !DILocation(line: 158, column: 18, scope: !5535)
!5551 = !DILocalVariable(name: "dev", arg: 5, scope: !5535, file: !4241, line: 158, type: !136)
!5552 = !DILocation(line: 158, column: 30, scope: !5535)
!5553 = !DILocation(line: 160, column: 30, scope: !5535)
!5554 = !DILocation(line: 160, column: 35, scope: !5535)
!5555 = !DILocation(line: 160, column: 50, scope: !5535)
!5556 = !DILocation(line: 160, column: 57, scope: !5535)
!5557 = !DILocation(line: 160, column: 63, scope: !5535)
!5558 = !DILocation(line: 160, column: 9, scope: !5535)
!5559 = !DILocation(line: 160, column: 2, scope: !5535)
!5560 = distinct !DISubprogram(name: "net2280_irq", scope: !3, file: !3, line: 3530, type: !5540, scopeLine: 3531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5561 = !DILocalVariable(name: "lock", arg: 1, scope: !5562, file: !4663, line: 392, type: !1240)
!5562 = distinct !DISubprogram(name: "spin_unlock", scope: !4663, file: !4663, line: 392, type: !5563, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5563 = !DISubroutineType(types: !5564)
!5564 = !{null, !1240}
!5565 = !DILocation(line: 392, column: 53, scope: !5562, inlinedAt: !5566)
!5566 = distinct !DILocation(line: 3554, column: 2, scope: !5560)
!5567 = !DILocalVariable(name: "lock", arg: 1, scope: !5568, file: !4663, line: 352, type: !1240)
!5568 = distinct !DISubprogram(name: "spin_lock", scope: !4663, file: !4663, line: 352, type: !5563, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5569 = !DILocation(line: 352, column: 51, scope: !5568, inlinedAt: !5570)
!5570 = distinct !DILocation(line: 3539, column: 2, scope: !5560)
!5571 = !DILocalVariable(name: "irq", arg: 1, scope: !5560, file: !3, line: 3530, type: !330)
!5572 = !DILocation(line: 3530, column: 36, scope: !5560)
!5573 = !DILocalVariable(name: "_dev", arg: 2, scope: !5560, file: !3, line: 3530, type: !136)
!5574 = !DILocation(line: 3530, column: 47, scope: !5560)
!5575 = !DILocalVariable(name: "dev", scope: !5560, file: !3, line: 3532, type: !284)
!5576 = !DILocation(line: 3532, column: 19, scope: !5560)
!5577 = !DILocation(line: 3532, column: 25, scope: !5560)
!5578 = !DILocation(line: 3535, column: 7, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 3535, column: 6)
!5580 = !DILocation(line: 3535, column: 12, scope: !5579)
!5581 = !DILocation(line: 3535, column: 19, scope: !5579)
!5582 = !DILocation(line: 3535, column: 33, scope: !5579)
!5583 = !DILocation(line: 3536, column: 13, scope: !5579)
!5584 = !DILocation(line: 3536, column: 18, scope: !5579)
!5585 = !DILocation(line: 3536, column: 24, scope: !5579)
!5586 = !DILocation(line: 3536, column: 12, scope: !5579)
!5587 = !DILocation(line: 3536, column: 6, scope: !5579)
!5588 = !DILocation(line: 3536, column: 34, scope: !5579)
!5589 = !DILocation(line: 3535, column: 6, scope: !5560)
!5590 = !DILocation(line: 3537, column: 3, scope: !5579)
!5591 = !DILocation(line: 3539, column: 13, scope: !5560)
!5592 = !DILocation(line: 3539, column: 18, scope: !5560)
!5593 = !DILocation(line: 354, column: 2, scope: !5594, inlinedAt: !5570)
!5594 = distinct !DILexicalBlock(scope: !5568, file: !4663, line: 354, column: 2)
!5595 = !{i32 -2145380122}
!5596 = !DILocation(line: 354, column: 2, scope: !5597, inlinedAt: !5570)
!5597 = distinct !DILexicalBlock(scope: !5594, file: !4663, line: 354, column: 2)
!5598 = !DILocation(line: 3542, column: 20, scope: !5560)
!5599 = !DILocation(line: 3542, column: 32, scope: !5560)
!5600 = !DILocation(line: 3542, column: 37, scope: !5560)
!5601 = !DILocation(line: 3542, column: 43, scope: !5560)
!5602 = !DILocation(line: 3542, column: 31, scope: !5560)
!5603 = !DILocation(line: 3542, column: 25, scope: !5560)
!5604 = !DILocation(line: 3542, column: 2, scope: !5560)
!5605 = !DILocation(line: 3545, column: 20, scope: !5560)
!5606 = !DILocation(line: 3545, column: 32, scope: !5560)
!5607 = !DILocation(line: 3545, column: 37, scope: !5560)
!5608 = !DILocation(line: 3545, column: 43, scope: !5560)
!5609 = !DILocation(line: 3545, column: 31, scope: !5560)
!5610 = !DILocation(line: 3545, column: 25, scope: !5560)
!5611 = !DILocation(line: 3545, column: 2, scope: !5560)
!5612 = !DILocation(line: 3547, column: 6, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 3547, column: 6)
!5614 = !DILocation(line: 3547, column: 11, scope: !5613)
!5615 = !DILocation(line: 3547, column: 18, scope: !5613)
!5616 = !DILocation(line: 3547, column: 6, scope: !5560)
!5617 = !DILocalVariable(name: "pciirqenb1", scope: !5618, file: !3, line: 3549, type: !144)
!5618 = distinct !DILexicalBlock(scope: !5613, file: !3, line: 3547, column: 30)
!5619 = !DILocation(line: 3549, column: 7, scope: !5618)
!5620 = !DILocation(line: 3549, column: 27, scope: !5618)
!5621 = !DILocation(line: 3549, column: 32, scope: !5618)
!5622 = !DILocation(line: 3549, column: 38, scope: !5618)
!5623 = !DILocation(line: 3549, column: 26, scope: !5618)
!5624 = !DILocation(line: 3549, column: 20, scope: !5618)
!5625 = !DILocation(line: 3550, column: 10, scope: !5618)
!5626 = !DILocation(line: 3550, column: 21, scope: !5618)
!5627 = !DILocation(line: 3550, column: 36, scope: !5618)
!5628 = !DILocation(line: 3550, column: 41, scope: !5618)
!5629 = !DILocation(line: 3550, column: 47, scope: !5618)
!5630 = !DILocation(line: 3550, column: 35, scope: !5618)
!5631 = !DILocation(line: 3550, column: 3, scope: !5618)
!5632 = !DILocation(line: 3551, column: 10, scope: !5618)
!5633 = !DILocation(line: 3551, column: 23, scope: !5618)
!5634 = !DILocation(line: 3551, column: 28, scope: !5618)
!5635 = !DILocation(line: 3551, column: 34, scope: !5618)
!5636 = !DILocation(line: 3551, column: 22, scope: !5618)
!5637 = !DILocation(line: 3551, column: 3, scope: !5618)
!5638 = !DILocation(line: 3552, column: 2, scope: !5618)
!5639 = !DILocation(line: 3554, column: 15, scope: !5560)
!5640 = !DILocation(line: 3554, column: 20, scope: !5560)
!5641 = !DILocation(line: 394, column: 2, scope: !5642, inlinedAt: !5566)
!5642 = distinct !DILexicalBlock(scope: !5562, file: !4663, line: 394, column: 2)
!5643 = !{i32 -2145377761}
!5644 = !DILocation(line: 394, column: 2, scope: !5645, inlinedAt: !5566)
!5645 = distinct !DILexicalBlock(scope: !5642, file: !4663, line: 394, column: 2)
!5646 = !DILocation(line: 3556, column: 2, scope: !5560)
!5647 = !DILocation(line: 3557, column: 1, scope: !5560)
!5648 = distinct !DISubprogram(name: "get_order", scope: !5649, file: !5649, line: 29, type: !5650, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5649 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!5650 = !DISubroutineType(types: !5651)
!5651 = !{!330, !347}
!5652 = !DILocalVariable(name: "x", arg: 1, scope: !5653, file: !5654, line: 366, type: !609)
!5653 = distinct !DISubprogram(name: "fls64", scope: !5654, file: !5654, line: 366, type: !5655, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5654 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!5655 = !DISubroutineType(types: !5656)
!5656 = !{!330, !609}
!5657 = !DILocation(line: 366, column: 40, scope: !5653, inlinedAt: !5658)
!5658 = distinct !DILocation(line: 46, column: 9, scope: !5648)
!5659 = !DILocalVariable(name: "bitpos", scope: !5653, file: !5654, line: 368, type: !330)
!5660 = !DILocation(line: 368, column: 6, scope: !5653, inlinedAt: !5658)
!5661 = !DILocalVariable(name: "size", arg: 1, scope: !5648, file: !5649, line: 29, type: !347)
!5662 = !DILocation(line: 29, column: 63, scope: !5648)
!5663 = !DILocation(line: 31, column: 27, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5648, file: !5649, line: 31, column: 6)
!5665 = !DILocation(line: 31, column: 6, scope: !5664)
!5666 = !DILocation(line: 31, column: 6, scope: !5648)
!5667 = !DILocation(line: 32, column: 8, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !5649, line: 32, column: 7)
!5669 = distinct !DILexicalBlock(scope: !5664, file: !5649, line: 31, column: 34)
!5670 = !DILocation(line: 32, column: 7, scope: !5669)
!5671 = !DILocation(line: 33, column: 4, scope: !5668)
!5672 = !DILocation(line: 35, column: 7, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5669, file: !5649, line: 35, column: 7)
!5674 = !DILocation(line: 35, column: 12, scope: !5673)
!5675 = !DILocation(line: 35, column: 7, scope: !5669)
!5676 = !DILocation(line: 36, column: 4, scope: !5673)
!5677 = !DILocation(line: 38, column: 10, scope: !5669)
!5678 = !DILocation(line: 38, column: 28, scope: !5669)
!5679 = !DILocation(line: 38, column: 41, scope: !5669)
!5680 = !DILocation(line: 38, column: 3, scope: !5669)
!5681 = !DILocation(line: 41, column: 6, scope: !5648)
!5682 = !DILocation(line: 42, column: 7, scope: !5648)
!5683 = !DILocation(line: 46, column: 15, scope: !5648)
!5684 = !DILocation(line: 374, column: 2, scope: !5653, inlinedAt: !5658)
!5685 = !DILocation(line: 376, column: 14, scope: !5653, inlinedAt: !5658)
!5686 = !{i32 398955}
!5687 = !DILocation(line: 377, column: 9, scope: !5653, inlinedAt: !5658)
!5688 = !DILocation(line: 377, column: 16, scope: !5653, inlinedAt: !5658)
!5689 = !DILocation(line: 46, column: 2, scope: !5648)
!5690 = !DILocation(line: 48, column: 1, scope: !5648)
!5691 = distinct !DISubprogram(name: "__ilog2_u64", scope: !5692, file: !5692, line: 30, type: !5693, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5692 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!5693 = !DISubroutineType(types: !5694)
!5694 = !{!330, !608}
!5695 = !DILocation(line: 366, column: 40, scope: !5653, inlinedAt: !5696)
!5696 = distinct !DILocation(line: 32, column: 9, scope: !5691)
!5697 = !DILocation(line: 368, column: 6, scope: !5653, inlinedAt: !5696)
!5698 = !DILocalVariable(name: "n", arg: 1, scope: !5691, file: !5692, line: 30, type: !608)
!5699 = !DILocation(line: 30, column: 21, scope: !5691)
!5700 = !DILocation(line: 32, column: 15, scope: !5691)
!5701 = !DILocation(line: 374, column: 2, scope: !5653, inlinedAt: !5696)
!5702 = !DILocation(line: 376, column: 14, scope: !5653, inlinedAt: !5696)
!5703 = !DILocation(line: 377, column: 9, scope: !5653, inlinedAt: !5696)
!5704 = !DILocation(line: 377, column: 16, scope: !5653, inlinedAt: !5696)
!5705 = !DILocation(line: 32, column: 18, scope: !5691)
!5706 = !DILocation(line: 32, column: 2, scope: !5691)
!5707 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !5708, file: !5708, line: 137, type: !5709, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5708 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!5709 = !DISubroutineType(types: !5710)
!5710 = !{!136, !1111, !2287, !513, !137}
!5711 = !DILocalVariable(name: "s", arg: 1, scope: !5707, file: !5708, line: 137, type: !1111)
!5712 = !DILocation(line: 137, column: 54, scope: !5707)
!5713 = !DILocalVariable(name: "object", arg: 2, scope: !5707, file: !5708, line: 137, type: !2287)
!5714 = !DILocation(line: 137, column: 69, scope: !5707)
!5715 = !DILocalVariable(name: "size", arg: 3, scope: !5707, file: !5708, line: 138, type: !513)
!5716 = !DILocation(line: 138, column: 12, scope: !5707)
!5717 = !DILocalVariable(name: "flags", arg: 4, scope: !5707, file: !5708, line: 138, type: !137)
!5718 = !DILocation(line: 138, column: 24, scope: !5707)
!5719 = !DILocation(line: 140, column: 17, scope: !5707)
!5720 = !DILocation(line: 140, column: 2, scope: !5707)
!5721 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !73, file: !73, line: 660, type: !5722, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5722 = !DISubroutineType(types: !5723)
!5723 = !{null, !412, !136}
!5724 = !DILocalVariable(name: "dev", arg: 1, scope: !5721, file: !73, line: 660, type: !412)
!5725 = !DILocation(line: 660, column: 51, scope: !5721)
!5726 = !DILocalVariable(name: "data", arg: 2, scope: !5721, file: !73, line: 660, type: !136)
!5727 = !DILocation(line: 660, column: 62, scope: !5721)
!5728 = !DILocation(line: 662, column: 21, scope: !5721)
!5729 = !DILocation(line: 662, column: 2, scope: !5721)
!5730 = !DILocation(line: 662, column: 7, scope: !5721)
!5731 = !DILocation(line: 662, column: 19, scope: !5721)
!5732 = !DILocation(line: 663, column: 1, scope: !5721)
!5733 = distinct !DISubprogram(name: "net2280_get_frame", scope: !3, file: !3, line: 1466, type: !328, scopeLine: 1467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5734 = !DILocalVariable(name: "lock", arg: 1, scope: !5735, file: !4663, line: 407, type: !1240)
!5735 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !4663, file: !4663, line: 407, type: !5736, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5736 = !DISubroutineType(types: !5737)
!5737 = !{null, !1240, !347}
!5738 = !DILocation(line: 407, column: 64, scope: !5735, inlinedAt: !5739)
!5739 = distinct !DILocation(line: 1477, column: 2, scope: !5733)
!5740 = !DILocalVariable(name: "flags", arg: 2, scope: !5735, file: !4663, line: 407, type: !347)
!5741 = !DILocation(line: 407, column: 84, scope: !5735, inlinedAt: !5739)
!5742 = !DILocation(line: 327, column: 67, scope: !4662, inlinedAt: !5743)
!5743 = distinct !DILocation(line: 1475, column: 2, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 1475, column: 2)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 1475, column: 2)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 1475, column: 2)
!5747 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 1475, column: 2)
!5748 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 1475, column: 2)
!5749 = !DILocalVariable(name: "_gadget", arg: 1, scope: !5733, file: !3, line: 1466, type: !331)
!5750 = !DILocation(line: 1466, column: 49, scope: !5733)
!5751 = !DILocalVariable(name: "dev", scope: !5733, file: !3, line: 1468, type: !284)
!5752 = !DILocation(line: 1468, column: 19, scope: !5733)
!5753 = !DILocalVariable(name: "flags", scope: !5733, file: !3, line: 1469, type: !347)
!5754 = !DILocation(line: 1469, column: 17, scope: !5733)
!5755 = !DILocalVariable(name: "retval", scope: !5733, file: !3, line: 1470, type: !1036)
!5756 = !DILocation(line: 1470, column: 8, scope: !5733)
!5757 = !DILocation(line: 1472, column: 7, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 1472, column: 6)
!5759 = !DILocation(line: 1472, column: 6, scope: !5733)
!5760 = !DILocation(line: 1473, column: 3, scope: !5758)
!5761 = !DILocalVariable(name: "__mptr", scope: !5762, file: !3, line: 1474, type: !136)
!5762 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 1474, column: 8)
!5763 = !DILocation(line: 1474, column: 8, scope: !5762)
!5764 = !DILocation(line: 1474, column: 8, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 1474, column: 8)
!5766 = !DILocation(line: 1474, column: 6, scope: !5733)
!5767 = !DILocation(line: 1475, column: 2, scope: !5733)
!5768 = !DILocation(line: 1475, column: 2, scope: !5748)
!5769 = !DILocalVariable(name: "__dummy", scope: !5770, file: !3, line: 1475, type: !347)
!5770 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 1475, column: 2)
!5771 = !DILocation(line: 1475, column: 2, scope: !5770)
!5772 = !DILocalVariable(name: "__dummy2", scope: !5770, file: !3, line: 1475, type: !347)
!5773 = !DILocation(line: 1475, column: 2, scope: !5747)
!5774 = !DILocation(line: 1475, column: 2, scope: !5746)
!5775 = !DILocation(line: 1475, column: 2, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 1475, column: 2)
!5777 = !DILocalVariable(name: "__dummy", scope: !5778, file: !3, line: 1475, type: !347)
!5778 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 1475, column: 2)
!5779 = distinct !DILexicalBlock(scope: !5776, file: !3, line: 1475, column: 2)
!5780 = !DILocation(line: 1475, column: 2, scope: !5778)
!5781 = !DILocalVariable(name: "__dummy2", scope: !5778, file: !3, line: 1475, type: !347)
!5782 = !DILocation(line: 1475, column: 2, scope: !5779)
!5783 = !DILocation(line: 1475, column: 2, scope: !5745)
!5784 = !{i32 -2141407496}
!5785 = !DILocation(line: 1475, column: 2, scope: !5744)
!5786 = !DILocation(line: 329, column: 10, scope: !4662, inlinedAt: !5743)
!5787 = !DILocation(line: 329, column: 16, scope: !4662, inlinedAt: !5743)
!5788 = !DILocation(line: 1476, column: 23, scope: !5733)
!5789 = !DILocation(line: 1476, column: 28, scope: !5733)
!5790 = !DILocation(line: 1476, column: 11, scope: !5733)
!5791 = !DILocation(line: 1476, column: 45, scope: !5733)
!5792 = !DILocation(line: 1476, column: 9, scope: !5733)
!5793 = !DILocation(line: 1477, column: 26, scope: !5733)
!5794 = !DILocation(line: 1477, column: 31, scope: !5733)
!5795 = !DILocation(line: 1477, column: 37, scope: !5733)
!5796 = !DILocalVariable(name: "__dummy", scope: !5797, file: !4663, line: 409, type: !347)
!5797 = distinct !DILexicalBlock(scope: !5798, file: !4663, line: 409, column: 2)
!5798 = distinct !DILexicalBlock(scope: !5735, file: !4663, line: 409, column: 2)
!5799 = !DILocation(line: 409, column: 2, scope: !5797, inlinedAt: !5739)
!5800 = !DILocalVariable(name: "__dummy2", scope: !5797, file: !4663, line: 409, type: !347)
!5801 = !DILocalVariable(name: "__dummy", scope: !5802, file: !4663, line: 409, type: !347)
!5802 = distinct !DILexicalBlock(scope: !5803, file: !4663, line: 409, column: 2)
!5803 = distinct !DILexicalBlock(scope: !5804, file: !4663, line: 409, column: 2)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !4663, line: 409, column: 2)
!5805 = distinct !DILexicalBlock(scope: !5798, file: !4663, line: 409, column: 2)
!5806 = !DILocation(line: 409, column: 2, scope: !5802, inlinedAt: !5739)
!5807 = !DILocalVariable(name: "__dummy2", scope: !5802, file: !4663, line: 409, type: !347)
!5808 = !DILocation(line: 409, column: 2, scope: !5803, inlinedAt: !5739)
!5809 = !DILocation(line: 409, column: 2, scope: !5810, inlinedAt: !5739)
!5810 = distinct !DILexicalBlock(scope: !5805, file: !4663, line: 409, column: 2)
!5811 = !{i32 -2145375435}
!5812 = !DILocation(line: 409, column: 2, scope: !5813, inlinedAt: !5739)
!5813 = distinct !DILexicalBlock(scope: !5810, file: !4663, line: 409, column: 2)
!5814 = !DILocation(line: 1478, column: 9, scope: !5733)
!5815 = !DILocation(line: 1478, column: 2, scope: !5733)
!5816 = !DILocation(line: 1479, column: 1, scope: !5733)
!5817 = distinct !DISubprogram(name: "net2280_wakeup", scope: !3, file: !3, line: 1481, type: !328, scopeLine: 1482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5818 = !DILocation(line: 407, column: 64, scope: !5735, inlinedAt: !5819)
!5819 = distinct !DILocation(line: 1495, column: 2, scope: !5817)
!5820 = !DILocation(line: 407, column: 84, scope: !5735, inlinedAt: !5819)
!5821 = !DILocation(line: 327, column: 67, scope: !4662, inlinedAt: !5822)
!5822 = distinct !DILocation(line: 1491, column: 2, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 1491, column: 2)
!5824 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 1491, column: 2)
!5825 = distinct !DILexicalBlock(scope: !5826, file: !3, line: 1491, column: 2)
!5826 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 1491, column: 2)
!5827 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 1491, column: 2)
!5828 = !DILocalVariable(name: "_gadget", arg: 1, scope: !5817, file: !3, line: 1481, type: !331)
!5829 = !DILocation(line: 1481, column: 46, scope: !5817)
!5830 = !DILocalVariable(name: "dev", scope: !5817, file: !3, line: 1483, type: !284)
!5831 = !DILocation(line: 1483, column: 19, scope: !5817)
!5832 = !DILocalVariable(name: "tmp", scope: !5817, file: !3, line: 1484, type: !144)
!5833 = !DILocation(line: 1484, column: 8, scope: !5817)
!5834 = !DILocalVariable(name: "flags", scope: !5817, file: !3, line: 1485, type: !347)
!5835 = !DILocation(line: 1485, column: 17, scope: !5817)
!5836 = !DILocation(line: 1487, column: 7, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 1487, column: 6)
!5838 = !DILocation(line: 1487, column: 6, scope: !5817)
!5839 = !DILocation(line: 1488, column: 3, scope: !5837)
!5840 = !DILocalVariable(name: "__mptr", scope: !5841, file: !3, line: 1489, type: !136)
!5841 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 1489, column: 8)
!5842 = !DILocation(line: 1489, column: 8, scope: !5841)
!5843 = !DILocation(line: 1489, column: 8, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5841, file: !3, line: 1489, column: 8)
!5845 = !DILocation(line: 1489, column: 6, scope: !5817)
!5846 = !DILocation(line: 1491, column: 2, scope: !5817)
!5847 = !DILocation(line: 1491, column: 2, scope: !5827)
!5848 = !DILocalVariable(name: "__dummy", scope: !5849, file: !3, line: 1491, type: !347)
!5849 = distinct !DILexicalBlock(scope: !5826, file: !3, line: 1491, column: 2)
!5850 = !DILocation(line: 1491, column: 2, scope: !5849)
!5851 = !DILocalVariable(name: "__dummy2", scope: !5849, file: !3, line: 1491, type: !347)
!5852 = !DILocation(line: 1491, column: 2, scope: !5826)
!5853 = !DILocation(line: 1491, column: 2, scope: !5825)
!5854 = !DILocation(line: 1491, column: 2, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 1491, column: 2)
!5856 = !DILocalVariable(name: "__dummy", scope: !5857, file: !3, line: 1491, type: !347)
!5857 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 1491, column: 2)
!5858 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 1491, column: 2)
!5859 = !DILocation(line: 1491, column: 2, scope: !5857)
!5860 = !DILocalVariable(name: "__dummy2", scope: !5857, file: !3, line: 1491, type: !347)
!5861 = !DILocation(line: 1491, column: 2, scope: !5858)
!5862 = !DILocation(line: 1491, column: 2, scope: !5824)
!5863 = !{i32 -2141405008}
!5864 = !DILocation(line: 1491, column: 2, scope: !5823)
!5865 = !DILocation(line: 329, column: 10, scope: !4662, inlinedAt: !5822)
!5866 = !DILocation(line: 329, column: 16, scope: !4662, inlinedAt: !5822)
!5867 = !DILocation(line: 1492, column: 15, scope: !5817)
!5868 = !DILocation(line: 1492, column: 20, scope: !5817)
!5869 = !DILocation(line: 1492, column: 25, scope: !5817)
!5870 = !DILocation(line: 1492, column: 14, scope: !5817)
!5871 = !DILocation(line: 1492, column: 8, scope: !5817)
!5872 = !DILocation(line: 1492, column: 6, scope: !5817)
!5873 = !DILocation(line: 1493, column: 6, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 1493, column: 6)
!5875 = !DILocation(line: 1493, column: 10, scope: !5874)
!5876 = !DILocation(line: 1493, column: 6, scope: !5817)
!5877 = !DILocation(line: 1494, column: 33, scope: !5874)
!5878 = !DILocation(line: 1494, column: 38, scope: !5874)
!5879 = !DILocation(line: 1494, column: 43, scope: !5874)
!5880 = !DILocation(line: 1494, column: 32, scope: !5874)
!5881 = !DILocation(line: 1494, column: 3, scope: !5874)
!5882 = !DILocation(line: 1495, column: 26, scope: !5817)
!5883 = !DILocation(line: 1495, column: 31, scope: !5817)
!5884 = !DILocation(line: 1495, column: 37, scope: !5817)
!5885 = !DILocation(line: 409, column: 2, scope: !5797, inlinedAt: !5819)
!5886 = !DILocation(line: 409, column: 2, scope: !5802, inlinedAt: !5819)
!5887 = !DILocation(line: 409, column: 2, scope: !5803, inlinedAt: !5819)
!5888 = !DILocation(line: 409, column: 2, scope: !5810, inlinedAt: !5819)
!5889 = !DILocation(line: 409, column: 2, scope: !5813, inlinedAt: !5819)
!5890 = !DILocation(line: 1498, column: 2, scope: !5817)
!5891 = !DILocation(line: 1499, column: 1, scope: !5817)
!5892 = distinct !DISubprogram(name: "net2280_set_selfpowered", scope: !3, file: !3, line: 1501, type: !335, scopeLine: 1502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5893 = !DILocation(line: 407, column: 64, scope: !5735, inlinedAt: !5894)
!5894 = distinct !DILocation(line: 1521, column: 2, scope: !5892)
!5895 = !DILocation(line: 407, column: 84, scope: !5735, inlinedAt: !5894)
!5896 = !DILocation(line: 327, column: 67, scope: !4662, inlinedAt: !5897)
!5897 = distinct !DILocation(line: 1511, column: 2, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5899, file: !3, line: 1511, column: 2)
!5899 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1511, column: 2)
!5900 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 1511, column: 2)
!5901 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 1511, column: 2)
!5902 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 1511, column: 2)
!5903 = !DILocalVariable(name: "_gadget", arg: 1, scope: !5892, file: !3, line: 1501, type: !331)
!5904 = !DILocation(line: 1501, column: 55, scope: !5892)
!5905 = !DILocalVariable(name: "value", arg: 2, scope: !5892, file: !3, line: 1501, type: !330)
!5906 = !DILocation(line: 1501, column: 68, scope: !5892)
!5907 = !DILocalVariable(name: "dev", scope: !5892, file: !3, line: 1503, type: !284)
!5908 = !DILocation(line: 1503, column: 19, scope: !5892)
!5909 = !DILocalVariable(name: "tmp", scope: !5892, file: !3, line: 1504, type: !144)
!5910 = !DILocation(line: 1504, column: 8, scope: !5892)
!5911 = !DILocalVariable(name: "flags", scope: !5892, file: !3, line: 1505, type: !347)
!5912 = !DILocation(line: 1505, column: 17, scope: !5892)
!5913 = !DILocation(line: 1507, column: 7, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 1507, column: 6)
!5915 = !DILocation(line: 1507, column: 6, scope: !5892)
!5916 = !DILocation(line: 1508, column: 3, scope: !5914)
!5917 = !DILocalVariable(name: "__mptr", scope: !5918, file: !3, line: 1509, type: !136)
!5918 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 1509, column: 8)
!5919 = !DILocation(line: 1509, column: 8, scope: !5918)
!5920 = !DILocation(line: 1509, column: 8, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 1509, column: 8)
!5922 = !DILocation(line: 1509, column: 6, scope: !5892)
!5923 = !DILocation(line: 1511, column: 2, scope: !5892)
!5924 = !DILocation(line: 1511, column: 2, scope: !5902)
!5925 = !DILocalVariable(name: "__dummy", scope: !5926, file: !3, line: 1511, type: !347)
!5926 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 1511, column: 2)
!5927 = !DILocation(line: 1511, column: 2, scope: !5926)
!5928 = !DILocalVariable(name: "__dummy2", scope: !5926, file: !3, line: 1511, type: !347)
!5929 = !DILocation(line: 1511, column: 2, scope: !5901)
!5930 = !DILocation(line: 1511, column: 2, scope: !5900)
!5931 = !DILocation(line: 1511, column: 2, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1511, column: 2)
!5933 = !DILocalVariable(name: "__dummy", scope: !5934, file: !3, line: 1511, type: !347)
!5934 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 1511, column: 2)
!5935 = distinct !DILexicalBlock(scope: !5932, file: !3, line: 1511, column: 2)
!5936 = !DILocation(line: 1511, column: 2, scope: !5934)
!5937 = !DILocalVariable(name: "__dummy2", scope: !5934, file: !3, line: 1511, type: !347)
!5938 = !DILocation(line: 1511, column: 2, scope: !5935)
!5939 = !DILocation(line: 1511, column: 2, scope: !5899)
!5940 = !{i32 -2141402358}
!5941 = !DILocation(line: 1511, column: 2, scope: !5898)
!5942 = !DILocation(line: 329, column: 10, scope: !4662, inlinedAt: !5897)
!5943 = !DILocation(line: 329, column: 16, scope: !4662, inlinedAt: !5897)
!5944 = !DILocation(line: 1512, column: 15, scope: !5892)
!5945 = !DILocation(line: 1512, column: 20, scope: !5892)
!5946 = !DILocation(line: 1512, column: 25, scope: !5892)
!5947 = !DILocation(line: 1512, column: 14, scope: !5892)
!5948 = !DILocation(line: 1512, column: 8, scope: !5892)
!5949 = !DILocation(line: 1512, column: 6, scope: !5892)
!5950 = !DILocation(line: 1513, column: 6, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 1513, column: 6)
!5952 = !DILocation(line: 1513, column: 6, scope: !5892)
!5953 = !DILocation(line: 1514, column: 7, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 1513, column: 13)
!5955 = !DILocation(line: 1515, column: 3, scope: !5954)
!5956 = !DILocation(line: 1515, column: 12, scope: !5954)
!5957 = !DILocation(line: 1515, column: 27, scope: !5954)
!5958 = !DILocation(line: 1516, column: 2, scope: !5954)
!5959 = !DILocation(line: 1517, column: 7, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 1516, column: 9)
!5961 = !DILocation(line: 1518, column: 3, scope: !5960)
!5962 = !DILocation(line: 1518, column: 12, scope: !5960)
!5963 = !DILocation(line: 1518, column: 27, scope: !5960)
!5964 = !DILocation(line: 1520, column: 9, scope: !5892)
!5965 = !DILocation(line: 1520, column: 15, scope: !5892)
!5966 = !DILocation(line: 1520, column: 20, scope: !5892)
!5967 = !DILocation(line: 1520, column: 25, scope: !5892)
!5968 = !DILocation(line: 1520, column: 14, scope: !5892)
!5969 = !DILocation(line: 1520, column: 2, scope: !5892)
!5970 = !DILocation(line: 1521, column: 26, scope: !5892)
!5971 = !DILocation(line: 1521, column: 31, scope: !5892)
!5972 = !DILocation(line: 1521, column: 37, scope: !5892)
!5973 = !DILocation(line: 409, column: 2, scope: !5797, inlinedAt: !5894)
!5974 = !DILocation(line: 409, column: 2, scope: !5802, inlinedAt: !5894)
!5975 = !DILocation(line: 409, column: 2, scope: !5803, inlinedAt: !5894)
!5976 = !DILocation(line: 409, column: 2, scope: !5810, inlinedAt: !5894)
!5977 = !DILocation(line: 409, column: 2, scope: !5813, inlinedAt: !5894)
!5978 = !DILocation(line: 1523, column: 2, scope: !5892)
!5979 = !DILocation(line: 1524, column: 1, scope: !5892)
!5980 = distinct !DISubprogram(name: "net2280_pullup", scope: !3, file: !3, line: 1526, type: !335, scopeLine: 1527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!5981 = !DILocation(line: 407, column: 64, scope: !5735, inlinedAt: !5982)
!5982 = distinct !DILocation(line: 1547, column: 2, scope: !5980)
!5983 = !DILocation(line: 407, column: 84, scope: !5735, inlinedAt: !5982)
!5984 = !DILocation(line: 327, column: 67, scope: !4662, inlinedAt: !5985)
!5985 = distinct !DILocation(line: 1536, column: 2, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 1536, column: 2)
!5987 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 1536, column: 2)
!5988 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 1536, column: 2)
!5989 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 1536, column: 2)
!5990 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 1536, column: 2)
!5991 = !DILocalVariable(name: "_gadget", arg: 1, scope: !5980, file: !3, line: 1526, type: !331)
!5992 = !DILocation(line: 1526, column: 46, scope: !5980)
!5993 = !DILocalVariable(name: "is_on", arg: 2, scope: !5980, file: !3, line: 1526, type: !330)
!5994 = !DILocation(line: 1526, column: 59, scope: !5980)
!5995 = !DILocalVariable(name: "dev", scope: !5980, file: !3, line: 1528, type: !284)
!5996 = !DILocation(line: 1528, column: 19, scope: !5980)
!5997 = !DILocalVariable(name: "tmp", scope: !5980, file: !3, line: 1529, type: !144)
!5998 = !DILocation(line: 1529, column: 18, scope: !5980)
!5999 = !DILocalVariable(name: "flags", scope: !5980, file: !3, line: 1530, type: !347)
!6000 = !DILocation(line: 1530, column: 18, scope: !5980)
!6001 = !DILocation(line: 1532, column: 7, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 1532, column: 6)
!6003 = !DILocation(line: 1532, column: 6, scope: !5980)
!6004 = !DILocation(line: 1533, column: 3, scope: !6002)
!6005 = !DILocalVariable(name: "__mptr", scope: !6006, file: !3, line: 1534, type: !136)
!6006 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 1534, column: 8)
!6007 = !DILocation(line: 1534, column: 8, scope: !6006)
!6008 = !DILocation(line: 1534, column: 8, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6006, file: !3, line: 1534, column: 8)
!6010 = !DILocation(line: 1534, column: 6, scope: !5980)
!6011 = !DILocation(line: 1536, column: 2, scope: !5980)
!6012 = !DILocation(line: 1536, column: 2, scope: !5990)
!6013 = !DILocalVariable(name: "__dummy", scope: !6014, file: !3, line: 1536, type: !347)
!6014 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 1536, column: 2)
!6015 = !DILocation(line: 1536, column: 2, scope: !6014)
!6016 = !DILocalVariable(name: "__dummy2", scope: !6014, file: !3, line: 1536, type: !347)
!6017 = !DILocation(line: 1536, column: 2, scope: !5989)
!6018 = !DILocation(line: 1536, column: 2, scope: !5988)
!6019 = !DILocation(line: 1536, column: 2, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 1536, column: 2)
!6021 = !DILocalVariable(name: "__dummy", scope: !6022, file: !3, line: 1536, type: !347)
!6022 = distinct !DILexicalBlock(scope: !6023, file: !3, line: 1536, column: 2)
!6023 = distinct !DILexicalBlock(scope: !6020, file: !3, line: 1536, column: 2)
!6024 = !DILocation(line: 1536, column: 2, scope: !6022)
!6025 = !DILocalVariable(name: "__dummy2", scope: !6022, file: !3, line: 1536, type: !347)
!6026 = !DILocation(line: 1536, column: 2, scope: !6023)
!6027 = !DILocation(line: 1536, column: 2, scope: !5987)
!6028 = !{i32 -2141399705}
!6029 = !DILocation(line: 1536, column: 2, scope: !5986)
!6030 = !DILocation(line: 329, column: 10, scope: !4662, inlinedAt: !5985)
!6031 = !DILocation(line: 329, column: 16, scope: !4662, inlinedAt: !5985)
!6032 = !DILocation(line: 1537, column: 15, scope: !5980)
!6033 = !DILocation(line: 1537, column: 20, scope: !5980)
!6034 = !DILocation(line: 1537, column: 25, scope: !5980)
!6035 = !DILocation(line: 1537, column: 14, scope: !5980)
!6036 = !DILocation(line: 1537, column: 8, scope: !5980)
!6037 = !DILocation(line: 1537, column: 6, scope: !5980)
!6038 = !DILocation(line: 1538, column: 22, scope: !5980)
!6039 = !DILocation(line: 1538, column: 28, scope: !5980)
!6040 = !DILocation(line: 1538, column: 2, scope: !5980)
!6041 = !DILocation(line: 1538, column: 7, scope: !5980)
!6042 = !DILocation(line: 1538, column: 19, scope: !5980)
!6043 = !DILocation(line: 1539, column: 6, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 1539, column: 6)
!6045 = !DILocation(line: 1539, column: 6, scope: !5980)
!6046 = !DILocation(line: 1540, column: 13, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 1539, column: 13)
!6048 = !DILocation(line: 1540, column: 3, scope: !6047)
!6049 = !DILocation(line: 1541, column: 10, scope: !6047)
!6050 = !DILocation(line: 1541, column: 14, scope: !6047)
!6051 = !DILocation(line: 1541, column: 41, scope: !6047)
!6052 = !DILocation(line: 1541, column: 46, scope: !6047)
!6053 = !DILocation(line: 1541, column: 51, scope: !6047)
!6054 = !DILocation(line: 1541, column: 40, scope: !6047)
!6055 = !DILocation(line: 1541, column: 3, scope: !6047)
!6056 = !DILocation(line: 1542, column: 2, scope: !6047)
!6057 = !DILocation(line: 1543, column: 10, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 1542, column: 9)
!6059 = !DILocation(line: 1543, column: 14, scope: !6058)
!6060 = !DILocation(line: 1543, column: 42, scope: !6058)
!6061 = !DILocation(line: 1543, column: 47, scope: !6058)
!6062 = !DILocation(line: 1543, column: 52, scope: !6058)
!6063 = !DILocation(line: 1543, column: 41, scope: !6058)
!6064 = !DILocation(line: 1543, column: 3, scope: !6058)
!6065 = !DILocation(line: 1544, column: 17, scope: !6058)
!6066 = !DILocation(line: 1544, column: 3, scope: !6058)
!6067 = !DILocation(line: 1547, column: 26, scope: !5980)
!6068 = !DILocation(line: 1547, column: 31, scope: !5980)
!6069 = !DILocation(line: 1547, column: 37, scope: !5980)
!6070 = !DILocation(line: 409, column: 2, scope: !5797, inlinedAt: !5982)
!6071 = !DILocation(line: 409, column: 2, scope: !5802, inlinedAt: !5982)
!6072 = !DILocation(line: 409, column: 2, scope: !5803, inlinedAt: !5982)
!6073 = !DILocation(line: 409, column: 2, scope: !5810, inlinedAt: !5982)
!6074 = !DILocation(line: 409, column: 2, scope: !5813, inlinedAt: !5982)
!6075 = !DILocation(line: 1549, column: 2, scope: !5980)
!6076 = !DILocation(line: 1550, column: 1, scope: !5980)
!6077 = distinct !DISubprogram(name: "net2280_start", scope: !3, file: !3, line: 2408, type: !367, scopeLine: 2410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6078 = !DILocalVariable(name: "_gadget", arg: 1, scope: !6077, file: !3, line: 2408, type: !331)
!6079 = !DILocation(line: 2408, column: 45, scope: !6077)
!6080 = !DILocalVariable(name: "driver", arg: 2, scope: !6077, file: !3, line: 2409, type: !369)
!6081 = !DILocation(line: 2409, column: 29, scope: !6077)
!6082 = !DILocalVariable(name: "dev", scope: !6077, file: !3, line: 2411, type: !284)
!6083 = !DILocation(line: 2411, column: 19, scope: !6077)
!6084 = !DILocalVariable(name: "retval", scope: !6077, file: !3, line: 2412, type: !330)
!6085 = !DILocation(line: 2412, column: 8, scope: !6077)
!6086 = !DILocalVariable(name: "i", scope: !6077, file: !3, line: 2413, type: !7)
!6087 = !DILocation(line: 2413, column: 12, scope: !6077)
!6088 = !DILocation(line: 2419, column: 7, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 2419, column: 6)
!6090 = !DILocation(line: 2419, column: 14, scope: !6089)
!6091 = !DILocation(line: 2419, column: 17, scope: !6089)
!6092 = !DILocation(line: 2419, column: 25, scope: !6089)
!6093 = !DILocation(line: 2419, column: 35, scope: !6089)
!6094 = !DILocation(line: 2419, column: 52, scope: !6089)
!6095 = !DILocation(line: 2420, column: 5, scope: !6089)
!6096 = !DILocation(line: 2420, column: 13, scope: !6089)
!6097 = !DILocation(line: 2419, column: 6, scope: !6077)
!6098 = !DILocation(line: 2421, column: 3, scope: !6089)
!6099 = !DILocalVariable(name: "__mptr", scope: !6100, file: !3, line: 2423, type: !136)
!6100 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 2423, column: 8)
!6101 = !DILocation(line: 2423, column: 8, scope: !6100)
!6102 = !DILocation(line: 2423, column: 8, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6100, file: !3, line: 2423, column: 8)
!6104 = !DILocation(line: 2423, column: 6, scope: !6077)
!6105 = !DILocation(line: 2425, column: 9, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 2425, column: 2)
!6107 = !DILocation(line: 2425, column: 7, scope: !6106)
!6108 = !DILocation(line: 2425, column: 14, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 2425, column: 2)
!6110 = !DILocation(line: 2425, column: 18, scope: !6109)
!6111 = !DILocation(line: 2425, column: 23, scope: !6109)
!6112 = !DILocation(line: 2425, column: 16, scope: !6109)
!6113 = !DILocation(line: 2425, column: 2, scope: !6106)
!6114 = !DILocation(line: 2426, column: 3, scope: !6109)
!6115 = !DILocation(line: 2426, column: 8, scope: !6109)
!6116 = !DILocation(line: 2426, column: 11, scope: !6109)
!6117 = !DILocation(line: 2426, column: 14, scope: !6109)
!6118 = !DILocation(line: 2426, column: 19, scope: !6109)
!6119 = !DILocation(line: 2425, column: 30, scope: !6109)
!6120 = !DILocation(line: 2425, column: 2, scope: !6109)
!6121 = distinct !{!6121, !6113, !6122}
!6122 = !DILocation(line: 2426, column: 21, scope: !6106)
!6123 = !DILocation(line: 2429, column: 2, scope: !6077)
!6124 = !DILocation(line: 2429, column: 10, scope: !6077)
!6125 = !DILocation(line: 2429, column: 17, scope: !6077)
!6126 = !DILocation(line: 2429, column: 21, scope: !6077)
!6127 = !DILocation(line: 2430, column: 16, scope: !6077)
!6128 = !DILocation(line: 2430, column: 2, scope: !6077)
!6129 = !DILocation(line: 2430, column: 7, scope: !6077)
!6130 = !DILocation(line: 2430, column: 14, scope: !6077)
!6131 = !DILocation(line: 2432, column: 9, scope: !6077)
!6132 = !DILocation(line: 2433, column: 6, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 2433, column: 6)
!6134 = !DILocation(line: 2433, column: 6, scope: !6077)
!6135 = !DILocation(line: 2434, column: 3, scope: !6133)
!6136 = !DILocation(line: 2435, column: 9, scope: !6077)
!6137 = !DILocation(line: 2436, column: 6, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 2436, column: 6)
!6139 = !DILocation(line: 2436, column: 6, scope: !6077)
!6140 = !DILocation(line: 2437, column: 3, scope: !6138)
!6141 = !DILocation(line: 2442, column: 21, scope: !6077)
!6142 = !DILocation(line: 2442, column: 2, scope: !6077)
!6143 = !DILocation(line: 2444, column: 7, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 2444, column: 6)
!6145 = !DILocation(line: 2444, column: 12, scope: !6144)
!6146 = !DILocation(line: 2444, column: 19, scope: !6144)
!6147 = !DILocation(line: 2444, column: 31, scope: !6144)
!6148 = !DILocation(line: 2444, column: 35, scope: !6144)
!6149 = !DILocation(line: 2444, column: 40, scope: !6144)
!6150 = !DILocation(line: 2444, column: 6, scope: !6077)
!6151 = !DILocation(line: 2445, column: 35, scope: !6144)
!6152 = !DILocation(line: 2445, column: 3, scope: !6144)
!6153 = !DILocation(line: 2447, column: 12, scope: !6077)
!6154 = !DILocation(line: 2447, column: 2, scope: !6077)
!6155 = !DILocation(line: 2450, column: 2, scope: !6077)
!6156 = !DILabel(scope: !6077, name: "err_func", file: !3, line: 2452)
!6157 = !DILocation(line: 2452, column: 1, scope: !6077)
!6158 = !DILocation(line: 2453, column: 2, scope: !6077)
!6159 = !DILocation(line: 2453, column: 2, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 2453, column: 2)
!6161 = !DILabel(scope: !6077, name: "err_unbind", file: !3, line: 2454)
!6162 = !DILocation(line: 2454, column: 1, scope: !6077)
!6163 = !DILocation(line: 2455, column: 2, scope: !6077)
!6164 = !DILocation(line: 2455, column: 7, scope: !6077)
!6165 = !DILocation(line: 2455, column: 14, scope: !6077)
!6166 = !DILocation(line: 2456, column: 9, scope: !6077)
!6167 = !DILocation(line: 2456, column: 2, scope: !6077)
!6168 = !DILocation(line: 2457, column: 1, scope: !6077)
!6169 = distinct !DISubprogram(name: "net2280_stop", scope: !3, file: !3, line: 2484, type: !328, scopeLine: 2485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6170 = !DILocation(line: 407, column: 64, scope: !5735, inlinedAt: !6171)
!6171 = distinct !DILocation(line: 2493, column: 2, scope: !6169)
!6172 = !DILocation(line: 407, column: 84, scope: !5735, inlinedAt: !6171)
!6173 = !DILocation(line: 327, column: 67, scope: !4662, inlinedAt: !6174)
!6174 = distinct !DILocation(line: 2491, column: 2, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !3, line: 2491, column: 2)
!6176 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 2491, column: 2)
!6177 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 2491, column: 2)
!6178 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 2491, column: 2)
!6179 = distinct !DILexicalBlock(scope: !6169, file: !3, line: 2491, column: 2)
!6180 = !DILocalVariable(name: "_gadget", arg: 1, scope: !6169, file: !3, line: 2484, type: !331)
!6181 = !DILocation(line: 2484, column: 44, scope: !6169)
!6182 = !DILocalVariable(name: "dev", scope: !6169, file: !3, line: 2486, type: !284)
!6183 = !DILocation(line: 2486, column: 18, scope: !6169)
!6184 = !DILocalVariable(name: "flags", scope: !6169, file: !3, line: 2487, type: !347)
!6185 = !DILocation(line: 2487, column: 16, scope: !6169)
!6186 = !DILocalVariable(name: "__mptr", scope: !6187, file: !3, line: 2489, type: !136)
!6187 = distinct !DILexicalBlock(scope: !6169, file: !3, line: 2489, column: 8)
!6188 = !DILocation(line: 2489, column: 8, scope: !6187)
!6189 = !DILocation(line: 2489, column: 8, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 2489, column: 8)
!6191 = !DILocation(line: 2489, column: 6, scope: !6169)
!6192 = !DILocation(line: 2491, column: 2, scope: !6169)
!6193 = !DILocation(line: 2491, column: 2, scope: !6179)
!6194 = !DILocalVariable(name: "__dummy", scope: !6195, file: !3, line: 2491, type: !347)
!6195 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 2491, column: 2)
!6196 = !DILocation(line: 2491, column: 2, scope: !6195)
!6197 = !DILocalVariable(name: "__dummy2", scope: !6195, file: !3, line: 2491, type: !347)
!6198 = !DILocation(line: 2491, column: 2, scope: !6178)
!6199 = !DILocation(line: 2491, column: 2, scope: !6177)
!6200 = !DILocation(line: 2491, column: 2, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 2491, column: 2)
!6202 = !DILocalVariable(name: "__dummy", scope: !6203, file: !3, line: 2491, type: !347)
!6203 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 2491, column: 2)
!6204 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 2491, column: 2)
!6205 = !DILocation(line: 2491, column: 2, scope: !6203)
!6206 = !DILocalVariable(name: "__dummy2", scope: !6203, file: !3, line: 2491, type: !347)
!6207 = !DILocation(line: 2491, column: 2, scope: !6204)
!6208 = !DILocation(line: 2491, column: 2, scope: !6176)
!6209 = !{i32 -2141387708}
!6210 = !DILocation(line: 2491, column: 2, scope: !6175)
!6211 = !DILocation(line: 329, column: 10, scope: !4662, inlinedAt: !6174)
!6212 = !DILocation(line: 329, column: 16, scope: !4662, inlinedAt: !6174)
!6213 = !DILocation(line: 2492, column: 16, scope: !6169)
!6214 = !DILocation(line: 2492, column: 2, scope: !6169)
!6215 = !DILocation(line: 2493, column: 26, scope: !6169)
!6216 = !DILocation(line: 2493, column: 31, scope: !6169)
!6217 = !DILocation(line: 2493, column: 37, scope: !6169)
!6218 = !DILocation(line: 409, column: 2, scope: !5797, inlinedAt: !6171)
!6219 = !DILocation(line: 409, column: 2, scope: !5802, inlinedAt: !6171)
!6220 = !DILocation(line: 409, column: 2, scope: !5803, inlinedAt: !6171)
!6221 = !DILocation(line: 409, column: 2, scope: !5810, inlinedAt: !6171)
!6222 = !DILocation(line: 409, column: 2, scope: !5813, inlinedAt: !6171)
!6223 = !DILocation(line: 2495, column: 21, scope: !6169)
!6224 = !DILocation(line: 2495, column: 2, scope: !6169)
!6225 = !DILocation(line: 2497, column: 2, scope: !6169)
!6226 = !DILocation(line: 2497, column: 2, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6169, file: !3, line: 2497, column: 2)
!6228 = !DILocation(line: 2498, column: 2, scope: !6169)
!6229 = !DILocation(line: 2498, column: 2, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6169, file: !3, line: 2498, column: 2)
!6231 = !DILocation(line: 2500, column: 2, scope: !6169)
!6232 = !DILocation(line: 2500, column: 7, scope: !6169)
!6233 = !DILocation(line: 2500, column: 14, scope: !6169)
!6234 = !DILocation(line: 2502, column: 2, scope: !6169)
!6235 = distinct !DISubprogram(name: "net2280_match_ep", scope: !3, file: !3, line: 1552, type: !3976, scopeLine: 1555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6236 = !DILocalVariable(name: "_gadget", arg: 1, scope: !6235, file: !3, line: 1552, type: !331)
!6237 = !DILocation(line: 1552, column: 59, scope: !6235)
!6238 = !DILocalVariable(name: "desc", arg: 2, scope: !6235, file: !3, line: 1553, type: !4094)
!6239 = !DILocation(line: 1553, column: 35, scope: !6235)
!6240 = !DILocalVariable(name: "ep_comp", arg: 3, scope: !6235, file: !3, line: 1554, type: !4095)
!6241 = !DILocation(line: 1554, column: 37, scope: !6235)
!6242 = !DILocalVariable(name: "name", scope: !6235, file: !3, line: 1556, type: !2192)
!6243 = !DILocation(line: 1556, column: 7, scope: !6235)
!6244 = !DILocalVariable(name: "ep", scope: !6235, file: !3, line: 1557, type: !3978)
!6245 = !DILocation(line: 1557, column: 17, scope: !6235)
!6246 = !DILocation(line: 1559, column: 24, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6235, file: !3, line: 1559, column: 6)
!6248 = !DILocation(line: 1559, column: 6, scope: !6247)
!6249 = !DILocation(line: 1559, column: 30, scope: !6247)
!6250 = !DILocation(line: 1559, column: 6, scope: !6235)
!6251 = !DILocation(line: 1561, column: 31, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 1559, column: 56)
!6253 = !DILocation(line: 1561, column: 8, scope: !6252)
!6254 = !DILocation(line: 1561, column: 6, scope: !6252)
!6255 = !DILocation(line: 1562, column: 7, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 1562, column: 7)
!6257 = !DILocation(line: 1562, column: 10, scope: !6256)
!6258 = !DILocation(line: 1562, column: 38, scope: !6256)
!6259 = !DILocation(line: 1562, column: 47, scope: !6256)
!6260 = !DILocation(line: 1562, column: 51, scope: !6256)
!6261 = !DILocation(line: 1562, column: 57, scope: !6256)
!6262 = !DILocation(line: 1562, column: 13, scope: !6256)
!6263 = !DILocation(line: 1562, column: 7, scope: !6252)
!6264 = !DILocation(line: 1563, column: 11, scope: !6256)
!6265 = !DILocation(line: 1563, column: 4, scope: !6256)
!6266 = !DILocation(line: 1564, column: 31, scope: !6252)
!6267 = !DILocation(line: 1564, column: 8, scope: !6252)
!6268 = !DILocation(line: 1564, column: 6, scope: !6252)
!6269 = !DILocation(line: 1565, column: 7, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 1565, column: 7)
!6271 = !DILocation(line: 1565, column: 10, scope: !6270)
!6272 = !DILocation(line: 1565, column: 38, scope: !6270)
!6273 = !DILocation(line: 1565, column: 47, scope: !6270)
!6274 = !DILocation(line: 1565, column: 51, scope: !6270)
!6275 = !DILocation(line: 1565, column: 57, scope: !6270)
!6276 = !DILocation(line: 1565, column: 13, scope: !6270)
!6277 = !DILocation(line: 1565, column: 7, scope: !6252)
!6278 = !DILocation(line: 1566, column: 11, scope: !6270)
!6279 = !DILocation(line: 1566, column: 4, scope: !6270)
!6280 = !DILocation(line: 1567, column: 2, scope: !6252)
!6281 = !DILocation(line: 1573, column: 24, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6235, file: !3, line: 1573, column: 6)
!6283 = !DILocation(line: 1573, column: 6, scope: !6282)
!6284 = !DILocation(line: 1573, column: 30, scope: !6282)
!6285 = !DILocation(line: 1573, column: 55, scope: !6282)
!6286 = !DILocation(line: 1574, column: 26, scope: !6282)
!6287 = !DILocation(line: 1574, column: 6, scope: !6282)
!6288 = !DILocation(line: 1573, column: 6, scope: !6235)
!6289 = !DILocation(line: 1575, column: 31, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 1574, column: 33)
!6291 = !DILocation(line: 1575, column: 8, scope: !6290)
!6292 = !DILocation(line: 1575, column: 6, scope: !6290)
!6293 = !DILocation(line: 1576, column: 7, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 1576, column: 7)
!6295 = !DILocation(line: 1576, column: 10, scope: !6294)
!6296 = !DILocation(line: 1576, column: 38, scope: !6294)
!6297 = !DILocation(line: 1576, column: 47, scope: !6294)
!6298 = !DILocation(line: 1576, column: 51, scope: !6294)
!6299 = !DILocation(line: 1576, column: 57, scope: !6294)
!6300 = !DILocation(line: 1576, column: 13, scope: !6294)
!6301 = !DILocation(line: 1576, column: 7, scope: !6290)
!6302 = !DILocation(line: 1577, column: 11, scope: !6294)
!6303 = !DILocation(line: 1577, column: 4, scope: !6294)
!6304 = !DILocation(line: 1578, column: 31, scope: !6290)
!6305 = !DILocation(line: 1578, column: 8, scope: !6290)
!6306 = !DILocation(line: 1578, column: 6, scope: !6290)
!6307 = !DILocation(line: 1579, column: 7, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 1579, column: 7)
!6309 = !DILocation(line: 1579, column: 10, scope: !6308)
!6310 = !DILocation(line: 1579, column: 38, scope: !6308)
!6311 = !DILocation(line: 1579, column: 47, scope: !6308)
!6312 = !DILocation(line: 1579, column: 51, scope: !6308)
!6313 = !DILocation(line: 1579, column: 57, scope: !6308)
!6314 = !DILocation(line: 1579, column: 13, scope: !6308)
!6315 = !DILocation(line: 1579, column: 7, scope: !6290)
!6316 = !DILocation(line: 1580, column: 11, scope: !6308)
!6317 = !DILocation(line: 1580, column: 4, scope: !6308)
!6318 = !DILocation(line: 1581, column: 2, scope: !6290)
!6319 = !DILocation(line: 1581, column: 31, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 1581, column: 13)
!6321 = !DILocation(line: 1581, column: 13, scope: !6320)
!6322 = !DILocation(line: 1581, column: 37, scope: !6320)
!6323 = !DILocation(line: 1581, column: 62, scope: !6320)
!6324 = !DILocation(line: 1582, column: 27, scope: !6320)
!6325 = !DILocation(line: 1582, column: 7, scope: !6320)
!6326 = !DILocation(line: 1581, column: 13, scope: !6282)
!6327 = !DILocation(line: 1583, column: 31, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 1582, column: 34)
!6329 = !DILocation(line: 1583, column: 8, scope: !6328)
!6330 = !DILocation(line: 1583, column: 6, scope: !6328)
!6331 = !DILocation(line: 1584, column: 7, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6328, file: !3, line: 1584, column: 7)
!6333 = !DILocation(line: 1584, column: 10, scope: !6332)
!6334 = !DILocation(line: 1584, column: 38, scope: !6332)
!6335 = !DILocation(line: 1584, column: 47, scope: !6332)
!6336 = !DILocation(line: 1584, column: 51, scope: !6332)
!6337 = !DILocation(line: 1584, column: 57, scope: !6332)
!6338 = !DILocation(line: 1584, column: 13, scope: !6332)
!6339 = !DILocation(line: 1584, column: 7, scope: !6328)
!6340 = !DILocation(line: 1585, column: 11, scope: !6332)
!6341 = !DILocation(line: 1585, column: 4, scope: !6332)
!6342 = !DILocation(line: 1586, column: 31, scope: !6328)
!6343 = !DILocation(line: 1586, column: 8, scope: !6328)
!6344 = !DILocation(line: 1586, column: 6, scope: !6328)
!6345 = !DILocation(line: 1587, column: 7, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6328, file: !3, line: 1587, column: 7)
!6347 = !DILocation(line: 1587, column: 10, scope: !6346)
!6348 = !DILocation(line: 1587, column: 38, scope: !6346)
!6349 = !DILocation(line: 1587, column: 47, scope: !6346)
!6350 = !DILocation(line: 1587, column: 51, scope: !6346)
!6351 = !DILocation(line: 1587, column: 57, scope: !6346)
!6352 = !DILocation(line: 1587, column: 13, scope: !6346)
!6353 = !DILocation(line: 1587, column: 7, scope: !6328)
!6354 = !DILocation(line: 1588, column: 11, scope: !6346)
!6355 = !DILocation(line: 1588, column: 4, scope: !6346)
!6356 = !DILocation(line: 1589, column: 2, scope: !6328)
!6357 = !DILocation(line: 1589, column: 31, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 1589, column: 13)
!6359 = !DILocation(line: 1589, column: 13, scope: !6358)
!6360 = !DILocation(line: 1589, column: 37, scope: !6358)
!6361 = !DILocation(line: 1589, column: 63, scope: !6358)
!6362 = !DILocation(line: 1590, column: 26, scope: !6358)
!6363 = !DILocation(line: 1590, column: 6, scope: !6358)
!6364 = !DILocation(line: 1589, column: 13, scope: !6320)
!6365 = !DILocation(line: 1591, column: 31, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6358, file: !3, line: 1590, column: 33)
!6367 = !DILocation(line: 1591, column: 8, scope: !6366)
!6368 = !DILocation(line: 1591, column: 6, scope: !6366)
!6369 = !DILocation(line: 1592, column: 7, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 1592, column: 7)
!6371 = !DILocation(line: 1592, column: 10, scope: !6370)
!6372 = !DILocation(line: 1592, column: 38, scope: !6370)
!6373 = !DILocation(line: 1592, column: 47, scope: !6370)
!6374 = !DILocation(line: 1592, column: 51, scope: !6370)
!6375 = !DILocation(line: 1592, column: 57, scope: !6370)
!6376 = !DILocation(line: 1592, column: 13, scope: !6370)
!6377 = !DILocation(line: 1592, column: 7, scope: !6366)
!6378 = !DILocation(line: 1593, column: 11, scope: !6370)
!6379 = !DILocation(line: 1593, column: 4, scope: !6370)
!6380 = !DILocation(line: 1594, column: 31, scope: !6366)
!6381 = !DILocation(line: 1594, column: 8, scope: !6366)
!6382 = !DILocation(line: 1594, column: 6, scope: !6366)
!6383 = !DILocation(line: 1595, column: 7, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 1595, column: 7)
!6385 = !DILocation(line: 1595, column: 10, scope: !6384)
!6386 = !DILocation(line: 1595, column: 38, scope: !6384)
!6387 = !DILocation(line: 1595, column: 47, scope: !6384)
!6388 = !DILocation(line: 1595, column: 51, scope: !6384)
!6389 = !DILocation(line: 1595, column: 57, scope: !6384)
!6390 = !DILocation(line: 1595, column: 13, scope: !6384)
!6391 = !DILocation(line: 1595, column: 7, scope: !6366)
!6392 = !DILocation(line: 1596, column: 11, scope: !6384)
!6393 = !DILocation(line: 1596, column: 4, scope: !6384)
!6394 = !DILocation(line: 1597, column: 2, scope: !6366)
!6395 = !DILocation(line: 1597, column: 31, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6358, file: !3, line: 1597, column: 13)
!6397 = !DILocation(line: 1597, column: 13, scope: !6396)
!6398 = !DILocation(line: 1597, column: 37, scope: !6396)
!6399 = !DILocation(line: 1597, column: 63, scope: !6396)
!6400 = !DILocation(line: 1598, column: 27, scope: !6396)
!6401 = !DILocation(line: 1598, column: 7, scope: !6396)
!6402 = !DILocation(line: 1597, column: 13, scope: !6358)
!6403 = !DILocation(line: 1599, column: 31, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 1598, column: 34)
!6405 = !DILocation(line: 1599, column: 8, scope: !6404)
!6406 = !DILocation(line: 1599, column: 6, scope: !6404)
!6407 = !DILocation(line: 1600, column: 7, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 1600, column: 7)
!6409 = !DILocation(line: 1600, column: 10, scope: !6408)
!6410 = !DILocation(line: 1600, column: 38, scope: !6408)
!6411 = !DILocation(line: 1600, column: 47, scope: !6408)
!6412 = !DILocation(line: 1600, column: 51, scope: !6408)
!6413 = !DILocation(line: 1600, column: 57, scope: !6408)
!6414 = !DILocation(line: 1600, column: 13, scope: !6408)
!6415 = !DILocation(line: 1600, column: 7, scope: !6404)
!6416 = !DILocation(line: 1601, column: 11, scope: !6408)
!6417 = !DILocation(line: 1601, column: 4, scope: !6408)
!6418 = !DILocation(line: 1602, column: 31, scope: !6404)
!6419 = !DILocation(line: 1602, column: 8, scope: !6404)
!6420 = !DILocation(line: 1602, column: 6, scope: !6404)
!6421 = !DILocation(line: 1603, column: 7, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 1603, column: 7)
!6423 = !DILocation(line: 1603, column: 10, scope: !6422)
!6424 = !DILocation(line: 1603, column: 38, scope: !6422)
!6425 = !DILocation(line: 1603, column: 47, scope: !6422)
!6426 = !DILocation(line: 1603, column: 51, scope: !6422)
!6427 = !DILocation(line: 1603, column: 57, scope: !6422)
!6428 = !DILocation(line: 1603, column: 13, scope: !6422)
!6429 = !DILocation(line: 1603, column: 7, scope: !6404)
!6430 = !DILocation(line: 1604, column: 11, scope: !6422)
!6431 = !DILocation(line: 1604, column: 4, scope: !6422)
!6432 = !DILocation(line: 1605, column: 2, scope: !6404)
!6433 = !DILocation(line: 1608, column: 11, scope: !6235)
!6434 = !DILocation(line: 1608, column: 58, scope: !6235)
!6435 = !DILocation(line: 1608, column: 41, scope: !6235)
!6436 = !DILocation(line: 1609, column: 24, scope: !6235)
!6437 = !DILocation(line: 1609, column: 4, scope: !6235)
!6438 = !DILocation(line: 1608, column: 2, scope: !6235)
!6439 = !DILocation(line: 1610, column: 30, scope: !6235)
!6440 = !DILocation(line: 1610, column: 39, scope: !6235)
!6441 = !DILocation(line: 1610, column: 7, scope: !6235)
!6442 = !DILocation(line: 1610, column: 5, scope: !6235)
!6443 = !DILocation(line: 1611, column: 6, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6235, file: !3, line: 1611, column: 6)
!6445 = !DILocation(line: 1611, column: 9, scope: !6444)
!6446 = !DILocation(line: 1611, column: 37, scope: !6444)
!6447 = !DILocation(line: 1611, column: 46, scope: !6444)
!6448 = !DILocation(line: 1611, column: 50, scope: !6444)
!6449 = !DILocation(line: 1611, column: 56, scope: !6444)
!6450 = !DILocation(line: 1611, column: 12, scope: !6444)
!6451 = !DILocation(line: 1611, column: 6, scope: !6235)
!6452 = !DILocation(line: 1612, column: 10, scope: !6444)
!6453 = !DILocation(line: 1612, column: 3, scope: !6444)
!6454 = !DILocation(line: 1614, column: 2, scope: !6235)
!6455 = !DILocation(line: 1615, column: 1, scope: !6235)
!6456 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !6457, file: !6457, line: 666, type: !6458, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6457 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!6458 = !DISubroutineType(types: !6459)
!6459 = !{!347}
!6460 = !DILocalVariable(name: "f", scope: !6456, file: !6457, line: 668, type: !347)
!6461 = !DILocation(line: 668, column: 16, scope: !6456)
!6462 = !DILocation(line: 670, column: 6, scope: !6456)
!6463 = !DILocation(line: 670, column: 4, scope: !6456)
!6464 = !DILocation(line: 671, column: 2, scope: !6456)
!6465 = !DILocation(line: 672, column: 9, scope: !6456)
!6466 = !DILocation(line: 672, column: 2, scope: !6456)
!6467 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !6457, file: !6457, line: 646, type: !6458, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6468 = !DILocalVariable(name: "__ret", scope: !6469, file: !6457, line: 648, type: !347)
!6469 = distinct !DILexicalBlock(scope: !6467, file: !6457, line: 648, column: 9)
!6470 = !DILocation(line: 648, column: 9, scope: !6469)
!6471 = !DILocalVariable(name: "__edi", scope: !6469, file: !6457, line: 648, type: !347)
!6472 = !DILocalVariable(name: "__esi", scope: !6469, file: !6457, line: 648, type: !347)
!6473 = !DILocalVariable(name: "__edx", scope: !6469, file: !6457, line: 648, type: !347)
!6474 = !DILocalVariable(name: "__ecx", scope: !6469, file: !6457, line: 648, type: !347)
!6475 = !DILocalVariable(name: "__eax", scope: !6469, file: !6457, line: 648, type: !347)
!6476 = !DILocation(line: 648, column: 9, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6478, file: !6457, line: 648, column: 9)
!6478 = distinct !DILexicalBlock(scope: !6469, file: !6457, line: 648, column: 9)
!6479 = !{i32 -2145689004, i32 -2145686689, i32 -2145686455, i32 -2145686404, i32 -2145686376, i32 -2145686351, i32 -2145686667, i32 -2145686654, i32 -2145686216, i32 -2145686097, i32 -2145686562, i32 -2145686535, i32 -2145686507, i32 -2145686477}
!6480 = !DILocalVariable(name: "__mask", scope: !6481, file: !6457, line: 648, type: !347)
!6481 = distinct !DILexicalBlock(scope: !6477, file: !6457, line: 648, column: 9)
!6482 = !DILocation(line: 648, column: 9, scope: !6481)
!6483 = !DILocation(line: 648, column: 9, scope: !6478)
!6484 = !DILocation(line: 648, column: 2, scope: !6467)
!6485 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !6457, file: !6457, line: 656, type: !2049, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6486 = !DILocalVariable(name: "__edi", scope: !6487, file: !6457, line: 658, type: !347)
!6487 = distinct !DILexicalBlock(scope: !6485, file: !6457, line: 658, column: 2)
!6488 = !DILocation(line: 658, column: 2, scope: !6487)
!6489 = !DILocalVariable(name: "__esi", scope: !6487, file: !6457, line: 658, type: !347)
!6490 = !DILocalVariable(name: "__edx", scope: !6487, file: !6457, line: 658, type: !347)
!6491 = !DILocalVariable(name: "__ecx", scope: !6487, file: !6457, line: 658, type: !347)
!6492 = !DILocalVariable(name: "__eax", scope: !6487, file: !6457, line: 658, type: !347)
!6493 = !{i32 -2145681910, i32 -2145681178, i32 -2145680944, i32 -2145680893, i32 -2145680865, i32 -2145680840, i32 -2145681156, i32 -2145681143, i32 -2145680705, i32 -2145680586, i32 -2145681051, i32 -2145681024, i32 -2145680996, i32 -2145680966}
!6494 = !DILocation(line: 659, column: 1, scope: !6485)
!6495 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !6457, file: !6457, line: 651, type: !6496, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6496 = !DISubroutineType(types: !6497)
!6497 = !{null, !347}
!6498 = !DILocalVariable(name: "f", arg: 1, scope: !6495, file: !6457, line: 651, type: !347)
!6499 = !DILocation(line: 651, column: 65, scope: !6495)
!6500 = !DILocalVariable(name: "__edi", scope: !6501, file: !6457, line: 653, type: !347)
!6501 = distinct !DILexicalBlock(scope: !6495, file: !6457, line: 653, column: 2)
!6502 = !DILocation(line: 653, column: 2, scope: !6501)
!6503 = !DILocalVariable(name: "__esi", scope: !6501, file: !6457, line: 653, type: !347)
!6504 = !DILocalVariable(name: "__edx", scope: !6501, file: !6457, line: 653, type: !347)
!6505 = !DILocalVariable(name: "__ecx", scope: !6501, file: !6457, line: 653, type: !347)
!6506 = !DILocalVariable(name: "__eax", scope: !6501, file: !6457, line: 653, type: !347)
!6507 = !{i32 -2145684537, i32 -2145683787, i32 -2145683553, i32 -2145683502, i32 -2145683474, i32 -2145683449, i32 -2145683765, i32 -2145683752, i32 -2145683314, i32 -2145683195, i32 -2145683660, i32 -2145683633, i32 -2145683605, i32 -2145683575}
!6508 = !DILocation(line: 654, column: 1, scope: !6495)
!6509 = distinct !DISubprogram(name: "ep0_start", scope: !3, file: !3, line: 2395, type: !4634, scopeLine: 2396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6510 = !DILocalVariable(name: "dev", arg: 1, scope: !6509, file: !3, line: 2395, type: !284)
!6511 = !DILocation(line: 2395, column: 39, scope: !6509)
!6512 = !DILocation(line: 2397, column: 6, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 2397, column: 6)
!6514 = !DILocation(line: 2397, column: 11, scope: !6513)
!6515 = !DILocation(line: 2397, column: 18, scope: !6513)
!6516 = !DILocation(line: 2397, column: 6, scope: !6509)
!6517 = !DILocation(line: 2398, column: 25, scope: !6513)
!6518 = !DILocation(line: 2398, column: 10, scope: !6513)
!6519 = !DILocation(line: 2398, column: 3, scope: !6513)
!6520 = !DILocation(line: 2399, column: 24, scope: !6509)
!6521 = !DILocation(line: 2399, column: 9, scope: !6509)
!6522 = !DILocation(line: 2399, column: 2, scope: !6509)
!6523 = !DILocation(line: 2400, column: 1, scope: !6509)
!6524 = distinct !DISubprogram(name: "stop_activity", scope: !3, file: !3, line: 2459, type: !6525, scopeLine: 2460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6525 = !DISubroutineType(types: !6526)
!6526 = !{null, !284, !369}
!6527 = !DILocation(line: 352, column: 51, scope: !5568, inlinedAt: !6528)
!6528 = distinct !DILocation(line: 2478, column: 3, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 2475, column: 14)
!6530 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 2475, column: 6)
!6531 = !DILocation(line: 392, column: 53, scope: !5562, inlinedAt: !6532)
!6532 = distinct !DILocation(line: 2476, column: 3, scope: !6529)
!6533 = !DILocalVariable(name: "dev", arg: 1, scope: !6524, file: !3, line: 2459, type: !284)
!6534 = !DILocation(line: 2459, column: 43, scope: !6524)
!6535 = !DILocalVariable(name: "driver", arg: 2, scope: !6524, file: !3, line: 2459, type: !369)
!6536 = !DILocation(line: 2459, column: 74, scope: !6524)
!6537 = !DILocalVariable(name: "i", scope: !6524, file: !3, line: 2461, type: !330)
!6538 = !DILocation(line: 2461, column: 8, scope: !6524)
!6539 = !DILocation(line: 2464, column: 6, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 2464, column: 6)
!6541 = !DILocation(line: 2464, column: 11, scope: !6540)
!6542 = !DILocation(line: 2464, column: 18, scope: !6540)
!6543 = !DILocation(line: 2464, column: 24, scope: !6540)
!6544 = !DILocation(line: 2464, column: 6, scope: !6524)
!6545 = !DILocation(line: 2465, column: 10, scope: !6540)
!6546 = !DILocation(line: 2465, column: 3, scope: !6540)
!6547 = !DILocation(line: 2470, column: 12, scope: !6524)
!6548 = !DILocation(line: 2470, column: 2, scope: !6524)
!6549 = !DILocation(line: 2471, column: 9, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 2471, column: 2)
!6551 = !DILocation(line: 2471, column: 7, scope: !6550)
!6552 = !DILocation(line: 2471, column: 14, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 2471, column: 2)
!6554 = !DILocation(line: 2471, column: 18, scope: !6553)
!6555 = !DILocation(line: 2471, column: 23, scope: !6553)
!6556 = !DILocation(line: 2471, column: 16, scope: !6553)
!6557 = !DILocation(line: 2471, column: 2, scope: !6550)
!6558 = !DILocation(line: 2472, column: 9, scope: !6553)
!6559 = !DILocation(line: 2472, column: 14, scope: !6553)
!6560 = !DILocation(line: 2472, column: 17, scope: !6553)
!6561 = !DILocation(line: 2472, column: 3, scope: !6553)
!6562 = !DILocation(line: 2471, column: 30, scope: !6553)
!6563 = !DILocation(line: 2471, column: 2, scope: !6553)
!6564 = distinct !{!6564, !6557, !6565}
!6565 = !DILocation(line: 2472, column: 19, scope: !6550)
!6566 = !DILocation(line: 2475, column: 6, scope: !6530)
!6567 = !DILocation(line: 2475, column: 6, scope: !6524)
!6568 = !DILocation(line: 2476, column: 16, scope: !6529)
!6569 = !DILocation(line: 2476, column: 21, scope: !6529)
!6570 = !DILocation(line: 394, column: 2, scope: !5642, inlinedAt: !6532)
!6571 = !DILocation(line: 394, column: 2, scope: !5645, inlinedAt: !6532)
!6572 = !DILocation(line: 2477, column: 3, scope: !6529)
!6573 = !DILocation(line: 2477, column: 11, scope: !6529)
!6574 = !DILocation(line: 2477, column: 23, scope: !6529)
!6575 = !DILocation(line: 2477, column: 28, scope: !6529)
!6576 = !DILocation(line: 2478, column: 14, scope: !6529)
!6577 = !DILocation(line: 2478, column: 19, scope: !6529)
!6578 = !DILocation(line: 354, column: 2, scope: !5594, inlinedAt: !6528)
!6579 = !DILocation(line: 354, column: 2, scope: !5597, inlinedAt: !6528)
!6580 = !DILocation(line: 2479, column: 2, scope: !6529)
!6581 = !DILocation(line: 2481, column: 13, scope: !6524)
!6582 = !DILocation(line: 2481, column: 2, scope: !6524)
!6583 = !DILocation(line: 2482, column: 1, scope: !6524)
!6584 = distinct !DISubprogram(name: "ep0_start_228x", scope: !3, file: !3, line: 2311, type: !4634, scopeLine: 2312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6585 = !DILocalVariable(name: "dev", arg: 1, scope: !6584, file: !3, line: 2311, type: !284)
!6586 = !DILocation(line: 2311, column: 44, scope: !6584)
!6587 = !DILocation(line: 2316, column: 4, scope: !6584)
!6588 = !DILocation(line: 2316, column: 9, scope: !6584)
!6589 = !DILocation(line: 2316, column: 19, scope: !6584)
!6590 = !DILocation(line: 2316, column: 3, scope: !6584)
!6591 = !DILocation(line: 2313, column: 2, scope: !6584)
!6592 = !DILocation(line: 2329, column: 4, scope: !6584)
!6593 = !DILocation(line: 2329, column: 9, scope: !6584)
!6594 = !DILocation(line: 2329, column: 14, scope: !6584)
!6595 = !DILocation(line: 2329, column: 3, scope: !6584)
!6596 = !DILocation(line: 2324, column: 2, scope: !6584)
!6597 = !DILocation(line: 2333, column: 4, scope: !6584)
!6598 = !DILocation(line: 2333, column: 9, scope: !6584)
!6599 = !DILocation(line: 2333, column: 21, scope: !6584)
!6600 = !DILocation(line: 2333, column: 3, scope: !6584)
!6601 = !DILocation(line: 2332, column: 30, scope: !6584)
!6602 = !DILocation(line: 2333, column: 43, scope: !6584)
!6603 = !DILocation(line: 2330, column: 9, scope: !6584)
!6604 = !DILocation(line: 2335, column: 4, scope: !6584)
!6605 = !DILocation(line: 2335, column: 9, scope: !6584)
!6606 = !DILocation(line: 2335, column: 14, scope: !6584)
!6607 = !DILocation(line: 2335, column: 3, scope: !6584)
!6608 = !DILocation(line: 2330, column: 2, scope: !6584)
!6609 = !DILocation(line: 2340, column: 4, scope: !6584)
!6610 = !DILocation(line: 2340, column: 9, scope: !6584)
!6611 = !DILocation(line: 2340, column: 15, scope: !6584)
!6612 = !DILocation(line: 2340, column: 3, scope: !6584)
!6613 = !DILocation(line: 2338, column: 2, scope: !6584)
!6614 = !DILocation(line: 2348, column: 4, scope: !6584)
!6615 = !DILocation(line: 2348, column: 9, scope: !6584)
!6616 = !DILocation(line: 2348, column: 15, scope: !6584)
!6617 = !DILocation(line: 2348, column: 3, scope: !6584)
!6618 = !DILocation(line: 2341, column: 2, scope: !6584)
!6619 = !DILocation(line: 2351, column: 16, scope: !6584)
!6620 = !DILocation(line: 2351, column: 21, scope: !6584)
!6621 = !DILocation(line: 2351, column: 26, scope: !6584)
!6622 = !DILocation(line: 2351, column: 15, scope: !6584)
!6623 = !DILocation(line: 2351, column: 9, scope: !6584)
!6624 = !DILocation(line: 2352, column: 1, scope: !6584)
!6625 = distinct !DISubprogram(name: "ep0_start_338x", scope: !3, file: !3, line: 2354, type: !4634, scopeLine: 2355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6626 = !DILocalVariable(name: "dev", arg: 1, scope: !6625, file: !3, line: 2354, type: !284)
!6627 = !DILocation(line: 2354, column: 44, scope: !6625)
!6628 = !DILocation(line: 2357, column: 6, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 2357, column: 6)
!6630 = !DILocation(line: 2357, column: 11, scope: !6629)
!6631 = !DILocation(line: 2357, column: 6, scope: !6625)
!6632 = !DILocation(line: 2360, column: 11, scope: !6629)
!6633 = !DILocation(line: 2360, column: 16, scope: !6629)
!6634 = !DILocation(line: 2360, column: 26, scope: !6629)
!6635 = !DILocation(line: 2360, column: 10, scope: !6629)
!6636 = !DILocation(line: 2358, column: 3, scope: !6629)
!6637 = !DILocation(line: 2374, column: 4, scope: !6625)
!6638 = !DILocation(line: 2374, column: 9, scope: !6625)
!6639 = !DILocation(line: 2374, column: 14, scope: !6625)
!6640 = !DILocation(line: 2374, column: 3, scope: !6625)
!6641 = !DILocation(line: 2368, column: 2, scope: !6625)
!6642 = !DILocation(line: 2375, column: 2, scope: !6625)
!6643 = !DILocation(line: 2375, column: 7, scope: !6625)
!6644 = !DILocation(line: 2375, column: 21, scope: !6625)
!6645 = !DILocation(line: 2377, column: 10, scope: !6625)
!6646 = !DILocation(line: 2377, column: 15, scope: !6625)
!6647 = !DILocation(line: 2377, column: 27, scope: !6625)
!6648 = !DILocation(line: 2377, column: 9, scope: !6625)
!6649 = !DILocation(line: 2376, column: 42, scope: !6625)
!6650 = !DILocation(line: 2377, column: 49, scope: !6625)
!6651 = !DILocation(line: 2376, column: 9, scope: !6625)
!6652 = !DILocation(line: 2379, column: 10, scope: !6625)
!6653 = !DILocation(line: 2379, column: 15, scope: !6625)
!6654 = !DILocation(line: 2379, column: 20, scope: !6625)
!6655 = !DILocation(line: 2379, column: 9, scope: !6625)
!6656 = !DILocation(line: 2376, column: 2, scope: !6625)
!6657 = !DILocation(line: 2384, column: 10, scope: !6625)
!6658 = !DILocation(line: 2384, column: 15, scope: !6625)
!6659 = !DILocation(line: 2384, column: 21, scope: !6625)
!6660 = !DILocation(line: 2384, column: 9, scope: !6625)
!6661 = !DILocation(line: 2382, column: 2, scope: !6625)
!6662 = !DILocation(line: 2389, column: 10, scope: !6625)
!6663 = !DILocation(line: 2389, column: 15, scope: !6625)
!6664 = !DILocation(line: 2389, column: 21, scope: !6625)
!6665 = !DILocation(line: 2389, column: 9, scope: !6625)
!6666 = !DILocation(line: 2385, column: 2, scope: !6625)
!6667 = !DILocation(line: 2392, column: 15, scope: !6625)
!6668 = !DILocation(line: 2392, column: 20, scope: !6625)
!6669 = !DILocation(line: 2392, column: 25, scope: !6625)
!6670 = !DILocation(line: 2392, column: 14, scope: !6625)
!6671 = !DILocation(line: 2392, column: 8, scope: !6625)
!6672 = !DILocation(line: 2393, column: 1, scope: !6625)
!6673 = distinct !DISubprogram(name: "nuke", scope: !3, file: !3, line: 1223, type: !4625, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6674 = !DILocalVariable(name: "ep", arg: 1, scope: !6673, file: !3, line: 1223, type: !4485)
!6675 = !DILocation(line: 1223, column: 37, scope: !6673)
!6676 = !DILocalVariable(name: "req", scope: !6673, file: !3, line: 1225, type: !4470)
!6677 = !DILocation(line: 1225, column: 26, scope: !6673)
!6678 = !DILocation(line: 1228, column: 2, scope: !6673)
!6679 = !DILocation(line: 1228, column: 6, scope: !6673)
!6680 = !DILocation(line: 1228, column: 14, scope: !6673)
!6681 = !DILocation(line: 1229, column: 6, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 1229, column: 6)
!6683 = !DILocation(line: 1229, column: 10, scope: !6682)
!6684 = !DILocation(line: 1229, column: 6, scope: !6673)
!6685 = !DILocation(line: 1230, column: 13, scope: !6682)
!6686 = !DILocation(line: 1230, column: 3, scope: !6682)
!6687 = !DILocation(line: 1231, column: 2, scope: !6673)
!6688 = !DILocation(line: 1231, column: 22, scope: !6673)
!6689 = !DILocation(line: 1231, column: 26, scope: !6673)
!6690 = !DILocation(line: 1231, column: 10, scope: !6673)
!6691 = !DILocation(line: 1231, column: 9, scope: !6673)
!6692 = !DILocalVariable(name: "__mptr", scope: !6693, file: !3, line: 1232, type: !136)
!6693 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 1232, column: 9)
!6694 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 1231, column: 34)
!6695 = !DILocation(line: 1232, column: 9, scope: !6693)
!6696 = !DILocation(line: 1232, column: 9, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 1232, column: 9)
!6698 = !DILocation(line: 1232, column: 7, scope: !6694)
!6699 = !DILocation(line: 1235, column: 8, scope: !6694)
!6700 = !DILocation(line: 1235, column: 12, scope: !6694)
!6701 = !DILocation(line: 1235, column: 3, scope: !6694)
!6702 = distinct !{!6702, !6687, !6703}
!6703 = !DILocation(line: 1236, column: 2, scope: !6673)
!6704 = !DILocation(line: 1237, column: 1, scope: !6673)
!6705 = distinct !DISubprogram(name: "abort_dma", scope: !3, file: !3, line: 1210, type: !4625, scopeLine: 1211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6706 = !DILocalVariable(name: "ep", arg: 1, scope: !6705, file: !3, line: 1210, type: !4485)
!6707 = !DILocation(line: 1210, column: 42, scope: !6705)
!6708 = !DILocation(line: 1213, column: 6, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6705, file: !3, line: 1213, column: 6)
!6710 = !DILocation(line: 1213, column: 6, scope: !6705)
!6711 = !DILocation(line: 1215, column: 27, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 1213, column: 39)
!6713 = !DILocation(line: 1215, column: 31, scope: !6712)
!6714 = !DILocation(line: 1215, column: 36, scope: !6712)
!6715 = !DILocation(line: 1215, column: 26, scope: !6712)
!6716 = !DILocation(line: 1215, column: 3, scope: !6712)
!6717 = !DILocation(line: 1216, column: 17, scope: !6712)
!6718 = !DILocation(line: 1216, column: 21, scope: !6712)
!6719 = !DILocation(line: 1216, column: 3, scope: !6712)
!6720 = !DILocation(line: 1217, column: 2, scope: !6712)
!6721 = !DILocation(line: 1218, column: 12, scope: !6709)
!6722 = !DILocation(line: 1218, column: 16, scope: !6709)
!6723 = !DILocation(line: 1218, column: 3, scope: !6709)
!6724 = !DILocation(line: 1219, column: 23, scope: !6705)
!6725 = !DILocation(line: 1219, column: 2, scope: !6705)
!6726 = !DILocation(line: 1220, column: 1, scope: !6705)
!6727 = distinct !DISubprogram(name: "list_empty", scope: !6728, file: !6728, line: 280, type: !6729, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6728 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!6729 = !DISubroutineType(types: !6730)
!6730 = !{!330, !6731}
!6731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6732, size: 64)
!6732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !307)
!6733 = !DILocalVariable(name: "head", arg: 1, scope: !6727, file: !6728, line: 280, type: !6731)
!6734 = !DILocation(line: 280, column: 54, scope: !6727)
!6735 = !DILocation(line: 282, column: 9, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6727, file: !6728, line: 282, column: 9)
!6737 = !DILocation(line: 282, column: 9, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6736, file: !6728, line: 282, column: 9)
!6739 = !DILocation(line: 282, column: 34, scope: !6727)
!6740 = !DILocation(line: 282, column: 31, scope: !6727)
!6741 = !DILocation(line: 282, column: 2, scope: !6727)
!6742 = distinct !DISubprogram(name: "done", scope: !3, file: !3, line: 953, type: !6743, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6743 = !DISubroutineType(types: !6744)
!6744 = !{null, !4485, !4470, !330}
!6745 = !DILocation(line: 352, column: 51, scope: !5568, inlinedAt: !6746)
!6746 = distinct !DILocation(line: 978, column: 2, scope: !6742)
!6747 = !DILocation(line: 392, column: 53, scope: !5562, inlinedAt: !6748)
!6748 = distinct !DILocation(line: 976, column: 2, scope: !6742)
!6749 = !DILocalVariable(name: "ep", arg: 1, scope: !6742, file: !3, line: 953, type: !4485)
!6750 = !DILocation(line: 953, column: 25, scope: !6742)
!6751 = !DILocalVariable(name: "req", arg: 2, scope: !6742, file: !3, line: 953, type: !4470)
!6752 = !DILocation(line: 953, column: 53, scope: !6742)
!6753 = !DILocalVariable(name: "status", arg: 3, scope: !6742, file: !3, line: 953, type: !330)
!6754 = !DILocation(line: 953, column: 62, scope: !6742)
!6755 = !DILocalVariable(name: "dev", scope: !6742, file: !3, line: 955, type: !284)
!6756 = !DILocation(line: 955, column: 19, scope: !6742)
!6757 = !DILocalVariable(name: "stopped", scope: !6742, file: !3, line: 956, type: !7)
!6758 = !DILocation(line: 956, column: 12, scope: !6742)
!6759 = !DILocation(line: 956, column: 22, scope: !6742)
!6760 = !DILocation(line: 956, column: 26, scope: !6742)
!6761 = !DILocation(line: 958, column: 17, scope: !6742)
!6762 = !DILocation(line: 958, column: 22, scope: !6742)
!6763 = !DILocation(line: 958, column: 2, scope: !6742)
!6764 = !DILocation(line: 960, column: 6, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 960, column: 6)
!6766 = !DILocation(line: 960, column: 11, scope: !6765)
!6767 = !DILocation(line: 960, column: 15, scope: !6765)
!6768 = !DILocation(line: 960, column: 22, scope: !6765)
!6769 = !DILocation(line: 960, column: 6, scope: !6742)
!6770 = !DILocation(line: 961, column: 21, scope: !6765)
!6771 = !DILocation(line: 961, column: 3, scope: !6765)
!6772 = !DILocation(line: 961, column: 8, scope: !6765)
!6773 = !DILocation(line: 961, column: 12, scope: !6765)
!6774 = !DILocation(line: 961, column: 19, scope: !6765)
!6775 = !DILocation(line: 963, column: 12, scope: !6765)
!6776 = !DILocation(line: 963, column: 17, scope: !6765)
!6777 = !DILocation(line: 963, column: 21, scope: !6765)
!6778 = !DILocation(line: 963, column: 10, scope: !6765)
!6779 = !DILocation(line: 965, column: 8, scope: !6742)
!6780 = !DILocation(line: 965, column: 12, scope: !6742)
!6781 = !DILocation(line: 965, column: 6, scope: !6742)
!6782 = !DILocation(line: 966, column: 6, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 966, column: 6)
!6784 = !DILocation(line: 966, column: 10, scope: !6783)
!6785 = !DILocation(line: 966, column: 6, scope: !6742)
!6786 = !DILocation(line: 967, column: 29, scope: !6783)
!6787 = !DILocation(line: 967, column: 34, scope: !6783)
!6788 = !DILocation(line: 967, column: 43, scope: !6783)
!6789 = !DILocation(line: 967, column: 48, scope: !6783)
!6790 = !DILocation(line: 967, column: 53, scope: !6783)
!6791 = !DILocation(line: 967, column: 57, scope: !6783)
!6792 = !DILocation(line: 967, column: 3, scope: !6783)
!6793 = !DILocation(line: 969, column: 6, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 969, column: 6)
!6795 = !DILocation(line: 969, column: 13, scope: !6794)
!6796 = !DILocation(line: 969, column: 16, scope: !6794)
!6797 = !DILocation(line: 969, column: 23, scope: !6794)
!6798 = !DILocation(line: 969, column: 6, scope: !6742)
!6799 = !DILocation(line: 970, column: 3, scope: !6794)
!6800 = !DILocation(line: 975, column: 2, scope: !6742)
!6801 = !DILocation(line: 975, column: 6, scope: !6742)
!6802 = !DILocation(line: 975, column: 14, scope: !6742)
!6803 = !DILocation(line: 976, column: 15, scope: !6742)
!6804 = !DILocation(line: 976, column: 20, scope: !6742)
!6805 = !DILocation(line: 394, column: 2, scope: !5642, inlinedAt: !6748)
!6806 = !DILocation(line: 394, column: 2, scope: !5645, inlinedAt: !6748)
!6807 = !DILocation(line: 977, column: 31, scope: !6742)
!6808 = !DILocation(line: 977, column: 35, scope: !6742)
!6809 = !DILocation(line: 977, column: 40, scope: !6742)
!6810 = !DILocation(line: 977, column: 45, scope: !6742)
!6811 = !DILocation(line: 977, column: 2, scope: !6742)
!6812 = !DILocation(line: 978, column: 13, scope: !6742)
!6813 = !DILocation(line: 978, column: 18, scope: !6742)
!6814 = !DILocation(line: 354, column: 2, scope: !5594, inlinedAt: !6746)
!6815 = !DILocation(line: 354, column: 2, scope: !5597, inlinedAt: !6746)
!6816 = !DILocation(line: 979, column: 16, scope: !6742)
!6817 = !DILocation(line: 979, column: 2, scope: !6742)
!6818 = !DILocation(line: 979, column: 6, scope: !6742)
!6819 = !DILocation(line: 979, column: 14, scope: !6742)
!6820 = !DILocation(line: 980, column: 1, scope: !6742)
!6821 = distinct !DISubprogram(name: "spin_stop_dma", scope: !3, file: !3, line: 836, type: !6822, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6822 = !DISubroutineType(types: !6823)
!6823 = !{null, !190}
!6824 = !DILocalVariable(name: "dma", arg: 1, scope: !6821, file: !3, line: 836, type: !190)
!6825 = !DILocation(line: 836, column: 67, scope: !6821)
!6826 = !DILocation(line: 838, column: 13, scope: !6821)
!6827 = !DILocation(line: 838, column: 18, scope: !6821)
!6828 = !DILocation(line: 838, column: 2, scope: !6821)
!6829 = !DILocation(line: 839, column: 1, scope: !6821)
!6830 = distinct !DISubprogram(name: "stop_dma", scope: !3, file: !3, line: 841, type: !6822, scopeLine: 842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6831 = !DILocalVariable(name: "dma", arg: 1, scope: !6830, file: !3, line: 841, type: !190)
!6832 = !DILocation(line: 841, column: 62, scope: !6830)
!6833 = !DILocation(line: 843, column: 16, scope: !6830)
!6834 = !DILocation(line: 843, column: 21, scope: !6830)
!6835 = !DILocation(line: 843, column: 15, scope: !6830)
!6836 = !DILocation(line: 843, column: 9, scope: !6830)
!6837 = !DILocation(line: 843, column: 29, scope: !6830)
!6838 = !DILocation(line: 843, column: 50, scope: !6830)
!6839 = !DILocation(line: 843, column: 55, scope: !6830)
!6840 = !DILocation(line: 843, column: 49, scope: !6830)
!6841 = !DILocation(line: 843, column: 2, scope: !6830)
!6842 = !DILocation(line: 844, column: 16, scope: !6830)
!6843 = !DILocation(line: 844, column: 2, scope: !6830)
!6844 = !DILocation(line: 845, column: 1, scope: !6830)
!6845 = distinct !DISubprogram(name: "scan_dma_completions", scope: !3, file: !3, line: 1132, type: !6846, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6846 = !DISubroutineType(types: !6847)
!6847 = !{!330, !4485}
!6848 = !DILocalVariable(name: "p", arg: 1, scope: !6849, file: !6850, line: 56, type: !6853)
!6849 = distinct !DISubprogram(name: "__le32_to_cpup", scope: !6850, file: !6850, line: 56, type: !6851, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6850 = !DIFile(filename: "./include/uapi/linux/byteorder/little_endian.h", directory: "/home/lizy2001/genbc/linux")
!6851 = !DISubroutineType(types: !6852)
!6852 = !{!146, !6853}
!6853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6854, size: 64)
!6854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4142)
!6855 = !DILocation(line: 56, column: 59, scope: !6849, inlinedAt: !6856)
!6856 = distinct !DILocation(line: 1148, column: 19, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 1139, column: 34)
!6858 = !DILocalVariable(name: "ep", arg: 1, scope: !6845, file: !3, line: 1132, type: !4485)
!6859 = !DILocation(line: 1132, column: 52, scope: !6845)
!6860 = !DILocalVariable(name: "num_completed", scope: !6845, file: !3, line: 1134, type: !330)
!6861 = !DILocation(line: 1134, column: 6, scope: !6845)
!6862 = !DILocation(line: 1139, column: 2, scope: !6845)
!6863 = !DILocation(line: 1139, column: 22, scope: !6845)
!6864 = !DILocation(line: 1139, column: 26, scope: !6845)
!6865 = !DILocation(line: 1139, column: 10, scope: !6845)
!6866 = !DILocation(line: 1139, column: 9, scope: !6845)
!6867 = !DILocalVariable(name: "req", scope: !6857, file: !3, line: 1140, type: !4470)
!6868 = !DILocation(line: 1140, column: 27, scope: !6857)
!6869 = !DILocalVariable(name: "req_dma_count", scope: !6857, file: !3, line: 1141, type: !144)
!6870 = !DILocation(line: 1141, column: 7, scope: !6857)
!6871 = !DILocalVariable(name: "__mptr", scope: !6872, file: !3, line: 1143, type: !136)
!6872 = distinct !DILexicalBlock(scope: !6857, file: !3, line: 1143, column: 9)
!6873 = !DILocation(line: 1143, column: 9, scope: !6872)
!6874 = !DILocation(line: 1143, column: 9, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 1143, column: 9)
!6876 = !DILocation(line: 1143, column: 7, scope: !6857)
!6877 = !DILocation(line: 1145, column: 8, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6857, file: !3, line: 1145, column: 7)
!6879 = !DILocation(line: 1145, column: 13, scope: !6878)
!6880 = !DILocation(line: 1145, column: 7, scope: !6857)
!6881 = !DILocation(line: 1146, column: 4, scope: !6878)
!6882 = !DILocation(line: 1147, column: 3, scope: !6857)
!6883 = !{i32 -2141430616}
!6884 = !DILocation(line: 1148, column: 33, scope: !6857)
!6885 = !DILocation(line: 1148, column: 38, scope: !6857)
!6886 = !DILocation(line: 1148, column: 42, scope: !6857)
!6887 = !DILocation(line: 58, column: 25, scope: !6849, inlinedAt: !6856)
!6888 = !DILocation(line: 58, column: 24, scope: !6849, inlinedAt: !6856)
!6889 = !DILocation(line: 1148, column: 17, scope: !6857)
!6890 = !DILocation(line: 1149, column: 8, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6857, file: !3, line: 1149, column: 7)
!6892 = !DILocation(line: 1149, column: 22, scope: !6891)
!6893 = !DILocation(line: 1149, column: 40, scope: !6891)
!6894 = !DILocation(line: 1149, column: 7, scope: !6857)
!6895 = !DILocation(line: 1150, column: 4, scope: !6891)
!6896 = !DILocation(line: 1156, column: 7, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6857, file: !3, line: 1156, column: 7)
!6898 = !DILocation(line: 1156, column: 7, scope: !6857)
!6899 = !DILocalVariable(name: "ep_dmacount", scope: !6900, file: !3, line: 1158, type: !4616)
!6900 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 1156, column: 40)
!6901 = !DILocation(line: 1158, column: 14, scope: !6900)
!6902 = !DILocation(line: 1158, column: 35, scope: !6900)
!6903 = !DILocation(line: 1158, column: 39, scope: !6900)
!6904 = !DILocation(line: 1158, column: 44, scope: !6900)
!6905 = !DILocation(line: 1158, column: 34, scope: !6900)
!6906 = !DILocation(line: 1158, column: 28, scope: !6900)
!6907 = !DILocation(line: 1160, column: 8, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 1160, column: 8)
!6909 = !DILocation(line: 1160, column: 20, scope: !6908)
!6910 = !DILocation(line: 1160, column: 8, scope: !6900)
!6911 = !DILocation(line: 1161, column: 5, scope: !6908)
!6912 = !DILocation(line: 1163, column: 13, scope: !6900)
!6913 = !DILocation(line: 1163, column: 17, scope: !6900)
!6914 = !DILocation(line: 1163, column: 22, scope: !6900)
!6915 = !DILocation(line: 1163, column: 4, scope: !6900)
!6916 = !DILocation(line: 1164, column: 17, scope: !6900)
!6917 = !DILocation(line: 1165, column: 4, scope: !6900)
!6918 = !DILocation(line: 1166, column: 15, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 1166, column: 14)
!6920 = !DILocation(line: 1166, column: 19, scope: !6919)
!6921 = !DILocation(line: 1166, column: 25, scope: !6919)
!6922 = !DILocation(line: 1167, column: 8, scope: !6919)
!6923 = !DILocation(line: 1167, column: 13, scope: !6919)
!6924 = !DILocation(line: 1167, column: 17, scope: !6919)
!6925 = !DILocation(line: 1167, column: 26, scope: !6919)
!6926 = !DILocation(line: 1167, column: 30, scope: !6919)
!6927 = !DILocation(line: 1167, column: 33, scope: !6919)
!6928 = !DILocation(line: 1167, column: 24, scope: !6919)
!6929 = !DILocation(line: 1167, column: 44, scope: !6919)
!6930 = !DILocation(line: 1168, column: 9, scope: !6919)
!6931 = !DILocation(line: 1168, column: 13, scope: !6919)
!6932 = !DILocation(line: 1168, column: 18, scope: !6919)
!6933 = !DILocation(line: 1168, column: 25, scope: !6919)
!6934 = !DILocation(line: 1166, column: 14, scope: !6897)
!6935 = !DILocalVariable(name: "ep_stat", scope: !6936, file: !3, line: 1170, type: !4616)
!6936 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 1168, column: 38)
!6937 = !DILocation(line: 1170, column: 14, scope: !6936)
!6938 = !DILocation(line: 1170, column: 31, scope: !6936)
!6939 = !DILocation(line: 1170, column: 35, scope: !6936)
!6940 = !DILocation(line: 1170, column: 41, scope: !6936)
!6941 = !DILocation(line: 1170, column: 30, scope: !6936)
!6942 = !DILocation(line: 1170, column: 24, scope: !6936)
!6943 = !DILocation(line: 1175, column: 9, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6936, file: !3, line: 1175, column: 8)
!6945 = !DILocation(line: 1175, column: 17, scope: !6944)
!6946 = !DILocation(line: 1175, column: 41, scope: !6944)
!6947 = !DILocation(line: 1175, column: 8, scope: !6936)
!6948 = !DILocation(line: 1176, column: 5, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 1175, column: 47)
!6950 = !DILocation(line: 1178, column: 5, scope: !6949)
!6951 = !DILocation(line: 1178, column: 10, scope: !6949)
!6952 = !DILocation(line: 1178, column: 14, scope: !6949)
!6953 = !DILocation(line: 1178, column: 21, scope: !6949)
!6954 = !DILocation(line: 1179, column: 4, scope: !6949)
!6955 = !DILocalVariable(name: "ep_avail", scope: !6956, file: !3, line: 1180, type: !4616)
!6956 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 1179, column: 11)
!6957 = !DILocation(line: 1180, column: 15, scope: !6956)
!6958 = !DILocation(line: 1180, column: 33, scope: !6956)
!6959 = !DILocation(line: 1180, column: 37, scope: !6956)
!6960 = !DILocation(line: 1180, column: 43, scope: !6956)
!6961 = !DILocation(line: 1180, column: 32, scope: !6956)
!6962 = !DILocation(line: 1180, column: 26, scope: !6956)
!6963 = !DILocation(line: 1181, column: 9, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 1181, column: 9)
!6965 = !DILocation(line: 1181, column: 9, scope: !6956)
!6966 = !DILocation(line: 1183, column: 6, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 1181, column: 19)
!6968 = !DILocation(line: 1183, column: 10, scope: !6967)
!6969 = !DILocation(line: 1183, column: 23, scope: !6967)
!6970 = !DILocation(line: 1188, column: 6, scope: !6967)
!6971 = !DILocation(line: 1188, column: 11, scope: !6967)
!6972 = !DILocation(line: 1188, column: 15, scope: !6967)
!6973 = !DILocation(line: 1188, column: 22, scope: !6967)
!6974 = !DILocation(line: 1189, column: 5, scope: !6967)
!6975 = !DILocation(line: 1191, column: 3, scope: !6936)
!6976 = !DILocation(line: 1192, column: 12, scope: !6857)
!6977 = !DILocation(line: 1192, column: 16, scope: !6857)
!6978 = !DILocation(line: 1192, column: 21, scope: !6857)
!6979 = !DILocation(line: 1192, column: 3, scope: !6857)
!6980 = !DILocation(line: 1193, column: 16, scope: !6857)
!6981 = distinct !{!6981, !6862, !6982}
!6982 = !DILocation(line: 1194, column: 2, scope: !6845)
!6983 = !DILocation(line: 1196, column: 9, scope: !6845)
!6984 = !DILocation(line: 1196, column: 2, scope: !6845)
!6985 = distinct !DISubprogram(name: "handshake", scope: !3, file: !3, line: 361, type: !6986, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!6986 = !DISubroutineType(types: !6987)
!6987 = !{!330, !1586, !144, !144, !330}
!6988 = !DILocalVariable(name: "ptr", arg: 1, scope: !6985, file: !3, line: 361, type: !1586)
!6989 = !DILocation(line: 361, column: 35, scope: !6985)
!6990 = !DILocalVariable(name: "mask", arg: 2, scope: !6985, file: !3, line: 361, type: !144)
!6991 = !DILocation(line: 361, column: 44, scope: !6985)
!6992 = !DILocalVariable(name: "done", arg: 3, scope: !6985, file: !3, line: 361, type: !144)
!6993 = !DILocation(line: 361, column: 54, scope: !6985)
!6994 = !DILocalVariable(name: "usec", arg: 4, scope: !6985, file: !3, line: 361, type: !330)
!6995 = !DILocation(line: 361, column: 64, scope: !6985)
!6996 = !DILocalVariable(name: "result", scope: !6985, file: !3, line: 363, type: !144)
!6997 = !DILocation(line: 363, column: 6, scope: !6985)
!6998 = !DILocalVariable(name: "ret", scope: !6985, file: !3, line: 364, type: !330)
!6999 = !DILocation(line: 364, column: 6, scope: !6985)
!7000 = !DILocalVariable(name: "__timeout_us", scope: !7001, file: !3, line: 366, type: !608)
!7001 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 366, column: 8)
!7002 = !DILocation(line: 366, column: 8, scope: !7001)
!7003 = !DILocalVariable(name: "__delay_us", scope: !7001, file: !3, line: 366, type: !347)
!7004 = !DILocalVariable(name: "__timeout", scope: !7001, file: !3, line: 366, type: !1474)
!7005 = !DILocation(line: 366, column: 8, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 366, column: 8)
!7007 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 366, column: 8)
!7008 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 366, column: 8)
!7009 = !DILocation(line: 366, column: 8, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 366, column: 8)
!7011 = !DILocation(line: 366, column: 8, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 366, column: 8)
!7013 = !DILocation(line: 366, column: 8, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 366, column: 8)
!7015 = !DILocation(line: 366, column: 8, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 366, column: 8)
!7017 = !DILocation(line: 366, column: 8, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !3, line: 366, column: 8)
!7019 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 366, column: 8)
!7020 = !DILocation(line: 366, column: 8, scope: !7019)
!7021 = !DILocation(line: 366, column: 8, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 366, column: 8)
!7023 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 366, column: 8)
!7024 = !DILocation(line: 366, column: 8, scope: !7023)
!7025 = !DILocation(line: 366, column: 8, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 366, column: 8)
!7027 = !DILocation(line: 366, column: 8, scope: !7007)
!7028 = distinct !{!7028, !7029, !7029}
!7029 = !DILocation(line: 366, column: 8, scope: !7008)
!7030 = !DILocation(line: 366, column: 6, scope: !6985)
!7031 = !DILocation(line: 370, column: 6, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 370, column: 6)
!7033 = !DILocation(line: 370, column: 13, scope: !7032)
!7034 = !DILocation(line: 370, column: 6, scope: !6985)
!7035 = !DILocation(line: 371, column: 3, scope: !7032)
!7036 = !DILocation(line: 373, column: 9, scope: !6985)
!7037 = !DILocation(line: 373, column: 2, scope: !6985)
!7038 = !DILocation(line: 374, column: 1, scope: !6985)
!7039 = distinct !DISubprogram(name: "ktime_add_us", scope: !1475, file: !1475, line: 179, type: !7040, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7040 = !DISubroutineType(types: !7041)
!7041 = !{!1474, !7042, !7043}
!7042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1474)
!7043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !608)
!7044 = !DILocalVariable(name: "kt", arg: 1, scope: !7039, file: !1475, line: 179, type: !7042)
!7045 = !DILocation(line: 179, column: 50, scope: !7039)
!7046 = !DILocalVariable(name: "usec", arg: 2, scope: !7039, file: !1475, line: 179, type: !7043)
!7047 = !DILocation(line: 179, column: 64, scope: !7039)
!7048 = !DILocation(line: 181, column: 9, scope: !7039)
!7049 = !DILocation(line: 181, column: 2, scope: !7039)
!7050 = distinct !DISubprogram(name: "ktime_compare", scope: !1475, file: !1475, line: 95, type: !7051, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7051 = !DISubroutineType(types: !7052)
!7052 = !{!330, !7042, !7042}
!7053 = !DILocalVariable(name: "cmp1", arg: 1, scope: !7050, file: !1475, line: 95, type: !7042)
!7054 = !DILocation(line: 95, column: 47, scope: !7050)
!7055 = !DILocalVariable(name: "cmp2", arg: 2, scope: !7050, file: !1475, line: 95, type: !7042)
!7056 = !DILocation(line: 95, column: 67, scope: !7050)
!7057 = !DILocation(line: 97, column: 6, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7050, file: !1475, line: 97, column: 6)
!7059 = !DILocation(line: 97, column: 13, scope: !7058)
!7060 = !DILocation(line: 97, column: 11, scope: !7058)
!7061 = !DILocation(line: 97, column: 6, scope: !7050)
!7062 = !DILocation(line: 98, column: 3, scope: !7058)
!7063 = !DILocation(line: 99, column: 6, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7050, file: !1475, line: 99, column: 6)
!7065 = !DILocation(line: 99, column: 13, scope: !7064)
!7066 = !DILocation(line: 99, column: 11, scope: !7064)
!7067 = !DILocation(line: 99, column: 6, scope: !7050)
!7068 = !DILocation(line: 100, column: 3, scope: !7064)
!7069 = !DILocation(line: 101, column: 2, scope: !7050)
!7070 = !DILocation(line: 102, column: 1, scope: !7050)
!7071 = distinct !DISubprogram(name: "dma_done", scope: !3, file: !3, line: 1125, type: !7072, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7072 = !DISubroutineType(types: !7073)
!7073 = !{null, !4485, !4470, !144, !330}
!7074 = !DILocalVariable(name: "ep", arg: 1, scope: !7071, file: !3, line: 1125, type: !4485)
!7075 = !DILocation(line: 1125, column: 29, scope: !7071)
!7076 = !DILocalVariable(name: "req", arg: 2, scope: !7071, file: !3, line: 1125, type: !4470)
!7077 = !DILocation(line: 1125, column: 57, scope: !7071)
!7078 = !DILocalVariable(name: "dmacount", arg: 3, scope: !7071, file: !3, line: 1125, type: !144)
!7079 = !DILocation(line: 1125, column: 66, scope: !7071)
!7080 = !DILocalVariable(name: "status", arg: 4, scope: !7071, file: !3, line: 1126, type: !330)
!7081 = !DILocation(line: 1126, column: 7, scope: !7071)
!7082 = !DILocation(line: 1128, column: 20, scope: !7071)
!7083 = !DILocation(line: 1128, column: 25, scope: !7071)
!7084 = !DILocation(line: 1128, column: 29, scope: !7071)
!7085 = !DILocation(line: 1128, column: 61, scope: !7071)
!7086 = !DILocation(line: 1128, column: 59, scope: !7071)
!7087 = !DILocation(line: 1128, column: 36, scope: !7071)
!7088 = !DILocation(line: 1128, column: 2, scope: !7071)
!7089 = !DILocation(line: 1128, column: 7, scope: !7071)
!7090 = !DILocation(line: 1128, column: 11, scope: !7071)
!7091 = !DILocation(line: 1128, column: 18, scope: !7071)
!7092 = !DILocation(line: 1129, column: 7, scope: !7071)
!7093 = !DILocation(line: 1129, column: 11, scope: !7071)
!7094 = !DILocation(line: 1129, column: 16, scope: !7071)
!7095 = !DILocation(line: 1129, column: 2, scope: !7071)
!7096 = !DILocation(line: 1130, column: 1, scope: !7071)
!7097 = distinct !DISubprogram(name: "list_del_init", scope: !6728, file: !6728, line: 202, type: !7098, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7098 = !DISubroutineType(types: !7099)
!7099 = !{null, !310}
!7100 = !DILocalVariable(name: "entry", arg: 1, scope: !7097, file: !6728, line: 202, type: !310)
!7101 = !DILocation(line: 202, column: 52, scope: !7097)
!7102 = !DILocation(line: 204, column: 19, scope: !7097)
!7103 = !DILocation(line: 204, column: 2, scope: !7097)
!7104 = !DILocation(line: 205, column: 17, scope: !7097)
!7105 = !DILocation(line: 205, column: 2, scope: !7097)
!7106 = !DILocation(line: 206, column: 1, scope: !7097)
!7107 = distinct !DISubprogram(name: "__list_del_entry", scope: !6728, file: !6728, line: 130, type: !7098, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7108 = !DILocalVariable(name: "entry", arg: 1, scope: !7107, file: !6728, line: 130, type: !310)
!7109 = !DILocation(line: 130, column: 55, scope: !7107)
!7110 = !DILocation(line: 132, column: 30, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7107, file: !6728, line: 132, column: 6)
!7112 = !DILocation(line: 132, column: 7, scope: !7111)
!7113 = !DILocation(line: 132, column: 6, scope: !7107)
!7114 = !DILocation(line: 133, column: 3, scope: !7111)
!7115 = !DILocation(line: 135, column: 13, scope: !7107)
!7116 = !DILocation(line: 135, column: 20, scope: !7107)
!7117 = !DILocation(line: 135, column: 26, scope: !7107)
!7118 = !DILocation(line: 135, column: 33, scope: !7107)
!7119 = !DILocation(line: 135, column: 2, scope: !7107)
!7120 = !DILocation(line: 136, column: 1, scope: !7107)
!7121 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !6728, file: !6728, line: 33, type: !7098, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7122 = !DILocalVariable(name: "list", arg: 1, scope: !7121, file: !6728, line: 33, type: !310)
!7123 = !DILocation(line: 33, column: 53, scope: !7121)
!7124 = !DILocation(line: 35, column: 2, scope: !7121)
!7125 = !DILocation(line: 35, column: 2, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7121, file: !6728, line: 35, column: 2)
!7127 = !DILocation(line: 35, column: 2, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7126, file: !6728, line: 35, column: 2)
!7129 = !DILocation(line: 35, column: 2, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7126, file: !6728, line: 35, column: 2)
!7131 = !DILocation(line: 36, column: 15, scope: !7121)
!7132 = !DILocation(line: 36, column: 2, scope: !7121)
!7133 = !DILocation(line: 36, column: 8, scope: !7121)
!7134 = !DILocation(line: 36, column: 13, scope: !7121)
!7135 = !DILocation(line: 37, column: 1, scope: !7121)
!7136 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !6728, file: !6728, line: 51, type: !7137, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7137 = !DISubroutineType(types: !7138)
!7138 = !{!676, !310}
!7139 = !DILocalVariable(name: "entry", arg: 1, scope: !7136, file: !6728, line: 51, type: !310)
!7140 = !DILocation(line: 51, column: 61, scope: !7136)
!7141 = !DILocation(line: 53, column: 2, scope: !7136)
!7142 = distinct !DISubprogram(name: "__list_del", scope: !6728, file: !6728, line: 110, type: !7143, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7143 = !DISubroutineType(types: !7144)
!7144 = !{null, !310, !310}
!7145 = !DILocalVariable(name: "prev", arg: 1, scope: !7142, file: !6728, line: 110, type: !310)
!7146 = !DILocation(line: 110, column: 50, scope: !7142)
!7147 = !DILocalVariable(name: "next", arg: 2, scope: !7142, file: !6728, line: 110, type: !310)
!7148 = !DILocation(line: 110, column: 75, scope: !7142)
!7149 = !DILocation(line: 112, column: 15, scope: !7142)
!7150 = !DILocation(line: 112, column: 2, scope: !7142)
!7151 = !DILocation(line: 112, column: 8, scope: !7142)
!7152 = !DILocation(line: 112, column: 13, scope: !7142)
!7153 = !DILocation(line: 113, column: 2, scope: !7142)
!7154 = !DILocation(line: 113, column: 2, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7142, file: !6728, line: 113, column: 2)
!7156 = !DILocation(line: 113, column: 2, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7155, file: !6728, line: 113, column: 2)
!7158 = !DILocation(line: 113, column: 2, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7155, file: !6728, line: 113, column: 2)
!7160 = !DILocation(line: 114, column: 1, scope: !7142)
!7161 = distinct !DISubprogram(name: "net2280_led_active", scope: !286, file: !286, line: 286, type: !7162, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7162 = !DISubroutineType(types: !7163)
!7163 = !{null, !284, !330}
!7164 = !DILocalVariable(name: "dev", arg: 1, scope: !7161, file: !286, line: 286, type: !284)
!7165 = !DILocation(line: 286, column: 55, scope: !7161)
!7166 = !DILocalVariable(name: "is_active", arg: 2, scope: !7161, file: !286, line: 286, type: !330)
!7167 = !DILocation(line: 286, column: 64, scope: !7161)
!7168 = !DILocalVariable(name: "val", scope: !7161, file: !286, line: 288, type: !144)
!7169 = !DILocation(line: 288, column: 6, scope: !7161)
!7170 = !DILocation(line: 288, column: 19, scope: !7161)
!7171 = !DILocation(line: 288, column: 24, scope: !7161)
!7172 = !DILocation(line: 288, column: 30, scope: !7161)
!7173 = !DILocation(line: 288, column: 18, scope: !7161)
!7174 = !DILocation(line: 288, column: 12, scope: !7161)
!7175 = !DILocation(line: 291, column: 6, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7161, file: !286, line: 291, column: 6)
!7177 = !DILocation(line: 291, column: 6, scope: !7161)
!7178 = !DILocation(line: 292, column: 7, scope: !7176)
!7179 = !DILocation(line: 292, column: 3, scope: !7176)
!7180 = !DILocation(line: 294, column: 7, scope: !7176)
!7181 = !DILocation(line: 295, column: 9, scope: !7161)
!7182 = !DILocation(line: 295, column: 15, scope: !7161)
!7183 = !DILocation(line: 295, column: 20, scope: !7161)
!7184 = !DILocation(line: 295, column: 26, scope: !7161)
!7185 = !DILocation(line: 295, column: 14, scope: !7161)
!7186 = !DILocation(line: 295, column: 2, scope: !7161)
!7187 = !DILocation(line: 296, column: 1, scope: !7161)
!7188 = distinct !DISubprogram(name: "defect7374_enable_data_eps_zero", scope: !3, file: !3, line: 1979, type: !4634, scopeLine: 1980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7189 = !DILocalVariable(name: "dev", arg: 1, scope: !7188, file: !3, line: 1979, type: !284)
!7190 = !DILocation(line: 1979, column: 61, scope: !7188)
!7191 = !DILocalVariable(name: "tmp", scope: !7188, file: !3, line: 1981, type: !144)
!7192 = !DILocation(line: 1981, column: 6, scope: !7188)
!7193 = !DILocalVariable(name: "tmp_reg", scope: !7188, file: !3, line: 1981, type: !144)
!7194 = !DILocation(line: 1981, column: 15, scope: !7188)
!7195 = !DILocalVariable(name: "scratch", scope: !7188, file: !3, line: 1982, type: !144)
!7196 = !DILocation(line: 1982, column: 6, scope: !7188)
!7197 = !DILocalVariable(name: "i", scope: !7188, file: !3, line: 1983, type: !330)
!7198 = !DILocation(line: 1983, column: 6, scope: !7188)
!7199 = !DILocalVariable(name: "ep_sel", scope: !7188, file: !3, line: 1984, type: !357)
!7200 = !DILocation(line: 1984, column: 16, scope: !7188)
!7201 = !DILocation(line: 1986, column: 24, scope: !7188)
!7202 = !DILocation(line: 1986, column: 29, scope: !7188)
!7203 = !DILocation(line: 1986, column: 12, scope: !7188)
!7204 = !DILocation(line: 1986, column: 10, scope: !7188)
!7205 = !DILocalVariable(name: "__ret_warn_on", scope: !7206, file: !3, line: 1988, type: !330)
!7206 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 1988, column: 2)
!7207 = !DILocation(line: 1988, column: 2, scope: !7206)
!7208 = !DILocation(line: 1988, column: 2, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 1988, column: 2)
!7210 = !DILocation(line: 1988, column: 2, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 1988, column: 2)
!7212 = !DILocation(line: 1988, column: 2, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 1988, column: 2)
!7214 = !DILocation(line: 1988, column: 2, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 1988, column: 2)
!7216 = !{i32 -2141398591, i32 -2141398562, i32 -2141398516, i32 -2141398458, i32 -2141398404, i32 -2141398350, i32 -2141398295, i32 -2141398264}
!7217 = !DILocation(line: 1988, column: 2, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 1988, column: 2)
!7219 = !{i32 -2141397849, i32 -2141397842, i32 -2141397790, i32 -2141397759, i32 -2141397729}
!7220 = !DILocation(line: 1988, column: 2, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 1988, column: 2)
!7222 = !DILocation(line: 1991, column: 10, scope: !7188)
!7223 = !DILocation(line: 1993, column: 2, scope: !7188)
!7224 = !DILocation(line: 1994, column: 2, scope: !7188)
!7225 = !DILocation(line: 1999, column: 6, scope: !7188)
!7226 = !DILocation(line: 1999, column: 11, scope: !7188)
!7227 = !DILocation(line: 1999, column: 5, scope: !7188)
!7228 = !DILocation(line: 1998, column: 55, scope: !7188)
!7229 = !DILocation(line: 1997, column: 8, scope: !7188)
!7230 = !DILocation(line: 1997, column: 6, scope: !7188)
!7231 = !DILocation(line: 2003, column: 9, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 2003, column: 2)
!7233 = !DILocation(line: 2003, column: 7, scope: !7232)
!7234 = !DILocation(line: 2003, column: 14, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7232, file: !3, line: 2003, column: 2)
!7236 = !DILocation(line: 2003, column: 16, scope: !7235)
!7237 = !DILocation(line: 2003, column: 2, scope: !7232)
!7238 = !DILocation(line: 2004, column: 10, scope: !7235)
!7239 = !DILocation(line: 2004, column: 16, scope: !7235)
!7240 = !DILocation(line: 2004, column: 21, scope: !7235)
!7241 = !DILocation(line: 2004, column: 24, scope: !7235)
!7242 = !DILocation(line: 2004, column: 27, scope: !7235)
!7243 = !DILocation(line: 2004, column: 32, scope: !7235)
!7244 = !DILocation(line: 2004, column: 15, scope: !7235)
!7245 = !DILocation(line: 2004, column: 3, scope: !7235)
!7246 = !DILocation(line: 2003, column: 22, scope: !7235)
!7247 = !DILocation(line: 2003, column: 2, scope: !7235)
!7248 = distinct !{!7248, !7237, !7249}
!7249 = !DILocation(line: 2004, column: 38, scope: !7232)
!7250 = !DILocation(line: 2007, column: 6, scope: !7188)
!7251 = !DILocation(line: 2008, column: 9, scope: !7188)
!7252 = !DILocation(line: 2008, column: 15, scope: !7188)
!7253 = !DILocation(line: 2008, column: 20, scope: !7188)
!7254 = !DILocation(line: 2008, column: 27, scope: !7188)
!7255 = !DILocation(line: 2008, column: 14, scope: !7188)
!7256 = !DILocation(line: 2008, column: 2, scope: !7188)
!7257 = !DILocation(line: 2009, column: 9, scope: !7188)
!7258 = !DILocation(line: 2009, column: 15, scope: !7188)
!7259 = !DILocation(line: 2009, column: 20, scope: !7188)
!7260 = !DILocation(line: 2009, column: 27, scope: !7188)
!7261 = !DILocation(line: 2009, column: 14, scope: !7188)
!7262 = !DILocation(line: 2009, column: 2, scope: !7188)
!7263 = !DILocation(line: 2010, column: 9, scope: !7188)
!7264 = !DILocation(line: 2010, column: 15, scope: !7188)
!7265 = !DILocation(line: 2010, column: 20, scope: !7188)
!7266 = !DILocation(line: 2010, column: 27, scope: !7188)
!7267 = !DILocation(line: 2010, column: 14, scope: !7188)
!7268 = !DILocation(line: 2010, column: 2, scope: !7188)
!7269 = !DILocation(line: 2011, column: 9, scope: !7188)
!7270 = !DILocation(line: 2011, column: 15, scope: !7188)
!7271 = !DILocation(line: 2011, column: 20, scope: !7188)
!7272 = !DILocation(line: 2011, column: 27, scope: !7188)
!7273 = !DILocation(line: 2011, column: 14, scope: !7188)
!7274 = !DILocation(line: 2011, column: 2, scope: !7188)
!7275 = !DILocation(line: 2015, column: 14, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 2015, column: 2)
!7277 = !DILocation(line: 2015, column: 7, scope: !7276)
!7278 = !DILocation(line: 2015, column: 19, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 2015, column: 2)
!7280 = !DILocation(line: 2015, column: 26, scope: !7279)
!7281 = !DILocation(line: 2015, column: 2, scope: !7276)
!7282 = !DILocation(line: 2017, column: 20, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 2015, column: 43)
!7284 = !DILocation(line: 2017, column: 25, scope: !7283)
!7285 = !DILocation(line: 2017, column: 33, scope: !7283)
!7286 = !DILocation(line: 2017, column: 19, scope: !7283)
!7287 = !DILocation(line: 2017, column: 13, scope: !7283)
!7288 = !DILocation(line: 2017, column: 11, scope: !7283)
!7289 = !DILocation(line: 2018, column: 12, scope: !7283)
!7290 = !DILocation(line: 2018, column: 20, scope: !7283)
!7291 = !DILocation(line: 2018, column: 31, scope: !7283)
!7292 = !DILocation(line: 2018, column: 29, scope: !7283)
!7293 = !DILocation(line: 2019, column: 6, scope: !7283)
!7294 = !DILocation(line: 2019, column: 11, scope: !7283)
!7295 = !DILocation(line: 2019, column: 19, scope: !7283)
!7296 = !DILocation(line: 2019, column: 5, scope: !7283)
!7297 = !DILocation(line: 2018, column: 3, scope: !7283)
!7298 = !DILocation(line: 2021, column: 7, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2021, column: 7)
!7300 = !DILocation(line: 2021, column: 14, scope: !7299)
!7301 = !DILocation(line: 2021, column: 7, scope: !7283)
!7302 = !DILocation(line: 2023, column: 13, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 2021, column: 20)
!7304 = !DILocation(line: 2023, column: 18, scope: !7303)
!7305 = !DILocation(line: 2023, column: 26, scope: !7303)
!7306 = !DILocation(line: 2023, column: 12, scope: !7303)
!7307 = !DILocation(line: 2023, column: 6, scope: !7303)
!7308 = !DILocation(line: 2023, column: 38, scope: !7303)
!7309 = !DILocation(line: 2023, column: 5, scope: !7303)
!7310 = !DILocation(line: 2022, column: 8, scope: !7303)
!7311 = !DILocation(line: 2025, column: 11, scope: !7303)
!7312 = !DILocation(line: 2025, column: 17, scope: !7303)
!7313 = !DILocation(line: 2025, column: 22, scope: !7303)
!7314 = !DILocation(line: 2025, column: 30, scope: !7303)
!7315 = !DILocation(line: 2025, column: 16, scope: !7303)
!7316 = !DILocation(line: 2025, column: 4, scope: !7303)
!7317 = !DILocation(line: 2026, column: 4, scope: !7303)
!7318 = !DILocation(line: 2029, column: 7, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2029, column: 7)
!7320 = !DILocation(line: 2029, column: 14, scope: !7319)
!7321 = !DILocation(line: 2029, column: 19, scope: !7319)
!7322 = !DILocation(line: 2029, column: 23, scope: !7319)
!7323 = !DILocation(line: 2029, column: 30, scope: !7319)
!7324 = !DILocation(line: 2029, column: 34, scope: !7319)
!7325 = !DILocation(line: 2029, column: 37, scope: !7319)
!7326 = !DILocation(line: 2029, column: 44, scope: !7319)
!7327 = !DILocation(line: 2029, column: 50, scope: !7319)
!7328 = !DILocation(line: 2030, column: 5, scope: !7319)
!7329 = !DILocation(line: 2030, column: 12, scope: !7319)
!7330 = !DILocation(line: 2030, column: 19, scope: !7319)
!7331 = !DILocation(line: 2030, column: 22, scope: !7319)
!7332 = !DILocation(line: 2030, column: 29, scope: !7319)
!7333 = !DILocation(line: 2029, column: 7, scope: !7283)
!7334 = !DILocation(line: 2031, column: 4, scope: !7319)
!7335 = !DILocation(line: 2033, column: 17, scope: !7283)
!7336 = !DILocation(line: 2033, column: 22, scope: !7283)
!7337 = !DILocation(line: 2033, column: 30, scope: !7283)
!7338 = !DILocation(line: 2033, column: 16, scope: !7283)
!7339 = !DILocation(line: 2033, column: 10, scope: !7283)
!7340 = !DILocation(line: 2033, column: 43, scope: !7283)
!7341 = !DILocation(line: 2033, column: 9, scope: !7283)
!7342 = !DILocation(line: 2033, column: 7, scope: !7283)
!7343 = !DILocation(line: 2035, column: 10, scope: !7283)
!7344 = !DILocation(line: 2035, column: 16, scope: !7283)
!7345 = !DILocation(line: 2035, column: 21, scope: !7283)
!7346 = !DILocation(line: 2035, column: 29, scope: !7283)
!7347 = !DILocation(line: 2035, column: 15, scope: !7283)
!7348 = !DILocation(line: 2035, column: 3, scope: !7283)
!7349 = !DILocation(line: 2037, column: 16, scope: !7283)
!7350 = !DILocation(line: 2037, column: 21, scope: !7283)
!7351 = !DILocation(line: 2037, column: 29, scope: !7283)
!7352 = !DILocation(line: 2037, column: 15, scope: !7283)
!7353 = !DILocation(line: 2037, column: 9, scope: !7283)
!7354 = !DILocation(line: 2037, column: 41, scope: !7283)
!7355 = !DILocation(line: 2037, column: 7, scope: !7283)
!7356 = !DILocation(line: 2039, column: 10, scope: !7283)
!7357 = !DILocation(line: 2039, column: 16, scope: !7283)
!7358 = !DILocation(line: 2039, column: 21, scope: !7283)
!7359 = !DILocation(line: 2039, column: 29, scope: !7283)
!7360 = !DILocation(line: 2039, column: 15, scope: !7283)
!7361 = !DILocation(line: 2039, column: 3, scope: !7283)
!7362 = !DILocation(line: 2041, column: 2, scope: !7283)
!7363 = !DILocation(line: 2015, column: 39, scope: !7279)
!7364 = !DILocation(line: 2015, column: 2, scope: !7279)
!7365 = distinct !{!7365, !7281, !7366}
!7366 = !DILocation(line: 2041, column: 2, scope: !7276)
!7367 = !DILocation(line: 2046, column: 10, scope: !7188)
!7368 = !DILocation(line: 2047, column: 14, scope: !7188)
!7369 = !DILocation(line: 2047, column: 19, scope: !7188)
!7370 = !DILocation(line: 2047, column: 34, scope: !7188)
!7371 = !DILocation(line: 2047, column: 2, scope: !7188)
!7372 = !DILocation(line: 2049, column: 1, scope: !7188)
!7373 = distinct !DISubprogram(name: "set_idx_reg", scope: !286, file: !286, line: 32, type: !7374, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7374 = !DISubroutineType(types: !7375)
!7375 = !{null, !139, !144, !144}
!7376 = !DILocalVariable(name: "regs", arg: 1, scope: !7373, file: !286, line: 32, type: !139)
!7377 = !DILocation(line: 32, column: 42, scope: !7373)
!7378 = !DILocalVariable(name: "index", arg: 2, scope: !7373, file: !286, line: 32, type: !144)
!7379 = !DILocation(line: 32, column: 52, scope: !7373)
!7380 = !DILocalVariable(name: "value", arg: 3, scope: !7373, file: !286, line: 32, type: !144)
!7381 = !DILocation(line: 32, column: 63, scope: !7373)
!7382 = !DILocation(line: 34, column: 9, scope: !7373)
!7383 = !DILocation(line: 34, column: 17, scope: !7373)
!7384 = !DILocation(line: 34, column: 23, scope: !7373)
!7385 = !DILocation(line: 34, column: 16, scope: !7373)
!7386 = !DILocation(line: 34, column: 2, scope: !7373)
!7387 = !DILocation(line: 35, column: 9, scope: !7373)
!7388 = !DILocation(line: 35, column: 17, scope: !7373)
!7389 = !DILocation(line: 35, column: 23, scope: !7373)
!7390 = !DILocation(line: 35, column: 16, scope: !7373)
!7391 = !DILocation(line: 35, column: 2, scope: !7373)
!7392 = !DILocation(line: 37, column: 1, scope: !7373)
!7393 = distinct !DISubprogram(name: "usb_endpoint_type", scope: !94, file: !94, line: 481, type: !7394, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7394 = !DISubroutineType(types: !7395)
!7395 = !{!330, !3992}
!7396 = !DILocalVariable(name: "epd", arg: 1, scope: !7393, file: !94, line: 481, type: !3992)
!7397 = !DILocation(line: 481, column: 75, scope: !7393)
!7398 = !DILocation(line: 483, column: 9, scope: !7393)
!7399 = !DILocation(line: 483, column: 14, scope: !7393)
!7400 = !DILocation(line: 483, column: 27, scope: !7393)
!7401 = !DILocation(line: 483, column: 2, scope: !7393)
!7402 = distinct !DISubprogram(name: "usb_endpoint_dir_in", scope: !94, file: !94, line: 492, type: !7394, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7403 = !DILocalVariable(name: "epd", arg: 1, scope: !7402, file: !94, line: 492, type: !3992)
!7404 = !DILocation(line: 492, column: 77, scope: !7402)
!7405 = !DILocation(line: 494, column: 11, scope: !7402)
!7406 = !DILocation(line: 494, column: 16, scope: !7402)
!7407 = !DILocation(line: 494, column: 33, scope: !7402)
!7408 = !DILocation(line: 494, column: 58, scope: !7402)
!7409 = !DILocation(line: 494, column: 2, scope: !7402)
!7410 = distinct !DISubprogram(name: "usb_endpoint_num", scope: !94, file: !94, line: 469, type: !7394, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7411 = !DILocalVariable(name: "epd", arg: 1, scope: !7410, file: !94, line: 469, type: !3992)
!7412 = !DILocation(line: 469, column: 74, scope: !7410)
!7413 = !DILocation(line: 471, column: 9, scope: !7410)
!7414 = !DILocation(line: 471, column: 14, scope: !7410)
!7415 = !DILocation(line: 471, column: 31, scope: !7410)
!7416 = !DILocation(line: 471, column: 2, scope: !7410)
!7417 = distinct !DISubprogram(name: "usb_reset_228x", scope: !3, file: !3, line: 2060, type: !4634, scopeLine: 2061, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7418 = !DILocalVariable(name: "dev", arg: 1, scope: !7417, file: !3, line: 2060, type: !284)
!7419 = !DILocation(line: 2060, column: 44, scope: !7417)
!7420 = !DILocalVariable(name: "tmp", scope: !7417, file: !3, line: 2062, type: !144)
!7421 = !DILocation(line: 2062, column: 6, scope: !7417)
!7422 = !DILocation(line: 2064, column: 2, scope: !7417)
!7423 = !DILocation(line: 2064, column: 7, scope: !7417)
!7424 = !DILocation(line: 2064, column: 14, scope: !7417)
!7425 = !DILocation(line: 2064, column: 20, scope: !7417)
!7426 = !DILocation(line: 2065, column: 16, scope: !7417)
!7427 = !DILocation(line: 2065, column: 21, scope: !7417)
!7428 = !DILocation(line: 2065, column: 26, scope: !7417)
!7429 = !DILocation(line: 2065, column: 15, scope: !7417)
!7430 = !DILocation(line: 2065, column: 9, scope: !7417)
!7431 = !DILocation(line: 2067, column: 19, scope: !7417)
!7432 = !DILocation(line: 2067, column: 2, scope: !7417)
!7433 = !DILocation(line: 2070, column: 13, scope: !7417)
!7434 = !DILocation(line: 2070, column: 18, scope: !7417)
!7435 = !DILocation(line: 2070, column: 23, scope: !7417)
!7436 = !DILocation(line: 2070, column: 12, scope: !7417)
!7437 = !DILocation(line: 2070, column: 2, scope: !7417)
!7438 = !DILocation(line: 2071, column: 13, scope: !7417)
!7439 = !DILocation(line: 2071, column: 18, scope: !7417)
!7440 = !DILocation(line: 2071, column: 24, scope: !7417)
!7441 = !DILocation(line: 2071, column: 12, scope: !7417)
!7442 = !DILocation(line: 2071, column: 2, scope: !7417)
!7443 = !DILocation(line: 2072, column: 13, scope: !7417)
!7444 = !DILocation(line: 2072, column: 18, scope: !7417)
!7445 = !DILocation(line: 2072, column: 24, scope: !7417)
!7446 = !DILocation(line: 2072, column: 12, scope: !7417)
!7447 = !DILocation(line: 2072, column: 2, scope: !7417)
!7448 = !DILocation(line: 2075, column: 11, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 2075, column: 2)
!7450 = !DILocation(line: 2075, column: 7, scope: !7449)
!7451 = !DILocation(line: 2075, column: 16, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7449, file: !3, line: 2075, column: 2)
!7453 = !DILocation(line: 2075, column: 20, scope: !7452)
!7454 = !DILocation(line: 2075, column: 2, scope: !7449)
!7455 = !DILocalVariable(name: "ep", scope: !7456, file: !3, line: 2076, type: !4485)
!7456 = distinct !DILexicalBlock(scope: !7452, file: !3, line: 2075, column: 32)
!7457 = !DILocation(line: 2076, column: 28, scope: !7456)
!7458 = !DILocation(line: 2076, column: 34, scope: !7456)
!7459 = !DILocation(line: 2076, column: 39, scope: !7456)
!7460 = !DILocation(line: 2076, column: 42, scope: !7456)
!7461 = !DILocation(line: 2076, column: 46, scope: !7456)
!7462 = !DILocation(line: 2077, column: 7, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 2077, column: 7)
!7464 = !DILocation(line: 2077, column: 11, scope: !7463)
!7465 = !DILocation(line: 2077, column: 7, scope: !7456)
!7466 = !DILocation(line: 2078, column: 14, scope: !7463)
!7467 = !DILocation(line: 2078, column: 4, scope: !7463)
!7468 = !DILocation(line: 2079, column: 2, scope: !7456)
!7469 = !DILocation(line: 2075, column: 28, scope: !7452)
!7470 = !DILocation(line: 2075, column: 2, scope: !7452)
!7471 = distinct !{!7471, !7454, !7472}
!7472 = !DILocation(line: 2079, column: 2, scope: !7449)
!7473 = !DILocation(line: 2081, column: 14, scope: !7417)
!7474 = !DILocation(line: 2081, column: 19, scope: !7417)
!7475 = !DILocation(line: 2081, column: 25, scope: !7417)
!7476 = !DILocation(line: 2081, column: 13, scope: !7417)
!7477 = !DILocation(line: 2081, column: 2, scope: !7417)
!7478 = !DILocation(line: 2082, column: 48, scope: !7417)
!7479 = !DILocation(line: 2082, column: 53, scope: !7417)
!7480 = !DILocation(line: 2082, column: 59, scope: !7417)
!7481 = !DILocation(line: 2082, column: 47, scope: !7417)
!7482 = !DILocation(line: 2082, column: 2, scope: !7417)
!7483 = !DILocation(line: 2085, column: 15, scope: !7417)
!7484 = !DILocation(line: 2085, column: 20, scope: !7417)
!7485 = !DILocation(line: 2085, column: 26, scope: !7417)
!7486 = !DILocation(line: 2085, column: 14, scope: !7417)
!7487 = !DILocation(line: 2085, column: 8, scope: !7417)
!7488 = !DILocation(line: 2085, column: 35, scope: !7417)
!7489 = !DILocation(line: 2086, column: 19, scope: !7417)
!7490 = !DILocation(line: 2087, column: 24, scope: !7417)
!7491 = !DILocation(line: 2088, column: 23, scope: !7417)
!7492 = !DILocation(line: 2085, column: 6, scope: !7417)
!7493 = !DILocation(line: 2090, column: 9, scope: !7417)
!7494 = !DILocation(line: 2090, column: 15, scope: !7417)
!7495 = !DILocation(line: 2090, column: 20, scope: !7417)
!7496 = !DILocation(line: 2090, column: 26, scope: !7417)
!7497 = !DILocation(line: 2090, column: 14, scope: !7417)
!7498 = !DILocation(line: 2090, column: 2, scope: !7417)
!7499 = !DILocation(line: 2093, column: 16, scope: !7417)
!7500 = !DILocation(line: 2093, column: 22, scope: !7417)
!7501 = !DILocation(line: 2093, column: 32, scope: !7417)
!7502 = !DILocation(line: 2093, column: 21, scope: !7417)
!7503 = !DILocation(line: 2093, column: 40, scope: !7417)
!7504 = !DILocation(line: 2093, column: 2, scope: !7417)
!7505 = !DILocation(line: 2094, column: 1, scope: !7417)
!7506 = distinct !DISubprogram(name: "usb_reset_338x", scope: !3, file: !3, line: 2096, type: !4634, scopeLine: 2097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7507 = !DILocalVariable(name: "dev", arg: 1, scope: !7506, file: !3, line: 2096, type: !284)
!7508 = !DILocation(line: 2096, column: 44, scope: !7506)
!7509 = !DILocalVariable(name: "tmp", scope: !7506, file: !3, line: 2098, type: !144)
!7510 = !DILocation(line: 2098, column: 6, scope: !7506)
!7511 = !DILocation(line: 2100, column: 2, scope: !7506)
!7512 = !DILocation(line: 2100, column: 7, scope: !7506)
!7513 = !DILocation(line: 2100, column: 14, scope: !7506)
!7514 = !DILocation(line: 2100, column: 20, scope: !7506)
!7515 = !DILocation(line: 2101, column: 15, scope: !7506)
!7516 = !DILocation(line: 2101, column: 20, scope: !7506)
!7517 = !DILocation(line: 2101, column: 25, scope: !7506)
!7518 = !DILocation(line: 2101, column: 14, scope: !7506)
!7519 = !DILocation(line: 2101, column: 8, scope: !7506)
!7520 = !DILocation(line: 2103, column: 19, scope: !7506)
!7521 = !DILocation(line: 2103, column: 2, scope: !7506)
!7522 = !DILocation(line: 2105, column: 6, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 2105, column: 6)
!7524 = !DILocation(line: 2105, column: 11, scope: !7523)
!7525 = !DILocation(line: 2105, column: 6, scope: !7506)
!7526 = !DILocation(line: 2107, column: 14, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 2105, column: 28)
!7528 = !DILocation(line: 2107, column: 19, scope: !7527)
!7529 = !DILocation(line: 2107, column: 24, scope: !7527)
!7530 = !DILocation(line: 2107, column: 13, scope: !7527)
!7531 = !DILocation(line: 2107, column: 3, scope: !7527)
!7532 = !DILocation(line: 2108, column: 14, scope: !7527)
!7533 = !DILocation(line: 2108, column: 19, scope: !7527)
!7534 = !DILocation(line: 2108, column: 25, scope: !7527)
!7535 = !DILocation(line: 2108, column: 13, scope: !7527)
!7536 = !DILocation(line: 2108, column: 3, scope: !7527)
!7537 = !DILocation(line: 2109, column: 14, scope: !7527)
!7538 = !DILocation(line: 2109, column: 19, scope: !7527)
!7539 = !DILocation(line: 2109, column: 25, scope: !7527)
!7540 = !DILocation(line: 2109, column: 13, scope: !7527)
!7541 = !DILocation(line: 2109, column: 3, scope: !7527)
!7542 = !DILocation(line: 2110, column: 2, scope: !7527)
!7543 = !DILocation(line: 2113, column: 11, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 2113, column: 2)
!7545 = !DILocation(line: 2113, column: 7, scope: !7544)
!7546 = !DILocation(line: 2113, column: 16, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7544, file: !3, line: 2113, column: 2)
!7548 = !DILocation(line: 2113, column: 20, scope: !7547)
!7549 = !DILocation(line: 2113, column: 2, scope: !7544)
!7550 = !DILocalVariable(name: "ep", scope: !7551, file: !3, line: 2114, type: !4485)
!7551 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 2113, column: 32)
!7552 = !DILocation(line: 2114, column: 22, scope: !7551)
!7553 = !DILocation(line: 2114, column: 28, scope: !7551)
!7554 = !DILocation(line: 2114, column: 33, scope: !7551)
!7555 = !DILocation(line: 2114, column: 36, scope: !7551)
!7556 = !DILocation(line: 2114, column: 40, scope: !7551)
!7557 = !DILocalVariable(name: "dma", scope: !7551, file: !3, line: 2115, type: !190)
!7558 = !DILocation(line: 2115, column: 36, scope: !7551)
!7559 = !DILocation(line: 2117, column: 7, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7551, file: !3, line: 2117, column: 7)
!7561 = !DILocation(line: 2117, column: 11, scope: !7560)
!7562 = !DILocation(line: 2117, column: 7, scope: !7551)
!7563 = !DILocation(line: 2118, column: 14, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 2117, column: 16)
!7565 = !DILocation(line: 2118, column: 4, scope: !7564)
!7566 = !DILocation(line: 2119, column: 3, scope: !7564)
!7567 = !DILocation(line: 2120, column: 11, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 2119, column: 10)
!7569 = !DILocation(line: 2120, column: 16, scope: !7568)
!7570 = !DILocation(line: 2120, column: 20, scope: !7568)
!7571 = !DILocation(line: 2120, column: 8, scope: !7568)
!7572 = !DILocation(line: 2121, column: 28, scope: !7568)
!7573 = !DILocation(line: 2121, column: 33, scope: !7568)
!7574 = !DILocation(line: 2121, column: 27, scope: !7568)
!7575 = !DILocation(line: 2121, column: 4, scope: !7568)
!7576 = !DILocation(line: 2122, column: 15, scope: !7568)
!7577 = !DILocation(line: 2122, column: 20, scope: !7568)
!7578 = !DILocation(line: 2122, column: 14, scope: !7568)
!7579 = !DILocation(line: 2122, column: 4, scope: !7568)
!7580 = !DILocation(line: 2124, column: 2, scope: !7551)
!7581 = !DILocation(line: 2113, column: 28, scope: !7547)
!7582 = !DILocation(line: 2113, column: 2, scope: !7547)
!7583 = distinct !{!7583, !7549, !7584}
!7584 = !DILocation(line: 2124, column: 2, scope: !7544)
!7585 = !DILocation(line: 2126, column: 14, scope: !7506)
!7586 = !DILocation(line: 2126, column: 19, scope: !7506)
!7587 = !DILocation(line: 2126, column: 25, scope: !7506)
!7588 = !DILocation(line: 2126, column: 13, scope: !7506)
!7589 = !DILocation(line: 2126, column: 2, scope: !7506)
!7590 = !DILocation(line: 2126, column: 48, scope: !7506)
!7591 = !DILocation(line: 2126, column: 53, scope: !7506)
!7592 = !DILocation(line: 2126, column: 59, scope: !7506)
!7593 = !DILocation(line: 2126, column: 47, scope: !7506)
!7594 = !DILocation(line: 2126, column: 36, scope: !7506)
!7595 = !DILocation(line: 2128, column: 6, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 2128, column: 6)
!7597 = !DILocation(line: 2128, column: 11, scope: !7596)
!7598 = !DILocation(line: 2128, column: 6, scope: !7506)
!7599 = !DILocation(line: 2130, column: 16, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7596, file: !3, line: 2128, column: 28)
!7601 = !DILocation(line: 2130, column: 21, scope: !7600)
!7602 = !DILocation(line: 2130, column: 27, scope: !7600)
!7603 = !DILocation(line: 2130, column: 15, scope: !7600)
!7604 = !DILocation(line: 2130, column: 9, scope: !7600)
!7605 = !DILocation(line: 2130, column: 36, scope: !7600)
!7606 = !DILocation(line: 2131, column: 23, scope: !7600)
!7607 = !DILocation(line: 2132, column: 28, scope: !7600)
!7608 = !DILocation(line: 2133, column: 27, scope: !7600)
!7609 = !DILocation(line: 2130, column: 7, scope: !7600)
!7610 = !DILocation(line: 2136, column: 10, scope: !7600)
!7611 = !DILocation(line: 2136, column: 16, scope: !7600)
!7612 = !DILocation(line: 2136, column: 21, scope: !7600)
!7613 = !DILocation(line: 2136, column: 27, scope: !7600)
!7614 = !DILocation(line: 2136, column: 15, scope: !7600)
!7615 = !DILocation(line: 2136, column: 3, scope: !7600)
!7616 = !DILocation(line: 2137, column: 2, scope: !7600)
!7617 = !DILocation(line: 2140, column: 18, scope: !7506)
!7618 = !DILocation(line: 2140, column: 23, scope: !7506)
!7619 = !DILocation(line: 2140, column: 30, scope: !7506)
!7620 = !DILocation(line: 2140, column: 2, scope: !7506)
!7621 = !DILocation(line: 2142, column: 11, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 2142, column: 2)
!7623 = !DILocation(line: 2142, column: 7, scope: !7622)
!7624 = !DILocation(line: 2142, column: 16, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 2142, column: 2)
!7626 = !DILocation(line: 2142, column: 22, scope: !7625)
!7627 = !DILocation(line: 2142, column: 27, scope: !7625)
!7628 = !DILocation(line: 2142, column: 20, scope: !7625)
!7629 = !DILocation(line: 2142, column: 2, scope: !7622)
!7630 = !DILocation(line: 2143, column: 18, scope: !7625)
!7631 = !DILocation(line: 2143, column: 23, scope: !7625)
!7632 = !DILocation(line: 2143, column: 26, scope: !7625)
!7633 = !DILocation(line: 2143, column: 31, scope: !7625)
!7634 = !DILocation(line: 2143, column: 34, scope: !7625)
!7635 = !DILocation(line: 2143, column: 44, scope: !7625)
!7636 = !DILocation(line: 2143, column: 49, scope: !7625)
!7637 = !DILocation(line: 2143, column: 56, scope: !7625)
!7638 = !DILocation(line: 2143, column: 3, scope: !7625)
!7639 = !DILocation(line: 2142, column: 36, scope: !7625)
!7640 = !DILocation(line: 2142, column: 2, scope: !7625)
!7641 = distinct !{!7641, !7629, !7642}
!7642 = !DILocation(line: 2143, column: 63, scope: !7622)
!7643 = !DILocation(line: 2145, column: 1, scope: !7506)
!7644 = distinct !DISubprogram(name: "net2280_led_init", scope: !286, file: !286, line: 250, type: !4634, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7645 = !DILocalVariable(name: "dev", arg: 1, scope: !7644, file: !286, line: 250, type: !284)
!7646 = !DILocation(line: 250, column: 53, scope: !7644)
!7647 = !DILocation(line: 258, column: 4, scope: !7644)
!7648 = !DILocation(line: 258, column: 9, scope: !7644)
!7649 = !DILocation(line: 258, column: 15, scope: !7644)
!7650 = !DILocation(line: 258, column: 3, scope: !7644)
!7651 = !DILocation(line: 253, column: 2, scope: !7644)
!7652 = !DILocation(line: 259, column: 1, scope: !7644)
!7653 = distinct !DISubprogram(name: "set_fifo_mode", scope: !3, file: !3, line: 1910, type: !7162, scopeLine: 1911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7654 = !DILocalVariable(name: "dev", arg: 1, scope: !7653, file: !3, line: 1910, type: !284)
!7655 = !DILocation(line: 1910, column: 43, scope: !7653)
!7656 = !DILocalVariable(name: "mode", arg: 2, scope: !7653, file: !3, line: 1910, type: !330)
!7657 = !DILocation(line: 1910, column: 52, scope: !7653)
!7658 = !DILocation(line: 1913, column: 39, scope: !7653)
!7659 = !DILocation(line: 1913, column: 37, scope: !7653)
!7660 = !DILocation(line: 1913, column: 46, scope: !7653)
!7661 = !DILocation(line: 1913, column: 51, scope: !7653)
!7662 = !DILocation(line: 1913, column: 57, scope: !7653)
!7663 = !DILocation(line: 1913, column: 45, scope: !7653)
!7664 = !DILocation(line: 1913, column: 2, scope: !7653)
!7665 = !DILocation(line: 1916, column: 18, scope: !7653)
!7666 = !DILocation(line: 1916, column: 23, scope: !7653)
!7667 = !DILocation(line: 1916, column: 30, scope: !7653)
!7668 = !DILocation(line: 1916, column: 2, scope: !7653)
!7669 = !DILocation(line: 1917, column: 17, scope: !7653)
!7670 = !DILocation(line: 1917, column: 22, scope: !7653)
!7671 = !DILocation(line: 1917, column: 28, scope: !7653)
!7672 = !DILocation(line: 1917, column: 31, scope: !7653)
!7673 = !DILocation(line: 1917, column: 41, scope: !7653)
!7674 = !DILocation(line: 1917, column: 46, scope: !7653)
!7675 = !DILocation(line: 1917, column: 53, scope: !7653)
!7676 = !DILocation(line: 1917, column: 2, scope: !7653)
!7677 = !DILocation(line: 1918, column: 17, scope: !7653)
!7678 = !DILocation(line: 1918, column: 22, scope: !7653)
!7679 = !DILocation(line: 1918, column: 28, scope: !7653)
!7680 = !DILocation(line: 1918, column: 31, scope: !7653)
!7681 = !DILocation(line: 1918, column: 41, scope: !7653)
!7682 = !DILocation(line: 1918, column: 46, scope: !7653)
!7683 = !DILocation(line: 1918, column: 53, scope: !7653)
!7684 = !DILocation(line: 1918, column: 2, scope: !7653)
!7685 = !DILocation(line: 1919, column: 10, scope: !7653)
!7686 = !DILocation(line: 1919, column: 2, scope: !7653)
!7687 = !DILocation(line: 1921, column: 18, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7653, file: !3, line: 1919, column: 16)
!7689 = !DILocation(line: 1921, column: 23, scope: !7688)
!7690 = !DILocation(line: 1921, column: 29, scope: !7688)
!7691 = !DILocation(line: 1921, column: 32, scope: !7688)
!7692 = !DILocation(line: 1921, column: 42, scope: !7688)
!7693 = !DILocation(line: 1921, column: 47, scope: !7688)
!7694 = !DILocation(line: 1921, column: 54, scope: !7688)
!7695 = !DILocation(line: 1921, column: 3, scope: !7688)
!7696 = !DILocation(line: 1922, column: 18, scope: !7688)
!7697 = !DILocation(line: 1922, column: 23, scope: !7688)
!7698 = !DILocation(line: 1922, column: 29, scope: !7688)
!7699 = !DILocation(line: 1922, column: 32, scope: !7688)
!7700 = !DILocation(line: 1922, column: 42, scope: !7688)
!7701 = !DILocation(line: 1922, column: 47, scope: !7688)
!7702 = !DILocation(line: 1922, column: 54, scope: !7688)
!7703 = !DILocation(line: 1922, column: 3, scope: !7688)
!7704 = !DILocation(line: 1923, column: 26, scope: !7688)
!7705 = !DILocation(line: 1923, column: 31, scope: !7688)
!7706 = !DILocation(line: 1923, column: 37, scope: !7688)
!7707 = !DILocation(line: 1923, column: 47, scope: !7688)
!7708 = !DILocation(line: 1923, column: 3, scope: !7688)
!7709 = !DILocation(line: 1923, column: 8, scope: !7688)
!7710 = !DILocation(line: 1923, column: 14, scope: !7688)
!7711 = !DILocation(line: 1923, column: 24, scope: !7688)
!7712 = !DILocation(line: 1924, column: 3, scope: !7688)
!7713 = !DILocation(line: 1926, column: 26, scope: !7688)
!7714 = !DILocation(line: 1926, column: 31, scope: !7688)
!7715 = !DILocation(line: 1926, column: 37, scope: !7688)
!7716 = !DILocation(line: 1926, column: 47, scope: !7688)
!7717 = !DILocation(line: 1926, column: 3, scope: !7688)
!7718 = !DILocation(line: 1926, column: 8, scope: !7688)
!7719 = !DILocation(line: 1926, column: 14, scope: !7688)
!7720 = !DILocation(line: 1926, column: 24, scope: !7688)
!7721 = !DILocation(line: 1927, column: 3, scope: !7688)
!7722 = !DILocation(line: 1929, column: 18, scope: !7688)
!7723 = !DILocation(line: 1929, column: 23, scope: !7688)
!7724 = !DILocation(line: 1929, column: 29, scope: !7688)
!7725 = !DILocation(line: 1929, column: 32, scope: !7688)
!7726 = !DILocation(line: 1929, column: 42, scope: !7688)
!7727 = !DILocation(line: 1929, column: 47, scope: !7688)
!7728 = !DILocation(line: 1929, column: 54, scope: !7688)
!7729 = !DILocation(line: 1929, column: 3, scope: !7688)
!7730 = !DILocation(line: 1930, column: 3, scope: !7688)
!7731 = !DILocation(line: 1930, column: 8, scope: !7688)
!7732 = !DILocation(line: 1930, column: 14, scope: !7688)
!7733 = !DILocation(line: 1930, column: 24, scope: !7688)
!7734 = !DILocation(line: 1931, column: 3, scope: !7688)
!7735 = !DILocation(line: 1931, column: 8, scope: !7688)
!7736 = !DILocation(line: 1931, column: 14, scope: !7688)
!7737 = !DILocation(line: 1931, column: 24, scope: !7688)
!7738 = !DILocation(line: 1932, column: 3, scope: !7688)
!7739 = !DILocation(line: 1935, column: 17, scope: !7653)
!7740 = !DILocation(line: 1935, column: 22, scope: !7653)
!7741 = !DILocation(line: 1935, column: 28, scope: !7653)
!7742 = !DILocation(line: 1935, column: 31, scope: !7653)
!7743 = !DILocation(line: 1935, column: 41, scope: !7653)
!7744 = !DILocation(line: 1935, column: 46, scope: !7653)
!7745 = !DILocation(line: 1935, column: 53, scope: !7653)
!7746 = !DILocation(line: 1935, column: 2, scope: !7653)
!7747 = !DILocation(line: 1936, column: 17, scope: !7653)
!7748 = !DILocation(line: 1936, column: 22, scope: !7653)
!7749 = !DILocation(line: 1936, column: 28, scope: !7653)
!7750 = !DILocation(line: 1936, column: 31, scope: !7653)
!7751 = !DILocation(line: 1936, column: 41, scope: !7653)
!7752 = !DILocation(line: 1936, column: 46, scope: !7653)
!7753 = !DILocation(line: 1936, column: 53, scope: !7653)
!7754 = !DILocation(line: 1936, column: 2, scope: !7653)
!7755 = !DILocation(line: 1937, column: 1, scope: !7653)
!7756 = distinct !DISubprogram(name: "list_add_tail", scope: !6728, file: !6728, line: 98, type: !7143, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7757 = !DILocalVariable(name: "new", arg: 1, scope: !7756, file: !6728, line: 98, type: !310)
!7758 = !DILocation(line: 98, column: 52, scope: !7756)
!7759 = !DILocalVariable(name: "head", arg: 2, scope: !7756, file: !6728, line: 98, type: !310)
!7760 = !DILocation(line: 98, column: 75, scope: !7756)
!7761 = !DILocation(line: 100, column: 13, scope: !7756)
!7762 = !DILocation(line: 100, column: 18, scope: !7756)
!7763 = !DILocation(line: 100, column: 24, scope: !7756)
!7764 = !DILocation(line: 100, column: 30, scope: !7756)
!7765 = !DILocation(line: 100, column: 2, scope: !7756)
!7766 = !DILocation(line: 101, column: 1, scope: !7756)
!7767 = distinct !DISubprogram(name: "__list_add", scope: !6728, file: !6728, line: 63, type: !7768, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7768 = !DISubroutineType(types: !7769)
!7769 = !{null, !310, !310, !310}
!7770 = !DILocalVariable(name: "new", arg: 1, scope: !7767, file: !6728, line: 63, type: !310)
!7771 = !DILocation(line: 63, column: 49, scope: !7767)
!7772 = !DILocalVariable(name: "prev", arg: 2, scope: !7767, file: !6728, line: 64, type: !310)
!7773 = !DILocation(line: 64, column: 28, scope: !7767)
!7774 = !DILocalVariable(name: "next", arg: 3, scope: !7767, file: !6728, line: 65, type: !310)
!7775 = !DILocation(line: 65, column: 28, scope: !7767)
!7776 = !DILocation(line: 67, column: 24, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7767, file: !6728, line: 67, column: 6)
!7778 = !DILocation(line: 67, column: 29, scope: !7777)
!7779 = !DILocation(line: 67, column: 35, scope: !7777)
!7780 = !DILocation(line: 67, column: 7, scope: !7777)
!7781 = !DILocation(line: 67, column: 6, scope: !7767)
!7782 = !DILocation(line: 68, column: 3, scope: !7777)
!7783 = !DILocation(line: 70, column: 15, scope: !7767)
!7784 = !DILocation(line: 70, column: 2, scope: !7767)
!7785 = !DILocation(line: 70, column: 8, scope: !7767)
!7786 = !DILocation(line: 70, column: 13, scope: !7767)
!7787 = !DILocation(line: 71, column: 14, scope: !7767)
!7788 = !DILocation(line: 71, column: 2, scope: !7767)
!7789 = !DILocation(line: 71, column: 7, scope: !7767)
!7790 = !DILocation(line: 71, column: 12, scope: !7767)
!7791 = !DILocation(line: 72, column: 14, scope: !7767)
!7792 = !DILocation(line: 72, column: 2, scope: !7767)
!7793 = !DILocation(line: 72, column: 7, scope: !7767)
!7794 = !DILocation(line: 72, column: 12, scope: !7767)
!7795 = !DILocation(line: 73, column: 2, scope: !7767)
!7796 = !DILocation(line: 73, column: 2, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7767, file: !6728, line: 73, column: 2)
!7798 = !DILocation(line: 73, column: 2, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7797, file: !6728, line: 73, column: 2)
!7800 = !DILocation(line: 73, column: 2, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7797, file: !6728, line: 73, column: 2)
!7802 = !DILocation(line: 74, column: 1, scope: !7767)
!7803 = distinct !DISubprogram(name: "__list_add_valid", scope: !6728, file: !6728, line: 45, type: !7804, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7804 = !DISubroutineType(types: !7805)
!7805 = !{!676, !310, !310, !310}
!7806 = !DILocalVariable(name: "new", arg: 1, scope: !7803, file: !6728, line: 45, type: !310)
!7807 = !DILocation(line: 45, column: 55, scope: !7803)
!7808 = !DILocalVariable(name: "prev", arg: 2, scope: !7803, file: !6728, line: 46, type: !310)
!7809 = !DILocation(line: 46, column: 23, scope: !7803)
!7810 = !DILocalVariable(name: "next", arg: 3, scope: !7803, file: !6728, line: 47, type: !310)
!7811 = !DILocation(line: 47, column: 23, scope: !7803)
!7812 = !DILocation(line: 49, column: 2, scope: !7803)
!7813 = distinct !DISubprogram(name: "usb_reinit_228x", scope: !3, file: !3, line: 2154, type: !4634, scopeLine: 2155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!7814 = !DILocalVariable(name: "dev", arg: 1, scope: !7813, file: !3, line: 2154, type: !284)
!7815 = !DILocation(line: 2154, column: 45, scope: !7813)
!7816 = !DILocalVariable(name: "tmp", scope: !7813, file: !3, line: 2156, type: !144)
!7817 = !DILocation(line: 2156, column: 6, scope: !7813)
!7818 = !DILocation(line: 2159, column: 11, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 2159, column: 2)
!7820 = !DILocation(line: 2159, column: 7, scope: !7819)
!7821 = !DILocation(line: 2159, column: 16, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7819, file: !3, line: 2159, column: 2)
!7823 = !DILocation(line: 2159, column: 20, scope: !7822)
!7824 = !DILocation(line: 2159, column: 2, scope: !7819)
!7825 = !DILocalVariable(name: "ep", scope: !7826, file: !3, line: 2160, type: !4485)
!7826 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 2159, column: 32)
!7827 = !DILocation(line: 2160, column: 22, scope: !7826)
!7828 = !DILocation(line: 2160, column: 28, scope: !7826)
!7829 = !DILocation(line: 2160, column: 33, scope: !7826)
!7830 = !DILocation(line: 2160, column: 36, scope: !7826)
!7831 = !DILocation(line: 2162, column: 29, scope: !7826)
!7832 = !DILocation(line: 2162, column: 17, scope: !7826)
!7833 = !DILocation(line: 2162, column: 34, scope: !7826)
!7834 = !DILocation(line: 2162, column: 3, scope: !7826)
!7835 = !DILocation(line: 2162, column: 7, scope: !7826)
!7836 = !DILocation(line: 2162, column: 10, scope: !7826)
!7837 = !DILocation(line: 2162, column: 15, scope: !7826)
!7838 = !DILocation(line: 2163, column: 3, scope: !7826)
!7839 = !DILocation(line: 2163, column: 7, scope: !7826)
!7840 = !DILocation(line: 2163, column: 10, scope: !7826)
!7841 = !DILocation(line: 2163, column: 29, scope: !7826)
!7842 = !DILocation(line: 2163, column: 17, scope: !7826)
!7843 = !DILocation(line: 2163, column: 34, scope: !7826)
!7844 = !DILocation(line: 2164, column: 13, scope: !7826)
!7845 = !DILocation(line: 2164, column: 3, scope: !7826)
!7846 = !DILocation(line: 2164, column: 7, scope: !7826)
!7847 = !DILocation(line: 2164, column: 11, scope: !7826)
!7848 = !DILocation(line: 2165, column: 13, scope: !7826)
!7849 = !DILocation(line: 2165, column: 3, scope: !7826)
!7850 = !DILocation(line: 2165, column: 7, scope: !7826)
!7851 = !DILocation(line: 2165, column: 11, scope: !7826)
!7852 = !DILocation(line: 2167, column: 7, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 2167, column: 7)
!7854 = !DILocation(line: 2167, column: 11, scope: !7853)
!7855 = !DILocation(line: 2167, column: 15, scope: !7853)
!7856 = !DILocation(line: 2167, column: 18, scope: !7853)
!7857 = !DILocation(line: 2167, column: 22, scope: !7853)
!7858 = !DILocation(line: 2167, column: 7, scope: !7826)
!7859 = !DILocation(line: 2168, column: 4, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 2167, column: 28)
!7861 = !DILocation(line: 2168, column: 8, scope: !7860)
!7862 = !DILocation(line: 2168, column: 18, scope: !7860)
!7863 = !DILocation(line: 2169, column: 15, scope: !7860)
!7864 = !DILocation(line: 2169, column: 20, scope: !7860)
!7865 = !DILocation(line: 2169, column: 24, scope: !7860)
!7866 = !DILocation(line: 2169, column: 28, scope: !7860)
!7867 = !DILocation(line: 2169, column: 4, scope: !7860)
!7868 = !DILocation(line: 2169, column: 8, scope: !7860)
!7869 = !DILocation(line: 2169, column: 12, scope: !7860)
!7870 = !DILocation(line: 2170, column: 3, scope: !7860)
!7871 = !DILocation(line: 2171, column: 4, scope: !7853)
!7872 = !DILocation(line: 2171, column: 8, scope: !7853)
!7873 = !DILocation(line: 2171, column: 18, scope: !7853)
!7874 = !DILocation(line: 2172, column: 15, scope: !7826)
!7875 = !DILocation(line: 2172, column: 20, scope: !7826)
!7876 = !DILocation(line: 2172, column: 27, scope: !7826)
!7877 = !DILocation(line: 2172, column: 3, scope: !7826)
!7878 = !DILocation(line: 2172, column: 7, scope: !7826)
!7879 = !DILocation(line: 2172, column: 12, scope: !7826)
!7880 = !DILocation(line: 2173, column: 14, scope: !7826)
!7881 = !DILocation(line: 2173, column: 19, scope: !7826)
!7882 = !DILocation(line: 2173, column: 26, scope: !7826)
!7883 = !DILocation(line: 2173, column: 3, scope: !7826)
!7884 = !DILocation(line: 2173, column: 7, scope: !7826)
!7885 = !DILocation(line: 2173, column: 11, scope: !7826)
!7886 = !DILocation(line: 2174, column: 17, scope: !7826)
!7887 = !DILocation(line: 2174, column: 22, scope: !7826)
!7888 = !DILocation(line: 2174, column: 28, scope: !7826)
!7889 = !DILocation(line: 2174, column: 3, scope: !7826)
!7890 = !DILocation(line: 2175, column: 2, scope: !7826)
!7891 = !DILocation(line: 2159, column: 28, scope: !7822)
!7892 = !DILocation(line: 2159, column: 2, scope: !7822)
!7893 = distinct !{!7893, !7824, !7894}
!7894 = !DILocation(line: 2175, column: 2, scope: !7819)
!7895 = !DILocation(line: 2176, column: 30, scope: !7813)
!7896 = !DILocation(line: 2176, column: 35, scope: !7813)
!7897 = !DILocation(line: 2176, column: 41, scope: !7813)
!7898 = !DILocation(line: 2176, column: 2, scope: !7813)
!7899 = !DILocation(line: 2177, column: 30, scope: !7813)
!7900 = !DILocation(line: 2177, column: 35, scope: !7813)
!7901 = !DILocation(line: 2177, column: 41, scope: !7813)
!7902 = !DILocation(line: 2177, column: 2, scope: !7813)
!7903 = !DILocation(line: 2178, column: 30, scope: !7813)
!7904 = !DILocation(line: 2178, column: 35, scope: !7813)
!7905 = !DILocation(line: 2178, column: 41, scope: !7813)
!7906 = !DILocation(line: 2178, column: 2, scope: !7813)
!7907 = !DILocation(line: 2180, column: 21, scope: !7813)
!7908 = !DILocation(line: 2180, column: 26, scope: !7813)
!7909 = !DILocation(line: 2180, column: 32, scope: !7813)
!7910 = !DILocation(line: 2180, column: 2, scope: !7813)
!7911 = !DILocation(line: 2180, column: 7, scope: !7813)
!7912 = !DILocation(line: 2180, column: 14, scope: !7813)
!7913 = !DILocation(line: 2180, column: 18, scope: !7813)
!7914 = !DILocation(line: 2181, column: 2, scope: !7813)
!7915 = !DILocation(line: 2181, column: 7, scope: !7813)
!7916 = !DILocation(line: 2181, column: 13, scope: !7813)
!7917 = !DILocation(line: 2181, column: 21, scope: !7813)
!7918 = !DILocation(line: 2182, column: 18, scope: !7813)
!7919 = !DILocation(line: 2182, column: 23, scope: !7813)
!7920 = !DILocation(line: 2182, column: 30, scope: !7813)
!7921 = !DILocation(line: 2182, column: 35, scope: !7813)
!7922 = !DILocation(line: 2182, column: 2, scope: !7813)
!7923 = !DILocation(line: 2187, column: 11, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 2187, column: 2)
!7925 = !DILocation(line: 2187, column: 7, scope: !7924)
!7926 = !DILocation(line: 2187, column: 16, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7924, file: !3, line: 2187, column: 2)
!7928 = !DILocation(line: 2187, column: 20, scope: !7927)
!7929 = !DILocation(line: 2187, column: 2, scope: !7924)
!7930 = !DILocation(line: 2188, column: 23, scope: !7927)
!7931 = !DILocation(line: 2188, column: 28, scope: !7927)
!7932 = !DILocation(line: 2188, column: 32, scope: !7927)
!7933 = !DILocation(line: 2188, column: 37, scope: !7927)
!7934 = !DILocation(line: 2188, column: 22, scope: !7927)
!7935 = !DILocation(line: 2188, column: 3, scope: !7927)
!7936 = !DILocation(line: 2187, column: 28, scope: !7927)
!7937 = !DILocation(line: 2187, column: 2, scope: !7927)
!7938 = distinct !{!7938, !7929, !7939}
!7939 = !DILocation(line: 2188, column: 44, scope: !7924)
!7940 = !DILocation(line: 2189, column: 1, scope: !7813)
!7941 = !DILocalVariable(name: "dev", arg: 1, scope: !4633, file: !3, line: 2191, type: !284)
!7942 = !DILocation(line: 2191, column: 45, scope: !4633)
!7943 = !DILocalVariable(name: "i", scope: !4633, file: !3, line: 2193, type: !330)
!7944 = !DILocation(line: 2193, column: 6, scope: !4633)
!7945 = !DILocalVariable(name: "tmp", scope: !4633, file: !3, line: 2194, type: !144)
!7946 = !DILocation(line: 2194, column: 6, scope: !4633)
!7947 = !DILocalVariable(name: "val", scope: !4633, file: !3, line: 2194, type: !144)
!7948 = !DILocation(line: 2194, column: 11, scope: !4633)
!7949 = !DILocation(line: 2200, column: 9, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 2200, column: 2)
!7951 = !DILocation(line: 2200, column: 7, scope: !7950)
!7952 = !DILocation(line: 2200, column: 14, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 2200, column: 2)
!7954 = !DILocation(line: 2200, column: 18, scope: !7953)
!7955 = !DILocation(line: 2200, column: 23, scope: !7953)
!7956 = !DILocation(line: 2200, column: 16, scope: !7953)
!7957 = !DILocation(line: 2200, column: 2, scope: !7950)
!7958 = !DILocalVariable(name: "ep", scope: !7959, file: !3, line: 2201, type: !4485)
!7959 = distinct !DILexicalBlock(scope: !7953, file: !3, line: 2200, column: 34)
!7960 = !DILocation(line: 2201, column: 22, scope: !7959)
!7961 = !DILocation(line: 2201, column: 28, scope: !7959)
!7962 = !DILocation(line: 2201, column: 33, scope: !7959)
!7963 = !DILocation(line: 2201, column: 36, scope: !7959)
!7964 = !DILocation(line: 2203, column: 17, scope: !7959)
!7965 = !DILocation(line: 2203, column: 22, scope: !7959)
!7966 = !DILocation(line: 2203, column: 50, scope: !7959)
!7967 = !DILocation(line: 2203, column: 38, scope: !7959)
!7968 = !DILocation(line: 2203, column: 53, scope: !7959)
!7969 = !DILocation(line: 2204, column: 22, scope: !7959)
!7970 = !DILocation(line: 2204, column: 10, scope: !7959)
!7971 = !DILocation(line: 2204, column: 25, scope: !7959)
!7972 = !DILocation(line: 2203, column: 3, scope: !7959)
!7973 = !DILocation(line: 2203, column: 7, scope: !7959)
!7974 = !DILocation(line: 2203, column: 10, scope: !7959)
!7975 = !DILocation(line: 2203, column: 15, scope: !7959)
!7976 = !DILocation(line: 2205, column: 3, scope: !7959)
!7977 = !DILocation(line: 2205, column: 7, scope: !7959)
!7978 = !DILocation(line: 2205, column: 10, scope: !7959)
!7979 = !DILocation(line: 2205, column: 17, scope: !7959)
!7980 = !DILocation(line: 2205, column: 22, scope: !7959)
!7981 = !DILocation(line: 2205, column: 50, scope: !7959)
!7982 = !DILocation(line: 2205, column: 38, scope: !7959)
!7983 = !DILocation(line: 2205, column: 53, scope: !7959)
!7984 = !DILocation(line: 2206, column: 22, scope: !7959)
!7985 = !DILocation(line: 2206, column: 10, scope: !7959)
!7986 = !DILocation(line: 2206, column: 25, scope: !7959)
!7987 = !DILocation(line: 2207, column: 13, scope: !7959)
!7988 = !DILocation(line: 2207, column: 3, scope: !7959)
!7989 = !DILocation(line: 2207, column: 7, scope: !7959)
!7990 = !DILocation(line: 2207, column: 11, scope: !7959)
!7991 = !DILocation(line: 2208, column: 13, scope: !7959)
!7992 = !DILocation(line: 2208, column: 3, scope: !7959)
!7993 = !DILocation(line: 2208, column: 7, scope: !7959)
!7994 = !DILocation(line: 2208, column: 11, scope: !7959)
!7995 = !DILocation(line: 2210, column: 7, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 2210, column: 7)
!7997 = !DILocation(line: 2210, column: 9, scope: !7996)
!7998 = !DILocation(line: 2210, column: 13, scope: !7996)
!7999 = !DILocation(line: 2210, column: 16, scope: !7996)
!8000 = !DILocation(line: 2210, column: 18, scope: !7996)
!8001 = !DILocation(line: 2210, column: 7, scope: !7959)
!8002 = !DILocation(line: 2211, column: 15, scope: !7996)
!8003 = !DILocation(line: 2211, column: 20, scope: !7996)
!8004 = !DILocation(line: 2211, column: 24, scope: !7996)
!8005 = !DILocation(line: 2211, column: 26, scope: !7996)
!8006 = !DILocation(line: 2211, column: 4, scope: !7996)
!8007 = !DILocation(line: 2211, column: 8, scope: !7996)
!8008 = !DILocation(line: 2211, column: 12, scope: !7996)
!8009 = !DILocation(line: 2213, column: 7, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 2213, column: 7)
!8011 = !DILocation(line: 2213, column: 12, scope: !8010)
!8012 = !DILocation(line: 2213, column: 7, scope: !7959)
!8013 = !DILocation(line: 2214, column: 15, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 2213, column: 27)
!8015 = !DILocation(line: 2214, column: 20, scope: !8014)
!8016 = !DILocation(line: 2214, column: 30, scope: !8014)
!8017 = !DILocation(line: 2214, column: 27, scope: !8014)
!8018 = !DILocation(line: 2214, column: 4, scope: !8014)
!8019 = !DILocation(line: 2214, column: 8, scope: !8014)
!8020 = !DILocation(line: 2214, column: 12, scope: !8014)
!8021 = !DILocation(line: 2219, column: 9, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8014, file: !3, line: 2219, column: 9)
!8023 = !DILocation(line: 2219, column: 11, scope: !8022)
!8024 = !DILocation(line: 2219, column: 15, scope: !8022)
!8025 = !DILocation(line: 2219, column: 18, scope: !8022)
!8026 = !DILocation(line: 2219, column: 20, scope: !8022)
!8027 = !DILocation(line: 2219, column: 9, scope: !8014)
!8028 = !DILocation(line: 2220, column: 15, scope: !8022)
!8029 = !DILocation(line: 2220, column: 12, scope: !8022)
!8030 = !DILocation(line: 2220, column: 20, scope: !8022)
!8031 = !DILocation(line: 2220, column: 24, scope: !8022)
!8032 = !DILocation(line: 2220, column: 29, scope: !8022)
!8033 = !DILocation(line: 2220, column: 19, scope: !8022)
!8034 = !DILocation(line: 2220, column: 5, scope: !8022)
!8035 = !DILocation(line: 2222, column: 24, scope: !8014)
!8036 = !DILocation(line: 2222, column: 29, scope: !8014)
!8037 = !DILocation(line: 2222, column: 39, scope: !8014)
!8038 = !DILocation(line: 2222, column: 36, scope: !8014)
!8039 = !DILocation(line: 2222, column: 7, scope: !8014)
!8040 = !DILocation(line: 2223, column: 17, scope: !8014)
!8041 = !DILocation(line: 2223, column: 5, scope: !8014)
!8042 = !DILocation(line: 2222, column: 44, scope: !8014)
!8043 = !DILocation(line: 2221, column: 15, scope: !8014)
!8044 = !DILocation(line: 2221, column: 4, scope: !8014)
!8045 = !DILocation(line: 2221, column: 8, scope: !8014)
!8046 = !DILocation(line: 2221, column: 13, scope: !8014)
!8047 = !DILocation(line: 2224, column: 3, scope: !8014)
!8048 = !DILocation(line: 2225, column: 15, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 2224, column: 10)
!8050 = !DILocation(line: 2225, column: 20, scope: !8049)
!8051 = !DILocation(line: 2225, column: 27, scope: !8049)
!8052 = !DILocation(line: 2225, column: 4, scope: !8049)
!8053 = !DILocation(line: 2225, column: 8, scope: !8049)
!8054 = !DILocation(line: 2225, column: 12, scope: !8049)
!8055 = !DILocation(line: 2226, column: 16, scope: !8049)
!8056 = !DILocation(line: 2226, column: 21, scope: !8049)
!8057 = !DILocation(line: 2226, column: 28, scope: !8049)
!8058 = !DILocation(line: 2226, column: 4, scope: !8049)
!8059 = !DILocation(line: 2226, column: 8, scope: !8049)
!8060 = !DILocation(line: 2226, column: 13, scope: !8049)
!8061 = !DILocation(line: 2229, column: 20, scope: !7959)
!8062 = !DILocation(line: 2229, column: 22, scope: !7959)
!8063 = !DILocation(line: 2229, column: 19, scope: !7959)
!8064 = !DILocation(line: 2229, column: 3, scope: !7959)
!8065 = !DILocation(line: 2229, column: 7, scope: !7959)
!8066 = !DILocation(line: 2229, column: 17, scope: !7959)
!8067 = !DILocation(line: 2231, column: 17, scope: !7959)
!8068 = !DILocation(line: 2231, column: 22, scope: !7959)
!8069 = !DILocation(line: 2231, column: 28, scope: !7959)
!8070 = !DILocation(line: 2231, column: 3, scope: !7959)
!8071 = !DILocation(line: 2232, column: 2, scope: !7959)
!8072 = !DILocation(line: 2200, column: 30, scope: !7953)
!8073 = !DILocation(line: 2200, column: 2, scope: !7953)
!8074 = distinct !{!8074, !7957, !8075}
!8075 = !DILocation(line: 2232, column: 2, scope: !7950)
!8076 = !DILocation(line: 2233, column: 30, scope: !4633)
!8077 = !DILocation(line: 2233, column: 35, scope: !4633)
!8078 = !DILocation(line: 2233, column: 41, scope: !4633)
!8079 = !DILocation(line: 2233, column: 2, scope: !4633)
!8080 = !DILocation(line: 2235, column: 21, scope: !4633)
!8081 = !DILocation(line: 2235, column: 26, scope: !4633)
!8082 = !DILocation(line: 2235, column: 32, scope: !4633)
!8083 = !DILocation(line: 2235, column: 2, scope: !4633)
!8084 = !DILocation(line: 2235, column: 7, scope: !4633)
!8085 = !DILocation(line: 2235, column: 14, scope: !4633)
!8086 = !DILocation(line: 2235, column: 18, scope: !4633)
!8087 = !DILocation(line: 2236, column: 2, scope: !4633)
!8088 = !DILocation(line: 2236, column: 7, scope: !4633)
!8089 = !DILocation(line: 2236, column: 13, scope: !4633)
!8090 = !DILocation(line: 2236, column: 21, scope: !4633)
!8091 = !DILocation(line: 2239, column: 6, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 2239, column: 6)
!8093 = !DILocation(line: 2239, column: 11, scope: !8092)
!8094 = !DILocation(line: 2239, column: 6, scope: !4633)
!8095 = !DILocation(line: 2240, column: 16, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 2239, column: 28)
!8097 = !DILocation(line: 2240, column: 21, scope: !8096)
!8098 = !DILocation(line: 2240, column: 30, scope: !8096)
!8099 = !DILocation(line: 2240, column: 15, scope: !8096)
!8100 = !DILocation(line: 2240, column: 9, scope: !8096)
!8101 = !DILocation(line: 2240, column: 39, scope: !8096)
!8102 = !DILocation(line: 2240, column: 7, scope: !8096)
!8103 = !DILocation(line: 2242, column: 10, scope: !8096)
!8104 = !DILocation(line: 2242, column: 16, scope: !8096)
!8105 = !DILocation(line: 2242, column: 21, scope: !8096)
!8106 = !DILocation(line: 2242, column: 30, scope: !8096)
!8107 = !DILocation(line: 2242, column: 15, scope: !8096)
!8108 = !DILocation(line: 2242, column: 3, scope: !8096)
!8109 = !DILocation(line: 2243, column: 2, scope: !8096)
!8110 = !DILocation(line: 2246, column: 15, scope: !4633)
!8111 = !DILocation(line: 2246, column: 20, scope: !4633)
!8112 = !DILocation(line: 2246, column: 28, scope: !4633)
!8113 = !DILocation(line: 2246, column: 14, scope: !4633)
!8114 = !DILocation(line: 2246, column: 8, scope: !4633)
!8115 = !DILocation(line: 2246, column: 6, scope: !4633)
!8116 = !DILocation(line: 2247, column: 6, scope: !4633)
!8117 = !DILocation(line: 2248, column: 6, scope: !4633)
!8118 = !DILocation(line: 2249, column: 9, scope: !4633)
!8119 = !DILocation(line: 2249, column: 15, scope: !4633)
!8120 = !DILocation(line: 2249, column: 20, scope: !4633)
!8121 = !DILocation(line: 2249, column: 28, scope: !4633)
!8122 = !DILocation(line: 2249, column: 14, scope: !4633)
!8123 = !DILocation(line: 2249, column: 2, scope: !4633)
!8124 = !DILocation(line: 2251, column: 15, scope: !4633)
!8125 = !DILocation(line: 2251, column: 20, scope: !4633)
!8126 = !DILocation(line: 2251, column: 28, scope: !4633)
!8127 = !DILocation(line: 2251, column: 14, scope: !4633)
!8128 = !DILocation(line: 2251, column: 8, scope: !4633)
!8129 = !DILocation(line: 2251, column: 6, scope: !4633)
!8130 = !DILocation(line: 2252, column: 6, scope: !4633)
!8131 = !DILocation(line: 2253, column: 6, scope: !4633)
!8132 = !DILocation(line: 2254, column: 9, scope: !4633)
!8133 = !DILocation(line: 2254, column: 15, scope: !4633)
!8134 = !DILocation(line: 2254, column: 20, scope: !4633)
!8135 = !DILocation(line: 2254, column: 28, scope: !4633)
!8136 = !DILocation(line: 2254, column: 14, scope: !4633)
!8137 = !DILocation(line: 2254, column: 2, scope: !4633)
!8138 = !DILocation(line: 2261, column: 15, scope: !4633)
!8139 = !DILocation(line: 2261, column: 20, scope: !4633)
!8140 = !DILocation(line: 2261, column: 28, scope: !4633)
!8141 = !DILocation(line: 2261, column: 14, scope: !4633)
!8142 = !DILocation(line: 2261, column: 8, scope: !4633)
!8143 = !DILocation(line: 2261, column: 6, scope: !4633)
!8144 = !DILocation(line: 2262, column: 6, scope: !4633)
!8145 = !DILocation(line: 2263, column: 6, scope: !4633)
!8146 = !DILocation(line: 2264, column: 9, scope: !4633)
!8147 = !DILocation(line: 2264, column: 15, scope: !4633)
!8148 = !DILocation(line: 2264, column: 20, scope: !4633)
!8149 = !DILocation(line: 2264, column: 28, scope: !4633)
!8150 = !DILocation(line: 2264, column: 14, scope: !4633)
!8151 = !DILocation(line: 2264, column: 2, scope: !4633)
!8152 = !DILocation(line: 2266, column: 15, scope: !4633)
!8153 = !DILocation(line: 2266, column: 20, scope: !4633)
!8154 = !DILocation(line: 2266, column: 28, scope: !4633)
!8155 = !DILocation(line: 2266, column: 14, scope: !4633)
!8156 = !DILocation(line: 2266, column: 8, scope: !4633)
!8157 = !DILocation(line: 2266, column: 6, scope: !4633)
!8158 = !DILocation(line: 2267, column: 6, scope: !4633)
!8159 = !DILocation(line: 2268, column: 6, scope: !4633)
!8160 = !DILocation(line: 2269, column: 9, scope: !4633)
!8161 = !DILocation(line: 2269, column: 15, scope: !4633)
!8162 = !DILocation(line: 2269, column: 20, scope: !4633)
!8163 = !DILocation(line: 2269, column: 28, scope: !4633)
!8164 = !DILocation(line: 2269, column: 14, scope: !4633)
!8165 = !DILocation(line: 2269, column: 2, scope: !4633)
!8166 = !DILocation(line: 2277, column: 15, scope: !4633)
!8167 = !DILocation(line: 2277, column: 20, scope: !4633)
!8168 = !DILocation(line: 2277, column: 28, scope: !4633)
!8169 = !DILocation(line: 2277, column: 14, scope: !4633)
!8170 = !DILocation(line: 2277, column: 8, scope: !4633)
!8171 = !DILocation(line: 2277, column: 6, scope: !4633)
!8172 = !DILocation(line: 2278, column: 10, scope: !4633)
!8173 = !DILocation(line: 2278, column: 14, scope: !4633)
!8174 = !DILocation(line: 2278, column: 28, scope: !4633)
!8175 = !DILocation(line: 2279, column: 10, scope: !4633)
!8176 = !DILocation(line: 2279, column: 15, scope: !4633)
!8177 = !DILocation(line: 2279, column: 23, scope: !4633)
!8178 = !DILocation(line: 2279, column: 9, scope: !4633)
!8179 = !DILocation(line: 2278, column: 2, scope: !4633)
!8180 = !DILocation(line: 2289, column: 15, scope: !4633)
!8181 = !DILocation(line: 2289, column: 20, scope: !4633)
!8182 = !DILocation(line: 2289, column: 28, scope: !4633)
!8183 = !DILocation(line: 2289, column: 14, scope: !4633)
!8184 = !DILocation(line: 2289, column: 8, scope: !4633)
!8185 = !DILocation(line: 2289, column: 6, scope: !4633)
!8186 = !DILocation(line: 2290, column: 6, scope: !4633)
!8187 = !DILocation(line: 2291, column: 9, scope: !4633)
!8188 = !DILocation(line: 2291, column: 15, scope: !4633)
!8189 = !DILocation(line: 2291, column: 20, scope: !4633)
!8190 = !DILocation(line: 2291, column: 28, scope: !4633)
!8191 = !DILocation(line: 2291, column: 14, scope: !4633)
!8192 = !DILocation(line: 2291, column: 2, scope: !4633)
!8193 = !DILocation(line: 2293, column: 18, scope: !4633)
!8194 = !DILocation(line: 2293, column: 23, scope: !4633)
!8195 = !DILocation(line: 2293, column: 30, scope: !4633)
!8196 = !DILocation(line: 2293, column: 35, scope: !4633)
!8197 = !DILocation(line: 2293, column: 2, scope: !4633)
!8198 = !DILocation(line: 2296, column: 16, scope: !4633)
!8199 = !DILocation(line: 2296, column: 21, scope: !4633)
!8200 = !DILocation(line: 2296, column: 28, scope: !4633)
!8201 = !DILocation(line: 2296, column: 15, scope: !4633)
!8202 = !DILocation(line: 2296, column: 2, scope: !4633)
!8203 = !DILocation(line: 2297, column: 16, scope: !4633)
!8204 = !DILocation(line: 2297, column: 21, scope: !4633)
!8205 = !DILocation(line: 2297, column: 28, scope: !4633)
!8206 = !DILocation(line: 2297, column: 15, scope: !4633)
!8207 = !DILocation(line: 2297, column: 2, scope: !4633)
!8208 = !DILocation(line: 2298, column: 16, scope: !4633)
!8209 = !DILocation(line: 2298, column: 21, scope: !4633)
!8210 = !DILocation(line: 2298, column: 28, scope: !4633)
!8211 = !DILocation(line: 2298, column: 15, scope: !4633)
!8212 = !DILocation(line: 2298, column: 2, scope: !4633)
!8213 = !DILocation(line: 2299, column: 16, scope: !4633)
!8214 = !DILocation(line: 2299, column: 21, scope: !4633)
!8215 = !DILocation(line: 2299, column: 28, scope: !4633)
!8216 = !DILocation(line: 2299, column: 15, scope: !4633)
!8217 = !DILocation(line: 2299, column: 2, scope: !4633)
!8218 = !DILocation(line: 2300, column: 16, scope: !4633)
!8219 = !DILocation(line: 2300, column: 21, scope: !4633)
!8220 = !DILocation(line: 2300, column: 28, scope: !4633)
!8221 = !DILocation(line: 2300, column: 15, scope: !4633)
!8222 = !DILocation(line: 2300, column: 2, scope: !4633)
!8223 = !DILocation(line: 2301, column: 16, scope: !4633)
!8224 = !DILocation(line: 2301, column: 21, scope: !4633)
!8225 = !DILocation(line: 2301, column: 28, scope: !4633)
!8226 = !DILocation(line: 2301, column: 15, scope: !4633)
!8227 = !DILocation(line: 2301, column: 2, scope: !4633)
!8228 = !DILocation(line: 2302, column: 1, scope: !4633)
!8229 = distinct !DISubprogram(name: "ep_reset_228x", scope: !3, file: !3, line: 378, type: !8230, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!8230 = !DISubroutineType(types: !8231)
!8231 = !{null, !139, !4485}
!8232 = !DILocalVariable(name: "regs", arg: 1, scope: !8229, file: !3, line: 378, type: !139)
!8233 = !DILocation(line: 378, column: 56, scope: !8229)
!8234 = !DILocalVariable(name: "ep", arg: 2, scope: !8229, file: !3, line: 379, type: !4485)
!8235 = !DILocation(line: 379, column: 25, scope: !8229)
!8236 = !DILocalVariable(name: "tmp", scope: !8229, file: !3, line: 381, type: !144)
!8237 = !DILocation(line: 381, column: 7, scope: !8229)
!8238 = !DILocation(line: 383, column: 2, scope: !8229)
!8239 = !DILocation(line: 383, column: 6, scope: !8229)
!8240 = !DILocation(line: 383, column: 11, scope: !8229)
!8241 = !DILocation(line: 384, column: 18, scope: !8229)
!8242 = !DILocation(line: 384, column: 22, scope: !8229)
!8243 = !DILocation(line: 384, column: 2, scope: !8229)
!8244 = !DILocation(line: 386, column: 30, scope: !8229)
!8245 = !DILocation(line: 386, column: 34, scope: !8229)
!8246 = !DILocation(line: 386, column: 2, scope: !8229)
!8247 = !DILocation(line: 387, column: 2, scope: !8229)
!8248 = !DILocation(line: 387, column: 6, scope: !8229)
!8249 = !DILocation(line: 387, column: 9, scope: !8229)
!8250 = !DILocation(line: 387, column: 13, scope: !8229)
!8251 = !DILocation(line: 390, column: 6, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8229, file: !3, line: 390, column: 6)
!8253 = !DILocation(line: 390, column: 10, scope: !8252)
!8254 = !DILocation(line: 390, column: 6, scope: !8229)
!8255 = !DILocation(line: 391, column: 14, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 390, column: 15)
!8257 = !DILocation(line: 391, column: 18, scope: !8256)
!8258 = !DILocation(line: 391, column: 23, scope: !8256)
!8259 = !DILocation(line: 391, column: 13, scope: !8256)
!8260 = !DILocation(line: 391, column: 3, scope: !8256)
!8261 = !DILocation(line: 395, column: 5, scope: !8256)
!8262 = !DILocation(line: 395, column: 9, scope: !8256)
!8263 = !DILocation(line: 395, column: 14, scope: !8256)
!8264 = !DILocation(line: 395, column: 4, scope: !8256)
!8265 = !DILocation(line: 392, column: 3, scope: !8256)
!8266 = !DILocation(line: 397, column: 16, scope: !8256)
!8267 = !DILocation(line: 397, column: 22, scope: !8256)
!8268 = !DILocation(line: 397, column: 15, scope: !8256)
!8269 = !DILocation(line: 397, column: 9, scope: !8256)
!8270 = !DILocation(line: 397, column: 7, scope: !8256)
!8271 = !DILocation(line: 398, column: 11, scope: !8256)
!8272 = !DILocation(line: 398, column: 10, scope: !8256)
!8273 = !DILocation(line: 398, column: 7, scope: !8256)
!8274 = !DILocation(line: 399, column: 10, scope: !8256)
!8275 = !DILocation(line: 399, column: 16, scope: !8256)
!8276 = !DILocation(line: 399, column: 22, scope: !8256)
!8277 = !DILocation(line: 399, column: 15, scope: !8256)
!8278 = !DILocation(line: 399, column: 3, scope: !8256)
!8279 = !DILocation(line: 400, column: 2, scope: !8256)
!8280 = !DILocation(line: 401, column: 16, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 400, column: 9)
!8282 = !DILocation(line: 401, column: 22, scope: !8281)
!8283 = !DILocation(line: 401, column: 15, scope: !8281)
!8284 = !DILocation(line: 401, column: 9, scope: !8281)
!8285 = !DILocation(line: 401, column: 7, scope: !8281)
!8286 = !DILocation(line: 402, column: 11, scope: !8281)
!8287 = !DILocation(line: 402, column: 10, scope: !8281)
!8288 = !DILocation(line: 402, column: 7, scope: !8281)
!8289 = !DILocation(line: 403, column: 10, scope: !8281)
!8290 = !DILocation(line: 403, column: 16, scope: !8281)
!8291 = !DILocation(line: 403, column: 22, scope: !8281)
!8292 = !DILocation(line: 403, column: 15, scope: !8281)
!8293 = !DILocation(line: 403, column: 3, scope: !8281)
!8294 = !DILocation(line: 405, column: 13, scope: !8229)
!8295 = !DILocation(line: 405, column: 17, scope: !8229)
!8296 = !DILocation(line: 405, column: 23, scope: !8229)
!8297 = !DILocation(line: 405, column: 12, scope: !8229)
!8298 = !DILocation(line: 405, column: 2, scope: !8229)
!8299 = !DILocation(line: 410, column: 7, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8229, file: !3, line: 410, column: 6)
!8301 = !DILocation(line: 410, column: 11, scope: !8300)
!8302 = !DILocation(line: 410, column: 17, scope: !8300)
!8303 = !DILocation(line: 410, column: 21, scope: !8300)
!8304 = !DILocation(line: 410, column: 25, scope: !8300)
!8305 = !DILocation(line: 410, column: 30, scope: !8300)
!8306 = !DILocation(line: 410, column: 37, scope: !8300)
!8307 = !DILocation(line: 410, column: 6, scope: !8229)
!8308 = !DILocation(line: 411, column: 7, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 410, column: 50)
!8310 = !DILocation(line: 415, column: 2, scope: !8309)
!8311 = !DILocation(line: 417, column: 7, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 415, column: 9)
!8313 = !DILocation(line: 423, column: 6, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8229, file: !3, line: 423, column: 6)
!8315 = !DILocation(line: 423, column: 10, scope: !8314)
!8316 = !DILocation(line: 423, column: 14, scope: !8314)
!8317 = !DILocation(line: 423, column: 6, scope: !8229)
!8318 = !DILocation(line: 424, column: 7, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8314, file: !3, line: 423, column: 20)
!8320 = !DILocation(line: 426, column: 2, scope: !8319)
!8321 = !DILocation(line: 427, column: 9, scope: !8229)
!8322 = !DILocation(line: 427, column: 15, scope: !8229)
!8323 = !DILocation(line: 427, column: 19, scope: !8229)
!8324 = !DILocation(line: 427, column: 25, scope: !8229)
!8325 = !DILocation(line: 427, column: 14, scope: !8229)
!8326 = !DILocation(line: 427, column: 2, scope: !8229)
!8327 = !DILocation(line: 430, column: 6, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8229, file: !3, line: 430, column: 6)
!8329 = !DILocation(line: 430, column: 10, scope: !8328)
!8330 = !DILocation(line: 430, column: 15, scope: !8328)
!8331 = !DILocation(line: 430, column: 22, scope: !8328)
!8332 = !DILocation(line: 430, column: 6, scope: !8229)
!8333 = !DILocation(line: 431, column: 7, scope: !8328)
!8334 = !DILocation(line: 431, column: 3, scope: !8328)
!8335 = !DILocation(line: 434, column: 7, scope: !8328)
!8336 = !DILocation(line: 436, column: 9, scope: !8229)
!8337 = !DILocation(line: 436, column: 13, scope: !8229)
!8338 = !DILocation(line: 436, column: 28, scope: !8229)
!8339 = !DILocation(line: 437, column: 23, scope: !8229)
!8340 = !DILocation(line: 438, column: 24, scope: !8229)
!8341 = !DILocation(line: 439, column: 24, scope: !8229)
!8342 = !DILocation(line: 440, column: 30, scope: !8229)
!8343 = !DILocation(line: 441, column: 25, scope: !8229)
!8344 = !DILocation(line: 442, column: 19, scope: !8229)
!8345 = !DILocation(line: 443, column: 40, scope: !8229)
!8346 = !DILocation(line: 444, column: 43, scope: !8229)
!8347 = !DILocation(line: 445, column: 39, scope: !8229)
!8348 = !DILocation(line: 446, column: 42, scope: !8229)
!8349 = !DILocation(line: 447, column: 38, scope: !8229)
!8350 = !DILocation(line: 449, column: 4, scope: !8229)
!8351 = !DILocation(line: 449, column: 8, scope: !8229)
!8352 = !DILocation(line: 449, column: 14, scope: !8229)
!8353 = !DILocation(line: 449, column: 3, scope: !8229)
!8354 = !DILocation(line: 436, column: 2, scope: !8229)
!8355 = !DILocation(line: 452, column: 1, scope: !8229)
!8356 = !DILocation(line: 407, column: 64, scope: !5735, inlinedAt: !8357)
!8357 = distinct !DILocation(line: 271, column: 4, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 270, column: 58)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !3, line: 268, column: 7)
!8360 = distinct !DILexicalBlock(scope: !8361, file: !3, line: 266, column: 45)
!8361 = distinct !DILexicalBlock(scope: !8362, file: !3, line: 266, column: 13)
!8362 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 259, column: 6)
!8363 = !DILocation(line: 407, column: 84, scope: !5735, inlinedAt: !8357)
!8364 = !DILocation(line: 407, column: 64, scope: !5735, inlinedAt: !8365)
!8365 = distinct !DILocation(line: 250, column: 4, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8367, file: !3, line: 248, column: 46)
!8367 = distinct !DILexicalBlock(scope: !8368, file: !3, line: 248, column: 7)
!8368 = distinct !DILexicalBlock(scope: !8369, file: !3, line: 245, column: 54)
!8369 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 245, column: 6)
!8370 = !DILocation(line: 407, column: 84, scope: !5735, inlinedAt: !8365)
!8371 = !DILocation(line: 407, column: 64, scope: !5735, inlinedAt: !8372)
!8372 = distinct !DILocation(line: 353, column: 2, scope: !4614)
!8373 = !DILocation(line: 407, column: 84, scope: !5735, inlinedAt: !8372)
!8374 = !DILocation(line: 327, column: 67, scope: !4662, inlinedAt: !8375)
!8375 = distinct !DILocation(line: 230, column: 2, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8377, file: !3, line: 230, column: 2)
!8377 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 230, column: 2)
!8378 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 230, column: 2)
!8379 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 230, column: 2)
!8380 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 230, column: 2)
!8381 = !DILocalVariable(name: "_ep", arg: 1, scope: !4614, file: !3, line: 182, type: !3978)
!8382 = !DILocation(line: 182, column: 31, scope: !4614)
!8383 = !DILocalVariable(name: "desc", arg: 2, scope: !4614, file: !3, line: 182, type: !3992)
!8384 = !DILocation(line: 182, column: 74, scope: !4614)
!8385 = !DILocalVariable(name: "dev", scope: !4614, file: !3, line: 184, type: !284)
!8386 = !DILocation(line: 184, column: 19, scope: !4614)
!8387 = !DILocalVariable(name: "ep", scope: !4614, file: !3, line: 185, type: !4485)
!8388 = !DILocation(line: 185, column: 21, scope: !4614)
!8389 = !DILocalVariable(name: "max", scope: !4614, file: !3, line: 186, type: !144)
!8390 = !DILocation(line: 186, column: 8, scope: !4614)
!8391 = !DILocalVariable(name: "tmp", scope: !4614, file: !3, line: 187, type: !144)
!8392 = !DILocation(line: 187, column: 6, scope: !4614)
!8393 = !DILocalVariable(name: "type", scope: !4614, file: !3, line: 188, type: !144)
!8394 = !DILocation(line: 188, column: 6, scope: !4614)
!8395 = !DILocalVariable(name: "flags", scope: !4614, file: !3, line: 189, type: !347)
!8396 = !DILocation(line: 189, column: 17, scope: !4614)
!8397 = !DILocalVariable(name: "ret", scope: !4614, file: !3, line: 191, type: !330)
!8398 = !DILocation(line: 191, column: 6, scope: !4614)
!8399 = !DILocalVariable(name: "__mptr", scope: !8400, file: !3, line: 193, type: !136)
!8400 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 193, column: 7)
!8401 = !DILocation(line: 193, column: 7, scope: !8400)
!8402 = !DILocation(line: 193, column: 7, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8400, file: !3, line: 193, column: 7)
!8404 = !DILocation(line: 193, column: 5, scope: !4614)
!8405 = !DILocation(line: 194, column: 7, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 194, column: 6)
!8407 = !DILocation(line: 194, column: 11, scope: !8406)
!8408 = !DILocation(line: 194, column: 15, scope: !8406)
!8409 = !DILocation(line: 194, column: 20, scope: !8406)
!8410 = !DILocation(line: 194, column: 23, scope: !8406)
!8411 = !DILocation(line: 194, column: 27, scope: !8406)
!8412 = !DILocation(line: 194, column: 32, scope: !8406)
!8413 = !DILocation(line: 194, column: 35, scope: !8406)
!8414 = !DILocation(line: 194, column: 40, scope: !8406)
!8415 = !DILocation(line: 194, column: 45, scope: !8406)
!8416 = !DILocation(line: 194, column: 56, scope: !8406)
!8417 = !DILocation(line: 195, column: 4, scope: !8406)
!8418 = !DILocation(line: 195, column: 10, scope: !8406)
!8419 = !DILocation(line: 195, column: 26, scope: !8406)
!8420 = !DILocation(line: 194, column: 6, scope: !4614)
!8421 = !DILocation(line: 196, column: 3, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8406, file: !3, line: 195, column: 46)
!8423 = !DILocation(line: 197, column: 3, scope: !8422)
!8424 = !DILocation(line: 199, column: 8, scope: !4614)
!8425 = !DILocation(line: 199, column: 12, scope: !4614)
!8426 = !DILocation(line: 199, column: 6, scope: !4614)
!8427 = !DILocation(line: 200, column: 7, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 200, column: 6)
!8429 = !DILocation(line: 200, column: 12, scope: !8428)
!8430 = !DILocation(line: 200, column: 19, scope: !8428)
!8431 = !DILocation(line: 200, column: 22, scope: !8428)
!8432 = !DILocation(line: 200, column: 27, scope: !8428)
!8433 = !DILocation(line: 200, column: 34, scope: !8428)
!8434 = !DILocation(line: 200, column: 40, scope: !8428)
!8435 = !DILocation(line: 200, column: 6, scope: !4614)
!8436 = !DILocation(line: 201, column: 7, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8428, file: !3, line: 200, column: 62)
!8438 = !DILocation(line: 202, column: 3, scope: !8437)
!8439 = !DILocation(line: 206, column: 7, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 206, column: 6)
!8441 = !DILocation(line: 206, column: 13, scope: !8440)
!8442 = !DILocation(line: 206, column: 30, scope: !8440)
!8443 = !DILocation(line: 206, column: 38, scope: !8440)
!8444 = !DILocation(line: 206, column: 6, scope: !4614)
!8445 = !DILocation(line: 207, column: 7, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8440, file: !3, line: 206, column: 53)
!8447 = !DILocation(line: 208, column: 3, scope: !8446)
!8448 = !DILocation(line: 211, column: 6, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 211, column: 6)
!8450 = !DILocation(line: 211, column: 11, scope: !8449)
!8451 = !DILocation(line: 211, column: 18, scope: !8449)
!8452 = !DILocation(line: 211, column: 6, scope: !4614)
!8453 = !DILocation(line: 212, column: 8, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 212, column: 7)
!8455 = distinct !DILexicalBlock(scope: !8449, file: !3, line: 211, column: 30)
!8456 = !DILocation(line: 212, column: 14, scope: !8454)
!8457 = !DILocation(line: 212, column: 31, scope: !8454)
!8458 = !DILocation(line: 212, column: 39, scope: !8454)
!8459 = !DILocation(line: 212, column: 7, scope: !8455)
!8460 = !DILocation(line: 213, column: 8, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 212, column: 48)
!8462 = !DILocation(line: 214, column: 4, scope: !8461)
!8463 = !DILocation(line: 216, column: 37, scope: !8455)
!8464 = !DILocation(line: 216, column: 17, scope: !8455)
!8465 = !DILocation(line: 216, column: 16, scope: !8455)
!8466 = !DILocation(line: 216, column: 15, scope: !8455)
!8467 = !DILocation(line: 216, column: 3, scope: !8455)
!8468 = !DILocation(line: 216, column: 7, scope: !8455)
!8469 = !DILocation(line: 216, column: 13, scope: !8455)
!8470 = !DILocation(line: 217, column: 7, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 217, column: 7)
!8472 = !DILocation(line: 217, column: 12, scope: !8471)
!8473 = !DILocation(line: 217, column: 26, scope: !8471)
!8474 = !DILocation(line: 217, column: 29, scope: !8471)
!8475 = !DILocation(line: 217, column: 33, scope: !8471)
!8476 = !DILocation(line: 217, column: 39, scope: !8471)
!8477 = !DILocation(line: 217, column: 49, scope: !8471)
!8478 = !DILocation(line: 217, column: 53, scope: !8471)
!8479 = !DILocation(line: 217, column: 42, scope: !8471)
!8480 = !DILocation(line: 217, column: 7, scope: !8455)
!8481 = !DILocation(line: 218, column: 8, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8471, file: !3, line: 217, column: 59)
!8483 = !DILocation(line: 219, column: 4, scope: !8482)
!8484 = !DILocation(line: 221, column: 2, scope: !8455)
!8485 = !DILocation(line: 224, column: 26, scope: !4614)
!8486 = !DILocation(line: 224, column: 8, scope: !4614)
!8487 = !DILocation(line: 224, column: 6, scope: !4614)
!8488 = !DILocation(line: 225, column: 6, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 225, column: 6)
!8490 = !DILocation(line: 225, column: 10, scope: !8489)
!8491 = !DILocation(line: 225, column: 14, scope: !8489)
!8492 = !DILocation(line: 225, column: 18, scope: !8489)
!8493 = !DILocation(line: 225, column: 21, scope: !8489)
!8494 = !DILocation(line: 225, column: 25, scope: !8489)
!8495 = !DILocation(line: 225, column: 30, scope: !8489)
!8496 = !DILocation(line: 225, column: 34, scope: !8489)
!8497 = !DILocation(line: 225, column: 39, scope: !8489)
!8498 = !DILocation(line: 225, column: 46, scope: !8489)
!8499 = !DILocation(line: 225, column: 6, scope: !4614)
!8500 = !DILocation(line: 226, column: 7, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 225, column: 61)
!8502 = !DILocation(line: 227, column: 3, scope: !8501)
!8503 = !DILocation(line: 230, column: 2, scope: !4614)
!8504 = !DILocation(line: 230, column: 2, scope: !8380)
!8505 = !DILocalVariable(name: "__dummy", scope: !8506, file: !3, line: 230, type: !347)
!8506 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 230, column: 2)
!8507 = !DILocation(line: 230, column: 2, scope: !8506)
!8508 = !DILocalVariable(name: "__dummy2", scope: !8506, file: !3, line: 230, type: !347)
!8509 = !DILocation(line: 230, column: 2, scope: !8379)
!8510 = !DILocation(line: 230, column: 2, scope: !8378)
!8511 = !DILocation(line: 230, column: 2, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 230, column: 2)
!8513 = !DILocalVariable(name: "__dummy", scope: !8514, file: !3, line: 230, type: !347)
!8514 = distinct !DILexicalBlock(scope: !8515, file: !3, line: 230, column: 2)
!8515 = distinct !DILexicalBlock(scope: !8512, file: !3, line: 230, column: 2)
!8516 = !DILocation(line: 230, column: 2, scope: !8514)
!8517 = !DILocalVariable(name: "__dummy2", scope: !8514, file: !3, line: 230, type: !347)
!8518 = !DILocation(line: 230, column: 2, scope: !8515)
!8519 = !DILocation(line: 230, column: 2, scope: !8377)
!8520 = !{i32 -2141470943}
!8521 = !DILocation(line: 230, column: 2, scope: !8376)
!8522 = !DILocation(line: 329, column: 10, scope: !4662, inlinedAt: !8375)
!8523 = !DILocation(line: 329, column: 16, scope: !4662, inlinedAt: !8375)
!8524 = !DILocation(line: 231, column: 19, scope: !4614)
!8525 = !DILocation(line: 231, column: 2, scope: !4614)
!8526 = !DILocation(line: 231, column: 7, scope: !4614)
!8527 = !DILocation(line: 231, column: 17, scope: !4614)
!8528 = !DILocation(line: 232, column: 13, scope: !4614)
!8529 = !DILocation(line: 232, column: 2, scope: !4614)
!8530 = !DILocation(line: 232, column: 6, scope: !4614)
!8531 = !DILocation(line: 232, column: 11, scope: !4614)
!8532 = !DILocation(line: 235, column: 2, scope: !4614)
!8533 = !DILocation(line: 235, column: 6, scope: !4614)
!8534 = !DILocation(line: 235, column: 14, scope: !4614)
!8535 = !DILocation(line: 236, column: 2, scope: !4614)
!8536 = !DILocation(line: 236, column: 6, scope: !4614)
!8537 = !DILocation(line: 236, column: 13, scope: !4614)
!8538 = !DILocation(line: 237, column: 2, scope: !4614)
!8539 = !DILocation(line: 237, column: 6, scope: !4614)
!8540 = !DILocation(line: 237, column: 19, scope: !4614)
!8541 = !DILocation(line: 240, column: 16, scope: !4614)
!8542 = !DILocation(line: 240, column: 20, scope: !4614)
!8543 = !DILocation(line: 240, column: 2, scope: !4614)
!8544 = !DILocation(line: 243, column: 27, scope: !4614)
!8545 = !DILocation(line: 243, column: 31, scope: !4614)
!8546 = !DILocation(line: 243, column: 37, scope: !4614)
!8547 = !DILocation(line: 243, column: 26, scope: !4614)
!8548 = !DILocation(line: 243, column: 2, scope: !4614)
!8549 = !DILocation(line: 245, column: 7, scope: !8369)
!8550 = !DILocation(line: 245, column: 12, scope: !8369)
!8551 = !DILocation(line: 245, column: 19, scope: !8369)
!8552 = !DILocation(line: 245, column: 31, scope: !8369)
!8553 = !DILocation(line: 245, column: 34, scope: !8369)
!8554 = !DILocation(line: 245, column: 39, scope: !8369)
!8555 = !DILocation(line: 245, column: 6, scope: !4614)
!8556 = !DILocation(line: 246, column: 16, scope: !8368)
!8557 = !DILocation(line: 246, column: 20, scope: !8368)
!8558 = !DILocation(line: 246, column: 25, scope: !8368)
!8559 = !DILocation(line: 246, column: 15, scope: !8368)
!8560 = !DILocation(line: 246, column: 9, scope: !8368)
!8561 = !DILocation(line: 246, column: 7, scope: !8368)
!8562 = !DILocation(line: 248, column: 8, scope: !8367)
!8563 = !DILocation(line: 248, column: 12, scope: !8367)
!8564 = !DILocation(line: 248, column: 39, scope: !8367)
!8565 = !DILocation(line: 248, column: 22, scope: !8367)
!8566 = !DILocation(line: 248, column: 19, scope: !8367)
!8567 = !DILocation(line: 248, column: 7, scope: !8368)
!8568 = !DILocation(line: 249, column: 8, scope: !8366)
!8569 = !DILocation(line: 250, column: 28, scope: !8366)
!8570 = !DILocation(line: 250, column: 33, scope: !8366)
!8571 = !DILocation(line: 250, column: 39, scope: !8366)
!8572 = !DILocation(line: 409, column: 2, scope: !5797, inlinedAt: !8365)
!8573 = !DILocation(line: 409, column: 2, scope: !5802, inlinedAt: !8365)
!8574 = !DILocation(line: 409, column: 2, scope: !5803, inlinedAt: !8365)
!8575 = !DILocation(line: 409, column: 2, scope: !5810, inlinedAt: !8365)
!8576 = !DILocation(line: 409, column: 2, scope: !5813, inlinedAt: !8365)
!8577 = !DILocation(line: 251, column: 4, scope: !8366)
!8578 = !DILocation(line: 253, column: 7, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8368, file: !3, line: 253, column: 7)
!8580 = !DILocation(line: 253, column: 11, scope: !8579)
!8581 = !DILocation(line: 253, column: 7, scope: !8368)
!8582 = !DILocation(line: 254, column: 8, scope: !8579)
!8583 = !DILocation(line: 254, column: 4, scope: !8579)
!8584 = !DILocation(line: 256, column: 8, scope: !8579)
!8585 = !DILocation(line: 257, column: 2, scope: !8368)
!8586 = !DILocation(line: 258, column: 10, scope: !4614)
!8587 = !DILocation(line: 258, column: 16, scope: !4614)
!8588 = !DILocation(line: 258, column: 29, scope: !4614)
!8589 = !DILocation(line: 258, column: 7, scope: !4614)
!8590 = !DILocation(line: 259, column: 6, scope: !8362)
!8591 = !DILocation(line: 259, column: 11, scope: !8362)
!8592 = !DILocation(line: 259, column: 6, scope: !4614)
!8593 = !DILocation(line: 261, column: 7, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 261, column: 7)
!8595 = distinct !DILexicalBlock(scope: !8362, file: !3, line: 259, column: 37)
!8596 = !DILocation(line: 261, column: 12, scope: !8594)
!8597 = !DILocation(line: 261, column: 20, scope: !8594)
!8598 = !DILocation(line: 261, column: 28, scope: !8594)
!8599 = !DILocation(line: 262, column: 5, scope: !8594)
!8600 = !DILocation(line: 262, column: 10, scope: !8594)
!8601 = !DILocation(line: 262, column: 17, scope: !8594)
!8602 = !DILocation(line: 262, column: 23, scope: !8594)
!8603 = !DILocation(line: 262, column: 41, scope: !8594)
!8604 = !DILocation(line: 263, column: 7, scope: !8594)
!8605 = !DILocation(line: 263, column: 13, scope: !8594)
!8606 = !DILocation(line: 263, column: 30, scope: !8594)
!8607 = !DILocation(line: 261, column: 7, scope: !8595)
!8608 = !DILocation(line: 265, column: 6, scope: !8594)
!8609 = !DILocation(line: 265, column: 10, scope: !8594)
!8610 = !DILocation(line: 265, column: 16, scope: !8594)
!8611 = !DILocation(line: 265, column: 5, scope: !8594)
!8612 = !DILocation(line: 264, column: 4, scope: !8594)
!8613 = !DILocation(line: 266, column: 2, scope: !8595)
!8614 = !DILocation(line: 266, column: 13, scope: !8361)
!8615 = !DILocation(line: 266, column: 18, scope: !8361)
!8616 = !DILocation(line: 266, column: 13, scope: !8362)
!8617 = !DILocation(line: 268, column: 8, scope: !8359)
!8618 = !DILocation(line: 268, column: 13, scope: !8359)
!8619 = !DILocation(line: 268, column: 20, scope: !8359)
!8620 = !DILocation(line: 268, column: 26, scope: !8359)
!8621 = !DILocation(line: 268, column: 45, scope: !8359)
!8622 = !DILocation(line: 268, column: 48, scope: !8359)
!8623 = !DILocation(line: 268, column: 52, scope: !8359)
!8624 = !DILocation(line: 268, column: 61, scope: !8359)
!8625 = !DILocation(line: 269, column: 8, scope: !8359)
!8626 = !DILocation(line: 269, column: 13, scope: !8359)
!8627 = !DILocation(line: 269, column: 20, scope: !8359)
!8628 = !DILocation(line: 269, column: 26, scope: !8359)
!8629 = !DILocation(line: 269, column: 44, scope: !8359)
!8630 = !DILocation(line: 269, column: 47, scope: !8359)
!8631 = !DILocation(line: 269, column: 51, scope: !8359)
!8632 = !DILocation(line: 269, column: 59, scope: !8359)
!8633 = !DILocation(line: 270, column: 8, scope: !8359)
!8634 = !DILocation(line: 270, column: 13, scope: !8359)
!8635 = !DILocation(line: 270, column: 20, scope: !8359)
!8636 = !DILocation(line: 270, column: 26, scope: !8359)
!8637 = !DILocation(line: 270, column: 44, scope: !8359)
!8638 = !DILocation(line: 270, column: 47, scope: !8359)
!8639 = !DILocation(line: 270, column: 51, scope: !8359)
!8640 = !DILocation(line: 268, column: 7, scope: !8360)
!8641 = !DILocation(line: 271, column: 28, scope: !8358)
!8642 = !DILocation(line: 271, column: 33, scope: !8358)
!8643 = !DILocation(line: 271, column: 39, scope: !8358)
!8644 = !DILocation(line: 409, column: 2, scope: !5797, inlinedAt: !8357)
!8645 = !DILocation(line: 409, column: 2, scope: !5802, inlinedAt: !8357)
!8646 = !DILocation(line: 409, column: 2, scope: !5803, inlinedAt: !8357)
!8647 = !DILocation(line: 409, column: 2, scope: !5810, inlinedAt: !8357)
!8648 = !DILocation(line: 409, column: 2, scope: !5813, inlinedAt: !8357)
!8649 = !DILocation(line: 272, column: 8, scope: !8358)
!8650 = !DILocation(line: 273, column: 4, scope: !8358)
!8651 = !DILocation(line: 275, column: 2, scope: !8360)
!8652 = !DILocation(line: 276, column: 16, scope: !4614)
!8653 = !DILocation(line: 276, column: 21, scope: !4614)
!8654 = !DILocation(line: 276, column: 2, scope: !4614)
!8655 = !DILocation(line: 276, column: 6, scope: !4614)
!8656 = !DILocation(line: 276, column: 13, scope: !4614)
!8657 = !DILocation(line: 278, column: 6, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 278, column: 6)
!8659 = !DILocation(line: 278, column: 11, scope: !8658)
!8660 = !DILocation(line: 278, column: 18, scope: !8658)
!8661 = !DILocation(line: 278, column: 6, scope: !4614)
!8662 = !DILocation(line: 279, column: 10, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8658, file: !3, line: 278, column: 32)
!8664 = !DILocation(line: 279, column: 15, scope: !8663)
!8665 = !DILocation(line: 279, column: 7, scope: !8663)
!8666 = !DILocation(line: 280, column: 10, scope: !8663)
!8667 = !DILocation(line: 280, column: 16, scope: !8663)
!8668 = !DILocation(line: 280, column: 7, scope: !8663)
!8669 = !DILocation(line: 282, column: 7, scope: !8663)
!8670 = !DILocation(line: 283, column: 7, scope: !8663)
!8671 = !DILocation(line: 284, column: 16, scope: !8663)
!8672 = !DILocation(line: 284, column: 20, scope: !8663)
!8673 = !DILocation(line: 284, column: 34, scope: !8663)
!8674 = !DILocation(line: 284, column: 3, scope: !8663)
!8675 = !DILocation(line: 284, column: 7, scope: !8663)
!8676 = !DILocation(line: 284, column: 13, scope: !8663)
!8677 = !DILocation(line: 285, column: 2, scope: !8663)
!8678 = !DILocation(line: 287, column: 7, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 287, column: 7)
!8680 = distinct !DILexicalBlock(scope: !8658, file: !3, line: 285, column: 9)
!8681 = !DILocation(line: 287, column: 12, scope: !8679)
!8682 = !DILocation(line: 287, column: 26, scope: !8679)
!8683 = !DILocation(line: 287, column: 29, scope: !8679)
!8684 = !DILocation(line: 287, column: 33, scope: !8679)
!8685 = !DILocation(line: 287, column: 7, scope: !8680)
!8686 = !DILocation(line: 288, column: 11, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8679, file: !3, line: 287, column: 40)
!8688 = !DILocation(line: 288, column: 16, scope: !8687)
!8689 = !DILocation(line: 288, column: 8, scope: !8687)
!8690 = !DILocation(line: 289, column: 8, scope: !8687)
!8691 = !DILocation(line: 290, column: 3, scope: !8687)
!8692 = !DILocation(line: 291, column: 11, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8679, file: !3, line: 290, column: 10)
!8694 = !DILocation(line: 291, column: 16, scope: !8693)
!8695 = !DILocation(line: 291, column: 8, scope: !8693)
!8696 = !DILocation(line: 292, column: 8, scope: !8693)
!8697 = !DILocation(line: 293, column: 12, scope: !8693)
!8698 = !DILocation(line: 293, column: 16, scope: !8693)
!8699 = !DILocation(line: 293, column: 22, scope: !8693)
!8700 = !DILocation(line: 293, column: 8, scope: !8693)
!8701 = !DILocation(line: 296, column: 7, scope: !8680)
!8702 = !DILocation(line: 297, column: 8, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 297, column: 7)
!8704 = !DILocation(line: 297, column: 13, scope: !8703)
!8705 = !DILocation(line: 297, column: 7, scope: !8680)
!8706 = !DILocation(line: 298, column: 28, scope: !8703)
!8707 = !DILocation(line: 298, column: 11, scope: !8703)
!8708 = !DILocation(line: 298, column: 8, scope: !8703)
!8709 = !DILocation(line: 298, column: 4, scope: !8703)
!8710 = !DILocation(line: 299, column: 11, scope: !8680)
!8711 = !DILocation(line: 299, column: 15, scope: !8680)
!8712 = !DILocation(line: 299, column: 18, scope: !8680)
!8713 = !DILocation(line: 299, column: 27, scope: !8680)
!8714 = !DILocation(line: 299, column: 7, scope: !8680)
!8715 = !DILocation(line: 303, column: 2, scope: !4614)
!8716 = !{i32 -2141469894}
!8717 = !DILocation(line: 306, column: 7, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 306, column: 6)
!8719 = !DILocation(line: 306, column: 11, scope: !8718)
!8720 = !DILocation(line: 306, column: 6, scope: !4614)
!8721 = !DILocation(line: 307, column: 37, scope: !8718)
!8722 = !DILocation(line: 307, column: 41, scope: !8718)
!8723 = !DILocation(line: 307, column: 47, scope: !8718)
!8724 = !DILocation(line: 307, column: 36, scope: !8718)
!8725 = !DILocation(line: 307, column: 3, scope: !8718)
!8726 = !DILocation(line: 308, column: 13, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 308, column: 11)
!8728 = !DILocation(line: 308, column: 18, scope: !8727)
!8729 = !DILocation(line: 308, column: 25, scope: !8727)
!8730 = !DILocation(line: 308, column: 11, scope: !8718)
!8731 = !DILocation(line: 313, column: 38, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8727, file: !3, line: 308, column: 38)
!8733 = !DILocation(line: 313, column: 42, scope: !8732)
!8734 = !DILocation(line: 313, column: 48, scope: !8732)
!8735 = !DILocation(line: 313, column: 37, scope: !8732)
!8736 = !DILocation(line: 312, column: 3, scope: !8732)
!8737 = !DILocation(line: 314, column: 2, scope: !8732)
!8738 = !DILocation(line: 316, column: 6, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 316, column: 6)
!8740 = !DILocation(line: 316, column: 11, scope: !8739)
!8741 = !DILocation(line: 316, column: 18, scope: !8739)
!8742 = !DILocation(line: 316, column: 6, scope: !4614)
!8743 = !DILocation(line: 317, column: 19, scope: !8739)
!8744 = !DILocation(line: 317, column: 3, scope: !8739)
!8745 = !DILocation(line: 318, column: 9, scope: !4614)
!8746 = !DILocation(line: 318, column: 15, scope: !4614)
!8747 = !DILocation(line: 318, column: 19, scope: !4614)
!8748 = !DILocation(line: 318, column: 24, scope: !4614)
!8749 = !DILocation(line: 318, column: 14, scope: !4614)
!8750 = !DILocation(line: 318, column: 2, scope: !4614)
!8751 = !DILocation(line: 321, column: 7, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 321, column: 6)
!8753 = !DILocation(line: 321, column: 11, scope: !8752)
!8754 = !DILocation(line: 321, column: 6, scope: !4614)
!8755 = !DILocation(line: 322, column: 20, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8752, file: !3, line: 321, column: 16)
!8757 = !DILocation(line: 322, column: 3, scope: !8756)
!8758 = !DILocation(line: 324, column: 7, scope: !8756)
!8759 = !DILocation(line: 326, column: 7, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8756, file: !3, line: 326, column: 7)
!8761 = !DILocation(line: 326, column: 12, scope: !8760)
!8762 = !DILocation(line: 326, column: 19, scope: !8760)
!8763 = !DILocation(line: 326, column: 7, scope: !8756)
!8764 = !DILocation(line: 327, column: 18, scope: !8760)
!8765 = !DILocation(line: 327, column: 22, scope: !8760)
!8766 = !DILocation(line: 327, column: 28, scope: !8760)
!8767 = !DILocation(line: 327, column: 17, scope: !8760)
!8768 = !DILocation(line: 327, column: 11, scope: !8760)
!8769 = !DILocation(line: 327, column: 8, scope: !8760)
!8770 = !DILocation(line: 327, column: 4, scope: !8760)
!8771 = !DILocation(line: 328, column: 10, scope: !8756)
!8772 = !DILocation(line: 328, column: 16, scope: !8756)
!8773 = !DILocation(line: 328, column: 20, scope: !8756)
!8774 = !DILocation(line: 328, column: 26, scope: !8756)
!8775 = !DILocation(line: 328, column: 15, scope: !8756)
!8776 = !DILocation(line: 328, column: 3, scope: !8756)
!8777 = !DILocation(line: 329, column: 2, scope: !8756)
!8778 = !DILocation(line: 330, column: 9, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8752, file: !3, line: 329, column: 9)
!8780 = !DILocation(line: 330, column: 7, scope: !8779)
!8781 = !DILocation(line: 331, column: 17, scope: !8779)
!8782 = !DILocation(line: 331, column: 22, scope: !8779)
!8783 = !DILocation(line: 331, column: 28, scope: !8779)
!8784 = !DILocation(line: 331, column: 16, scope: !8779)
!8785 = !DILocation(line: 331, column: 10, scope: !8779)
!8786 = !DILocation(line: 331, column: 7, scope: !8779)
!8787 = !DILocation(line: 332, column: 10, scope: !8779)
!8788 = !DILocation(line: 332, column: 16, scope: !8779)
!8789 = !DILocation(line: 332, column: 21, scope: !8779)
!8790 = !DILocation(line: 332, column: 27, scope: !8779)
!8791 = !DILocation(line: 332, column: 15, scope: !8779)
!8792 = !DILocation(line: 332, column: 3, scope: !8779)
!8793 = !DILocation(line: 338, column: 8, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 338, column: 7)
!8795 = !DILocation(line: 338, column: 14, scope: !8794)
!8796 = !DILocation(line: 338, column: 31, scope: !8794)
!8797 = !DILocation(line: 338, column: 45, scope: !8794)
!8798 = !DILocation(line: 338, column: 7, scope: !8779)
!8799 = !DILocation(line: 339, column: 8, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 338, column: 51)
!8801 = !DILocation(line: 340, column: 11, scope: !8800)
!8802 = !DILocation(line: 340, column: 17, scope: !8800)
!8803 = !DILocation(line: 340, column: 21, scope: !8800)
!8804 = !DILocation(line: 340, column: 27, scope: !8800)
!8805 = !DILocation(line: 340, column: 16, scope: !8800)
!8806 = !DILocation(line: 340, column: 4, scope: !8800)
!8807 = !DILocation(line: 342, column: 21, scope: !8800)
!8808 = !DILocation(line: 342, column: 4, scope: !8800)
!8809 = !DILocation(line: 343, column: 3, scope: !8800)
!8810 = !DILocation(line: 346, column: 8, scope: !4614)
!8811 = !DILocation(line: 346, column: 14, scope: !4614)
!8812 = !DILocation(line: 346, column: 6, scope: !4614)
!8813 = !DILocation(line: 353, column: 26, scope: !4614)
!8814 = !DILocation(line: 353, column: 31, scope: !4614)
!8815 = !DILocation(line: 353, column: 37, scope: !4614)
!8816 = !DILocation(line: 409, column: 2, scope: !5797, inlinedAt: !8372)
!8817 = !DILocation(line: 409, column: 2, scope: !5802, inlinedAt: !8372)
!8818 = !DILocation(line: 409, column: 2, scope: !5803, inlinedAt: !8372)
!8819 = !DILocation(line: 409, column: 2, scope: !5810, inlinedAt: !8372)
!8820 = !DILocation(line: 409, column: 2, scope: !5813, inlinedAt: !8372)
!8821 = !DILocation(line: 354, column: 9, scope: !4614)
!8822 = !DILocation(line: 354, column: 2, scope: !4614)
!8823 = !DILabel(scope: !4614, name: "print_err", file: !3, line: 356)
!8824 = !DILocation(line: 356, column: 1, scope: !4614)
!8825 = !DILocation(line: 357, column: 2, scope: !4614)
!8826 = !DILocation(line: 358, column: 9, scope: !4614)
!8827 = !DILocation(line: 358, column: 2, scope: !4614)
!8828 = !DILocation(line: 359, column: 1, scope: !4614)
!8829 = distinct !DISubprogram(name: "net2280_disable", scope: !3, file: !3, line: 512, type: !4006, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!8830 = !DILocation(line: 407, column: 64, scope: !5735, inlinedAt: !8831)
!8831 = distinct !DILocation(line: 539, column: 2, scope: !8829)
!8832 = !DILocation(line: 407, column: 84, scope: !5735, inlinedAt: !8831)
!8833 = !DILocation(line: 327, column: 67, scope: !4662, inlinedAt: !8834)
!8834 = distinct !DILocation(line: 522, column: 2, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 522, column: 2)
!8836 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 522, column: 2)
!8837 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 522, column: 2)
!8838 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 522, column: 2)
!8839 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 522, column: 2)
!8840 = !DILocalVariable(name: "_ep", arg: 1, scope: !8829, file: !3, line: 512, type: !3978)
!8841 = !DILocation(line: 512, column: 43, scope: !8829)
!8842 = !DILocalVariable(name: "ep", scope: !8829, file: !3, line: 514, type: !4485)
!8843 = !DILocation(line: 514, column: 21, scope: !8829)
!8844 = !DILocalVariable(name: "flags", scope: !8829, file: !3, line: 515, type: !347)
!8845 = !DILocation(line: 515, column: 17, scope: !8829)
!8846 = !DILocalVariable(name: "__mptr", scope: !8847, file: !3, line: 517, type: !136)
!8847 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 517, column: 7)
!8848 = !DILocation(line: 517, column: 7, scope: !8847)
!8849 = !DILocation(line: 517, column: 7, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8847, file: !3, line: 517, column: 7)
!8851 = !DILocation(line: 517, column: 5, scope: !8829)
!8852 = !DILocation(line: 518, column: 7, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 518, column: 6)
!8854 = !DILocation(line: 518, column: 11, scope: !8853)
!8855 = !DILocation(line: 518, column: 14, scope: !8853)
!8856 = !DILocation(line: 518, column: 19, scope: !8853)
!8857 = !DILocation(line: 518, column: 24, scope: !8853)
!8858 = !DILocation(line: 518, column: 6, scope: !8829)
!8859 = !DILocation(line: 519, column: 3, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 518, column: 36)
!8861 = !DILocation(line: 520, column: 3, scope: !8860)
!8862 = !DILocation(line: 522, column: 2, scope: !8829)
!8863 = !DILocation(line: 522, column: 2, scope: !8839)
!8864 = !DILocalVariable(name: "__dummy", scope: !8865, file: !3, line: 522, type: !347)
!8865 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 522, column: 2)
!8866 = !DILocation(line: 522, column: 2, scope: !8865)
!8867 = !DILocalVariable(name: "__dummy2", scope: !8865, file: !3, line: 522, type: !347)
!8868 = !DILocation(line: 522, column: 2, scope: !8838)
!8869 = !DILocation(line: 522, column: 2, scope: !8837)
!8870 = !DILocation(line: 522, column: 2, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 522, column: 2)
!8872 = !DILocalVariable(name: "__dummy", scope: !8873, file: !3, line: 522, type: !347)
!8873 = distinct !DILexicalBlock(scope: !8874, file: !3, line: 522, column: 2)
!8874 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 522, column: 2)
!8875 = !DILocation(line: 522, column: 2, scope: !8873)
!8876 = !DILocalVariable(name: "__dummy2", scope: !8873, file: !3, line: 522, type: !347)
!8877 = !DILocation(line: 522, column: 2, scope: !8874)
!8878 = !DILocation(line: 522, column: 2, scope: !8836)
!8879 = !{i32 -2141456090}
!8880 = !DILocation(line: 522, column: 2, scope: !8835)
!8881 = !DILocation(line: 329, column: 10, scope: !4662, inlinedAt: !8834)
!8882 = !DILocation(line: 329, column: 16, scope: !4662, inlinedAt: !8834)
!8883 = !DILocation(line: 523, column: 7, scope: !8829)
!8884 = !DILocation(line: 523, column: 2, scope: !8829)
!8885 = !DILocation(line: 525, column: 6, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 525, column: 6)
!8887 = !DILocation(line: 525, column: 10, scope: !8886)
!8888 = !DILocation(line: 525, column: 15, scope: !8886)
!8889 = !DILocation(line: 525, column: 22, scope: !8886)
!8890 = !DILocation(line: 525, column: 6, scope: !8829)
!8891 = !DILocation(line: 526, column: 17, scope: !8886)
!8892 = !DILocation(line: 526, column: 21, scope: !8886)
!8893 = !DILocation(line: 526, column: 26, scope: !8886)
!8894 = !DILocation(line: 526, column: 32, scope: !8886)
!8895 = !DILocation(line: 526, column: 3, scope: !8886)
!8896 = !DILocation(line: 528, column: 17, scope: !8886)
!8897 = !DILocation(line: 528, column: 21, scope: !8886)
!8898 = !DILocation(line: 528, column: 26, scope: !8886)
!8899 = !DILocation(line: 528, column: 32, scope: !8886)
!8900 = !DILocation(line: 528, column: 3, scope: !8886)
!8901 = !DILocation(line: 534, column: 15, scope: !8829)
!8902 = !DILocation(line: 534, column: 19, scope: !8829)
!8903 = !DILocation(line: 534, column: 24, scope: !8829)
!8904 = !DILocation(line: 534, column: 14, scope: !8829)
!8905 = !DILocation(line: 534, column: 8, scope: !8829)
!8906 = !DILocation(line: 536, column: 7, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 536, column: 6)
!8908 = !DILocation(line: 536, column: 11, scope: !8907)
!8909 = !DILocation(line: 536, column: 15, scope: !8907)
!8910 = !DILocation(line: 536, column: 18, scope: !8907)
!8911 = !DILocation(line: 536, column: 22, scope: !8907)
!8912 = !DILocation(line: 536, column: 26, scope: !8907)
!8913 = !DILocation(line: 536, column: 31, scope: !8907)
!8914 = !DILocation(line: 536, column: 34, scope: !8907)
!8915 = !DILocation(line: 536, column: 38, scope: !8907)
!8916 = !DILocation(line: 536, column: 42, scope: !8907)
!8917 = !DILocation(line: 536, column: 6, scope: !8829)
!8918 = !DILocation(line: 537, column: 14, scope: !8907)
!8919 = !DILocation(line: 537, column: 18, scope: !8907)
!8920 = !DILocation(line: 537, column: 23, scope: !8907)
!8921 = !DILocation(line: 537, column: 27, scope: !8907)
!8922 = !DILocation(line: 537, column: 31, scope: !8907)
!8923 = !DILocation(line: 537, column: 35, scope: !8907)
!8924 = !DILocation(line: 537, column: 3, scope: !8907)
!8925 = !DILocation(line: 537, column: 7, scope: !8907)
!8926 = !DILocation(line: 537, column: 11, scope: !8907)
!8927 = !DILocation(line: 539, column: 26, scope: !8829)
!8928 = !DILocation(line: 539, column: 30, scope: !8829)
!8929 = !DILocation(line: 539, column: 35, scope: !8829)
!8930 = !DILocation(line: 539, column: 41, scope: !8829)
!8931 = !DILocation(line: 409, column: 2, scope: !5797, inlinedAt: !8831)
!8932 = !DILocation(line: 409, column: 2, scope: !5802, inlinedAt: !8831)
!8933 = !DILocation(line: 409, column: 2, scope: !5803, inlinedAt: !8831)
!8934 = !DILocation(line: 409, column: 2, scope: !5810, inlinedAt: !8831)
!8935 = !DILocation(line: 409, column: 2, scope: !5813, inlinedAt: !8831)
!8936 = !DILocation(line: 540, column: 2, scope: !8829)
!8937 = !DILocation(line: 541, column: 1, scope: !8829)
!8938 = distinct !DISubprogram(name: "net2280_alloc_request", scope: !3, file: !3, line: 546, type: !4014, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!8939 = !DILocalVariable(name: "_ep", arg: 1, scope: !8938, file: !3, line: 546, type: !3978)
!8940 = !DILocation(line: 546, column: 39, scope: !8938)
!8941 = !DILocalVariable(name: "gfp_flags", arg: 2, scope: !8938, file: !3, line: 546, type: !137)
!8942 = !DILocation(line: 546, column: 50, scope: !8938)
!8943 = !DILocalVariable(name: "ep", scope: !8938, file: !3, line: 548, type: !4485)
!8944 = !DILocation(line: 548, column: 21, scope: !8938)
!8945 = !DILocalVariable(name: "req", scope: !8938, file: !3, line: 549, type: !4470)
!8946 = !DILocation(line: 549, column: 26, scope: !8938)
!8947 = !DILocation(line: 551, column: 7, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 551, column: 6)
!8949 = !DILocation(line: 551, column: 6, scope: !8938)
!8950 = !DILocation(line: 552, column: 3, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 551, column: 12)
!8952 = !DILocation(line: 553, column: 3, scope: !8951)
!8953 = !DILocalVariable(name: "__mptr", scope: !8954, file: !3, line: 555, type: !136)
!8954 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 555, column: 7)
!8955 = !DILocation(line: 555, column: 7, scope: !8954)
!8956 = !DILocation(line: 555, column: 7, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 555, column: 7)
!8958 = !DILocation(line: 555, column: 5, scope: !8938)
!8959 = !DILocation(line: 557, column: 30, scope: !8938)
!8960 = !DILocation(line: 557, column: 8, scope: !8938)
!8961 = !DILocation(line: 557, column: 6, scope: !8938)
!8962 = !DILocation(line: 558, column: 7, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 558, column: 6)
!8964 = !DILocation(line: 558, column: 6, scope: !8938)
!8965 = !DILocation(line: 559, column: 3, scope: !8963)
!8966 = !DILocation(line: 561, column: 18, scope: !8938)
!8967 = !DILocation(line: 561, column: 23, scope: !8938)
!8968 = !DILocation(line: 561, column: 2, scope: !8938)
!8969 = !DILocation(line: 564, column: 6, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 564, column: 6)
!8971 = !DILocation(line: 564, column: 10, scope: !8970)
!8972 = !DILocation(line: 564, column: 6, scope: !8938)
!8973 = !DILocalVariable(name: "td", scope: !8974, file: !3, line: 565, type: !4138)
!8974 = distinct !DILexicalBlock(scope: !8970, file: !3, line: 564, column: 15)
!8975 = !DILocation(line: 565, column: 23, scope: !8974)
!8976 = !DILocation(line: 567, column: 23, scope: !8974)
!8977 = !DILocation(line: 567, column: 27, scope: !8974)
!8978 = !DILocation(line: 567, column: 32, scope: !8974)
!8979 = !DILocation(line: 567, column: 42, scope: !8974)
!8980 = !DILocation(line: 568, column: 6, scope: !8974)
!8981 = !DILocation(line: 568, column: 11, scope: !8974)
!8982 = !DILocation(line: 567, column: 8, scope: !8974)
!8983 = !DILocation(line: 567, column: 6, scope: !8974)
!8984 = !DILocation(line: 569, column: 8, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8974, file: !3, line: 569, column: 7)
!8986 = !DILocation(line: 569, column: 7, scope: !8974)
!8987 = !DILocation(line: 570, column: 10, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8985, file: !3, line: 569, column: 12)
!8989 = !DILocation(line: 570, column: 4, scope: !8988)
!8990 = !DILocation(line: 571, column: 4, scope: !8988)
!8991 = !DILocation(line: 573, column: 3, scope: !8974)
!8992 = !DILocation(line: 573, column: 7, scope: !8974)
!8993 = !DILocation(line: 573, column: 16, scope: !8974)
!8994 = !DILocation(line: 574, column: 17, scope: !8974)
!8995 = !DILocation(line: 574, column: 21, scope: !8974)
!8996 = !DILocation(line: 574, column: 3, scope: !8974)
!8997 = !DILocation(line: 574, column: 7, scope: !8974)
!8998 = !DILocation(line: 574, column: 15, scope: !8974)
!8999 = !DILocation(line: 575, column: 13, scope: !8974)
!9000 = !DILocation(line: 575, column: 3, scope: !8974)
!9001 = !DILocation(line: 575, column: 8, scope: !8974)
!9002 = !DILocation(line: 575, column: 11, scope: !8974)
!9003 = !DILocation(line: 576, column: 2, scope: !8974)
!9004 = !DILocation(line: 577, column: 10, scope: !8938)
!9005 = !DILocation(line: 577, column: 15, scope: !8938)
!9006 = !DILocation(line: 577, column: 2, scope: !8938)
!9007 = !DILocation(line: 578, column: 1, scope: !8938)
!9008 = distinct !DISubprogram(name: "net2280_free_request", scope: !3, file: !3, line: 580, type: !4042, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!9009 = !DILocalVariable(name: "_ep", arg: 1, scope: !9008, file: !3, line: 580, type: !3978)
!9010 = !DILocation(line: 580, column: 49, scope: !9008)
!9011 = !DILocalVariable(name: "_req", arg: 2, scope: !9008, file: !3, line: 580, type: !4016)
!9012 = !DILocation(line: 580, column: 74, scope: !9008)
!9013 = !DILocalVariable(name: "ep", scope: !9008, file: !3, line: 582, type: !4485)
!9014 = !DILocation(line: 582, column: 21, scope: !9008)
!9015 = !DILocalVariable(name: "req", scope: !9008, file: !3, line: 583, type: !4470)
!9016 = !DILocation(line: 583, column: 26, scope: !9008)
!9017 = !DILocalVariable(name: "__mptr", scope: !9018, file: !3, line: 585, type: !136)
!9018 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 585, column: 7)
!9019 = !DILocation(line: 585, column: 7, scope: !9018)
!9020 = !DILocation(line: 585, column: 7, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 585, column: 7)
!9022 = !DILocation(line: 585, column: 5, scope: !9008)
!9023 = !DILocation(line: 586, column: 7, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 586, column: 6)
!9025 = !DILocation(line: 586, column: 11, scope: !9024)
!9026 = !DILocation(line: 586, column: 15, scope: !9024)
!9027 = !DILocation(line: 586, column: 6, scope: !9008)
!9028 = !DILocation(line: 587, column: 3, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 586, column: 21)
!9030 = !DILocation(line: 589, column: 3, scope: !9029)
!9031 = !DILocalVariable(name: "__mptr", scope: !9032, file: !3, line: 592, type: !136)
!9032 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 592, column: 8)
!9033 = !DILocation(line: 592, column: 8, scope: !9032)
!9034 = !DILocation(line: 592, column: 8, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9032, file: !3, line: 592, column: 8)
!9036 = !DILocation(line: 592, column: 6, scope: !9008)
!9037 = !DILocalVariable(name: "__ret_warn_on", scope: !9038, file: !3, line: 593, type: !330)
!9038 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 593, column: 2)
!9039 = !DILocation(line: 593, column: 2, scope: !9038)
!9040 = !DILocation(line: 593, column: 2, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9038, file: !3, line: 593, column: 2)
!9042 = !DILocation(line: 593, column: 2, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9041, file: !3, line: 593, column: 2)
!9044 = !DILocation(line: 593, column: 2, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 593, column: 2)
!9046 = !DILocation(line: 593, column: 2, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 593, column: 2)
!9048 = !{i32 -2141450400, i32 -2141450371, i32 -2141450325, i32 -2141450267, i32 -2141450213, i32 -2141450159, i32 -2141450104, i32 -2141450073}
!9049 = !DILocation(line: 593, column: 2, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 593, column: 2)
!9051 = !{i32 -2141449659, i32 -2141449652, i32 -2141449600, i32 -2141449569, i32 -2141449539}
!9052 = !DILocation(line: 593, column: 2, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 593, column: 2)
!9054 = !DILocation(line: 594, column: 6, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 594, column: 6)
!9056 = !DILocation(line: 594, column: 11, scope: !9055)
!9057 = !DILocation(line: 594, column: 6, scope: !9008)
!9058 = !DILocation(line: 595, column: 17, scope: !9055)
!9059 = !DILocation(line: 595, column: 21, scope: !9055)
!9060 = !DILocation(line: 595, column: 26, scope: !9055)
!9061 = !DILocation(line: 595, column: 36, scope: !9055)
!9062 = !DILocation(line: 595, column: 41, scope: !9055)
!9063 = !DILocation(line: 595, column: 45, scope: !9055)
!9064 = !DILocation(line: 595, column: 50, scope: !9055)
!9065 = !DILocation(line: 595, column: 3, scope: !9055)
!9066 = !DILocation(line: 596, column: 8, scope: !9008)
!9067 = !DILocation(line: 596, column: 2, scope: !9008)
!9068 = !DILocation(line: 597, column: 1, scope: !9008)
!9069 = distinct !DISubprogram(name: "net2280_queue", scope: !3, file: !3, line: 985, type: !4052, scopeLine: 986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!9070 = !DILocation(line: 407, column: 64, scope: !5735, inlinedAt: !9071)
!9071 = distinct !DILocation(line: 1114, column: 2, scope: !9069)
!9072 = !DILocation(line: 407, column: 84, scope: !5735, inlinedAt: !9071)
!9073 = !DILocation(line: 327, column: 67, scope: !4662, inlinedAt: !9074)
!9074 = distinct !DILocation(line: 1034, column: 2, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 1034, column: 2)
!9076 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 1034, column: 2)
!9077 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 1034, column: 2)
!9078 = distinct !DILexicalBlock(scope: !9079, file: !3, line: 1034, column: 2)
!9079 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1034, column: 2)
!9080 = !DILocalVariable(name: "_ep", arg: 1, scope: !9069, file: !3, line: 985, type: !3978)
!9081 = !DILocation(line: 985, column: 30, scope: !9069)
!9082 = !DILocalVariable(name: "_req", arg: 2, scope: !9069, file: !3, line: 985, type: !4016)
!9083 = !DILocation(line: 985, column: 55, scope: !9069)
!9084 = !DILocalVariable(name: "gfp_flags", arg: 3, scope: !9069, file: !3, line: 985, type: !137)
!9085 = !DILocation(line: 985, column: 67, scope: !9069)
!9086 = !DILocalVariable(name: "req", scope: !9069, file: !3, line: 987, type: !4470)
!9087 = !DILocation(line: 987, column: 26, scope: !9069)
!9088 = !DILocalVariable(name: "ep", scope: !9069, file: !3, line: 988, type: !4485)
!9089 = !DILocation(line: 988, column: 21, scope: !9069)
!9090 = !DILocalVariable(name: "dev", scope: !9069, file: !3, line: 989, type: !284)
!9091 = !DILocation(line: 989, column: 19, scope: !9069)
!9092 = !DILocalVariable(name: "flags", scope: !9069, file: !3, line: 990, type: !347)
!9093 = !DILocation(line: 990, column: 17, scope: !9069)
!9094 = !DILocalVariable(name: "ret", scope: !9069, file: !3, line: 991, type: !330)
!9095 = !DILocation(line: 991, column: 6, scope: !9069)
!9096 = !DILocalVariable(name: "__mptr", scope: !9097, file: !3, line: 996, type: !136)
!9097 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 996, column: 7)
!9098 = !DILocation(line: 996, column: 7, scope: !9097)
!9099 = !DILocation(line: 996, column: 7, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 996, column: 7)
!9101 = !DILocation(line: 996, column: 5, scope: !9069)
!9102 = !DILocation(line: 997, column: 7, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 997, column: 6)
!9104 = !DILocation(line: 997, column: 11, scope: !9103)
!9105 = !DILocation(line: 997, column: 16, scope: !9103)
!9106 = !DILocation(line: 997, column: 20, scope: !9103)
!9107 = !DILocation(line: 997, column: 25, scope: !9103)
!9108 = !DILocation(line: 997, column: 28, scope: !9103)
!9109 = !DILocation(line: 997, column: 32, scope: !9103)
!9110 = !DILocation(line: 997, column: 36, scope: !9103)
!9111 = !DILocation(line: 997, column: 6, scope: !9069)
!9112 = !DILocation(line: 998, column: 3, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 997, column: 43)
!9114 = !DILocation(line: 999, column: 3, scope: !9113)
!9115 = !DILocalVariable(name: "__mptr", scope: !9116, file: !3, line: 1001, type: !136)
!9116 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1001, column: 8)
!9117 = !DILocation(line: 1001, column: 8, scope: !9116)
!9118 = !DILocation(line: 1001, column: 8, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9116, file: !3, line: 1001, column: 8)
!9120 = !DILocation(line: 1001, column: 6, scope: !9069)
!9121 = !DILocation(line: 1002, column: 7, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1002, column: 6)
!9123 = !DILocation(line: 1002, column: 12, scope: !9122)
!9124 = !DILocation(line: 1002, column: 16, scope: !9122)
!9125 = !DILocation(line: 1002, column: 22, scope: !9122)
!9126 = !DILocation(line: 1002, column: 31, scope: !9122)
!9127 = !DILocation(line: 1002, column: 35, scope: !9122)
!9128 = !DILocation(line: 1002, column: 41, scope: !9122)
!9129 = !DILocation(line: 1002, column: 45, scope: !9122)
!9130 = !DILocation(line: 1003, column: 18, scope: !9122)
!9131 = !DILocation(line: 1003, column: 23, scope: !9122)
!9132 = !DILocation(line: 1003, column: 6, scope: !9122)
!9133 = !DILocation(line: 1002, column: 6, scope: !9069)
!9134 = !DILocation(line: 1004, column: 7, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 1003, column: 31)
!9136 = !DILocation(line: 1005, column: 3, scope: !9135)
!9137 = !DILocation(line: 1007, column: 6, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1007, column: 6)
!9139 = !DILocation(line: 1007, column: 12, scope: !9138)
!9140 = !DILocation(line: 1007, column: 19, scope: !9138)
!9141 = !DILocation(line: 1007, column: 6, scope: !9069)
!9142 = !DILocation(line: 1008, column: 7, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9138, file: !3, line: 1007, column: 49)
!9144 = !DILocation(line: 1009, column: 3, scope: !9143)
!9145 = !DILocation(line: 1011, column: 8, scope: !9069)
!9146 = !DILocation(line: 1011, column: 12, scope: !9069)
!9147 = !DILocation(line: 1011, column: 6, scope: !9069)
!9148 = !DILocation(line: 1012, column: 7, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1012, column: 6)
!9150 = !DILocation(line: 1012, column: 12, scope: !9149)
!9151 = !DILocation(line: 1012, column: 19, scope: !9149)
!9152 = !DILocation(line: 1012, column: 22, scope: !9149)
!9153 = !DILocation(line: 1012, column: 27, scope: !9149)
!9154 = !DILocation(line: 1012, column: 34, scope: !9149)
!9155 = !DILocation(line: 1012, column: 40, scope: !9149)
!9156 = !DILocation(line: 1012, column: 6, scope: !9069)
!9157 = !DILocation(line: 1013, column: 7, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 1012, column: 62)
!9159 = !DILocation(line: 1014, column: 3, scope: !9158)
!9160 = !DILocation(line: 1018, column: 6, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1018, column: 6)
!9162 = !DILocation(line: 1018, column: 10, scope: !9161)
!9163 = !DILocation(line: 1018, column: 14, scope: !9161)
!9164 = !DILocation(line: 1018, column: 17, scope: !9161)
!9165 = !DILocation(line: 1018, column: 23, scope: !9161)
!9166 = !DILocation(line: 1018, column: 30, scope: !9161)
!9167 = !DILocation(line: 1018, column: 6, scope: !9069)
!9168 = !DILocation(line: 1019, column: 7, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 1018, column: 36)
!9170 = !DILocation(line: 1020, column: 3, scope: !9169)
!9171 = !DILocation(line: 1024, column: 6, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1024, column: 6)
!9173 = !DILocation(line: 1024, column: 10, scope: !9172)
!9174 = !DILocation(line: 1024, column: 6, scope: !9069)
!9175 = !DILocation(line: 1025, column: 33, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 1024, column: 15)
!9177 = !DILocation(line: 1025, column: 38, scope: !9176)
!9178 = !DILocation(line: 1025, column: 46, scope: !9176)
!9179 = !DILocation(line: 1026, column: 5, scope: !9176)
!9180 = !DILocation(line: 1026, column: 9, scope: !9176)
!9181 = !DILocation(line: 1025, column: 9, scope: !9176)
!9182 = !DILocation(line: 1025, column: 7, scope: !9176)
!9183 = !DILocation(line: 1027, column: 7, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9176, file: !3, line: 1027, column: 7)
!9185 = !DILocation(line: 1027, column: 7, scope: !9176)
!9186 = !DILocation(line: 1028, column: 4, scope: !9184)
!9187 = !DILocation(line: 1029, column: 2, scope: !9176)
!9188 = !DILocation(line: 1034, column: 2, scope: !9069)
!9189 = !DILocation(line: 1034, column: 2, scope: !9079)
!9190 = !DILocalVariable(name: "__dummy", scope: !9191, file: !3, line: 1034, type: !347)
!9191 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 1034, column: 2)
!9192 = !DILocation(line: 1034, column: 2, scope: !9191)
!9193 = !DILocalVariable(name: "__dummy2", scope: !9191, file: !3, line: 1034, type: !347)
!9194 = !DILocation(line: 1034, column: 2, scope: !9078)
!9195 = !DILocation(line: 1034, column: 2, scope: !9077)
!9196 = !DILocation(line: 1034, column: 2, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 1034, column: 2)
!9198 = !DILocalVariable(name: "__dummy", scope: !9199, file: !3, line: 1034, type: !347)
!9199 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 1034, column: 2)
!9200 = distinct !DILexicalBlock(scope: !9197, file: !3, line: 1034, column: 2)
!9201 = !DILocation(line: 1034, column: 2, scope: !9199)
!9202 = !DILocalVariable(name: "__dummy2", scope: !9199, file: !3, line: 1034, type: !347)
!9203 = !DILocation(line: 1034, column: 2, scope: !9200)
!9204 = !DILocation(line: 1034, column: 2, scope: !9076)
!9205 = !{i32 -2141433543}
!9206 = !DILocation(line: 1034, column: 2, scope: !9075)
!9207 = !DILocation(line: 329, column: 10, scope: !4662, inlinedAt: !9074)
!9208 = !DILocation(line: 329, column: 16, scope: !4662, inlinedAt: !9074)
!9209 = !DILocation(line: 1036, column: 2, scope: !9069)
!9210 = !DILocation(line: 1036, column: 8, scope: !9069)
!9211 = !DILocation(line: 1036, column: 15, scope: !9069)
!9212 = !DILocation(line: 1037, column: 2, scope: !9069)
!9213 = !DILocation(line: 1037, column: 8, scope: !9069)
!9214 = !DILocation(line: 1037, column: 15, scope: !9069)
!9215 = !DILocation(line: 1040, column: 19, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1040, column: 7)
!9217 = !DILocation(line: 1040, column: 23, scope: !9216)
!9218 = !DILocation(line: 1040, column: 7, scope: !9216)
!9219 = !DILocation(line: 1040, column: 30, scope: !9216)
!9220 = !DILocation(line: 1040, column: 34, scope: !9216)
!9221 = !DILocation(line: 1040, column: 38, scope: !9216)
!9222 = !DILocation(line: 1040, column: 46, scope: !9216)
!9223 = !DILocation(line: 1041, column: 6, scope: !9216)
!9224 = !DILocation(line: 1041, column: 11, scope: !9216)
!9225 = !DILocation(line: 1041, column: 18, scope: !9216)
!9226 = !DILocation(line: 1041, column: 30, scope: !9216)
!9227 = !DILocation(line: 1041, column: 33, scope: !9216)
!9228 = !DILocation(line: 1041, column: 37, scope: !9216)
!9229 = !DILocation(line: 1041, column: 41, scope: !9216)
!9230 = !DILocation(line: 1042, column: 13, scope: !9216)
!9231 = !DILocation(line: 1042, column: 17, scope: !9216)
!9232 = !DILocation(line: 1042, column: 23, scope: !9216)
!9233 = !DILocation(line: 1042, column: 12, scope: !9216)
!9234 = !DILocation(line: 1042, column: 6, scope: !9216)
!9235 = !DILocation(line: 1042, column: 31, scope: !9216)
!9236 = !DILocation(line: 1040, column: 7, scope: !9069)
!9237 = !DILocation(line: 1045, column: 7, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 1045, column: 7)
!9239 = distinct !DILexicalBlock(scope: !9216, file: !3, line: 1042, column: 61)
!9240 = !DILocation(line: 1045, column: 11, scope: !9238)
!9241 = !DILocation(line: 1045, column: 7, scope: !9239)
!9242 = !DILocation(line: 1046, column: 14, scope: !9238)
!9243 = !DILocation(line: 1046, column: 18, scope: !9238)
!9244 = !DILocation(line: 1046, column: 4, scope: !9238)
!9245 = !DILocation(line: 1049, column: 8, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 1049, column: 8)
!9247 = distinct !DILexicalBlock(scope: !9238, file: !3, line: 1047, column: 8)
!9248 = !DILocation(line: 1049, column: 12, scope: !9246)
!9249 = !DILocation(line: 1049, column: 16, scope: !9246)
!9250 = !DILocation(line: 1049, column: 21, scope: !9246)
!9251 = !DILocation(line: 1049, column: 24, scope: !9246)
!9252 = !DILocation(line: 1049, column: 30, scope: !9246)
!9253 = !DILocation(line: 1049, column: 37, scope: !9246)
!9254 = !DILocation(line: 1049, column: 8, scope: !9247)
!9255 = !DILocation(line: 1050, column: 18, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 1049, column: 43)
!9257 = !DILocation(line: 1050, column: 5, scope: !9256)
!9258 = !DILocation(line: 1051, column: 10, scope: !9256)
!9259 = !DILocation(line: 1051, column: 14, scope: !9256)
!9260 = !DILocation(line: 1051, column: 5, scope: !9256)
!9261 = !DILocation(line: 1053, column: 5, scope: !9256)
!9262 = !DILocation(line: 1057, column: 8, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 1057, column: 8)
!9264 = !DILocation(line: 1057, column: 12, scope: !9263)
!9265 = !DILocation(line: 1057, column: 8, scope: !9247)
!9266 = !DILocation(line: 1058, column: 16, scope: !9263)
!9267 = !DILocation(line: 1058, column: 20, scope: !9263)
!9268 = !DILocation(line: 1058, column: 5, scope: !9263)
!9269 = !DILocalVariable(name: "s", scope: !9270, file: !3, line: 1060, type: !144)
!9270 = distinct !DILexicalBlock(scope: !9263, file: !3, line: 1059, column: 9)
!9271 = !DILocation(line: 1060, column: 9, scope: !9270)
!9272 = !DILocation(line: 1063, column: 16, scope: !9270)
!9273 = !DILocation(line: 1063, column: 20, scope: !9270)
!9274 = !DILocation(line: 1063, column: 26, scope: !9270)
!9275 = !DILocation(line: 1063, column: 15, scope: !9270)
!9276 = !DILocation(line: 1063, column: 9, scope: !9270)
!9277 = !DILocation(line: 1063, column: 7, scope: !9270)
!9278 = !DILocation(line: 1064, column: 10, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 1064, column: 9)
!9280 = !DILocation(line: 1064, column: 12, scope: !9279)
!9281 = !DILocation(line: 1064, column: 31, scope: !9279)
!9282 = !DILocation(line: 1064, column: 9, scope: !9270)
!9283 = !DILocation(line: 1071, column: 20, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 1071, column: 10)
!9285 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 1064, column: 37)
!9286 = !DILocation(line: 1071, column: 24, scope: !9284)
!9287 = !DILocation(line: 1071, column: 10, scope: !9284)
!9288 = !DILocation(line: 1071, column: 29, scope: !9284)
!9289 = !DILocation(line: 1072, column: 8, scope: !9284)
!9290 = !DILocation(line: 1072, column: 12, scope: !9284)
!9291 = !DILocation(line: 1072, column: 16, scope: !9284)
!9292 = !DILocation(line: 1071, column: 10, scope: !9285)
!9293 = !DILocation(line: 1073, column: 12, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 1072, column: 22)
!9295 = !DILocation(line: 1073, column: 16, scope: !9294)
!9296 = !DILocation(line: 1073, column: 7, scope: !9294)
!9297 = !DILocation(line: 1074, column: 20, scope: !9294)
!9298 = !DILocation(line: 1074, column: 7, scope: !9294)
!9299 = !DILocation(line: 1076, column: 11, scope: !9294)
!9300 = !DILocation(line: 1077, column: 6, scope: !9294)
!9301 = !DILocation(line: 1077, column: 27, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 1077, column: 17)
!9303 = !DILocation(line: 1077, column: 31, scope: !9302)
!9304 = !DILocation(line: 1077, column: 17, scope: !9302)
!9305 = !DILocation(line: 1077, column: 36, scope: !9302)
!9306 = !DILocation(line: 1078, column: 8, scope: !9302)
!9307 = !DILocation(line: 1078, column: 12, scope: !9302)
!9308 = !DILocation(line: 1078, column: 16, scope: !9302)
!9309 = !DILocation(line: 1077, column: 17, scope: !9284)
!9310 = !DILocation(line: 1079, column: 12, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9302, file: !3, line: 1078, column: 22)
!9312 = !DILocation(line: 1079, column: 16, scope: !9311)
!9313 = !DILocation(line: 1079, column: 7, scope: !9311)
!9314 = !DILocation(line: 1080, column: 11, scope: !9311)
!9315 = !DILocation(line: 1081, column: 6, scope: !9311)
!9316 = !DILocation(line: 1082, column: 18, scope: !9302)
!9317 = !DILocation(line: 1082, column: 22, scope: !9302)
!9318 = !DILocation(line: 1082, column: 28, scope: !9302)
!9319 = !DILocation(line: 1082, column: 17, scope: !9302)
!9320 = !DILocation(line: 1082, column: 11, scope: !9302)
!9321 = !DILocation(line: 1082, column: 9, scope: !9302)
!9322 = !DILocation(line: 1083, column: 5, scope: !9285)
!9323 = !DILocation(line: 1086, column: 9, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 1086, column: 9)
!9325 = !DILocation(line: 1086, column: 13, scope: !9324)
!9326 = !DILocation(line: 1086, column: 17, scope: !9324)
!9327 = !DILocation(line: 1086, column: 19, scope: !9324)
!9328 = !DILocation(line: 1086, column: 9, scope: !9270)
!9329 = !DILocation(line: 1088, column: 9, scope: !9324)
!9330 = !DILocation(line: 1088, column: 13, scope: !9324)
!9331 = !DILocation(line: 1088, column: 19, scope: !9324)
!9332 = !DILocation(line: 1088, column: 8, scope: !9324)
!9333 = !DILocation(line: 1087, column: 6, scope: !9324)
!9334 = !DILocation(line: 1092, column: 2, scope: !9239)
!9335 = !DILocation(line: 1092, column: 13, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9216, file: !3, line: 1092, column: 13)
!9337 = !DILocation(line: 1092, column: 17, scope: !9336)
!9338 = !DILocation(line: 1092, column: 13, scope: !9216)
!9339 = !DILocalVariable(name: "valid", scope: !9340, file: !3, line: 1093, type: !330)
!9340 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 1092, column: 22)
!9341 = !DILocation(line: 1093, column: 7, scope: !9340)
!9342 = !DILocation(line: 1095, column: 7, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9340, file: !3, line: 1095, column: 7)
!9344 = !DILocation(line: 1095, column: 11, scope: !9343)
!9345 = !DILocation(line: 1095, column: 7, scope: !9340)
!9346 = !DILocalVariable(name: "expect", scope: !9347, file: !3, line: 1096, type: !330)
!9347 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 1095, column: 18)
!9348 = !DILocation(line: 1096, column: 8, scope: !9347)
!9349 = !DILocation(line: 1101, column: 13, scope: !9347)
!9350 = !DILocation(line: 1101, column: 11, scope: !9347)
!9351 = !DILocation(line: 1103, column: 8, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 1103, column: 8)
!9353 = !DILocation(line: 1103, column: 18, scope: !9352)
!9354 = !DILocation(line: 1103, column: 22, scope: !9352)
!9355 = !DILocation(line: 1103, column: 15, scope: !9352)
!9356 = !DILocation(line: 1103, column: 8, scope: !9347)
!9357 = !DILocation(line: 1104, column: 11, scope: !9352)
!9358 = !DILocation(line: 1104, column: 5, scope: !9352)
!9359 = !DILocation(line: 1105, column: 3, scope: !9347)
!9360 = !DILocation(line: 1106, column: 13, scope: !9340)
!9361 = !DILocation(line: 1106, column: 17, scope: !9340)
!9362 = !DILocation(line: 1106, column: 22, scope: !9340)
!9363 = !DILocation(line: 1106, column: 3, scope: !9340)
!9364 = !DILocation(line: 1108, column: 2, scope: !9340)
!9365 = !DILocation(line: 1110, column: 2, scope: !9069)
!9366 = !DILocation(line: 1110, column: 6, scope: !9069)
!9367 = !DILocation(line: 1110, column: 16, scope: !9069)
!9368 = !DILocation(line: 1111, column: 6, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1111, column: 6)
!9370 = !DILocation(line: 1111, column: 6, scope: !9069)
!9371 = !DILocation(line: 1112, column: 18, scope: !9369)
!9372 = !DILocation(line: 1112, column: 23, scope: !9369)
!9373 = !DILocation(line: 1112, column: 31, scope: !9369)
!9374 = !DILocation(line: 1112, column: 35, scope: !9369)
!9375 = !DILocation(line: 1112, column: 3, scope: !9369)
!9376 = !DILabel(scope: !9069, name: "done", file: !3, line: 1113)
!9377 = !DILocation(line: 1113, column: 1, scope: !9069)
!9378 = !DILocation(line: 1114, column: 26, scope: !9069)
!9379 = !DILocation(line: 1114, column: 31, scope: !9069)
!9380 = !DILocation(line: 1114, column: 37, scope: !9069)
!9381 = !DILocation(line: 409, column: 2, scope: !5797, inlinedAt: !9071)
!9382 = !DILocation(line: 409, column: 2, scope: !5802, inlinedAt: !9071)
!9383 = !DILocation(line: 409, column: 2, scope: !5803, inlinedAt: !9071)
!9384 = !DILocation(line: 409, column: 2, scope: !5810, inlinedAt: !9071)
!9385 = !DILocation(line: 409, column: 2, scope: !5813, inlinedAt: !9071)
!9386 = !DILocation(line: 1117, column: 9, scope: !9069)
!9387 = !DILocation(line: 1117, column: 2, scope: !9069)
!9388 = !DILabel(scope: !9069, name: "print_err", file: !3, line: 1119)
!9389 = !DILocation(line: 1119, column: 1, scope: !9069)
!9390 = !DILocation(line: 1120, column: 2, scope: !9069)
!9391 = !DILocation(line: 1121, column: 9, scope: !9069)
!9392 = !DILocation(line: 1121, column: 2, scope: !9069)
!9393 = !DILocation(line: 1122, column: 1, scope: !9069)
!9394 = distinct !DISubprogram(name: "net2280_dequeue", scope: !3, file: !3, line: 1240, type: !4056, scopeLine: 1241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!9395 = !DILocation(line: 407, column: 64, scope: !5735, inlinedAt: !9396)
!9396 = distinct !DILocation(line: 1275, column: 3, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9398, file: !3, line: 1273, column: 25)
!9398 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 1273, column: 6)
!9399 = !DILocation(line: 407, column: 84, scope: !5735, inlinedAt: !9396)
!9400 = !DILocation(line: 407, column: 64, scope: !5735, inlinedAt: !9401)
!9401 = distinct !DILocation(line: 1318, column: 2, scope: !9394)
!9402 = !DILocation(line: 407, column: 84, scope: !5735, inlinedAt: !9401)
!9403 = !DILocation(line: 327, column: 67, scope: !4662, inlinedAt: !9404)
!9404 = distinct !DILocation(line: 1255, column: 2, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 1255, column: 2)
!9406 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 1255, column: 2)
!9407 = distinct !DILexicalBlock(scope: !9408, file: !3, line: 1255, column: 2)
!9408 = distinct !DILexicalBlock(scope: !9409, file: !3, line: 1255, column: 2)
!9409 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 1255, column: 2)
!9410 = !DILocalVariable(name: "_ep", arg: 1, scope: !9394, file: !3, line: 1240, type: !3978)
!9411 = !DILocation(line: 1240, column: 43, scope: !9394)
!9412 = !DILocalVariable(name: "_req", arg: 2, scope: !9394, file: !3, line: 1240, type: !4016)
!9413 = !DILocation(line: 1240, column: 68, scope: !9394)
!9414 = !DILocalVariable(name: "ep", scope: !9394, file: !3, line: 1242, type: !4485)
!9415 = !DILocation(line: 1242, column: 21, scope: !9394)
!9416 = !DILocalVariable(name: "req", scope: !9394, file: !3, line: 1243, type: !4470)
!9417 = !DILocation(line: 1243, column: 26, scope: !9394)
!9418 = !DILocalVariable(name: "flags", scope: !9394, file: !3, line: 1244, type: !347)
!9419 = !DILocation(line: 1244, column: 17, scope: !9394)
!9420 = !DILocalVariable(name: "dmactl", scope: !9394, file: !3, line: 1245, type: !144)
!9421 = !DILocation(line: 1245, column: 8, scope: !9394)
!9422 = !DILocalVariable(name: "stopped", scope: !9394, file: !3, line: 1246, type: !330)
!9423 = !DILocation(line: 1246, column: 8, scope: !9394)
!9424 = !DILocalVariable(name: "__mptr", scope: !9425, file: !3, line: 1248, type: !136)
!9425 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 1248, column: 7)
!9426 = !DILocation(line: 1248, column: 7, scope: !9425)
!9427 = !DILocation(line: 1248, column: 7, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9425, file: !3, line: 1248, column: 7)
!9429 = !DILocation(line: 1248, column: 5, scope: !9394)
!9430 = !DILocation(line: 1249, column: 7, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 1249, column: 6)
!9432 = !DILocation(line: 1249, column: 11, scope: !9431)
!9433 = !DILocation(line: 1249, column: 16, scope: !9431)
!9434 = !DILocation(line: 1249, column: 20, scope: !9431)
!9435 = !DILocation(line: 1249, column: 25, scope: !9431)
!9436 = !DILocation(line: 1249, column: 28, scope: !9431)
!9437 = !DILocation(line: 1249, column: 32, scope: !9431)
!9438 = !DILocation(line: 1249, column: 36, scope: !9431)
!9439 = !DILocation(line: 1249, column: 42, scope: !9431)
!9440 = !DILocation(line: 1249, column: 46, scope: !9431)
!9441 = !DILocation(line: 1249, column: 6, scope: !9394)
!9442 = !DILocation(line: 1250, column: 3, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9431, file: !3, line: 1249, column: 52)
!9444 = !DILocation(line: 1252, column: 3, scope: !9443)
!9445 = !DILocation(line: 1255, column: 2, scope: !9394)
!9446 = !DILocation(line: 1255, column: 2, scope: !9409)
!9447 = !DILocalVariable(name: "__dummy", scope: !9448, file: !3, line: 1255, type: !347)
!9448 = distinct !DILexicalBlock(scope: !9408, file: !3, line: 1255, column: 2)
!9449 = !DILocation(line: 1255, column: 2, scope: !9448)
!9450 = !DILocalVariable(name: "__dummy2", scope: !9448, file: !3, line: 1255, type: !347)
!9451 = !DILocation(line: 1255, column: 2, scope: !9408)
!9452 = !DILocation(line: 1255, column: 2, scope: !9407)
!9453 = !DILocation(line: 1255, column: 2, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 1255, column: 2)
!9455 = !DILocalVariable(name: "__dummy", scope: !9456, file: !3, line: 1255, type: !347)
!9456 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 1255, column: 2)
!9457 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 1255, column: 2)
!9458 = !DILocation(line: 1255, column: 2, scope: !9456)
!9459 = !DILocalVariable(name: "__dummy2", scope: !9456, file: !3, line: 1255, type: !347)
!9460 = !DILocation(line: 1255, column: 2, scope: !9457)
!9461 = !DILocation(line: 1255, column: 2, scope: !9406)
!9462 = !{i32 -2141423629}
!9463 = !DILocation(line: 1255, column: 2, scope: !9405)
!9464 = !DILocation(line: 329, column: 10, scope: !4662, inlinedAt: !9404)
!9465 = !DILocation(line: 329, column: 16, scope: !4662, inlinedAt: !9404)
!9466 = !DILocation(line: 1256, column: 12, scope: !9394)
!9467 = !DILocation(line: 1256, column: 16, scope: !9394)
!9468 = !DILocation(line: 1256, column: 10, scope: !9394)
!9469 = !DILocation(line: 1259, column: 9, scope: !9394)
!9470 = !DILocation(line: 1260, column: 2, scope: !9394)
!9471 = !DILocation(line: 1260, column: 6, scope: !9394)
!9472 = !DILocation(line: 1260, column: 14, scope: !9394)
!9473 = !DILocation(line: 1261, column: 6, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 1261, column: 6)
!9475 = !DILocation(line: 1261, column: 10, scope: !9474)
!9476 = !DILocation(line: 1261, column: 6, scope: !9394)
!9477 = !DILocation(line: 1262, column: 19, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9474, file: !3, line: 1261, column: 15)
!9479 = !DILocation(line: 1262, column: 23, scope: !9478)
!9480 = !DILocation(line: 1262, column: 28, scope: !9478)
!9481 = !DILocation(line: 1262, column: 18, scope: !9478)
!9482 = !DILocation(line: 1262, column: 12, scope: !9478)
!9483 = !DILocation(line: 1262, column: 10, scope: !9478)
!9484 = !DILocation(line: 1264, column: 12, scope: !9478)
!9485 = !DILocation(line: 1264, column: 16, scope: !9478)
!9486 = !DILocation(line: 1264, column: 3, scope: !9478)
!9487 = !DILocation(line: 1265, column: 24, scope: !9478)
!9488 = !DILocation(line: 1265, column: 3, scope: !9478)
!9489 = !DILocation(line: 1266, column: 2, scope: !9478)
!9490 = !DILocalVariable(name: "__mptr", scope: !9491, file: !3, line: 1269, type: !136)
!9491 = distinct !DILexicalBlock(scope: !9492, file: !3, line: 1269, column: 2)
!9492 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 1269, column: 2)
!9493 = !DILocation(line: 1269, column: 2, scope: !9491)
!9494 = !DILocation(line: 1269, column: 2, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9491, file: !3, line: 1269, column: 2)
!9496 = !DILocation(line: 1269, column: 2, scope: !9492)
!9497 = !DILocation(line: 1269, column: 2, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9492, file: !3, line: 1269, column: 2)
!9499 = !DILocation(line: 1270, column: 8, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9501, file: !3, line: 1270, column: 7)
!9501 = distinct !DILexicalBlock(scope: !9498, file: !3, line: 1269, column: 46)
!9502 = !DILocation(line: 1270, column: 13, scope: !9500)
!9503 = !DILocation(line: 1270, column: 20, scope: !9500)
!9504 = !DILocation(line: 1270, column: 17, scope: !9500)
!9505 = !DILocation(line: 1270, column: 7, scope: !9501)
!9506 = !DILocation(line: 1271, column: 4, scope: !9500)
!9507 = !DILocation(line: 1272, column: 2, scope: !9501)
!9508 = !DILocalVariable(name: "__mptr", scope: !9509, file: !3, line: 1269, type: !136)
!9509 = distinct !DILexicalBlock(scope: !9498, file: !3, line: 1269, column: 2)
!9510 = !DILocation(line: 1269, column: 2, scope: !9509)
!9511 = !DILocation(line: 1269, column: 2, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 1269, column: 2)
!9513 = distinct !{!9513, !9496, !9514}
!9514 = !DILocation(line: 1272, column: 2, scope: !9492)
!9515 = !DILocation(line: 1273, column: 7, scope: !9398)
!9516 = !DILocation(line: 1273, column: 12, scope: !9398)
!9517 = !DILocation(line: 1273, column: 19, scope: !9398)
!9518 = !DILocation(line: 1273, column: 16, scope: !9398)
!9519 = !DILocation(line: 1273, column: 6, scope: !9394)
!9520 = !DILocation(line: 1274, column: 17, scope: !9397)
!9521 = !DILocation(line: 1274, column: 3, scope: !9397)
!9522 = !DILocation(line: 1274, column: 7, scope: !9397)
!9523 = !DILocation(line: 1274, column: 15, scope: !9397)
!9524 = !DILocation(line: 1275, column: 27, scope: !9397)
!9525 = !DILocation(line: 1275, column: 31, scope: !9397)
!9526 = !DILocation(line: 1275, column: 36, scope: !9397)
!9527 = !DILocation(line: 1275, column: 42, scope: !9397)
!9528 = !DILocation(line: 409, column: 2, scope: !5797, inlinedAt: !9396)
!9529 = !DILocation(line: 409, column: 2, scope: !5802, inlinedAt: !9396)
!9530 = !DILocation(line: 409, column: 2, scope: !5803, inlinedAt: !9396)
!9531 = !DILocation(line: 409, column: 2, scope: !5810, inlinedAt: !9396)
!9532 = !DILocation(line: 409, column: 2, scope: !5813, inlinedAt: !9396)
!9533 = !DILocation(line: 1277, column: 3, scope: !9397)
!9534 = !DILocation(line: 1281, column: 6, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 1281, column: 6)
!9536 = !DILocation(line: 1281, column: 10, scope: !9535)
!9537 = !DILocation(line: 1281, column: 16, scope: !9535)
!9538 = !DILocation(line: 1281, column: 25, scope: !9535)
!9539 = !DILocation(line: 1281, column: 30, scope: !9535)
!9540 = !DILocation(line: 1281, column: 21, scope: !9535)
!9541 = !DILocation(line: 1281, column: 6, scope: !9394)
!9542 = !DILocation(line: 1282, column: 7, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9544, file: !3, line: 1282, column: 7)
!9544 = distinct !DILexicalBlock(scope: !9535, file: !3, line: 1281, column: 37)
!9545 = !DILocation(line: 1282, column: 11, scope: !9543)
!9546 = !DILocation(line: 1282, column: 7, scope: !9544)
!9547 = !DILocation(line: 1284, column: 4, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 1282, column: 16)
!9549 = !DILocation(line: 1284, column: 10, scope: !9548)
!9550 = !DILocation(line: 1284, column: 17, scope: !9548)
!9551 = !DILocation(line: 1285, column: 14, scope: !9548)
!9552 = !DILocation(line: 1285, column: 4, scope: !9548)
!9553 = !DILocation(line: 1286, column: 8, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 1286, column: 8)
!9555 = !DILocation(line: 1286, column: 8, scope: !9548)
!9556 = !DILocation(line: 1288, column: 5, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9554, file: !3, line: 1286, column: 47)
!9558 = !DILocation(line: 1288, column: 10, scope: !9557)
!9559 = !DILocation(line: 1288, column: 14, scope: !9557)
!9560 = !DILocation(line: 1288, column: 23, scope: !9557)
!9561 = !DILocation(line: 1289, column: 14, scope: !9557)
!9562 = !DILocation(line: 1289, column: 18, scope: !9557)
!9563 = !DILocation(line: 1290, column: 13, scope: !9557)
!9564 = !DILocation(line: 1290, column: 17, scope: !9557)
!9565 = !DILocation(line: 1290, column: 22, scope: !9557)
!9566 = !DILocation(line: 1290, column: 12, scope: !9557)
!9567 = !DILocation(line: 1290, column: 6, scope: !9557)
!9568 = !DILocation(line: 1289, column: 5, scope: !9557)
!9569 = !DILocation(line: 1292, column: 4, scope: !9557)
!9570 = !DILocation(line: 1293, column: 3, scope: !9548)
!9571 = !DILocation(line: 1295, column: 9, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 1293, column: 10)
!9573 = !DILocation(line: 1295, column: 13, scope: !9572)
!9574 = !DILocation(line: 1295, column: 4, scope: !9572)
!9575 = !DILocation(line: 1297, column: 7, scope: !9544)
!9576 = !DILocation(line: 1298, column: 2, scope: !9544)
!9577 = !DILocation(line: 1300, column: 6, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 1300, column: 6)
!9579 = !DILocation(line: 1300, column: 6, scope: !9394)
!9580 = !DILocation(line: 1301, column: 8, scope: !9578)
!9581 = !DILocation(line: 1301, column: 12, scope: !9578)
!9582 = !DILocation(line: 1301, column: 3, scope: !9578)
!9583 = !DILocation(line: 1302, column: 16, scope: !9394)
!9584 = !DILocation(line: 1302, column: 2, scope: !9394)
!9585 = !DILocation(line: 1302, column: 6, scope: !9394)
!9586 = !DILocation(line: 1302, column: 14, scope: !9394)
!9587 = !DILocation(line: 1304, column: 6, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 1304, column: 6)
!9589 = !DILocation(line: 1304, column: 10, scope: !9588)
!9590 = !DILocation(line: 1304, column: 6, scope: !9394)
!9591 = !DILocation(line: 1306, column: 19, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 1306, column: 7)
!9593 = distinct !DILexicalBlock(scope: !9588, file: !3, line: 1304, column: 15)
!9594 = !DILocation(line: 1306, column: 23, scope: !9592)
!9595 = !DILocation(line: 1306, column: 7, scope: !9592)
!9596 = !DILocation(line: 1306, column: 7, scope: !9593)
!9597 = !DILocation(line: 1307, column: 13, scope: !9592)
!9598 = !DILocation(line: 1307, column: 17, scope: !9592)
!9599 = !DILocation(line: 1307, column: 4, scope: !9592)
!9600 = !DILocation(line: 1308, column: 13, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9592, file: !3, line: 1308, column: 12)
!9602 = !DILocation(line: 1308, column: 17, scope: !9601)
!9603 = !DILocation(line: 1308, column: 12, scope: !9592)
!9604 = !DILocation(line: 1310, column: 8, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 1310, column: 8)
!9606 = distinct !DILexicalBlock(scope: !9601, file: !3, line: 1308, column: 26)
!9607 = !DILocation(line: 1310, column: 8, scope: !9606)
!9608 = !DILocation(line: 1311, column: 12, scope: !9605)
!9609 = !DILocation(line: 1311, column: 21, scope: !9605)
!9610 = !DILocation(line: 1311, column: 25, scope: !9605)
!9611 = !DILocation(line: 1311, column: 30, scope: !9605)
!9612 = !DILocation(line: 1311, column: 20, scope: !9605)
!9613 = !DILocation(line: 1311, column: 5, scope: !9605)
!9614 = !DILocation(line: 1313, column: 15, scope: !9605)
!9615 = !DILocalVariable(name: "__mptr", scope: !9616, file: !3, line: 1313, type: !136)
!9616 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 1313, column: 19)
!9617 = !DILocation(line: 1313, column: 19, scope: !9616)
!9618 = !DILocation(line: 1313, column: 19, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 1313, column: 19)
!9620 = !DILocation(line: 1313, column: 5, scope: !9605)
!9621 = !DILocation(line: 1315, column: 3, scope: !9606)
!9622 = !DILocation(line: 1316, column: 2, scope: !9593)
!9623 = !DILocation(line: 1318, column: 26, scope: !9394)
!9624 = !DILocation(line: 1318, column: 30, scope: !9394)
!9625 = !DILocation(line: 1318, column: 35, scope: !9394)
!9626 = !DILocation(line: 1318, column: 41, scope: !9394)
!9627 = !DILocation(line: 409, column: 2, scope: !5797, inlinedAt: !9401)
!9628 = !DILocation(line: 409, column: 2, scope: !5802, inlinedAt: !9401)
!9629 = !DILocation(line: 409, column: 2, scope: !5803, inlinedAt: !9401)
!9630 = !DILocation(line: 409, column: 2, scope: !5810, inlinedAt: !9401)
!9631 = !DILocation(line: 409, column: 2, scope: !5813, inlinedAt: !9401)
!9632 = !DILocation(line: 1319, column: 2, scope: !9394)
!9633 = !DILocation(line: 1320, column: 1, scope: !9394)
!9634 = distinct !DISubprogram(name: "net2280_set_halt", scope: !3, file: !3, line: 1387, type: !4060, scopeLine: 1388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!9635 = !DILocalVariable(name: "_ep", arg: 1, scope: !9634, file: !3, line: 1387, type: !3978)
!9636 = !DILocation(line: 1387, column: 44, scope: !9634)
!9637 = !DILocalVariable(name: "value", arg: 2, scope: !9634, file: !3, line: 1387, type: !330)
!9638 = !DILocation(line: 1387, column: 53, scope: !9634)
!9639 = !DILocation(line: 1389, column: 36, scope: !9634)
!9640 = !DILocation(line: 1389, column: 41, scope: !9634)
!9641 = !DILocation(line: 1389, column: 9, scope: !9634)
!9642 = !DILocation(line: 1389, column: 2, scope: !9634)
!9643 = distinct !DISubprogram(name: "net2280_set_wedge", scope: !3, file: !3, line: 1392, type: !4006, scopeLine: 1393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!9644 = !DILocalVariable(name: "_ep", arg: 1, scope: !9643, file: !3, line: 1392, type: !3978)
!9645 = !DILocation(line: 1392, column: 45, scope: !9643)
!9646 = !DILocation(line: 1394, column: 7, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9643, file: !3, line: 1394, column: 6)
!9648 = !DILocation(line: 1394, column: 11, scope: !9647)
!9649 = !DILocation(line: 1394, column: 14, scope: !9647)
!9650 = !DILocation(line: 1394, column: 19, scope: !9647)
!9651 = !DILocation(line: 1394, column: 24, scope: !9647)
!9652 = !DILocation(line: 1394, column: 6, scope: !9643)
!9653 = !DILocation(line: 1395, column: 3, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9647, file: !3, line: 1394, column: 36)
!9655 = !DILocation(line: 1396, column: 3, scope: !9654)
!9656 = !DILocation(line: 1398, column: 36, scope: !9643)
!9657 = !DILocation(line: 1398, column: 9, scope: !9643)
!9658 = !DILocation(line: 1398, column: 2, scope: !9643)
!9659 = !DILocation(line: 1399, column: 1, scope: !9643)
!9660 = distinct !DISubprogram(name: "net2280_fifo_status", scope: !3, file: !3, line: 1401, type: !4006, scopeLine: 1402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!9661 = !DILocalVariable(name: "_ep", arg: 1, scope: !9660, file: !3, line: 1401, type: !3978)
!9662 = !DILocation(line: 1401, column: 47, scope: !9660)
!9663 = !DILocalVariable(name: "ep", scope: !9660, file: !3, line: 1403, type: !4485)
!9664 = !DILocation(line: 1403, column: 21, scope: !9660)
!9665 = !DILocalVariable(name: "avail", scope: !9660, file: !3, line: 1404, type: !144)
!9666 = !DILocation(line: 1404, column: 8, scope: !9660)
!9667 = !DILocalVariable(name: "__mptr", scope: !9668, file: !3, line: 1406, type: !136)
!9668 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 1406, column: 7)
!9669 = !DILocation(line: 1406, column: 7, scope: !9668)
!9670 = !DILocation(line: 1406, column: 7, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9668, file: !3, line: 1406, column: 7)
!9672 = !DILocation(line: 1406, column: 5, scope: !9660)
!9673 = !DILocation(line: 1407, column: 7, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 1407, column: 6)
!9675 = !DILocation(line: 1407, column: 11, scope: !9674)
!9676 = !DILocation(line: 1407, column: 16, scope: !9674)
!9677 = !DILocation(line: 1407, column: 20, scope: !9674)
!9678 = !DILocation(line: 1407, column: 25, scope: !9674)
!9679 = !DILocation(line: 1407, column: 28, scope: !9674)
!9680 = !DILocation(line: 1407, column: 32, scope: !9674)
!9681 = !DILocation(line: 1407, column: 36, scope: !9674)
!9682 = !DILocation(line: 1407, column: 6, scope: !9660)
!9683 = !DILocation(line: 1408, column: 3, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9674, file: !3, line: 1407, column: 43)
!9685 = !DILocation(line: 1409, column: 3, scope: !9684)
!9686 = !DILocation(line: 1411, column: 7, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 1411, column: 6)
!9688 = !DILocation(line: 1411, column: 11, scope: !9687)
!9689 = !DILocation(line: 1411, column: 16, scope: !9687)
!9690 = !DILocation(line: 1411, column: 23, scope: !9687)
!9691 = !DILocation(line: 1411, column: 26, scope: !9687)
!9692 = !DILocation(line: 1411, column: 30, scope: !9687)
!9693 = !DILocation(line: 1411, column: 35, scope: !9687)
!9694 = !DILocation(line: 1411, column: 42, scope: !9687)
!9695 = !DILocation(line: 1411, column: 48, scope: !9687)
!9696 = !DILocation(line: 1411, column: 6, scope: !9660)
!9697 = !DILocation(line: 1412, column: 3, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9687, file: !3, line: 1411, column: 70)
!9699 = !DILocation(line: 1415, column: 3, scope: !9698)
!9700 = !DILocation(line: 1418, column: 17, scope: !9660)
!9701 = !DILocation(line: 1418, column: 21, scope: !9660)
!9702 = !DILocation(line: 1418, column: 27, scope: !9660)
!9703 = !DILocation(line: 1418, column: 16, scope: !9660)
!9704 = !DILocation(line: 1418, column: 10, scope: !9660)
!9705 = !DILocation(line: 1418, column: 37, scope: !9660)
!9706 = !DILocation(line: 1418, column: 8, scope: !9660)
!9707 = !DILocation(line: 1419, column: 6, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 1419, column: 6)
!9709 = !DILocation(line: 1419, column: 14, scope: !9708)
!9710 = !DILocation(line: 1419, column: 18, scope: !9708)
!9711 = !DILocation(line: 1419, column: 12, scope: !9708)
!9712 = !DILocation(line: 1419, column: 6, scope: !9660)
!9713 = !DILocation(line: 1420, column: 3, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9708, file: !3, line: 1419, column: 29)
!9715 = !DILocation(line: 1421, column: 3, scope: !9714)
!9716 = !DILocation(line: 1423, column: 6, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 1423, column: 6)
!9718 = !DILocation(line: 1423, column: 10, scope: !9717)
!9719 = !DILocation(line: 1423, column: 6, scope: !9660)
!9720 = !DILocation(line: 1424, column: 11, scope: !9717)
!9721 = !DILocation(line: 1424, column: 15, scope: !9717)
!9722 = !DILocation(line: 1424, column: 27, scope: !9717)
!9723 = !DILocation(line: 1424, column: 25, scope: !9717)
!9724 = !DILocation(line: 1424, column: 9, scope: !9717)
!9725 = !DILocation(line: 1424, column: 3, scope: !9717)
!9726 = !DILocation(line: 1425, column: 9, scope: !9660)
!9727 = !DILocation(line: 1425, column: 2, scope: !9660)
!9728 = !DILocation(line: 1426, column: 1, scope: !9660)
!9729 = distinct !DISubprogram(name: "net2280_fifo_flush", scope: !3, file: !3, line: 1428, type: !4010, scopeLine: 1429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!9730 = !DILocalVariable(name: "_ep", arg: 1, scope: !9729, file: !3, line: 1428, type: !3978)
!9731 = !DILocation(line: 1428, column: 47, scope: !9729)
!9732 = !DILocalVariable(name: "ep", scope: !9729, file: !3, line: 1430, type: !4485)
!9733 = !DILocation(line: 1430, column: 21, scope: !9729)
!9734 = !DILocalVariable(name: "__mptr", scope: !9735, file: !3, line: 1432, type: !136)
!9735 = distinct !DILexicalBlock(scope: !9729, file: !3, line: 1432, column: 7)
!9736 = !DILocation(line: 1432, column: 7, scope: !9735)
!9737 = !DILocation(line: 1432, column: 7, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 1432, column: 7)
!9739 = !DILocation(line: 1432, column: 5, scope: !9729)
!9740 = !DILocation(line: 1433, column: 7, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9729, file: !3, line: 1433, column: 6)
!9742 = !DILocation(line: 1433, column: 11, scope: !9741)
!9743 = !DILocation(line: 1433, column: 16, scope: !9741)
!9744 = !DILocation(line: 1433, column: 20, scope: !9741)
!9745 = !DILocation(line: 1433, column: 25, scope: !9741)
!9746 = !DILocation(line: 1433, column: 28, scope: !9741)
!9747 = !DILocation(line: 1433, column: 32, scope: !9741)
!9748 = !DILocation(line: 1433, column: 36, scope: !9741)
!9749 = !DILocation(line: 1433, column: 6, scope: !9729)
!9750 = !DILocation(line: 1434, column: 3, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 1433, column: 43)
!9752 = !DILocation(line: 1435, column: 3, scope: !9751)
!9753 = !DILocation(line: 1437, column: 7, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9729, file: !3, line: 1437, column: 6)
!9755 = !DILocation(line: 1437, column: 11, scope: !9754)
!9756 = !DILocation(line: 1437, column: 16, scope: !9754)
!9757 = !DILocation(line: 1437, column: 23, scope: !9754)
!9758 = !DILocation(line: 1437, column: 26, scope: !9754)
!9759 = !DILocation(line: 1437, column: 30, scope: !9754)
!9760 = !DILocation(line: 1437, column: 35, scope: !9754)
!9761 = !DILocation(line: 1437, column: 42, scope: !9754)
!9762 = !DILocation(line: 1437, column: 48, scope: !9754)
!9763 = !DILocation(line: 1437, column: 6, scope: !9729)
!9764 = !DILocation(line: 1438, column: 3, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9754, file: !3, line: 1437, column: 70)
!9766 = !DILocation(line: 1441, column: 3, scope: !9765)
!9767 = !DILocation(line: 1444, column: 27, scope: !9729)
!9768 = !DILocation(line: 1444, column: 31, scope: !9729)
!9769 = !DILocation(line: 1444, column: 37, scope: !9729)
!9770 = !DILocation(line: 1444, column: 26, scope: !9729)
!9771 = !DILocation(line: 1444, column: 2, scope: !9729)
!9772 = !DILocation(line: 1445, column: 16, scope: !9729)
!9773 = !DILocation(line: 1445, column: 20, scope: !9729)
!9774 = !DILocation(line: 1445, column: 26, scope: !9729)
!9775 = !DILocation(line: 1445, column: 15, scope: !9729)
!9776 = !DILocation(line: 1445, column: 9, scope: !9729)
!9777 = !DILocation(line: 1446, column: 1, scope: !9729)
!9778 = distinct !DISubprogram(name: "usb_endpoint_maxp", scope: !94, file: !94, line: 647, type: !7394, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!9779 = !DILocalVariable(name: "epd", arg: 1, scope: !9778, file: !94, line: 647, type: !3992)
!9780 = !DILocation(line: 647, column: 75, scope: !9778)
!9781 = !DILocation(line: 649, column: 9, scope: !9778)
!9782 = !DILocation(line: 649, column: 44, scope: !9778)
!9783 = !DILocation(line: 649, column: 2, scope: !9778)
!9784 = !DILocalVariable(name: "ep", arg: 1, scope: !4619, file: !286, line: 361, type: !4485)
!9785 = !DILocation(line: 361, column: 53, scope: !4619)
!9786 = !DILocalVariable(name: "max", arg: 2, scope: !4619, file: !286, line: 361, type: !144)
!9787 = !DILocation(line: 361, column: 61, scope: !4619)
!9788 = !DILocalVariable(name: "reg", scope: !4619, file: !286, line: 363, type: !144)
!9789 = !DILocation(line: 363, column: 6, scope: !4619)
!9790 = !DILocation(line: 367, column: 6, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !4619, file: !286, line: 367, column: 6)
!9792 = !DILocation(line: 367, column: 10, scope: !9791)
!9793 = !DILocation(line: 367, column: 15, scope: !9791)
!9794 = !DILocation(line: 367, column: 6, scope: !4619)
!9795 = !DILocation(line: 368, column: 21, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9791, file: !286, line: 367, column: 30)
!9797 = !DILocation(line: 368, column: 25, scope: !9796)
!9798 = !DILocation(line: 368, column: 9, scope: !9796)
!9799 = !DILocation(line: 368, column: 7, scope: !9796)
!9800 = !DILocation(line: 369, column: 11, scope: !9796)
!9801 = !DILocation(line: 369, column: 15, scope: !9796)
!9802 = !DILocation(line: 369, column: 20, scope: !9796)
!9803 = !DILocation(line: 369, column: 27, scope: !9796)
!9804 = !DILocation(line: 369, column: 3, scope: !9796)
!9805 = !DILocation(line: 371, column: 8, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9796, file: !286, line: 369, column: 34)
!9807 = !DILocation(line: 372, column: 4, scope: !9806)
!9808 = !DILocation(line: 374, column: 8, scope: !9806)
!9809 = !DILocation(line: 375, column: 4, scope: !9806)
!9810 = !DILocation(line: 378, column: 4, scope: !9806)
!9811 = !DILocation(line: 380, column: 2, scope: !9796)
!9812 = !DILocation(line: 381, column: 10, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9791, file: !286, line: 380, column: 9)
!9814 = !DILocation(line: 381, column: 14, scope: !9813)
!9815 = !DILocation(line: 381, column: 18, scope: !9813)
!9816 = !DILocation(line: 381, column: 23, scope: !9813)
!9817 = !DILocation(line: 381, column: 7, scope: !9813)
!9818 = !DILocation(line: 382, column: 7, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9813, file: !286, line: 382, column: 7)
!9820 = !DILocation(line: 382, column: 11, scope: !9819)
!9821 = !DILocation(line: 382, column: 16, scope: !9819)
!9822 = !DILocation(line: 382, column: 23, scope: !9819)
!9823 = !DILocation(line: 382, column: 29, scope: !9819)
!9824 = !DILocation(line: 382, column: 7, scope: !9813)
!9825 = !DILocation(line: 383, column: 8, scope: !9819)
!9826 = !DILocation(line: 383, column: 4, scope: !9819)
!9827 = !DILocation(line: 386, column: 14, scope: !4619)
!9828 = !DILocation(line: 386, column: 18, scope: !4619)
!9829 = !DILocation(line: 386, column: 23, scope: !4619)
!9830 = !DILocation(line: 386, column: 29, scope: !4619)
!9831 = !DILocation(line: 386, column: 34, scope: !4619)
!9832 = !DILocation(line: 386, column: 2, scope: !4619)
!9833 = !DILocation(line: 387, column: 1, scope: !4619)
!9834 = !DILocalVariable(name: "ep", arg: 1, scope: !4624, file: !3, line: 2845, type: !4485)
!9835 = !DILocation(line: 2845, column: 48, scope: !4624)
!9836 = !DILocalVariable(name: "dev", scope: !4624, file: !3, line: 2847, type: !284)
!9837 = !DILocation(line: 2847, column: 18, scope: !4624)
!9838 = !DILocation(line: 2847, column: 24, scope: !4624)
!9839 = !DILocation(line: 2847, column: 28, scope: !4624)
!9840 = !DILocalVariable(name: "val", scope: !4624, file: !3, line: 2848, type: !144)
!9841 = !DILocation(line: 2848, column: 6, scope: !4624)
!9842 = !DILocation(line: 2851, column: 15, scope: !4624)
!9843 = !DILocation(line: 2851, column: 20, scope: !4624)
!9844 = !DILocation(line: 2851, column: 28, scope: !4624)
!9845 = !DILocation(line: 2851, column: 14, scope: !4624)
!9846 = !DILocation(line: 2851, column: 8, scope: !4624)
!9847 = !DILocation(line: 2851, column: 40, scope: !4624)
!9848 = !DILocation(line: 2851, column: 6, scope: !4624)
!9849 = !DILocation(line: 2852, column: 15, scope: !4624)
!9850 = !DILocation(line: 2852, column: 19, scope: !4624)
!9851 = !DILocation(line: 2852, column: 9, scope: !4624)
!9852 = !DILocation(line: 2852, column: 6, scope: !4624)
!9853 = !DILocation(line: 2853, column: 9, scope: !4624)
!9854 = !DILocation(line: 2853, column: 15, scope: !4624)
!9855 = !DILocation(line: 2853, column: 20, scope: !4624)
!9856 = !DILocation(line: 2853, column: 28, scope: !4624)
!9857 = !DILocation(line: 2853, column: 14, scope: !4624)
!9858 = !DILocation(line: 2853, column: 2, scope: !4624)
!9859 = !DILocation(line: 2854, column: 6, scope: !4624)
!9860 = !DILocation(line: 2855, column: 9, scope: !4624)
!9861 = !DILocation(line: 2855, column: 15, scope: !4624)
!9862 = !DILocation(line: 2855, column: 20, scope: !4624)
!9863 = !DILocation(line: 2855, column: 28, scope: !4624)
!9864 = !DILocation(line: 2855, column: 14, scope: !4624)
!9865 = !DILocation(line: 2855, column: 2, scope: !4624)
!9866 = !DILocation(line: 2857, column: 2, scope: !4624)
!9867 = distinct !DISubprogram(name: "enable_pciirqenb", scope: !3, file: !3, line: 168, type: !4625, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!9868 = !DILocalVariable(name: "ep", arg: 1, scope: !9867, file: !3, line: 168, type: !4485)
!9869 = !DILocation(line: 168, column: 56, scope: !9867)
!9870 = !DILocalVariable(name: "tmp", scope: !9867, file: !3, line: 170, type: !144)
!9871 = !DILocation(line: 170, column: 6, scope: !9867)
!9872 = !DILocation(line: 170, column: 19, scope: !9867)
!9873 = !DILocation(line: 170, column: 23, scope: !9867)
!9874 = !DILocation(line: 170, column: 28, scope: !9867)
!9875 = !DILocation(line: 170, column: 34, scope: !9867)
!9876 = !DILocation(line: 170, column: 18, scope: !9867)
!9877 = !DILocation(line: 170, column: 12, scope: !9867)
!9878 = !DILocation(line: 172, column: 6, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9867, file: !3, line: 172, column: 6)
!9880 = !DILocation(line: 172, column: 10, scope: !9879)
!9881 = !DILocation(line: 172, column: 15, scope: !9879)
!9882 = !DILocation(line: 172, column: 22, scope: !9879)
!9883 = !DILocation(line: 172, column: 6, scope: !9867)
!9884 = !DILocation(line: 173, column: 10, scope: !9879)
!9885 = !DILocation(line: 173, column: 7, scope: !9879)
!9886 = !DILocation(line: 173, column: 3, scope: !9879)
!9887 = !DILocation(line: 175, column: 10, scope: !9879)
!9888 = !DILocation(line: 175, column: 7, scope: !9879)
!9889 = !DILocation(line: 176, column: 9, scope: !9867)
!9890 = !DILocation(line: 176, column: 15, scope: !9867)
!9891 = !DILocation(line: 176, column: 19, scope: !9867)
!9892 = !DILocation(line: 176, column: 24, scope: !9867)
!9893 = !DILocation(line: 176, column: 30, scope: !9867)
!9894 = !DILocation(line: 176, column: 14, scope: !9867)
!9895 = !DILocation(line: 176, column: 2, scope: !9867)
!9896 = !DILocation(line: 178, column: 2, scope: !9867)
!9897 = distinct !DISubprogram(name: "ep_reset_338x", scope: !3, file: !3, line: 454, type: !8230, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!9898 = !DILocalVariable(name: "regs", arg: 1, scope: !9897, file: !3, line: 454, type: !139)
!9899 = !DILocation(line: 454, column: 56, scope: !9897)
!9900 = !DILocalVariable(name: "ep", arg: 2, scope: !9897, file: !3, line: 455, type: !4485)
!9901 = !DILocation(line: 455, column: 25, scope: !9897)
!9902 = !DILocalVariable(name: "tmp", scope: !9897, file: !3, line: 457, type: !144)
!9903 = !DILocation(line: 457, column: 6, scope: !9897)
!9904 = !DILocalVariable(name: "dmastat", scope: !9897, file: !3, line: 457, type: !144)
!9905 = !DILocation(line: 457, column: 11, scope: !9897)
!9906 = !DILocation(line: 459, column: 2, scope: !9897)
!9907 = !DILocation(line: 459, column: 6, scope: !9897)
!9908 = !DILocation(line: 459, column: 11, scope: !9897)
!9909 = !DILocation(line: 460, column: 18, scope: !9897)
!9910 = !DILocation(line: 460, column: 22, scope: !9897)
!9911 = !DILocation(line: 460, column: 2, scope: !9897)
!9912 = !DILocation(line: 462, column: 30, scope: !9897)
!9913 = !DILocation(line: 462, column: 34, scope: !9897)
!9914 = !DILocation(line: 462, column: 2, scope: !9897)
!9915 = !DILocation(line: 463, column: 2, scope: !9897)
!9916 = !DILocation(line: 463, column: 6, scope: !9897)
!9917 = !DILocation(line: 463, column: 9, scope: !9897)
!9918 = !DILocation(line: 463, column: 13, scope: !9897)
!9919 = !DILocation(line: 466, column: 6, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 466, column: 6)
!9921 = !DILocation(line: 466, column: 10, scope: !9920)
!9922 = !DILocation(line: 466, column: 6, scope: !9897)
!9923 = !DILocation(line: 467, column: 14, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 466, column: 15)
!9925 = !DILocation(line: 467, column: 18, scope: !9924)
!9926 = !DILocation(line: 467, column: 23, scope: !9924)
!9927 = !DILocation(line: 467, column: 13, scope: !9924)
!9928 = !DILocation(line: 467, column: 3, scope: !9924)
!9929 = !DILocation(line: 473, column: 11, scope: !9924)
!9930 = !DILocation(line: 473, column: 15, scope: !9924)
!9931 = !DILocation(line: 473, column: 20, scope: !9924)
!9932 = !DILocation(line: 473, column: 10, scope: !9924)
!9933 = !DILocation(line: 468, column: 3, scope: !9924)
!9934 = !DILocation(line: 475, column: 20, scope: !9924)
!9935 = !DILocation(line: 475, column: 24, scope: !9924)
!9936 = !DILocation(line: 475, column: 29, scope: !9924)
!9937 = !DILocation(line: 475, column: 19, scope: !9924)
!9938 = !DILocation(line: 475, column: 13, scope: !9924)
!9939 = !DILocation(line: 475, column: 11, scope: !9924)
!9940 = !DILocation(line: 476, column: 7, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9924, file: !3, line: 476, column: 7)
!9942 = !DILocation(line: 476, column: 15, scope: !9941)
!9943 = !DILocation(line: 476, column: 7, scope: !9924)
!9944 = !DILocation(line: 477, column: 4, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 476, column: 26)
!9946 = !DILocation(line: 479, column: 18, scope: !9945)
!9947 = !DILocation(line: 479, column: 22, scope: !9945)
!9948 = !DILocation(line: 479, column: 27, scope: !9945)
!9949 = !DILocation(line: 479, column: 17, scope: !9945)
!9950 = !DILocation(line: 479, column: 4, scope: !9945)
!9951 = !DILocation(line: 480, column: 3, scope: !9945)
!9952 = !DILocation(line: 482, column: 16, scope: !9924)
!9953 = !DILocation(line: 482, column: 22, scope: !9924)
!9954 = !DILocation(line: 482, column: 15, scope: !9924)
!9955 = !DILocation(line: 482, column: 9, scope: !9924)
!9956 = !DILocation(line: 482, column: 7, scope: !9924)
!9957 = !DILocation(line: 483, column: 11, scope: !9924)
!9958 = !DILocation(line: 483, column: 10, scope: !9924)
!9959 = !DILocation(line: 483, column: 7, scope: !9924)
!9960 = !DILocation(line: 484, column: 10, scope: !9924)
!9961 = !DILocation(line: 484, column: 16, scope: !9924)
!9962 = !DILocation(line: 484, column: 22, scope: !9924)
!9963 = !DILocation(line: 484, column: 15, scope: !9924)
!9964 = !DILocation(line: 484, column: 3, scope: !9924)
!9965 = !DILocation(line: 485, column: 2, scope: !9924)
!9966 = !DILocation(line: 486, column: 7, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 486, column: 7)
!9968 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 485, column: 9)
!9969 = !DILocation(line: 486, column: 11, scope: !9967)
!9970 = !DILocation(line: 486, column: 15, scope: !9967)
!9971 = !DILocation(line: 486, column: 7, scope: !9968)
!9972 = !DILocation(line: 487, column: 17, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 486, column: 20)
!9974 = !DILocation(line: 487, column: 23, scope: !9973)
!9975 = !DILocation(line: 487, column: 16, scope: !9973)
!9976 = !DILocation(line: 487, column: 10, scope: !9973)
!9977 = !DILocation(line: 487, column: 8, scope: !9973)
!9978 = !DILocation(line: 488, column: 12, scope: !9973)
!9979 = !DILocation(line: 488, column: 11, scope: !9973)
!9980 = !DILocation(line: 488, column: 8, scope: !9973)
!9981 = !DILocation(line: 489, column: 11, scope: !9973)
!9982 = !DILocation(line: 489, column: 17, scope: !9973)
!9983 = !DILocation(line: 489, column: 23, scope: !9973)
!9984 = !DILocation(line: 489, column: 16, scope: !9973)
!9985 = !DILocation(line: 489, column: 4, scope: !9973)
!9986 = !DILocation(line: 490, column: 3, scope: !9973)
!9987 = !DILocation(line: 492, column: 13, scope: !9897)
!9988 = !DILocation(line: 492, column: 17, scope: !9897)
!9989 = !DILocation(line: 492, column: 23, scope: !9897)
!9990 = !DILocation(line: 492, column: 12, scope: !9897)
!9991 = !DILocation(line: 492, column: 2, scope: !9897)
!9992 = !DILocation(line: 500, column: 40, scope: !9897)
!9993 = !DILocation(line: 500, column: 44, scope: !9897)
!9994 = !DILocation(line: 500, column: 50, scope: !9897)
!9995 = !DILocation(line: 500, column: 39, scope: !9897)
!9996 = !DILocation(line: 494, column: 2, scope: !9897)
!9997 = !DILocation(line: 502, column: 15, scope: !9897)
!9998 = !DILocation(line: 502, column: 19, scope: !9897)
!9999 = !DILocation(line: 502, column: 24, scope: !9897)
!10000 = !DILocation(line: 502, column: 14, scope: !9897)
!10001 = !DILocation(line: 502, column: 8, scope: !9897)
!10002 = !DILocation(line: 502, column: 6, scope: !9897)
!10003 = !DILocation(line: 503, column: 6, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 503, column: 6)
!10005 = !DILocation(line: 503, column: 10, scope: !10004)
!10006 = !DILocation(line: 503, column: 6, scope: !9897)
!10007 = !DILocation(line: 504, column: 7, scope: !10004)
!10008 = !DILocation(line: 504, column: 3, scope: !10004)
!10009 = !DILocation(line: 506, column: 7, scope: !10004)
!10010 = !DILocation(line: 507, column: 9, scope: !9897)
!10011 = !DILocation(line: 507, column: 15, scope: !9897)
!10012 = !DILocation(line: 507, column: 19, scope: !9897)
!10013 = !DILocation(line: 507, column: 24, scope: !9897)
!10014 = !DILocation(line: 507, column: 14, scope: !9897)
!10015 = !DILocation(line: 507, column: 2, scope: !9897)
!10016 = !DILocation(line: 508, column: 1, scope: !9897)
!10017 = distinct !DISubprogram(name: "start_dma", scope: !3, file: !3, line: 869, type: !10018, scopeLine: 870, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10018 = !DISubroutineType(types: !10019)
!10019 = !{null, !4485, !4470}
!10020 = !DILocalVariable(name: "ep", arg: 1, scope: !10017, file: !3, line: 869, type: !4485)
!10021 = !DILocation(line: 869, column: 42, scope: !10017)
!10022 = !DILocalVariable(name: "req", arg: 2, scope: !10017, file: !3, line: 869, type: !4470)
!10023 = !DILocation(line: 869, column: 70, scope: !10017)
!10024 = !DILocalVariable(name: "tmp", scope: !10017, file: !3, line: 871, type: !144)
!10025 = !DILocation(line: 871, column: 8, scope: !10017)
!10026 = !DILocalVariable(name: "dma", scope: !10017, file: !3, line: 872, type: !190)
!10027 = !DILocation(line: 872, column: 35, scope: !10017)
!10028 = !DILocation(line: 872, column: 41, scope: !10017)
!10029 = !DILocation(line: 872, column: 45, scope: !10017)
!10030 = !DILocalVariable(name: "__ret_warn_on", scope: !10031, file: !3, line: 877, type: !330)
!10031 = distinct !DILexicalBlock(scope: !10017, file: !3, line: 877, column: 2)
!10032 = !DILocation(line: 877, column: 2, scope: !10031)
!10033 = !DILocation(line: 877, column: 2, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10031, file: !3, line: 877, column: 2)
!10035 = !DILocation(line: 877, column: 2, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 877, column: 2)
!10037 = !DILocation(line: 877, column: 2, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 877, column: 2)
!10039 = !DILocation(line: 877, column: 2, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 877, column: 2)
!10041 = !{i32 -2141441828, i32 -2141441799, i32 -2141441753, i32 -2141441695, i32 -2141441641, i32 -2141441587, i32 -2141441532, i32 -2141441501}
!10042 = !DILocation(line: 877, column: 2, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 877, column: 2)
!10044 = !{i32 -2141441087, i32 -2141441080, i32 -2141441028, i32 -2141440997, i32 -2141440967}
!10045 = !DILocation(line: 877, column: 2, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 877, column: 2)
!10047 = !DILocation(line: 878, column: 13, scope: !10017)
!10048 = !DILocation(line: 878, column: 17, scope: !10017)
!10049 = !DILocation(line: 878, column: 22, scope: !10017)
!10050 = !DILocation(line: 878, column: 12, scope: !10017)
!10051 = !DILocation(line: 878, column: 2, scope: !10017)
!10052 = !DILocation(line: 881, column: 7, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10017, file: !3, line: 881, column: 6)
!10054 = !DILocation(line: 881, column: 11, scope: !10053)
!10055 = !DILocation(line: 881, column: 17, scope: !10053)
!10056 = !DILocation(line: 881, column: 28, scope: !10053)
!10057 = !DILocation(line: 881, column: 32, scope: !10053)
!10058 = !DILocation(line: 881, column: 38, scope: !10053)
!10059 = !DILocation(line: 881, column: 27, scope: !10053)
!10060 = !DILocation(line: 881, column: 21, scope: !10053)
!10061 = !DILocation(line: 881, column: 47, scope: !10053)
!10062 = !DILocation(line: 881, column: 6, scope: !10017)
!10063 = !DILocation(line: 884, column: 5, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10053, file: !3, line: 882, column: 28)
!10065 = !DILocation(line: 884, column: 9, scope: !10064)
!10066 = !DILocation(line: 884, column: 15, scope: !10064)
!10067 = !DILocation(line: 884, column: 4, scope: !10064)
!10068 = !DILocation(line: 883, column: 3, scope: !10064)
!10069 = !DILocation(line: 886, column: 16, scope: !10064)
!10070 = !DILocation(line: 886, column: 20, scope: !10064)
!10071 = !DILocation(line: 886, column: 26, scope: !10064)
!10072 = !DILocation(line: 886, column: 15, scope: !10064)
!10073 = !DILocation(line: 886, column: 9, scope: !10064)
!10074 = !DILocation(line: 886, column: 7, scope: !10064)
!10075 = !DILocation(line: 887, column: 7, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10064, file: !3, line: 887, column: 7)
!10077 = !DILocation(line: 887, column: 7, scope: !10064)
!10078 = !DILocation(line: 888, column: 18, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10076, file: !3, line: 887, column: 12)
!10080 = !DILocation(line: 888, column: 23, scope: !10079)
!10081 = !DILocation(line: 888, column: 17, scope: !10079)
!10082 = !DILocation(line: 888, column: 11, scope: !10079)
!10083 = !DILocation(line: 888, column: 34, scope: !10079)
!10084 = !DILocation(line: 888, column: 39, scope: !10079)
!10085 = !DILocation(line: 888, column: 33, scope: !10079)
!10086 = !DILocation(line: 888, column: 4, scope: !10079)
!10087 = !DILocation(line: 891, column: 11, scope: !10079)
!10088 = !DILocation(line: 891, column: 16, scope: !10079)
!10089 = !DILocation(line: 891, column: 20, scope: !10079)
!10090 = !DILocation(line: 891, column: 26, scope: !10079)
!10091 = !DILocation(line: 891, column: 31, scope: !10079)
!10092 = !DILocation(line: 891, column: 25, scope: !10079)
!10093 = !DILocation(line: 891, column: 4, scope: !10079)
!10094 = !DILocalVariable(name: "__UNIQUE_ID___x244", scope: !10095, file: !3, line: 892, type: !144)
!10095 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 892, column: 10)
!10096 = !DILocation(line: 892, column: 10, scope: !10095)
!10097 = !DILocalVariable(name: "__UNIQUE_ID___y245", scope: !10095, file: !3, line: 892, type: !7)
!10098 = !DILocation(line: 892, column: 8, scope: !10079)
!10099 = !DILocation(line: 895, column: 24, scope: !10079)
!10100 = !DILocation(line: 895, column: 4, scope: !10079)
!10101 = !DILocation(line: 895, column: 9, scope: !10079)
!10102 = !DILocation(line: 895, column: 13, scope: !10079)
!10103 = !DILocation(line: 895, column: 22, scope: !10079)
!10104 = !DILocation(line: 896, column: 44, scope: !10079)
!10105 = !DILocation(line: 896, column: 42, scope: !10079)
!10106 = !DILocation(line: 896, column: 11, scope: !10079)
!10107 = !DILocation(line: 897, column: 7, scope: !10079)
!10108 = !DILocation(line: 897, column: 12, scope: !10079)
!10109 = !DILocation(line: 897, column: 6, scope: !10079)
!10110 = !DILocation(line: 896, column: 4, scope: !10079)
!10111 = !DILocation(line: 898, column: 4, scope: !10079)
!10112 = !DILocation(line: 898, column: 9, scope: !10079)
!10113 = !DILocation(line: 898, column: 13, scope: !10079)
!10114 = !DILocation(line: 898, column: 21, scope: !10079)
!10115 = !DILocation(line: 899, column: 4, scope: !10079)
!10116 = !DILocation(line: 899, column: 9, scope: !10079)
!10117 = !DILocation(line: 899, column: 15, scope: !10079)
!10118 = !DILocation(line: 901, column: 29, scope: !10079)
!10119 = !DILocation(line: 901, column: 34, scope: !10079)
!10120 = !DILocation(line: 901, column: 28, scope: !10079)
!10121 = !DILocation(line: 901, column: 4, scope: !10079)
!10122 = !DILocation(line: 902, column: 28, scope: !10079)
!10123 = !DILocation(line: 902, column: 33, scope: !10079)
!10124 = !DILocation(line: 902, column: 27, scope: !10079)
!10125 = !DILocation(line: 902, column: 4, scope: !10079)
!10126 = !DILocation(line: 903, column: 4, scope: !10079)
!10127 = !DILocation(line: 905, column: 19, scope: !10064)
!10128 = !DILocation(line: 905, column: 3, scope: !10064)
!10129 = !DILocation(line: 906, column: 2, scope: !10064)
!10130 = !DILocation(line: 908, column: 6, scope: !10017)
!10131 = !DILocation(line: 914, column: 6, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10017, file: !3, line: 914, column: 6)
!10133 = !DILocation(line: 914, column: 10, scope: !10132)
!10134 = !DILocation(line: 914, column: 6, scope: !10017)
!10135 = !DILocation(line: 915, column: 7, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10137, file: !3, line: 915, column: 7)
!10137 = distinct !DILexicalBlock(scope: !10132, file: !3, line: 914, column: 17)
!10138 = !DILocation(line: 915, column: 7, scope: !10137)
!10139 = !DILocation(line: 917, column: 8, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10136, file: !3, line: 916, column: 23)
!10141 = !DILocation(line: 918, column: 4, scope: !10140)
!10142 = !DILocation(line: 918, column: 8, scope: !10140)
!10143 = !DILocation(line: 918, column: 25, scope: !10140)
!10144 = !DILocation(line: 919, column: 3, scope: !10140)
!10145 = !DILocation(line: 920, column: 4, scope: !10136)
!10146 = !DILocation(line: 920, column: 8, scope: !10136)
!10147 = !DILocation(line: 920, column: 25, scope: !10136)
!10148 = !DILocation(line: 921, column: 2, scope: !10137)
!10149 = !DILocation(line: 924, column: 21, scope: !10017)
!10150 = !DILocation(line: 924, column: 2, scope: !10017)
!10151 = !DILocation(line: 924, column: 7, scope: !10017)
!10152 = !DILocation(line: 924, column: 11, scope: !10017)
!10153 = !DILocation(line: 924, column: 19, scope: !10017)
!10154 = !DILocation(line: 925, column: 16, scope: !10017)
!10155 = !DILocation(line: 925, column: 20, scope: !10017)
!10156 = !DILocation(line: 925, column: 2, scope: !10017)
!10157 = !DILocation(line: 927, column: 2, scope: !10017)
!10158 = !DILocation(line: 927, column: 7, scope: !10017)
!10159 = !DILocation(line: 927, column: 11, scope: !10017)
!10160 = !DILocation(line: 927, column: 20, scope: !10017)
!10161 = !DILocation(line: 929, column: 14, scope: !10017)
!10162 = !DILocation(line: 929, column: 18, scope: !10017)
!10163 = !DILocation(line: 929, column: 23, scope: !10017)
!10164 = !DILocation(line: 929, column: 28, scope: !10017)
!10165 = !DILocation(line: 929, column: 2, scope: !10017)
!10166 = !DILocation(line: 930, column: 1, scope: !10017)
!10167 = distinct !DISubprogram(name: "allow_status", scope: !286, file: !286, line: 114, type: !4625, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10168 = !DILocalVariable(name: "ep", arg: 1, scope: !10167, file: !286, line: 114, type: !4485)
!10169 = !DILocation(line: 114, column: 52, scope: !10167)
!10170 = !DILocation(line: 120, column: 4, scope: !10167)
!10171 = !DILocation(line: 120, column: 8, scope: !10167)
!10172 = !DILocation(line: 120, column: 14, scope: !10167)
!10173 = !DILocation(line: 120, column: 3, scope: !10167)
!10174 = !DILocation(line: 117, column: 2, scope: !10167)
!10175 = !DILocation(line: 121, column: 2, scope: !10167)
!10176 = !DILocation(line: 121, column: 6, scope: !10167)
!10177 = !DILocation(line: 121, column: 14, scope: !10167)
!10178 = !DILocation(line: 122, column: 1, scope: !10167)
!10179 = distinct !DISubprogram(name: "write_fifo", scope: !3, file: !3, line: 608, type: !10180, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10180 = !DISubroutineType(types: !10181)
!10181 = !{null, !4485, !4016}
!10182 = !DILocation(line: 56, column: 59, scope: !6849, inlinedAt: !10183)
!10183 = distinct !DILocation(line: 15, column: 9, scope: !10184, inlinedAt: !10188)
!10184 = distinct !DISubprogram(name: "get_unaligned_le32", scope: !10185, file: !10185, line: 13, type: !10186, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10185 = !DIFile(filename: "./include/linux/unaligned/access_ok.h", directory: "/home/lizy2001/genbc/linux")
!10186 = !DISubroutineType(types: !10187)
!10187 = !{!144, !2287}
!10188 = distinct !DILocation(line: 652, column: 17, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 652, column: 17)
!10190 = distinct !DILexicalBlock(scope: !10191, file: !3, line: 651, column: 41)
!10191 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 651, column: 6)
!10192 = !DILocalVariable(name: "p", arg: 1, scope: !10184, file: !10185, line: 13, type: !2287)
!10193 = !DILocation(line: 13, column: 59, scope: !10184, inlinedAt: !10188)
!10194 = !DILocation(line: 56, column: 59, scope: !6849, inlinedAt: !10195)
!10195 = distinct !DILocation(line: 15, column: 9, scope: !10184, inlinedAt: !10196)
!10196 = distinct !DILocation(line: 640, column: 9, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 640, column: 9)
!10198 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 635, column: 21)
!10199 = !DILocation(line: 13, column: 59, scope: !10184, inlinedAt: !10196)
!10200 = !DILocalVariable(name: "ep", arg: 1, scope: !10179, file: !3, line: 608, type: !4485)
!10201 = !DILocation(line: 608, column: 43, scope: !10179)
!10202 = !DILocalVariable(name: "req", arg: 2, scope: !10179, file: !3, line: 608, type: !4016)
!10203 = !DILocation(line: 608, column: 67, scope: !10179)
!10204 = !DILocalVariable(name: "regs", scope: !10179, file: !3, line: 610, type: !209)
!10205 = !DILocation(line: 610, column: 34, scope: !10179)
!10206 = !DILocation(line: 610, column: 41, scope: !10179)
!10207 = !DILocation(line: 610, column: 45, scope: !10179)
!10208 = !DILocalVariable(name: "buf", scope: !10179, file: !3, line: 611, type: !4487)
!10209 = !DILocation(line: 611, column: 8, scope: !10179)
!10210 = !DILocalVariable(name: "tmp", scope: !10179, file: !3, line: 612, type: !144)
!10211 = !DILocation(line: 612, column: 8, scope: !10179)
!10212 = !DILocalVariable(name: "count", scope: !10179, file: !3, line: 613, type: !7)
!10213 = !DILocation(line: 613, column: 12, scope: !10179)
!10214 = !DILocalVariable(name: "total", scope: !10179, file: !3, line: 613, type: !7)
!10215 = !DILocation(line: 613, column: 19, scope: !10179)
!10216 = !DILocation(line: 617, column: 6, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 617, column: 6)
!10218 = !DILocation(line: 617, column: 6, scope: !10179)
!10219 = !DILocation(line: 618, column: 9, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10217, file: !3, line: 617, column: 11)
!10221 = !DILocation(line: 618, column: 14, scope: !10220)
!10222 = !DILocation(line: 618, column: 20, scope: !10220)
!10223 = !DILocation(line: 618, column: 25, scope: !10220)
!10224 = !DILocation(line: 618, column: 18, scope: !10220)
!10225 = !DILocation(line: 618, column: 7, scope: !10220)
!10226 = !DILocation(line: 619, column: 3, scope: !10220)
!10227 = !DILocation(line: 620, column: 11, scope: !10220)
!10228 = !DILocation(line: 620, column: 16, scope: !10220)
!10229 = !DILocation(line: 620, column: 25, scope: !10220)
!10230 = !DILocation(line: 620, column: 30, scope: !10220)
!10231 = !DILocation(line: 620, column: 23, scope: !10220)
!10232 = !DILocation(line: 620, column: 9, scope: !10220)
!10233 = !DILocation(line: 621, column: 2, scope: !10220)
!10234 = !DILocation(line: 622, column: 9, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10217, file: !3, line: 621, column: 9)
!10236 = !DILocation(line: 623, column: 7, scope: !10235)
!10237 = !DILocation(line: 627, column: 10, scope: !10179)
!10238 = !DILocation(line: 627, column: 14, scope: !10179)
!10239 = !DILocation(line: 627, column: 17, scope: !10179)
!10240 = !DILocation(line: 627, column: 8, scope: !10179)
!10241 = !DILocation(line: 628, column: 6, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 628, column: 6)
!10243 = !DILocation(line: 628, column: 14, scope: !10242)
!10244 = !DILocation(line: 628, column: 12, scope: !10242)
!10245 = !DILocation(line: 628, column: 6, scope: !10179)
!10246 = !DILocation(line: 629, column: 11, scope: !10242)
!10247 = !DILocation(line: 629, column: 9, scope: !10242)
!10248 = !DILocation(line: 629, column: 3, scope: !10242)
!10249 = !DILocation(line: 635, column: 2, scope: !10179)
!10250 = !DILocation(line: 635, column: 9, scope: !10179)
!10251 = !DILocation(line: 635, column: 15, scope: !10179)
!10252 = !DILocation(line: 640, column: 9, scope: !10197)
!10253 = !DILocation(line: 15, column: 32, scope: !10184, inlinedAt: !10196)
!10254 = !DILocation(line: 15, column: 22, scope: !10184, inlinedAt: !10196)
!10255 = !DILocation(line: 58, column: 25, scope: !6849, inlinedAt: !10195)
!10256 = !DILocation(line: 58, column: 24, scope: !6849, inlinedAt: !10195)
!10257 = !DILocation(line: 640, column: 9, scope: !10198)
!10258 = !DILocation(line: 640, column: 7, scope: !10198)
!10259 = !DILocation(line: 641, column: 3, scope: !10198)
!10260 = !DILocation(line: 641, column: 3, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 641, column: 3)
!10262 = !DILocation(line: 642, column: 10, scope: !10198)
!10263 = !DILocation(line: 642, column: 16, scope: !10198)
!10264 = !DILocation(line: 642, column: 22, scope: !10198)
!10265 = !DILocation(line: 642, column: 15, scope: !10198)
!10266 = !DILocation(line: 642, column: 3, scope: !10198)
!10267 = !DILocation(line: 643, column: 7, scope: !10198)
!10268 = !DILocation(line: 644, column: 9, scope: !10198)
!10269 = distinct !{!10269, !10249, !10270}
!10270 = !DILocation(line: 645, column: 2, scope: !10179)
!10271 = !DILocation(line: 651, column: 6, scope: !10191)
!10272 = !DILocation(line: 651, column: 12, scope: !10191)
!10273 = !DILocation(line: 651, column: 15, scope: !10191)
!10274 = !DILocation(line: 651, column: 23, scope: !10191)
!10275 = !DILocation(line: 651, column: 27, scope: !10191)
!10276 = !DILocation(line: 651, column: 30, scope: !10191)
!10277 = !DILocation(line: 651, column: 21, scope: !10191)
!10278 = !DILocation(line: 651, column: 6, scope: !10179)
!10279 = !DILocation(line: 652, column: 9, scope: !10190)
!10280 = !DILocation(line: 652, column: 17, scope: !10189)
!10281 = !DILocation(line: 15, column: 32, scope: !10184, inlinedAt: !10188)
!10282 = !DILocation(line: 15, column: 22, scope: !10184, inlinedAt: !10188)
!10283 = !DILocation(line: 58, column: 25, scope: !6849, inlinedAt: !10183)
!10284 = !DILocation(line: 58, column: 24, scope: !6849, inlinedAt: !10183)
!10285 = !DILocation(line: 652, column: 17, scope: !10190)
!10286 = !DILocation(line: 652, column: 45, scope: !10190)
!10287 = !DILocation(line: 652, column: 7, scope: !10190)
!10288 = !DILocation(line: 653, column: 3, scope: !10190)
!10289 = !DILocation(line: 653, column: 3, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 653, column: 3)
!10291 = !DILocation(line: 654, column: 22, scope: !10190)
!10292 = !DILocation(line: 654, column: 26, scope: !10190)
!10293 = !DILocation(line: 654, column: 32, scope: !10190)
!10294 = !DILocation(line: 654, column: 3, scope: !10190)
!10295 = !DILocation(line: 655, column: 10, scope: !10190)
!10296 = !DILocation(line: 655, column: 16, scope: !10190)
!10297 = !DILocation(line: 655, column: 22, scope: !10190)
!10298 = !DILocation(line: 655, column: 15, scope: !10190)
!10299 = !DILocation(line: 655, column: 3, scope: !10190)
!10300 = !DILocation(line: 656, column: 2, scope: !10190)
!10301 = !DILocation(line: 659, column: 1, scope: !10179)
!10302 = distinct !DISubprogram(name: "read_fifo", scope: !3, file: !3, line: 708, type: !10303, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10303 = !DISubroutineType(types: !10304)
!10304 = !{!330, !4485, !4470}
!10305 = !DILocalVariable(name: "val", arg: 1, scope: !10306, file: !10185, line: 43, type: !144)
!10306 = distinct !DISubprogram(name: "put_unaligned_le32", scope: !10185, file: !10185, line: 43, type: !10307, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10307 = !DISubroutineType(types: !10308)
!10308 = !{null, !144, !136}
!10309 = !DILocation(line: 43, column: 52, scope: !10306, inlinedAt: !10310)
!10310 = distinct !DILocation(line: 772, column: 3, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 772, column: 3)
!10312 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 769, column: 21)
!10313 = !DILocalVariable(name: "p", arg: 2, scope: !10306, file: !10185, line: 43, type: !136)
!10314 = !DILocation(line: 43, column: 63, scope: !10306, inlinedAt: !10310)
!10315 = !DILocalVariable(name: "x", arg: 1, scope: !10316, file: !2299, line: 755, type: !2287)
!10316 = distinct !DISubprogram(name: "prefetchw", scope: !2299, file: !2299, line: 755, type: !10317, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10317 = !DISubroutineType(types: !10318)
!10318 = !{null, !2287}
!10319 = !DILocation(line: 755, column: 51, scope: !10316, inlinedAt: !10320)
!10320 = distinct !DILocation(line: 734, column: 2, scope: !10302)
!10321 = !DILocalVariable(name: "ep", arg: 1, scope: !10302, file: !3, line: 708, type: !4485)
!10322 = !DILocation(line: 708, column: 41, scope: !10302)
!10323 = !DILocalVariable(name: "req", arg: 2, scope: !10302, file: !3, line: 708, type: !4470)
!10324 = !DILocation(line: 708, column: 69, scope: !10302)
!10325 = !DILocalVariable(name: "regs", scope: !10302, file: !3, line: 710, type: !209)
!10326 = !DILocation(line: 710, column: 34, scope: !10302)
!10327 = !DILocation(line: 710, column: 41, scope: !10302)
!10328 = !DILocation(line: 710, column: 45, scope: !10302)
!10329 = !DILocalVariable(name: "buf", scope: !10302, file: !3, line: 711, type: !4487)
!10330 = !DILocation(line: 711, column: 8, scope: !10302)
!10331 = !DILocation(line: 711, column: 14, scope: !10302)
!10332 = !DILocation(line: 711, column: 19, scope: !10302)
!10333 = !DILocation(line: 711, column: 23, scope: !10302)
!10334 = !DILocation(line: 711, column: 29, scope: !10302)
!10335 = !DILocation(line: 711, column: 34, scope: !10302)
!10336 = !DILocation(line: 711, column: 38, scope: !10302)
!10337 = !DILocation(line: 711, column: 27, scope: !10302)
!10338 = !DILocalVariable(name: "count", scope: !10302, file: !3, line: 712, type: !7)
!10339 = !DILocation(line: 712, column: 12, scope: !10302)
!10340 = !DILocalVariable(name: "tmp", scope: !10302, file: !3, line: 712, type: !7)
!10341 = !DILocation(line: 712, column: 19, scope: !10302)
!10342 = !DILocalVariable(name: "is_short", scope: !10302, file: !3, line: 712, type: !7)
!10343 = !DILocation(line: 712, column: 24, scope: !10302)
!10344 = !DILocalVariable(name: "cleanup", scope: !10302, file: !3, line: 713, type: !7)
!10345 = !DILocation(line: 713, column: 12, scope: !10302)
!10346 = !DILocalVariable(name: "prevent", scope: !10302, file: !3, line: 713, type: !7)
!10347 = !DILocation(line: 713, column: 25, scope: !10302)
!10348 = !DILocation(line: 718, column: 6, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 718, column: 6)
!10350 = !DILocation(line: 718, column: 10, scope: !10349)
!10351 = !DILocation(line: 718, column: 15, scope: !10349)
!10352 = !DILocation(line: 718, column: 23, scope: !10349)
!10353 = !DILocation(line: 718, column: 33, scope: !10349)
!10354 = !DILocation(line: 719, column: 4, scope: !10349)
!10355 = !DILocation(line: 719, column: 8, scope: !10349)
!10356 = !DILocation(line: 719, column: 13, scope: !10349)
!10357 = !DILocation(line: 719, column: 20, scope: !10349)
!10358 = !DILocation(line: 719, column: 26, scope: !10349)
!10359 = !DILocation(line: 718, column: 6, scope: !10302)
!10360 = !DILocation(line: 720, column: 3, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10362, file: !3, line: 720, column: 3)
!10362 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 720, column: 3)
!10363 = distinct !DILexicalBlock(scope: !10364, file: !3, line: 720, column: 3)
!10364 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 720, column: 3)
!10365 = distinct !DILexicalBlock(scope: !10349, file: !3, line: 719, column: 45)
!10366 = !DILocation(line: 721, column: 16, scope: !10365)
!10367 = !DILocation(line: 721, column: 20, scope: !10365)
!10368 = !DILocation(line: 721, column: 26, scope: !10365)
!10369 = !DILocation(line: 721, column: 15, scope: !10365)
!10370 = !DILocation(line: 721, column: 9, scope: !10365)
!10371 = !DILocation(line: 721, column: 7, scope: !10365)
!10372 = !DILocation(line: 722, column: 8, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 722, column: 7)
!10374 = !DILocation(line: 722, column: 12, scope: !10373)
!10375 = !DILocation(line: 722, column: 7, scope: !10365)
!10376 = !DILocation(line: 723, column: 12, scope: !10373)
!10377 = !DILocation(line: 723, column: 4, scope: !10373)
!10378 = !DILocation(line: 724, column: 13, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10373, file: !3, line: 724, column: 12)
!10380 = !DILocation(line: 724, column: 17, scope: !10379)
!10381 = !DILocation(line: 724, column: 12, scope: !10373)
!10382 = !DILocation(line: 725, column: 21, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 724, column: 36)
!10384 = !DILocation(line: 725, column: 4, scope: !10383)
!10385 = !DILocation(line: 726, column: 12, scope: !10383)
!10386 = !DILocation(line: 727, column: 3, scope: !10383)
!10387 = !DILocation(line: 729, column: 2, scope: !10365)
!10388 = !DILocation(line: 734, column: 12, scope: !10302)
!10389 = !DILocation(line: 757, column: 2, scope: !10316, inlinedAt: !10320)
!10390 = !{i32 -2145604713, i32 -2145604685, i32 -2145604679, i32 -2145604663, i32 -2145604647, i32 -2145604620, i32 -2145604292, i32 -2145604988, i32 -2145604286, i32 -2145604238, i32 -2145604174, i32 -2145604112, i32 -2145604055, i32 -2145603999, i32 -2145604908, i32 -2145604883, i32 -2145603765, i32 -2145603636, i32 -2145603704, i32 -2145603622, i32 -2145604783}
!10391 = !DILocation(line: 735, column: 17, scope: !10302)
!10392 = !DILocation(line: 735, column: 23, scope: !10302)
!10393 = !DILocation(line: 735, column: 16, scope: !10302)
!10394 = !DILocation(line: 735, column: 10, scope: !10302)
!10395 = !DILocation(line: 735, column: 8, scope: !10302)
!10396 = !DILocation(line: 736, column: 6, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 736, column: 6)
!10398 = !DILocation(line: 736, column: 6, scope: !10302)
!10399 = !DILocation(line: 737, column: 3, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 737, column: 3)
!10401 = distinct !DILexicalBlock(scope: !10402, file: !3, line: 737, column: 3)
!10402 = distinct !DILexicalBlock(scope: !10403, file: !3, line: 737, column: 3)
!10403 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 737, column: 3)
!10404 = distinct !DILexicalBlock(scope: !10397, file: !3, line: 736, column: 28)
!10405 = !DILocation(line: 738, column: 16, scope: !10404)
!10406 = !DILocation(line: 738, column: 20, scope: !10404)
!10407 = !DILocation(line: 738, column: 26, scope: !10404)
!10408 = !DILocation(line: 738, column: 15, scope: !10404)
!10409 = !DILocation(line: 738, column: 9, scope: !10404)
!10410 = !DILocation(line: 738, column: 7, scope: !10404)
!10411 = !DILocation(line: 739, column: 18, scope: !10404)
!10412 = !DILocation(line: 739, column: 24, scope: !10404)
!10413 = !DILocation(line: 739, column: 17, scope: !10404)
!10414 = !DILocation(line: 739, column: 11, scope: !10404)
!10415 = !DILocation(line: 739, column: 9, scope: !10404)
!10416 = !DILocation(line: 741, column: 7, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 741, column: 7)
!10418 = !DILocation(line: 741, column: 13, scope: !10417)
!10419 = !DILocation(line: 741, column: 18, scope: !10417)
!10420 = !DILocation(line: 741, column: 22, scope: !10417)
!10421 = !DILocation(line: 741, column: 26, scope: !10417)
!10422 = !DILocation(line: 741, column: 50, scope: !10417)
!10423 = !DILocation(line: 741, column: 7, scope: !10404)
!10424 = !DILocation(line: 742, column: 4, scope: !10417)
!10425 = !DILocation(line: 743, column: 2, scope: !10404)
!10426 = !DILocation(line: 745, column: 8, scope: !10302)
!10427 = !DILocation(line: 745, column: 13, scope: !10302)
!10428 = !DILocation(line: 745, column: 17, scope: !10302)
!10429 = !DILocation(line: 745, column: 26, scope: !10302)
!10430 = !DILocation(line: 745, column: 31, scope: !10302)
!10431 = !DILocation(line: 745, column: 35, scope: !10302)
!10432 = !DILocation(line: 745, column: 24, scope: !10302)
!10433 = !DILocation(line: 745, column: 6, scope: !10302)
!10434 = !DILocation(line: 746, column: 6, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 746, column: 6)
!10436 = !DILocation(line: 746, column: 14, scope: !10435)
!10437 = !DILocation(line: 746, column: 12, scope: !10435)
!10438 = !DILocation(line: 746, column: 6, scope: !10302)
!10439 = !DILocation(line: 748, column: 8, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10441, file: !3, line: 748, column: 7)
!10441 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 746, column: 19)
!10442 = !DILocation(line: 748, column: 14, scope: !10440)
!10443 = !DILocation(line: 748, column: 18, scope: !10440)
!10444 = !DILocation(line: 748, column: 21, scope: !10440)
!10445 = !DILocation(line: 748, column: 12, scope: !10440)
!10446 = !DILocation(line: 748, column: 32, scope: !10440)
!10447 = !DILocation(line: 748, column: 7, scope: !10441)
!10448 = !DILocation(line: 749, column: 4, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 748, column: 38)
!10450 = !DILocation(line: 752, column: 4, scope: !10449)
!10451 = !DILocation(line: 752, column: 9, scope: !10449)
!10452 = !DILocation(line: 752, column: 13, scope: !10449)
!10453 = !DILocation(line: 752, column: 20, scope: !10449)
!10454 = !DILocation(line: 753, column: 12, scope: !10449)
!10455 = !DILocation(line: 757, column: 3, scope: !10449)
!10456 = !DILocation(line: 758, column: 11, scope: !10441)
!10457 = !DILocation(line: 758, column: 9, scope: !10441)
!10458 = !DILocation(line: 759, column: 2, scope: !10441)
!10459 = !DILocation(line: 760, column: 21, scope: !10302)
!10460 = !DILocation(line: 760, column: 2, scope: !10302)
!10461 = !DILocation(line: 760, column: 7, scope: !10302)
!10462 = !DILocation(line: 760, column: 11, scope: !10302)
!10463 = !DILocation(line: 760, column: 18, scope: !10302)
!10464 = !DILocation(line: 762, column: 14, scope: !10302)
!10465 = !DILocation(line: 762, column: 20, scope: !10302)
!10466 = !DILocation(line: 762, column: 26, scope: !10302)
!10467 = !DILocation(line: 762, column: 31, scope: !10302)
!10468 = !DILocation(line: 762, column: 39, scope: !10302)
!10469 = !DILocation(line: 762, column: 43, scope: !10302)
!10470 = !DILocation(line: 762, column: 46, scope: !10302)
!10471 = !DILocation(line: 762, column: 37, scope: !10302)
!10472 = !DILocation(line: 762, column: 57, scope: !10302)
!10473 = !DILocation(line: 762, column: 11, scope: !10302)
!10474 = !DILocation(line: 769, column: 2, scope: !10302)
!10475 = !DILocation(line: 769, column: 9, scope: !10302)
!10476 = !DILocation(line: 769, column: 15, scope: !10302)
!10477 = !DILocation(line: 770, column: 16, scope: !10312)
!10478 = !DILocation(line: 770, column: 22, scope: !10312)
!10479 = !DILocation(line: 770, column: 15, scope: !10312)
!10480 = !DILocation(line: 770, column: 9, scope: !10312)
!10481 = !DILocation(line: 770, column: 7, scope: !10312)
!10482 = !DILocation(line: 771, column: 3, scope: !10312)
!10483 = !DILocation(line: 771, column: 3, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 771, column: 3)
!10485 = !DILocalVariable(name: "__gu_p", scope: !10311, file: !3, line: 772, type: !136)
!10486 = !DILocation(line: 772, column: 3, scope: !10311)
!10487 = !DILocation(line: 45, column: 19, scope: !10306, inlinedAt: !10310)
!10488 = !DILocation(line: 45, column: 14, scope: !10306, inlinedAt: !10310)
!10489 = !DILocation(line: 45, column: 4, scope: !10306, inlinedAt: !10310)
!10490 = !DILocation(line: 45, column: 17, scope: !10306, inlinedAt: !10310)
!10491 = !DILocation(line: 773, column: 7, scope: !10312)
!10492 = !DILocation(line: 774, column: 9, scope: !10312)
!10493 = distinct !{!10493, !10474, !10494}
!10494 = !DILocation(line: 775, column: 2, scope: !10302)
!10495 = !DILocation(line: 776, column: 6, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 776, column: 6)
!10497 = !DILocation(line: 776, column: 6, scope: !10302)
!10498 = !DILocation(line: 777, column: 16, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 776, column: 13)
!10500 = !DILocation(line: 777, column: 22, scope: !10499)
!10501 = !DILocation(line: 777, column: 15, scope: !10499)
!10502 = !DILocation(line: 777, column: 9, scope: !10499)
!10503 = !DILocation(line: 777, column: 7, scope: !10499)
!10504 = !DILocation(line: 779, column: 3, scope: !10499)
!10505 = !DILocation(line: 780, column: 18, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 779, column: 6)
!10507 = !DILocation(line: 780, column: 13, scope: !10506)
!10508 = !DILocation(line: 780, column: 8, scope: !10506)
!10509 = !DILocation(line: 780, column: 11, scope: !10506)
!10510 = !DILocation(line: 781, column: 8, scope: !10506)
!10511 = !DILocation(line: 782, column: 3, scope: !10506)
!10512 = !DILocation(line: 782, column: 12, scope: !10499)
!10513 = distinct !{!10513, !10504, !10514}
!10514 = !DILocation(line: 782, column: 19, scope: !10499)
!10515 = !DILocation(line: 783, column: 2, scope: !10499)
!10516 = !DILocation(line: 784, column: 6, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 784, column: 6)
!10518 = !DILocation(line: 784, column: 6, scope: !10302)
!10519 = !DILocation(line: 785, column: 13, scope: !10517)
!10520 = !DILocation(line: 785, column: 3, scope: !10517)
!10521 = !DILocation(line: 786, column: 6, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 786, column: 6)
!10523 = !DILocation(line: 786, column: 6, scope: !10302)
!10524 = !DILocation(line: 787, column: 39, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 786, column: 15)
!10526 = !DILocation(line: 787, column: 43, scope: !10525)
!10527 = !DILocation(line: 787, column: 49, scope: !10525)
!10528 = !DILocation(line: 787, column: 38, scope: !10525)
!10529 = !DILocation(line: 787, column: 3, scope: !10525)
!10530 = !DILocation(line: 788, column: 17, scope: !10525)
!10531 = !DILocation(line: 788, column: 21, scope: !10525)
!10532 = !DILocation(line: 788, column: 27, scope: !10525)
!10533 = !DILocation(line: 788, column: 16, scope: !10525)
!10534 = !DILocation(line: 788, column: 10, scope: !10525)
!10535 = !DILocation(line: 789, column: 2, scope: !10525)
!10536 = !DILocation(line: 791, column: 9, scope: !10302)
!10537 = !DILocation(line: 791, column: 18, scope: !10302)
!10538 = !DILocation(line: 791, column: 21, scope: !10302)
!10539 = !DILocation(line: 791, column: 26, scope: !10302)
!10540 = !DILocation(line: 791, column: 30, scope: !10302)
!10541 = !DILocation(line: 791, column: 40, scope: !10302)
!10542 = !DILocation(line: 791, column: 45, scope: !10302)
!10543 = !DILocation(line: 791, column: 49, scope: !10302)
!10544 = !DILocation(line: 791, column: 37, scope: !10302)
!10545 = !DILocation(line: 791, column: 2, scope: !10302)
!10546 = !DILocation(line: 792, column: 1, scope: !10302)
!10547 = distinct !DISubprogram(name: "queue_dma", scope: !3, file: !3, line: 933, type: !6743, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10548 = !DILocalVariable(name: "ep", arg: 1, scope: !10547, file: !3, line: 933, type: !4485)
!10549 = !DILocation(line: 933, column: 30, scope: !10547)
!10550 = !DILocalVariable(name: "req", arg: 2, scope: !10547, file: !3, line: 933, type: !4470)
!10551 = !DILocation(line: 933, column: 58, scope: !10547)
!10552 = !DILocalVariable(name: "valid", arg: 3, scope: !10547, file: !3, line: 933, type: !330)
!10553 = !DILocation(line: 933, column: 67, scope: !10547)
!10554 = !DILocalVariable(name: "end", scope: !10547, file: !3, line: 935, type: !4138)
!10555 = !DILocation(line: 935, column: 22, scope: !10547)
!10556 = !DILocalVariable(name: "tmp", scope: !10547, file: !3, line: 936, type: !1096)
!10557 = !DILocation(line: 936, column: 14, scope: !10547)
!10558 = !DILocation(line: 939, column: 8, scope: !10547)
!10559 = !DILocation(line: 939, column: 12, scope: !10547)
!10560 = !DILocation(line: 939, column: 6, scope: !10547)
!10561 = !DILocation(line: 940, column: 14, scope: !10547)
!10562 = !DILocation(line: 940, column: 19, scope: !10547)
!10563 = !DILocation(line: 940, column: 2, scope: !10547)
!10564 = !DILocation(line: 940, column: 6, scope: !10547)
!10565 = !DILocation(line: 940, column: 12, scope: !10547)
!10566 = !DILocation(line: 941, column: 12, scope: !10547)
!10567 = !DILocation(line: 941, column: 2, scope: !10547)
!10568 = !DILocation(line: 941, column: 7, scope: !10547)
!10569 = !DILocation(line: 941, column: 10, scope: !10547)
!10570 = !DILocation(line: 943, column: 8, scope: !10547)
!10571 = !DILocation(line: 943, column: 12, scope: !10547)
!10572 = !DILocation(line: 943, column: 6, scope: !10547)
!10573 = !DILocation(line: 944, column: 15, scope: !10547)
!10574 = !DILocation(line: 944, column: 20, scope: !10547)
!10575 = !DILocation(line: 944, column: 2, scope: !10547)
!10576 = !DILocation(line: 944, column: 6, scope: !10547)
!10577 = !DILocation(line: 944, column: 13, scope: !10547)
!10578 = !DILocation(line: 945, column: 16, scope: !10547)
!10579 = !DILocation(line: 945, column: 2, scope: !10547)
!10580 = !DILocation(line: 945, column: 7, scope: !10547)
!10581 = !DILocation(line: 945, column: 14, scope: !10547)
!10582 = !DILocation(line: 947, column: 17, scope: !10547)
!10583 = !DILocation(line: 947, column: 2, scope: !10547)
!10584 = !DILocation(line: 947, column: 7, scope: !10547)
!10585 = !DILocation(line: 947, column: 15, scope: !10547)
!10586 = !DILocation(line: 949, column: 16, scope: !10547)
!10587 = !DILocation(line: 949, column: 20, scope: !10547)
!10588 = !DILocation(line: 949, column: 25, scope: !10547)
!10589 = !DILocation(line: 949, column: 2, scope: !10547)
!10590 = !DILocation(line: 950, column: 1, scope: !10547)
!10591 = distinct !DISubprogram(name: "stop_out_naking", scope: !286, file: !286, line: 351, type: !4625, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10592 = !DILocalVariable(name: "ep", arg: 1, scope: !10591, file: !286, line: 351, type: !4485)
!10593 = !DILocation(line: 351, column: 55, scope: !10591)
!10594 = !DILocalVariable(name: "tmp", scope: !10591, file: !286, line: 353, type: !144)
!10595 = !DILocation(line: 353, column: 6, scope: !10591)
!10596 = !DILocation(line: 355, column: 15, scope: !10591)
!10597 = !DILocation(line: 355, column: 19, scope: !10591)
!10598 = !DILocation(line: 355, column: 25, scope: !10591)
!10599 = !DILocation(line: 355, column: 14, scope: !10591)
!10600 = !DILocation(line: 355, column: 8, scope: !10591)
!10601 = !DILocation(line: 355, column: 6, scope: !10591)
!10602 = !DILocation(line: 356, column: 7, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10591, file: !286, line: 356, column: 6)
!10604 = !DILocation(line: 356, column: 11, scope: !10603)
!10605 = !DILocation(line: 356, column: 35, scope: !10603)
!10606 = !DILocation(line: 356, column: 6, scope: !10591)
!10607 = !DILocation(line: 357, column: 39, scope: !10603)
!10608 = !DILocation(line: 357, column: 43, scope: !10603)
!10609 = !DILocation(line: 357, column: 49, scope: !10603)
!10610 = !DILocation(line: 357, column: 38, scope: !10603)
!10611 = !DILocation(line: 357, column: 3, scope: !10603)
!10612 = !DILocation(line: 358, column: 1, scope: !10591)
!10613 = distinct !DISubprogram(name: "fill_dma_desc", scope: !3, file: !3, line: 795, type: !6743, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10614 = !DILocalVariable(name: "ep", arg: 1, scope: !10613, file: !3, line: 795, type: !4485)
!10615 = !DILocation(line: 795, column: 46, scope: !10613)
!10616 = !DILocalVariable(name: "req", arg: 2, scope: !10613, file: !3, line: 796, type: !4470)
!10617 = !DILocation(line: 796, column: 30, scope: !10613)
!10618 = !DILocalVariable(name: "valid", arg: 3, scope: !10613, file: !3, line: 796, type: !330)
!10619 = !DILocation(line: 796, column: 39, scope: !10613)
!10620 = !DILocalVariable(name: "td", scope: !10613, file: !3, line: 798, type: !4138)
!10621 = !DILocation(line: 798, column: 22, scope: !10613)
!10622 = !DILocation(line: 798, column: 27, scope: !10613)
!10623 = !DILocation(line: 798, column: 32, scope: !10613)
!10624 = !DILocalVariable(name: "dmacount", scope: !10613, file: !3, line: 799, type: !144)
!10625 = !DILocation(line: 799, column: 8, scope: !10613)
!10626 = !DILocation(line: 799, column: 19, scope: !10613)
!10627 = !DILocation(line: 799, column: 24, scope: !10613)
!10628 = !DILocation(line: 799, column: 28, scope: !10613)
!10629 = !DILocation(line: 806, column: 6, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 806, column: 6)
!10631 = !DILocation(line: 806, column: 10, scope: !10630)
!10632 = !DILocation(line: 806, column: 6, scope: !10613)
!10633 = !DILocation(line: 807, column: 12, scope: !10630)
!10634 = !DILocation(line: 807, column: 3, scope: !10630)
!10635 = !DILocation(line: 808, column: 8, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 808, column: 6)
!10637 = !DILocation(line: 808, column: 12, scope: !10636)
!10638 = !DILocation(line: 808, column: 18, scope: !10636)
!10639 = !DILocation(line: 808, column: 22, scope: !10636)
!10640 = !DILocation(line: 808, column: 33, scope: !10636)
!10641 = !DILocation(line: 808, column: 37, scope: !10636)
!10642 = !DILocation(line: 808, column: 40, scope: !10636)
!10643 = !DILocation(line: 808, column: 31, scope: !10636)
!10644 = !DILocation(line: 808, column: 51, scope: !10636)
!10645 = !DILocation(line: 808, column: 57, scope: !10636)
!10646 = !DILocation(line: 809, column: 8, scope: !10636)
!10647 = !DILocation(line: 809, column: 12, scope: !10636)
!10648 = !DILocation(line: 809, column: 17, scope: !10636)
!10649 = !DILocation(line: 809, column: 24, scope: !10636)
!10650 = !DILocation(line: 808, column: 6, scope: !10613)
!10651 = !DILocation(line: 810, column: 12, scope: !10636)
!10652 = !DILocation(line: 810, column: 3, scope: !10636)
!10653 = !DILocation(line: 812, column: 15, scope: !10613)
!10654 = !DILocation(line: 812, column: 2, scope: !10613)
!10655 = !DILocation(line: 812, column: 7, scope: !10613)
!10656 = !DILocation(line: 812, column: 13, scope: !10613)
!10657 = !DILocation(line: 813, column: 6, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 813, column: 6)
!10659 = !DILocation(line: 813, column: 6, scope: !10613)
!10660 = !DILocation(line: 814, column: 12, scope: !10658)
!10661 = !DILocation(line: 814, column: 3, scope: !10658)
!10662 = !DILocation(line: 815, column: 11, scope: !10613)
!10663 = !DILocation(line: 818, column: 16, scope: !10613)
!10664 = !DILocation(line: 818, column: 2, scope: !10613)
!10665 = !DILocation(line: 818, column: 6, scope: !10613)
!10666 = !DILocation(line: 818, column: 14, scope: !10613)
!10667 = !DILocation(line: 821, column: 2, scope: !10613)
!10668 = !{i32 -2141444013}
!10669 = !DILocation(line: 822, column: 17, scope: !10613)
!10670 = !DILocation(line: 822, column: 2, scope: !10613)
!10671 = !DILocation(line: 822, column: 6, scope: !10613)
!10672 = !DILocation(line: 822, column: 15, scope: !10613)
!10673 = !DILocation(line: 823, column: 1, scope: !10613)
!10674 = distinct !DISubprogram(name: "start_queue", scope: !3, file: !3, line: 847, type: !10675, scopeLine: 848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10675 = !DISubroutineType(types: !10676)
!10676 = !{null, !4485, !144, !144}
!10677 = !DILocalVariable(name: "ep", arg: 1, scope: !10674, file: !3, line: 847, type: !4485)
!10678 = !DILocation(line: 847, column: 44, scope: !10674)
!10679 = !DILocalVariable(name: "dmactl", arg: 2, scope: !10674, file: !3, line: 847, type: !144)
!10680 = !DILocation(line: 847, column: 52, scope: !10674)
!10681 = !DILocalVariable(name: "td_dma", arg: 3, scope: !10674, file: !3, line: 847, type: !144)
!10682 = !DILocation(line: 847, column: 64, scope: !10674)
!10683 = !DILocalVariable(name: "dma", scope: !10674, file: !3, line: 849, type: !190)
!10684 = !DILocation(line: 849, column: 35, scope: !10674)
!10685 = !DILocation(line: 849, column: 41, scope: !10674)
!10686 = !DILocation(line: 849, column: 45, scope: !10674)
!10687 = !DILocalVariable(name: "tmp", scope: !10674, file: !3, line: 850, type: !7)
!10688 = !DILocation(line: 850, column: 15, scope: !10674)
!10689 = !DILocation(line: 850, column: 39, scope: !10674)
!10690 = !DILocation(line: 850, column: 43, scope: !10674)
!10691 = !DILocation(line: 850, column: 49, scope: !10674)
!10692 = !DILocation(line: 850, column: 38, scope: !10674)
!10693 = !DILocation(line: 850, column: 36, scope: !10674)
!10694 = !DILocation(line: 850, column: 21, scope: !10674)
!10695 = !DILocation(line: 852, column: 8, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 852, column: 6)
!10697 = !DILocation(line: 852, column: 12, scope: !10696)
!10698 = !DILocation(line: 852, column: 17, scope: !10696)
!10699 = !DILocation(line: 852, column: 24, scope: !10696)
!10700 = !DILocation(line: 852, column: 6, scope: !10674)
!10701 = !DILocation(line: 853, column: 7, scope: !10696)
!10702 = !DILocation(line: 853, column: 3, scope: !10696)
!10703 = !DILocation(line: 855, column: 9, scope: !10674)
!10704 = !DILocation(line: 855, column: 15, scope: !10674)
!10705 = !DILocation(line: 855, column: 20, scope: !10674)
!10706 = !DILocation(line: 855, column: 14, scope: !10674)
!10707 = !DILocation(line: 855, column: 2, scope: !10674)
!10708 = !DILocation(line: 856, column: 16, scope: !10674)
!10709 = !DILocation(line: 856, column: 21, scope: !10674)
!10710 = !DILocation(line: 856, column: 15, scope: !10674)
!10711 = !DILocation(line: 856, column: 9, scope: !10674)
!10712 = !DILocation(line: 856, column: 32, scope: !10674)
!10713 = !DILocation(line: 856, column: 37, scope: !10674)
!10714 = !DILocation(line: 856, column: 31, scope: !10674)
!10715 = !DILocation(line: 856, column: 2, scope: !10674)
!10716 = !DILocation(line: 858, column: 9, scope: !10674)
!10717 = !DILocation(line: 858, column: 18, scope: !10674)
!10718 = !DILocation(line: 858, column: 23, scope: !10674)
!10719 = !DILocation(line: 858, column: 17, scope: !10674)
!10720 = !DILocation(line: 858, column: 2, scope: !10674)
!10721 = !DILocation(line: 859, column: 6, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 859, column: 6)
!10723 = !DILocation(line: 859, column: 10, scope: !10722)
!10724 = !DILocation(line: 859, column: 15, scope: !10722)
!10725 = !DILocation(line: 859, column: 22, scope: !10722)
!10726 = !DILocation(line: 859, column: 6, scope: !10674)
!10727 = !DILocation(line: 860, column: 10, scope: !10722)
!10728 = !DILocation(line: 860, column: 3, scope: !10722)
!10729 = !DILocation(line: 861, column: 9, scope: !10674)
!10730 = !DILocation(line: 861, column: 18, scope: !10674)
!10731 = !DILocation(line: 861, column: 23, scope: !10674)
!10732 = !DILocation(line: 861, column: 17, scope: !10674)
!10733 = !DILocation(line: 861, column: 2, scope: !10674)
!10734 = !DILocation(line: 864, column: 16, scope: !10674)
!10735 = !DILocation(line: 864, column: 20, scope: !10674)
!10736 = !DILocation(line: 864, column: 25, scope: !10674)
!10737 = !DILocation(line: 864, column: 30, scope: !10674)
!10738 = !DILocation(line: 864, column: 15, scope: !10674)
!10739 = !DILocation(line: 864, column: 9, scope: !10674)
!10740 = !DILocation(line: 866, column: 26, scope: !10674)
!10741 = !DILocation(line: 866, column: 31, scope: !10674)
!10742 = !DILocation(line: 866, column: 25, scope: !10674)
!10743 = !DILocation(line: 866, column: 2, scope: !10674)
!10744 = !DILocation(line: 867, column: 1, scope: !10674)
!10745 = distinct !DISubprogram(name: "set_fifo_bytecount", scope: !286, file: !286, line: 332, type: !10746, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10746 = !DISubroutineType(types: !10747)
!10747 = !{null, !4485, !7}
!10748 = !DILocalVariable(name: "ep", arg: 1, scope: !10745, file: !286, line: 332, type: !4485)
!10749 = !DILocation(line: 332, column: 58, scope: !10745)
!10750 = !DILocalVariable(name: "count", arg: 2, scope: !10745, file: !286, line: 332, type: !7)
!10751 = !DILocation(line: 332, column: 71, scope: !10745)
!10752 = !DILocation(line: 334, column: 6, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10745, file: !286, line: 334, column: 6)
!10754 = !DILocation(line: 334, column: 10, scope: !10753)
!10755 = !DILocation(line: 334, column: 15, scope: !10753)
!10756 = !DILocation(line: 334, column: 21, scope: !10753)
!10757 = !DILocation(line: 334, column: 28, scope: !10753)
!10758 = !DILocation(line: 334, column: 6, scope: !10745)
!10759 = !DILocation(line: 335, column: 10, scope: !10753)
!10760 = !DILocation(line: 335, column: 37, scope: !10753)
!10761 = !DILocation(line: 335, column: 41, scope: !10753)
!10762 = !DILocation(line: 335, column: 47, scope: !10753)
!10763 = !DILocation(line: 335, column: 21, scope: !10753)
!10764 = !DILocation(line: 335, column: 19, scope: !10753)
!10765 = !DILocation(line: 335, column: 3, scope: !10753)
!10766 = !DILocalVariable(name: "tmp", scope: !10767, file: !286, line: 337, type: !144)
!10767 = distinct !DILexicalBlock(scope: !10753, file: !286, line: 336, column: 6)
!10768 = !DILocation(line: 337, column: 7, scope: !10767)
!10769 = !DILocation(line: 337, column: 20, scope: !10767)
!10770 = !DILocation(line: 337, column: 24, scope: !10767)
!10771 = !DILocation(line: 337, column: 29, scope: !10767)
!10772 = !DILocation(line: 337, column: 19, scope: !10767)
!10773 = !DILocation(line: 337, column: 13, scope: !10767)
!10774 = !DILocation(line: 337, column: 37, scope: !10767)
!10775 = !DILocation(line: 339, column: 10, scope: !10767)
!10776 = !DILocation(line: 339, column: 17, scope: !10767)
!10777 = !DILocation(line: 339, column: 23, scope: !10767)
!10778 = !DILocation(line: 339, column: 14, scope: !10767)
!10779 = !DILocation(line: 339, column: 48, scope: !10767)
!10780 = !DILocation(line: 339, column: 52, scope: !10767)
!10781 = !DILocation(line: 339, column: 57, scope: !10767)
!10782 = !DILocation(line: 339, column: 47, scope: !10767)
!10783 = !DILocation(line: 339, column: 3, scope: !10767)
!10784 = !DILocation(line: 341, column: 1, scope: !10745)
!10785 = distinct !DISubprogram(name: "writeb", scope: !5470, file: !5470, line: 65, type: !10786, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10786 = !DISubroutineType(types: !10787)
!10787 = !{null, !357, !5500}
!10788 = !DILocalVariable(name: "val", arg: 1, scope: !10785, file: !5470, line: 65, type: !357)
!10789 = !DILocation(line: 65, column: 1, scope: !10785)
!10790 = !DILocalVariable(name: "addr", arg: 2, scope: !10785, file: !5470, line: 65, type: !5500)
!10791 = !{i32 -2143332631}
!10792 = distinct !DISubprogram(name: "start_out_naking", scope: !286, file: !286, line: 343, type: !4625, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10793 = !DILocalVariable(name: "ep", arg: 1, scope: !10792, file: !286, line: 343, type: !4485)
!10794 = !DILocation(line: 343, column: 56, scope: !10792)
!10795 = !DILocation(line: 346, column: 36, scope: !10792)
!10796 = !DILocation(line: 346, column: 40, scope: !10792)
!10797 = !DILocation(line: 346, column: 46, scope: !10792)
!10798 = !DILocation(line: 346, column: 35, scope: !10792)
!10799 = !DILocation(line: 346, column: 2, scope: !10792)
!10800 = !DILocation(line: 348, column: 9, scope: !10792)
!10801 = !DILocation(line: 348, column: 13, scope: !10792)
!10802 = !DILocation(line: 348, column: 19, scope: !10792)
!10803 = !DILocation(line: 348, column: 8, scope: !10792)
!10804 = !DILocation(line: 348, column: 2, scope: !10792)
!10805 = !DILocation(line: 349, column: 1, scope: !10792)
!10806 = distinct !DISubprogram(name: "out_flush", scope: !3, file: !3, line: 668, type: !4625, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10807 = !DILocalVariable(name: "ep", arg: 1, scope: !10806, file: !3, line: 668, type: !4485)
!10808 = !DILocation(line: 668, column: 42, scope: !10806)
!10809 = !DILocalVariable(name: "statp", scope: !10806, file: !3, line: 670, type: !1586)
!10810 = !DILocation(line: 670, column: 15, scope: !10806)
!10811 = !DILocalVariable(name: "tmp", scope: !10806, file: !3, line: 671, type: !144)
!10812 = !DILocation(line: 671, column: 6, scope: !10806)
!10813 = !DILocation(line: 673, column: 11, scope: !10806)
!10814 = !DILocation(line: 673, column: 15, scope: !10806)
!10815 = !DILocation(line: 673, column: 21, scope: !10806)
!10816 = !DILocation(line: 673, column: 8, scope: !10806)
!10817 = !DILocation(line: 675, column: 14, scope: !10806)
!10818 = !DILocation(line: 675, column: 8, scope: !10806)
!10819 = !DILocation(line: 675, column: 6, scope: !10806)
!10820 = !DILocation(line: 676, column: 6, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10806, file: !3, line: 676, column: 6)
!10822 = !DILocation(line: 676, column: 10, scope: !10821)
!10823 = !DILocation(line: 676, column: 6, scope: !10806)
!10824 = !DILocation(line: 679, column: 37, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 676, column: 34)
!10826 = !DILocation(line: 679, column: 41, scope: !10825)
!10827 = !DILocation(line: 679, column: 47, scope: !10825)
!10828 = !DILocation(line: 679, column: 36, scope: !10825)
!10829 = !DILocation(line: 679, column: 3, scope: !10825)
!10830 = !DILocation(line: 680, column: 2, scope: !10825)
!10831 = !DILocation(line: 684, column: 3, scope: !10806)
!10832 = !DILocation(line: 682, column: 2, scope: !10806)
!10833 = !DILocation(line: 685, column: 26, scope: !10806)
!10834 = !DILocation(line: 685, column: 2, scope: !10806)
!10835 = !DILocation(line: 687, column: 2, scope: !10806)
!10836 = !{i32 -2141447129}
!10837 = !DILocation(line: 688, column: 14, scope: !10806)
!10838 = !DILocation(line: 688, column: 8, scope: !10806)
!10839 = !DILocation(line: 688, column: 6, scope: !10806)
!10840 = !DILocation(line: 689, column: 6, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10806, file: !3, line: 689, column: 6)
!10842 = !DILocation(line: 689, column: 10, scope: !10841)
!10843 = !DILocation(line: 689, column: 47, scope: !10841)
!10844 = !DILocation(line: 691, column: 4, scope: !10841)
!10845 = !DILocation(line: 691, column: 8, scope: !10841)
!10846 = !DILocation(line: 691, column: 13, scope: !10841)
!10847 = !DILocation(line: 691, column: 20, scope: !10841)
!10848 = !DILocation(line: 691, column: 26, scope: !10841)
!10849 = !DILocation(line: 689, column: 6, scope: !10806)
!10850 = !DILocalVariable(name: "usec", scope: !10851, file: !3, line: 692, type: !7)
!10851 = distinct !DILexicalBlock(scope: !10841, file: !3, line: 691, column: 45)
!10852 = !DILocation(line: 692, column: 12, scope: !10851)
!10853 = !DILocation(line: 694, column: 8, scope: !10851)
!10854 = !DILocation(line: 695, column: 13, scope: !10851)
!10855 = !DILocation(line: 696, column: 33, scope: !10851)
!10856 = !DILocation(line: 695, column: 3, scope: !10851)
!10857 = !DILocation(line: 698, column: 2, scope: !10851)
!10858 = !DILocation(line: 699, column: 1, scope: !10806)
!10859 = distinct !DISubprogram(name: "net2280_set_halt_and_wedge", scope: !3, file: !3, line: 1327, type: !10860, scopeLine: 1328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!10860 = !DISubroutineType(types: !10861)
!10861 = !{!330, !3978, !330, !330}
!10862 = !DILocation(line: 407, column: 64, scope: !5735, inlinedAt: !10863)
!10863 = distinct !DILocation(line: 1376, column: 2, scope: !10859)
!10864 = !DILocation(line: 407, column: 84, scope: !5735, inlinedAt: !10863)
!10865 = !DILocation(line: 407, column: 64, scope: !5735, inlinedAt: !10866)
!10866 = distinct !DILocation(line: 1381, column: 2, scope: !10859)
!10867 = !DILocation(line: 407, column: 84, scope: !5735, inlinedAt: !10866)
!10868 = !DILocation(line: 327, column: 67, scope: !4662, inlinedAt: !10869)
!10869 = distinct !DILocation(line: 1348, column: 2, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 1348, column: 2)
!10871 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 1348, column: 2)
!10872 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 1348, column: 2)
!10873 = distinct !DILexicalBlock(scope: !10874, file: !3, line: 1348, column: 2)
!10874 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 1348, column: 2)
!10875 = !DILocalVariable(name: "_ep", arg: 1, scope: !10859, file: !3, line: 1327, type: !3978)
!10876 = !DILocation(line: 1327, column: 43, scope: !10859)
!10877 = !DILocalVariable(name: "value", arg: 2, scope: !10859, file: !3, line: 1327, type: !330)
!10878 = !DILocation(line: 1327, column: 52, scope: !10859)
!10879 = !DILocalVariable(name: "wedged", arg: 3, scope: !10859, file: !3, line: 1327, type: !330)
!10880 = !DILocation(line: 1327, column: 63, scope: !10859)
!10881 = !DILocalVariable(name: "ep", scope: !10859, file: !3, line: 1329, type: !4485)
!10882 = !DILocation(line: 1329, column: 21, scope: !10859)
!10883 = !DILocalVariable(name: "flags", scope: !10859, file: !3, line: 1330, type: !347)
!10884 = !DILocation(line: 1330, column: 17, scope: !10859)
!10885 = !DILocalVariable(name: "retval", scope: !10859, file: !3, line: 1331, type: !330)
!10886 = !DILocation(line: 1331, column: 8, scope: !10859)
!10887 = !DILocalVariable(name: "__mptr", scope: !10888, file: !3, line: 1333, type: !136)
!10888 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 1333, column: 7)
!10889 = !DILocation(line: 1333, column: 7, scope: !10888)
!10890 = !DILocation(line: 1333, column: 7, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10888, file: !3, line: 1333, column: 7)
!10892 = !DILocation(line: 1333, column: 5, scope: !10859)
!10893 = !DILocation(line: 1334, column: 7, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 1334, column: 6)
!10895 = !DILocation(line: 1334, column: 11, scope: !10894)
!10896 = !DILocation(line: 1334, column: 16, scope: !10894)
!10897 = !DILocation(line: 1334, column: 20, scope: !10894)
!10898 = !DILocation(line: 1334, column: 25, scope: !10894)
!10899 = !DILocation(line: 1334, column: 28, scope: !10894)
!10900 = !DILocation(line: 1334, column: 32, scope: !10894)
!10901 = !DILocation(line: 1334, column: 36, scope: !10894)
!10902 = !DILocation(line: 1334, column: 6, scope: !10859)
!10903 = !DILocation(line: 1335, column: 3, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10894, file: !3, line: 1334, column: 43)
!10905 = !DILocation(line: 1336, column: 3, scope: !10904)
!10906 = !DILocation(line: 1338, column: 7, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 1338, column: 6)
!10908 = !DILocation(line: 1338, column: 11, scope: !10907)
!10909 = !DILocation(line: 1338, column: 16, scope: !10907)
!10910 = !DILocation(line: 1338, column: 23, scope: !10907)
!10911 = !DILocation(line: 1338, column: 26, scope: !10907)
!10912 = !DILocation(line: 1338, column: 30, scope: !10907)
!10913 = !DILocation(line: 1338, column: 35, scope: !10907)
!10914 = !DILocation(line: 1338, column: 42, scope: !10907)
!10915 = !DILocation(line: 1338, column: 48, scope: !10907)
!10916 = !DILocation(line: 1338, column: 6, scope: !10859)
!10917 = !DILocation(line: 1339, column: 10, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 1338, column: 70)
!10919 = !DILocation(line: 1340, column: 3, scope: !10918)
!10920 = !DILocation(line: 1342, column: 6, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 1342, column: 6)
!10922 = !DILocation(line: 1342, column: 10, scope: !10921)
!10923 = !DILocation(line: 1342, column: 29, scope: !10921)
!10924 = !DILocation(line: 1342, column: 33, scope: !10921)
!10925 = !DILocation(line: 1342, column: 37, scope: !10921)
!10926 = !DILocation(line: 1342, column: 43, scope: !10921)
!10927 = !DILocation(line: 1342, column: 56, scope: !10921)
!10928 = !DILocation(line: 1343, column: 7, scope: !10921)
!10929 = !DILocation(line: 1342, column: 6, scope: !10859)
!10930 = !DILocation(line: 1344, column: 10, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10921, file: !3, line: 1343, column: 34)
!10932 = !DILocation(line: 1345, column: 3, scope: !10931)
!10933 = !DILocation(line: 1348, column: 2, scope: !10859)
!10934 = !DILocation(line: 1348, column: 2, scope: !10874)
!10935 = !DILocalVariable(name: "__dummy", scope: !10936, file: !3, line: 1348, type: !347)
!10936 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 1348, column: 2)
!10937 = !DILocation(line: 1348, column: 2, scope: !10936)
!10938 = !DILocalVariable(name: "__dummy2", scope: !10936, file: !3, line: 1348, type: !347)
!10939 = !DILocation(line: 1348, column: 2, scope: !10873)
!10940 = !DILocation(line: 1348, column: 2, scope: !10872)
!10941 = !DILocation(line: 1348, column: 2, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 1348, column: 2)
!10943 = !DILocalVariable(name: "__dummy", scope: !10944, file: !3, line: 1348, type: !347)
!10944 = distinct !DILexicalBlock(scope: !10945, file: !3, line: 1348, column: 2)
!10945 = distinct !DILexicalBlock(scope: !10942, file: !3, line: 1348, column: 2)
!10946 = !DILocation(line: 1348, column: 2, scope: !10944)
!10947 = !DILocalVariable(name: "__dummy2", scope: !10944, file: !3, line: 1348, type: !347)
!10948 = !DILocation(line: 1348, column: 2, scope: !10945)
!10949 = !DILocation(line: 1348, column: 2, scope: !10871)
!10950 = !{i32 -2141414557}
!10951 = !DILocation(line: 1348, column: 2, scope: !10870)
!10952 = !DILocation(line: 329, column: 10, scope: !4662, inlinedAt: !10869)
!10953 = !DILocation(line: 329, column: 16, scope: !4662, inlinedAt: !10869)
!10954 = !DILocation(line: 1349, column: 19, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 1349, column: 6)
!10956 = !DILocation(line: 1349, column: 23, scope: !10955)
!10957 = !DILocation(line: 1349, column: 7, scope: !10955)
!10958 = !DILocation(line: 1349, column: 6, scope: !10859)
!10959 = !DILocation(line: 1350, column: 10, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10955, file: !3, line: 1349, column: 31)
!10961 = !DILocation(line: 1351, column: 3, scope: !10960)
!10962 = !DILocation(line: 1352, column: 13, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10955, file: !3, line: 1352, column: 13)
!10964 = !DILocation(line: 1352, column: 17, scope: !10963)
!10965 = !DILocation(line: 1352, column: 23, scope: !10963)
!10966 = !DILocation(line: 1352, column: 26, scope: !10963)
!10967 = !DILocation(line: 1352, column: 32, scope: !10963)
!10968 = !DILocation(line: 1352, column: 55, scope: !10963)
!10969 = !DILocation(line: 1352, column: 35, scope: !10963)
!10970 = !DILocation(line: 1352, column: 60, scope: !10963)
!10971 = !DILocation(line: 1352, column: 13, scope: !10955)
!10972 = !DILocation(line: 1353, column: 10, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10963, file: !3, line: 1352, column: 66)
!10974 = !DILocation(line: 1354, column: 3, scope: !10973)
!10975 = !DILocation(line: 1360, column: 7, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 1360, column: 7)
!10977 = distinct !DILexicalBlock(scope: !10963, file: !3, line: 1355, column: 9)
!10978 = !DILocation(line: 1360, column: 7, scope: !10977)
!10979 = !DILocation(line: 1361, column: 8, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10981, file: !3, line: 1361, column: 8)
!10981 = distinct !DILexicalBlock(scope: !10976, file: !3, line: 1360, column: 14)
!10982 = !DILocation(line: 1361, column: 12, scope: !10980)
!10983 = !DILocation(line: 1361, column: 16, scope: !10980)
!10984 = !DILocation(line: 1361, column: 8, scope: !10981)
!10985 = !DILocation(line: 1362, column: 5, scope: !10980)
!10986 = !DILocation(line: 1362, column: 9, scope: !10980)
!10987 = !DILocation(line: 1362, column: 14, scope: !10980)
!10988 = !DILocation(line: 1362, column: 29, scope: !10980)
!10989 = !DILocation(line: 1364, column: 14, scope: !10980)
!10990 = !DILocation(line: 1364, column: 5, scope: !10980)
!10991 = !DILocation(line: 1365, column: 8, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10981, file: !3, line: 1365, column: 8)
!10993 = !DILocation(line: 1365, column: 8, scope: !10981)
!10994 = !DILocation(line: 1366, column: 5, scope: !10992)
!10995 = !DILocation(line: 1366, column: 9, scope: !10992)
!10996 = !DILocation(line: 1366, column: 16, scope: !10992)
!10997 = !DILocation(line: 1367, column: 3, scope: !10981)
!10998 = !DILocation(line: 1368, column: 15, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10976, file: !3, line: 1367, column: 10)
!11000 = !DILocation(line: 1368, column: 4, scope: !10999)
!11001 = !DILocation(line: 1369, column: 8, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 1369, column: 8)
!11003 = !DILocation(line: 1369, column: 12, scope: !11002)
!11004 = !DILocation(line: 1369, column: 17, scope: !11002)
!11005 = !DILocation(line: 1369, column: 24, scope: !11002)
!11006 = !DILocation(line: 1369, column: 35, scope: !11002)
!11007 = !DILocation(line: 1370, column: 18, scope: !11002)
!11008 = !DILocation(line: 1370, column: 22, scope: !11002)
!11009 = !DILocation(line: 1370, column: 6, scope: !11002)
!11010 = !DILocation(line: 1370, column: 29, scope: !11002)
!11011 = !DILocation(line: 1370, column: 32, scope: !11002)
!11012 = !DILocation(line: 1370, column: 36, scope: !11002)
!11013 = !DILocation(line: 1369, column: 8, scope: !10999)
!11014 = !DILocation(line: 1371, column: 18, scope: !11002)
!11015 = !DILocation(line: 1371, column: 6, scope: !11002)
!11016 = !DILocation(line: 1372, column: 4, scope: !10999)
!11017 = !DILocation(line: 1372, column: 8, scope: !10999)
!11018 = !DILocation(line: 1372, column: 15, scope: !10999)
!11019 = !DILocation(line: 1374, column: 17, scope: !10977)
!11020 = !DILocation(line: 1374, column: 21, scope: !10977)
!11021 = !DILocation(line: 1374, column: 27, scope: !10977)
!11022 = !DILocation(line: 1374, column: 16, scope: !10977)
!11023 = !DILocation(line: 1374, column: 10, scope: !10977)
!11024 = !DILocation(line: 1376, column: 26, scope: !10859)
!11025 = !DILocation(line: 1376, column: 30, scope: !10859)
!11026 = !DILocation(line: 1376, column: 35, scope: !10859)
!11027 = !DILocation(line: 1376, column: 41, scope: !10859)
!11028 = !DILocation(line: 409, column: 2, scope: !5797, inlinedAt: !10863)
!11029 = !DILocation(line: 409, column: 2, scope: !5802, inlinedAt: !10863)
!11030 = !DILocation(line: 409, column: 2, scope: !5803, inlinedAt: !10863)
!11031 = !DILocation(line: 409, column: 2, scope: !5810, inlinedAt: !10863)
!11032 = !DILocation(line: 409, column: 2, scope: !5813, inlinedAt: !10863)
!11033 = !DILocation(line: 1378, column: 9, scope: !10859)
!11034 = !DILocation(line: 1378, column: 2, scope: !10859)
!11035 = !DILabel(scope: !10859, name: "print_unlock", file: !3, line: 1380)
!11036 = !DILocation(line: 1380, column: 1, scope: !10859)
!11037 = !DILocation(line: 1381, column: 26, scope: !10859)
!11038 = !DILocation(line: 1381, column: 30, scope: !10859)
!11039 = !DILocation(line: 1381, column: 35, scope: !10859)
!11040 = !DILocation(line: 1381, column: 41, scope: !10859)
!11041 = !DILocation(line: 409, column: 2, scope: !5797, inlinedAt: !10866)
!11042 = !DILocation(line: 409, column: 2, scope: !5802, inlinedAt: !10866)
!11043 = !DILocation(line: 409, column: 2, scope: !5803, inlinedAt: !10866)
!11044 = !DILocation(line: 409, column: 2, scope: !5810, inlinedAt: !10866)
!11045 = !DILocation(line: 409, column: 2, scope: !5813, inlinedAt: !10866)
!11046 = !DILocation(line: 1381, column: 2, scope: !10859)
!11047 = !DILabel(scope: !10859, name: "print_err", file: !3, line: 1382)
!11048 = !DILocation(line: 1382, column: 1, scope: !10859)
!11049 = !DILocation(line: 1383, column: 2, scope: !10859)
!11050 = !DILocation(line: 1384, column: 9, scope: !10859)
!11051 = !DILocation(line: 1384, column: 2, scope: !10859)
!11052 = !DILocation(line: 1385, column: 1, scope: !10859)
!11053 = distinct !DISubprogram(name: "set_halt", scope: !286, file: !286, line: 188, type: !4625, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!11054 = !DILocalVariable(name: "ep", arg: 1, scope: !11053, file: !286, line: 188, type: !4485)
!11055 = !DILocation(line: 188, column: 48, scope: !11053)
!11056 = !DILocation(line: 193, column: 5, scope: !11053)
!11057 = !DILocation(line: 193, column: 9, scope: !11053)
!11058 = !DILocation(line: 193, column: 14, scope: !11053)
!11059 = !DILocation(line: 193, column: 22, scope: !11053)
!11060 = !DILocation(line: 193, column: 36, scope: !11053)
!11061 = !DILocation(line: 193, column: 3, scope: !11053)
!11062 = !DILocation(line: 191, column: 51, scope: !11053)
!11063 = !DILocation(line: 193, column: 60, scope: !11053)
!11064 = !DILocation(line: 191, column: 9, scope: !11053)
!11065 = !DILocation(line: 195, column: 4, scope: !11053)
!11066 = !DILocation(line: 195, column: 8, scope: !11053)
!11067 = !DILocation(line: 195, column: 14, scope: !11053)
!11068 = !DILocation(line: 195, column: 3, scope: !11053)
!11069 = !DILocation(line: 191, column: 2, scope: !11053)
!11070 = !DILocation(line: 196, column: 1, scope: !11053)
!11071 = distinct !DISubprogram(name: "clear_halt", scope: !286, file: !286, line: 198, type: !4625, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!11072 = !DILocalVariable(name: "ep", arg: 1, scope: !11071, file: !286, line: 198, type: !4485)
!11073 = !DILocation(line: 198, column: 50, scope: !11071)
!11074 = !DILocation(line: 207, column: 5, scope: !11071)
!11075 = !DILocation(line: 207, column: 9, scope: !11071)
!11076 = !DILocation(line: 207, column: 14, scope: !11071)
!11077 = !DILocation(line: 207, column: 22, scope: !11071)
!11078 = !DILocation(line: 207, column: 36, scope: !11071)
!11079 = !DILocation(line: 207, column: 3, scope: !11071)
!11080 = !DILocation(line: 202, column: 30, scope: !11071)
!11081 = !DILocation(line: 201, column: 9, scope: !11071)
!11082 = !DILocation(line: 208, column: 4, scope: !11071)
!11083 = !DILocation(line: 208, column: 8, scope: !11071)
!11084 = !DILocation(line: 208, column: 14, scope: !11071)
!11085 = !DILocation(line: 208, column: 3, scope: !11071)
!11086 = !DILocation(line: 201, column: 2, scope: !11071)
!11087 = !DILocation(line: 209, column: 1, scope: !11071)
!11088 = distinct !DISubprogram(name: "restart_dma", scope: !3, file: !3, line: 1199, type: !4625, scopeLine: 1200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!11089 = !DILocalVariable(name: "ep", arg: 1, scope: !11088, file: !3, line: 1199, type: !4485)
!11090 = !DILocation(line: 1199, column: 44, scope: !11088)
!11091 = !DILocalVariable(name: "req", scope: !11088, file: !3, line: 1201, type: !4470)
!11092 = !DILocation(line: 1201, column: 26, scope: !11088)
!11093 = !DILocation(line: 1203, column: 6, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11088, file: !3, line: 1203, column: 6)
!11095 = !DILocation(line: 1203, column: 10, scope: !11094)
!11096 = !DILocation(line: 1203, column: 6, scope: !11088)
!11097 = !DILocation(line: 1204, column: 3, scope: !11094)
!11098 = !DILocalVariable(name: "__mptr", scope: !11099, file: !3, line: 1205, type: !136)
!11099 = distinct !DILexicalBlock(scope: !11088, file: !3, line: 1205, column: 8)
!11100 = !DILocation(line: 1205, column: 8, scope: !11099)
!11101 = !DILocation(line: 1205, column: 8, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 1205, column: 8)
!11103 = !DILocation(line: 1205, column: 6, scope: !11088)
!11104 = !DILocation(line: 1207, column: 12, scope: !11088)
!11105 = !DILocation(line: 1207, column: 16, scope: !11088)
!11106 = !DILocation(line: 1207, column: 2, scope: !11088)
!11107 = !DILocation(line: 1208, column: 1, scope: !11088)
!11108 = distinct !DISubprogram(name: "handle_stat1_irqs", scope: !3, file: !3, line: 3351, type: !11109, scopeLine: 3354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!11109 = !DISubroutineType(types: !11110)
!11110 = !{null, !284, !144}
!11111 = !DILocation(line: 352, column: 51, scope: !5568, inlinedAt: !11112)
!11112 = distinct !DILocation(line: 3431, column: 3, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11114, file: !3, line: 3418, column: 18)
!11114 = distinct !DILexicalBlock(scope: !11108, file: !3, line: 3418, column: 6)
!11115 = !DILocation(line: 392, column: 53, scope: !5562, inlinedAt: !11116)
!11116 = distinct !DILocation(line: 3420, column: 3, scope: !11113)
!11117 = !DILocation(line: 352, column: 51, scope: !5568, inlinedAt: !11118)
!11118 = distinct !DILocation(line: 3401, column: 5, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11120, file: !3, line: 3391, column: 29)
!11120 = distinct !DILexicalBlock(scope: !11121, file: !3, line: 3391, column: 8)
!11121 = distinct !DILexicalBlock(scope: !11122, file: !3, line: 3376, column: 47)
!11122 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 3376, column: 7)
!11123 = distinct !DILexicalBlock(scope: !11124, file: !3, line: 3367, column: 18)
!11124 = distinct !DILexicalBlock(scope: !11108, file: !3, line: 3367, column: 6)
!11125 = !DILocation(line: 392, column: 53, scope: !5562, inlinedAt: !11126)
!11126 = distinct !DILocation(line: 3394, column: 5, scope: !11119)
!11127 = !DILocalVariable(name: "dev", arg: 1, scope: !11108, file: !3, line: 3351, type: !284)
!11128 = !DILocation(line: 3351, column: 47, scope: !11108)
!11129 = !DILocalVariable(name: "stat", arg: 2, scope: !11108, file: !3, line: 3351, type: !144)
!11130 = !DILocation(line: 3351, column: 56, scope: !11108)
!11131 = !DILocalVariable(name: "ep", scope: !11108, file: !3, line: 3355, type: !4485)
!11132 = !DILocation(line: 3355, column: 21, scope: !11108)
!11133 = !DILocalVariable(name: "tmp", scope: !11108, file: !3, line: 3356, type: !144)
!11134 = !DILocation(line: 3356, column: 8, scope: !11108)
!11135 = !DILocalVariable(name: "num", scope: !11108, file: !3, line: 3356, type: !144)
!11136 = !DILocation(line: 3356, column: 13, scope: !11108)
!11137 = !DILocalVariable(name: "mask", scope: !11108, file: !3, line: 3356, type: !144)
!11138 = !DILocation(line: 3356, column: 18, scope: !11108)
!11139 = !DILocalVariable(name: "scratch", scope: !11108, file: !3, line: 3356, type: !144)
!11140 = !DILocation(line: 3356, column: 24, scope: !11108)
!11141 = !DILocation(line: 3359, column: 6, scope: !11108)
!11142 = !DILocation(line: 3360, column: 7, scope: !11108)
!11143 = !DILocation(line: 3367, column: 6, scope: !11124)
!11144 = !DILocation(line: 3367, column: 13, scope: !11124)
!11145 = !DILocation(line: 3367, column: 11, scope: !11124)
!11146 = !DILocation(line: 3367, column: 6, scope: !11108)
!11147 = !DILocalVariable(name: "reset", scope: !11123, file: !3, line: 3368, type: !676)
!11148 = !DILocation(line: 3368, column: 8, scope: !11123)
!11149 = !DILocalVariable(name: "disconnect", scope: !11123, file: !3, line: 3369, type: !676)
!11150 = !DILocation(line: 3369, column: 8, scope: !11123)
!11151 = !DILocation(line: 3375, column: 10, scope: !11123)
!11152 = !DILocation(line: 3375, column: 16, scope: !11123)
!11153 = !DILocation(line: 3375, column: 21, scope: !11123)
!11154 = !DILocation(line: 3375, column: 27, scope: !11123)
!11155 = !DILocation(line: 3375, column: 15, scope: !11123)
!11156 = !DILocation(line: 3375, column: 3, scope: !11123)
!11157 = !DILocation(line: 3376, column: 7, scope: !11122)
!11158 = !DILocation(line: 3376, column: 12, scope: !11122)
!11159 = !DILocation(line: 3376, column: 19, scope: !11122)
!11160 = !DILocation(line: 3376, column: 25, scope: !11122)
!11161 = !DILocation(line: 3376, column: 7, scope: !11123)
!11162 = !DILocation(line: 3377, column: 9, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11121, file: !3, line: 3377, column: 8)
!11164 = !DILocation(line: 3377, column: 14, scope: !11163)
!11165 = !DILocation(line: 3377, column: 37, scope: !11163)
!11166 = !DILocation(line: 3378, column: 14, scope: !11163)
!11167 = !DILocation(line: 3378, column: 19, scope: !11163)
!11168 = !DILocation(line: 3378, column: 24, scope: !11163)
!11169 = !DILocation(line: 3378, column: 13, scope: !11163)
!11170 = !DILocation(line: 3378, column: 7, scope: !11163)
!11171 = !DILocation(line: 3378, column: 32, scope: !11163)
!11172 = !DILocation(line: 3379, column: 22, scope: !11163)
!11173 = !DILocation(line: 3377, column: 8, scope: !11121)
!11174 = !DILocation(line: 3380, column: 16, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11163, file: !3, line: 3379, column: 28)
!11176 = !DILocation(line: 3383, column: 4, scope: !11175)
!11177 = !DILocation(line: 3383, column: 16, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11163, file: !3, line: 3383, column: 15)
!11179 = !DILocation(line: 3383, column: 21, scope: !11178)
!11180 = !DILocation(line: 3383, column: 55, scope: !11178)
!11181 = !DILocation(line: 3384, column: 14, scope: !11178)
!11182 = !DILocation(line: 3384, column: 19, scope: !11178)
!11183 = !DILocation(line: 3384, column: 24, scope: !11178)
!11184 = !DILocation(line: 3384, column: 13, scope: !11178)
!11185 = !DILocation(line: 3384, column: 7, scope: !11178)
!11186 = !DILocation(line: 3384, column: 35, scope: !11178)
!11187 = !DILocation(line: 3384, column: 33, scope: !11178)
!11188 = !DILocation(line: 3385, column: 7, scope: !11178)
!11189 = !DILocation(line: 3383, column: 15, scope: !11163)
!11190 = !DILocation(line: 3386, column: 11, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11178, file: !3, line: 3385, column: 13)
!11192 = !DILocation(line: 3389, column: 4, scope: !11191)
!11193 = !DILocation(line: 3391, column: 8, scope: !11120)
!11194 = !DILocation(line: 3391, column: 19, scope: !11120)
!11195 = !DILocation(line: 3391, column: 22, scope: !11120)
!11196 = !DILocation(line: 3391, column: 8, scope: !11121)
!11197 = !DILocation(line: 3392, column: 19, scope: !11119)
!11198 = !DILocation(line: 3392, column: 24, scope: !11119)
!11199 = !DILocation(line: 3392, column: 29, scope: !11119)
!11200 = !DILocation(line: 3392, column: 5, scope: !11119)
!11201 = !DILocation(line: 3393, column: 15, scope: !11119)
!11202 = !DILocation(line: 3393, column: 5, scope: !11119)
!11203 = !DILocation(line: 3394, column: 18, scope: !11119)
!11204 = !DILocation(line: 3394, column: 23, scope: !11119)
!11205 = !DILocation(line: 394, column: 2, scope: !5642, inlinedAt: !11126)
!11206 = !DILocation(line: 394, column: 2, scope: !5645, inlinedAt: !11126)
!11207 = !DILocation(line: 3395, column: 9, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 3395, column: 9)
!11209 = !DILocation(line: 3395, column: 9, scope: !11119)
!11210 = !DILocation(line: 3397, column: 9, scope: !11208)
!11211 = !DILocation(line: 3397, column: 14, scope: !11208)
!11212 = !DILocation(line: 3397, column: 22, scope: !11208)
!11213 = !DILocation(line: 3397, column: 27, scope: !11208)
!11214 = !DILocation(line: 3396, column: 6, scope: !11208)
!11215 = !DILocation(line: 3399, column: 7, scope: !11208)
!11216 = !DILocation(line: 3399, column: 12, scope: !11208)
!11217 = !DILocation(line: 3399, column: 20, scope: !11208)
!11218 = !DILocation(line: 3400, column: 9, scope: !11208)
!11219 = !DILocation(line: 3400, column: 14, scope: !11208)
!11220 = !DILocation(line: 3399, column: 6, scope: !11208)
!11221 = !DILocation(line: 3401, column: 16, scope: !11119)
!11222 = !DILocation(line: 3401, column: 21, scope: !11119)
!11223 = !DILocation(line: 354, column: 2, scope: !5594, inlinedAt: !11118)
!11224 = !DILocation(line: 354, column: 2, scope: !5597, inlinedAt: !11118)
!11225 = !DILocation(line: 3402, column: 5, scope: !11119)
!11226 = !DILocation(line: 3404, column: 3, scope: !11121)
!11227 = !DILocation(line: 3405, column: 12, scope: !11123)
!11228 = !DILocation(line: 3405, column: 11, scope: !11123)
!11229 = !DILocation(line: 3405, column: 8, scope: !11123)
!11230 = !DILocation(line: 3410, column: 8, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 3410, column: 7)
!11232 = !DILocation(line: 3410, column: 7, scope: !11123)
!11233 = !DILocation(line: 3411, column: 4, scope: !11231)
!11234 = !DILocation(line: 3412, column: 2, scope: !11123)
!11235 = !DILocation(line: 3417, column: 6, scope: !11108)
!11236 = !DILocation(line: 3418, column: 6, scope: !11114)
!11237 = !DILocation(line: 3418, column: 13, scope: !11114)
!11238 = !DILocation(line: 3418, column: 11, scope: !11114)
!11239 = !DILocation(line: 3418, column: 6, scope: !11108)
!11240 = !DILocation(line: 3419, column: 10, scope: !11113)
!11241 = !DILocation(line: 3419, column: 16, scope: !11113)
!11242 = !DILocation(line: 3419, column: 21, scope: !11113)
!11243 = !DILocation(line: 3419, column: 27, scope: !11113)
!11244 = !DILocation(line: 3419, column: 15, scope: !11113)
!11245 = !DILocation(line: 3419, column: 3, scope: !11113)
!11246 = !DILocation(line: 3420, column: 16, scope: !11113)
!11247 = !DILocation(line: 3420, column: 21, scope: !11113)
!11248 = !DILocation(line: 394, column: 2, scope: !5642, inlinedAt: !11116)
!11249 = !DILocation(line: 394, column: 2, scope: !5645, inlinedAt: !11116)
!11250 = !DILocation(line: 3421, column: 7, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11113, file: !3, line: 3421, column: 7)
!11252 = !DILocation(line: 3421, column: 12, scope: !11251)
!11253 = !DILocation(line: 3421, column: 7, scope: !11113)
!11254 = !DILocation(line: 3422, column: 8, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11256, file: !3, line: 3422, column: 8)
!11256 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 3421, column: 46)
!11257 = !DILocation(line: 3422, column: 13, scope: !11255)
!11258 = !DILocation(line: 3422, column: 21, scope: !11255)
!11259 = !DILocation(line: 3422, column: 8, scope: !11256)
!11260 = !DILocation(line: 3423, column: 5, scope: !11255)
!11261 = !DILocation(line: 3423, column: 10, scope: !11255)
!11262 = !DILocation(line: 3423, column: 18, scope: !11255)
!11263 = !DILocation(line: 3423, column: 27, scope: !11255)
!11264 = !DILocation(line: 3423, column: 32, scope: !11255)
!11265 = !DILocation(line: 3424, column: 9, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11256, file: !3, line: 3424, column: 8)
!11267 = !DILocation(line: 3424, column: 8, scope: !11256)
!11268 = !DILocation(line: 3425, column: 10, scope: !11266)
!11269 = !DILocation(line: 3425, column: 5, scope: !11266)
!11270 = !DILocation(line: 3426, column: 3, scope: !11256)
!11271 = !DILocation(line: 3427, column: 8, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 3427, column: 8)
!11273 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 3426, column: 10)
!11274 = !DILocation(line: 3427, column: 13, scope: !11272)
!11275 = !DILocation(line: 3427, column: 21, scope: !11272)
!11276 = !DILocation(line: 3427, column: 8, scope: !11273)
!11277 = !DILocation(line: 3428, column: 5, scope: !11272)
!11278 = !DILocation(line: 3428, column: 10, scope: !11272)
!11279 = !DILocation(line: 3428, column: 18, scope: !11272)
!11280 = !DILocation(line: 3428, column: 26, scope: !11272)
!11281 = !DILocation(line: 3428, column: 31, scope: !11272)
!11282 = !DILocation(line: 3431, column: 14, scope: !11113)
!11283 = !DILocation(line: 3431, column: 19, scope: !11113)
!11284 = !DILocation(line: 354, column: 2, scope: !5594, inlinedAt: !11112)
!11285 = !DILocation(line: 354, column: 2, scope: !5597, inlinedAt: !11112)
!11286 = !DILocation(line: 3432, column: 12, scope: !11113)
!11287 = !DILocation(line: 3432, column: 11, scope: !11113)
!11288 = !DILocation(line: 3432, column: 8, scope: !11113)
!11289 = !DILocation(line: 3433, column: 2, scope: !11113)
!11290 = !DILocation(line: 3436, column: 6, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11108, file: !3, line: 3436, column: 6)
!11292 = !DILocation(line: 3436, column: 6, scope: !11108)
!11293 = !DILocation(line: 3437, column: 10, scope: !11291)
!11294 = !DILocation(line: 3437, column: 17, scope: !11291)
!11295 = !DILocation(line: 3437, column: 22, scope: !11291)
!11296 = !DILocation(line: 3437, column: 28, scope: !11291)
!11297 = !DILocation(line: 3437, column: 16, scope: !11291)
!11298 = !DILocation(line: 3437, column: 3, scope: !11291)
!11299 = !DILocation(line: 3440, column: 6, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11108, file: !3, line: 3440, column: 6)
!11301 = !DILocation(line: 3440, column: 11, scope: !11300)
!11302 = !DILocation(line: 3440, column: 18, scope: !11300)
!11303 = !DILocation(line: 3440, column: 6, scope: !11108)
!11304 = !DILocation(line: 3441, column: 8, scope: !11300)
!11305 = !DILocation(line: 3441, column: 3, scope: !11300)
!11306 = !DILocation(line: 3446, column: 8, scope: !11300)
!11307 = !DILocation(line: 3451, column: 7, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11108, file: !3, line: 3451, column: 6)
!11309 = !DILocation(line: 3451, column: 6, scope: !11108)
!11310 = !DILocation(line: 3452, column: 3, scope: !11308)
!11311 = !DILocation(line: 3456, column: 12, scope: !11108)
!11312 = !DILocation(line: 3456, column: 17, scope: !11108)
!11313 = !DILocation(line: 3456, column: 10, scope: !11108)
!11314 = !DILocation(line: 3457, column: 7, scope: !11108)
!11315 = !DILocation(line: 3458, column: 10, scope: !11108)
!11316 = !DILocation(line: 3459, column: 11, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11108, file: !3, line: 3459, column: 2)
!11318 = !DILocation(line: 3459, column: 7, scope: !11317)
!11319 = !DILocation(line: 3459, column: 16, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11317, file: !3, line: 3459, column: 2)
!11321 = !DILocation(line: 3459, column: 2, scope: !11317)
!11322 = !DILocalVariable(name: "dma", scope: !11323, file: !3, line: 3460, type: !190)
!11323 = distinct !DILexicalBlock(scope: !11320, file: !3, line: 3459, column: 32)
!11324 = !DILocation(line: 3460, column: 36, scope: !11323)
!11325 = !DILocation(line: 3462, column: 9, scope: !11323)
!11326 = !DILocation(line: 3462, column: 7, scope: !11323)
!11327 = !DILocation(line: 3463, column: 8, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11323, file: !3, line: 3463, column: 7)
!11329 = !DILocation(line: 3463, column: 14, scope: !11328)
!11330 = !DILocation(line: 3463, column: 12, scope: !11328)
!11331 = !DILocation(line: 3463, column: 23, scope: !11328)
!11332 = !DILocation(line: 3463, column: 7, scope: !11323)
!11333 = !DILocation(line: 3464, column: 4, scope: !11328)
!11334 = !DILocation(line: 3465, column: 14, scope: !11323)
!11335 = !DILocation(line: 3465, column: 11, scope: !11323)
!11336 = !DILocation(line: 3467, column: 9, scope: !11323)
!11337 = !DILocation(line: 3467, column: 14, scope: !11323)
!11338 = !DILocation(line: 3467, column: 17, scope: !11323)
!11339 = !DILocation(line: 3467, column: 21, scope: !11323)
!11340 = !DILocation(line: 3467, column: 6, scope: !11323)
!11341 = !DILocation(line: 3468, column: 9, scope: !11323)
!11342 = !DILocation(line: 3468, column: 13, scope: !11323)
!11343 = !DILocation(line: 3468, column: 7, scope: !11323)
!11344 = !DILocation(line: 3470, column: 8, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11323, file: !3, line: 3470, column: 7)
!11346 = !DILocation(line: 3470, column: 7, scope: !11323)
!11347 = !DILocation(line: 3471, column: 4, scope: !11345)
!11348 = !DILocation(line: 3474, column: 16, scope: !11323)
!11349 = !DILocation(line: 3474, column: 21, scope: !11323)
!11350 = !DILocation(line: 3474, column: 15, scope: !11323)
!11351 = !DILocation(line: 3474, column: 9, scope: !11323)
!11352 = !DILocation(line: 3474, column: 7, scope: !11323)
!11353 = !DILocation(line: 3475, column: 10, scope: !11323)
!11354 = !DILocation(line: 3475, column: 16, scope: !11323)
!11355 = !DILocation(line: 3475, column: 21, scope: !11323)
!11356 = !DILocation(line: 3475, column: 15, scope: !11323)
!11357 = !DILocation(line: 3475, column: 3, scope: !11323)
!11358 = !DILocation(line: 3478, column: 7, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11323, file: !3, line: 3478, column: 7)
!11360 = !DILocation(line: 3478, column: 12, scope: !11359)
!11361 = !DILocation(line: 3478, column: 19, scope: !11359)
!11362 = !DILocation(line: 3478, column: 7, scope: !11323)
!11363 = !DILocalVariable(name: "r_dmacount", scope: !11364, file: !3, line: 3479, type: !144)
!11364 = distinct !DILexicalBlock(scope: !11359, file: !3, line: 3478, column: 31)
!11365 = !DILocation(line: 3479, column: 8, scope: !11364)
!11366 = !DILocation(line: 3479, column: 28, scope: !11364)
!11367 = !DILocation(line: 3479, column: 33, scope: !11364)
!11368 = !DILocation(line: 3479, column: 27, scope: !11364)
!11369 = !DILocation(line: 3479, column: 21, scope: !11364)
!11370 = !DILocation(line: 3480, column: 9, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11364, file: !3, line: 3480, column: 8)
!11372 = !DILocation(line: 3480, column: 13, scope: !11371)
!11373 = !DILocation(line: 3480, column: 19, scope: !11371)
!11374 = !DILocation(line: 3480, column: 24, scope: !11371)
!11375 = !DILocation(line: 3480, column: 35, scope: !11371)
!11376 = !DILocation(line: 3480, column: 49, scope: !11371)
!11377 = !DILocation(line: 3481, column: 9, scope: !11371)
!11378 = !DILocation(line: 3481, column: 13, scope: !11371)
!11379 = !DILocation(line: 3480, column: 8, scope: !11364)
!11380 = !DILocation(line: 3482, column: 5, scope: !11371)
!11381 = !DILocation(line: 3483, column: 3, scope: !11364)
!11382 = !DILocation(line: 3485, column: 9, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11323, file: !3, line: 3485, column: 7)
!11384 = !DILocation(line: 3485, column: 13, scope: !11383)
!11385 = !DILocation(line: 3485, column: 7, scope: !11323)
!11386 = !DILocation(line: 3488, column: 4, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11383, file: !3, line: 3485, column: 53)
!11388 = !DILocation(line: 3490, column: 12, scope: !11323)
!11389 = !DILocation(line: 3490, column: 16, scope: !11323)
!11390 = !DILocation(line: 3490, column: 3, scope: !11323)
!11391 = !DILocation(line: 3502, column: 24, scope: !11323)
!11392 = !DILocation(line: 3502, column: 3, scope: !11323)
!11393 = !DILocation(line: 3505, column: 20, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11323, file: !3, line: 3505, column: 7)
!11395 = !DILocation(line: 3505, column: 24, scope: !11394)
!11396 = !DILocation(line: 3505, column: 8, scope: !11394)
!11397 = !DILocation(line: 3505, column: 7, scope: !11323)
!11398 = !DILocation(line: 3506, column: 17, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11394, file: !3, line: 3505, column: 32)
!11400 = !DILocation(line: 3506, column: 22, scope: !11399)
!11401 = !DILocation(line: 3506, column: 16, scope: !11399)
!11402 = !DILocation(line: 3506, column: 10, scope: !11399)
!11403 = !DILocation(line: 3506, column: 8, scope: !11399)
!11404 = !DILocation(line: 3507, column: 16, scope: !11399)
!11405 = !DILocation(line: 3507, column: 4, scope: !11399)
!11406 = !DILocation(line: 3508, column: 3, scope: !11399)
!11407 = !DILocation(line: 3509, column: 3, scope: !11323)
!11408 = !DILocation(line: 3509, column: 7, scope: !11323)
!11409 = !DILocation(line: 3509, column: 11, scope: !11323)
!11410 = !DILocation(line: 3510, column: 2, scope: !11323)
!11411 = !DILocation(line: 3459, column: 28, scope: !11320)
!11412 = !DILocation(line: 3459, column: 2, scope: !11320)
!11413 = distinct !{!11413, !11321, !11414}
!11414 = !DILocation(line: 3510, column: 2, scope: !11317)
!11415 = !DILocation(line: 3515, column: 6, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11108, file: !3, line: 3515, column: 6)
!11417 = !DILocation(line: 3515, column: 11, scope: !11416)
!11418 = !DILocation(line: 3515, column: 6, scope: !11108)
!11419 = !DILocation(line: 3516, column: 3, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 3515, column: 35)
!11421 = !DILocation(line: 3517, column: 8, scope: !11420)
!11422 = !DILocation(line: 3521, column: 17, scope: !11420)
!11423 = !DILocation(line: 3521, column: 22, scope: !11420)
!11424 = !DILocation(line: 3521, column: 27, scope: !11420)
!11425 = !DILocation(line: 3521, column: 3, scope: !11420)
!11426 = !DILocation(line: 3522, column: 13, scope: !11420)
!11427 = !DILocation(line: 3522, column: 3, scope: !11420)
!11428 = !DILocation(line: 3523, column: 8, scope: !11420)
!11429 = !DILocation(line: 3524, column: 2, scope: !11420)
!11430 = !DILocation(line: 3526, column: 6, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11108, file: !3, line: 3526, column: 6)
!11432 = !DILocation(line: 3526, column: 6, scope: !11108)
!11433 = !DILocation(line: 3527, column: 3, scope: !11431)
!11434 = !DILocation(line: 3528, column: 1, scope: !11108)
!11435 = distinct !DISubprogram(name: "handle_stat0_irqs", scope: !3, file: !3, line: 3087, type: !11109, scopeLine: 3088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!11436 = !DILocation(line: 352, column: 51, scope: !5568, inlinedAt: !11437)
!11437 = distinct !DILocation(line: 3289, column: 4, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 3207, column: 25)
!11439 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 3099, column: 52)
!11440 = distinct !DILexicalBlock(scope: !11435, file: !3, line: 3099, column: 6)
!11441 = !DILocation(line: 392, column: 53, scope: !5562, inlinedAt: !11442)
!11442 = distinct !DILocation(line: 3287, column: 4, scope: !11438)
!11443 = !DILocalVariable(name: "dev", arg: 1, scope: !11435, file: !3, line: 3087, type: !284)
!11444 = !DILocation(line: 3087, column: 47, scope: !11435)
!11445 = !DILocalVariable(name: "stat", arg: 2, scope: !11435, file: !3, line: 3087, type: !144)
!11446 = !DILocation(line: 3087, column: 56, scope: !11435)
!11447 = !DILocalVariable(name: "ep", scope: !11435, file: !3, line: 3089, type: !4485)
!11448 = !DILocation(line: 3089, column: 21, scope: !11435)
!11449 = !DILocalVariable(name: "num", scope: !11435, file: !3, line: 3090, type: !144)
!11450 = !DILocation(line: 3090, column: 8, scope: !11435)
!11451 = !DILocalVariable(name: "scratch", scope: !11435, file: !3, line: 3090, type: !144)
!11452 = !DILocation(line: 3090, column: 13, scope: !11435)
!11453 = !DILocation(line: 3093, column: 7, scope: !11435)
!11454 = !DILocation(line: 3094, column: 7, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11435, file: !3, line: 3094, column: 6)
!11456 = !DILocation(line: 3094, column: 6, scope: !11435)
!11457 = !DILocation(line: 3095, column: 3, scope: !11455)
!11458 = !DILocation(line: 3099, column: 6, scope: !11440)
!11459 = !DILocation(line: 3099, column: 6, scope: !11435)
!11460 = !DILocalVariable(name: "u", scope: !11439, file: !3, line: 3103, type: !11461)
!11461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11435, file: !3, line: 3100, size: 64, elements: !11462)
!11462 = !{!11463, !11464}
!11463 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !11461, file: !3, line: 3101, baseType: !196, size: 64)
!11464 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !11461, file: !3, line: 3102, baseType: !387, size: 64)
!11465 = !DILocation(line: 3103, column: 5, scope: !11439)
!11466 = !DILocalVariable(name: "tmp", scope: !11439, file: !3, line: 3104, type: !330)
!11467 = !DILocation(line: 3104, column: 10, scope: !11439)
!11468 = !DILocalVariable(name: "req", scope: !11439, file: !3, line: 3105, type: !4470)
!11469 = !DILocation(line: 3105, column: 28, scope: !11439)
!11470 = !DILocation(line: 3107, column: 7, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 3107, column: 7)
!11472 = !DILocation(line: 3107, column: 12, scope: !11471)
!11473 = !DILocation(line: 3107, column: 19, scope: !11471)
!11474 = !DILocation(line: 3107, column: 25, scope: !11471)
!11475 = !DILocation(line: 3107, column: 7, scope: !11439)
!11476 = !DILocalVariable(name: "val", scope: !11477, file: !3, line: 3108, type: !144)
!11477 = distinct !DILexicalBlock(scope: !11471, file: !3, line: 3107, column: 47)
!11478 = !DILocation(line: 3108, column: 8, scope: !11477)
!11479 = !DILocation(line: 3108, column: 21, scope: !11477)
!11480 = !DILocation(line: 3108, column: 26, scope: !11477)
!11481 = !DILocation(line: 3108, column: 31, scope: !11477)
!11482 = !DILocation(line: 3108, column: 20, scope: !11477)
!11483 = !DILocation(line: 3108, column: 14, scope: !11477)
!11484 = !DILocation(line: 3109, column: 8, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11477, file: !3, line: 3109, column: 8)
!11486 = !DILocation(line: 3109, column: 12, scope: !11485)
!11487 = !DILocation(line: 3109, column: 8, scope: !11477)
!11488 = !DILocation(line: 3110, column: 5, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11485, file: !3, line: 3109, column: 32)
!11490 = !DILocation(line: 3110, column: 10, scope: !11489)
!11491 = !DILocation(line: 3110, column: 17, scope: !11489)
!11492 = !DILocation(line: 3110, column: 23, scope: !11489)
!11493 = !DILocation(line: 3111, column: 33, scope: !11489)
!11494 = !DILocation(line: 3111, column: 38, scope: !11489)
!11495 = !DILocation(line: 3111, column: 44, scope: !11489)
!11496 = !DILocation(line: 3111, column: 5, scope: !11489)
!11497 = !DILocation(line: 3113, column: 4, scope: !11489)
!11498 = !DILocation(line: 3113, column: 15, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11485, file: !3, line: 3113, column: 15)
!11500 = !DILocation(line: 3113, column: 19, scope: !11499)
!11501 = !DILocation(line: 3113, column: 15, scope: !11485)
!11502 = !DILocation(line: 3114, column: 5, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11499, file: !3, line: 3113, column: 38)
!11504 = !DILocation(line: 3114, column: 10, scope: !11503)
!11505 = !DILocation(line: 3114, column: 17, scope: !11503)
!11506 = !DILocation(line: 3114, column: 23, scope: !11503)
!11507 = !DILocation(line: 3115, column: 33, scope: !11503)
!11508 = !DILocation(line: 3115, column: 38, scope: !11503)
!11509 = !DILocation(line: 3115, column: 44, scope: !11503)
!11510 = !DILocation(line: 3115, column: 5, scope: !11503)
!11511 = !DILocation(line: 3117, column: 4, scope: !11503)
!11512 = !DILocation(line: 3118, column: 5, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11499, file: !3, line: 3117, column: 11)
!11514 = !DILocation(line: 3118, column: 10, scope: !11513)
!11515 = !DILocation(line: 3118, column: 17, scope: !11513)
!11516 = !DILocation(line: 3118, column: 23, scope: !11513)
!11517 = !DILocation(line: 3119, column: 33, scope: !11513)
!11518 = !DILocation(line: 3119, column: 38, scope: !11513)
!11519 = !DILocation(line: 3119, column: 44, scope: !11513)
!11520 = !DILocation(line: 3119, column: 5, scope: !11513)
!11521 = !DILocation(line: 3122, column: 22, scope: !11477)
!11522 = !DILocation(line: 3122, column: 27, scope: !11477)
!11523 = !DILocation(line: 3122, column: 32, scope: !11477)
!11524 = !DILocation(line: 3122, column: 39, scope: !11477)
!11525 = !DILocation(line: 3122, column: 4, scope: !11477)
!11526 = !DILocation(line: 3125, column: 3, scope: !11477)
!11527 = !DILocation(line: 3127, column: 9, scope: !11439)
!11528 = !DILocation(line: 3127, column: 14, scope: !11439)
!11529 = !DILocation(line: 3127, column: 6, scope: !11439)
!11530 = !DILocation(line: 3128, column: 3, scope: !11439)
!11531 = !DILocation(line: 3128, column: 7, scope: !11439)
!11532 = !DILocation(line: 3128, column: 11, scope: !11439)
!11533 = !DILocation(line: 3131, column: 8, scope: !11439)
!11534 = !DILocation(line: 3132, column: 3, scope: !11439)
!11535 = !DILocation(line: 3132, column: 23, scope: !11439)
!11536 = !DILocation(line: 3132, column: 27, scope: !11439)
!11537 = !DILocation(line: 3132, column: 11, scope: !11439)
!11538 = !DILocation(line: 3132, column: 10, scope: !11439)
!11539 = !DILocalVariable(name: "__mptr", scope: !11540, file: !3, line: 3133, type: !136)
!11540 = distinct !DILexicalBlock(scope: !11541, file: !3, line: 3133, column: 10)
!11541 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 3132, column: 35)
!11542 = !DILocation(line: 3133, column: 10, scope: !11540)
!11543 = !DILocation(line: 3133, column: 10, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 3133, column: 10)
!11545 = !DILocation(line: 3133, column: 8, scope: !11541)
!11546 = !DILocation(line: 3135, column: 9, scope: !11541)
!11547 = !DILocation(line: 3135, column: 13, scope: !11541)
!11548 = !DILocation(line: 3135, column: 19, scope: !11541)
!11549 = !DILocation(line: 3135, column: 24, scope: !11541)
!11550 = !DILocation(line: 3135, column: 28, scope: !11541)
!11551 = !DILocation(line: 3135, column: 38, scope: !11541)
!11552 = !DILocation(line: 3135, column: 43, scope: !11541)
!11553 = !DILocation(line: 3135, column: 47, scope: !11541)
!11554 = !DILocation(line: 3135, column: 35, scope: !11541)
!11555 = !DILocation(line: 3135, column: 18, scope: !11541)
!11556 = !DILocation(line: 3135, column: 4, scope: !11541)
!11557 = distinct !{!11557, !11534, !11558}
!11558 = !DILocation(line: 3137, column: 3, scope: !11439)
!11559 = !DILocation(line: 3138, column: 3, scope: !11439)
!11560 = !DILocation(line: 3138, column: 7, scope: !11439)
!11561 = !DILocation(line: 3138, column: 15, scope: !11439)
!11562 = !DILocation(line: 3139, column: 3, scope: !11439)
!11563 = !DILocation(line: 3139, column: 8, scope: !11439)
!11564 = !DILocation(line: 3139, column: 23, scope: !11439)
!11565 = !DILocation(line: 3140, column: 9, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 3140, column: 7)
!11567 = !DILocation(line: 3140, column: 14, scope: !11566)
!11568 = !DILocation(line: 3140, column: 21, scope: !11566)
!11569 = !DILocation(line: 3140, column: 7, scope: !11439)
!11570 = !DILocation(line: 3141, column: 8, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11572, file: !3, line: 3141, column: 8)
!11572 = distinct !DILexicalBlock(scope: !11566, file: !3, line: 3140, column: 34)
!11573 = !DILocation(line: 3141, column: 12, scope: !11571)
!11574 = !DILocation(line: 3141, column: 17, scope: !11571)
!11575 = !DILocation(line: 3141, column: 24, scope: !11571)
!11576 = !DILocation(line: 3141, column: 8, scope: !11572)
!11577 = !DILocation(line: 3142, column: 9, scope: !11571)
!11578 = !DILocation(line: 3142, column: 5, scope: !11571)
!11579 = !DILocation(line: 3145, column: 9, scope: !11571)
!11580 = !DILocation(line: 3147, column: 11, scope: !11572)
!11581 = !DILocation(line: 3147, column: 15, scope: !11572)
!11582 = !DILocation(line: 3147, column: 30, scope: !11572)
!11583 = !DILocation(line: 3148, column: 28, scope: !11572)
!11584 = !DILocation(line: 3149, column: 29, scope: !11572)
!11585 = !DILocation(line: 3150, column: 29, scope: !11572)
!11586 = !DILocation(line: 3151, column: 35, scope: !11572)
!11587 = !DILocation(line: 3152, column: 30, scope: !11572)
!11588 = !DILocation(line: 3153, column: 45, scope: !11572)
!11589 = !DILocation(line: 3154, column: 48, scope: !11572)
!11590 = !DILocation(line: 3155, column: 44, scope: !11572)
!11591 = !DILocation(line: 3156, column: 47, scope: !11572)
!11592 = !DILocation(line: 3157, column: 43, scope: !11572)
!11593 = !DILocation(line: 3159, column: 9, scope: !11572)
!11594 = !DILocation(line: 3159, column: 13, scope: !11572)
!11595 = !DILocation(line: 3159, column: 19, scope: !11572)
!11596 = !DILocation(line: 3159, column: 8, scope: !11572)
!11597 = !DILocation(line: 3147, column: 4, scope: !11572)
!11598 = !DILocation(line: 3160, column: 3, scope: !11572)
!11599 = !DILocation(line: 3161, column: 21, scope: !11439)
!11600 = !DILocation(line: 3161, column: 26, scope: !11439)
!11601 = !DILocation(line: 3161, column: 31, scope: !11439)
!11602 = !DILocation(line: 3161, column: 20, scope: !11439)
!11603 = !DILocation(line: 3161, column: 14, scope: !11439)
!11604 = !DILocation(line: 3161, column: 5, scope: !11439)
!11605 = !DILocation(line: 3161, column: 3, scope: !11439)
!11606 = !DILocation(line: 3161, column: 12, scope: !11439)
!11607 = !DILocation(line: 3162, column: 21, scope: !11439)
!11608 = !DILocation(line: 3162, column: 26, scope: !11439)
!11609 = !DILocation(line: 3162, column: 31, scope: !11439)
!11610 = !DILocation(line: 3162, column: 20, scope: !11439)
!11611 = !DILocation(line: 3162, column: 14, scope: !11439)
!11612 = !DILocation(line: 3162, column: 5, scope: !11439)
!11613 = !DILocation(line: 3162, column: 3, scope: !11439)
!11614 = !DILocation(line: 3162, column: 12, scope: !11439)
!11615 = !DILocation(line: 3164, column: 3, scope: !11439)
!11616 = !DILocation(line: 3164, column: 3, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 3164, column: 3)
!11618 = !DILocation(line: 3165, column: 3, scope: !11439)
!11619 = !DILocation(line: 3165, column: 3, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 3165, column: 3)
!11621 = !DILocation(line: 3167, column: 8, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 3167, column: 7)
!11623 = !DILocation(line: 3167, column: 13, scope: !11622)
!11624 = !DILocation(line: 3167, column: 20, scope: !11622)
!11625 = !DILocation(line: 3167, column: 32, scope: !11622)
!11626 = !DILocation(line: 3167, column: 36, scope: !11622)
!11627 = !DILocation(line: 3167, column: 41, scope: !11622)
!11628 = !DILocation(line: 3167, column: 7, scope: !11439)
!11629 = !DILocation(line: 3168, column: 26, scope: !11622)
!11630 = !DILocation(line: 3168, column: 33, scope: !11622)
!11631 = !DILocation(line: 3168, column: 4, scope: !11622)
!11632 = !DILocation(line: 3170, column: 7, scope: !11439)
!11633 = !DILocation(line: 3177, column: 40, scope: !11439)
!11634 = !DILocation(line: 3177, column: 45, scope: !11439)
!11635 = !DILocation(line: 3177, column: 51, scope: !11439)
!11636 = !DILocation(line: 3177, column: 39, scope: !11439)
!11637 = !DILocation(line: 3177, column: 3, scope: !11439)
!11638 = !DILocation(line: 3178, column: 8, scope: !11439)
!11639 = !DILocation(line: 3185, column: 18, scope: !11439)
!11640 = !DILocation(line: 3185, column: 20, scope: !11439)
!11641 = !DILocation(line: 3185, column: 16, scope: !11439)
!11642 = !DILocation(line: 3185, column: 33, scope: !11439)
!11643 = !DILocation(line: 3185, column: 47, scope: !11439)
!11644 = !DILocation(line: 3185, column: 3, scope: !11439)
!11645 = !DILocation(line: 3185, column: 7, scope: !11439)
!11646 = !DILocation(line: 3185, column: 13, scope: !11439)
!11647 = !DILocation(line: 3186, column: 7, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 3186, column: 7)
!11649 = !DILocation(line: 3186, column: 11, scope: !11648)
!11650 = !DILocation(line: 3186, column: 7, scope: !11439)
!11651 = !DILocation(line: 3187, column: 12, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 3186, column: 18)
!11653 = !DILocation(line: 3190, column: 20, scope: !11652)
!11654 = !DILocation(line: 3190, column: 4, scope: !11652)
!11655 = !DILocation(line: 3191, column: 3, scope: !11652)
!11656 = !DILocation(line: 3192, column: 12, scope: !11648)
!11657 = !DILocation(line: 3195, column: 10, scope: !11439)
!11658 = !DILocation(line: 3195, column: 20, scope: !11439)
!11659 = !DILocation(line: 3195, column: 25, scope: !11439)
!11660 = !DILocation(line: 3195, column: 35, scope: !11439)
!11661 = !DILocation(line: 3195, column: 19, scope: !11439)
!11662 = !DILocation(line: 3195, column: 3, scope: !11439)
!11663 = !DILocation(line: 3200, column: 3, scope: !11439)
!11664 = !DILocation(line: 3200, column: 7, scope: !11439)
!11665 = !DILocation(line: 3200, column: 17, scope: !11439)
!11666 = !DILocation(line: 3202, column: 7, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 3202, column: 7)
!11668 = !DILocation(line: 3202, column: 12, scope: !11667)
!11669 = !DILocation(line: 3202, column: 19, scope: !11667)
!11670 = !DILocation(line: 3202, column: 25, scope: !11667)
!11671 = !DILocation(line: 3202, column: 7, scope: !11439)
!11672 = !DILocation(line: 3203, column: 33, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11667, file: !3, line: 3202, column: 45)
!11674 = !DILocation(line: 3203, column: 38, scope: !11673)
!11675 = !DILocation(line: 3203, column: 44, scope: !11673)
!11676 = !DILocation(line: 3203, column: 4, scope: !11673)
!11677 = !DILocation(line: 3204, column: 4, scope: !11673)
!11678 = !DILocation(line: 3207, column: 13, scope: !11439)
!11679 = !DILocation(line: 3207, column: 15, scope: !11439)
!11680 = !DILocation(line: 3207, column: 11, scope: !11439)
!11681 = !DILocation(line: 3207, column: 3, scope: !11439)
!11682 = !DILocalVariable(name: "e", scope: !11683, file: !3, line: 3209, type: !4485)
!11683 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 3208, column: 28)
!11684 = !DILocation(line: 3209, column: 23, scope: !11683)
!11685 = !DILocalVariable(name: "status", scope: !11683, file: !3, line: 3210, type: !4142)
!11686 = !DILocation(line: 3210, column: 13, scope: !11683)
!11687 = !DILocation(line: 3213, column: 10, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11683, file: !3, line: 3213, column: 8)
!11689 = !DILocation(line: 3213, column: 12, scope: !11688)
!11690 = !DILocation(line: 3213, column: 8, scope: !11688)
!11691 = !DILocation(line: 3213, column: 25, scope: !11688)
!11692 = !DILocation(line: 3213, column: 8, scope: !11683)
!11693 = !DILocation(line: 3214, column: 5, scope: !11688)
!11694 = !DILocation(line: 3215, column: 23, scope: !11683)
!11695 = !DILocation(line: 3215, column: 28, scope: !11683)
!11696 = !DILocation(line: 3215, column: 8, scope: !11683)
!11697 = !DILocation(line: 3215, column: 6, scope: !11683)
!11698 = !DILocation(line: 3216, column: 9, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11683, file: !3, line: 3216, column: 8)
!11700 = !DILocation(line: 3216, column: 11, scope: !11699)
!11701 = !DILocation(line: 3216, column: 14, scope: !11699)
!11702 = !DILocation(line: 3216, column: 23, scope: !11699)
!11703 = !DILocation(line: 3216, column: 8, scope: !11683)
!11704 = !DILocation(line: 3217, column: 5, scope: !11699)
!11705 = !DILocation(line: 3219, column: 15, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11683, file: !3, line: 3219, column: 8)
!11707 = !DILocation(line: 3219, column: 18, scope: !11706)
!11708 = !DILocation(line: 3219, column: 24, scope: !11706)
!11709 = !DILocation(line: 3219, column: 14, scope: !11706)
!11710 = !DILocation(line: 3219, column: 8, scope: !11706)
!11711 = !DILocation(line: 3219, column: 32, scope: !11706)
!11712 = !DILocation(line: 3219, column: 8, scope: !11683)
!11713 = !DILocation(line: 3220, column: 12, scope: !11706)
!11714 = !DILocation(line: 3220, column: 5, scope: !11706)
!11715 = !DILocation(line: 3222, column: 12, scope: !11706)
!11716 = !DILocation(line: 3225, column: 15, scope: !11683)
!11717 = !DILocation(line: 3225, column: 20, scope: !11683)
!11718 = !DILocation(line: 3225, column: 30, scope: !11683)
!11719 = !DILocation(line: 3225, column: 14, scope: !11683)
!11720 = !DILocation(line: 3225, column: 4, scope: !11683)
!11721 = !DILocation(line: 3226, column: 23, scope: !11683)
!11722 = !DILocation(line: 3226, column: 27, scope: !11683)
!11723 = !DILocation(line: 3226, column: 4, scope: !11683)
!11724 = !DILocation(line: 3227, column: 24, scope: !11683)
!11725 = !DILocation(line: 3227, column: 33, scope: !11683)
!11726 = !DILocation(line: 3227, column: 38, scope: !11683)
!11727 = !DILocation(line: 3227, column: 48, scope: !11683)
!11728 = !DILocation(line: 3227, column: 32, scope: !11683)
!11729 = !DILocation(line: 3227, column: 4, scope: !11683)
!11730 = !DILocation(line: 3228, column: 17, scope: !11683)
!11731 = !DILocation(line: 3228, column: 4, scope: !11683)
!11732 = !DILocation(line: 3230, column: 4, scope: !11683)
!11733 = !DILocalVariable(name: "e", scope: !11734, file: !3, line: 3234, type: !4485)
!11734 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 3233, column: 31)
!11735 = !DILocation(line: 3234, column: 23, scope: !11734)
!11736 = !DILocation(line: 3237, column: 10, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11734, file: !3, line: 3237, column: 8)
!11738 = !DILocation(line: 3237, column: 12, scope: !11737)
!11739 = !DILocation(line: 3237, column: 8, scope: !11737)
!11740 = !DILocation(line: 3237, column: 25, scope: !11737)
!11741 = !DILocation(line: 3237, column: 8, scope: !11734)
!11742 = !DILocation(line: 3238, column: 5, scope: !11737)
!11743 = !DILocation(line: 3239, column: 8, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11734, file: !3, line: 3239, column: 8)
!11745 = !DILocation(line: 3239, column: 16, scope: !11744)
!11746 = !DILocation(line: 3239, column: 37, scope: !11744)
!11747 = !DILocation(line: 3239, column: 40, scope: !11744)
!11748 = !DILocation(line: 3239, column: 49, scope: !11744)
!11749 = !DILocation(line: 3239, column: 8, scope: !11734)
!11750 = !DILocation(line: 3240, column: 5, scope: !11744)
!11751 = !DILocation(line: 3241, column: 23, scope: !11734)
!11752 = !DILocation(line: 3241, column: 28, scope: !11734)
!11753 = !DILocation(line: 3241, column: 8, scope: !11734)
!11754 = !DILocation(line: 3241, column: 6, scope: !11734)
!11755 = !DILocation(line: 3242, column: 9, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11734, file: !3, line: 3242, column: 8)
!11757 = !DILocation(line: 3242, column: 8, scope: !11734)
!11758 = !DILocation(line: 3243, column: 5, scope: !11756)
!11759 = !DILocation(line: 3244, column: 8, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11734, file: !3, line: 3244, column: 8)
!11761 = !DILocation(line: 3244, column: 11, scope: !11760)
!11762 = !DILocation(line: 3244, column: 8, scope: !11734)
!11763 = !DILocation(line: 3247, column: 4, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11760, file: !3, line: 3244, column: 19)
!11765 = !DILocation(line: 3249, column: 16, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !11760, file: !3, line: 3247, column: 11)
!11767 = !DILocation(line: 3249, column: 5, scope: !11766)
!11768 = !DILocation(line: 3250, column: 10, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11766, file: !3, line: 3250, column: 9)
!11770 = !DILocation(line: 3250, column: 14, scope: !11769)
!11771 = !DILocation(line: 3250, column: 19, scope: !11769)
!11772 = !DILocation(line: 3250, column: 26, scope: !11769)
!11773 = !DILocation(line: 3250, column: 38, scope: !11769)
!11774 = !DILocation(line: 3251, column: 19, scope: !11769)
!11775 = !DILocation(line: 3251, column: 22, scope: !11769)
!11776 = !DILocation(line: 3251, column: 7, scope: !11769)
!11777 = !DILocation(line: 3251, column: 29, scope: !11769)
!11778 = !DILocation(line: 3251, column: 32, scope: !11769)
!11779 = !DILocation(line: 3251, column: 35, scope: !11769)
!11780 = !DILocation(line: 3250, column: 9, scope: !11766)
!11781 = !DILocation(line: 3252, column: 19, scope: !11769)
!11782 = !DILocation(line: 3252, column: 7, scope: !11769)
!11783 = !DILocation(line: 3254, column: 17, scope: !11734)
!11784 = !DILocation(line: 3254, column: 4, scope: !11734)
!11785 = !DILocation(line: 3255, column: 4, scope: !11734)
!11786 = !DILocalVariable(name: "e", scope: !11787, file: !3, line: 3259, type: !4485)
!11787 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 3258, column: 29)
!11788 = !DILocation(line: 3259, column: 23, scope: !11787)
!11789 = !DILocation(line: 3262, column: 10, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 3262, column: 8)
!11791 = !DILocation(line: 3262, column: 12, scope: !11790)
!11792 = !DILocation(line: 3262, column: 8, scope: !11790)
!11793 = !DILocation(line: 3262, column: 25, scope: !11790)
!11794 = !DILocation(line: 3262, column: 8, scope: !11787)
!11795 = !DILocation(line: 3263, column: 5, scope: !11790)
!11796 = !DILocation(line: 3264, column: 8, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 3264, column: 8)
!11798 = !DILocation(line: 3264, column: 16, scope: !11797)
!11799 = !DILocation(line: 3264, column: 37, scope: !11797)
!11800 = !DILocation(line: 3264, column: 40, scope: !11797)
!11801 = !DILocation(line: 3264, column: 49, scope: !11797)
!11802 = !DILocation(line: 3264, column: 8, scope: !11787)
!11803 = !DILocation(line: 3265, column: 5, scope: !11797)
!11804 = !DILocation(line: 3266, column: 23, scope: !11787)
!11805 = !DILocation(line: 3266, column: 28, scope: !11787)
!11806 = !DILocation(line: 3266, column: 8, scope: !11787)
!11807 = !DILocation(line: 3266, column: 6, scope: !11787)
!11808 = !DILocation(line: 3267, column: 9, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 3267, column: 8)
!11810 = !DILocation(line: 3267, column: 8, scope: !11787)
!11811 = !DILocation(line: 3268, column: 5, scope: !11809)
!11812 = !DILocation(line: 3269, column: 8, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 3269, column: 8)
!11814 = !DILocation(line: 3269, column: 11, scope: !11813)
!11815 = !DILocation(line: 3269, column: 14, scope: !11813)
!11816 = !DILocation(line: 3269, column: 19, scope: !11813)
!11817 = !DILocation(line: 3269, column: 8, scope: !11787)
!11818 = !DILocation(line: 3270, column: 5, scope: !11813)
!11819 = !DILocation(line: 3271, column: 13, scope: !11787)
!11820 = !DILocation(line: 3271, column: 4, scope: !11787)
!11821 = !DILocation(line: 3272, column: 9, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 3272, column: 8)
!11823 = !DILocation(line: 3272, column: 14, scope: !11822)
!11824 = !DILocation(line: 3272, column: 21, scope: !11822)
!11825 = !DILocation(line: 3272, column: 33, scope: !11822)
!11826 = !DILocation(line: 3272, column: 36, scope: !11822)
!11827 = !DILocation(line: 3272, column: 39, scope: !11822)
!11828 = !DILocation(line: 3272, column: 8, scope: !11787)
!11829 = !DILocation(line: 3273, column: 15, scope: !11822)
!11830 = !DILocation(line: 3273, column: 5, scope: !11822)
!11831 = !DILocation(line: 3274, column: 17, scope: !11787)
!11832 = !DILocation(line: 3274, column: 4, scope: !11787)
!11833 = !DILocation(line: 3276, column: 4, scope: !11787)
!11834 = !DILocation(line: 3277, column: 4, scope: !11787)
!11835 = !DILabel(scope: !11438, name: "delegate", file: !3, line: 3280)
!11836 = !DILocation(line: 3280, column: 1, scope: !11438)
!11837 = !DILocation(line: 3286, column: 4, scope: !11438)
!11838 = !DILocation(line: 3286, column: 8, scope: !11438)
!11839 = !DILocation(line: 3286, column: 18, scope: !11438)
!11840 = !DILocation(line: 3287, column: 17, scope: !11438)
!11841 = !DILocation(line: 3287, column: 22, scope: !11438)
!11842 = !DILocation(line: 394, column: 2, scope: !5642, inlinedAt: !11442)
!11843 = !DILocation(line: 394, column: 2, scope: !5645, inlinedAt: !11442)
!11844 = !DILocation(line: 3288, column: 10, scope: !11438)
!11845 = !DILocation(line: 3288, column: 15, scope: !11438)
!11846 = !DILocation(line: 3288, column: 23, scope: !11438)
!11847 = !DILocation(line: 3288, column: 30, scope: !11438)
!11848 = !DILocation(line: 3288, column: 35, scope: !11438)
!11849 = !DILocation(line: 3288, column: 46, scope: !11438)
!11850 = !DILocation(line: 3288, column: 8, scope: !11438)
!11851 = !DILocation(line: 3289, column: 15, scope: !11438)
!11852 = !DILocation(line: 3289, column: 20, scope: !11438)
!11853 = !DILocation(line: 354, column: 2, scope: !5594, inlinedAt: !11437)
!11854 = !DILocation(line: 354, column: 2, scope: !5597, inlinedAt: !11437)
!11855 = !DILocation(line: 3290, column: 3, scope: !11438)
!11856 = !DILocation(line: 3293, column: 7, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 3293, column: 7)
!11858 = !DILocation(line: 3293, column: 11, scope: !11857)
!11859 = !DILocation(line: 3293, column: 7, scope: !11439)
!11860 = !DILocation(line: 3293, column: 16, scope: !11857)
!11861 = !DILabel(scope: !11862, name: "do_stall", file: !3, line: 3294)
!11862 = distinct !DILexicalBlock(scope: !11857, file: !3, line: 3293, column: 16)
!11863 = !DILocation(line: 3294, column: 1, scope: !11862)
!11864 = !DILocation(line: 3297, column: 4, scope: !11862)
!11865 = !DILocation(line: 3297, column: 9, scope: !11862)
!11866 = !DILocation(line: 3297, column: 24, scope: !11862)
!11867 = !DILocation(line: 3298, column: 3, scope: !11862)
!11868 = !DILocation(line: 3304, column: 2, scope: !11439)
!11869 = !DILabel(scope: !11435, name: "next_endpoints", file: !3, line: 3310)
!11870 = !DILocation(line: 3310, column: 1, scope: !11435)
!11871 = !DILocation(line: 3311, column: 7, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11435, file: !3, line: 3311, column: 6)
!11873 = !DILocation(line: 3311, column: 12, scope: !11872)
!11874 = !DILocation(line: 3311, column: 19, scope: !11872)
!11875 = !DILocation(line: 3311, column: 31, scope: !11872)
!11876 = !DILocation(line: 3311, column: 34, scope: !11872)
!11877 = !DILocation(line: 3311, column: 39, scope: !11872)
!11878 = !DILocation(line: 3311, column: 6, scope: !11435)
!11879 = !DILocalVariable(name: "mask", scope: !11880, file: !3, line: 3312, type: !144)
!11880 = distinct !DILexicalBlock(scope: !11872, file: !3, line: 3311, column: 54)
!11881 = !DILocation(line: 3312, column: 7, scope: !11880)
!11882 = !DILocation(line: 3316, column: 7, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11880, file: !3, line: 3316, column: 7)
!11884 = !DILocation(line: 3316, column: 14, scope: !11883)
!11885 = !DILocation(line: 3316, column: 12, scope: !11883)
!11886 = !DILocation(line: 3316, column: 7, scope: !11880)
!11887 = !DILocation(line: 3317, column: 27, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11883, file: !3, line: 3316, column: 20)
!11889 = !DILocation(line: 3317, column: 32, scope: !11888)
!11890 = !DILocation(line: 3317, column: 39, scope: !11888)
!11891 = !DILocation(line: 3317, column: 37, scope: !11888)
!11892 = !DILocation(line: 3317, column: 4, scope: !11888)
!11893 = !DILocation(line: 3318, column: 13, scope: !11888)
!11894 = !DILocation(line: 3318, column: 12, scope: !11888)
!11895 = !DILocation(line: 3318, column: 9, scope: !11888)
!11896 = !DILocation(line: 3319, column: 3, scope: !11888)
!11897 = !DILocation(line: 3320, column: 2, scope: !11880)
!11898 = !DILocation(line: 3322, column: 13, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11872, file: !3, line: 3320, column: 9)
!11900 = !DILocation(line: 3322, column: 18, scope: !11899)
!11901 = !DILocation(line: 3322, column: 11, scope: !11899)
!11902 = !DILocation(line: 3323, column: 8, scope: !11899)
!11903 = !DILocation(line: 3324, column: 12, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11899, file: !3, line: 3324, column: 3)
!11905 = !DILocation(line: 3324, column: 8, scope: !11904)
!11906 = !DILocation(line: 3324, column: 17, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11904, file: !3, line: 3324, column: 3)
!11908 = !DILocation(line: 3324, column: 3, scope: !11904)
!11909 = !DILocalVariable(name: "t", scope: !11910, file: !3, line: 3325, type: !144)
!11910 = distinct !DILexicalBlock(scope: !11907, file: !3, line: 3324, column: 33)
!11911 = !DILocation(line: 3325, column: 9, scope: !11910)
!11912 = !DILocation(line: 3328, column: 8, scope: !11910)
!11913 = !DILocation(line: 3328, column: 6, scope: !11910)
!11914 = !DILocation(line: 3329, column: 9, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11910, file: !3, line: 3329, column: 8)
!11916 = !DILocation(line: 3329, column: 19, scope: !11915)
!11917 = !DILocation(line: 3329, column: 17, scope: !11915)
!11918 = !DILocation(line: 3329, column: 22, scope: !11915)
!11919 = !DILocation(line: 3329, column: 8, scope: !11910)
!11920 = !DILocation(line: 3330, column: 5, scope: !11915)
!11921 = !DILocation(line: 3331, column: 15, scope: !11910)
!11922 = !DILocation(line: 3331, column: 12, scope: !11910)
!11923 = !DILocation(line: 3333, column: 10, scope: !11910)
!11924 = !DILocation(line: 3333, column: 15, scope: !11910)
!11925 = !DILocation(line: 3333, column: 18, scope: !11910)
!11926 = !DILocation(line: 3333, column: 7, scope: !11910)
!11927 = !DILocation(line: 3334, column: 20, scope: !11910)
!11928 = !DILocation(line: 3334, column: 4, scope: !11910)
!11929 = !DILocation(line: 3335, column: 3, scope: !11910)
!11930 = !DILocation(line: 3324, column: 29, scope: !11907)
!11931 = !DILocation(line: 3324, column: 3, scope: !11907)
!11932 = distinct !{!11932, !11908, !11933}
!11933 = !DILocation(line: 3335, column: 3, scope: !11904)
!11934 = !DILocation(line: 3338, column: 6, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11435, file: !3, line: 3338, column: 6)
!11936 = !DILocation(line: 3338, column: 6, scope: !11435)
!11937 = !DILocation(line: 3339, column: 3, scope: !11935)
!11938 = !DILocation(line: 3340, column: 1, scope: !11435)
!11939 = distinct !DISubprogram(name: "net2280_led_speed", scope: !286, file: !286, line: 263, type: !11940, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!11940 = !DISubroutineType(types: !11941)
!11941 = !{null, !284, !93}
!11942 = !DILocalVariable(name: "dev", arg: 1, scope: !11939, file: !286, line: 263, type: !284)
!11943 = !DILocation(line: 263, column: 40, scope: !11939)
!11944 = !DILocalVariable(name: "speed", arg: 2, scope: !11939, file: !286, line: 263, type: !93)
!11945 = !DILocation(line: 263, column: 67, scope: !11939)
!11946 = !DILocalVariable(name: "val", scope: !11939, file: !286, line: 265, type: !144)
!11947 = !DILocation(line: 265, column: 6, scope: !11939)
!11948 = !DILocation(line: 265, column: 19, scope: !11939)
!11949 = !DILocation(line: 265, column: 24, scope: !11939)
!11950 = !DILocation(line: 265, column: 30, scope: !11939)
!11951 = !DILocation(line: 265, column: 18, scope: !11939)
!11952 = !DILocation(line: 265, column: 12, scope: !11939)
!11953 = !DILocation(line: 266, column: 10, scope: !11939)
!11954 = !DILocation(line: 266, column: 2, scope: !11939)
!11955 = !DILocation(line: 268, column: 7, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11939, file: !286, line: 266, column: 17)
!11957 = !DILocation(line: 269, column: 3, scope: !11956)
!11958 = !DILocation(line: 271, column: 7, scope: !11956)
!11959 = !DILocation(line: 272, column: 7, scope: !11956)
!11960 = !DILocation(line: 273, column: 3, scope: !11956)
!11961 = !DILocation(line: 275, column: 7, scope: !11956)
!11962 = !DILocation(line: 276, column: 7, scope: !11956)
!11963 = !DILocation(line: 277, column: 3, scope: !11956)
!11964 = !DILocation(line: 279, column: 7, scope: !11956)
!11965 = !DILocation(line: 280, column: 3, scope: !11956)
!11966 = !DILocation(line: 282, column: 9, scope: !11939)
!11967 = !DILocation(line: 282, column: 15, scope: !11939)
!11968 = !DILocation(line: 282, column: 20, scope: !11939)
!11969 = !DILocation(line: 282, column: 26, scope: !11939)
!11970 = !DILocation(line: 282, column: 14, scope: !11939)
!11971 = !DILocation(line: 282, column: 2, scope: !11939)
!11972 = !DILocation(line: 283, column: 1, scope: !11939)
!11973 = distinct !DISubprogram(name: "defect7374_workaround", scope: !3, file: !3, line: 2771, type: !11974, scopeLine: 2772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!11974 = !DISubroutineType(types: !11975)
!11975 = !{null, !284, !387}
!11976 = !DILocalVariable(name: "dev", arg: 1, scope: !11973, file: !3, line: 2771, type: !284)
!11977 = !DILocation(line: 2771, column: 51, scope: !11973)
!11978 = !DILocalVariable(name: "r", arg: 2, scope: !11973, file: !3, line: 2771, type: !387)
!11979 = !DILocation(line: 2771, column: 79, scope: !11973)
!11980 = !DILocalVariable(name: "scratch", scope: !11973, file: !3, line: 2773, type: !144)
!11981 = !DILocation(line: 2773, column: 6, scope: !11973)
!11982 = !DILocalVariable(name: "fsmvalue", scope: !11973, file: !3, line: 2773, type: !144)
!11983 = !DILocation(line: 2773, column: 15, scope: !11973)
!11984 = !DILocalVariable(name: "ack_wait_timeout", scope: !11973, file: !3, line: 2774, type: !144)
!11985 = !DILocation(line: 2774, column: 6, scope: !11973)
!11986 = !DILocalVariable(name: "state", scope: !11973, file: !3, line: 2774, type: !144)
!11987 = !DILocation(line: 2774, column: 24, scope: !11973)
!11988 = !DILocation(line: 2777, column: 24, scope: !11973)
!11989 = !DILocation(line: 2777, column: 29, scope: !11973)
!11990 = !DILocation(line: 2777, column: 12, scope: !11973)
!11991 = !DILocation(line: 2777, column: 10, scope: !11973)
!11992 = !DILocation(line: 2778, column: 13, scope: !11973)
!11993 = !DILocation(line: 2778, column: 21, scope: !11973)
!11994 = !DILocation(line: 2778, column: 11, scope: !11973)
!11995 = !DILocation(line: 2779, column: 10, scope: !11973)
!11996 = !DILocation(line: 2781, column: 9, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 2781, column: 6)
!11998 = !DILocation(line: 2781, column: 18, scope: !11997)
!11999 = !DILocation(line: 2781, column: 62, scope: !11997)
!12000 = !DILocation(line: 2782, column: 8, scope: !11997)
!12001 = !DILocation(line: 2782, column: 6, scope: !11997)
!12002 = !DILocation(line: 2782, column: 21, scope: !11997)
!12003 = !DILocation(line: 2781, column: 6, scope: !11973)
!12004 = !DILocation(line: 2783, column: 3, scope: !11997)
!12005 = !DILocation(line: 2786, column: 15, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 2786, column: 6)
!12007 = !DILocation(line: 2786, column: 20, scope: !12006)
!12008 = !DILocation(line: 2786, column: 25, scope: !12006)
!12009 = !DILocation(line: 2786, column: 14, scope: !12006)
!12010 = !DILocation(line: 2786, column: 8, scope: !12006)
!12011 = !DILocation(line: 2786, column: 34, scope: !12006)
!12012 = !DILocation(line: 2786, column: 6, scope: !11973)
!12013 = !DILocation(line: 2793, column: 11, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12006, file: !3, line: 2786, column: 60)
!12015 = !DILocation(line: 2794, column: 3, scope: !12014)
!12016 = !DILocation(line: 2794, column: 8, scope: !12014)
!12017 = !DILocation(line: 2794, column: 24, scope: !12014)
!12018 = !DILocation(line: 2795, column: 3, scope: !12014)
!12019 = !DILocation(line: 2799, column: 24, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 2799, column: 2)
!12021 = !DILocation(line: 2799, column: 7, scope: !12020)
!12022 = !DILocation(line: 2800, column: 4, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !12020, file: !3, line: 2799, column: 2)
!12024 = !DILocation(line: 2800, column: 21, scope: !12023)
!12025 = !DILocation(line: 2799, column: 2, scope: !12020)
!12026 = !DILocation(line: 2803, column: 18, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12023, file: !3, line: 2801, column: 24)
!12028 = !DILocation(line: 2803, column: 23, scope: !12027)
!12029 = !DILocation(line: 2803, column: 31, scope: !12027)
!12030 = !DILocation(line: 2803, column: 17, scope: !12027)
!12031 = !DILocation(line: 2803, column: 11, scope: !12027)
!12032 = !DILocation(line: 2804, column: 4, scope: !12027)
!12033 = !DILocation(line: 2803, column: 9, scope: !12027)
!12034 = !DILocation(line: 2805, column: 8, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12027, file: !3, line: 2805, column: 7)
!12036 = !DILocation(line: 2805, column: 14, scope: !12035)
!12037 = !DILocation(line: 2805, column: 45, scope: !12035)
!12038 = !DILocation(line: 2806, column: 5, scope: !12035)
!12039 = !DILocation(line: 2806, column: 11, scope: !12035)
!12040 = !DILocation(line: 2805, column: 7, scope: !12027)
!12041 = !DILocation(line: 2807, column: 12, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12035, file: !3, line: 2806, column: 54)
!12043 = !DILocation(line: 2808, column: 4, scope: !12042)
!12044 = !DILocation(line: 2808, column: 9, scope: !12042)
!12045 = !DILocation(line: 2808, column: 25, scope: !12042)
!12046 = !DILocation(line: 2809, column: 4, scope: !12042)
!12047 = !DILocation(line: 2816, column: 3, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12049, file: !3, line: 2816, column: 3)
!12049 = distinct !DILexicalBlock(scope: !12050, file: !3, line: 2816, column: 3)
!12050 = distinct !DILexicalBlock(scope: !12051, file: !3, line: 2816, column: 3)
!12051 = distinct !DILexicalBlock(scope: !12027, file: !3, line: 2816, column: 3)
!12052 = !DILocation(line: 2818, column: 3, scope: !12027)
!12053 = !DILocation(line: 2801, column: 20, scope: !12023)
!12054 = !DILocation(line: 2799, column: 2, scope: !12023)
!12055 = distinct !{!12055, !12025, !12056}
!12056 = !DILocation(line: 2819, column: 2, scope: !12020)
!12057 = !DILocation(line: 2822, column: 6, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 2822, column: 6)
!12059 = !DILocation(line: 2822, column: 23, scope: !12058)
!12060 = !DILocation(line: 2822, column: 6, scope: !11973)
!12061 = !DILocation(line: 2823, column: 3, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12058, file: !3, line: 2822, column: 63)
!12063 = !DILocation(line: 2825, column: 3, scope: !12062)
!12064 = !DILocation(line: 2827, column: 2, scope: !12062)
!12065 = !DILocation(line: 2828, column: 3, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12058, file: !3, line: 2827, column: 9)
!12067 = !DILocation(line: 2822, column: 26, scope: !12058)
!12068 = !DILabel(scope: !11973, name: "restore_data_eps", file: !3, line: 2833)
!12069 = !DILocation(line: 2833, column: 1, scope: !11973)
!12070 = !DILocation(line: 2838, column: 30, scope: !11973)
!12071 = !DILocation(line: 2838, column: 2, scope: !11973)
!12072 = !DILocation(line: 2840, column: 14, scope: !11973)
!12073 = !DILocation(line: 2840, column: 19, scope: !11973)
!12074 = !DILocation(line: 2840, column: 34, scope: !11973)
!12075 = !DILocation(line: 2840, column: 2, scope: !11973)
!12076 = !DILocation(line: 2842, column: 2, scope: !11973)
!12077 = !DILocation(line: 2843, column: 1, scope: !11973)
!12078 = distinct !DISubprogram(name: "handle_stat0_irqs_superspeed", scope: !3, file: !3, line: 2860, type: !12079, scopeLine: 2862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!12079 = !DISubroutineType(types: !12080)
!12080 = !{null, !284, !4485, !387}
!12081 = !DILocation(line: 352, column: 51, scope: !5568, inlinedAt: !12082)
!12082 = distinct !DILocation(line: 3047, column: 3, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12078, file: !3, line: 2871, column: 22)
!12084 = !DILocation(line: 392, column: 53, scope: !5562, inlinedAt: !12085)
!12085 = distinct !DILocation(line: 3045, column: 3, scope: !12083)
!12086 = !DILocalVariable(name: "dev", arg: 1, scope: !12078, file: !3, line: 2860, type: !284)
!12087 = !DILocation(line: 2860, column: 58, scope: !12078)
!12088 = !DILocalVariable(name: "ep", arg: 2, scope: !12078, file: !3, line: 2861, type: !4485)
!12089 = !DILocation(line: 2861, column: 22, scope: !12078)
!12090 = !DILocalVariable(name: "r", arg: 3, scope: !12078, file: !3, line: 2861, type: !387)
!12091 = !DILocation(line: 2861, column: 49, scope: !12078)
!12092 = !DILocalVariable(name: "e", scope: !12078, file: !3, line: 2863, type: !4485)
!12093 = !DILocation(line: 2863, column: 21, scope: !12078)
!12094 = !DILocalVariable(name: "status", scope: !12078, file: !3, line: 2864, type: !1036)
!12095 = !DILocation(line: 2864, column: 6, scope: !12078)
!12096 = !DILocalVariable(name: "tmp", scope: !12078, file: !3, line: 2865, type: !330)
!12097 = !DILocation(line: 2865, column: 6, scope: !12078)
!12098 = !DILocation(line: 2871, column: 12, scope: !12078)
!12099 = !DILocation(line: 2871, column: 10, scope: !12078)
!12100 = !DILocation(line: 2871, column: 2, scope: !12078)
!12101 = !DILocation(line: 2873, column: 27, scope: !12083)
!12102 = !DILocation(line: 2873, column: 26, scope: !12083)
!12103 = !DILocation(line: 2873, column: 3, scope: !12083)
!12104 = !DILocation(line: 2873, column: 8, scope: !12083)
!12105 = !DILocation(line: 2873, column: 24, scope: !12083)
!12106 = !DILocation(line: 2874, column: 3, scope: !12083)
!12107 = !DILocation(line: 2877, column: 13, scope: !12083)
!12108 = !DILocation(line: 2877, column: 11, scope: !12083)
!12109 = !DILocation(line: 2877, column: 3, scope: !12083)
!12110 = !DILocation(line: 2879, column: 13, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12083, file: !3, line: 2877, column: 27)
!12112 = !DILocation(line: 2879, column: 18, scope: !12111)
!12113 = !DILocation(line: 2879, column: 11, scope: !12111)
!12114 = !DILocation(line: 2880, column: 8, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12111, file: !3, line: 2880, column: 8)
!12116 = !DILocation(line: 2880, column: 13, scope: !12115)
!12117 = !DILocation(line: 2880, column: 20, scope: !12115)
!12118 = !DILocation(line: 2880, column: 8, scope: !12111)
!12119 = !DILocation(line: 2881, column: 12, scope: !12115)
!12120 = !DILocation(line: 2881, column: 5, scope: !12115)
!12121 = !DILocation(line: 2882, column: 15, scope: !12111)
!12122 = !DILocation(line: 2882, column: 20, scope: !12111)
!12123 = !DILocation(line: 2882, column: 30, scope: !12111)
!12124 = !DILocation(line: 2882, column: 37, scope: !12111)
!12125 = !DILocation(line: 2882, column: 42, scope: !12111)
!12126 = !DILocation(line: 2882, column: 52, scope: !12111)
!12127 = !DILocation(line: 2882, column: 35, scope: !12111)
!12128 = !DILocation(line: 2883, column: 8, scope: !12111)
!12129 = !DILocation(line: 2883, column: 13, scope: !12111)
!12130 = !DILocation(line: 2883, column: 24, scope: !12111)
!12131 = !DILocation(line: 2882, column: 57, scope: !12111)
!12132 = !DILocation(line: 2882, column: 11, scope: !12111)
!12133 = !DILocation(line: 2884, column: 15, scope: !12111)
!12134 = !DILocation(line: 2884, column: 20, scope: !12111)
!12135 = !DILocation(line: 2884, column: 30, scope: !12111)
!12136 = !DILocation(line: 2884, column: 14, scope: !12111)
!12137 = !DILocation(line: 2884, column: 4, scope: !12111)
!12138 = !DILocation(line: 2885, column: 23, scope: !12111)
!12139 = !DILocation(line: 2885, column: 4, scope: !12111)
!12140 = !DILocation(line: 2886, column: 25, scope: !12111)
!12141 = !DILocation(line: 2886, column: 11, scope: !12111)
!12142 = !DILocation(line: 2886, column: 34, scope: !12111)
!12143 = !DILocation(line: 2886, column: 39, scope: !12111)
!12144 = !DILocation(line: 2886, column: 49, scope: !12111)
!12145 = !DILocation(line: 2886, column: 33, scope: !12111)
!12146 = !DILocation(line: 2886, column: 4, scope: !12111)
!12147 = !DILocation(line: 2887, column: 22, scope: !12111)
!12148 = !DILocation(line: 2887, column: 4, scope: !12111)
!12149 = !DILocation(line: 2888, column: 4, scope: !12111)
!12150 = !DILocation(line: 2891, column: 23, scope: !12111)
!12151 = !DILocation(line: 2891, column: 28, scope: !12111)
!12152 = !DILocation(line: 2891, column: 8, scope: !12111)
!12153 = !DILocation(line: 2891, column: 6, scope: !12111)
!12154 = !DILocation(line: 2892, column: 9, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12111, file: !3, line: 2892, column: 8)
!12156 = !DILocation(line: 2892, column: 8, scope: !12111)
!12157 = !DILocation(line: 2893, column: 5, scope: !12155)
!12158 = !DILocation(line: 2894, column: 20, scope: !12111)
!12159 = !DILocation(line: 2894, column: 23, scope: !12111)
!12160 = !DILocation(line: 2894, column: 29, scope: !12111)
!12161 = !DILocation(line: 2894, column: 19, scope: !12111)
!12162 = !DILocation(line: 2894, column: 13, scope: !12111)
!12163 = !DILocation(line: 2894, column: 37, scope: !12111)
!12164 = !DILocation(line: 2894, column: 11, scope: !12111)
!12165 = !DILocation(line: 2896, column: 15, scope: !12111)
!12166 = !DILocation(line: 2896, column: 20, scope: !12111)
!12167 = !DILocation(line: 2896, column: 30, scope: !12111)
!12168 = !DILocation(line: 2896, column: 14, scope: !12111)
!12169 = !DILocation(line: 2896, column: 4, scope: !12111)
!12170 = !DILocation(line: 2897, column: 23, scope: !12111)
!12171 = !DILocation(line: 2897, column: 4, scope: !12111)
!12172 = !DILocation(line: 2898, column: 25, scope: !12111)
!12173 = !DILocation(line: 2898, column: 11, scope: !12111)
!12174 = !DILocation(line: 2898, column: 34, scope: !12111)
!12175 = !DILocation(line: 2898, column: 39, scope: !12111)
!12176 = !DILocation(line: 2898, column: 49, scope: !12111)
!12177 = !DILocation(line: 2898, column: 33, scope: !12111)
!12178 = !DILocation(line: 2898, column: 4, scope: !12111)
!12179 = !DILocation(line: 2899, column: 22, scope: !12111)
!12180 = !DILocation(line: 2899, column: 4, scope: !12111)
!12181 = !DILocation(line: 2900, column: 4, scope: !12111)
!12182 = !DILocation(line: 2903, column: 4, scope: !12111)
!12183 = !DILocation(line: 2905, column: 3, scope: !12083)
!12184 = !DILocation(line: 2908, column: 13, scope: !12083)
!12185 = !DILocation(line: 2908, column: 11, scope: !12083)
!12186 = !DILocation(line: 2908, column: 3, scope: !12083)
!12187 = !DILocation(line: 2910, column: 9, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 2910, column: 8)
!12189 = distinct !DILexicalBlock(scope: !12083, file: !3, line: 2908, column: 27)
!12190 = !DILocation(line: 2910, column: 14, scope: !12188)
!12191 = !DILocation(line: 2910, column: 8, scope: !12189)
!12192 = !DILocation(line: 2911, column: 13, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12188, file: !3, line: 2910, column: 31)
!12194 = !DILocation(line: 2911, column: 5, scope: !12193)
!12195 = !DILocation(line: 2913, column: 6, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12193, file: !3, line: 2911, column: 22)
!12197 = !DILocation(line: 2913, column: 11, scope: !12196)
!12198 = !DILocation(line: 2913, column: 21, scope: !12196)
!12199 = !DILocation(line: 2914, column: 20, scope: !12196)
!12200 = !DILocation(line: 2914, column: 25, scope: !12196)
!12201 = !DILocation(line: 2914, column: 34, scope: !12196)
!12202 = !DILocation(line: 2914, column: 19, scope: !12196)
!12203 = !DILocation(line: 2914, column: 13, scope: !12196)
!12204 = !DILocation(line: 2914, column: 43, scope: !12196)
!12205 = !DILocation(line: 2916, column: 8, scope: !12196)
!12206 = !DILocation(line: 2916, column: 13, scope: !12196)
!12207 = !DILocation(line: 2916, column: 22, scope: !12196)
!12208 = !DILocation(line: 2916, column: 7, scope: !12196)
!12209 = !DILocation(line: 2914, column: 6, scope: !12196)
!12210 = !DILocation(line: 2917, column: 24, scope: !12196)
!12211 = !DILocation(line: 2917, column: 6, scope: !12196)
!12212 = !DILocation(line: 2918, column: 6, scope: !12196)
!12213 = !DILocation(line: 2921, column: 6, scope: !12196)
!12214 = !DILocation(line: 2921, column: 11, scope: !12196)
!12215 = !DILocation(line: 2921, column: 21, scope: !12196)
!12216 = !DILocation(line: 2922, column: 20, scope: !12196)
!12217 = !DILocation(line: 2922, column: 25, scope: !12196)
!12218 = !DILocation(line: 2922, column: 34, scope: !12196)
!12219 = !DILocation(line: 2922, column: 19, scope: !12196)
!12220 = !DILocation(line: 2922, column: 13, scope: !12196)
!12221 = !DILocation(line: 2922, column: 43, scope: !12196)
!12222 = !DILocation(line: 2924, column: 8, scope: !12196)
!12223 = !DILocation(line: 2924, column: 13, scope: !12196)
!12224 = !DILocation(line: 2924, column: 22, scope: !12196)
!12225 = !DILocation(line: 2924, column: 7, scope: !12196)
!12226 = !DILocation(line: 2922, column: 6, scope: !12196)
!12227 = !DILocation(line: 2925, column: 24, scope: !12196)
!12228 = !DILocation(line: 2925, column: 6, scope: !12196)
!12229 = !DILocation(line: 2926, column: 6, scope: !12196)
!12230 = !DILocation(line: 2929, column: 6, scope: !12196)
!12231 = !DILocation(line: 2929, column: 11, scope: !12196)
!12232 = !DILocation(line: 2929, column: 22, scope: !12196)
!12233 = !DILocation(line: 2930, column: 20, scope: !12196)
!12234 = !DILocation(line: 2930, column: 25, scope: !12196)
!12235 = !DILocation(line: 2930, column: 34, scope: !12196)
!12236 = !DILocation(line: 2930, column: 19, scope: !12196)
!12237 = !DILocation(line: 2930, column: 13, scope: !12196)
!12238 = !DILocation(line: 2930, column: 43, scope: !12196)
!12239 = !DILocation(line: 2932, column: 8, scope: !12196)
!12240 = !DILocation(line: 2932, column: 13, scope: !12196)
!12241 = !DILocation(line: 2932, column: 22, scope: !12196)
!12242 = !DILocation(line: 2932, column: 7, scope: !12196)
!12243 = !DILocation(line: 2930, column: 6, scope: !12196)
!12244 = !DILocation(line: 2933, column: 24, scope: !12196)
!12245 = !DILocation(line: 2933, column: 6, scope: !12196)
!12246 = !DILocation(line: 2934, column: 6, scope: !12196)
!12247 = !DILocation(line: 2937, column: 6, scope: !12196)
!12248 = !DILocation(line: 2939, column: 4, scope: !12193)
!12249 = !DILocation(line: 2940, column: 8, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 2940, column: 8)
!12251 = !DILocation(line: 2940, column: 16, scope: !12250)
!12252 = !DILocation(line: 2940, column: 8, scope: !12189)
!12253 = !DILocation(line: 2941, column: 5, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12250, file: !3, line: 2940, column: 45)
!12255 = !DILocation(line: 2941, column: 10, scope: !12254)
!12256 = !DILocation(line: 2941, column: 24, scope: !12254)
!12257 = !DILocation(line: 2942, column: 19, scope: !12254)
!12258 = !DILocation(line: 2942, column: 24, scope: !12254)
!12259 = !DILocation(line: 2942, column: 29, scope: !12254)
!12260 = !DILocation(line: 2942, column: 18, scope: !12254)
!12261 = !DILocation(line: 2942, column: 12, scope: !12254)
!12262 = !DILocation(line: 2942, column: 37, scope: !12254)
!12263 = !DILocation(line: 2944, column: 7, scope: !12254)
!12264 = !DILocation(line: 2944, column: 12, scope: !12254)
!12265 = !DILocation(line: 2944, column: 17, scope: !12254)
!12266 = !DILocation(line: 2944, column: 6, scope: !12254)
!12267 = !DILocation(line: 2942, column: 5, scope: !12254)
!12268 = !DILocation(line: 2945, column: 23, scope: !12254)
!12269 = !DILocation(line: 2945, column: 5, scope: !12254)
!12270 = !DILocation(line: 2946, column: 5, scope: !12254)
!12271 = !DILocation(line: 2948, column: 4, scope: !12189)
!12272 = !DILocation(line: 2951, column: 23, scope: !12189)
!12273 = !DILocation(line: 2951, column: 28, scope: !12189)
!12274 = !DILocation(line: 2951, column: 8, scope: !12189)
!12275 = !DILocation(line: 2951, column: 6, scope: !12189)
!12276 = !DILocation(line: 2952, column: 9, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 2952, column: 8)
!12278 = !DILocation(line: 2952, column: 8, scope: !12189)
!12279 = !DILocation(line: 2953, column: 5, scope: !12277)
!12280 = !DILocation(line: 2954, column: 8, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 2954, column: 8)
!12282 = !DILocation(line: 2954, column: 16, scope: !12281)
!12283 = !DILocation(line: 2954, column: 8, scope: !12189)
!12284 = !DILocation(line: 2955, column: 5, scope: !12281)
!12285 = !DILocation(line: 2961, column: 20, scope: !12189)
!12286 = !DILocation(line: 2961, column: 4, scope: !12189)
!12287 = !DILocation(line: 2962, column: 15, scope: !12189)
!12288 = !DILocation(line: 2962, column: 4, scope: !12189)
!12289 = !DILocation(line: 2963, column: 21, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 2963, column: 8)
!12291 = !DILocation(line: 2963, column: 24, scope: !12290)
!12292 = !DILocation(line: 2963, column: 9, scope: !12290)
!12293 = !DILocation(line: 2963, column: 31, scope: !12290)
!12294 = !DILocation(line: 2963, column: 34, scope: !12290)
!12295 = !DILocation(line: 2963, column: 37, scope: !12290)
!12296 = !DILocation(line: 2963, column: 8, scope: !12189)
!12297 = !DILocation(line: 2964, column: 17, scope: !12290)
!12298 = !DILocation(line: 2964, column: 5, scope: !12290)
!12299 = !DILocation(line: 2965, column: 17, scope: !12189)
!12300 = !DILocation(line: 2965, column: 4, scope: !12189)
!12301 = !DILocation(line: 2966, column: 4, scope: !12189)
!12302 = !DILocation(line: 2966, column: 8, scope: !12189)
!12303 = !DILocation(line: 2966, column: 16, scope: !12189)
!12304 = !DILocation(line: 2967, column: 4, scope: !12189)
!12305 = !DILocation(line: 2970, column: 4, scope: !12189)
!12306 = !DILocation(line: 2972, column: 3, scope: !12083)
!12307 = !DILocation(line: 2974, column: 13, scope: !12083)
!12308 = !DILocation(line: 2974, column: 11, scope: !12083)
!12309 = !DILocation(line: 2974, column: 3, scope: !12083)
!12310 = !DILocation(line: 2976, column: 9, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12312, file: !3, line: 2976, column: 8)
!12312 = distinct !DILexicalBlock(scope: !12083, file: !3, line: 2974, column: 27)
!12313 = !DILocation(line: 2976, column: 14, scope: !12311)
!12314 = !DILocation(line: 2976, column: 8, scope: !12312)
!12315 = !DILocation(line: 2977, column: 13, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12311, file: !3, line: 2976, column: 31)
!12317 = !DILocation(line: 2977, column: 5, scope: !12316)
!12318 = !DILocation(line: 2979, column: 6, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12316, file: !3, line: 2977, column: 22)
!12320 = !DILocation(line: 2979, column: 11, scope: !12319)
!12321 = !DILocation(line: 2979, column: 21, scope: !12319)
!12322 = !DILocation(line: 2980, column: 20, scope: !12319)
!12323 = !DILocation(line: 2980, column: 25, scope: !12319)
!12324 = !DILocation(line: 2980, column: 34, scope: !12319)
!12325 = !DILocation(line: 2980, column: 19, scope: !12319)
!12326 = !DILocation(line: 2980, column: 13, scope: !12319)
!12327 = !DILocation(line: 2980, column: 43, scope: !12319)
!12328 = !DILocation(line: 2982, column: 8, scope: !12319)
!12329 = !DILocation(line: 2982, column: 13, scope: !12319)
!12330 = !DILocation(line: 2982, column: 22, scope: !12319)
!12331 = !DILocation(line: 2982, column: 7, scope: !12319)
!12332 = !DILocation(line: 2980, column: 6, scope: !12319)
!12333 = !DILocation(line: 2983, column: 24, scope: !12319)
!12334 = !DILocation(line: 2983, column: 6, scope: !12319)
!12335 = !DILocation(line: 2984, column: 6, scope: !12319)
!12336 = !DILocation(line: 2987, column: 6, scope: !12319)
!12337 = !DILocation(line: 2987, column: 11, scope: !12319)
!12338 = !DILocation(line: 2987, column: 21, scope: !12319)
!12339 = !DILocation(line: 2988, column: 20, scope: !12319)
!12340 = !DILocation(line: 2988, column: 25, scope: !12319)
!12341 = !DILocation(line: 2988, column: 34, scope: !12319)
!12342 = !DILocation(line: 2988, column: 19, scope: !12319)
!12343 = !DILocation(line: 2988, column: 13, scope: !12319)
!12344 = !DILocation(line: 2988, column: 43, scope: !12319)
!12345 = !DILocation(line: 2990, column: 8, scope: !12319)
!12346 = !DILocation(line: 2990, column: 13, scope: !12319)
!12347 = !DILocation(line: 2990, column: 22, scope: !12319)
!12348 = !DILocation(line: 2990, column: 7, scope: !12319)
!12349 = !DILocation(line: 2988, column: 6, scope: !12319)
!12350 = !DILocation(line: 2991, column: 24, scope: !12319)
!12351 = !DILocation(line: 2991, column: 6, scope: !12319)
!12352 = !DILocation(line: 2992, column: 6, scope: !12319)
!12353 = !DILocation(line: 2995, column: 6, scope: !12319)
!12354 = !DILocation(line: 2995, column: 11, scope: !12319)
!12355 = !DILocation(line: 2995, column: 22, scope: !12319)
!12356 = !DILocation(line: 2996, column: 20, scope: !12319)
!12357 = !DILocation(line: 2996, column: 25, scope: !12319)
!12358 = !DILocation(line: 2996, column: 34, scope: !12319)
!12359 = !DILocation(line: 2996, column: 19, scope: !12319)
!12360 = !DILocation(line: 2996, column: 13, scope: !12319)
!12361 = !DILocation(line: 2996, column: 43, scope: !12319)
!12362 = !DILocation(line: 2998, column: 8, scope: !12319)
!12363 = !DILocation(line: 2998, column: 13, scope: !12319)
!12364 = !DILocation(line: 2998, column: 22, scope: !12319)
!12365 = !DILocation(line: 2998, column: 7, scope: !12319)
!12366 = !DILocation(line: 2996, column: 6, scope: !12319)
!12367 = !DILocation(line: 2999, column: 24, scope: !12319)
!12368 = !DILocation(line: 2999, column: 6, scope: !12319)
!12369 = !DILocation(line: 3000, column: 6, scope: !12319)
!12370 = !DILocation(line: 3002, column: 6, scope: !12319)
!12371 = !DILocation(line: 3004, column: 4, scope: !12316)
!12372 = !DILocation(line: 3006, column: 8, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12312, file: !3, line: 3006, column: 8)
!12374 = !DILocation(line: 3006, column: 16, scope: !12373)
!12375 = !DILocation(line: 3006, column: 8, scope: !12312)
!12376 = !DILocation(line: 3007, column: 5, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12373, file: !3, line: 3006, column: 45)
!12378 = !DILocation(line: 3007, column: 10, scope: !12377)
!12379 = !DILocation(line: 3007, column: 24, scope: !12377)
!12380 = !DILocation(line: 3008, column: 19, scope: !12377)
!12381 = !DILocation(line: 3008, column: 24, scope: !12377)
!12382 = !DILocation(line: 3008, column: 29, scope: !12377)
!12383 = !DILocation(line: 3008, column: 18, scope: !12377)
!12384 = !DILocation(line: 3008, column: 12, scope: !12377)
!12385 = !DILocation(line: 3008, column: 37, scope: !12377)
!12386 = !DILocation(line: 3010, column: 7, scope: !12377)
!12387 = !DILocation(line: 3010, column: 12, scope: !12377)
!12388 = !DILocation(line: 3010, column: 17, scope: !12377)
!12389 = !DILocation(line: 3010, column: 6, scope: !12377)
!12390 = !DILocation(line: 3008, column: 5, scope: !12377)
!12391 = !DILocation(line: 3011, column: 23, scope: !12377)
!12392 = !DILocation(line: 3011, column: 5, scope: !12377)
!12393 = !DILocation(line: 3012, column: 5, scope: !12377)
!12394 = !DILocation(line: 3014, column: 4, scope: !12312)
!12395 = !DILocation(line: 3017, column: 23, scope: !12312)
!12396 = !DILocation(line: 3017, column: 28, scope: !12312)
!12397 = !DILocation(line: 3017, column: 8, scope: !12312)
!12398 = !DILocation(line: 3017, column: 6, scope: !12312)
!12399 = !DILocation(line: 3018, column: 9, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12312, file: !3, line: 3018, column: 8)
!12401 = !DILocation(line: 3018, column: 11, scope: !12400)
!12402 = !DILocation(line: 3018, column: 15, scope: !12400)
!12403 = !DILocation(line: 3018, column: 23, scope: !12400)
!12404 = !DILocation(line: 3018, column: 8, scope: !12312)
!12405 = !DILocation(line: 3019, column: 5, scope: !12400)
!12406 = !DILocation(line: 3020, column: 4, scope: !12312)
!12407 = !DILocation(line: 3020, column: 8, scope: !12312)
!12408 = !DILocation(line: 3020, column: 16, scope: !12312)
!12409 = !DILocation(line: 3021, column: 8, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12312, file: !3, line: 3021, column: 8)
!12411 = !DILocation(line: 3021, column: 12, scope: !12410)
!12412 = !DILocation(line: 3021, column: 16, scope: !12410)
!12413 = !DILocation(line: 3021, column: 8, scope: !12312)
!12414 = !DILocation(line: 3022, column: 5, scope: !12410)
!12415 = !DILocation(line: 3022, column: 9, scope: !12410)
!12416 = !DILocation(line: 3022, column: 14, scope: !12410)
!12417 = !DILocation(line: 3022, column: 29, scope: !12410)
!12418 = !DILocation(line: 3024, column: 9, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !12420, file: !3, line: 3024, column: 9)
!12420 = distinct !DILexicalBlock(scope: !12410, file: !3, line: 3023, column: 9)
!12421 = !DILocation(line: 3024, column: 13, scope: !12419)
!12422 = !DILocation(line: 3024, column: 9, scope: !12420)
!12423 = !DILocation(line: 3025, column: 16, scope: !12419)
!12424 = !DILocation(line: 3025, column: 6, scope: !12419)
!12425 = !DILocation(line: 3026, column: 14, scope: !12420)
!12426 = !DILocation(line: 3026, column: 5, scope: !12420)
!12427 = !DILocation(line: 3028, column: 22, scope: !12312)
!12428 = !DILocation(line: 3028, column: 4, scope: !12312)
!12429 = !DILocation(line: 3029, column: 4, scope: !12312)
!12430 = !DILocation(line: 3032, column: 4, scope: !12312)
!12431 = !DILocation(line: 3035, column: 3, scope: !12083)
!12432 = !DILabel(scope: !12083, name: "usb3_delegate", file: !3, line: 3038)
!12433 = !DILocation(line: 3038, column: 1, scope: !12083)
!12434 = !DILocation(line: 3044, column: 3, scope: !12083)
!12435 = !DILocation(line: 3044, column: 7, scope: !12083)
!12436 = !DILocation(line: 3044, column: 17, scope: !12083)
!12437 = !DILocation(line: 3045, column: 16, scope: !12083)
!12438 = !DILocation(line: 3045, column: 21, scope: !12083)
!12439 = !DILocation(line: 394, column: 2, scope: !5642, inlinedAt: !12085)
!12440 = !DILocation(line: 394, column: 2, scope: !5645, inlinedAt: !12085)
!12441 = !DILocation(line: 3046, column: 9, scope: !12083)
!12442 = !DILocation(line: 3046, column: 14, scope: !12083)
!12443 = !DILocation(line: 3046, column: 22, scope: !12083)
!12444 = !DILocation(line: 3046, column: 29, scope: !12083)
!12445 = !DILocation(line: 3046, column: 34, scope: !12083)
!12446 = !DILocation(line: 3046, column: 7, scope: !12083)
!12447 = !DILocation(line: 3047, column: 14, scope: !12083)
!12448 = !DILocation(line: 3047, column: 19, scope: !12083)
!12449 = !DILocation(line: 354, column: 2, scope: !5594, inlinedAt: !12082)
!12450 = !DILocation(line: 354, column: 2, scope: !5597, inlinedAt: !12082)
!12451 = !DILocation(line: 3048, column: 2, scope: !12083)
!12452 = !DILabel(scope: !12078, name: "do_stall3", file: !3, line: 3049)
!12453 = !DILocation(line: 3049, column: 1, scope: !12078)
!12454 = !DILocation(line: 3050, column: 6, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12078, file: !3, line: 3050, column: 6)
!12456 = !DILocation(line: 3050, column: 10, scope: !12455)
!12457 = !DILocation(line: 3050, column: 6, scope: !12078)
!12458 = !DILocation(line: 3053, column: 3, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12455, file: !3, line: 3050, column: 15)
!12460 = !DILocation(line: 3053, column: 8, scope: !12459)
!12461 = !DILocation(line: 3053, column: 23, scope: !12459)
!12462 = !DILocation(line: 3055, column: 12, scope: !12459)
!12463 = !DILocation(line: 3055, column: 3, scope: !12459)
!12464 = !DILocation(line: 3056, column: 2, scope: !12459)
!12465 = !DILocation(line: 3050, column: 12, scope: !12455)
!12466 = !DILabel(scope: !12078, name: "next_endpoints3", file: !3, line: 3058)
!12467 = !DILocation(line: 3058, column: 1, scope: !12078)
!12468 = !DILocation(line: 3064, column: 2, scope: !12078)
!12469 = distinct !DISubprogram(name: "get_ep_by_addr", scope: !3, file: !3, line: 2751, type: !12470, scopeLine: 2752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!12470 = !DISubroutineType(types: !12471)
!12471 = !{!4485, !284, !1036}
!12472 = !DILocalVariable(name: "dev", arg: 1, scope: !12469, file: !3, line: 2751, type: !284)
!12473 = !DILocation(line: 2751, column: 58, scope: !12469)
!12474 = !DILocalVariable(name: "wIndex", arg: 2, scope: !12469, file: !3, line: 2751, type: !1036)
!12475 = !DILocation(line: 2751, column: 67, scope: !12469)
!12476 = !DILocalVariable(name: "ep", scope: !12469, file: !3, line: 2753, type: !4485)
!12477 = !DILocation(line: 2753, column: 21, scope: !12469)
!12478 = !DILocation(line: 2755, column: 7, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2755, column: 6)
!12480 = !DILocation(line: 2755, column: 14, scope: !12479)
!12481 = !DILocation(line: 2755, column: 42, scope: !12479)
!12482 = !DILocation(line: 2755, column: 6, scope: !12469)
!12483 = !DILocation(line: 2756, column: 11, scope: !12479)
!12484 = !DILocation(line: 2756, column: 16, scope: !12479)
!12485 = !DILocation(line: 2756, column: 3, scope: !12479)
!12486 = !DILocalVariable(name: "__mptr", scope: !12487, file: !3, line: 2757, type: !136)
!12487 = distinct !DILexicalBlock(scope: !12488, file: !3, line: 2757, column: 2)
!12488 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2757, column: 2)
!12489 = !DILocation(line: 2757, column: 2, scope: !12487)
!12490 = !DILocation(line: 2757, column: 2, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12487, file: !3, line: 2757, column: 2)
!12492 = !DILocation(line: 2757, column: 2, scope: !12488)
!12493 = !DILocation(line: 2757, column: 2, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12488, file: !3, line: 2757, column: 2)
!12495 = !DILocalVariable(name: "bEndpointAddress", scope: !12496, file: !3, line: 2758, type: !1524)
!12496 = distinct !DILexicalBlock(scope: !12494, file: !3, line: 2757, column: 60)
!12497 = !DILocation(line: 2758, column: 6, scope: !12496)
!12498 = !DILocation(line: 2760, column: 8, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12496, file: !3, line: 2760, column: 7)
!12500 = !DILocation(line: 2760, column: 12, scope: !12499)
!12501 = !DILocation(line: 2760, column: 7, scope: !12496)
!12502 = !DILocation(line: 2761, column: 4, scope: !12499)
!12503 = !DILocation(line: 2762, column: 22, scope: !12496)
!12504 = !DILocation(line: 2762, column: 26, scope: !12496)
!12505 = !DILocation(line: 2762, column: 32, scope: !12496)
!12506 = !DILocation(line: 2762, column: 20, scope: !12496)
!12507 = !DILocation(line: 2763, column: 8, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !12496, file: !3, line: 2763, column: 7)
!12509 = !DILocation(line: 2763, column: 17, scope: !12508)
!12510 = !DILocation(line: 2763, column: 15, scope: !12508)
!12511 = !DILocation(line: 2763, column: 35, scope: !12508)
!12512 = !DILocation(line: 2763, column: 7, scope: !12496)
!12513 = !DILocation(line: 2764, column: 4, scope: !12508)
!12514 = !DILocation(line: 2765, column: 8, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12496, file: !3, line: 2765, column: 7)
!12516 = !DILocation(line: 2765, column: 15, scope: !12515)
!12517 = !DILocation(line: 2765, column: 27, scope: !12515)
!12518 = !DILocation(line: 2765, column: 44, scope: !12515)
!12519 = !DILocation(line: 2765, column: 23, scope: !12515)
!12520 = !DILocation(line: 2765, column: 7, scope: !12496)
!12521 = !DILocation(line: 2766, column: 11, scope: !12515)
!12522 = !DILocation(line: 2766, column: 4, scope: !12515)
!12523 = !DILocation(line: 2767, column: 2, scope: !12496)
!12524 = !DILocalVariable(name: "__mptr", scope: !12525, file: !3, line: 2757, type: !136)
!12525 = distinct !DILexicalBlock(scope: !12494, file: !3, line: 2757, column: 2)
!12526 = !DILocation(line: 2757, column: 2, scope: !12525)
!12527 = !DILocation(line: 2757, column: 2, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !12525, file: !3, line: 2757, column: 2)
!12529 = distinct !{!12529, !12492, !12530}
!12530 = !DILocation(line: 2767, column: 2, scope: !12488)
!12531 = !DILocation(line: 2768, column: 2, scope: !12469)
!12532 = !DILocation(line: 2769, column: 1, scope: !12469)
!12533 = distinct !DISubprogram(name: "usb338x_handle_ep_intr", scope: !3, file: !3, line: 3067, type: !11109, scopeLine: 3068, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!12534 = !DILocalVariable(name: "dev", arg: 1, scope: !12533, file: !3, line: 3067, type: !284)
!12535 = !DILocation(line: 3067, column: 52, scope: !12533)
!12536 = !DILocalVariable(name: "stat0", arg: 2, scope: !12533, file: !3, line: 3067, type: !144)
!12537 = !DILocation(line: 3067, column: 61, scope: !12533)
!12538 = !DILocalVariable(name: "index", scope: !12533, file: !3, line: 3069, type: !144)
!12539 = !DILocation(line: 3069, column: 6, scope: !12533)
!12540 = !DILocalVariable(name: "bit", scope: !12533, file: !3, line: 3070, type: !144)
!12541 = !DILocation(line: 3070, column: 6, scope: !12533)
!12542 = !DILocation(line: 3072, column: 13, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12533, file: !3, line: 3072, column: 2)
!12544 = !DILocation(line: 3072, column: 7, scope: !12543)
!12545 = !DILocation(line: 3072, column: 18, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12543, file: !3, line: 3072, column: 2)
!12547 = !DILocation(line: 3072, column: 24, scope: !12546)
!12548 = !DILocation(line: 3072, column: 2, scope: !12543)
!12549 = !DILocation(line: 3073, column: 9, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12546, file: !3, line: 3072, column: 55)
!12551 = !DILocation(line: 3073, column: 7, scope: !12550)
!12552 = !DILocation(line: 3075, column: 8, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12550, file: !3, line: 3075, column: 7)
!12554 = !DILocation(line: 3075, column: 7, scope: !12550)
!12555 = !DILocation(line: 3076, column: 4, scope: !12553)
!12556 = !DILocation(line: 3078, column: 9, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12550, file: !3, line: 3078, column: 7)
!12558 = !DILocation(line: 3078, column: 17, scope: !12557)
!12559 = !DILocation(line: 3078, column: 15, scope: !12557)
!12560 = !DILocation(line: 3078, column: 7, scope: !12550)
!12561 = !DILocation(line: 3079, column: 4, scope: !12557)
!12562 = !DILocation(line: 3081, column: 13, scope: !12550)
!12563 = !DILocation(line: 3081, column: 12, scope: !12550)
!12564 = !DILocation(line: 3081, column: 9, scope: !12550)
!12565 = !DILocation(line: 3083, column: 20, scope: !12550)
!12566 = !DILocation(line: 3083, column: 25, scope: !12550)
!12567 = !DILocation(line: 3083, column: 28, scope: !12550)
!12568 = !DILocation(line: 3083, column: 3, scope: !12550)
!12569 = !DILocation(line: 3084, column: 2, scope: !12550)
!12570 = !DILocation(line: 3072, column: 51, scope: !12546)
!12571 = !DILocation(line: 3072, column: 2, scope: !12546)
!12572 = distinct !{!12572, !12548, !12573}
!12573 = !DILocation(line: 3084, column: 2, scope: !12543)
!12574 = !DILocation(line: 3085, column: 1, scope: !12533)
!12575 = distinct !DISubprogram(name: "handle_ep_small", scope: !3, file: !3, line: 2511, type: !4625, scopeLine: 2512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!12576 = !DILocalVariable(name: "ep", arg: 1, scope: !12575, file: !3, line: 2511, type: !4485)
!12577 = !DILocation(line: 2511, column: 48, scope: !12575)
!12578 = !DILocalVariable(name: "req", scope: !12575, file: !3, line: 2513, type: !4470)
!12579 = !DILocation(line: 2513, column: 26, scope: !12575)
!12580 = !DILocalVariable(name: "t", scope: !12575, file: !3, line: 2514, type: !144)
!12581 = !DILocation(line: 2514, column: 8, scope: !12575)
!12582 = !DILocalVariable(name: "mode", scope: !12575, file: !3, line: 2516, type: !330)
!12583 = !DILocation(line: 2516, column: 8, scope: !12575)
!12584 = !DILocation(line: 2518, column: 19, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 2518, column: 6)
!12586 = !DILocation(line: 2518, column: 23, scope: !12585)
!12587 = !DILocation(line: 2518, column: 7, scope: !12585)
!12588 = !DILocation(line: 2518, column: 6, scope: !12575)
!12589 = !DILocalVariable(name: "__mptr", scope: !12590, file: !3, line: 2519, type: !136)
!12590 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 2519, column: 9)
!12591 = !DILocation(line: 2519, column: 9, scope: !12590)
!12592 = !DILocation(line: 2519, column: 9, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12590, file: !3, line: 2519, column: 9)
!12594 = !DILocation(line: 2519, column: 7, scope: !12585)
!12595 = !DILocation(line: 2519, column: 3, scope: !12585)
!12596 = !DILocation(line: 2522, column: 7, scope: !12585)
!12597 = !DILocation(line: 2525, column: 13, scope: !12575)
!12598 = !DILocation(line: 2525, column: 17, scope: !12575)
!12599 = !DILocation(line: 2525, column: 23, scope: !12575)
!12600 = !DILocation(line: 2525, column: 12, scope: !12575)
!12601 = !DILocation(line: 2525, column: 6, scope: !12575)
!12602 = !DILocation(line: 2525, column: 4, scope: !12575)
!12603 = !DILocation(line: 2526, column: 2, scope: !12575)
!12604 = !DILocation(line: 2526, column: 6, scope: !12575)
!12605 = !DILocation(line: 2526, column: 10, scope: !12575)
!12606 = !DILocation(line: 2531, column: 7, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 2531, column: 6)
!12608 = !DILocation(line: 2531, column: 11, scope: !12607)
!12609 = !DILocation(line: 2531, column: 17, scope: !12607)
!12610 = !DILocation(line: 2531, column: 21, scope: !12607)
!12611 = !DILocation(line: 2531, column: 25, scope: !12607)
!12612 = !DILocation(line: 2531, column: 30, scope: !12607)
!12613 = !DILocation(line: 2531, column: 37, scope: !12607)
!12614 = !DILocation(line: 2531, column: 6, scope: !12575)
!12615 = !DILocation(line: 2532, column: 10, scope: !12607)
!12616 = !DILocation(line: 2532, column: 12, scope: !12607)
!12617 = !DILocation(line: 2532, column: 38, scope: !12607)
!12618 = !DILocation(line: 2532, column: 42, scope: !12607)
!12619 = !DILocation(line: 2532, column: 48, scope: !12607)
!12620 = !DILocation(line: 2532, column: 37, scope: !12607)
!12621 = !DILocation(line: 2532, column: 3, scope: !12607)
!12622 = !DILocation(line: 2535, column: 10, scope: !12607)
!12623 = !DILocation(line: 2535, column: 14, scope: !12607)
!12624 = !DILocation(line: 2535, column: 18, scope: !12607)
!12625 = !DILocation(line: 2535, column: 24, scope: !12607)
!12626 = !DILocation(line: 2535, column: 13, scope: !12607)
!12627 = !DILocation(line: 2535, column: 3, scope: !12607)
!12628 = !DILocation(line: 2547, column: 6, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 2547, column: 6)
!12630 = !DILocation(line: 2547, column: 6, scope: !12575)
!12631 = !DILocation(line: 2548, column: 7, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12633, file: !3, line: 2548, column: 7)
!12633 = distinct !DILexicalBlock(scope: !12629, file: !3, line: 2547, column: 30)
!12634 = !DILocation(line: 2548, column: 11, scope: !12632)
!12635 = !DILocation(line: 2548, column: 7, scope: !12633)
!12636 = !DILocation(line: 2550, column: 8, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12638, file: !3, line: 2550, column: 8)
!12638 = distinct !DILexicalBlock(scope: !12632, file: !3, line: 2548, column: 18)
!12639 = !DILocation(line: 2550, column: 10, scope: !12637)
!12640 = !DILocation(line: 2550, column: 8, scope: !12638)
!12641 = !DILocation(line: 2551, column: 9, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12643, file: !3, line: 2551, column: 9)
!12643 = distinct !DILexicalBlock(scope: !12637, file: !3, line: 2550, column: 48)
!12644 = !DILocation(line: 2551, column: 13, scope: !12642)
!12645 = !DILocation(line: 2551, column: 18, scope: !12642)
!12646 = !DILocation(line: 2551, column: 9, scope: !12643)
!12647 = !DILocation(line: 2552, column: 6, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12642, file: !3, line: 2551, column: 34)
!12649 = !DILocation(line: 2552, column: 10, scope: !12648)
!12650 = !DILocation(line: 2552, column: 18, scope: !12648)
!12651 = !DILocation(line: 2553, column: 15, scope: !12648)
!12652 = !DILocation(line: 2553, column: 6, scope: !12648)
!12653 = !DILocation(line: 2554, column: 5, scope: !12648)
!12654 = !DILocation(line: 2555, column: 10, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12643, file: !3, line: 2555, column: 9)
!12656 = !DILocation(line: 2555, column: 9, scope: !12643)
!12657 = !DILocation(line: 2556, column: 19, scope: !12655)
!12658 = !DILocation(line: 2556, column: 6, scope: !12655)
!12659 = !DILocation(line: 2557, column: 10, scope: !12643)
!12660 = !DILocation(line: 2559, column: 4, scope: !12643)
!12661 = !DILocation(line: 2559, column: 15, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12637, file: !3, line: 2559, column: 15)
!12663 = !DILocation(line: 2559, column: 17, scope: !12662)
!12664 = !DILocation(line: 2559, column: 15, scope: !12637)
!12665 = !DILocation(line: 2560, column: 9, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12667, file: !3, line: 2560, column: 9)
!12667 = distinct !DILexicalBlock(scope: !12662, file: !3, line: 2559, column: 49)
!12668 = !DILocation(line: 2560, column: 13, scope: !12666)
!12669 = !DILocation(line: 2560, column: 18, scope: !12666)
!12670 = !DILocation(line: 2560, column: 9, scope: !12667)
!12671 = !DILocation(line: 2561, column: 6, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12666, file: !3, line: 2560, column: 34)
!12673 = !DILocation(line: 2561, column: 10, scope: !12672)
!12674 = !DILocation(line: 2561, column: 18, scope: !12672)
!12675 = !DILocation(line: 2562, column: 15, scope: !12672)
!12676 = !DILocation(line: 2562, column: 6, scope: !12672)
!12677 = !DILocation(line: 2563, column: 11, scope: !12672)
!12678 = !DILocation(line: 2564, column: 5, scope: !12672)
!12679 = !DILocation(line: 2564, column: 16, scope: !12680)
!12680 = distinct !DILexicalBlock(scope: !12666, file: !3, line: 2564, column: 16)
!12681 = !DILocation(line: 2564, column: 20, scope: !12680)
!12682 = !DILocation(line: 2564, column: 30, scope: !12680)
!12683 = !DILocation(line: 2565, column: 8, scope: !12680)
!12684 = !DILocation(line: 2565, column: 12, scope: !12680)
!12685 = !DILocation(line: 2565, column: 16, scope: !12680)
!12686 = !DILocation(line: 2565, column: 20, scope: !12680)
!12687 = !DILocation(line: 2564, column: 16, scope: !12666)
!12688 = !DILocation(line: 2566, column: 17, scope: !12680)
!12689 = !DILocation(line: 2566, column: 6, scope: !12680)
!12690 = !DILocation(line: 2567, column: 4, scope: !12667)
!12691 = !DILocation(line: 2568, column: 3, scope: !12638)
!12692 = !DILocation(line: 2570, column: 8, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12694, file: !3, line: 2570, column: 8)
!12694 = distinct !DILexicalBlock(scope: !12632, file: !3, line: 2568, column: 10)
!12695 = !DILocation(line: 2570, column: 10, scope: !12693)
!12696 = !DILocation(line: 2570, column: 8, scope: !12694)
!12697 = !DILocation(line: 2571, column: 9, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12699, file: !3, line: 2571, column: 9)
!12699 = distinct !DILexicalBlock(scope: !12693, file: !3, line: 2570, column: 42)
!12700 = !DILocation(line: 2571, column: 13, scope: !12698)
!12701 = !DILocation(line: 2571, column: 18, scope: !12698)
!12702 = !DILocation(line: 2571, column: 9, scope: !12699)
!12703 = !DILocation(line: 2572, column: 6, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12698, file: !3, line: 2571, column: 34)
!12705 = !DILocation(line: 2572, column: 10, scope: !12704)
!12706 = !DILocation(line: 2572, column: 18, scope: !12704)
!12707 = !DILocation(line: 2573, column: 15, scope: !12704)
!12708 = !DILocation(line: 2573, column: 6, scope: !12704)
!12709 = !DILocation(line: 2574, column: 5, scope: !12704)
!12710 = !DILocation(line: 2575, column: 10, scope: !12699)
!12711 = !DILocation(line: 2577, column: 4, scope: !12699)
!12712 = !DILocation(line: 2577, column: 17, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12693, file: !3, line: 2577, column: 15)
!12714 = !DILocation(line: 2577, column: 19, scope: !12713)
!12715 = !DILocation(line: 2577, column: 57, scope: !12713)
!12716 = !DILocation(line: 2578, column: 6, scope: !12713)
!12717 = !DILocation(line: 2578, column: 10, scope: !12713)
!12718 = !DILocation(line: 2579, column: 6, scope: !12713)
!12719 = !DILocation(line: 2579, column: 11, scope: !12713)
!12720 = !DILocation(line: 2579, column: 15, scope: !12713)
!12721 = !DILocation(line: 2579, column: 25, scope: !12713)
!12722 = !DILocation(line: 2579, column: 30, scope: !12713)
!12723 = !DILocation(line: 2579, column: 34, scope: !12713)
!12724 = !DILocation(line: 2579, column: 22, scope: !12713)
!12725 = !DILocation(line: 2579, column: 42, scope: !12713)
!12726 = !DILocation(line: 2580, column: 7, scope: !12713)
!12727 = !DILocation(line: 2580, column: 11, scope: !12713)
!12728 = !DILocation(line: 2580, column: 21, scope: !12713)
!12729 = !DILocation(line: 2580, column: 25, scope: !12713)
!12730 = !DILocation(line: 2577, column: 15, scope: !12693)
!12731 = !DILocation(line: 2581, column: 5, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 2580, column: 31)
!12733 = !DILocation(line: 2581, column: 9, scope: !12732)
!12734 = !DILocation(line: 2581, column: 14, scope: !12732)
!12735 = !DILocation(line: 2581, column: 29, scope: !12732)
!12736 = !DILocation(line: 2582, column: 14, scope: !12732)
!12737 = !DILocation(line: 2582, column: 5, scope: !12732)
!12738 = !DILocation(line: 2583, column: 5, scope: !12732)
!12739 = !DILocation(line: 2583, column: 9, scope: !12732)
!12740 = !DILocation(line: 2583, column: 17, scope: !12732)
!12741 = !DILocation(line: 2584, column: 9, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12732, file: !3, line: 2584, column: 9)
!12743 = !DILocation(line: 2584, column: 9, scope: !12732)
!12744 = !DILocation(line: 2585, column: 11, scope: !12742)
!12745 = !DILocation(line: 2585, column: 15, scope: !12742)
!12746 = !DILocation(line: 2585, column: 6, scope: !12742)
!12747 = !DILocation(line: 2586, column: 9, scope: !12732)
!12748 = !DILocation(line: 2587, column: 4, scope: !12732)
!12749 = !DILocation(line: 2589, column: 2, scope: !12633)
!12750 = !DILocation(line: 2591, column: 6, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 2591, column: 6)
!12752 = !DILocation(line: 2591, column: 6, scope: !12575)
!12753 = !DILocation(line: 2592, column: 3, scope: !12751)
!12754 = !DILocation(line: 2595, column: 6, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 2595, column: 6)
!12756 = !DILocation(line: 2595, column: 6, scope: !12575)
!12757 = !DILocation(line: 2596, column: 7, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12759, file: !3, line: 2596, column: 7)
!12759 = distinct !DILexicalBlock(scope: !12755, file: !3, line: 2595, column: 23)
!12760 = !DILocation(line: 2596, column: 9, scope: !12758)
!12761 = !DILocation(line: 2596, column: 7, scope: !12759)
!12762 = !DILocalVariable(name: "stuck_req", scope: !12763, file: !3, line: 2597, type: !4470)
!12763 = distinct !DILexicalBlock(scope: !12758, file: !3, line: 2596, column: 52)
!12764 = !DILocation(line: 2597, column: 28, scope: !12763)
!12765 = !DILocalVariable(name: "stopped", scope: !12763, file: !3, line: 2598, type: !330)
!12766 = !DILocation(line: 2598, column: 8, scope: !12763)
!12767 = !DILocation(line: 2598, column: 18, scope: !12763)
!12768 = !DILocation(line: 2598, column: 22, scope: !12763)
!12769 = !DILocalVariable(name: "num_completed", scope: !12763, file: !3, line: 2599, type: !330)
!12770 = !DILocation(line: 2599, column: 8, scope: !12763)
!12771 = !DILocalVariable(name: "stuck", scope: !12763, file: !3, line: 2600, type: !330)
!12772 = !DILocation(line: 2600, column: 8, scope: !12763)
!12773 = !DILocalVariable(name: "count", scope: !12763, file: !3, line: 2601, type: !144)
!12774 = !DILocation(line: 2601, column: 8, scope: !12763)
!12775 = !DILocation(line: 2607, column: 4, scope: !12763)
!12776 = !DILocation(line: 2607, column: 8, scope: !12763)
!12777 = !DILocation(line: 2607, column: 16, scope: !12763)
!12778 = !DILocation(line: 2608, column: 15, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12763, file: !3, line: 2608, column: 4)
!12780 = !DILocation(line: 2608, column: 9, scope: !12779)
!12781 = !DILocation(line: 2613, column: 42, scope: !12782)
!12782 = distinct !DILexicalBlock(scope: !12783, file: !3, line: 2608, column: 53)
!12783 = distinct !DILexicalBlock(scope: !12779, file: !3, line: 2608, column: 4)
!12784 = !DILocation(line: 2613, column: 21, scope: !12782)
!12785 = !DILocation(line: 2613, column: 19, scope: !12782)
!12786 = !DILocation(line: 2614, column: 9, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 2614, column: 9)
!12788 = !DILocation(line: 2614, column: 9, scope: !12782)
!12789 = !DILocation(line: 2616, column: 10, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12787, file: !3, line: 2615, column: 26)
!12791 = !DILocation(line: 2617, column: 6, scope: !12790)
!12792 = !DILocalVariable(name: "__mptr", scope: !12793, file: !3, line: 2619, type: !136)
!12793 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 2619, column: 11)
!12794 = !DILocation(line: 2619, column: 11, scope: !12793)
!12795 = !DILocation(line: 2619, column: 11, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12793, file: !3, line: 2619, column: 11)
!12797 = !DILocation(line: 2619, column: 9, scope: !12782)
!12798 = !DILocation(line: 2625, column: 9, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 2625, column: 9)
!12800 = !DILocation(line: 2625, column: 9, scope: !12782)
!12801 = !DILocation(line: 2626, column: 21, scope: !12802)
!12802 = distinct !DILexicalBlock(scope: !12799, file: !3, line: 2625, column: 38)
!12803 = !DILocation(line: 2626, column: 25, scope: !12802)
!12804 = !DILocation(line: 2626, column: 30, scope: !12802)
!12805 = !DILocation(line: 2626, column: 20, scope: !12802)
!12806 = !DILocation(line: 2626, column: 14, scope: !12802)
!12807 = !DILocation(line: 2626, column: 12, scope: !12802)
!12808 = !DILocation(line: 2627, column: 12, scope: !12802)
!12809 = !DILocation(line: 2628, column: 17, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !12802, file: !3, line: 2628, column: 10)
!12811 = !DILocation(line: 2628, column: 21, scope: !12810)
!12812 = !DILocation(line: 2628, column: 26, scope: !12810)
!12813 = !DILocation(line: 2628, column: 16, scope: !12810)
!12814 = !DILocation(line: 2628, column: 10, scope: !12810)
!12815 = !DILocation(line: 2629, column: 11, scope: !12810)
!12816 = !DILocation(line: 2629, column: 16, scope: !12810)
!12817 = !DILocation(line: 2629, column: 8, scope: !12810)
!12818 = !DILocation(line: 2628, column: 10, scope: !12802)
!12819 = !DILocation(line: 2630, column: 11, scope: !12810)
!12820 = !DILocation(line: 2630, column: 7, scope: !12810)
!12821 = !DILocation(line: 2631, column: 6, scope: !12802)
!12822 = !DILocation(line: 2637, column: 9, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 2637, column: 9)
!12824 = !DILocation(line: 2637, column: 23, scope: !12823)
!12825 = !DILocation(line: 2637, column: 9, scope: !12782)
!12826 = !DILocation(line: 2638, column: 10, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12828, file: !3, line: 2638, column: 10)
!12828 = distinct !DILexicalBlock(scope: !12823, file: !3, line: 2637, column: 29)
!12829 = !DILocation(line: 2638, column: 23, scope: !12827)
!12830 = !DILocation(line: 2638, column: 20, scope: !12827)
!12831 = !DILocation(line: 2638, column: 27, scope: !12827)
!12832 = !DILocation(line: 2639, column: 17, scope: !12827)
!12833 = !DILocation(line: 2639, column: 21, scope: !12827)
!12834 = !DILocation(line: 2639, column: 26, scope: !12827)
!12835 = !DILocation(line: 2639, column: 16, scope: !12827)
!12836 = !DILocation(line: 2639, column: 10, scope: !12827)
!12837 = !DILocation(line: 2640, column: 9, scope: !12827)
!12838 = !DILocation(line: 2640, column: 14, scope: !12827)
!12839 = !DILocation(line: 2639, column: 35, scope: !12827)
!12840 = !DILocation(line: 2640, column: 21, scope: !12827)
!12841 = !DILocation(line: 2640, column: 29, scope: !12827)
!12842 = !DILocation(line: 2640, column: 32, scope: !12827)
!12843 = !DILocation(line: 2638, column: 10, scope: !12828)
!12844 = !DILocation(line: 2642, column: 9, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12827, file: !3, line: 2640, column: 37)
!12846 = !DILocation(line: 2642, column: 13, scope: !12845)
!12847 = !DILocation(line: 2642, column: 18, scope: !12845)
!12848 = !DILocation(line: 2642, column: 8, scope: !12845)
!12849 = !DILocation(line: 2641, column: 15, scope: !12845)
!12850 = !DILocation(line: 2641, column: 13, scope: !12845)
!12851 = !DILocation(line: 2643, column: 13, scope: !12845)
!12852 = !DILocation(line: 2644, column: 11, scope: !12845)
!12853 = !DILocation(line: 2648, column: 7, scope: !12845)
!12854 = !DILocation(line: 2649, column: 17, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12827, file: !3, line: 2649, column: 17)
!12856 = !DILocation(line: 2649, column: 30, scope: !12855)
!12857 = !DILocation(line: 2649, column: 27, scope: !12855)
!12858 = !DILocation(line: 2649, column: 17, scope: !12827)
!12859 = !DILocation(line: 2650, column: 19, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12855, file: !3, line: 2649, column: 35)
!12861 = !DILocation(line: 2650, column: 17, scope: !12860)
!12862 = !DILocation(line: 2651, column: 13, scope: !12860)
!12863 = !DILocation(line: 2652, column: 6, scope: !12860)
!12864 = !DILocation(line: 2653, column: 5, scope: !12828)
!12865 = !DILocation(line: 2654, column: 16, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12823, file: !3, line: 2653, column: 12)
!12867 = !DILocation(line: 2655, column: 12, scope: !12866)
!12868 = !DILocation(line: 2658, column: 5, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12870, file: !3, line: 2658, column: 5)
!12870 = distinct !DILexicalBlock(scope: !12871, file: !3, line: 2658, column: 5)
!12871 = distinct !DILexicalBlock(scope: !12872, file: !3, line: 2658, column: 5)
!12872 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 2658, column: 5)
!12873 = !DILocation(line: 2659, column: 4, scope: !12782)
!12874 = !DILocation(line: 2608, column: 33, scope: !12783)
!12875 = !DILocation(line: 2608, column: 37, scope: !12783)
!12876 = !DILocation(line: 2608, column: 43, scope: !12783)
!12877 = !DILocation(line: 2608, column: 32, scope: !12783)
!12878 = !DILocation(line: 2608, column: 26, scope: !12783)
!12879 = !DILocation(line: 2608, column: 24, scope: !12783)
!12880 = !DILocation(line: 2608, column: 4, scope: !12783)
!12881 = distinct !{!12881, !12882, !12883}
!12882 = !DILocation(line: 2608, column: 4, scope: !12779)
!12883 = !DILocation(line: 2659, column: 4, scope: !12779)
!12884 = !DILocation(line: 2662, column: 28, scope: !12763)
!12885 = !DILocation(line: 2662, column: 32, scope: !12763)
!12886 = !DILocation(line: 2662, column: 37, scope: !12763)
!12887 = !DILocation(line: 2662, column: 27, scope: !12763)
!12888 = !DILocation(line: 2662, column: 4, scope: !12763)
!12889 = !DILocation(line: 2663, column: 18, scope: !12763)
!12890 = !DILocation(line: 2663, column: 22, scope: !12763)
!12891 = !DILocation(line: 2663, column: 4, scope: !12763)
!12892 = !DILocation(line: 2665, column: 8, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12763, file: !3, line: 2665, column: 8)
!12894 = !DILocation(line: 2665, column: 8, scope: !12763)
!12895 = !DILocation(line: 2666, column: 5, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12893, file: !3, line: 2665, column: 21)
!12897 = !DILocation(line: 2666, column: 10, scope: !12896)
!12898 = !DILocation(line: 2666, column: 14, scope: !12896)
!12899 = !DILocation(line: 2666, column: 23, scope: !12896)
!12900 = !DILocation(line: 2667, column: 16, scope: !12896)
!12901 = !DILocation(line: 2667, column: 20, scope: !12896)
!12902 = !DILocation(line: 2667, column: 26, scope: !12896)
!12903 = !DILocation(line: 2667, column: 15, scope: !12896)
!12904 = !DILocation(line: 2667, column: 9, scope: !12896)
!12905 = !DILocation(line: 2667, column: 7, scope: !12896)
!12906 = !DILocation(line: 2668, column: 14, scope: !12896)
!12907 = !DILocation(line: 2668, column: 18, scope: !12896)
!12908 = !DILocation(line: 2668, column: 23, scope: !12896)
!12909 = !DILocation(line: 2669, column: 7, scope: !12896)
!12910 = !DILocation(line: 2669, column: 11, scope: !12896)
!12911 = !DILocation(line: 2669, column: 24, scope: !12896)
!12912 = !DILocation(line: 2669, column: 27, scope: !12896)
!12913 = !DILocation(line: 2669, column: 6, scope: !12896)
!12914 = !DILocation(line: 2668, column: 5, scope: !12896)
!12915 = !DILocation(line: 2671, column: 4, scope: !12896)
!12916 = !DILocation(line: 2674, column: 8, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12763, file: !3, line: 2674, column: 8)
!12918 = !DILocation(line: 0, scope: !12917)
!12919 = !DILocation(line: 2674, column: 8, scope: !12763)
!12920 = !DILocation(line: 2678, column: 15, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12917, file: !3, line: 2677, column: 27)
!12922 = !DILocation(line: 2678, column: 5, scope: !12921)
!12923 = !DILocation(line: 2679, column: 5, scope: !12921)
!12924 = !DILocation(line: 2679, column: 9, scope: !12921)
!12925 = !DILocation(line: 2679, column: 22, scope: !12921)
!12926 = !DILocation(line: 2680, column: 4, scope: !12921)
!12927 = !DILocation(line: 2683, column: 18, scope: !12763)
!12928 = !DILocation(line: 2683, column: 4, scope: !12763)
!12929 = !DILocation(line: 2683, column: 8, scope: !12763)
!12930 = !DILocation(line: 2683, column: 16, scope: !12763)
!12931 = !DILocation(line: 2684, column: 21, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12763, file: !3, line: 2684, column: 8)
!12933 = !DILocation(line: 2684, column: 25, scope: !12932)
!12934 = !DILocation(line: 2684, column: 9, scope: !12932)
!12935 = !DILocation(line: 2684, column: 8, scope: !12763)
!12936 = !DILocation(line: 2685, column: 17, scope: !12932)
!12937 = !DILocation(line: 2685, column: 5, scope: !12932)
!12938 = !DILocation(line: 2686, column: 3, scope: !12763)
!12939 = !DILocation(line: 2689, column: 3, scope: !12759)
!12940 = !DILocation(line: 2692, column: 13, scope: !12941)
!12941 = distinct !DILexicalBlock(scope: !12755, file: !3, line: 2692, column: 13)
!12942 = !DILocation(line: 2692, column: 15, scope: !12941)
!12943 = !DILocation(line: 2692, column: 13, scope: !12755)
!12944 = !DILocation(line: 2693, column: 17, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 2693, column: 7)
!12946 = distinct !DILexicalBlock(scope: !12941, file: !3, line: 2692, column: 54)
!12947 = !DILocation(line: 2693, column: 21, scope: !12945)
!12948 = !DILocation(line: 2693, column: 7, scope: !12945)
!12949 = !DILocation(line: 2693, column: 26, scope: !12945)
!12950 = !DILocation(line: 2693, column: 29, scope: !12945)
!12951 = !DILocation(line: 2693, column: 33, scope: !12945)
!12952 = !DILocation(line: 2693, column: 37, scope: !12945)
!12953 = !DILocation(line: 2693, column: 7, scope: !12946)
!12954 = !DILocation(line: 2694, column: 9, scope: !12945)
!12955 = !DILocation(line: 2694, column: 4, scope: !12945)
!12956 = !DILocation(line: 2697, column: 2, scope: !12946)
!12957 = !DILocation(line: 2697, column: 13, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12941, file: !3, line: 2697, column: 13)
!12959 = !DILocation(line: 2697, column: 15, scope: !12958)
!12960 = !DILocation(line: 2697, column: 13, scope: !12941)
!12961 = !DILocalVariable(name: "len", scope: !12962, file: !3, line: 2698, type: !7)
!12962 = distinct !DILexicalBlock(scope: !12958, file: !3, line: 2697, column: 57)
!12963 = !DILocation(line: 2698, column: 12, scope: !12962)
!12964 = !DILocation(line: 2700, column: 9, scope: !12962)
!12965 = !DILocation(line: 2700, column: 14, scope: !12962)
!12966 = !DILocation(line: 2700, column: 18, scope: !12962)
!12967 = !DILocation(line: 2700, column: 27, scope: !12962)
!12968 = !DILocation(line: 2700, column: 32, scope: !12962)
!12969 = !DILocation(line: 2700, column: 36, scope: !12962)
!12970 = !DILocation(line: 2700, column: 25, scope: !12962)
!12971 = !DILocation(line: 2700, column: 7, scope: !12962)
!12972 = !DILocation(line: 2701, column: 7, scope: !12973)
!12973 = distinct !DILexicalBlock(scope: !12962, file: !3, line: 2701, column: 7)
!12974 = !DILocation(line: 2701, column: 13, scope: !12973)
!12975 = !DILocation(line: 2701, column: 17, scope: !12973)
!12976 = !DILocation(line: 2701, column: 20, scope: !12973)
!12977 = !DILocation(line: 2701, column: 11, scope: !12973)
!12978 = !DILocation(line: 2701, column: 7, scope: !12962)
!12979 = !DILocation(line: 2702, column: 10, scope: !12973)
!12980 = !DILocation(line: 2702, column: 14, scope: !12973)
!12981 = !DILocation(line: 2702, column: 17, scope: !12973)
!12982 = !DILocation(line: 2702, column: 8, scope: !12973)
!12983 = !DILocation(line: 2702, column: 4, scope: !12973)
!12984 = !DILocation(line: 2703, column: 22, scope: !12962)
!12985 = !DILocation(line: 2703, column: 3, scope: !12962)
!12986 = !DILocation(line: 2703, column: 8, scope: !12962)
!12987 = !DILocation(line: 2703, column: 12, scope: !12962)
!12988 = !DILocation(line: 2703, column: 19, scope: !12962)
!12989 = !DILocation(line: 2707, column: 8, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12962, file: !3, line: 2707, column: 7)
!12991 = !DILocation(line: 2707, column: 13, scope: !12990)
!12992 = !DILocation(line: 2707, column: 17, scope: !12990)
!12993 = !DILocation(line: 2707, column: 27, scope: !12990)
!12994 = !DILocation(line: 2707, column: 32, scope: !12990)
!12995 = !DILocation(line: 2707, column: 36, scope: !12990)
!12996 = !DILocation(line: 2707, column: 24, scope: !12990)
!12997 = !DILocation(line: 2707, column: 44, scope: !12990)
!12998 = !DILocation(line: 2708, column: 6, scope: !12990)
!12999 = !DILocation(line: 2708, column: 11, scope: !12990)
!13000 = !DILocation(line: 2708, column: 15, scope: !12990)
!13001 = !DILocation(line: 2708, column: 20, scope: !12990)
!13002 = !DILocation(line: 2708, column: 23, scope: !12990)
!13003 = !DILocation(line: 2708, column: 30, scope: !12990)
!13004 = !DILocation(line: 2708, column: 34, scope: !12990)
!13005 = !DILocation(line: 2708, column: 37, scope: !12990)
!13006 = !DILocation(line: 2708, column: 27, scope: !12990)
!13007 = !DILocation(line: 2708, column: 48, scope: !12990)
!13008 = !DILocation(line: 2708, column: 51, scope: !12990)
!13009 = !DILocation(line: 2708, column: 55, scope: !12990)
!13010 = !DILocation(line: 2707, column: 7, scope: !12962)
!13011 = !DILocation(line: 2709, column: 10, scope: !12990)
!13012 = !DILocation(line: 2709, column: 5, scope: !12990)
!13013 = !DILocation(line: 2712, column: 2, scope: !12962)
!13014 = !DILocation(line: 2712, column: 13, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !12958, file: !3, line: 2712, column: 13)
!13016 = !DILocation(line: 2712, column: 18, scope: !13015)
!13017 = !DILocation(line: 2712, column: 13, scope: !12958)
!13018 = !DILocation(line: 2713, column: 3, scope: !13015)
!13019 = !DILocation(line: 2716, column: 6, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 2716, column: 6)
!13021 = !DILocation(line: 2716, column: 11, scope: !13020)
!13022 = !DILocation(line: 2716, column: 6, scope: !12575)
!13023 = !DILocation(line: 2718, column: 8, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 2716, column: 17)
!13025 = !DILocation(line: 2718, column: 12, scope: !13024)
!13026 = !DILocation(line: 2718, column: 3, scope: !13024)
!13027 = !DILocation(line: 2721, column: 7, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !13024, file: !3, line: 2721, column: 7)
!13029 = !DILocation(line: 2721, column: 11, scope: !13028)
!13030 = !DILocation(line: 2721, column: 15, scope: !13028)
!13031 = !DILocation(line: 2721, column: 7, scope: !13024)
!13032 = !DILocation(line: 2726, column: 9, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !13034, file: !3, line: 2726, column: 8)
!13034 = distinct !DILexicalBlock(scope: !13028, file: !3, line: 2721, column: 21)
!13035 = !DILocation(line: 2726, column: 13, scope: !13033)
!13036 = !DILocation(line: 2726, column: 8, scope: !13034)
!13037 = !DILocation(line: 2727, column: 18, scope: !13033)
!13038 = !DILocation(line: 2727, column: 5, scope: !13033)
!13039 = !DILocation(line: 2728, column: 8, scope: !13034)
!13040 = !DILocation(line: 2729, column: 3, scope: !13034)
!13041 = !DILocation(line: 2730, column: 21, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13043, file: !3, line: 2730, column: 8)
!13043 = distinct !DILexicalBlock(scope: !13028, file: !3, line: 2729, column: 10)
!13044 = !DILocation(line: 2730, column: 25, scope: !13042)
!13045 = !DILocation(line: 2730, column: 9, scope: !13042)
!13046 = !DILocation(line: 2730, column: 32, scope: !13042)
!13047 = !DILocation(line: 2730, column: 36, scope: !13042)
!13048 = !DILocation(line: 2730, column: 40, scope: !13042)
!13049 = !DILocation(line: 2730, column: 8, scope: !13043)
!13050 = !DILocalVariable(name: "__mptr", scope: !13051, file: !3, line: 2731, type: !136)
!13051 = distinct !DILexicalBlock(scope: !13042, file: !3, line: 2731, column: 11)
!13052 = !DILocation(line: 2731, column: 11, scope: !13051)
!13053 = !DILocation(line: 2731, column: 11, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13051, file: !3, line: 2731, column: 11)
!13055 = !DILocation(line: 2731, column: 9, scope: !13042)
!13056 = !DILocation(line: 2731, column: 5, scope: !13042)
!13057 = !DILocation(line: 2734, column: 9, scope: !13042)
!13058 = !DILocation(line: 2735, column: 8, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13043, file: !3, line: 2735, column: 8)
!13060 = !DILocation(line: 2735, column: 12, scope: !13059)
!13061 = !DILocation(line: 2735, column: 16, scope: !13059)
!13062 = !DILocation(line: 2735, column: 20, scope: !13059)
!13063 = !DILocation(line: 2735, column: 8, scope: !13043)
!13064 = !DILocation(line: 2736, column: 21, scope: !13059)
!13065 = !DILocation(line: 2736, column: 5, scope: !13059)
!13066 = !DILocation(line: 2738, column: 2, scope: !13024)
!13067 = !DILocation(line: 2743, column: 6, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 2743, column: 6)
!13069 = !DILocation(line: 2743, column: 10, scope: !13068)
!13070 = !DILocation(line: 2743, column: 14, scope: !13068)
!13071 = !DILocation(line: 2743, column: 18, scope: !13068)
!13072 = !DILocation(line: 2743, column: 6, scope: !12575)
!13073 = !DILocation(line: 2746, column: 7, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !13075, file: !3, line: 2746, column: 7)
!13075 = distinct !DILexicalBlock(scope: !13068, file: !3, line: 2743, column: 27)
!13076 = !DILocation(line: 2746, column: 9, scope: !13074)
!13077 = !DILocation(line: 2746, column: 7, scope: !13075)
!13078 = !DILocation(line: 2747, column: 15, scope: !13074)
!13079 = !DILocation(line: 2747, column: 20, scope: !13074)
!13080 = !DILocation(line: 2747, column: 25, scope: !13074)
!13081 = !DILocation(line: 2747, column: 4, scope: !13074)
!13082 = !DILocation(line: 2748, column: 2, scope: !13075)
!13083 = !DILocation(line: 2749, column: 1, scope: !12575)
!13084 = distinct !DISubprogram(name: "defect7374_disable_data_eps", scope: !3, file: !3, line: 1939, type: !4634, scopeLine: 1940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!13085 = !DILocalVariable(name: "dev", arg: 1, scope: !13084, file: !3, line: 1939, type: !284)
!13086 = !DILocation(line: 1939, column: 57, scope: !13084)
!13087 = !DILocalVariable(name: "ep", scope: !13084, file: !3, line: 1946, type: !4485)
!13088 = !DILocation(line: 1946, column: 21, scope: !13084)
!13089 = !DILocalVariable(name: "i", scope: !13084, file: !3, line: 1947, type: !330)
!13090 = !DILocation(line: 1947, column: 6, scope: !13084)
!13091 = !DILocalVariable(name: "ep_sel", scope: !13084, file: !3, line: 1948, type: !357)
!13092 = !DILocation(line: 1948, column: 16, scope: !13084)
!13093 = !DILocalVariable(name: "tmp_reg", scope: !13084, file: !3, line: 1949, type: !144)
!13094 = !DILocation(line: 1949, column: 6, scope: !13084)
!13095 = !DILocation(line: 1951, column: 9, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13084, file: !3, line: 1951, column: 2)
!13097 = !DILocation(line: 1951, column: 7, scope: !13096)
!13098 = !DILocation(line: 1951, column: 14, scope: !13099)
!13099 = distinct !DILexicalBlock(scope: !13096, file: !3, line: 1951, column: 2)
!13100 = !DILocation(line: 1951, column: 16, scope: !13099)
!13101 = !DILocation(line: 1951, column: 2, scope: !13096)
!13102 = !DILocation(line: 1952, column: 9, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13099, file: !3, line: 1951, column: 26)
!13104 = !DILocation(line: 1952, column: 14, scope: !13103)
!13105 = !DILocation(line: 1952, column: 17, scope: !13103)
!13106 = !DILocation(line: 1952, column: 6, scope: !13103)
!13107 = !DILocation(line: 1953, column: 10, scope: !13103)
!13108 = !DILocation(line: 1953, column: 14, scope: !13103)
!13109 = !DILocation(line: 1953, column: 18, scope: !13103)
!13110 = !DILocation(line: 1953, column: 23, scope: !13103)
!13111 = !DILocation(line: 1953, column: 13, scope: !13103)
!13112 = !DILocation(line: 1953, column: 3, scope: !13103)
!13113 = !DILocation(line: 1954, column: 2, scope: !13103)
!13114 = !DILocation(line: 1951, column: 22, scope: !13099)
!13115 = !DILocation(line: 1951, column: 2, scope: !13099)
!13116 = distinct !{!13116, !13101, !13117}
!13117 = !DILocation(line: 1954, column: 2, scope: !13096)
!13118 = !DILocation(line: 1957, column: 9, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13084, file: !3, line: 1957, column: 2)
!13120 = !DILocation(line: 1957, column: 7, scope: !13119)
!13121 = !DILocation(line: 1957, column: 14, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13119, file: !3, line: 1957, column: 2)
!13123 = !DILocation(line: 1957, column: 16, scope: !13122)
!13124 = !DILocation(line: 1957, column: 2, scope: !13119)
!13125 = !DILocation(line: 1958, column: 14, scope: !13122)
!13126 = !DILocation(line: 1958, column: 19, scope: !13122)
!13127 = !DILocation(line: 1958, column: 23, scope: !13122)
!13128 = !DILocation(line: 1958, column: 26, scope: !13122)
!13129 = !DILocation(line: 1958, column: 13, scope: !13122)
!13130 = !DILocation(line: 1958, column: 3, scope: !13122)
!13131 = !DILocation(line: 1957, column: 22, scope: !13122)
!13132 = !DILocation(line: 1957, column: 2, scope: !13122)
!13133 = distinct !{!13133, !13124, !13134}
!13134 = !DILocation(line: 1958, column: 33, scope: !13119)
!13135 = !DILocation(line: 1960, column: 14, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13084, file: !3, line: 1960, column: 2)
!13137 = !DILocation(line: 1960, column: 7, scope: !13136)
!13138 = !DILocation(line: 1960, column: 19, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13136, file: !3, line: 1960, column: 2)
!13140 = !DILocation(line: 1960, column: 26, scope: !13139)
!13141 = !DILocation(line: 1960, column: 2, scope: !13136)
!13142 = !DILocation(line: 1962, column: 20, scope: !13143)
!13143 = distinct !DILexicalBlock(scope: !13139, file: !3, line: 1960, column: 43)
!13144 = !DILocation(line: 1962, column: 25, scope: !13143)
!13145 = !DILocation(line: 1962, column: 33, scope: !13143)
!13146 = !DILocation(line: 1962, column: 19, scope: !13143)
!13147 = !DILocation(line: 1962, column: 13, scope: !13143)
!13148 = !DILocation(line: 1962, column: 11, scope: !13143)
!13149 = !DILocation(line: 1963, column: 12, scope: !13143)
!13150 = !DILocation(line: 1963, column: 20, scope: !13143)
!13151 = !DILocation(line: 1963, column: 31, scope: !13143)
!13152 = !DILocation(line: 1963, column: 29, scope: !13143)
!13153 = !DILocation(line: 1963, column: 41, scope: !13143)
!13154 = !DILocation(line: 1963, column: 46, scope: !13143)
!13155 = !DILocation(line: 1963, column: 54, scope: !13143)
!13156 = !DILocation(line: 1963, column: 40, scope: !13143)
!13157 = !DILocation(line: 1963, column: 3, scope: !13143)
!13158 = !DILocation(line: 1965, column: 7, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13143, file: !3, line: 1965, column: 7)
!13160 = !DILocation(line: 1965, column: 14, scope: !13159)
!13161 = !DILocation(line: 1965, column: 18, scope: !13159)
!13162 = !DILocation(line: 1965, column: 22, scope: !13159)
!13163 = !DILocation(line: 1965, column: 29, scope: !13159)
!13164 = !DILocation(line: 1965, column: 33, scope: !13159)
!13165 = !DILocation(line: 1965, column: 36, scope: !13159)
!13166 = !DILocation(line: 1965, column: 43, scope: !13159)
!13167 = !DILocation(line: 1965, column: 49, scope: !13159)
!13168 = !DILocation(line: 1966, column: 6, scope: !13159)
!13169 = !DILocation(line: 1966, column: 13, scope: !13159)
!13170 = !DILocation(line: 1966, column: 19, scope: !13159)
!13171 = !DILocation(line: 1966, column: 22, scope: !13159)
!13172 = !DILocation(line: 1966, column: 29, scope: !13159)
!13173 = !DILocation(line: 1965, column: 7, scope: !13143)
!13174 = !DILocation(line: 1967, column: 4, scope: !13159)
!13175 = !DILocation(line: 1970, column: 20, scope: !13143)
!13176 = !DILocation(line: 1970, column: 25, scope: !13143)
!13177 = !DILocation(line: 1970, column: 33, scope: !13143)
!13178 = !DILocation(line: 1970, column: 19, scope: !13143)
!13179 = !DILocation(line: 1970, column: 13, scope: !13143)
!13180 = !DILocation(line: 1970, column: 11, scope: !13143)
!13181 = !DILocation(line: 1971, column: 11, scope: !13143)
!13182 = !DILocation(line: 1972, column: 10, scope: !13143)
!13183 = !DILocation(line: 1972, column: 20, scope: !13143)
!13184 = !DILocation(line: 1972, column: 25, scope: !13143)
!13185 = !DILocation(line: 1972, column: 33, scope: !13143)
!13186 = !DILocation(line: 1972, column: 19, scope: !13143)
!13187 = !DILocation(line: 1972, column: 3, scope: !13143)
!13188 = !DILocation(line: 1973, column: 20, scope: !13143)
!13189 = !DILocation(line: 1973, column: 25, scope: !13143)
!13190 = !DILocation(line: 1973, column: 33, scope: !13143)
!13191 = !DILocation(line: 1973, column: 19, scope: !13143)
!13192 = !DILocation(line: 1973, column: 13, scope: !13143)
!13193 = !DILocation(line: 1973, column: 11, scope: !13143)
!13194 = !DILocation(line: 1974, column: 11, scope: !13143)
!13195 = !DILocation(line: 1975, column: 10, scope: !13143)
!13196 = !DILocation(line: 1975, column: 20, scope: !13143)
!13197 = !DILocation(line: 1975, column: 25, scope: !13143)
!13198 = !DILocation(line: 1975, column: 33, scope: !13143)
!13199 = !DILocation(line: 1975, column: 19, scope: !13143)
!13200 = !DILocation(line: 1975, column: 3, scope: !13143)
!13201 = !DILocation(line: 1976, column: 2, scope: !13143)
!13202 = !DILocation(line: 1960, column: 39, scope: !13139)
!13203 = !DILocation(line: 1960, column: 2, scope: !13139)
!13204 = distinct !{!13204, !13141, !13205}
!13205 = !DILocation(line: 1976, column: 2, scope: !13136)
!13206 = !DILocation(line: 1977, column: 1, scope: !13084)
!13207 = distinct !DISubprogram(name: "allow_status_338x", scope: !286, file: !286, line: 124, type: !4625, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!13208 = !DILocalVariable(name: "ep", arg: 1, scope: !13207, file: !286, line: 124, type: !4485)
!13209 = !DILocation(line: 124, column: 57, scope: !13207)
!13210 = !DILocation(line: 131, column: 53, scope: !13207)
!13211 = !DILocation(line: 131, column: 57, scope: !13207)
!13212 = !DILocation(line: 131, column: 63, scope: !13207)
!13213 = !DILocation(line: 131, column: 52, scope: !13207)
!13214 = !DILocation(line: 131, column: 2, scope: !13207)
!13215 = !DILocation(line: 133, column: 2, scope: !13207)
!13216 = !DILocation(line: 133, column: 6, scope: !13207)
!13217 = !DILocation(line: 133, column: 14, scope: !13207)
!13218 = !DILocation(line: 136, column: 2, scope: !13207)
!13219 = !DILocation(line: 136, column: 6, scope: !13207)
!13220 = !DILocation(line: 136, column: 16, scope: !13207)
!13221 = !DILocation(line: 137, column: 1, scope: !13207)
!13222 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !4180, file: !4180, line: 1865, type: !13223, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!13223 = !DISubroutineType(types: !13224)
!13224 = !{!136, !4178}
!13225 = !DILocalVariable(name: "pdev", arg: 1, scope: !13222, file: !4180, line: 1865, type: !4178)
!13226 = !DILocation(line: 1865, column: 53, scope: !13222)
!13227 = !DILocation(line: 1867, column: 26, scope: !13222)
!13228 = !DILocation(line: 1867, column: 32, scope: !13222)
!13229 = !DILocation(line: 1867, column: 9, scope: !13222)
!13230 = !DILocation(line: 1867, column: 2, scope: !13222)
!13231 = distinct !DISubprogram(name: "net2280_led_shutdown", scope: !286, file: !286, line: 298, type: !4634, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!13232 = !DILocalVariable(name: "dev", arg: 1, scope: !13231, file: !286, line: 298, type: !284)
!13233 = !DILocation(line: 298, column: 57, scope: !13231)
!13234 = !DILocation(line: 301, column: 16, scope: !13231)
!13235 = !DILocation(line: 301, column: 21, scope: !13231)
!13236 = !DILocation(line: 301, column: 27, scope: !13231)
!13237 = !DILocation(line: 301, column: 15, scope: !13231)
!13238 = !DILocation(line: 301, column: 9, scope: !13231)
!13239 = !DILocation(line: 301, column: 36, scope: !13231)
!13240 = !DILocation(line: 302, column: 5, scope: !13231)
!13241 = !DILocation(line: 302, column: 10, scope: !13231)
!13242 = !DILocation(line: 302, column: 16, scope: !13231)
!13243 = !DILocation(line: 302, column: 4, scope: !13231)
!13244 = !DILocation(line: 301, column: 2, scope: !13231)
!13245 = !DILocation(line: 303, column: 1, scope: !13231)
!13246 = distinct !DISubprogram(name: "usb_put_gadget", scope: !290, file: !290, line: 453, type: !379, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!13247 = !DILocalVariable(name: "gadget", arg: 1, scope: !13246, file: !290, line: 453, type: !331)
!13248 = !DILocation(line: 453, column: 54, scope: !13246)
!13249 = !DILocation(line: 455, column: 14, scope: !13246)
!13250 = !DILocation(line: 455, column: 22, scope: !13246)
!13251 = !DILocation(line: 455, column: 2, scope: !13246)
!13252 = !DILocation(line: 456, column: 1, scope: !13246)
!13253 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !73, file: !73, line: 655, type: !13254, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !443)
!13254 = !DISubroutineType(types: !13255)
!13255 = !{!136, !3783}
!13256 = !DILocalVariable(name: "dev", arg: 1, scope: !13253, file: !73, line: 655, type: !3783)
!13257 = !DILocation(line: 655, column: 58, scope: !13253)
!13258 = !DILocation(line: 657, column: 9, scope: !13253)
!13259 = !DILocation(line: 657, column: 14, scope: !13253)
!13260 = !DILocation(line: 657, column: 2, scope: !13253)
