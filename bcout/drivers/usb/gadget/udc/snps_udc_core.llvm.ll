; ModuleID = '../bcout/drivers/usb/gadget/udc/snps_udc_core.llvm.bc'
source_filename = "drivers/usb/gadget/udc/snps_udc_core.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.udc = type { %struct.usb_gadget, %struct.spinlock, [32 x %struct.udc_ep], %struct.usb_gadget_driver*, i8, i32, i16, %struct.pci_dev*, %struct.udc_csrs*, %struct.udc_regs*, %struct.udc_ep_regs*, i32*, i32*, %struct.dma_pool*, %struct.dma_pool*, i64, i8*, i32, i16, i16, i16, %struct.device*, %struct.phy*, %struct.extcon_dev*, %struct.extcon_specific_cable_nb, %struct.notifier_block, %struct.delayed_work, %struct.workqueue_struct*, i32 }
%struct.usb_gadget = type { %struct.work_struct, %struct.usb_udc*, %struct.usb_gadget_ops*, %struct.usb_ep*, %struct.list_head, i32, i32, i32, i8*, %struct.device, i32, i32, i32, i32, %struct.usb_otg_caps*, i24, i32 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.atomic64_t = type { i64 }
%struct.usb_udc = type opaque
%struct.usb_gadget_ops = type { i32 (%struct.usb_gadget*)*, i32 (%struct.usb_gadget*)*, i32 (%struct.usb_gadget*, i32)*, i32 (%struct.usb_gadget*, i32)*, i32 (%struct.usb_gadget*, i32)*, i32 (%struct.usb_gadget*, i32)*, i32 (%struct.usb_gadget*, i32, i64)*, void (%struct.usb_gadget*, %struct.usb_dcd_config_params*)*, i32 (%struct.usb_gadget*, %struct.usb_gadget_driver*)*, i32 (%struct.usb_gadget*)*, void (%struct.usb_gadget*, i32)*, %struct.usb_ep* (%struct.usb_gadget*, %struct.usb_endpoint_descriptor*, %struct.usb_ss_ep_comp_descriptor*)* }
%struct.usb_dcd_config_params = type { i8, i16, i8, i8 }
%struct.usb_endpoint_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8 }>
%struct.usb_ss_ep_comp_descriptor = type { i8, i8, i8, i8, i16 }
%struct.usb_ep = type { i8*, i8*, %struct.usb_ep_ops*, %struct.list_head, %struct.usb_ep_caps, i8, i8, [7 x i8], i8, %struct.usb_endpoint_descriptor*, %struct.usb_ss_ep_comp_descriptor* }
%struct.usb_ep_ops = type { i32 (%struct.usb_ep*, %struct.usb_endpoint_descriptor*)*, i32 (%struct.usb_ep*)*, void (%struct.usb_ep*)*, %struct.usb_request* (%struct.usb_ep*, i32)*, void (%struct.usb_ep*, %struct.usb_request*)*, i32 (%struct.usb_ep*, %struct.usb_request*, i32)*, i32 (%struct.usb_ep*, %struct.usb_request*)*, i32 (%struct.usb_ep*, i32)*, i32 (%struct.usb_ep*)*, i32 (%struct.usb_ep*)*, void (%struct.usb_ep*)* }
%struct.usb_request = type { i8*, i32, i64, %struct.scatterlist*, i32, i32, i24, void (%struct.usb_ep*, %struct.usb_request*)*, i8*, %struct.list_head, i32, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.usb_ep_caps = type { i8, [3 x i8] }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.65, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.65 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.63, %struct.list_head, %struct.list_head, %union.anon.64 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.61 }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.53, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.53 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.54, i32 }
%union.anon.54 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.46, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.32, %union.anon.33, i32 }
%struct.request_queue = type opaque
%union.anon.32 = type { %struct.list_head }
%union.anon.33 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.34 }
%struct.anon.34 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.45, i32, [12 x i8] }
%union.anon.45 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.46 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.47, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.50 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, i64 }
%union.anon.50 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.63 = type { %struct.list_head }
%union.anon.64 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.55, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.56, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.57, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.60, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.55 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.56 = type { %struct.callback_head }
%union.anon.57 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.60 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.58 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.58 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.31 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.31 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.usb_otg_caps = type opaque
%struct.spinlock = type { %union.anon.4 }
%union.anon.4 = type { %struct.raw_spinlock }
%struct.udc_ep = type { %struct.usb_ep, %struct.udc_ep_regs*, i32*, i32*, i64, i64, %struct.udc_stp_dma*, %struct.udc_data_dma*, %struct.udc_request*, i32, i32, %struct.udc_request*, i32, i32, %struct.udc*, %struct.list_head, i32, i32, i24 }
%struct.udc_stp_dma = type { i32, i32, i32, i32 }
%struct.udc_data_dma = type { i32, i32, i32, i32 }
%struct.udc_request = type { %struct.usb_request, i8, i64, %struct.udc_data_dma*, %struct.udc_data_dma*, %struct.list_head, i32 }
%struct.usb_gadget_driver = type { i8*, i32, {}*, void (%struct.usb_gadget*)*, i32 (%struct.usb_gadget*, %struct.usb_ctrlrequest*)*, void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)*, %struct.device_driver, i8*, %struct.list_head, i8 }
%struct.usb_ctrlrequest = type { i8, i8, i16, i16, i16 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.66, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.66 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.udc_csrs = type { i32, [9 x i32] }
%struct.udc_regs = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.udc_ep_regs = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.dma_pool = type opaque
%struct.phy = type opaque
%struct.extcon_dev = type opaque
%struct.extcon_specific_cable_nb = type { %struct.notifier_block*, i32, %struct.extcon_dev*, i64 }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.workqueue_struct = type opaque
%union.udc_setup_data = type { [2 x i32] }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.kmem_cache = type opaque
%struct.anon.67 = type { i8*, %struct.usb_ep_caps }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.68, i64 }
%union.anon.68 = type { void (i64)* }
%struct.amd5536udc = type opaque

@__param_str_use_dma = internal constant [22 x i8] c"snps_udc_core.use_dma\00", align 16, !dbg !0
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 8
@use_dma = internal global i8 1, align 1, !dbg !4560
@__param_use_dma = internal constant %struct.kernel_param { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__param_str_use_dma, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon { i8* @use_dma } }, section "__param", align 8, !dbg !4432
@__UNIQUE_ID_use_dmatype235 = internal constant [36 x i8] c"snps_udc_core.parmtype=use_dma:bool\00", section ".modinfo", align 1, !dbg !4484
@__UNIQUE_ID_use_dma236 = internal constant [40 x i8] c"snps_udc_core.parm=use_dma:true for DMA\00", section ".modinfo", align 1, !dbg !4489
@__param_str_use_dma_ppb = internal constant [26 x i8] c"snps_udc_core.use_dma_ppb\00", align 16, !dbg !4562
@use_dma_ppb = internal global i8 1, align 1, !dbg !4564
@__param_use_dma_ppb = internal constant %struct.kernel_param { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__param_str_use_dma_ppb, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon { i8* @use_dma_ppb } }, section "__param", align 8, !dbg !4494
@__UNIQUE_ID_use_dma_ppbtype237 = internal constant [40 x i8] c"snps_udc_core.parmtype=use_dma_ppb:bool\00", section ".modinfo", align 1, !dbg !4496
@__UNIQUE_ID_use_dma_ppb238 = internal constant [70 x i8] c"snps_udc_core.parm=use_dma_ppb:true for DMA in packet per buffer mode\00", section ".modinfo", align 1, !dbg !4498
@__param_str_use_dma_ppb_du = internal constant [29 x i8] c"snps_udc_core.use_dma_ppb_du\00", align 16, !dbg !4566
@use_dma_ppb_du = internal global i8 0, align 1, !dbg !4544
@__param_use_dma_ppb_du = internal constant %struct.kernel_param { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__param_str_use_dma_ppb_du, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon { i8* @use_dma_ppb_du } }, section "__param", align 8, !dbg !4503
@__UNIQUE_ID_use_dma_ppb_dutype239 = internal constant [43 x i8] c"snps_udc_core.parmtype=use_dma_ppb_du:bool\00", section ".modinfo", align 1, !dbg !4505
@__UNIQUE_ID_use_dma_ppb_du240 = internal constant [96 x i8] c"snps_udc_core.parm=use_dma_ppb_du:true for DMA in packet per buffer mode with descriptor update\00", section ".modinfo", align 1, !dbg !4510
@__param_str_use_fullspeed = internal constant [28 x i8] c"snps_udc_core.use_fullspeed\00", align 16, !dbg !4571
@use_fullspeed = internal global i8 0, align 1, !dbg !4546
@__param_use_fullspeed = internal constant %struct.kernel_param { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__param_str_use_fullspeed, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon { i8* @use_fullspeed } }, section "__param", align 8, !dbg !4515
@__UNIQUE_ID_use_fullspeedtype241 = internal constant [42 x i8] c"snps_udc_core.parmtype=use_fullspeed:bool\00", section ".modinfo", align 1, !dbg !4517
@__UNIQUE_ID_use_fullspeed242 = internal constant [57 x i8] c"snps_udc_core.parm=use_fullspeed:true for fullspeed only\00", section ".modinfo", align 1, !dbg !4522
@udc_timer = internal global %struct.timer_list zeroinitializer, align 8, !dbg !4550
@set_rde = internal global i32 -1, align 4, !dbg !4576
@jiffies = external dso_local global i64, align 8
@udc_pollstall_timer = internal global %struct.timer_list zeroinitializer, align 8, !dbg !4554
@stop_timer = internal global i32 0, align 4, !dbg !4552
@on_exit = internal global %struct.completion { i32 0, %struct.swait_queue_head { %struct.raw_spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.completion* @on_exit to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.completion* @on_exit to i8*), i64 8) to %struct.list_head*) } } }, align 8, !dbg !4634
@stop_pollstall_timer = internal global i32 0, align 4, !dbg !4556
@on_pollstall_exit = internal global %struct.completion { i32 0, %struct.swait_queue_head { %struct.raw_spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.completion* @on_pollstall_exit to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.completion* @on_pollstall_exit to i8*), i64 8) to %struct.list_head*) } } }, align 8, !dbg !4636
@udc = internal global %struct.udc* null, align 8, !dbg !4548
@use_dma_bufferfill_mode = internal global i32 0, align 4, !dbg !4558
@.str = private unnamed_addr constant [14 x i8] c"data_requests\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"setup requests\00", align 1
@udc_ops = internal constant %struct.usb_gadget_ops { i32 (%struct.usb_gadget*)* @udc_get_frame, i32 (%struct.usb_gadget*)* @udc_wakeup, i32 (%struct.usb_gadget*, i32)* null, i32 (%struct.usb_gadget*, i32)* null, i32 (%struct.usb_gadget*, i32)* null, i32 (%struct.usb_gadget*, i32)* null, i32 (%struct.usb_gadget*, i32, i64)* null, void (%struct.usb_gadget*, %struct.usb_dcd_config_params*)* null, i32 (%struct.usb_gadget*, %struct.usb_gadget_driver*)* @amd5536_udc_start, i32 (%struct.usb_gadget*)* @amd5536_udc_stop, void (%struct.usb_gadget*, i32)* null, %struct.usb_ep* (%struct.usb_gadget*, %struct.usb_endpoint_descriptor*, %struct.usb_ss_ep_comp_descriptor*)* null }, align 8, !dbg !4638
@.str.2 = private unnamed_addr constant [7 x i8] c"gadget\00", align 1
@name = internal constant [4 x i8] c"udc\00", align 1, !dbg !4640
@.str.3 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@mod_desc = internal constant [31 x i8] c"Synopsys USB Device Controller\00", align 16, !dbg !4643
@.str.4 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"irq %s, pci mem %08lx, chip rev %02x(Geode5536 %s)\0A\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"A0\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"B1\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"01.00.0206\00", align 1
@.str.9 = private unnamed_addr constant [30 x i8] c"chip revision is A0; too old\0A\00", align 1
@.str.10 = private unnamed_addr constant [38 x i8] c"driver version: %s(for Geode5536 B1)\0A\00", align 1
@__UNIQUE_ID_description265 = internal constant [57 x i8] c"snps_udc_core.description=Synopsys USB Device Controller\00", section ".modinfo", align 1, !dbg !4527
@__UNIQUE_ID_author266 = internal constant [37 x i8] c"snps_udc_core.author=Thomas Dahlmann\00", section ".modinfo", align 1, !dbg !4529
@__UNIQUE_ID_file267 = internal constant [56 x i8] c"snps_udc_core.file=drivers/usb/gadget/udc/snps_udc_core\00", section ".modinfo", align 1, !dbg !4534
@__UNIQUE_ID_license268 = internal constant [26 x i8] c"snps_udc_core.license=GPL\00", section ".modinfo", align 1, !dbg !4539
@hs_tx_buf = internal global i64 256, align 8, !dbg !4578
@setup_data = internal global %union.udc_setup_data zeroinitializer, align 4, !dbg !4580
@cnak_pending = internal global i32 0, align 4, !dbg !4589
@udc_stall_spinlock = internal global %struct.spinlock undef, align 1, !dbg !4587
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.11 = private unnamed_addr constant [21 x i8] c"HE ep%dout occurred\0A\00", align 1
@udc_rxfifo_pending = internal global i32 0, align 4, !dbg !4591
@page_offset_base = external dso_local global i64, align 8
@.str.12 = private unnamed_addr constant [38 x i8] c"BNA ep%din occurred - DESPTR = %08lx\0A\00", align 1
@.str.13 = private unnamed_addr constant [36 x i8] c"HE ep%dn occurred - DESPTR = %08lx\0A\00", align 1
@soft_reset_occured = internal global i32 0, align 4, !dbg !4593
@soft_reset_after_usbreset_occured = internal global i32 0, align 4, !dbg !4600
@.str.14 = private unnamed_addr constant [13 x i8] c"Connect: %s\0A\00", align 1
@udc_ep_ops = internal constant %struct.usb_ep_ops { i32 (%struct.usb_ep*, %struct.usb_endpoint_descriptor*)* @udc_ep_enable, i32 (%struct.usb_ep*)* @udc_ep_disable, void (%struct.usb_ep*)* null, %struct.usb_request* (%struct.usb_ep*, i32)* @udc_alloc_request, void (%struct.usb_ep*, %struct.usb_request*)* @udc_free_request, i32 (%struct.usb_ep*, %struct.usb_request*, i32)* @udc_queue, i32 (%struct.usb_ep*, %struct.usb_request*)* @udc_dequeue, i32 (%struct.usb_ep*, i32)* @udc_set_halt, i32 (%struct.usb_ep*)* null, i32 (%struct.usb_ep*)* null, void (%struct.usb_ep*)* null }, align 8, !dbg !4595
@ep0_string = internal constant [6 x i8] c"ep0in\00", align 1, !dbg !4597
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.15 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.16 = private unnamed_addr constant [39 x i8] c"drivers/usb/gadget/udc/snps_udc_core.c\00", align 1
@udc_irq_spinlock = internal global %struct.spinlock undef, align 1, !dbg !4602
@ep_info = internal constant [32 x %struct.anon.67] [%struct.anon.67 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ep0_string, i32 0, i32 0), %struct.usb_ep_caps { i8 17, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i32 0, i32 0), %struct.usb_ep_caps { i8 20, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i32 0, i32 0), %struct.usb_ep_caps { i8 20, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i32 0, i32 0), %struct.usb_ep_caps { i8 20, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), %struct.usb_ep_caps { i8 20, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i32 0, i32 0), %struct.usb_ep_caps { i8 20, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), %struct.usb_ep_caps { i8 20, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), %struct.usb_ep_caps { i8 20, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i32 0, i32 0), %struct.usb_ep_caps { i8 20, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i32 0, i32 0), %struct.usb_ep_caps { i8 20, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i32 0, i32 0), %struct.usb_ep_caps { i8 20, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i32 0, i32 0), %struct.usb_ep_caps { i8 20, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i32 0, i32 0), %struct.usb_ep_caps { i8 20, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i32 0, i32 0), %struct.usb_ep_caps { i8 20, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30, i32 0, i32 0), %struct.usb_ep_caps { i8 20, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i32 0, i32 0), %struct.usb_ep_caps { i8 20, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), %struct.usb_ep_caps { i8 33, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i32 0, i32 0), %struct.usb_ep_caps { i8 36, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i32 0, i32 0), %struct.usb_ep_caps { i8 36, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i32 0, i32 0), %struct.usb_ep_caps { i8 36, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i32 0, i32 0), %struct.usb_ep_caps { i8 36, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i32 0, i32 0), %struct.usb_ep_caps { i8 36, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i32 0, i32 0), %struct.usb_ep_caps { i8 36, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i32 0, i32 0), %struct.usb_ep_caps { i8 36, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i32 0, i32 0), %struct.usb_ep_caps { i8 36, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i32 0, i32 0), %struct.usb_ep_caps { i8 36, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i32 0, i32 0), %struct.usb_ep_caps { i8 36, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43, i32 0, i32 0), %struct.usb_ep_caps { i8 36, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i32 0, i32 0), %struct.usb_ep_caps { i8 36, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i32 0, i32 0), %struct.usb_ep_caps { i8 36, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i32 0, i32 0), %struct.usb_ep_caps { i8 36, [3 x i8] undef } }, %struct.anon.67 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i32 0, i32 0), %struct.usb_ep_caps { i8 36, [3 x i8] undef } }], align 16, !dbg !4604
@.str.17 = private unnamed_addr constant [10 x i8] c"ep1in-int\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"ep2in-bulk\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"ep3in-bulk\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"ep4in-bulk\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"ep5in-bulk\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"ep6in-bulk\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"ep7in-bulk\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"ep8in-bulk\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"ep9in-bulk\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"ep10in-bulk\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"ep11in-bulk\00", align 1
@.str.28 = private unnamed_addr constant [12 x i8] c"ep12in-bulk\00", align 1
@.str.29 = private unnamed_addr constant [12 x i8] c"ep13in-bulk\00", align 1
@.str.30 = private unnamed_addr constant [12 x i8] c"ep14in-bulk\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"ep15in-bulk\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"ep0out\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"ep1out-bulk\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"ep2out-bulk\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"ep3out-bulk\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"ep4out-bulk\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c"ep5out-bulk\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"ep6out-bulk\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c"ep7out-bulk\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"ep8out-bulk\00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c"ep9out-bulk\00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c"ep10out-bulk\00", align 1
@.str.43 = private unnamed_addr constant [13 x i8] c"ep11out-bulk\00", align 1
@.str.44 = private unnamed_addr constant [13 x i8] c"ep12out-bulk\00", align 1
@.str.45 = private unnamed_addr constant [13 x i8] c"ep13out-bulk\00", align 1
@.str.46 = private unnamed_addr constant [13 x i8] c"ep14out-bulk\00", align 1
@.str.47 = private unnamed_addr constant [13 x i8] c"ep15out-bulk\00", align 1
@.str.48 = private unnamed_addr constant [16 x i8] c"USB Disconnect\0A\00", align 1
@disconnect_tasklet = internal global %struct.tasklet_struct { %struct.tasklet_struct* null, i64 0, %struct.atomic_t zeroinitializer, i8 0, %union.anon.68 { void (i64)* @udc_tasklet_disconnect }, i64 0 }, align 8, !dbg !4613
@.str.49 = private unnamed_addr constant [13 x i8] c"USB Connect\0A\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"DMA mode (%s)\0A\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"PPBNDU\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"PPBDU\00", align 1
@.str.53 = private unnamed_addr constant [3 x i8] c"BF\00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"FIFO mode\0A\00", align 1
@llvm.used = appending global [16 x i8*] [i8* bitcast (%struct.kernel_param* @__param_use_dma to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__UNIQUE_ID_use_dmatype235, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__UNIQUE_ID_use_dma236, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_use_dma_ppb to i8*), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__UNIQUE_ID_use_dma_ppbtype237, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__UNIQUE_ID_use_dma_ppb238, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_use_dma_ppb_du to i8*), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_use_dma_ppb_dutype239, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__UNIQUE_ID_use_dma_ppb_du240, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_use_fullspeed to i8*), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__UNIQUE_ID_use_fullspeedtype241, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__UNIQUE_ID_use_fullspeed242, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__UNIQUE_ID_description265, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_author266, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__UNIQUE_ID_file267, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__UNIQUE_ID_license268, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @udc_mask_unused_interrupts(%struct.udc* %dev) #0 !dbg !4657 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %tmp = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !4660, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !4662, metadata !DIExpression()), !dbg !4663
  store i32 255, i32* %tmp, align 4, !dbg !4664
  %0 = load i32, i32* %tmp, align 4, !dbg !4665
  %1 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4666
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %1, i32 0, i32 9, !dbg !4667
  %2 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !4667
  %irqmsk = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %2, i32 0, i32 4, !dbg !4668
  %3 = bitcast i32* %irqmsk to i8*, !dbg !4669
  call void @writel(i32 %0, i8* %3) #11, !dbg !4670
  %4 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4671
  %regs1 = getelementptr inbounds %struct.udc, %struct.udc* %4, i32 0, i32 9, !dbg !4672
  %5 = load %struct.udc_regs*, %struct.udc_regs** %regs1, align 8, !dbg !4672
  %ep_irqmsk = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %5, i32 0, i32 6, !dbg !4673
  %6 = bitcast i32* %ep_irqmsk to i8*, !dbg !4674
  call void @writel(i32 -1, i8* %6) #11, !dbg !4675
  ret i32 0, !dbg !4676
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #0 !dbg !4677 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !4683, metadata !DIExpression()), !dbg !4684
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !4685, metadata !DIExpression()), !dbg !4684
  %0 = load i32, i32* %val.addr, align 4, !dbg !4684
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !4684
  %2 = bitcast i8* %1 to i32*, !dbg !4684
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #5, !dbg !4684, !srcloc !4686
  ret void, !dbg !4684
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @udc_enable_dev_setup_interrupts(%struct.udc* %dev) #0 !dbg !4687 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %tmp = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !4688, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !4690, metadata !DIExpression()), !dbg !4691
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4692
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %0, i32 0, i32 9, !dbg !4693
  %1 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !4693
  %irqmsk = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %1, i32 0, i32 4, !dbg !4694
  %2 = bitcast i32* %irqmsk to i8*, !dbg !4695
  %call = call i32 @readl(i8* %2) #11, !dbg !4696
  store i32 %call, i32* %tmp, align 4, !dbg !4697
  %3 = load i32, i32* %tmp, align 4, !dbg !4698
  %and = and i32 %3, -204, !dbg !4698
  store i32 %and, i32* %tmp, align 4, !dbg !4698
  %4 = load i32, i32* %tmp, align 4, !dbg !4699
  %5 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4700
  %regs1 = getelementptr inbounds %struct.udc, %struct.udc* %5, i32 0, i32 9, !dbg !4701
  %6 = load %struct.udc_regs*, %struct.udc_regs** %regs1, align 8, !dbg !4701
  %irqmsk2 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %6, i32 0, i32 4, !dbg !4702
  %7 = bitcast i32* %irqmsk2 to i8*, !dbg !4703
  call void @writel(i32 %4, i8* %7) #11, !dbg !4704
  ret i32 0, !dbg !4705
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #0 !dbg !4706 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !4711, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4713, metadata !DIExpression()), !dbg !4712
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !4712
  %1 = bitcast i8* %0 to i32*, !dbg !4712
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #5, !dbg !4712, !srcloc !4714
  store i32 %2, i32* %ret, align 4, !dbg !4712
  %3 = load i32, i32* %ret, align 4, !dbg !4712
  ret i32 %3, !dbg !4712
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @empty_req_queue(%struct.udc_ep* %ep) #0 !dbg !4715 {
entry:
  %ep.addr = alloca %struct.udc_ep*, align 8
  %req = alloca %struct.udc_request*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.udc_request*, align 8
  store %struct.udc_ep* %ep, %struct.udc_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep.addr, metadata !4718, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req, metadata !4720, metadata !DIExpression()), !dbg !4721
  %0 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !4722
  %halted = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %0, i32 0, i32 16, !dbg !4723
  store i32 1, i32* %halted, align 8, !dbg !4724
  br label %while.cond, !dbg !4725

while.cond:                                       ; preds = %do.end, %entry
  %1 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !4726
  %queue = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %1, i32 0, i32 15, !dbg !4727
  %call = call i32 @list_empty(%struct.list_head* %queue) #11, !dbg !4728
  %tobool = icmp ne i32 %call, 0, !dbg !4729
  %lnot = xor i1 %tobool, true, !dbg !4729
  br i1 %lnot, label %while.body, label %while.end, !dbg !4725

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4730, metadata !DIExpression()), !dbg !4733
  %2 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !4733
  %queue1 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %2, i32 0, i32 15, !dbg !4733
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queue1, i32 0, i32 0, !dbg !4733
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4733
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !4733
  store i8* %4, i8** %__mptr, align 8, !dbg !4733
  br label %do.body, !dbg !4733

do.body:                                          ; preds = %while.body
  br label %do.end, !dbg !4734

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !4733
  %add.ptr = getelementptr i8, i8* %5, i64 -128, !dbg !4733
  %6 = bitcast i8* %add.ptr to %struct.udc_request*, !dbg !4733
  store %struct.udc_request* %6, %struct.udc_request** %tmp, align 8, !dbg !4734
  %7 = load %struct.udc_request*, %struct.udc_request** %tmp, align 8, !dbg !4733
  store %struct.udc_request* %7, %struct.udc_request** %req, align 8, !dbg !4736
  %8 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !4737
  %9 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !4738
  call void @complete_req(%struct.udc_ep* %8, %struct.udc_request* %9, i32 -108) #11, !dbg !4739
  br label %while.cond, !dbg !4725, !llvm.loop !4740

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4742
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !4743 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !4749, metadata !DIExpression()), !dbg !4750
  br label %do.body, !dbg !4751

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4753

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4751
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !4751
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4751
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !4753
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !4751
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4755
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !4756
  %conv = zext i1 %cmp to i32, !dbg !4756
  ret i32 %conv, !dbg !4757
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @complete_req(%struct.udc_ep* %ep, %struct.udc_request* %req, i32 %sts) #0 !dbg !4758 {
entry:
  %lock.addr.i16 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i16, metadata !4761, metadata !DIExpression()), !dbg !4766
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4768, metadata !DIExpression()), !dbg !4770
  %ep.addr = alloca %struct.udc_ep*, align 8
  %req.addr = alloca %struct.udc_request*, align 8
  %sts.addr = alloca i32, align 4
  %dev = alloca %struct.udc*, align 8
  %halted = alloca i32, align 4
  store %struct.udc_ep* %ep, %struct.udc_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep.addr, metadata !4772, metadata !DIExpression()), !dbg !4773
  store %struct.udc_request* %req, %struct.udc_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req.addr, metadata !4774, metadata !DIExpression()), !dbg !4775
  store i32 %sts, i32* %sts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sts.addr, metadata !4776, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.declare(metadata %struct.udc** %dev, metadata !4778, metadata !DIExpression()), !dbg !4779
  call void @llvm.dbg.declare(metadata i32* %halted, metadata !4780, metadata !DIExpression()), !dbg !4781
  br label %do.body, !dbg !4782

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4783

do.end:                                           ; preds = %do.body
  %0 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !4785
  %dev1 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %0, i32 0, i32 14, !dbg !4786
  %1 = load %struct.udc*, %struct.udc** %dev1, align 8, !dbg !4786
  store %struct.udc* %1, %struct.udc** %dev, align 8, !dbg !4787
  %2 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !4788
  %dma = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %2, i32 0, i32 3, !dbg !4790
  %3 = load i32*, i32** %dma, align 8, !dbg !4790
  %tobool = icmp ne i32* %3, null, !dbg !4788
  br i1 %tobool, label %if.then, label %if.end, !dbg !4791

if.then:                                          ; preds = %do.end
  %4 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !4792
  %gadget = getelementptr inbounds %struct.udc, %struct.udc* %4, i32 0, i32 0, !dbg !4793
  %5 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !4794
  %req2 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %5, i32 0, i32 0, !dbg !4795
  %6 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !4796
  %in = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %6, i32 0, i32 18, !dbg !4797
  %7 = bitcast i24* %in to i32*, !dbg !4797
  %bf.load = load i32, i32* %7, align 8, !dbg !4797
  %bf.lshr = lshr i32 %bf.load, 19, !dbg !4797
  %bf.clear = and i32 %bf.lshr, 1, !dbg !4797
  call void @usb_gadget_unmap_request(%struct.usb_gadget* %gadget, %struct.usb_request* %req2, i32 %bf.clear) #11, !dbg !4798
  br label %if.end, !dbg !4798

if.end:                                           ; preds = %if.then, %do.end
  %8 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !4799
  %halted3 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %8, i32 0, i32 16, !dbg !4800
  %9 = load i32, i32* %halted3, align 8, !dbg !4800
  store i32 %9, i32* %halted, align 4, !dbg !4801
  %10 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !4802
  %halted4 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %10, i32 0, i32 16, !dbg !4803
  store i32 1, i32* %halted4, align 8, !dbg !4804
  %11 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !4805
  %req5 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %11, i32 0, i32 0, !dbg !4807
  %status = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req5, i32 0, i32 11, !dbg !4808
  %12 = load i32, i32* %status, align 4, !dbg !4808
  %cmp = icmp eq i32 %12, -115, !dbg !4809
  br i1 %cmp, label %if.then6, label %if.end9, !dbg !4810

if.then6:                                         ; preds = %if.end
  %13 = load i32, i32* %sts.addr, align 4, !dbg !4811
  %14 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !4812
  %req7 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %14, i32 0, i32 0, !dbg !4813
  %status8 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req7, i32 0, i32 11, !dbg !4814
  store i32 %13, i32* %status8, align 4, !dbg !4815
  br label %if.end9, !dbg !4812

if.end9:                                          ; preds = %if.then6, %if.end
  %15 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !4816
  %queue = getelementptr inbounds %struct.udc_request, %struct.udc_request* %15, i32 0, i32 5, !dbg !4817
  call void @list_del_init(%struct.list_head* %queue) #11, !dbg !4818
  br label %do.body10, !dbg !4819

do.body10:                                        ; preds = %if.end9
  br label %do.end11, !dbg !4820

do.end11:                                         ; preds = %do.body10
  %16 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !4822
  %lock = getelementptr inbounds %struct.udc, %struct.udc* %16, i32 0, i32 1, !dbg !4823
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !4824, !srcloc !4826
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4827
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !4827
  %rlock.i = bitcast %union.anon.4* %18 to %struct.raw_spinlock*, !dbg !4827
  %19 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !4829
  %ep12 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %19, i32 0, i32 0, !dbg !4830
  %20 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !4831
  %req13 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %20, i32 0, i32 0, !dbg !4832
  call void @usb_gadget_giveback_request(%struct.usb_ep* %ep12, %struct.usb_request* %req13) #11, !dbg !4833
  %21 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !4834
  %lock14 = getelementptr inbounds %struct.udc, %struct.udc* %21, i32 0, i32 1, !dbg !4835
  store %struct.spinlock* %lock14, %struct.spinlock** %lock.addr.i16, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !4836, !srcloc !4838
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i16, align 8, !dbg !4839
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !4839
  %rlock.i17 = bitcast %union.anon.4* %23 to %struct.raw_spinlock*, !dbg !4839
  %24 = load i32, i32* %halted, align 4, !dbg !4841
  %25 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !4842
  %halted15 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %25, i32 0, i32 16, !dbg !4843
  store i32 %24, i32* %halted15, align 8, !dbg !4844
  ret void, !dbg !4845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @udc_basic_init(%struct.udc* %dev) #0 !dbg !4846 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %tmp = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !4849, metadata !DIExpression()), !dbg !4850
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !4851, metadata !DIExpression()), !dbg !4852
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4853
  %gadget = getelementptr inbounds %struct.udc, %struct.udc* %0, i32 0, i32 0, !dbg !4854
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !4855
  store i32 0, i32* %speed, align 8, !dbg !4856
  %call = call i32 @timer_pending(%struct.timer_list* @udc_timer) #11, !dbg !4857
  %tobool = icmp ne i32 %call, 0, !dbg !4857
  br i1 %tobool, label %if.then, label %if.end, !dbg !4859

if.then:                                          ; preds = %entry
  store i32 0, i32* @set_rde, align 4, !dbg !4860
  %1 = load volatile i64, i64* @jiffies, align 8, !dbg !4862
  %sub = sub i64 %1, 1, !dbg !4863
  %call1 = call i32 @mod_timer(%struct.timer_list* @udc_timer, i64 %sub) #11, !dbg !4864
  br label %if.end, !dbg !4865

if.end:                                           ; preds = %if.then, %entry
  %call2 = call i32 @timer_pending(%struct.timer_list* @udc_pollstall_timer) #11, !dbg !4866
  %tobool3 = icmp ne i32 %call2, 0, !dbg !4866
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !4868

if.then4:                                         ; preds = %if.end
  %2 = load volatile i64, i64* @jiffies, align 8, !dbg !4869
  %sub5 = sub i64 %2, 1, !dbg !4870
  %call6 = call i32 @mod_timer(%struct.timer_list* @udc_pollstall_timer, i64 %sub5) #11, !dbg !4871
  br label %if.end7, !dbg !4871

if.end7:                                          ; preds = %if.then4, %if.end
  %3 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4872
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %3, i32 0, i32 9, !dbg !4873
  %4 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !4873
  %ctl = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %4, i32 0, i32 1, !dbg !4874
  %5 = bitcast i32* %ctl to i8*, !dbg !4875
  %call8 = call i32 @readl(i8* %5) #11, !dbg !4876
  store i32 %call8, i32* %tmp, align 4, !dbg !4877
  %6 = load i32, i32* %tmp, align 4, !dbg !4878
  %and = and i32 %6, -5, !dbg !4878
  store i32 %and, i32* %tmp, align 4, !dbg !4878
  %7 = load i32, i32* %tmp, align 4, !dbg !4879
  %and9 = and i32 %7, -9, !dbg !4879
  store i32 %and9, i32* %tmp, align 4, !dbg !4879
  %8 = load i32, i32* %tmp, align 4, !dbg !4880
  %9 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4881
  %regs10 = getelementptr inbounds %struct.udc, %struct.udc* %9, i32 0, i32 9, !dbg !4882
  %10 = load %struct.udc_regs*, %struct.udc_regs** %regs10, align 8, !dbg !4882
  %ctl11 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %10, i32 0, i32 1, !dbg !4883
  %11 = bitcast i32* %ctl11 to i8*, !dbg !4884
  call void @writel(i32 %8, i8* %11) #11, !dbg !4885
  %12 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4886
  %regs12 = getelementptr inbounds %struct.udc, %struct.udc* %12, i32 0, i32 9, !dbg !4887
  %13 = load %struct.udc_regs*, %struct.udc_regs** %regs12, align 8, !dbg !4887
  %cfg = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %13, i32 0, i32 0, !dbg !4888
  %14 = bitcast i32* %cfg to i8*, !dbg !4889
  %call13 = call i32 @readl(i8* %14) #11, !dbg !4890
  store i32 %call13, i32* %tmp, align 4, !dbg !4891
  %15 = load i32, i32* %tmp, align 4, !dbg !4892
  %or = or i32 %15, 131072, !dbg !4892
  store i32 %or, i32* %tmp, align 4, !dbg !4892
  %16 = load i32, i32* %tmp, align 4, !dbg !4893
  %or14 = or i32 %16, 8, !dbg !4893
  store i32 %or14, i32* %tmp, align 4, !dbg !4893
  %17 = load i32, i32* %tmp, align 4, !dbg !4894
  %or15 = or i32 %17, 4, !dbg !4894
  store i32 %or15, i32* %tmp, align 4, !dbg !4894
  %18 = load i32, i32* %tmp, align 4, !dbg !4895
  %19 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4896
  %regs16 = getelementptr inbounds %struct.udc, %struct.udc* %19, i32 0, i32 9, !dbg !4897
  %20 = load %struct.udc_regs*, %struct.udc_regs** %regs16, align 8, !dbg !4897
  %cfg17 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %20, i32 0, i32 0, !dbg !4898
  %21 = bitcast i32* %cfg17 to i8*, !dbg !4899
  call void @writel(i32 %18, i8* %21) #11, !dbg !4900
  %22 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4901
  call void @make_ep_lists(%struct.udc* %22) #11, !dbg !4902
  %23 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4903
  %data_ep_enabled = getelementptr inbounds %struct.udc, %struct.udc* %23, i32 0, i32 4, !dbg !4904
  %bf.load = load i8, i8* %data_ep_enabled, align 8, !dbg !4905
  %bf.clear = and i8 %bf.load, -9, !dbg !4905
  store i8 %bf.clear, i8* %data_ep_enabled, align 8, !dbg !4905
  %24 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4906
  %data_ep_queued = getelementptr inbounds %struct.udc, %struct.udc* %24, i32 0, i32 4, !dbg !4907
  %bf.load18 = load i8, i8* %data_ep_queued, align 8, !dbg !4908
  %bf.clear19 = and i8 %bf.load18, -17, !dbg !4908
  store i8 %bf.clear19, i8* %data_ep_queued, align 8, !dbg !4908
  ret void, !dbg !4909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @timer_pending(%struct.timer_list* %timer) #0 !dbg !4910 {
entry:
  %timer.addr = alloca %struct.timer_list*, align 8
  store %struct.timer_list* %timer, %struct.timer_list** %timer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %timer.addr, metadata !4915, metadata !DIExpression()), !dbg !4916
  %0 = load %struct.timer_list*, %struct.timer_list** %timer.addr, align 8, !dbg !4917
  %entry1 = getelementptr inbounds %struct.timer_list, %struct.timer_list* %0, i32 0, i32 0, !dbg !4918
  %call = call i32 @hlist_unhashed_lockless(%struct.hlist_node* %entry1) #11, !dbg !4919
  %tobool = icmp ne i32 %call, 0, !dbg !4920
  %lnot = xor i1 %tobool, true, !dbg !4920
  %lnot.ext = zext i1 %lnot to i32, !dbg !4920
  ret i32 %lnot.ext, !dbg !4921
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @make_ep_lists(%struct.udc* %dev) #0 !dbg !4922 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !4923, metadata !DIExpression()), !dbg !4924
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4925
  %gadget = getelementptr inbounds %struct.udc, %struct.udc* %0, i32 0, i32 0, !dbg !4926
  %ep_list = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 4, !dbg !4927
  call void @INIT_LIST_HEAD(%struct.list_head* %ep_list) #11, !dbg !4928
  %1 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4929
  %ep = getelementptr inbounds %struct.udc, %struct.udc* %1, i32 0, i32 2, !dbg !4930
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep, i64 0, i64 1, !dbg !4929
  %ep1 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx, i32 0, i32 0, !dbg !4931
  %ep_list2 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep1, i32 0, i32 3, !dbg !4932
  %2 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4933
  %gadget3 = getelementptr inbounds %struct.udc, %struct.udc* %2, i32 0, i32 0, !dbg !4934
  %ep_list4 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget3, i32 0, i32 4, !dbg !4935
  call void @list_add_tail(%struct.list_head* %ep_list2, %struct.list_head* %ep_list4) #11, !dbg !4936
  %3 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4937
  %ep5 = getelementptr inbounds %struct.udc, %struct.udc* %3, i32 0, i32 2, !dbg !4938
  %arrayidx6 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep5, i64 0, i64 2, !dbg !4937
  %ep7 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx6, i32 0, i32 0, !dbg !4939
  %ep_list8 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep7, i32 0, i32 3, !dbg !4940
  %4 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4941
  %gadget9 = getelementptr inbounds %struct.udc, %struct.udc* %4, i32 0, i32 0, !dbg !4942
  %ep_list10 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget9, i32 0, i32 4, !dbg !4943
  call void @list_add_tail(%struct.list_head* %ep_list8, %struct.list_head* %ep_list10) #11, !dbg !4944
  %5 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4945
  %ep11 = getelementptr inbounds %struct.udc, %struct.udc* %5, i32 0, i32 2, !dbg !4946
  %arrayidx12 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep11, i64 0, i64 18, !dbg !4945
  %ep13 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx12, i32 0, i32 0, !dbg !4947
  %ep_list14 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep13, i32 0, i32 3, !dbg !4948
  %6 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4949
  %gadget15 = getelementptr inbounds %struct.udc, %struct.udc* %6, i32 0, i32 0, !dbg !4950
  %ep_list16 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget15, i32 0, i32 4, !dbg !4951
  call void @list_add_tail(%struct.list_head* %ep_list14, %struct.list_head* %ep_list16) #11, !dbg !4952
  %7 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4953
  %ep17 = getelementptr inbounds %struct.udc, %struct.udc* %7, i32 0, i32 2, !dbg !4954
  %arrayidx18 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep17, i64 0, i64 1, !dbg !4953
  %fifo_depth = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx18, i32 0, i32 18, !dbg !4955
  %8 = bitcast i24* %fifo_depth to i32*, !dbg !4955
  %bf.load = load i32, i32* %8, align 8, !dbg !4956
  %bf.clear = and i32 %bf.load, -524257, !dbg !4956
  %bf.set = or i32 %bf.clear, 1024, !dbg !4956
  store i32 %bf.set, i32* %8, align 8, !dbg !4956
  %9 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4957
  %gadget19 = getelementptr inbounds %struct.udc, %struct.udc* %9, i32 0, i32 0, !dbg !4959
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget19, i32 0, i32 5, !dbg !4960
  %10 = load i32, i32* %speed, align 8, !dbg !4960
  %cmp = icmp eq i32 %10, 2, !dbg !4961
  br i1 %cmp, label %if.then, label %if.else, !dbg !4962

if.then:                                          ; preds = %entry
  %11 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4963
  %ep20 = getelementptr inbounds %struct.udc, %struct.udc* %11, i32 0, i32 2, !dbg !4964
  %arrayidx21 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep20, i64 0, i64 2, !dbg !4963
  %fifo_depth22 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx21, i32 0, i32 18, !dbg !4965
  %12 = bitcast i24* %fifo_depth22 to i32*, !dbg !4965
  %bf.load23 = load i32, i32* %12, align 8, !dbg !4966
  %bf.clear24 = and i32 %bf.load23, -524257, !dbg !4966
  %bf.set25 = or i32 %bf.clear24, 1024, !dbg !4966
  store i32 %bf.set25, i32* %12, align 8, !dbg !4966
  br label %if.end36, !dbg !4963

if.else:                                          ; preds = %entry
  %13 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4967
  %gadget26 = getelementptr inbounds %struct.udc, %struct.udc* %13, i32 0, i32 0, !dbg !4969
  %speed27 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget26, i32 0, i32 5, !dbg !4970
  %14 = load i32, i32* %speed27, align 8, !dbg !4970
  %cmp28 = icmp eq i32 %14, 3, !dbg !4971
  br i1 %cmp28, label %if.then29, label %if.end, !dbg !4972

if.then29:                                        ; preds = %if.else
  %15 = load i64, i64* @hs_tx_buf, align 8, !dbg !4973
  %conv = trunc i64 %15 to i32, !dbg !4973
  %16 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4974
  %ep30 = getelementptr inbounds %struct.udc, %struct.udc* %16, i32 0, i32 2, !dbg !4975
  %arrayidx31 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep30, i64 0, i64 2, !dbg !4974
  %fifo_depth32 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx31, i32 0, i32 18, !dbg !4976
  %17 = bitcast i24* %fifo_depth32 to i32*, !dbg !4976
  %bf.load33 = load i32, i32* %17, align 8, !dbg !4977
  %bf.value = and i32 %conv, 16383, !dbg !4977
  %bf.shl = shl i32 %bf.value, 5, !dbg !4977
  %bf.clear34 = and i32 %bf.load33, -524257, !dbg !4977
  %bf.set35 = or i32 %bf.clear34, %bf.shl, !dbg !4977
  store i32 %bf.set35, i32* %17, align 8, !dbg !4977
  br label %if.end, !dbg !4974

if.end:                                           ; preds = %if.then29, %if.else
  br label %if.end36

if.end36:                                         ; preds = %if.end, %if.then
  %18 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !4978
  %ep37 = getelementptr inbounds %struct.udc, %struct.udc* %18, i32 0, i32 2, !dbg !4979
  %arrayidx38 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep37, i64 0, i64 18, !dbg !4978
  %fifo_depth39 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx38, i32 0, i32 18, !dbg !4980
  %19 = bitcast i24* %fifo_depth39 to i32*, !dbg !4980
  %bf.load40 = load i32, i32* %19, align 8, !dbg !4981
  %bf.clear41 = and i32 %bf.load40, -524257, !dbg !4981
  %bf.set42 = or i32 %bf.clear41, 32768, !dbg !4981
  store i32 %bf.set42, i32* %19, align 8, !dbg !4981
  ret void, !dbg !4982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @udc_irq(i32 %irq, i8* %pdev) #0 !dbg !4983 {
entry:
  %lock.addr.i43 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i43, metadata !4768, metadata !DIExpression()), !dbg !4987
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4761, metadata !DIExpression()), !dbg !4989
  %irq.addr = alloca i32, align 4
  %pdev.addr = alloca i8*, align 8
  %dev = alloca %struct.udc*, align 8
  %reg = alloca i32, align 4
  %i = alloca i16, align 2
  %ep_irq = alloca i32, align 4
  %ret_val = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !4991, metadata !DIExpression()), !dbg !4992
  store i8* %pdev, i8** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pdev.addr, metadata !4993, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.declare(metadata %struct.udc** %dev, metadata !4995, metadata !DIExpression()), !dbg !4996
  %0 = load i8*, i8** %pdev.addr, align 8, !dbg !4997
  %1 = bitcast i8* %0 to %struct.udc*, !dbg !4997
  store %struct.udc* %1, %struct.udc** %dev, align 8, !dbg !4996
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !4998, metadata !DIExpression()), !dbg !4999
  call void @llvm.dbg.declare(metadata i16* %i, metadata !5000, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.declare(metadata i32* %ep_irq, metadata !5002, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !5004, metadata !DIExpression()), !dbg !5005
  store i32 0, i32* %ret_val, align 4, !dbg !5005
  %2 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !5006
  %lock = getelementptr inbounds %struct.udc, %struct.udc* %2, i32 0, i32 1, !dbg !5007
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !5008, !srcloc !4838
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5009
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !5009
  %rlock.i = bitcast %union.anon.4* %4 to %struct.raw_spinlock*, !dbg !5009
  %5 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !5010
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %5, i32 0, i32 9, !dbg !5011
  %6 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !5011
  %ep_irqsts = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %6, i32 0, i32 5, !dbg !5012
  %7 = bitcast i32* %ep_irqsts to i8*, !dbg !5013
  %call = call i32 @readl(i8* %7) #11, !dbg !5014
  store i32 %call, i32* %reg, align 4, !dbg !5015
  %8 = load i32, i32* %reg, align 4, !dbg !5016
  %tobool = icmp ne i32 %8, 0, !dbg !5016
  br i1 %tobool, label %if.then, label %if.end32, !dbg !5018

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %reg, align 4, !dbg !5019
  %and = and i32 %9, 65536, !dbg !5022
  %tobool1 = icmp ne i32 %and, 0, !dbg !5022
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !5023

if.then2:                                         ; preds = %if.then
  %10 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !5024
  %call3 = call i32 @udc_control_out_isr(%struct.udc* %10) #11, !dbg !5025
  %11 = load i32, i32* %ret_val, align 4, !dbg !5026
  %or = or i32 %11, %call3, !dbg !5026
  store i32 %or, i32* %ret_val, align 4, !dbg !5026
  br label %if.end, !dbg !5027

if.end:                                           ; preds = %if.then2, %if.then
  %12 = load i32, i32* %reg, align 4, !dbg !5028
  %and4 = and i32 %12, 1, !dbg !5030
  %tobool5 = icmp ne i32 %and4, 0, !dbg !5030
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !5031

if.then6:                                         ; preds = %if.end
  %13 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !5032
  %call7 = call i32 @udc_control_in_isr(%struct.udc* %13) #11, !dbg !5033
  %14 = load i32, i32* %ret_val, align 4, !dbg !5034
  %or8 = or i32 %14, %call7, !dbg !5034
  store i32 %or8, i32* %ret_val, align 4, !dbg !5034
  br label %if.end9, !dbg !5035

if.end9:                                          ; preds = %if.then6, %if.end
  store i16 1, i16* %i, align 2, !dbg !5036
  br label %for.cond, !dbg !5038

for.cond:                                         ; preds = %for.inc, %if.end9
  %15 = load i16, i16* %i, align 2, !dbg !5039
  %conv = zext i16 %15 to i32, !dbg !5039
  %cmp = icmp slt i32 %conv, 32, !dbg !5041
  br i1 %cmp, label %for.body, label %for.end, !dbg !5042

for.body:                                         ; preds = %for.cond
  %16 = load i16, i16* %i, align 2, !dbg !5043
  %conv11 = zext i16 %16 to i32, !dbg !5043
  %shl = shl i32 1, %conv11, !dbg !5045
  store i32 %shl, i32* %ep_irq, align 4, !dbg !5046
  %17 = load i32, i32* %reg, align 4, !dbg !5047
  %18 = load i32, i32* %ep_irq, align 4, !dbg !5049
  %and12 = and i32 %17, %18, !dbg !5050
  %tobool13 = icmp ne i32 %and12, 0, !dbg !5050
  br i1 %tobool13, label %lor.lhs.false, label %if.then17, !dbg !5051

lor.lhs.false:                                    ; preds = %for.body
  %19 = load i16, i16* %i, align 2, !dbg !5052
  %conv14 = zext i16 %19 to i32, !dbg !5052
  %cmp15 = icmp eq i32 %conv14, 16, !dbg !5053
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !5054

if.then17:                                        ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !5055

if.end18:                                         ; preds = %lor.lhs.false
  %20 = load i32, i32* %ep_irq, align 4, !dbg !5056
  %21 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !5057
  %regs19 = getelementptr inbounds %struct.udc, %struct.udc* %21, i32 0, i32 9, !dbg !5058
  %22 = load %struct.udc_regs*, %struct.udc_regs** %regs19, align 8, !dbg !5058
  %ep_irqsts20 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %22, i32 0, i32 5, !dbg !5059
  %23 = bitcast i32* %ep_irqsts20 to i8*, !dbg !5060
  call void @writel(i32 %20, i8* %23) #11, !dbg !5061
  %24 = load i16, i16* %i, align 2, !dbg !5062
  %conv21 = zext i16 %24 to i32, !dbg !5062
  %cmp22 = icmp sgt i32 %conv21, 16, !dbg !5064
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !5065

if.then24:                                        ; preds = %if.end18
  %25 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !5066
  %26 = load i16, i16* %i, align 2, !dbg !5067
  %conv25 = zext i16 %26 to i32, !dbg !5067
  %call26 = call i32 @udc_data_out_isr(%struct.udc* %25, i32 %conv25) #11, !dbg !5068
  %27 = load i32, i32* %ret_val, align 4, !dbg !5069
  %or27 = or i32 %27, %call26, !dbg !5069
  store i32 %or27, i32* %ret_val, align 4, !dbg !5069
  br label %if.end31, !dbg !5070

if.else:                                          ; preds = %if.end18
  %28 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !5071
  %29 = load i16, i16* %i, align 2, !dbg !5072
  %conv28 = zext i16 %29 to i32, !dbg !5072
  %call29 = call i32 @udc_data_in_isr(%struct.udc* %28, i32 %conv28) #11, !dbg !5073
  %30 = load i32, i32* %ret_val, align 4, !dbg !5074
  %or30 = or i32 %30, %call29, !dbg !5074
  store i32 %or30, i32* %ret_val, align 4, !dbg !5074
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then24
  br label %for.inc, !dbg !5075

for.inc:                                          ; preds = %if.end31, %if.then17
  %31 = load i16, i16* %i, align 2, !dbg !5076
  %inc = add i16 %31, 1, !dbg !5076
  store i16 %inc, i16* %i, align 2, !dbg !5076
  br label %for.cond, !dbg !5077, !llvm.loop !5078

for.end:                                          ; preds = %for.cond
  br label %if.end32, !dbg !5080

if.end32:                                         ; preds = %for.end, %entry
  %32 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !5081
  %regs33 = getelementptr inbounds %struct.udc, %struct.udc* %32, i32 0, i32 9, !dbg !5082
  %33 = load %struct.udc_regs*, %struct.udc_regs** %regs33, align 8, !dbg !5082
  %irqsts = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %33, i32 0, i32 3, !dbg !5083
  %34 = bitcast i32* %irqsts to i8*, !dbg !5084
  %call34 = call i32 @readl(i8* %34) #11, !dbg !5085
  store i32 %call34, i32* %reg, align 4, !dbg !5086
  %35 = load i32, i32* %reg, align 4, !dbg !5087
  %tobool35 = icmp ne i32 %35, 0, !dbg !5087
  br i1 %tobool35, label %if.then36, label %if.end41, !dbg !5089

if.then36:                                        ; preds = %if.end32
  %36 = load i32, i32* %reg, align 4, !dbg !5090
  %37 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !5092
  %regs37 = getelementptr inbounds %struct.udc, %struct.udc* %37, i32 0, i32 9, !dbg !5093
  %38 = load %struct.udc_regs*, %struct.udc_regs** %regs37, align 8, !dbg !5093
  %irqsts38 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %38, i32 0, i32 3, !dbg !5094
  %39 = bitcast i32* %irqsts38 to i8*, !dbg !5095
  call void @writel(i32 %36, i8* %39) #11, !dbg !5096
  %40 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !5097
  %41 = load i32, i32* %reg, align 4, !dbg !5098
  %call39 = call i32 @udc_dev_isr(%struct.udc* %40, i32 %41) #11, !dbg !5099
  %42 = load i32, i32* %ret_val, align 4, !dbg !5100
  %or40 = or i32 %42, %call39, !dbg !5100
  store i32 %or40, i32* %ret_val, align 4, !dbg !5100
  br label %if.end41, !dbg !5101

if.end41:                                         ; preds = %if.then36, %if.end32
  %43 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !5102
  %lock42 = getelementptr inbounds %struct.udc, %struct.udc* %43, i32 0, i32 1, !dbg !5103
  store %struct.spinlock* %lock42, %struct.spinlock** %lock.addr.i43, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !5104, !srcloc !4826
  %44 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i43, align 8, !dbg !5105
  %45 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %44, i32 0, i32 0, !dbg !5105
  %rlock.i44 = bitcast %union.anon.4* %45 to %struct.raw_spinlock*, !dbg !5105
  %46 = load i32, i32* %ret_val, align 4, !dbg !5106
  ret i32 %46, !dbg !5107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_control_out_isr(%struct.udc* %dev) #0 !dbg !5108 {
entry:
  %lock.addr.i222 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i222, metadata !4761, metadata !DIExpression()), !dbg !5111
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4768, metadata !DIExpression()), !dbg !5115
  %dev.addr = alloca %struct.udc*, align 8
  %ret_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %setup_supported = alloca i32, align 4
  %count = alloca i32, align 4
  %set = alloca i32, align 4
  %ep = alloca %struct.udc_ep*, align 8
  %ep_tmp = alloca %struct.udc_ep*, align 8
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !5117, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !5119, metadata !DIExpression()), !dbg !5120
  store i32 0, i32* %ret_val, align 4, !dbg !5120
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !5121, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.declare(metadata i32* %setup_supported, metadata !5123, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5125, metadata !DIExpression()), !dbg !5126
  call void @llvm.dbg.declare(metadata i32* %set, metadata !5127, metadata !DIExpression()), !dbg !5128
  store i32 0, i32* %set, align 4, !dbg !5128
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep, metadata !5129, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep_tmp, metadata !5131, metadata !DIExpression()), !dbg !5132
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5133
  %ep1 = getelementptr inbounds %struct.udc, %struct.udc* %0, i32 0, i32 2, !dbg !5134
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep1, i64 0, i64 16, !dbg !5133
  store %struct.udc_ep* %arrayidx, %struct.udc_ep** %ep, align 8, !dbg !5135
  %1 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5136
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %1, i32 0, i32 9, !dbg !5137
  %2 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !5137
  %ep_irqsts = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %2, i32 0, i32 5, !dbg !5138
  %3 = bitcast i32* %ep_irqsts to i8*, !dbg !5139
  call void @writel(i32 65536, i8* %3) #11, !dbg !5140
  %4 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5141
  %ep2 = getelementptr inbounds %struct.udc, %struct.udc* %4, i32 0, i32 2, !dbg !5142
  %arrayidx3 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep2, i64 0, i64 16, !dbg !5141
  %regs4 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx3, i32 0, i32 1, !dbg !5143
  %5 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs4, align 8, !dbg !5143
  %sts = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %5, i32 0, i32 1, !dbg !5144
  %6 = bitcast i32* %sts to i8*, !dbg !5145
  %call = call i32 @readl(i8* %6) #11, !dbg !5146
  store i32 %call, i32* %tmp, align 4, !dbg !5147
  %7 = load i32, i32* %tmp, align 4, !dbg !5148
  %and = and i32 %7, 128, !dbg !5150
  %tobool = icmp ne i32 %and, 0, !dbg !5150
  br i1 %tobool, label %if.then, label %if.end, !dbg !5151

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5152

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !5154

do.end:                                           ; preds = %do.body
  %8 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5156
  %ep5 = getelementptr inbounds %struct.udc, %struct.udc* %8, i32 0, i32 2, !dbg !5157
  %arrayidx6 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep5, i64 0, i64 16, !dbg !5156
  %regs7 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx6, i32 0, i32 1, !dbg !5158
  %9 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs7, align 8, !dbg !5158
  %sts8 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %9, i32 0, i32 1, !dbg !5159
  %10 = bitcast i32* %sts8 to i8*, !dbg !5160
  call void @writel(i32 128, i8* %10) #11, !dbg !5161
  %11 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5162
  %bna_occurred = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %11, i32 0, i32 12, !dbg !5163
  store i32 1, i32* %bna_occurred, align 8, !dbg !5164
  store i32 1, i32* %ret_val, align 4, !dbg !5165
  br label %finished, !dbg !5166

if.end:                                           ; preds = %entry
  %12 = load i32, i32* %tmp, align 4, !dbg !5167
  %and9 = and i32 %12, 48, !dbg !5167
  %shr = lshr i32 %and9, 4, !dbg !5167
  store i32 %shr, i32* %tmp, align 4, !dbg !5168
  br label %do.body10, !dbg !5169

do.body10:                                        ; preds = %if.end
  br label %do.end11, !dbg !5170

do.end11:                                         ; preds = %do.body10
  %13 = load i32, i32* %tmp, align 4, !dbg !5172
  %cmp = icmp eq i32 %13, 2, !dbg !5173
  br i1 %cmp, label %if.then12, label %if.else153, !dbg !5174

if.then12:                                        ; preds = %do.end11
  store i32 1, i32* %ret_val, align 4, !dbg !5175
  %14 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5176
  %dev13 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %14, i32 0, i32 14, !dbg !5177
  %15 = load %struct.udc*, %struct.udc** %dev13, align 8, !dbg !5177
  %stall_ep0in = getelementptr inbounds %struct.udc, %struct.udc* %15, i32 0, i32 4, !dbg !5178
  %bf.load = load i8, i8* %stall_ep0in, align 8, !dbg !5179
  %bf.clear = and i8 %bf.load, -2, !dbg !5179
  store i8 %bf.clear, i8* %stall_ep0in, align 8, !dbg !5179
  %16 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5180
  %waiting_zlp_ack_ep0in = getelementptr inbounds %struct.udc, %struct.udc* %16, i32 0, i32 4, !dbg !5181
  %bf.load14 = load i8, i8* %waiting_zlp_ack_ep0in, align 8, !dbg !5182
  %bf.clear15 = and i8 %bf.load14, -3, !dbg !5182
  store i8 %bf.clear15, i8* %waiting_zlp_ack_ep0in, align 8, !dbg !5182
  %17 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5183
  %ep16 = getelementptr inbounds %struct.udc, %struct.udc* %17, i32 0, i32 2, !dbg !5184
  %arrayidx17 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep16, i64 0, i64 0, !dbg !5183
  %regs18 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx17, i32 0, i32 1, !dbg !5185
  %18 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs18, align 8, !dbg !5185
  %ctl = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %18, i32 0, i32 0, !dbg !5186
  %19 = bitcast i32* %ctl to i8*, !dbg !5187
  %call19 = call i32 @readl(i8* %19) #11, !dbg !5188
  store i32 %call19, i32* %tmp, align 4, !dbg !5189
  %20 = load i32, i32* %tmp, align 4, !dbg !5190
  %or = or i32 %20, 128, !dbg !5190
  store i32 %or, i32* %tmp, align 4, !dbg !5190
  %21 = load i32, i32* %tmp, align 4, !dbg !5191
  %22 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5192
  %ep20 = getelementptr inbounds %struct.udc, %struct.udc* %22, i32 0, i32 2, !dbg !5193
  %arrayidx21 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep20, i64 0, i64 0, !dbg !5192
  %regs22 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx21, i32 0, i32 1, !dbg !5194
  %23 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs22, align 8, !dbg !5194
  %ctl23 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %23, i32 0, i32 0, !dbg !5195
  %24 = bitcast i32* %ctl23 to i8*, !dbg !5196
  call void @writel(i32 %21, i8* %24) #11, !dbg !5197
  %25 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5198
  %ep24 = getelementptr inbounds %struct.udc, %struct.udc* %25, i32 0, i32 2, !dbg !5199
  %arrayidx25 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep24, i64 0, i64 0, !dbg !5198
  %naking = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx25, i32 0, i32 13, !dbg !5200
  store i32 1, i32* %naking, align 4, !dbg !5201
  %26 = load i8, i8* @use_dma, align 1, !dbg !5202
  %tobool26 = trunc i8 %26 to i1, !dbg !5202
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !5204

if.then27:                                        ; preds = %if.then12
  %27 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5205
  %ep28 = getelementptr inbounds %struct.udc, %struct.udc* %27, i32 0, i32 2, !dbg !5207
  %arrayidx29 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep28, i64 0, i64 16, !dbg !5205
  %regs30 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx29, i32 0, i32 1, !dbg !5208
  %28 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs30, align 8, !dbg !5208
  %sts31 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %28, i32 0, i32 1, !dbg !5209
  %29 = bitcast i32* %sts31 to i8*, !dbg !5210
  call void @writel(i32 48, i8* %29) #11, !dbg !5211
  %30 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5212
  %ep32 = getelementptr inbounds %struct.udc, %struct.udc* %30, i32 0, i32 2, !dbg !5213
  %arrayidx33 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep32, i64 0, i64 16, !dbg !5212
  %td_stp = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx33, i32 0, i32 6, !dbg !5214
  %31 = load %struct.udc_stp_dma*, %struct.udc_stp_dma** %td_stp, align 8, !dbg !5214
  %data12 = getelementptr inbounds %struct.udc_stp_dma, %struct.udc_stp_dma* %31, i32 0, i32 2, !dbg !5215
  %32 = load i32, i32* %data12, align 8, !dbg !5215
  store i32 %32, i32* getelementptr inbounds (%union.udc_setup_data, %union.udc_setup_data* @setup_data, i32 0, i32 0, i64 0), align 4, !dbg !5216
  %33 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5217
  %ep34 = getelementptr inbounds %struct.udc, %struct.udc* %33, i32 0, i32 2, !dbg !5218
  %arrayidx35 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep34, i64 0, i64 16, !dbg !5217
  %td_stp36 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx35, i32 0, i32 6, !dbg !5219
  %34 = load %struct.udc_stp_dma*, %struct.udc_stp_dma** %td_stp36, align 8, !dbg !5219
  %data34 = getelementptr inbounds %struct.udc_stp_dma, %struct.udc_stp_dma* %34, i32 0, i32 3, !dbg !5220
  %35 = load i32, i32* %data34, align 4, !dbg !5220
  store i32 %35, i32* getelementptr inbounds (%union.udc_setup_data, %union.udc_setup_data* @setup_data, i32 0, i32 0, i64 1), align 4, !dbg !5221
  %36 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5222
  %ep37 = getelementptr inbounds %struct.udc, %struct.udc* %36, i32 0, i32 2, !dbg !5223
  %arrayidx38 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep37, i64 0, i64 16, !dbg !5222
  %td_stp39 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx38, i32 0, i32 6, !dbg !5224
  %37 = load %struct.udc_stp_dma*, %struct.udc_stp_dma** %td_stp39, align 8, !dbg !5224
  %status = getelementptr inbounds %struct.udc_stp_dma, %struct.udc_stp_dma* %37, i32 0, i32 0, !dbg !5225
  store i32 0, i32* %status, align 16, !dbg !5226
  br label %if.end41, !dbg !5227

if.else:                                          ; preds = %if.then12
  %38 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5228
  %call40 = call i32 @udc_rxfifo_read_dwords(%struct.udc* %38, i32* getelementptr inbounds (%union.udc_setup_data, %union.udc_setup_data* @setup_data, i32 0, i32 0, i64 0), i32 2) #11, !dbg !5230
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.then27
  %39 = load i8, i8* getelementptr inbounds (%struct.usb_ctrlrequest, %struct.usb_ctrlrequest* bitcast (%union.udc_setup_data* @setup_data to %struct.usb_ctrlrequest*), i32 0, i32 0), align 4, !dbg !5231
  %conv = zext i8 %39 to i32, !dbg !5233
  %and42 = and i32 %conv, 128, !dbg !5234
  %cmp43 = icmp ne i32 %and42, 0, !dbg !5235
  br i1 %cmp43, label %if.then45, label %if.else49, !dbg !5236

if.then45:                                        ; preds = %if.end41
  %40 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5237
  %ep46 = getelementptr inbounds %struct.udc, %struct.udc* %40, i32 0, i32 2, !dbg !5239
  %arrayidx47 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep46, i64 0, i64 0, !dbg !5237
  %ep48 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx47, i32 0, i32 0, !dbg !5240
  %41 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5241
  %gadget = getelementptr inbounds %struct.udc, %struct.udc* %41, i32 0, i32 0, !dbg !5242
  %ep0 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 3, !dbg !5243
  store %struct.usb_ep* %ep48, %struct.usb_ep** %ep0, align 8, !dbg !5244
  %42 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5245
  call void @udc_ep0_set_rde(%struct.udc* %42) #11, !dbg !5246
  store i32 0, i32* %set, align 4, !dbg !5247
  br label %if.end74, !dbg !5248

if.else49:                                        ; preds = %if.end41
  %43 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5249
  %ep50 = getelementptr inbounds %struct.udc, %struct.udc* %43, i32 0, i32 2, !dbg !5251
  %arrayidx51 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep50, i64 0, i64 16, !dbg !5249
  %ep52 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx51, i32 0, i32 0, !dbg !5252
  %44 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5253
  %gadget53 = getelementptr inbounds %struct.udc, %struct.udc* %44, i32 0, i32 0, !dbg !5254
  %ep054 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget53, i32 0, i32 3, !dbg !5255
  store %struct.usb_ep* %ep52, %struct.usb_ep** %ep054, align 8, !dbg !5256
  %45 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5257
  %bna_dummy_req = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %45, i32 0, i32 11, !dbg !5259
  %46 = load %struct.udc_request*, %struct.udc_request** %bna_dummy_req, align 8, !dbg !5259
  %tobool55 = icmp ne %struct.udc_request* %46, null, !dbg !5257
  br i1 %tobool55, label %if.then56, label %if.end63, !dbg !5260

if.then56:                                        ; preds = %if.else49
  %47 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5261
  %bna_dummy_req57 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %47, i32 0, i32 11, !dbg !5263
  %48 = load %struct.udc_request*, %struct.udc_request** %bna_dummy_req57, align 8, !dbg !5263
  %td_phys = getelementptr inbounds %struct.udc_request, %struct.udc_request* %48, i32 0, i32 2, !dbg !5264
  %49 = load i64, i64* %td_phys, align 8, !dbg !5264
  %conv58 = trunc i64 %49 to i32, !dbg !5261
  %50 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5265
  %ep59 = getelementptr inbounds %struct.udc, %struct.udc* %50, i32 0, i32 2, !dbg !5266
  %arrayidx60 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep59, i64 0, i64 16, !dbg !5265
  %regs61 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx60, i32 0, i32 1, !dbg !5267
  %51 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs61, align 8, !dbg !5267
  %desptr = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %51, i32 0, i32 5, !dbg !5268
  %52 = bitcast i32* %desptr to i8*, !dbg !5269
  call void @writel(i32 %conv58, i8* %52) #11, !dbg !5270
  %53 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5271
  %bna_occurred62 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %53, i32 0, i32 12, !dbg !5272
  store i32 0, i32* %bna_occurred62, align 8, !dbg !5273
  br label %if.end63, !dbg !5274

if.end63:                                         ; preds = %if.then56, %if.else49
  store i32 1, i32* %set, align 4, !dbg !5275
  %54 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5276
  %ep64 = getelementptr inbounds %struct.udc, %struct.udc* %54, i32 0, i32 2, !dbg !5277
  %arrayidx65 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep64, i64 0, i64 16, !dbg !5276
  %naking66 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx65, i32 0, i32 13, !dbg !5278
  store i32 1, i32* %naking66, align 4, !dbg !5279
  store i32 1, i32* @set_rde, align 4, !dbg !5280
  %call67 = call i32 @timer_pending(%struct.timer_list* @udc_timer) #11, !dbg !5281
  %tobool68 = icmp ne i32 %call67, 0, !dbg !5281
  br i1 %tobool68, label %if.end73, label %if.then69, !dbg !5283

if.then69:                                        ; preds = %if.end63
  %55 = load volatile i64, i64* @jiffies, align 8, !dbg !5284
  %add = add i64 %55, 25, !dbg !5286
  store i64 %add, i64* getelementptr inbounds (%struct.timer_list, %struct.timer_list* @udc_timer, i32 0, i32 1), align 8, !dbg !5287
  %56 = load i32, i32* @stop_timer, align 4, !dbg !5288
  %tobool70 = icmp ne i32 %56, 0, !dbg !5288
  br i1 %tobool70, label %if.end72, label %if.then71, !dbg !5290

if.then71:                                        ; preds = %if.then69
  call void @add_timer(%struct.timer_list* @udc_timer) #11, !dbg !5291
  br label %if.end72, !dbg !5291

if.end72:                                         ; preds = %if.then71, %if.then69
  br label %if.end73, !dbg !5292

if.end73:                                         ; preds = %if.end72, %if.end63
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then45
  %57 = load i32, i32* getelementptr inbounds (%union.udc_setup_data, %union.udc_setup_data* @setup_data, i32 0, i32 0, i64 0), align 4, !dbg !5293
  %cmp75 = icmp eq i32 %57, 65313, !dbg !5295
  br i1 %cmp75, label %land.lhs.true, label %if.end88, !dbg !5296

land.lhs.true:                                    ; preds = %if.end74
  %58 = load i32, i32* getelementptr inbounds (%union.udc_setup_data, %union.udc_setup_data* @setup_data, i32 0, i32 0, i64 1), align 4, !dbg !5297
  %cmp77 = icmp eq i32 %58, 0, !dbg !5298
  br i1 %cmp77, label %if.then79, label %if.end88, !dbg !5299

if.then79:                                        ; preds = %land.lhs.true
  %59 = load %struct.udc*, %struct.udc** @udc, align 8, !dbg !5300
  %ep80 = getelementptr inbounds %struct.udc, %struct.udc* %59, i32 0, i32 2, !dbg !5302
  %arrayidx81 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep80, i64 0, i64 2, !dbg !5300
  store %struct.udc_ep* %arrayidx81, %struct.udc_ep** %ep_tmp, align 8, !dbg !5303
  %60 = load %struct.udc_ep*, %struct.udc_ep** %ep_tmp, align 8, !dbg !5304
  %ep82 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %60, i32 0, i32 0, !dbg !5305
  %call83 = call i32 @udc_set_halt(%struct.usb_ep* %ep82, i32 0) #11, !dbg !5306
  %61 = load %struct.udc*, %struct.udc** @udc, align 8, !dbg !5307
  %ep84 = getelementptr inbounds %struct.udc, %struct.udc* %61, i32 0, i32 2, !dbg !5308
  %arrayidx85 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep84, i64 0, i64 18, !dbg !5307
  store %struct.udc_ep* %arrayidx85, %struct.udc_ep** %ep_tmp, align 8, !dbg !5309
  %62 = load %struct.udc_ep*, %struct.udc_ep** %ep_tmp, align 8, !dbg !5310
  %ep86 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %62, i32 0, i32 0, !dbg !5311
  %call87 = call i32 @udc_set_halt(%struct.usb_ep* %ep86, i32 0) #11, !dbg !5312
  br label %if.end88, !dbg !5313

if.end88:                                         ; preds = %if.then79, %land.lhs.true, %if.end74
  %63 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5314
  %lock = getelementptr inbounds %struct.udc, %struct.udc* %63, i32 0, i32 1, !dbg !5315
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !5316, !srcloc !4826
  %64 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5317
  %65 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %64, i32 0, i32 0, !dbg !5317
  %rlock.i = bitcast %union.anon.4* %65 to %struct.raw_spinlock*, !dbg !5317
  %66 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5318
  %driver = getelementptr inbounds %struct.udc, %struct.udc* %66, i32 0, i32 3, !dbg !5319
  %67 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver, align 8, !dbg !5319
  %setup = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %67, i32 0, i32 4, !dbg !5320
  %68 = load i32 (%struct.usb_gadget*, %struct.usb_ctrlrequest*)*, i32 (%struct.usb_gadget*, %struct.usb_ctrlrequest*)** %setup, align 8, !dbg !5320
  %69 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5321
  %gadget89 = getelementptr inbounds %struct.udc, %struct.udc* %69, i32 0, i32 0, !dbg !5322
  %call90 = call i32 %68(%struct.usb_gadget* %gadget89, %struct.usb_ctrlrequest* bitcast (%union.udc_setup_data* @setup_data to %struct.usb_ctrlrequest*)) #11, !dbg !5318
  store i32 %call90, i32* %setup_supported, align 4, !dbg !5323
  %70 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5324
  %lock91 = getelementptr inbounds %struct.udc, %struct.udc* %70, i32 0, i32 1, !dbg !5325
  store %struct.spinlock* %lock91, %struct.spinlock** %lock.addr.i222, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !5326, !srcloc !4838
  %71 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i222, align 8, !dbg !5327
  %72 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %71, i32 0, i32 0, !dbg !5327
  %rlock.i223 = bitcast %union.anon.4* %72 to %struct.raw_spinlock*, !dbg !5327
  %73 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5328
  %ep92 = getelementptr inbounds %struct.udc, %struct.udc* %73, i32 0, i32 2, !dbg !5329
  %arrayidx93 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep92, i64 0, i64 0, !dbg !5328
  %regs94 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx93, i32 0, i32 1, !dbg !5330
  %74 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs94, align 8, !dbg !5330
  %ctl95 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %74, i32 0, i32 0, !dbg !5331
  %75 = bitcast i32* %ctl95 to i8*, !dbg !5332
  %call96 = call i32 @readl(i8* %75) #11, !dbg !5333
  store i32 %call96, i32* %tmp, align 4, !dbg !5334
  %76 = load i32, i32* %setup_supported, align 4, !dbg !5335
  %cmp97 = icmp sge i32 %76, 0, !dbg !5337
  br i1 %cmp97, label %land.lhs.true99, label %if.else113, !dbg !5338

land.lhs.true99:                                  ; preds = %if.end88
  %77 = load i32, i32* %setup_supported, align 4, !dbg !5339
  %cmp100 = icmp slt i32 %77, 1000, !dbg !5340
  br i1 %cmp100, label %if.then102, label %if.else113, !dbg !5341

if.then102:                                       ; preds = %land.lhs.true99
  %78 = load i32, i32* %tmp, align 4, !dbg !5342
  %or103 = or i32 %78, 256, !dbg !5342
  store i32 %or103, i32* %tmp, align 4, !dbg !5342
  %79 = load i32, i32* %tmp, align 4, !dbg !5344
  %80 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5345
  %ep104 = getelementptr inbounds %struct.udc, %struct.udc* %80, i32 0, i32 2, !dbg !5346
  %arrayidx105 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep104, i64 0, i64 0, !dbg !5345
  %regs106 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx105, i32 0, i32 1, !dbg !5347
  %81 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs106, align 8, !dbg !5347
  %ctl107 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %81, i32 0, i32 0, !dbg !5348
  %82 = bitcast i32* %ctl107 to i8*, !dbg !5349
  call void @writel(i32 %79, i8* %82) #11, !dbg !5350
  %83 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5351
  %ep108 = getelementptr inbounds %struct.udc, %struct.udc* %83, i32 0, i32 2, !dbg !5352
  %arrayidx109 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep108, i64 0, i64 0, !dbg !5351
  %naking110 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx109, i32 0, i32 13, !dbg !5353
  store i32 0, i32* %naking110, align 4, !dbg !5354
  %84 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5355
  %ep111 = getelementptr inbounds %struct.udc, %struct.udc* %84, i32 0, i32 2, !dbg !5356
  %arrayidx112 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep111, i64 0, i64 0, !dbg !5355
  call void @UDC_QUEUE_CNAK(%struct.udc_ep* %arrayidx112, i32 0) #11, !dbg !5357
  br label %if.end127, !dbg !5358

if.else113:                                       ; preds = %land.lhs.true99, %if.end88
  %85 = load i32, i32* %setup_supported, align 4, !dbg !5359
  %cmp114 = icmp slt i32 %85, 0, !dbg !5361
  br i1 %cmp114, label %if.then116, label %if.else122, !dbg !5362

if.then116:                                       ; preds = %if.else113
  %86 = load i32, i32* %tmp, align 4, !dbg !5363
  %or117 = or i32 %86, 1, !dbg !5363
  store i32 %or117, i32* %tmp, align 4, !dbg !5363
  %87 = load i32, i32* %tmp, align 4, !dbg !5365
  %88 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5366
  %ep118 = getelementptr inbounds %struct.udc, %struct.udc* %88, i32 0, i32 2, !dbg !5367
  %arrayidx119 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep118, i64 0, i64 0, !dbg !5366
  %regs120 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx119, i32 0, i32 1, !dbg !5368
  %89 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs120, align 8, !dbg !5368
  %ctl121 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %89, i32 0, i32 0, !dbg !5369
  %90 = bitcast i32* %ctl121 to i8*, !dbg !5370
  call void @writel(i32 %87, i8* %90) #11, !dbg !5371
  br label %if.end126, !dbg !5372

if.else122:                                       ; preds = %if.else113
  %91 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5373
  %waiting_zlp_ack_ep0in123 = getelementptr inbounds %struct.udc, %struct.udc* %91, i32 0, i32 4, !dbg !5374
  %bf.load124 = load i8, i8* %waiting_zlp_ack_ep0in123, align 8, !dbg !5375
  %bf.clear125 = and i8 %bf.load124, -3, !dbg !5375
  %bf.set = or i8 %bf.clear125, 2, !dbg !5375
  store i8 %bf.set, i8* %waiting_zlp_ack_ep0in123, align 8, !dbg !5375
  br label %if.end126

if.end126:                                        ; preds = %if.else122, %if.then116
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then102
  %92 = load i32, i32* %set, align 4, !dbg !5376
  %tobool128 = icmp ne i32 %92, 0, !dbg !5376
  br i1 %tobool128, label %if.end145, label %if.then129, !dbg !5378

if.then129:                                       ; preds = %if.end127
  %93 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5379
  %ep130 = getelementptr inbounds %struct.udc, %struct.udc* %93, i32 0, i32 2, !dbg !5381
  %arrayidx131 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep130, i64 0, i64 16, !dbg !5379
  %regs132 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx131, i32 0, i32 1, !dbg !5382
  %94 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs132, align 8, !dbg !5382
  %ctl133 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %94, i32 0, i32 0, !dbg !5383
  %95 = bitcast i32* %ctl133 to i8*, !dbg !5384
  %call134 = call i32 @readl(i8* %95) #11, !dbg !5385
  store i32 %call134, i32* %tmp, align 4, !dbg !5386
  %96 = load i32, i32* %tmp, align 4, !dbg !5387
  %or135 = or i32 %96, 256, !dbg !5387
  store i32 %or135, i32* %tmp, align 4, !dbg !5387
  %97 = load i32, i32* %tmp, align 4, !dbg !5388
  %98 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5389
  %ep136 = getelementptr inbounds %struct.udc, %struct.udc* %98, i32 0, i32 2, !dbg !5390
  %arrayidx137 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep136, i64 0, i64 16, !dbg !5389
  %regs138 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx137, i32 0, i32 1, !dbg !5391
  %99 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs138, align 8, !dbg !5391
  %ctl139 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %99, i32 0, i32 0, !dbg !5392
  %100 = bitcast i32* %ctl139 to i8*, !dbg !5393
  call void @writel(i32 %97, i8* %100) #11, !dbg !5394
  %101 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5395
  %ep140 = getelementptr inbounds %struct.udc, %struct.udc* %101, i32 0, i32 2, !dbg !5396
  %arrayidx141 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep140, i64 0, i64 16, !dbg !5395
  %naking142 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx141, i32 0, i32 13, !dbg !5397
  store i32 0, i32* %naking142, align 4, !dbg !5398
  %102 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5399
  %ep143 = getelementptr inbounds %struct.udc, %struct.udc* %102, i32 0, i32 2, !dbg !5400
  %arrayidx144 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep143, i64 0, i64 16, !dbg !5399
  call void @UDC_QUEUE_CNAK(%struct.udc_ep* %arrayidx144, i32 16) #11, !dbg !5401
  br label %if.end145, !dbg !5402

if.end145:                                        ; preds = %if.then129, %if.end127
  %103 = load i8, i8* @use_dma, align 1, !dbg !5403
  %tobool146 = trunc i8 %103 to i1, !dbg !5403
  br i1 %tobool146, label %if.end152, label %if.then147, !dbg !5405

if.then147:                                       ; preds = %if.end145
  %104 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5406
  %ep148 = getelementptr inbounds %struct.udc, %struct.udc* %104, i32 0, i32 2, !dbg !5408
  %arrayidx149 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep148, i64 0, i64 16, !dbg !5406
  %regs150 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx149, i32 0, i32 1, !dbg !5409
  %105 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs150, align 8, !dbg !5409
  %sts151 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %105, i32 0, i32 1, !dbg !5410
  %106 = bitcast i32* %sts151 to i8*, !dbg !5411
  call void @writel(i32 48, i8* %106) #11, !dbg !5412
  br label %if.end152, !dbg !5413

if.end152:                                        ; preds = %if.then147, %if.end145
  br label %if.end211, !dbg !5414

if.else153:                                       ; preds = %do.end11
  %107 = load i32, i32* %tmp, align 4, !dbg !5415
  %cmp154 = icmp eq i32 %107, 1, !dbg !5417
  br i1 %cmp154, label %if.then156, label %if.end210, !dbg !5418

if.then156:                                       ; preds = %if.else153
  %108 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5419
  %ep157 = getelementptr inbounds %struct.udc, %struct.udc* %108, i32 0, i32 2, !dbg !5421
  %arrayidx158 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep157, i64 0, i64 16, !dbg !5419
  %regs159 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx158, i32 0, i32 1, !dbg !5422
  %109 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs159, align 8, !dbg !5422
  %sts160 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %109, i32 0, i32 1, !dbg !5423
  %110 = bitcast i32* %sts160 to i8*, !dbg !5424
  call void @writel(i32 48, i8* %110) #11, !dbg !5425
  %111 = load i8, i8* @use_dma, align 1, !dbg !5426
  %tobool161 = trunc i8 %111 to i1, !dbg !5426
  br i1 %tobool161, label %if.then162, label %if.else190, !dbg !5428

if.then162:                                       ; preds = %if.then156
  %112 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5429
  %ep163 = getelementptr inbounds %struct.udc, %struct.udc* %112, i32 0, i32 2, !dbg !5432
  %arrayidx164 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep163, i64 0, i64 16, !dbg !5429
  %queue = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx164, i32 0, i32 15, !dbg !5433
  %call165 = call i32 @list_empty(%struct.list_head* %queue) #11, !dbg !5434
  %tobool166 = icmp ne i32 %call165, 0, !dbg !5434
  br i1 %tobool166, label %if.then167, label %if.else178, !dbg !5435

if.then167:                                       ; preds = %if.then162
  br label %do.body168, !dbg !5436

do.body168:                                       ; preds = %if.then167
  br label %do.end169, !dbg !5438

do.end169:                                        ; preds = %do.body168
  %113 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5440
  %ep170 = getelementptr inbounds %struct.udc, %struct.udc* %113, i32 0, i32 2, !dbg !5440
  %arrayidx171 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep170, i64 0, i64 16, !dbg !5440
  %td = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx171, i32 0, i32 7, !dbg !5440
  %114 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !5440
  %status172 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %114, i32 0, i32 0, !dbg !5440
  %115 = load i32, i32* %status172, align 16, !dbg !5440
  %and173 = and i32 %115, 1073741823, !dbg !5440
  %116 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5441
  %ep174 = getelementptr inbounds %struct.udc, %struct.udc* %116, i32 0, i32 2, !dbg !5442
  %arrayidx175 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep174, i64 0, i64 16, !dbg !5441
  %td176 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx175, i32 0, i32 7, !dbg !5443
  %117 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td176, align 8, !dbg !5443
  %status177 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %117, i32 0, i32 0, !dbg !5444
  store i32 %and173, i32* %status177, align 16, !dbg !5445
  %118 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5446
  call void @udc_ep0_set_rde(%struct.udc* %118) #11, !dbg !5447
  store i32 1, i32* %ret_val, align 4, !dbg !5448
  br label %if.end189, !dbg !5449

if.else178:                                       ; preds = %if.then162
  %119 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5450
  %call179 = call i32 @udc_data_out_isr(%struct.udc* %119, i32 16) #11, !dbg !5452
  %120 = load i32, i32* %ret_val, align 4, !dbg !5453
  %or180 = or i32 %120, %call179, !dbg !5453
  store i32 %or180, i32* %ret_val, align 4, !dbg !5453
  %121 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5454
  %ep181 = getelementptr inbounds %struct.udc, %struct.udc* %121, i32 0, i32 2, !dbg !5455
  %arrayidx182 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep181, i64 0, i64 16, !dbg !5454
  %td_phys183 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx182, i32 0, i32 4, !dbg !5456
  %122 = load i64, i64* %td_phys183, align 8, !dbg !5456
  %conv184 = trunc i64 %122 to i32, !dbg !5454
  %123 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5457
  %ep185 = getelementptr inbounds %struct.udc, %struct.udc* %123, i32 0, i32 2, !dbg !5458
  %arrayidx186 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep185, i64 0, i64 16, !dbg !5457
  %regs187 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx186, i32 0, i32 1, !dbg !5459
  %124 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs187, align 8, !dbg !5459
  %desptr188 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %124, i32 0, i32 5, !dbg !5460
  %125 = bitcast i32* %desptr188 to i8*, !dbg !5461
  call void @writel(i32 %conv184, i8* %125) #11, !dbg !5462
  %126 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5463
  call void @udc_ep0_set_rde(%struct.udc* %126) #11, !dbg !5464
  br label %if.end189

if.end189:                                        ; preds = %if.else178, %do.end169
  br label %if.end209, !dbg !5465

if.else190:                                       ; preds = %if.then156
  %127 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5466
  %ep191 = getelementptr inbounds %struct.udc, %struct.udc* %127, i32 0, i32 2, !dbg !5468
  %arrayidx192 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep191, i64 0, i64 16, !dbg !5466
  %regs193 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx192, i32 0, i32 1, !dbg !5469
  %128 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs193, align 8, !dbg !5469
  %sts194 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %128, i32 0, i32 1, !dbg !5470
  %129 = bitcast i32* %sts194 to i8*, !dbg !5471
  %call195 = call i32 @readl(i8* %129) #11, !dbg !5472
  store i32 %call195, i32* %count, align 4, !dbg !5473
  %130 = load i32, i32* %count, align 4, !dbg !5474
  %and196 = and i32 %130, 8386560, !dbg !5474
  %shr197 = lshr i32 %and196, 11, !dbg !5474
  store i32 %shr197, i32* %count, align 4, !dbg !5475
  store i32 0, i32* %count, align 4, !dbg !5476
  %131 = load i32, i32* %count, align 4, !dbg !5477
  %cmp198 = icmp ne i32 %131, 0, !dbg !5479
  br i1 %cmp198, label %if.then200, label %if.else203, !dbg !5480

if.then200:                                       ; preds = %if.else190
  %132 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5481
  %call201 = call i32 @udc_data_out_isr(%struct.udc* %132, i32 16) #11, !dbg !5483
  %133 = load i32, i32* %ret_val, align 4, !dbg !5484
  %or202 = or i32 %133, %call201, !dbg !5484
  store i32 %or202, i32* %ret_val, align 4, !dbg !5484
  br label %if.end208, !dbg !5485

if.else203:                                       ; preds = %if.else190
  %134 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5486
  %ep204 = getelementptr inbounds %struct.udc, %struct.udc* %134, i32 0, i32 2, !dbg !5488
  %arrayidx205 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep204, i64 0, i64 16, !dbg !5486
  %regs206 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx205, i32 0, i32 1, !dbg !5489
  %135 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs206, align 8, !dbg !5489
  %confirm = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %135, i32 0, i32 7, !dbg !5490
  %136 = bitcast i32* %confirm to i8*, !dbg !5491
  %call207 = call i32 @readl(i8* %136) #11, !dbg !5492
  store i32 1, i32* %ret_val, align 4, !dbg !5493
  br label %if.end208

if.end208:                                        ; preds = %if.else203, %if.then200
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.end189
  br label %if.end210, !dbg !5494

if.end210:                                        ; preds = %if.end209, %if.else153
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.end152
  %137 = load i32, i32* @cnak_pending, align 4, !dbg !5495
  %tobool212 = icmp ne i32 %137, 0, !dbg !5495
  br i1 %tobool212, label %if.then213, label %if.end221, !dbg !5497

if.then213:                                       ; preds = %if.end211
  %138 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5498
  %regs214 = getelementptr inbounds %struct.udc, %struct.udc* %138, i32 0, i32 9, !dbg !5501
  %139 = load %struct.udc_regs*, %struct.udc_regs** %regs214, align 8, !dbg !5501
  %sts215 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %139, i32 0, i32 2, !dbg !5502
  %140 = bitcast i32* %sts215 to i8*, !dbg !5503
  %call216 = call i32 @readl(i8* %140) #11, !dbg !5504
  %and217 = and i32 %call216, 32768, !dbg !5505
  %tobool218 = icmp ne i32 %and217, 0, !dbg !5505
  br i1 %tobool218, label %if.then219, label %if.end220, !dbg !5506

if.then219:                                       ; preds = %if.then213
  %141 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5507
  call void @udc_process_cnak_queue(%struct.udc* %141) #11, !dbg !5508
  br label %if.end220, !dbg !5508

if.end220:                                        ; preds = %if.then219, %if.then213
  br label %if.end221, !dbg !5509

if.end221:                                        ; preds = %if.end220, %if.end211
  br label %finished, !dbg !5495

finished:                                         ; preds = %if.end221, %do.end
  call void @llvm.dbg.label(metadata !5510), !dbg !5511
  %142 = load i32, i32* %ret_val, align 4, !dbg !5512
  ret i32 %142, !dbg !5513
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_control_in_isr(%struct.udc* %dev) #0 !dbg !5514 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %ret_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %ep = alloca %struct.udc_ep*, align 8
  %req = alloca %struct.udc_request*, align 8
  %len = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp31 = alloca %struct.udc_request*, align 8
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !5515, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !5517, metadata !DIExpression()), !dbg !5518
  store i32 0, i32* %ret_val, align 4, !dbg !5518
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !5519, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep, metadata !5521, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req, metadata !5523, metadata !DIExpression()), !dbg !5524
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5525, metadata !DIExpression()), !dbg !5526
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5527
  %ep1 = getelementptr inbounds %struct.udc, %struct.udc* %0, i32 0, i32 2, !dbg !5528
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep1, i64 0, i64 0, !dbg !5527
  store %struct.udc_ep* %arrayidx, %struct.udc_ep** %ep, align 8, !dbg !5529
  %1 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5530
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %1, i32 0, i32 9, !dbg !5531
  %2 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !5531
  %ep_irqsts = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %2, i32 0, i32 5, !dbg !5532
  %3 = bitcast i32* %ep_irqsts to i8*, !dbg !5533
  call void @writel(i32 1, i8* %3) #11, !dbg !5534
  %4 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5535
  %ep2 = getelementptr inbounds %struct.udc, %struct.udc* %4, i32 0, i32 2, !dbg !5536
  %arrayidx3 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep2, i64 0, i64 0, !dbg !5535
  %regs4 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx3, i32 0, i32 1, !dbg !5537
  %5 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs4, align 8, !dbg !5537
  %sts = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %5, i32 0, i32 1, !dbg !5538
  %6 = bitcast i32* %sts to i8*, !dbg !5539
  %call = call i32 @readl(i8* %6) #11, !dbg !5540
  store i32 %call, i32* %tmp, align 4, !dbg !5541
  %7 = load i32, i32* %tmp, align 4, !dbg !5542
  %and = and i32 %7, 1024, !dbg !5544
  %tobool = icmp ne i32 %and, 0, !dbg !5544
  br i1 %tobool, label %if.then, label %if.else, !dbg !5545

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5546

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !5548

do.end:                                           ; preds = %do.body
  store i32 1, i32* %ret_val, align 4, !dbg !5550
  %8 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5551
  %ep5 = getelementptr inbounds %struct.udc, %struct.udc* %8, i32 0, i32 2, !dbg !5552
  %arrayidx6 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep5, i64 0, i64 0, !dbg !5551
  %regs7 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx6, i32 0, i32 1, !dbg !5553
  %9 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs7, align 8, !dbg !5553
  %sts8 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %9, i32 0, i32 1, !dbg !5554
  %10 = bitcast i32* %sts8 to i8*, !dbg !5555
  call void @writel(i32 1024, i8* %10) #11, !dbg !5556
  br label %if.end101, !dbg !5557

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %tmp, align 4, !dbg !5558
  %and9 = and i32 %11, 64, !dbg !5560
  %tobool10 = icmp ne i32 %and9, 0, !dbg !5560
  br i1 %tobool10, label %if.then11, label %if.end100, !dbg !5561

if.then11:                                        ; preds = %if.else
  store i32 1, i32* %ret_val, align 4, !dbg !5562
  %12 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5564
  %dma = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %12, i32 0, i32 3, !dbg !5566
  %13 = load i32*, i32** %dma, align 8, !dbg !5566
  %tobool12 = icmp ne i32* %13, null, !dbg !5564
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !5567

if.then13:                                        ; preds = %if.then11
  %14 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5568
  %ep14 = getelementptr inbounds %struct.udc, %struct.udc* %14, i32 0, i32 2, !dbg !5570
  %arrayidx15 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep14, i64 0, i64 0, !dbg !5568
  %regs16 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx15, i32 0, i32 1, !dbg !5571
  %15 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs16, align 8, !dbg !5571
  %sts17 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %15, i32 0, i32 1, !dbg !5572
  %16 = bitcast i32* %sts17 to i8*, !dbg !5573
  call void @writel(i32 64, i8* %16) #11, !dbg !5574
  br label %if.end, !dbg !5575

if.end:                                           ; preds = %if.then13, %if.then11
  %17 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5576
  %stall_ep0in = getelementptr inbounds %struct.udc, %struct.udc* %17, i32 0, i32 4, !dbg !5578
  %bf.load = load i8, i8* %stall_ep0in, align 8, !dbg !5578
  %bf.clear = and i8 %bf.load, 1, !dbg !5578
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5578
  %tobool18 = icmp ne i32 %bf.cast, 0, !dbg !5576
  br i1 %tobool18, label %if.then19, label %if.else24, !dbg !5579

if.then19:                                        ; preds = %if.end
  %18 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5580
  %regs20 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %18, i32 0, i32 1, !dbg !5582
  %19 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs20, align 8, !dbg !5582
  %ctl = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %19, i32 0, i32 0, !dbg !5583
  %20 = bitcast i32* %ctl to i8*, !dbg !5584
  %call21 = call i32 @readl(i8* %20) #11, !dbg !5585
  store i32 %call21, i32* %tmp, align 4, !dbg !5586
  %21 = load i32, i32* %tmp, align 4, !dbg !5587
  %or = or i32 %21, 1, !dbg !5587
  store i32 %or, i32* %tmp, align 4, !dbg !5587
  %22 = load i32, i32* %tmp, align 4, !dbg !5588
  %23 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5589
  %regs22 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %23, i32 0, i32 1, !dbg !5590
  %24 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs22, align 8, !dbg !5590
  %ctl23 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %24, i32 0, i32 0, !dbg !5591
  %25 = bitcast i32* %ctl23 to i8*, !dbg !5592
  call void @writel(i32 %22, i8* %25) #11, !dbg !5593
  br label %if.end88, !dbg !5594

if.else24:                                        ; preds = %if.end
  %26 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5595
  %queue = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %26, i32 0, i32 15, !dbg !5598
  %call25 = call i32 @list_empty(%struct.list_head* %queue) #11, !dbg !5599
  %tobool26 = icmp ne i32 %call25, 0, !dbg !5599
  br i1 %tobool26, label %if.end87, label %if.then27, !dbg !5600

if.then27:                                        ; preds = %if.else24
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5601, metadata !DIExpression()), !dbg !5604
  %27 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5604
  %queue28 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %27, i32 0, i32 15, !dbg !5604
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queue28, i32 0, i32 0, !dbg !5604
  %28 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5604
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !5604
  store i8* %29, i8** %__mptr, align 8, !dbg !5604
  br label %do.body29, !dbg !5604

do.body29:                                        ; preds = %if.then27
  br label %do.end30, !dbg !5605

do.end30:                                         ; preds = %do.body29
  %30 = load i8*, i8** %__mptr, align 8, !dbg !5604
  %add.ptr = getelementptr i8, i8* %30, i64 -128, !dbg !5604
  %31 = bitcast i8* %add.ptr to %struct.udc_request*, !dbg !5604
  store %struct.udc_request* %31, %struct.udc_request** %tmp31, align 8, !dbg !5605
  %32 = load %struct.udc_request*, %struct.udc_request** %tmp31, align 8, !dbg !5604
  store %struct.udc_request* %32, %struct.udc_request** %req, align 8, !dbg !5607
  %33 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5608
  %dma32 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %33, i32 0, i32 3, !dbg !5610
  %34 = load i32*, i32** %dma32, align 8, !dbg !5610
  %tobool33 = icmp ne i32* %34, null, !dbg !5608
  br i1 %tobool33, label %if.then34, label %if.else51, !dbg !5611

if.then34:                                        ; preds = %do.end30
  %35 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5612
  %td_phys = getelementptr inbounds %struct.udc_request, %struct.udc_request* %35, i32 0, i32 2, !dbg !5614
  %36 = load i64, i64* %td_phys, align 8, !dbg !5614
  %conv = trunc i64 %36 to i32, !dbg !5612
  %37 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5615
  %regs35 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %37, i32 0, i32 1, !dbg !5616
  %38 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs35, align 8, !dbg !5616
  %desptr = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %38, i32 0, i32 5, !dbg !5617
  %39 = bitcast i32* %desptr to i8*, !dbg !5618
  call void @writel(i32 %conv, i8* %39) #11, !dbg !5619
  %40 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5620
  %td_data = getelementptr inbounds %struct.udc_request, %struct.udc_request* %40, i32 0, i32 3, !dbg !5620
  %41 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data, align 8, !dbg !5620
  %status = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %41, i32 0, i32 0, !dbg !5620
  %42 = load i32, i32* %status, align 16, !dbg !5620
  %and36 = and i32 %42, 1073741823, !dbg !5620
  %43 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5621
  %td_data37 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %43, i32 0, i32 3, !dbg !5622
  %44 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data37, align 8, !dbg !5622
  %status38 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %44, i32 0, i32 0, !dbg !5623
  store i32 %and36, i32* %status38, align 16, !dbg !5624
  %45 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5625
  %ep39 = getelementptr inbounds %struct.udc, %struct.udc* %45, i32 0, i32 2, !dbg !5626
  %arrayidx40 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep39, i64 0, i64 0, !dbg !5625
  %regs41 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx40, i32 0, i32 1, !dbg !5627
  %46 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs41, align 8, !dbg !5627
  %ctl42 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %46, i32 0, i32 0, !dbg !5628
  %47 = bitcast i32* %ctl42 to i8*, !dbg !5629
  %call43 = call i32 @readl(i8* %47) #11, !dbg !5630
  store i32 %call43, i32* %tmp, align 4, !dbg !5631
  %48 = load i32, i32* %tmp, align 4, !dbg !5632
  %or44 = or i32 %48, 8, !dbg !5632
  store i32 %or44, i32* %tmp, align 4, !dbg !5632
  %49 = load i32, i32* %tmp, align 4, !dbg !5633
  %50 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5634
  %ep45 = getelementptr inbounds %struct.udc, %struct.udc* %50, i32 0, i32 2, !dbg !5635
  %arrayidx46 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep45, i64 0, i64 0, !dbg !5634
  %regs47 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx46, i32 0, i32 1, !dbg !5636
  %51 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs47, align 8, !dbg !5636
  %ctl48 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %51, i32 0, i32 0, !dbg !5637
  %52 = bitcast i32* %ctl48 to i8*, !dbg !5638
  call void @writel(i32 %49, i8* %52) #11, !dbg !5639
  %53 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5640
  %req49 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %53, i32 0, i32 0, !dbg !5641
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req49, i32 0, i32 1, !dbg !5642
  %54 = load i32, i32* %length, align 8, !dbg !5642
  %55 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5643
  %req50 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %55, i32 0, i32 0, !dbg !5644
  %actual = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req50, i32 0, i32 12, !dbg !5645
  store i32 %54, i32* %actual, align 8, !dbg !5646
  %56 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5647
  %57 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5648
  call void @complete_req(%struct.udc_ep* %56, %struct.udc_request* %57, i32 0) #11, !dbg !5649
  br label %if.end86, !dbg !5650

if.else51:                                        ; preds = %do.end30
  %58 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5651
  %59 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5653
  %req52 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %59, i32 0, i32 0, !dbg !5654
  call void @udc_txfifo_write(%struct.udc_ep* %58, %struct.usb_request* %req52) #11, !dbg !5655
  %60 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5656
  %req53 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %60, i32 0, i32 0, !dbg !5657
  %length54 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req53, i32 0, i32 1, !dbg !5658
  %61 = load i32, i32* %length54, align 8, !dbg !5658
  %62 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5659
  %req55 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %62, i32 0, i32 0, !dbg !5660
  %actual56 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req55, i32 0, i32 12, !dbg !5661
  %63 = load i32, i32* %actual56, align 8, !dbg !5661
  %sub = sub i32 %61, %63, !dbg !5662
  store i32 %sub, i32* %len, align 4, !dbg !5663
  %64 = load i32, i32* %len, align 4, !dbg !5664
  %65 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5666
  %ep57 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %65, i32 0, i32 0, !dbg !5667
  %maxpacket = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep57, i32 0, i32 7, !dbg !5668
  %66 = bitcast [7 x i8]* %maxpacket to i56*, !dbg !5668
  %bf.load58 = load i56, i56* %66, align 2, !dbg !5668
  %bf.clear59 = and i56 %bf.load58, 65535, !dbg !5668
  %bf.cast60 = trunc i56 %bf.clear59 to i32, !dbg !5668
  %cmp = icmp ugt i32 %64, %bf.cast60, !dbg !5669
  br i1 %cmp, label %if.then62, label %if.end68, !dbg !5670

if.then62:                                        ; preds = %if.else51
  %67 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5671
  %ep63 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %67, i32 0, i32 0, !dbg !5672
  %maxpacket64 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep63, i32 0, i32 7, !dbg !5673
  %68 = bitcast [7 x i8]* %maxpacket64 to i56*, !dbg !5673
  %bf.load65 = load i56, i56* %68, align 2, !dbg !5673
  %bf.clear66 = and i56 %bf.load65, 65535, !dbg !5673
  %bf.cast67 = trunc i56 %bf.clear66 to i32, !dbg !5673
  store i32 %bf.cast67, i32* %len, align 4, !dbg !5674
  br label %if.end68, !dbg !5675

if.end68:                                         ; preds = %if.then62, %if.else51
  %69 = load i32, i32* %len, align 4, !dbg !5676
  %70 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5677
  %req69 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %70, i32 0, i32 0, !dbg !5678
  %actual70 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req69, i32 0, i32 12, !dbg !5679
  %71 = load i32, i32* %actual70, align 8, !dbg !5680
  %add = add i32 %71, %69, !dbg !5680
  store i32 %add, i32* %actual70, align 8, !dbg !5680
  %72 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5681
  %req71 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %72, i32 0, i32 0, !dbg !5683
  %actual72 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req71, i32 0, i32 12, !dbg !5684
  %73 = load i32, i32* %actual72, align 8, !dbg !5684
  %74 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5685
  %req73 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %74, i32 0, i32 0, !dbg !5686
  %length74 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req73, i32 0, i32 1, !dbg !5687
  %75 = load i32, i32* %length74, align 8, !dbg !5687
  %cmp75 = icmp eq i32 %73, %75, !dbg !5688
  br i1 %cmp75, label %if.then84, label %lor.lhs.false, !dbg !5689

lor.lhs.false:                                    ; preds = %if.end68
  %76 = load i32, i32* %len, align 4, !dbg !5690
  %77 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5691
  %ep77 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %77, i32 0, i32 0, !dbg !5692
  %maxpacket78 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep77, i32 0, i32 7, !dbg !5693
  %78 = bitcast [7 x i8]* %maxpacket78 to i56*, !dbg !5693
  %bf.load79 = load i56, i56* %78, align 2, !dbg !5693
  %bf.clear80 = and i56 %bf.load79, 65535, !dbg !5693
  %bf.cast81 = trunc i56 %bf.clear80 to i32, !dbg !5693
  %cmp82 = icmp ne i32 %76, %bf.cast81, !dbg !5694
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !5695

if.then84:                                        ; preds = %lor.lhs.false, %if.end68
  %79 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5696
  %80 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5698
  call void @complete_req(%struct.udc_ep* %79, %struct.udc_request* %80, i32 0) #11, !dbg !5699
  br label %if.end85, !dbg !5700

if.end85:                                         ; preds = %if.then84, %lor.lhs.false
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then34
  br label %if.end87, !dbg !5701

if.end87:                                         ; preds = %if.end86, %if.else24
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then19
  %81 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5702
  %halted = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %81, i32 0, i32 16, !dbg !5703
  store i32 0, i32* %halted, align 8, !dbg !5704
  %82 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5705
  %stall_ep0in89 = getelementptr inbounds %struct.udc, %struct.udc* %82, i32 0, i32 4, !dbg !5706
  %bf.load90 = load i8, i8* %stall_ep0in89, align 8, !dbg !5707
  %bf.clear91 = and i8 %bf.load90, -2, !dbg !5707
  store i8 %bf.clear91, i8* %stall_ep0in89, align 8, !dbg !5707
  %83 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5708
  %dma92 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %83, i32 0, i32 3, !dbg !5710
  %84 = load i32*, i32** %dma92, align 8, !dbg !5710
  %tobool93 = icmp ne i32* %84, null, !dbg !5708
  br i1 %tobool93, label %if.end99, label %if.then94, !dbg !5711

if.then94:                                        ; preds = %if.end88
  %85 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5712
  %ep95 = getelementptr inbounds %struct.udc, %struct.udc* %85, i32 0, i32 2, !dbg !5714
  %arrayidx96 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep95, i64 0, i64 0, !dbg !5712
  %regs97 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx96, i32 0, i32 1, !dbg !5715
  %86 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs97, align 8, !dbg !5715
  %sts98 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %86, i32 0, i32 1, !dbg !5716
  %87 = bitcast i32* %sts98 to i8*, !dbg !5717
  call void @writel(i32 64, i8* %87) #11, !dbg !5718
  br label %if.end99, !dbg !5719

if.end99:                                         ; preds = %if.then94, %if.end88
  br label %if.end100, !dbg !5720

if.end100:                                        ; preds = %if.end99, %if.else
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %do.end
  %88 = load i32, i32* %ret_val, align 4, !dbg !5721
  ret i32 %88, !dbg !5722
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_data_out_isr(%struct.udc* %dev, i32 %ep_ix) #0 !dbg !5723 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %ep_ix.addr = alloca i32, align 4
  %ret_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %ep = alloca %struct.udc_ep*, align 8
  %req = alloca %struct.udc_request*, align 8
  %count = alloca i32, align 4
  %td = alloca %struct.udc_data_dma*, align 8
  %dma_done = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp25 = alloca %struct.udc_request*, align 8
  %__mptr42 = alloca i8*, align 8
  %tmp47 = alloca %struct.udc_request*, align 8
  %__mptr133 = alloca i8*, align 8
  %tmp138 = alloca %struct.udc_request*, align 8
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !5726, metadata !DIExpression()), !dbg !5727
  store i32 %ep_ix, i32* %ep_ix.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep_ix.addr, metadata !5728, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !5730, metadata !DIExpression()), !dbg !5731
  store i32 0, i32* %ret_val, align 4, !dbg !5731
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !5732, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep, metadata !5734, metadata !DIExpression()), !dbg !5735
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req, metadata !5736, metadata !DIExpression()), !dbg !5737
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5738, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.declare(metadata %struct.udc_data_dma** %td, metadata !5740, metadata !DIExpression()), !dbg !5741
  store %struct.udc_data_dma* null, %struct.udc_data_dma** %td, align 8, !dbg !5741
  call void @llvm.dbg.declare(metadata i32* %dma_done, metadata !5742, metadata !DIExpression()), !dbg !5743
  br label %do.body, !dbg !5744

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5745

do.end:                                           ; preds = %do.body
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5747
  %ep1 = getelementptr inbounds %struct.udc, %struct.udc* %0, i32 0, i32 2, !dbg !5748
  %1 = load i32, i32* %ep_ix.addr, align 4, !dbg !5749
  %idxprom = sext i32 %1 to i64, !dbg !5747
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep1, i64 0, i64 %idxprom, !dbg !5747
  store %struct.udc_ep* %arrayidx, %struct.udc_ep** %ep, align 8, !dbg !5750
  %2 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5751
  %regs = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %2, i32 0, i32 1, !dbg !5752
  %3 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs, align 8, !dbg !5752
  %sts = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %3, i32 0, i32 1, !dbg !5753
  %4 = bitcast i32* %sts to i8*, !dbg !5754
  %call = call i32 @readl(i8* %4) #11, !dbg !5755
  store i32 %call, i32* %tmp, align 4, !dbg !5756
  %5 = load i8, i8* @use_dma, align 1, !dbg !5757
  %tobool = trunc i8 %5 to i1, !dbg !5757
  br i1 %tobool, label %if.then, label %if.end10, !dbg !5759

if.then:                                          ; preds = %do.end
  %6 = load i32, i32* %tmp, align 4, !dbg !5760
  %and = and i32 %6, 128, !dbg !5763
  %tobool2 = icmp ne i32 %and, 0, !dbg !5763
  br i1 %tobool2, label %if.then3, label %if.end9, !dbg !5764

if.then3:                                         ; preds = %if.then
  %7 = load i32, i32* %tmp, align 4, !dbg !5765
  %or = or i32 %7, 128, !dbg !5767
  %8 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5768
  %regs4 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %8, i32 0, i32 1, !dbg !5769
  %9 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs4, align 8, !dbg !5769
  %sts5 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %9, i32 0, i32 1, !dbg !5770
  %10 = bitcast i32* %sts5 to i8*, !dbg !5771
  call void @writel(i32 %or, i8* %10) #11, !dbg !5772
  %11 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5773
  %cancel_transfer = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %11, i32 0, i32 17, !dbg !5775
  %12 = load i32, i32* %cancel_transfer, align 4, !dbg !5775
  %tobool6 = icmp ne i32 %12, 0, !dbg !5773
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !5776

if.then7:                                         ; preds = %if.then3
  %13 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5777
  %bna_occurred = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %13, i32 0, i32 12, !dbg !5778
  store i32 1, i32* %bna_occurred, align 8, !dbg !5779
  br label %if.end, !dbg !5777

if.else:                                          ; preds = %if.then3
  %14 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5780
  %cancel_transfer8 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %14, i32 0, i32 17, !dbg !5781
  store i32 0, i32* %cancel_transfer8, align 4, !dbg !5782
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  store i32 1, i32* %ret_val, align 4, !dbg !5783
  br label %finished, !dbg !5784

if.end9:                                          ; preds = %if.then
  br label %if.end10, !dbg !5785

if.end10:                                         ; preds = %if.end9, %do.end
  %15 = load i32, i32* %tmp, align 4, !dbg !5786
  %and11 = and i32 %15, 512, !dbg !5788
  %tobool12 = icmp ne i32 %and11, 0, !dbg !5788
  br i1 %tobool12, label %if.then13, label %if.end18, !dbg !5789

if.then13:                                        ; preds = %if.end10
  %16 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !5790
  %dev14 = getelementptr inbounds %struct.udc, %struct.udc* %16, i32 0, i32 21, !dbg !5790
  %17 = load %struct.device*, %struct.device** %dev14, align 8, !dbg !5790
  %18 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5790
  %num = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %18, i32 0, i32 18, !dbg !5790
  %19 = bitcast i24* %num to i32*, !dbg !5790
  %bf.load = load i32, i32* %19, align 8, !dbg !5790
  %bf.clear = and i32 %bf.load, 31, !dbg !5790
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %17, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i32 %bf.clear) #12, !dbg !5790
  %20 = load i32, i32* %tmp, align 4, !dbg !5792
  %or15 = or i32 %20, 512, !dbg !5793
  %21 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5794
  %regs16 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %21, i32 0, i32 1, !dbg !5795
  %22 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs16, align 8, !dbg !5795
  %sts17 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %22, i32 0, i32 1, !dbg !5796
  %23 = bitcast i32* %sts17 to i8*, !dbg !5797
  call void @writel(i32 %or15, i8* %23) #11, !dbg !5798
  store i32 1, i32* %ret_val, align 4, !dbg !5799
  br label %finished, !dbg !5800

if.end18:                                         ; preds = %if.end10
  %24 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5801
  %queue = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %24, i32 0, i32 15, !dbg !5803
  %call19 = call i32 @list_empty(%struct.list_head* %queue) #11, !dbg !5804
  %tobool20 = icmp ne i32 %call19, 0, !dbg !5804
  br i1 %tobool20, label %if.else26, label %if.then21, !dbg !5805

if.then21:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5806, metadata !DIExpression()), !dbg !5809
  %25 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5809
  %queue22 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %25, i32 0, i32 15, !dbg !5809
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queue22, i32 0, i32 0, !dbg !5809
  %26 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5809
  %27 = bitcast %struct.list_head* %26 to i8*, !dbg !5809
  store i8* %27, i8** %__mptr, align 8, !dbg !5809
  br label %do.body23, !dbg !5809

do.body23:                                        ; preds = %if.then21
  br label %do.end24, !dbg !5810

do.end24:                                         ; preds = %do.body23
  %28 = load i8*, i8** %__mptr, align 8, !dbg !5809
  %add.ptr = getelementptr i8, i8* %28, i64 -128, !dbg !5809
  %29 = bitcast i8* %add.ptr to %struct.udc_request*, !dbg !5809
  store %struct.udc_request* %29, %struct.udc_request** %tmp25, align 8, !dbg !5810
  %30 = load %struct.udc_request*, %struct.udc_request** %tmp25, align 8, !dbg !5809
  store %struct.udc_request* %30, %struct.udc_request** %req, align 8, !dbg !5812
  br label %if.end27, !dbg !5813

if.else26:                                        ; preds = %if.end18
  store %struct.udc_request* null, %struct.udc_request** %req, align 8, !dbg !5814
  store i32 1, i32* @udc_rxfifo_pending, align 4, !dbg !5816
  br label %if.end27

if.end27:                                         ; preds = %if.else26, %do.end24
  br label %do.body28, !dbg !5817

do.body28:                                        ; preds = %if.end27
  br label %do.end29, !dbg !5818

do.end29:                                         ; preds = %do.body28
  %31 = load i8, i8* @use_dma, align 1, !dbg !5820
  %tobool30 = trunc i8 %31 to i1, !dbg !5820
  br i1 %tobool30, label %if.else52, label %if.then31, !dbg !5822

if.then31:                                        ; preds = %do.end29
  %32 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5823
  %tobool32 = icmp ne %struct.udc_request* %32, null, !dbg !5823
  br i1 %tobool32, label %land.lhs.true, label %if.end51, !dbg !5826

land.lhs.true:                                    ; preds = %if.then31
  %33 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5827
  %34 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5828
  %call33 = call i32 @udc_rxfifo_read(%struct.udc_ep* %33, %struct.udc_request* %34) #11, !dbg !5829
  %tobool34 = icmp ne i32 %call33, 0, !dbg !5829
  br i1 %tobool34, label %if.then35, label %if.end51, !dbg !5830

if.then35:                                        ; preds = %land.lhs.true
  store i32 1, i32* %ret_val, align 4, !dbg !5831
  %35 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5833
  %36 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5834
  call void @complete_req(%struct.udc_ep* %35, %struct.udc_request* %36, i32 0) #11, !dbg !5835
  %37 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5836
  %queue36 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %37, i32 0, i32 15, !dbg !5838
  %call37 = call i32 @list_empty(%struct.list_head* %queue36) #11, !dbg !5839
  %tobool38 = icmp ne i32 %call37, 0, !dbg !5839
  br i1 %tobool38, label %if.else49, label %land.lhs.true39, !dbg !5840

land.lhs.true39:                                  ; preds = %if.then35
  %38 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5841
  %halted = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %38, i32 0, i32 16, !dbg !5842
  %39 = load i32, i32* %halted, align 8, !dbg !5842
  %tobool40 = icmp ne i32 %39, 0, !dbg !5841
  br i1 %tobool40, label %if.else49, label %if.then41, !dbg !5843

if.then41:                                        ; preds = %land.lhs.true39
  call void @llvm.dbg.declare(metadata i8** %__mptr42, metadata !5844, metadata !DIExpression()), !dbg !5847
  %40 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5847
  %queue43 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %40, i32 0, i32 15, !dbg !5847
  %next44 = getelementptr inbounds %struct.list_head, %struct.list_head* %queue43, i32 0, i32 0, !dbg !5847
  %41 = load %struct.list_head*, %struct.list_head** %next44, align 8, !dbg !5847
  %42 = bitcast %struct.list_head* %41 to i8*, !dbg !5847
  store i8* %42, i8** %__mptr42, align 8, !dbg !5847
  br label %do.body45, !dbg !5847

do.body45:                                        ; preds = %if.then41
  br label %do.end46, !dbg !5848

do.end46:                                         ; preds = %do.body45
  %43 = load i8*, i8** %__mptr42, align 8, !dbg !5847
  %add.ptr48 = getelementptr i8, i8* %43, i64 -128, !dbg !5847
  %44 = bitcast i8* %add.ptr48 to %struct.udc_request*, !dbg !5847
  store %struct.udc_request* %44, %struct.udc_request** %tmp47, align 8, !dbg !5848
  %45 = load %struct.udc_request*, %struct.udc_request** %tmp47, align 8, !dbg !5847
  store %struct.udc_request* %45, %struct.udc_request** %req, align 8, !dbg !5850
  br label %if.end50, !dbg !5851

if.else49:                                        ; preds = %land.lhs.true39, %if.then35
  store %struct.udc_request* null, %struct.udc_request** %req, align 8, !dbg !5852
  br label %if.end50

if.end50:                                         ; preds = %if.else49, %do.end46
  br label %if.end51, !dbg !5853

if.end51:                                         ; preds = %if.end50, %land.lhs.true, %if.then31
  br label %if.end196, !dbg !5854

if.else52:                                        ; preds = %do.end29
  %46 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5855
  %cancel_transfer53 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %46, i32 0, i32 17, !dbg !5857
  %47 = load i32, i32* %cancel_transfer53, align 4, !dbg !5857
  %tobool54 = icmp ne i32 %47, 0, !dbg !5855
  br i1 %tobool54, label %if.else189, label %land.lhs.true55, !dbg !5858

land.lhs.true55:                                  ; preds = %if.else52
  %48 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5859
  %tobool56 = icmp ne %struct.udc_request* %48, null, !dbg !5859
  br i1 %tobool56, label %if.then57, label %if.else189, !dbg !5860

if.then57:                                        ; preds = %land.lhs.true55
  store i32 1, i32* %ret_val, align 4, !dbg !5861
  %49 = load i8, i8* @use_dma_ppb, align 1, !dbg !5863
  %tobool58 = trunc i8 %49 to i1, !dbg !5863
  br i1 %tobool58, label %if.else61, label %if.then59, !dbg !5865

if.then59:                                        ; preds = %if.then57
  %50 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5866
  %td_data = getelementptr inbounds %struct.udc_request, %struct.udc_request* %50, i32 0, i32 3, !dbg !5866
  %51 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data, align 8, !dbg !5866
  %status = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %51, i32 0, i32 0, !dbg !5866
  %52 = load i32, i32* %status, align 16, !dbg !5866
  %and60 = and i32 %52, -1073741824, !dbg !5866
  %shr = lshr i32 %and60, 30, !dbg !5866
  store i32 %shr, i32* %dma_done, align 4, !dbg !5868
  br label %if.end76, !dbg !5869

if.else61:                                        ; preds = %if.then57
  %53 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5870
  %bna_occurred62 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %53, i32 0, i32 12, !dbg !5873
  %54 = load i32, i32* %bna_occurred62, align 8, !dbg !5873
  %tobool63 = icmp ne i32 %54, 0, !dbg !5870
  br i1 %tobool63, label %if.then64, label %if.end71, !dbg !5874

if.then64:                                        ; preds = %if.else61
  br label %do.body65, !dbg !5875

do.body65:                                        ; preds = %if.then64
  br label %do.end66, !dbg !5877

do.end66:                                         ; preds = %do.body65
  %55 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5879
  %td_data67 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %55, i32 0, i32 3, !dbg !5880
  %56 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data67, align 8, !dbg !5880
  %57 = bitcast %struct.udc_data_dma* %56 to i8*, !dbg !5881
  %58 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5882
  %bna_dummy_req = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %58, i32 0, i32 11, !dbg !5883
  %59 = load %struct.udc_request*, %struct.udc_request** %bna_dummy_req, align 8, !dbg !5883
  %td_data68 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %59, i32 0, i32 3, !dbg !5884
  %60 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data68, align 8, !dbg !5884
  %61 = bitcast %struct.udc_data_dma* %60 to i8*, !dbg !5881
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %57, i8* align 16 %61, i64 16, i1 false), !dbg !5881
  %62 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5885
  %bna_occurred69 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %62, i32 0, i32 12, !dbg !5886
  store i32 0, i32* %bna_occurred69, align 8, !dbg !5887
  %63 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5888
  %req70 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %63, i32 0, i32 8, !dbg !5889
  %64 = load %struct.udc_request*, %struct.udc_request** %req70, align 8, !dbg !5889
  call void @udc_init_bna_dummy(%struct.udc_request* %64) #11, !dbg !5890
  br label %if.end71, !dbg !5891

if.end71:                                         ; preds = %do.end66, %if.else61
  %65 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5892
  %call72 = call %struct.udc_data_dma* @udc_get_last_dma_desc(%struct.udc_request* %65) #11, !dbg !5893
  store %struct.udc_data_dma* %call72, %struct.udc_data_dma** %td, align 8, !dbg !5894
  %66 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !5895
  %status73 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %66, i32 0, i32 0, !dbg !5895
  %67 = load i32, i32* %status73, align 16, !dbg !5895
  %and74 = and i32 %67, -1073741824, !dbg !5895
  %shr75 = lshr i32 %and74, 30, !dbg !5895
  store i32 %shr75, i32* %dma_done, align 4, !dbg !5896
  br label %if.end76

if.end76:                                         ; preds = %if.end71, %if.then59
  %68 = load i32, i32* %dma_done, align 4, !dbg !5897
  %cmp = icmp eq i32 %68, 2, !dbg !5899
  br i1 %cmp, label %if.then77, label %if.else187, !dbg !5900

if.then77:                                        ; preds = %if.end76
  %69 = load i8, i8* @use_dma_ppb, align 1, !dbg !5901
  %tobool78 = trunc i8 %69 to i1, !dbg !5901
  br i1 %tobool78, label %if.else86, label %if.then79, !dbg !5904

if.then79:                                        ; preds = %if.then77
  %70 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5905
  %td_data80 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %70, i32 0, i32 3, !dbg !5905
  %71 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data80, align 8, !dbg !5905
  %status81 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %71, i32 0, i32 0, !dbg !5905
  %72 = load i32, i32* %status81, align 16, !dbg !5905
  %and82 = and i32 %72, 65535, !dbg !5905
  %shr83 = lshr i32 %and82, 0, !dbg !5905
  store i32 %shr83, i32* %count, align 4, !dbg !5907
  br label %do.body84, !dbg !5908

do.body84:                                        ; preds = %if.then79
  br label %do.end85, !dbg !5909

do.end85:                                         ; preds = %do.body84
  br label %if.end107, !dbg !5911

if.else86:                                        ; preds = %if.then77
  br label %do.body87, !dbg !5912

do.body87:                                        ; preds = %if.else86
  br label %do.end88, !dbg !5914

do.end88:                                         ; preds = %do.body87
  br label %do.body89, !dbg !5916

do.body89:                                        ; preds = %do.end88
  br label %do.end90, !dbg !5917

do.end90:                                         ; preds = %do.body89
  %73 = load i8, i8* @use_dma_ppb_du, align 1, !dbg !5919
  %tobool91 = trunc i8 %73 to i1, !dbg !5919
  br i1 %tobool91, label %if.then92, label %if.else94, !dbg !5921

if.then92:                                        ; preds = %do.end90
  %74 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5922
  %call93 = call i32 @udc_get_ppbdu_rxbytes(%struct.udc_request* %74) #11, !dbg !5924
  store i32 %call93, i32* %count, align 4, !dbg !5925
  br label %if.end104, !dbg !5926

if.else94:                                        ; preds = %do.end90
  %75 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !5927
  %status95 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %75, i32 0, i32 0, !dbg !5927
  %76 = load i32, i32* %status95, align 16, !dbg !5927
  %and96 = and i32 %76, 65535, !dbg !5927
  %shr97 = lshr i32 %and96, 0, !dbg !5927
  store i32 %shr97, i32* %count, align 4, !dbg !5929
  %77 = load i32, i32* %count, align 4, !dbg !5930
  %tobool98 = icmp ne i32 %77, 0, !dbg !5930
  br i1 %tobool98, label %if.end103, label %land.lhs.true99, !dbg !5932

land.lhs.true99:                                  ; preds = %if.else94
  %78 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5933
  %req100 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %78, i32 0, i32 0, !dbg !5934
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req100, i32 0, i32 1, !dbg !5935
  %79 = load i32, i32* %length, align 8, !dbg !5935
  %cmp101 = icmp eq i32 %79, 65536, !dbg !5936
  br i1 %cmp101, label %if.then102, label %if.end103, !dbg !5937

if.then102:                                       ; preds = %land.lhs.true99
  store i32 65536, i32* %count, align 4, !dbg !5938
  br label %if.end103, !dbg !5940

if.end103:                                        ; preds = %if.then102, %land.lhs.true99, %if.else94
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then92
  br label %do.body105, !dbg !5941

do.body105:                                       ; preds = %if.end104
  br label %do.end106, !dbg !5942

do.end106:                                        ; preds = %do.body105
  br label %if.end107

if.end107:                                        ; preds = %do.end106, %do.end85
  %80 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5944
  %req108 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %80, i32 0, i32 0, !dbg !5945
  %length109 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req108, i32 0, i32 1, !dbg !5946
  %81 = load i32, i32* %length109, align 8, !dbg !5946
  %82 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5947
  %req110 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %82, i32 0, i32 0, !dbg !5948
  %actual = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req110, i32 0, i32 12, !dbg !5949
  %83 = load i32, i32* %actual, align 8, !dbg !5949
  %sub = sub i32 %81, %83, !dbg !5950
  store i32 %sub, i32* %tmp, align 4, !dbg !5951
  %84 = load i32, i32* %count, align 4, !dbg !5952
  %85 = load i32, i32* %tmp, align 4, !dbg !5954
  %cmp111 = icmp ugt i32 %84, %85, !dbg !5955
  br i1 %cmp111, label %if.then112, label %if.end121, !dbg !5956

if.then112:                                       ; preds = %if.end107
  %86 = load i32, i32* %tmp, align 4, !dbg !5957
  %87 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5960
  %ep113 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %87, i32 0, i32 0, !dbg !5961
  %maxpacket = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep113, i32 0, i32 7, !dbg !5962
  %88 = bitcast [7 x i8]* %maxpacket to i56*, !dbg !5962
  %bf.load114 = load i56, i56* %88, align 2, !dbg !5962
  %bf.clear115 = and i56 %bf.load114, 65535, !dbg !5962
  %bf.cast = trunc i56 %bf.clear115 to i32, !dbg !5962
  %rem = urem i32 %86, %bf.cast, !dbg !5963
  %cmp116 = icmp ne i32 %rem, 0, !dbg !5964
  br i1 %cmp116, label %if.then117, label %if.end120, !dbg !5965

if.then117:                                       ; preds = %if.then112
  %89 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5966
  %req118 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %89, i32 0, i32 0, !dbg !5968
  %status119 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req118, i32 0, i32 11, !dbg !5969
  store i32 -75, i32* %status119, align 4, !dbg !5970
  br label %if.end120, !dbg !5971

if.end120:                                        ; preds = %if.then117, %if.then112
  %90 = load i32, i32* %tmp, align 4, !dbg !5972
  store i32 %90, i32* %count, align 4, !dbg !5973
  br label %if.end121, !dbg !5974

if.end121:                                        ; preds = %if.end120, %if.end107
  %91 = load i32, i32* %count, align 4, !dbg !5975
  %92 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5976
  %req122 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %92, i32 0, i32 0, !dbg !5977
  %actual123 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req122, i32 0, i32 12, !dbg !5978
  %93 = load i32, i32* %actual123, align 8, !dbg !5979
  %add = add i32 %93, %91, !dbg !5979
  store i32 %add, i32* %actual123, align 8, !dbg !5979
  %94 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5980
  %dma_going = getelementptr inbounds %struct.udc_request, %struct.udc_request* %94, i32 0, i32 1, !dbg !5981
  %bf.load124 = load i8, i8* %dma_going, align 8, !dbg !5982
  %bf.clear125 = and i8 %bf.load124, -2, !dbg !5982
  store i8 %bf.clear125, i8* %dma_going, align 8, !dbg !5982
  %95 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5983
  %96 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !5984
  call void @complete_req(%struct.udc_ep* %95, %struct.udc_request* %96, i32 0) #11, !dbg !5985
  %97 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5986
  %queue126 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %97, i32 0, i32 15, !dbg !5988
  %call127 = call i32 @list_empty(%struct.list_head* %queue126) #11, !dbg !5989
  %tobool128 = icmp ne i32 %call127, 0, !dbg !5989
  br i1 %tobool128, label %if.else155, label %land.lhs.true129, !dbg !5990

land.lhs.true129:                                 ; preds = %if.end121
  %98 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5991
  %halted130 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %98, i32 0, i32 16, !dbg !5992
  %99 = load i32, i32* %halted130, align 8, !dbg !5992
  %tobool131 = icmp ne i32 %99, 0, !dbg !5991
  br i1 %tobool131, label %if.else155, label %if.then132, !dbg !5993

if.then132:                                       ; preds = %land.lhs.true129
  call void @llvm.dbg.declare(metadata i8** %__mptr133, metadata !5994, metadata !DIExpression()), !dbg !5997
  %100 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !5997
  %queue134 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %100, i32 0, i32 15, !dbg !5997
  %next135 = getelementptr inbounds %struct.list_head, %struct.list_head* %queue134, i32 0, i32 0, !dbg !5997
  %101 = load %struct.list_head*, %struct.list_head** %next135, align 8, !dbg !5997
  %102 = bitcast %struct.list_head* %101 to i8*, !dbg !5997
  store i8* %102, i8** %__mptr133, align 8, !dbg !5997
  br label %do.body136, !dbg !5997

do.body136:                                       ; preds = %if.then132
  br label %do.end137, !dbg !5998

do.end137:                                        ; preds = %do.body136
  %103 = load i8*, i8** %__mptr133, align 8, !dbg !5997
  %add.ptr139 = getelementptr i8, i8* %103, i64 -128, !dbg !5997
  %104 = bitcast i8* %add.ptr139 to %struct.udc_request*, !dbg !5997
  store %struct.udc_request* %104, %struct.udc_request** %tmp138, align 8, !dbg !5998
  %105 = load %struct.udc_request*, %struct.udc_request** %tmp138, align 8, !dbg !5997
  store %struct.udc_request* %105, %struct.udc_request** %req, align 8, !dbg !6000
  %106 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6001
  %dma_going140 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %106, i32 0, i32 1, !dbg !6003
  %bf.load141 = load i8, i8* %dma_going140, align 8, !dbg !6003
  %bf.clear142 = and i8 %bf.load141, 1, !dbg !6003
  %bf.cast143 = zext i8 %bf.clear142 to i32, !dbg !6003
  %cmp144 = icmp eq i32 %bf.cast143, 0, !dbg !6004
  br i1 %cmp144, label %if.then145, label %if.end154, !dbg !6005

if.then145:                                       ; preds = %do.end137
  %107 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6006
  %108 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6009
  %call146 = call i32 @prep_dma(%struct.udc_ep* %107, %struct.udc_request* %108, i32 2592) #11, !dbg !6010
  %cmp147 = icmp ne i32 %call146, 0, !dbg !6011
  br i1 %cmp147, label %if.then148, label %if.end149, !dbg !6012

if.then148:                                       ; preds = %if.then145
  br label %finished, !dbg !6013

if.end149:                                        ; preds = %if.then145
  %109 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6014
  %td_phys = getelementptr inbounds %struct.udc_request, %struct.udc_request* %109, i32 0, i32 2, !dbg !6015
  %110 = load i64, i64* %td_phys, align 8, !dbg !6015
  %conv = trunc i64 %110 to i32, !dbg !6014
  %111 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6016
  %regs150 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %111, i32 0, i32 1, !dbg !6017
  %112 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs150, align 8, !dbg !6017
  %desptr = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %112, i32 0, i32 5, !dbg !6018
  %113 = bitcast i32* %desptr to i8*, !dbg !6019
  call void @writel(i32 %conv, i8* %113) #11, !dbg !6020
  %114 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6021
  %dma_going151 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %114, i32 0, i32 1, !dbg !6022
  %bf.load152 = load i8, i8* %dma_going151, align 8, !dbg !6023
  %bf.clear153 = and i8 %bf.load152, -2, !dbg !6023
  %bf.set = or i8 %bf.clear153, 1, !dbg !6023
  store i8 %bf.set, i8* %dma_going151, align 8, !dbg !6023
  %115 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6024
  call void @udc_set_rde(%struct.udc* %115) #11, !dbg !6025
  br label %if.end154, !dbg !6026

if.end154:                                        ; preds = %if.end149, %do.end137
  br label %if.end186, !dbg !6027

if.else155:                                       ; preds = %land.lhs.true129, %if.end121
  %116 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6028
  %bna_dummy_req156 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %116, i32 0, i32 11, !dbg !6031
  %117 = load %struct.udc_request*, %struct.udc_request** %bna_dummy_req156, align 8, !dbg !6031
  %tobool157 = icmp ne %struct.udc_request* %117, null, !dbg !6028
  br i1 %tobool157, label %if.then158, label %if.end165, !dbg !6032

if.then158:                                       ; preds = %if.else155
  %118 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6033
  %bna_dummy_req159 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %118, i32 0, i32 11, !dbg !6035
  %119 = load %struct.udc_request*, %struct.udc_request** %bna_dummy_req159, align 8, !dbg !6035
  %td_phys160 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %119, i32 0, i32 2, !dbg !6036
  %120 = load i64, i64* %td_phys160, align 8, !dbg !6036
  %conv161 = trunc i64 %120 to i32, !dbg !6033
  %121 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6037
  %regs162 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %121, i32 0, i32 1, !dbg !6038
  %122 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs162, align 8, !dbg !6038
  %desptr163 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %122, i32 0, i32 5, !dbg !6039
  %123 = bitcast i32* %desptr163 to i8*, !dbg !6040
  call void @writel(i32 %conv161, i8* %123) #11, !dbg !6041
  %124 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6042
  %bna_occurred164 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %124, i32 0, i32 12, !dbg !6043
  store i32 0, i32* %bna_occurred164, align 8, !dbg !6044
  br label %if.end165, !dbg !6045

if.end165:                                        ; preds = %if.then158, %if.else155
  %125 = load i32, i32* @set_rde, align 4, !dbg !6046
  %cmp166 = icmp ne i32 %125, 0, !dbg !6048
  br i1 %cmp166, label %land.lhs.true168, label %if.end176, !dbg !6049

land.lhs.true168:                                 ; preds = %if.end165
  %call169 = call i32 @timer_pending(%struct.timer_list* @udc_timer) #11, !dbg !6050
  %tobool170 = icmp ne i32 %call169, 0, !dbg !6050
  br i1 %tobool170, label %if.end176, label %if.then171, !dbg !6051

if.then171:                                       ; preds = %land.lhs.true168
  %126 = load volatile i64, i64* @jiffies, align 8, !dbg !6052
  %add172 = add i64 %126, 250, !dbg !6054
  store i64 %add172, i64* getelementptr inbounds (%struct.timer_list, %struct.timer_list* @udc_timer, i32 0, i32 1), align 8, !dbg !6055
  store i32 1, i32* @set_rde, align 4, !dbg !6056
  %127 = load i32, i32* @stop_timer, align 4, !dbg !6057
  %tobool173 = icmp ne i32 %127, 0, !dbg !6057
  br i1 %tobool173, label %if.end175, label %if.then174, !dbg !6059

if.then174:                                       ; preds = %if.then171
  call void @add_timer(%struct.timer_list* @udc_timer) #11, !dbg !6060
  br label %if.end175, !dbg !6060

if.end175:                                        ; preds = %if.then174, %if.then171
  br label %if.end176, !dbg !6061

if.end176:                                        ; preds = %if.end175, %land.lhs.true168, %if.end165
  %128 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6062
  %num177 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %128, i32 0, i32 18, !dbg !6064
  %129 = bitcast i24* %num177 to i32*, !dbg !6064
  %bf.load178 = load i32, i32* %129, align 8, !dbg !6064
  %bf.clear179 = and i32 %bf.load178, 31, !dbg !6064
  %cmp180 = icmp ne i32 %bf.clear179, 16, !dbg !6065
  br i1 %cmp180, label %if.then182, label %if.end185, !dbg !6066

if.then182:                                       ; preds = %if.end176
  %130 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6067
  %data_ep_queued = getelementptr inbounds %struct.udc, %struct.udc* %130, i32 0, i32 4, !dbg !6068
  %bf.load183 = load i8, i8* %data_ep_queued, align 8, !dbg !6069
  %bf.clear184 = and i8 %bf.load183, -17, !dbg !6069
  store i8 %bf.clear184, i8* %data_ep_queued, align 8, !dbg !6069
  br label %if.end185, !dbg !6067

if.end185:                                        ; preds = %if.then182, %if.end176
  br label %if.end186

if.end186:                                        ; preds = %if.end185, %if.end154
  br label %if.end188, !dbg !6070

if.else187:                                       ; preds = %if.end76
  %131 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6071
  call void @udc_set_rde(%struct.udc* %131) #11, !dbg !6073
  br label %if.end188

if.end188:                                        ; preds = %if.else187, %if.end186
  br label %if.end195, !dbg !6074

if.else189:                                       ; preds = %land.lhs.true55, %if.else52
  %132 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6075
  %cancel_transfer190 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %132, i32 0, i32 17, !dbg !6077
  %133 = load i32, i32* %cancel_transfer190, align 4, !dbg !6077
  %tobool191 = icmp ne i32 %133, 0, !dbg !6075
  br i1 %tobool191, label %if.then192, label %if.end194, !dbg !6078

if.then192:                                       ; preds = %if.else189
  store i32 1, i32* %ret_val, align 4, !dbg !6079
  %134 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6081
  %cancel_transfer193 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %134, i32 0, i32 17, !dbg !6082
  store i32 0, i32* %cancel_transfer193, align 4, !dbg !6083
  br label %if.end194, !dbg !6084

if.end194:                                        ; preds = %if.then192, %if.else189
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %if.end188
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %if.end51
  %135 = load i32, i32* @cnak_pending, align 4, !dbg !6085
  %tobool197 = icmp ne i32 %135, 0, !dbg !6085
  br i1 %tobool197, label %if.then198, label %if.end206, !dbg !6087

if.then198:                                       ; preds = %if.end196
  %136 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6088
  %regs199 = getelementptr inbounds %struct.udc, %struct.udc* %136, i32 0, i32 9, !dbg !6091
  %137 = load %struct.udc_regs*, %struct.udc_regs** %regs199, align 8, !dbg !6091
  %sts200 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %137, i32 0, i32 2, !dbg !6092
  %138 = bitcast i32* %sts200 to i8*, !dbg !6093
  %call201 = call i32 @readl(i8* %138) #11, !dbg !6094
  %and202 = and i32 %call201, 32768, !dbg !6095
  %tobool203 = icmp ne i32 %and202, 0, !dbg !6095
  br i1 %tobool203, label %if.then204, label %if.end205, !dbg !6096

if.then204:                                       ; preds = %if.then198
  %139 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6097
  call void @udc_process_cnak_queue(%struct.udc* %139) #11, !dbg !6098
  br label %if.end205, !dbg !6098

if.end205:                                        ; preds = %if.then204, %if.then198
  br label %if.end206, !dbg !6099

if.end206:                                        ; preds = %if.end205, %if.end196
  %140 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6100
  %regs207 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %140, i32 0, i32 1, !dbg !6101
  %141 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs207, align 8, !dbg !6101
  %sts208 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %141, i32 0, i32 1, !dbg !6102
  %142 = bitcast i32* %sts208 to i8*, !dbg !6103
  call void @writel(i32 48, i8* %142) #11, !dbg !6104
  br label %finished, !dbg !6104

finished:                                         ; preds = %if.end206, %if.then148, %if.then13, %if.end
  call void @llvm.dbg.label(metadata !6105), !dbg !6106
  %143 = load i32, i32* %ret_val, align 4, !dbg !6107
  ret i32 %143, !dbg !6108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_data_in_isr(%struct.udc* %dev, i32 %ep_ix) #0 !dbg !6109 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %ep_ix.addr = alloca i32, align 4
  %ret_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %epsts = alloca i32, align 4
  %ep = alloca %struct.udc_ep*, align 8
  %req = alloca %struct.udc_request*, align 8
  %td = alloca %struct.udc_data_dma*, align 8
  %len = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp34 = alloca %struct.udc_request*, align 8
  %__mptr83 = alloca i8*, align 8
  %tmp88 = alloca %struct.udc_request*, align 8
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !6110, metadata !DIExpression()), !dbg !6111
  store i32 %ep_ix, i32* %ep_ix.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep_ix.addr, metadata !6112, metadata !DIExpression()), !dbg !6113
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !6114, metadata !DIExpression()), !dbg !6115
  store i32 0, i32* %ret_val, align 4, !dbg !6115
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6116, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.declare(metadata i32* %epsts, metadata !6118, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep, metadata !6120, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req, metadata !6122, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.declare(metadata %struct.udc_data_dma** %td, metadata !6124, metadata !DIExpression()), !dbg !6125
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6126, metadata !DIExpression()), !dbg !6127
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6128
  %ep1 = getelementptr inbounds %struct.udc, %struct.udc* %0, i32 0, i32 2, !dbg !6129
  %1 = load i32, i32* %ep_ix.addr, align 4, !dbg !6130
  %idxprom = sext i32 %1 to i64, !dbg !6128
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep1, i64 0, i64 %idxprom, !dbg !6128
  store %struct.udc_ep* %arrayidx, %struct.udc_ep** %ep, align 8, !dbg !6131
  %2 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6132
  %regs = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %2, i32 0, i32 1, !dbg !6133
  %3 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs, align 8, !dbg !6133
  %sts = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %3, i32 0, i32 1, !dbg !6134
  %4 = bitcast i32* %sts to i8*, !dbg !6135
  %call = call i32 @readl(i8* %4) #11, !dbg !6136
  store i32 %call, i32* %epsts, align 4, !dbg !6137
  %5 = load i8, i8* @use_dma, align 1, !dbg !6138
  %tobool = trunc i8 %5 to i1, !dbg !6138
  br i1 %tobool, label %if.then, label %if.end9, !dbg !6140

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %epsts, align 4, !dbg !6141
  %and = and i32 %6, 128, !dbg !6144
  %tobool2 = icmp ne i32 %and, 0, !dbg !6144
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !6145

if.then3:                                         ; preds = %if.then
  %7 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6146
  %dev4 = getelementptr inbounds %struct.udc, %struct.udc* %7, i32 0, i32 21, !dbg !6146
  %8 = load %struct.device*, %struct.device** %dev4, align 8, !dbg !6146
  %9 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6146
  %num = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %9, i32 0, i32 18, !dbg !6146
  %10 = bitcast i24* %num to i32*, !dbg !6146
  %bf.load = load i32, i32* %10, align 8, !dbg !6146
  %bf.clear = and i32 %bf.load, 31, !dbg !6146
  %11 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6146
  %regs5 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %11, i32 0, i32 1, !dbg !6146
  %12 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs5, align 8, !dbg !6146
  %desptr = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %12, i32 0, i32 5, !dbg !6146
  %13 = bitcast i32* %desptr to i8*, !dbg !6146
  %call6 = call i32 @readl(i8* %13) #11, !dbg !6146
  %conv = zext i32 %call6 to i64, !dbg !6146
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0), i32 %bf.clear, i64 %conv) #12, !dbg !6146
  %14 = load i32, i32* %epsts, align 4, !dbg !6148
  %15 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6149
  %regs7 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %15, i32 0, i32 1, !dbg !6150
  %16 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs7, align 8, !dbg !6150
  %sts8 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %16, i32 0, i32 1, !dbg !6151
  %17 = bitcast i32* %sts8 to i8*, !dbg !6152
  call void @writel(i32 %14, i8* %17) #11, !dbg !6153
  store i32 1, i32* %ret_val, align 4, !dbg !6154
  br label %finished, !dbg !6155

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !6156

if.end9:                                          ; preds = %if.end, %entry
  %18 = load i32, i32* %epsts, align 4, !dbg !6157
  %and10 = and i32 %18, 512, !dbg !6159
  %tobool11 = icmp ne i32 %and10, 0, !dbg !6159
  br i1 %tobool11, label %if.then12, label %if.end23, !dbg !6160

if.then12:                                        ; preds = %if.end9
  %19 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6161
  %dev13 = getelementptr inbounds %struct.udc, %struct.udc* %19, i32 0, i32 21, !dbg !6161
  %20 = load %struct.device*, %struct.device** %dev13, align 8, !dbg !6161
  %21 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6161
  %num14 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %21, i32 0, i32 18, !dbg !6161
  %22 = bitcast i24* %num14 to i32*, !dbg !6161
  %bf.load15 = load i32, i32* %22, align 8, !dbg !6161
  %bf.clear16 = and i32 %bf.load15, 31, !dbg !6161
  %23 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6161
  %regs17 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %23, i32 0, i32 1, !dbg !6161
  %24 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs17, align 8, !dbg !6161
  %desptr18 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %24, i32 0, i32 5, !dbg !6161
  %25 = bitcast i32* %desptr18 to i8*, !dbg !6161
  %call19 = call i32 @readl(i8* %25) #11, !dbg !6161
  %conv20 = zext i32 %call19 to i64, !dbg !6161
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %20, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13, i64 0, i64 0), i32 %bf.clear16, i64 %conv20) #12, !dbg !6161
  %26 = load i32, i32* %epsts, align 4, !dbg !6163
  %or = or i32 %26, 512, !dbg !6164
  %27 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6165
  %regs21 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %27, i32 0, i32 1, !dbg !6166
  %28 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs21, align 8, !dbg !6166
  %sts22 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %28, i32 0, i32 1, !dbg !6167
  %29 = bitcast i32* %sts22 to i8*, !dbg !6168
  call void @writel(i32 %or, i8* %29) #11, !dbg !6169
  store i32 1, i32* %ret_val, align 4, !dbg !6170
  br label %finished, !dbg !6171

if.end23:                                         ; preds = %if.end9
  %30 = load i32, i32* %epsts, align 4, !dbg !6172
  %and24 = and i32 %30, 1024, !dbg !6174
  %tobool25 = icmp ne i32 %and24, 0, !dbg !6174
  br i1 %tobool25, label %if.then26, label %if.end72, !dbg !6175

if.then26:                                        ; preds = %if.end23
  br label %do.body, !dbg !6176

do.body:                                          ; preds = %if.then26
  br label %do.end, !dbg !6178

do.end:                                           ; preds = %do.body
  store i32 1, i32* %ret_val, align 4, !dbg !6180
  %31 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6181
  %cancel_transfer = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %31, i32 0, i32 17, !dbg !6183
  %32 = load i32, i32* %cancel_transfer, align 4, !dbg !6183
  %tobool27 = icmp ne i32 %32, 0, !dbg !6181
  br i1 %tobool27, label %if.end70, label %land.lhs.true, !dbg !6184

land.lhs.true:                                    ; preds = %do.end
  %33 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6185
  %queue = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %33, i32 0, i32 15, !dbg !6186
  %call28 = call i32 @list_empty(%struct.list_head* %queue) #11, !dbg !6187
  %tobool29 = icmp ne i32 %call28, 0, !dbg !6187
  br i1 %tobool29, label %if.end70, label %if.then30, !dbg !6188

if.then30:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6189, metadata !DIExpression()), !dbg !6192
  %34 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6192
  %queue31 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %34, i32 0, i32 15, !dbg !6192
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queue31, i32 0, i32 0, !dbg !6192
  %35 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6192
  %36 = bitcast %struct.list_head* %35 to i8*, !dbg !6192
  store i8* %36, i8** %__mptr, align 8, !dbg !6192
  br label %do.body32, !dbg !6192

do.body32:                                        ; preds = %if.then30
  br label %do.end33, !dbg !6193

do.end33:                                         ; preds = %do.body32
  %37 = load i8*, i8** %__mptr, align 8, !dbg !6192
  %add.ptr = getelementptr i8, i8* %37, i64 -128, !dbg !6192
  %38 = bitcast i8* %add.ptr to %struct.udc_request*, !dbg !6192
  store %struct.udc_request* %38, %struct.udc_request** %tmp34, align 8, !dbg !6193
  %39 = load %struct.udc_request*, %struct.udc_request** %tmp34, align 8, !dbg !6192
  store %struct.udc_request* %39, %struct.udc_request** %req, align 8, !dbg !6195
  %40 = load i8, i8* @use_dma_ppb_du, align 1, !dbg !6196
  %tobool35 = trunc i8 %40 to i1, !dbg !6196
  br i1 %tobool35, label %if.then36, label %if.else, !dbg !6198

if.then36:                                        ; preds = %do.end33
  %41 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6199
  %call37 = call %struct.udc_data_dma* @udc_get_last_dma_desc(%struct.udc_request* %41) #11, !dbg !6201
  store %struct.udc_data_dma* %call37, %struct.udc_data_dma** %td, align 8, !dbg !6202
  %42 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !6203
  %tobool38 = icmp ne %struct.udc_data_dma* %42, null, !dbg !6203
  br i1 %tobool38, label %if.then39, label %if.end42, !dbg !6205

if.then39:                                        ; preds = %if.then36
  %43 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6206
  %req40 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %43, i32 0, i32 0, !dbg !6207
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req40, i32 0, i32 1, !dbg !6208
  %44 = load i32, i32* %length, align 8, !dbg !6208
  %45 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6209
  %req41 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %45, i32 0, i32 0, !dbg !6210
  %actual = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req41, i32 0, i32 12, !dbg !6211
  store i32 %44, i32* %actual, align 8, !dbg !6212
  br label %if.end42, !dbg !6209

if.end42:                                         ; preds = %if.then39, %if.then36
  br label %if.end47, !dbg !6213

if.else:                                          ; preds = %do.end33
  %46 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6214
  %req43 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %46, i32 0, i32 0, !dbg !6216
  %length44 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req43, i32 0, i32 1, !dbg !6217
  %47 = load i32, i32* %length44, align 8, !dbg !6217
  %48 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6218
  %req45 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %48, i32 0, i32 0, !dbg !6219
  %actual46 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req45, i32 0, i32 12, !dbg !6220
  store i32 %47, i32* %actual46, align 8, !dbg !6221
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.end42
  %49 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6222
  %req48 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %49, i32 0, i32 0, !dbg !6224
  %actual49 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req48, i32 0, i32 12, !dbg !6225
  %50 = load i32, i32* %actual49, align 8, !dbg !6225
  %51 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6226
  %req50 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %51, i32 0, i32 0, !dbg !6227
  %length51 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req50, i32 0, i32 1, !dbg !6228
  %52 = load i32, i32* %length51, align 8, !dbg !6228
  %cmp = icmp eq i32 %50, %52, !dbg !6229
  br i1 %cmp, label %if.then53, label %if.end69, !dbg !6230

if.then53:                                        ; preds = %if.end47
  %53 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6231
  %54 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6233
  call void @complete_req(%struct.udc_ep* %53, %struct.udc_request* %54, i32 0) #11, !dbg !6234
  %55 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6235
  %dma_going = getelementptr inbounds %struct.udc_request, %struct.udc_request* %55, i32 0, i32 1, !dbg !6236
  %bf.load54 = load i8, i8* %dma_going, align 8, !dbg !6237
  %bf.clear55 = and i8 %bf.load54, -2, !dbg !6237
  store i8 %bf.clear55, i8* %dma_going, align 8, !dbg !6237
  %56 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6238
  %queue56 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %56, i32 0, i32 15, !dbg !6240
  %call57 = call i32 @list_empty(%struct.list_head* %queue56) #11, !dbg !6241
  %tobool58 = icmp ne i32 %call57, 0, !dbg !6241
  br i1 %tobool58, label %if.then59, label %if.end68, !dbg !6242

if.then59:                                        ; preds = %if.then53
  %57 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6243
  %regs60 = getelementptr inbounds %struct.udc, %struct.udc* %57, i32 0, i32 9, !dbg !6245
  %58 = load %struct.udc_regs*, %struct.udc_regs** %regs60, align 8, !dbg !6245
  %ep_irqmsk = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %58, i32 0, i32 6, !dbg !6246
  %59 = bitcast i32* %ep_irqmsk to i8*, !dbg !6247
  %call61 = call i32 @readl(i8* %59) #11, !dbg !6248
  store i32 %call61, i32* %tmp, align 4, !dbg !6249
  %60 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6250
  %num62 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %60, i32 0, i32 18, !dbg !6250
  %61 = bitcast i24* %num62 to i32*, !dbg !6250
  %bf.load63 = load i32, i32* %61, align 8, !dbg !6250
  %bf.clear64 = and i32 %bf.load63, 31, !dbg !6250
  %shl = shl i32 1, %bf.clear64, !dbg !6250
  %62 = load i32, i32* %tmp, align 4, !dbg !6251
  %or65 = or i32 %62, %shl, !dbg !6251
  store i32 %or65, i32* %tmp, align 4, !dbg !6251
  %63 = load i32, i32* %tmp, align 4, !dbg !6252
  %64 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6253
  %regs66 = getelementptr inbounds %struct.udc, %struct.udc* %64, i32 0, i32 9, !dbg !6254
  %65 = load %struct.udc_regs*, %struct.udc_regs** %regs66, align 8, !dbg !6254
  %ep_irqmsk67 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %65, i32 0, i32 6, !dbg !6255
  %66 = bitcast i32* %ep_irqmsk67 to i8*, !dbg !6256
  call void @writel(i32 %63, i8* %66) #11, !dbg !6257
  br label %if.end68, !dbg !6258

if.end68:                                         ; preds = %if.then59, %if.then53
  br label %if.end69, !dbg !6259

if.end69:                                         ; preds = %if.end68, %if.end47
  br label %if.end70, !dbg !6260

if.end70:                                         ; preds = %if.end69, %land.lhs.true, %do.end
  %67 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6261
  %cancel_transfer71 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %67, i32 0, i32 17, !dbg !6262
  store i32 0, i32* %cancel_transfer71, align 4, !dbg !6263
  br label %if.end72, !dbg !6264

if.end72:                                         ; preds = %if.end70, %if.end23
  %68 = load i32, i32* %epsts, align 4, !dbg !6265
  %and73 = and i32 %68, 64, !dbg !6267
  %tobool74 = icmp ne i32 %and73, 0, !dbg !6267
  br i1 %tobool74, label %land.lhs.true75, label %if.end193, !dbg !6268

land.lhs.true75:                                  ; preds = %if.end72
  %69 = load i32, i32* %epsts, align 4, !dbg !6269
  %and76 = and i32 %69, 1024, !dbg !6270
  %tobool77 = icmp ne i32 %and76, 0, !dbg !6270
  br i1 %tobool77, label %if.end193, label %if.then78, !dbg !6271

if.then78:                                        ; preds = %land.lhs.true75
  store i32 1, i32* %ret_val, align 4, !dbg !6272
  %70 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6274
  %queue79 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %70, i32 0, i32 15, !dbg !6276
  %call80 = call i32 @list_empty(%struct.list_head* %queue79) #11, !dbg !6277
  %tobool81 = icmp ne i32 %call80, 0, !dbg !6277
  br i1 %tobool81, label %if.else174, label %if.then82, !dbg !6278

if.then82:                                        ; preds = %if.then78
  call void @llvm.dbg.declare(metadata i8** %__mptr83, metadata !6279, metadata !DIExpression()), !dbg !6282
  %71 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6282
  %queue84 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %71, i32 0, i32 15, !dbg !6282
  %next85 = getelementptr inbounds %struct.list_head, %struct.list_head* %queue84, i32 0, i32 0, !dbg !6282
  %72 = load %struct.list_head*, %struct.list_head** %next85, align 8, !dbg !6282
  %73 = bitcast %struct.list_head* %72 to i8*, !dbg !6282
  store i8* %73, i8** %__mptr83, align 8, !dbg !6282
  br label %do.body86, !dbg !6282

do.body86:                                        ; preds = %if.then82
  br label %do.end87, !dbg !6283

do.end87:                                         ; preds = %do.body86
  %74 = load i8*, i8** %__mptr83, align 8, !dbg !6282
  %add.ptr89 = getelementptr i8, i8* %74, i64 -128, !dbg !6282
  %75 = bitcast i8* %add.ptr89 to %struct.udc_request*, !dbg !6282
  store %struct.udc_request* %75, %struct.udc_request** %tmp88, align 8, !dbg !6283
  %76 = load %struct.udc_request*, %struct.udc_request** %tmp88, align 8, !dbg !6282
  store %struct.udc_request* %76, %struct.udc_request** %req, align 8, !dbg !6285
  %77 = load i8, i8* @use_dma, align 1, !dbg !6286
  %tobool90 = trunc i8 %77 to i1, !dbg !6286
  br i1 %tobool90, label %if.else126, label %if.then91, !dbg !6288

if.then91:                                        ; preds = %do.end87
  %78 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6289
  %79 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6291
  %req92 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %79, i32 0, i32 0, !dbg !6292
  call void @udc_txfifo_write(%struct.udc_ep* %78, %struct.usb_request* %req92) #11, !dbg !6293
  %80 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6294
  %req93 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %80, i32 0, i32 0, !dbg !6295
  %length94 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req93, i32 0, i32 1, !dbg !6296
  %81 = load i32, i32* %length94, align 8, !dbg !6296
  %82 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6297
  %req95 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %82, i32 0, i32 0, !dbg !6298
  %actual96 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req95, i32 0, i32 12, !dbg !6299
  %83 = load i32, i32* %actual96, align 8, !dbg !6299
  %sub = sub i32 %81, %83, !dbg !6300
  store i32 %sub, i32* %len, align 4, !dbg !6301
  %84 = load i32, i32* %len, align 4, !dbg !6302
  %85 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6304
  %ep97 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %85, i32 0, i32 0, !dbg !6305
  %maxpacket = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep97, i32 0, i32 7, !dbg !6306
  %86 = bitcast [7 x i8]* %maxpacket to i56*, !dbg !6306
  %bf.load98 = load i56, i56* %86, align 2, !dbg !6306
  %bf.clear99 = and i56 %bf.load98, 65535, !dbg !6306
  %bf.cast = trunc i56 %bf.clear99 to i32, !dbg !6306
  %cmp100 = icmp ugt i32 %84, %bf.cast, !dbg !6307
  br i1 %cmp100, label %if.then102, label %if.end108, !dbg !6308

if.then102:                                       ; preds = %if.then91
  %87 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6309
  %ep103 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %87, i32 0, i32 0, !dbg !6310
  %maxpacket104 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep103, i32 0, i32 7, !dbg !6311
  %88 = bitcast [7 x i8]* %maxpacket104 to i56*, !dbg !6311
  %bf.load105 = load i56, i56* %88, align 2, !dbg !6311
  %bf.clear106 = and i56 %bf.load105, 65535, !dbg !6311
  %bf.cast107 = trunc i56 %bf.clear106 to i32, !dbg !6311
  store i32 %bf.cast107, i32* %len, align 4, !dbg !6312
  br label %if.end108, !dbg !6313

if.end108:                                        ; preds = %if.then102, %if.then91
  %89 = load i32, i32* %len, align 4, !dbg !6314
  %90 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6315
  %req109 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %90, i32 0, i32 0, !dbg !6316
  %actual110 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req109, i32 0, i32 12, !dbg !6317
  %91 = load i32, i32* %actual110, align 8, !dbg !6318
  %add = add i32 %91, %89, !dbg !6318
  store i32 %add, i32* %actual110, align 8, !dbg !6318
  %92 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6319
  %req111 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %92, i32 0, i32 0, !dbg !6321
  %actual112 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req111, i32 0, i32 12, !dbg !6322
  %93 = load i32, i32* %actual112, align 8, !dbg !6322
  %94 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6323
  %req113 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %94, i32 0, i32 0, !dbg !6324
  %length114 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req113, i32 0, i32 1, !dbg !6325
  %95 = load i32, i32* %length114, align 8, !dbg !6325
  %cmp115 = icmp eq i32 %93, %95, !dbg !6326
  br i1 %cmp115, label %if.then124, label %lor.lhs.false, !dbg !6327

lor.lhs.false:                                    ; preds = %if.end108
  %96 = load i32, i32* %len, align 4, !dbg !6328
  %97 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6329
  %ep117 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %97, i32 0, i32 0, !dbg !6330
  %maxpacket118 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep117, i32 0, i32 7, !dbg !6331
  %98 = bitcast [7 x i8]* %maxpacket118 to i56*, !dbg !6331
  %bf.load119 = load i56, i56* %98, align 2, !dbg !6331
  %bf.clear120 = and i56 %bf.load119, 65535, !dbg !6331
  %bf.cast121 = trunc i56 %bf.clear120 to i32, !dbg !6331
  %cmp122 = icmp ne i32 %96, %bf.cast121, !dbg !6332
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !6333

if.then124:                                       ; preds = %lor.lhs.false, %if.end108
  %99 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6334
  %100 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6336
  call void @complete_req(%struct.udc_ep* %99, %struct.udc_request* %100, i32 0) #11, !dbg !6337
  br label %if.end125, !dbg !6338

if.end125:                                        ; preds = %if.then124, %lor.lhs.false
  br label %if.end173, !dbg !6339

if.else126:                                       ; preds = %do.end87
  %101 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6340
  %tobool127 = icmp ne %struct.udc_request* %101, null, !dbg !6340
  br i1 %tobool127, label %land.lhs.true128, label %if.end172, !dbg !6342

land.lhs.true128:                                 ; preds = %if.else126
  %102 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6343
  %dma_going129 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %102, i32 0, i32 1, !dbg !6344
  %bf.load130 = load i8, i8* %dma_going129, align 8, !dbg !6344
  %bf.clear131 = and i8 %bf.load130, 1, !dbg !6344
  %bf.cast132 = zext i8 %bf.clear131 to i32, !dbg !6344
  %tobool133 = icmp ne i32 %bf.cast132, 0, !dbg !6343
  br i1 %tobool133, label %if.end172, label %if.then134, !dbg !6345

if.then134:                                       ; preds = %land.lhs.true128
  br label %do.body135, !dbg !6346

do.body135:                                       ; preds = %if.then134
  br label %do.end136, !dbg !6348

do.end136:                                        ; preds = %do.body135
  %103 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6350
  %td_data = getelementptr inbounds %struct.udc_request, %struct.udc_request* %103, i32 0, i32 3, !dbg !6352
  %104 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data, align 8, !dbg !6352
  %tobool137 = icmp ne %struct.udc_data_dma* %104, null, !dbg !6350
  br i1 %tobool137, label %if.then138, label %if.end171, !dbg !6353

if.then138:                                       ; preds = %do.end136
  %105 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6354
  %dma_going139 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %105, i32 0, i32 1, !dbg !6356
  %bf.load140 = load i8, i8* %dma_going139, align 8, !dbg !6357
  %bf.clear141 = and i8 %bf.load140, -2, !dbg !6357
  %bf.set = or i8 %bf.clear141, 1, !dbg !6357
  store i8 %bf.set, i8* %dma_going139, align 8, !dbg !6357
  %106 = load i8, i8* @use_dma_ppb, align 1, !dbg !6358
  %tobool142 = trunc i8 %106 to i1, !dbg !6358
  br i1 %tobool142, label %land.lhs.true144, label %if.end157, !dbg !6360

land.lhs.true144:                                 ; preds = %if.then138
  %107 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6361
  %req145 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %107, i32 0, i32 0, !dbg !6362
  %length146 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req145, i32 0, i32 1, !dbg !6363
  %108 = load i32, i32* %length146, align 8, !dbg !6363
  %109 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6364
  %ep147 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %109, i32 0, i32 0, !dbg !6365
  %maxpacket148 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep147, i32 0, i32 7, !dbg !6366
  %110 = bitcast [7 x i8]* %maxpacket148 to i56*, !dbg !6366
  %bf.load149 = load i56, i56* %110, align 2, !dbg !6366
  %bf.clear150 = and i56 %bf.load149, 65535, !dbg !6366
  %bf.cast151 = trunc i56 %bf.clear150 to i32, !dbg !6366
  %cmp152 = icmp ugt i32 %108, %bf.cast151, !dbg !6367
  br i1 %cmp152, label %if.then154, label %if.end157, !dbg !6368

if.then154:                                       ; preds = %land.lhs.true144
  %111 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6369
  %td_data155 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %111, i32 0, i32 3, !dbg !6371
  %112 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data155, align 8, !dbg !6371
  %status = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %112, i32 0, i32 0, !dbg !6372
  %113 = load i32, i32* %status, align 16, !dbg !6373
  %and156 = and i32 %113, -134217729, !dbg !6373
  store i32 %and156, i32* %status, align 16, !dbg !6373
  br label %if.end157, !dbg !6374

if.end157:                                        ; preds = %if.then154, %land.lhs.true144, %if.then138
  %114 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6375
  %td_phys = getelementptr inbounds %struct.udc_request, %struct.udc_request* %114, i32 0, i32 2, !dbg !6376
  %115 = load i64, i64* %td_phys, align 8, !dbg !6376
  %conv158 = trunc i64 %115 to i32, !dbg !6375
  %116 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6377
  %regs159 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %116, i32 0, i32 1, !dbg !6378
  %117 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs159, align 8, !dbg !6378
  %desptr160 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %117, i32 0, i32 5, !dbg !6379
  %118 = bitcast i32* %desptr160 to i8*, !dbg !6380
  call void @writel(i32 %conv158, i8* %118) #11, !dbg !6381
  %119 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6382
  %td_data161 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %119, i32 0, i32 3, !dbg !6382
  %120 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data161, align 8, !dbg !6382
  %status162 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %120, i32 0, i32 0, !dbg !6382
  %121 = load i32, i32* %status162, align 16, !dbg !6382
  %and163 = and i32 %121, 1073741823, !dbg !6382
  %122 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !6383
  %td_data164 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %122, i32 0, i32 3, !dbg !6384
  %123 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data164, align 8, !dbg !6384
  %status165 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %123, i32 0, i32 0, !dbg !6385
  store i32 %and163, i32* %status165, align 16, !dbg !6386
  %124 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6387
  %regs166 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %124, i32 0, i32 1, !dbg !6388
  %125 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs166, align 8, !dbg !6388
  %ctl = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %125, i32 0, i32 0, !dbg !6389
  %126 = bitcast i32* %ctl to i8*, !dbg !6390
  %call167 = call i32 @readl(i8* %126) #11, !dbg !6391
  store i32 %call167, i32* %tmp, align 4, !dbg !6392
  %127 = load i32, i32* %tmp, align 4, !dbg !6393
  %or168 = or i32 %127, 8, !dbg !6393
  store i32 %or168, i32* %tmp, align 4, !dbg !6393
  %128 = load i32, i32* %tmp, align 4, !dbg !6394
  %129 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6395
  %regs169 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %129, i32 0, i32 1, !dbg !6396
  %130 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs169, align 8, !dbg !6396
  %ctl170 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %130, i32 0, i32 0, !dbg !6397
  %131 = bitcast i32* %ctl170 to i8*, !dbg !6398
  call void @writel(i32 %128, i8* %131) #11, !dbg !6399
  br label %if.end171, !dbg !6400

if.end171:                                        ; preds = %if.end157, %do.end136
  br label %if.end172, !dbg !6401

if.end172:                                        ; preds = %if.end171, %land.lhs.true128, %if.else126
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.end125
  br label %if.end192, !dbg !6402

if.else174:                                       ; preds = %if.then78
  %132 = load i8, i8* @use_dma, align 1, !dbg !6403
  %tobool175 = trunc i8 %132 to i1, !dbg !6403
  br i1 %tobool175, label %if.end191, label %land.lhs.true176, !dbg !6405

land.lhs.true176:                                 ; preds = %if.else174
  %133 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6406
  %in = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %133, i32 0, i32 18, !dbg !6407
  %134 = bitcast i24* %in to i32*, !dbg !6407
  %bf.load177 = load i32, i32* %134, align 8, !dbg !6407
  %bf.lshr = lshr i32 %bf.load177, 19, !dbg !6407
  %bf.clear178 = and i32 %bf.lshr, 1, !dbg !6407
  %tobool179 = icmp ne i32 %bf.clear178, 0, !dbg !6406
  br i1 %tobool179, label %if.then180, label %if.end191, !dbg !6408

if.then180:                                       ; preds = %land.lhs.true176
  %135 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6409
  %regs181 = getelementptr inbounds %struct.udc, %struct.udc* %135, i32 0, i32 9, !dbg !6411
  %136 = load %struct.udc_regs*, %struct.udc_regs** %regs181, align 8, !dbg !6411
  %ep_irqmsk182 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %136, i32 0, i32 6, !dbg !6412
  %137 = bitcast i32* %ep_irqmsk182 to i8*, !dbg !6413
  %call183 = call i32 @readl(i8* %137) #11, !dbg !6414
  store i32 %call183, i32* %tmp, align 4, !dbg !6415
  %138 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6416
  %num184 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %138, i32 0, i32 18, !dbg !6416
  %139 = bitcast i24* %num184 to i32*, !dbg !6416
  %bf.load185 = load i32, i32* %139, align 8, !dbg !6416
  %bf.clear186 = and i32 %bf.load185, 31, !dbg !6416
  %shl187 = shl i32 1, %bf.clear186, !dbg !6416
  %140 = load i32, i32* %tmp, align 4, !dbg !6417
  %or188 = or i32 %140, %shl187, !dbg !6417
  store i32 %or188, i32* %tmp, align 4, !dbg !6417
  %141 = load i32, i32* %tmp, align 4, !dbg !6418
  %142 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6419
  %regs189 = getelementptr inbounds %struct.udc, %struct.udc* %142, i32 0, i32 9, !dbg !6420
  %143 = load %struct.udc_regs*, %struct.udc_regs** %regs189, align 8, !dbg !6420
  %ep_irqmsk190 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %143, i32 0, i32 6, !dbg !6421
  %144 = bitcast i32* %ep_irqmsk190 to i8*, !dbg !6422
  call void @writel(i32 %141, i8* %144) #11, !dbg !6423
  br label %if.end191, !dbg !6424

if.end191:                                        ; preds = %if.then180, %land.lhs.true176, %if.else174
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.end173
  br label %if.end193, !dbg !6425

if.end193:                                        ; preds = %if.end192, %land.lhs.true75, %if.end72
  %145 = load i32, i32* %epsts, align 4, !dbg !6426
  %146 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6427
  %regs194 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %146, i32 0, i32 1, !dbg !6428
  %147 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs194, align 8, !dbg !6428
  %sts195 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %147, i32 0, i32 1, !dbg !6429
  %148 = bitcast i32* %sts195 to i8*, !dbg !6430
  call void @writel(i32 %145, i8* %148) #11, !dbg !6431
  br label %finished, !dbg !6431

finished:                                         ; preds = %if.end193, %if.then12, %if.then3
  call void @llvm.dbg.label(metadata !6432), !dbg !6433
  %149 = load i32, i32* %ret_val, align 4, !dbg !6434
  ret i32 %149, !dbg !6435
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_dev_isr(%struct.udc* %dev, i32 %dev_irq) #0 !dbg !6436 {
entry:
  %lock.addr.i236 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i236, metadata !4761, metadata !DIExpression()), !dbg !6439
  %lock.addr.i234 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i234, metadata !4768, metadata !DIExpression()), !dbg !6445
  %lock.addr.i232 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i232, metadata !4761, metadata !DIExpression()), !dbg !6447
  %lock.addr.i230 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i230, metadata !4768, metadata !DIExpression()), !dbg !6451
  %lock.addr.i228 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i228, metadata !4761, metadata !DIExpression()), !dbg !6453
  %lock.addr.i226 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i226, metadata !4768, metadata !DIExpression()), !dbg !6457
  %lock.addr.i224 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i224, metadata !4761, metadata !DIExpression()), !dbg !6459
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4768, metadata !DIExpression()), !dbg !6463
  %dev.addr = alloca %struct.udc*, align 8
  %dev_irq.addr = alloca i32, align 4
  %ret_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %cfg = alloca i32, align 4
  %ep = alloca %struct.udc_ep*, align 8
  %i = alloca i16, align 2
  %udc_csr_epix = alloca i8, align 1
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !6465, metadata !DIExpression()), !dbg !6466
  store i32 %dev_irq, i32* %dev_irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dev_irq.addr, metadata !6467, metadata !DIExpression()), !dbg !6468
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !6469, metadata !DIExpression()), !dbg !6470
  store i32 0, i32* %ret_val, align 4, !dbg !6470
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6471, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.declare(metadata i32* %cfg, metadata !6473, metadata !DIExpression()), !dbg !6474
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep, metadata !6475, metadata !DIExpression()), !dbg !6476
  call void @llvm.dbg.declare(metadata i16* %i, metadata !6477, metadata !DIExpression()), !dbg !6478
  call void @llvm.dbg.declare(metadata i8* %udc_csr_epix, metadata !6479, metadata !DIExpression()), !dbg !6480
  %0 = load i32, i32* %dev_irq.addr, align 4, !dbg !6481
  %and = and i32 %0, 1, !dbg !6482
  %tobool = icmp ne i32 %and, 0, !dbg !6482
  br i1 %tobool, label %if.then, label %if.end36, !dbg !6483

if.then:                                          ; preds = %entry
  store i32 1, i32* %ret_val, align 4, !dbg !6484
  %1 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6485
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %1, i32 0, i32 9, !dbg !6486
  %2 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !6486
  %sts = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %2, i32 0, i32 2, !dbg !6487
  %3 = bitcast i32* %sts to i8*, !dbg !6488
  %call = call i32 @readl(i8* %3) #11, !dbg !6489
  store i32 %call, i32* %tmp, align 4, !dbg !6490
  %4 = load i32, i32* %tmp, align 4, !dbg !6491
  %and1 = and i32 %4, 15, !dbg !6491
  %shr = lshr i32 %and1, 0, !dbg !6491
  store i32 %shr, i32* %cfg, align 4, !dbg !6492
  %5 = load i32, i32* %cfg, align 4, !dbg !6493
  %conv = trunc i32 %5 to i16, !dbg !6493
  %6 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6494
  %cur_config = getelementptr inbounds %struct.udc, %struct.udc* %6, i32 0, i32 18, !dbg !6495
  store i16 %conv, i16* %cur_config, align 4, !dbg !6496
  %7 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6497
  %set_cfg_not_acked = getelementptr inbounds %struct.udc, %struct.udc* %7, i32 0, i32 4, !dbg !6498
  %bf.load = load i8, i8* %set_cfg_not_acked, align 8, !dbg !6499
  %bf.clear = and i8 %bf.load, -5, !dbg !6499
  %bf.set = or i8 %bf.clear, 4, !dbg !6499
  store i8 %bf.set, i8* %set_cfg_not_acked, align 8, !dbg !6499
  call void @llvm.memset.p0i8.i64(i8* align 4 bitcast (%union.udc_setup_data* @setup_data to i8*), i8 0, i64 8, i1 false), !dbg !6500
  store i8 9, i8* getelementptr inbounds (%struct.usb_ctrlrequest, %struct.usb_ctrlrequest* bitcast (%union.udc_setup_data* @setup_data to %struct.usb_ctrlrequest*), i32 0, i32 1), align 1, !dbg !6501
  %8 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6502
  %cur_config2 = getelementptr inbounds %struct.udc, %struct.udc* %8, i32 0, i32 18, !dbg !6502
  %9 = load i16, i16* %cur_config2, align 4, !dbg !6502
  store i16 %9, i16* getelementptr inbounds (%struct.usb_ctrlrequest, %struct.usb_ctrlrequest* bitcast (%union.udc_setup_data* @setup_data to %struct.usb_ctrlrequest*), i32 0, i32 2), align 2, !dbg !6503
  store i16 0, i16* %i, align 2, !dbg !6504
  br label %for.cond, !dbg !6506

for.cond:                                         ; preds = %for.inc, %if.then
  %10 = load i16, i16* %i, align 2, !dbg !6507
  %conv3 = zext i16 %10 to i32, !dbg !6507
  %cmp = icmp slt i32 %conv3, 32, !dbg !6509
  br i1 %cmp, label %for.body, label %for.end, !dbg !6510

for.body:                                         ; preds = %for.cond
  %11 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6511
  %ep5 = getelementptr inbounds %struct.udc, %struct.udc* %11, i32 0, i32 2, !dbg !6513
  %12 = load i16, i16* %i, align 2, !dbg !6514
  %idxprom = zext i16 %12 to i64, !dbg !6511
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep5, i64 0, i64 %idxprom, !dbg !6511
  store %struct.udc_ep* %arrayidx, %struct.udc_ep** %ep, align 8, !dbg !6515
  %13 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6516
  %in = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %13, i32 0, i32 18, !dbg !6518
  %14 = bitcast i24* %in to i32*, !dbg !6518
  %bf.load6 = load i32, i32* %14, align 8, !dbg !6518
  %bf.lshr = lshr i32 %bf.load6, 19, !dbg !6518
  %bf.clear7 = and i32 %bf.lshr, 1, !dbg !6518
  %tobool8 = icmp ne i32 %bf.clear7, 0, !dbg !6516
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !6519

if.then9:                                         ; preds = %for.body
  %15 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6520
  %num = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %15, i32 0, i32 18, !dbg !6522
  %16 = bitcast i24* %num to i32*, !dbg !6522
  %bf.load10 = load i32, i32* %16, align 8, !dbg !6522
  %bf.clear11 = and i32 %bf.load10, 31, !dbg !6522
  %conv12 = trunc i32 %bf.clear11 to i8, !dbg !6520
  store i8 %conv12, i8* %udc_csr_epix, align 1, !dbg !6523
  br label %if.end, !dbg !6524

if.else:                                          ; preds = %for.body
  %17 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6525
  %num13 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %17, i32 0, i32 18, !dbg !6527
  %18 = bitcast i24* %num13 to i32*, !dbg !6527
  %bf.load14 = load i32, i32* %18, align 8, !dbg !6527
  %bf.clear15 = and i32 %bf.load14, 31, !dbg !6527
  %sub = sub i32 %bf.clear15, 12, !dbg !6528
  %conv16 = trunc i32 %sub to i8, !dbg !6525
  store i8 %conv16, i8* %udc_csr_epix, align 1, !dbg !6529
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %19 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6530
  %csr = getelementptr inbounds %struct.udc, %struct.udc* %19, i32 0, i32 8, !dbg !6531
  %20 = load %struct.udc_csrs*, %struct.udc_csrs** %csr, align 8, !dbg !6531
  %ne = getelementptr inbounds %struct.udc_csrs, %struct.udc_csrs* %20, i32 0, i32 1, !dbg !6532
  %21 = load i8, i8* %udc_csr_epix, align 1, !dbg !6533
  %idxprom17 = zext i8 %21 to i64, !dbg !6530
  %arrayidx18 = getelementptr [9 x i32], [9 x i32]* %ne, i64 0, i64 %idxprom17, !dbg !6530
  %22 = bitcast i32* %arrayidx18 to i8*, !dbg !6534
  %call19 = call i32 @readl(i8* %22) #11, !dbg !6535
  store i32 %call19, i32* %tmp, align 4, !dbg !6536
  %23 = load i32, i32* %tmp, align 4, !dbg !6537
  %and20 = and i32 %23, -1921, !dbg !6537
  %24 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6537
  %dev21 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %24, i32 0, i32 14, !dbg !6537
  %25 = load %struct.udc*, %struct.udc** %dev21, align 8, !dbg !6537
  %cur_config22 = getelementptr inbounds %struct.udc, %struct.udc* %25, i32 0, i32 18, !dbg !6537
  %26 = load i16, i16* %cur_config22, align 4, !dbg !6537
  %conv23 = zext i16 %26 to i32, !dbg !6537
  %shl = shl i32 %conv23, 7, !dbg !6537
  %and24 = and i32 %shl, 1920, !dbg !6537
  %or = or i32 %and20, %and24, !dbg !6537
  store i32 %or, i32* %tmp, align 4, !dbg !6538
  %27 = load i32, i32* %tmp, align 4, !dbg !6539
  %28 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6540
  %csr25 = getelementptr inbounds %struct.udc, %struct.udc* %28, i32 0, i32 8, !dbg !6541
  %29 = load %struct.udc_csrs*, %struct.udc_csrs** %csr25, align 8, !dbg !6541
  %ne26 = getelementptr inbounds %struct.udc_csrs, %struct.udc_csrs* %29, i32 0, i32 1, !dbg !6542
  %30 = load i8, i8* %udc_csr_epix, align 1, !dbg !6543
  %idxprom27 = zext i8 %30 to i64, !dbg !6540
  %arrayidx28 = getelementptr [9 x i32], [9 x i32]* %ne26, i64 0, i64 %idxprom27, !dbg !6540
  %31 = bitcast i32* %arrayidx28 to i8*, !dbg !6544
  call void @writel(i32 %27, i8* %31) #11, !dbg !6545
  %32 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6546
  %halted = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %32, i32 0, i32 16, !dbg !6547
  store i32 0, i32* %halted, align 8, !dbg !6548
  %33 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6549
  %regs29 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %33, i32 0, i32 1, !dbg !6550
  %34 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs29, align 8, !dbg !6550
  %ctl = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %34, i32 0, i32 0, !dbg !6551
  %35 = bitcast i32* %ctl to i8*, !dbg !6552
  %call30 = call i32 @readl(i8* %35) #11, !dbg !6553
  store i32 %call30, i32* %tmp, align 4, !dbg !6554
  %36 = load i32, i32* %tmp, align 4, !dbg !6555
  %and31 = and i32 %36, -2, !dbg !6556
  store i32 %and31, i32* %tmp, align 4, !dbg !6557
  %37 = load i32, i32* %tmp, align 4, !dbg !6558
  %38 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6559
  %regs32 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %38, i32 0, i32 1, !dbg !6560
  %39 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs32, align 8, !dbg !6560
  %ctl33 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %39, i32 0, i32 0, !dbg !6561
  %40 = bitcast i32* %ctl33 to i8*, !dbg !6562
  call void @writel(i32 %37, i8* %40) #11, !dbg !6563
  br label %for.inc, !dbg !6564

for.inc:                                          ; preds = %if.end
  %41 = load i16, i16* %i, align 2, !dbg !6565
  %inc = add i16 %41, 1, !dbg !6565
  store i16 %inc, i16* %i, align 2, !dbg !6565
  br label %for.cond, !dbg !6566, !llvm.loop !6567

for.end:                                          ; preds = %for.cond
  %42 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6569
  %lock = getelementptr inbounds %struct.udc, %struct.udc* %42, i32 0, i32 1, !dbg !6570
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !6571, !srcloc !4826
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6572
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !6572
  %rlock.i = bitcast %union.anon.4* %44 to %struct.raw_spinlock*, !dbg !6572
  %45 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6573
  %driver = getelementptr inbounds %struct.udc, %struct.udc* %45, i32 0, i32 3, !dbg !6574
  %46 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver, align 8, !dbg !6574
  %setup = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %46, i32 0, i32 4, !dbg !6575
  %47 = load i32 (%struct.usb_gadget*, %struct.usb_ctrlrequest*)*, i32 (%struct.usb_gadget*, %struct.usb_ctrlrequest*)** %setup, align 8, !dbg !6575
  %48 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6576
  %gadget = getelementptr inbounds %struct.udc, %struct.udc* %48, i32 0, i32 0, !dbg !6577
  %call34 = call i32 %47(%struct.usb_gadget* %gadget, %struct.usb_ctrlrequest* bitcast (%union.udc_setup_data* @setup_data to %struct.usb_ctrlrequest*)) #11, !dbg !6573
  store i32 %call34, i32* %tmp, align 4, !dbg !6578
  %49 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6579
  %lock35 = getelementptr inbounds %struct.udc, %struct.udc* %49, i32 0, i32 1, !dbg !6580
  store %struct.spinlock* %lock35, %struct.spinlock** %lock.addr.i224, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !6581, !srcloc !4838
  %50 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i224, align 8, !dbg !6582
  %51 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %50, i32 0, i32 0, !dbg !6582
  %rlock.i225 = bitcast %union.anon.4* %51 to %struct.raw_spinlock*, !dbg !6582
  br label %if.end36, !dbg !6583

if.end36:                                         ; preds = %for.end, %entry
  %52 = load i32, i32* %dev_irq.addr, align 4, !dbg !6584
  %and37 = and i32 %52, 2, !dbg !6585
  %tobool38 = icmp ne i32 %and37, 0, !dbg !6585
  br i1 %tobool38, label %if.then39, label %if.end119, !dbg !6586

if.then39:                                        ; preds = %if.end36
  store i32 1, i32* %ret_val, align 4, !dbg !6587
  %53 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6588
  %set_cfg_not_acked40 = getelementptr inbounds %struct.udc, %struct.udc* %53, i32 0, i32 4, !dbg !6589
  %bf.load41 = load i8, i8* %set_cfg_not_acked40, align 8, !dbg !6590
  %bf.clear42 = and i8 %bf.load41, -5, !dbg !6590
  %bf.set43 = or i8 %bf.clear42, 4, !dbg !6590
  store i8 %bf.set43, i8* %set_cfg_not_acked40, align 8, !dbg !6590
  %54 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6591
  %regs44 = getelementptr inbounds %struct.udc, %struct.udc* %54, i32 0, i32 9, !dbg !6592
  %55 = load %struct.udc_regs*, %struct.udc_regs** %regs44, align 8, !dbg !6592
  %sts45 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %55, i32 0, i32 2, !dbg !6593
  %56 = bitcast i32* %sts45 to i8*, !dbg !6594
  %call46 = call i32 @readl(i8* %56) #11, !dbg !6595
  store i32 %call46, i32* %tmp, align 4, !dbg !6596
  %57 = load i32, i32* %tmp, align 4, !dbg !6597
  %and47 = and i32 %57, 3840, !dbg !6597
  %shr48 = lshr i32 %and47, 8, !dbg !6597
  %conv49 = trunc i32 %shr48 to i16, !dbg !6597
  %58 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6598
  %cur_alt = getelementptr inbounds %struct.udc, %struct.udc* %58, i32 0, i32 20, !dbg !6599
  store i16 %conv49, i16* %cur_alt, align 8, !dbg !6600
  %59 = load i32, i32* %tmp, align 4, !dbg !6601
  %and50 = and i32 %59, 240, !dbg !6601
  %shr51 = lshr i32 %and50, 4, !dbg !6601
  %conv52 = trunc i32 %shr51 to i16, !dbg !6601
  %60 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6602
  %cur_intf = getelementptr inbounds %struct.udc, %struct.udc* %60, i32 0, i32 19, !dbg !6603
  store i16 %conv52, i16* %cur_intf, align 2, !dbg !6604
  call void @llvm.memset.p0i8.i64(i8* align 4 bitcast (%union.udc_setup_data* @setup_data to i8*), i8 0, i64 8, i1 false), !dbg !6605
  store i8 11, i8* getelementptr inbounds (%struct.usb_ctrlrequest, %struct.usb_ctrlrequest* bitcast (%union.udc_setup_data* @setup_data to %struct.usb_ctrlrequest*), i32 0, i32 1), align 1, !dbg !6606
  store i8 1, i8* getelementptr inbounds (%struct.usb_ctrlrequest, %struct.usb_ctrlrequest* bitcast (%union.udc_setup_data* @setup_data to %struct.usb_ctrlrequest*), i32 0, i32 0), align 4, !dbg !6607
  %61 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6608
  %cur_alt53 = getelementptr inbounds %struct.udc, %struct.udc* %61, i32 0, i32 20, !dbg !6608
  %62 = load i16, i16* %cur_alt53, align 8, !dbg !6608
  store i16 %62, i16* getelementptr inbounds (%struct.usb_ctrlrequest, %struct.usb_ctrlrequest* bitcast (%union.udc_setup_data* @setup_data to %struct.usb_ctrlrequest*), i32 0, i32 2), align 2, !dbg !6609
  %63 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6610
  %cur_intf54 = getelementptr inbounds %struct.udc, %struct.udc* %63, i32 0, i32 19, !dbg !6610
  %64 = load i16, i16* %cur_intf54, align 2, !dbg !6610
  store i16 %64, i16* getelementptr inbounds (%struct.usb_ctrlrequest, %struct.usb_ctrlrequest* bitcast (%union.udc_setup_data* @setup_data to %struct.usb_ctrlrequest*), i32 0, i32 3), align 4, !dbg !6611
  store i16 0, i16* %i, align 2, !dbg !6612
  br label %for.cond55, !dbg !6614

for.cond55:                                       ; preds = %for.inc110, %if.then39
  %65 = load i16, i16* %i, align 2, !dbg !6615
  %conv56 = zext i16 %65 to i32, !dbg !6615
  %cmp57 = icmp slt i32 %conv56, 32, !dbg !6617
  br i1 %cmp57, label %for.body59, label %for.end112, !dbg !6618

for.body59:                                       ; preds = %for.cond55
  %66 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6619
  %ep60 = getelementptr inbounds %struct.udc, %struct.udc* %66, i32 0, i32 2, !dbg !6621
  %67 = load i16, i16* %i, align 2, !dbg !6622
  %idxprom61 = zext i16 %67 to i64, !dbg !6619
  %arrayidx62 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep60, i64 0, i64 %idxprom61, !dbg !6619
  store %struct.udc_ep* %arrayidx62, %struct.udc_ep** %ep, align 8, !dbg !6623
  %68 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6624
  %in63 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %68, i32 0, i32 18, !dbg !6626
  %69 = bitcast i24* %in63 to i32*, !dbg !6626
  %bf.load64 = load i32, i32* %69, align 8, !dbg !6626
  %bf.lshr65 = lshr i32 %bf.load64, 19, !dbg !6626
  %bf.clear66 = and i32 %bf.lshr65, 1, !dbg !6626
  %tobool67 = icmp ne i32 %bf.clear66, 0, !dbg !6624
  br i1 %tobool67, label %if.then68, label %if.else73, !dbg !6627

if.then68:                                        ; preds = %for.body59
  %70 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6628
  %num69 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %70, i32 0, i32 18, !dbg !6630
  %71 = bitcast i24* %num69 to i32*, !dbg !6630
  %bf.load70 = load i32, i32* %71, align 8, !dbg !6630
  %bf.clear71 = and i32 %bf.load70, 31, !dbg !6630
  %conv72 = trunc i32 %bf.clear71 to i8, !dbg !6628
  store i8 %conv72, i8* %udc_csr_epix, align 1, !dbg !6631
  br label %if.end79, !dbg !6632

if.else73:                                        ; preds = %for.body59
  %72 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6633
  %num74 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %72, i32 0, i32 18, !dbg !6635
  %73 = bitcast i24* %num74 to i32*, !dbg !6635
  %bf.load75 = load i32, i32* %73, align 8, !dbg !6635
  %bf.clear76 = and i32 %bf.load75, 31, !dbg !6635
  %sub77 = sub i32 %bf.clear76, 12, !dbg !6636
  %conv78 = trunc i32 %sub77 to i8, !dbg !6633
  store i8 %conv78, i8* %udc_csr_epix, align 1, !dbg !6637
  br label %if.end79

if.end79:                                         ; preds = %if.else73, %if.then68
  %74 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6638
  %csr80 = getelementptr inbounds %struct.udc, %struct.udc* %74, i32 0, i32 8, !dbg !6639
  %75 = load %struct.udc_csrs*, %struct.udc_csrs** %csr80, align 8, !dbg !6639
  %ne81 = getelementptr inbounds %struct.udc_csrs, %struct.udc_csrs* %75, i32 0, i32 1, !dbg !6640
  %76 = load i8, i8* %udc_csr_epix, align 1, !dbg !6641
  %idxprom82 = zext i8 %76 to i64, !dbg !6638
  %arrayidx83 = getelementptr [9 x i32], [9 x i32]* %ne81, i64 0, i64 %idxprom82, !dbg !6638
  %77 = bitcast i32* %arrayidx83 to i8*, !dbg !6642
  %call84 = call i32 @readl(i8* %77) #11, !dbg !6643
  store i32 %call84, i32* %tmp, align 4, !dbg !6644
  %78 = load i32, i32* %tmp, align 4, !dbg !6645
  %and85 = and i32 %78, -30721, !dbg !6645
  %79 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6645
  %dev86 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %79, i32 0, i32 14, !dbg !6645
  %80 = load %struct.udc*, %struct.udc** %dev86, align 8, !dbg !6645
  %cur_intf87 = getelementptr inbounds %struct.udc, %struct.udc* %80, i32 0, i32 19, !dbg !6645
  %81 = load i16, i16* %cur_intf87, align 2, !dbg !6645
  %conv88 = zext i16 %81 to i32, !dbg !6645
  %shl89 = shl i32 %conv88, 11, !dbg !6645
  %and90 = and i32 %shl89, 30720, !dbg !6645
  %or91 = or i32 %and85, %and90, !dbg !6645
  store i32 %or91, i32* %tmp, align 4, !dbg !6646
  %82 = load i32, i32* %tmp, align 4, !dbg !6647
  %and92 = and i32 %82, -491521, !dbg !6647
  %83 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6647
  %dev93 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %83, i32 0, i32 14, !dbg !6647
  %84 = load %struct.udc*, %struct.udc** %dev93, align 8, !dbg !6647
  %cur_alt94 = getelementptr inbounds %struct.udc, %struct.udc* %84, i32 0, i32 20, !dbg !6647
  %85 = load i16, i16* %cur_alt94, align 8, !dbg !6647
  %conv95 = zext i16 %85 to i32, !dbg !6647
  %shl96 = shl i32 %conv95, 15, !dbg !6647
  %and97 = and i32 %shl96, 491520, !dbg !6647
  %or98 = or i32 %and92, %and97, !dbg !6647
  store i32 %or98, i32* %tmp, align 4, !dbg !6648
  %86 = load i32, i32* %tmp, align 4, !dbg !6649
  %87 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6650
  %csr99 = getelementptr inbounds %struct.udc, %struct.udc* %87, i32 0, i32 8, !dbg !6651
  %88 = load %struct.udc_csrs*, %struct.udc_csrs** %csr99, align 8, !dbg !6651
  %ne100 = getelementptr inbounds %struct.udc_csrs, %struct.udc_csrs* %88, i32 0, i32 1, !dbg !6652
  %89 = load i8, i8* %udc_csr_epix, align 1, !dbg !6653
  %idxprom101 = zext i8 %89 to i64, !dbg !6650
  %arrayidx102 = getelementptr [9 x i32], [9 x i32]* %ne100, i64 0, i64 %idxprom101, !dbg !6650
  %90 = bitcast i32* %arrayidx102 to i8*, !dbg !6654
  call void @writel(i32 %86, i8* %90) #11, !dbg !6655
  %91 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6656
  %halted103 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %91, i32 0, i32 16, !dbg !6657
  store i32 0, i32* %halted103, align 8, !dbg !6658
  %92 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6659
  %regs104 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %92, i32 0, i32 1, !dbg !6660
  %93 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs104, align 8, !dbg !6660
  %ctl105 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %93, i32 0, i32 0, !dbg !6661
  %94 = bitcast i32* %ctl105 to i8*, !dbg !6662
  %call106 = call i32 @readl(i8* %94) #11, !dbg !6663
  store i32 %call106, i32* %tmp, align 4, !dbg !6664
  %95 = load i32, i32* %tmp, align 4, !dbg !6665
  %and107 = and i32 %95, -2, !dbg !6666
  store i32 %and107, i32* %tmp, align 4, !dbg !6667
  %96 = load i32, i32* %tmp, align 4, !dbg !6668
  %97 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !6669
  %regs108 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %97, i32 0, i32 1, !dbg !6670
  %98 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs108, align 8, !dbg !6670
  %ctl109 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %98, i32 0, i32 0, !dbg !6671
  %99 = bitcast i32* %ctl109 to i8*, !dbg !6672
  call void @writel(i32 %96, i8* %99) #11, !dbg !6673
  br label %for.inc110, !dbg !6674

for.inc110:                                       ; preds = %if.end79
  %100 = load i16, i16* %i, align 2, !dbg !6675
  %inc111 = add i16 %100, 1, !dbg !6675
  store i16 %inc111, i16* %i, align 2, !dbg !6675
  br label %for.cond55, !dbg !6676, !llvm.loop !6677

for.end112:                                       ; preds = %for.cond55
  %101 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6679
  %lock113 = getelementptr inbounds %struct.udc, %struct.udc* %101, i32 0, i32 1, !dbg !6680
  store %struct.spinlock* %lock113, %struct.spinlock** %lock.addr.i226, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !6681, !srcloc !4826
  %102 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i226, align 8, !dbg !6682
  %103 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %102, i32 0, i32 0, !dbg !6682
  %rlock.i227 = bitcast %union.anon.4* %103 to %struct.raw_spinlock*, !dbg !6682
  %104 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6683
  %driver114 = getelementptr inbounds %struct.udc, %struct.udc* %104, i32 0, i32 3, !dbg !6684
  %105 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver114, align 8, !dbg !6684
  %setup115 = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %105, i32 0, i32 4, !dbg !6685
  %106 = load i32 (%struct.usb_gadget*, %struct.usb_ctrlrequest*)*, i32 (%struct.usb_gadget*, %struct.usb_ctrlrequest*)** %setup115, align 8, !dbg !6685
  %107 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6686
  %gadget116 = getelementptr inbounds %struct.udc, %struct.udc* %107, i32 0, i32 0, !dbg !6687
  %call117 = call i32 %106(%struct.usb_gadget* %gadget116, %struct.usb_ctrlrequest* bitcast (%union.udc_setup_data* @setup_data to %struct.usb_ctrlrequest*)) #11, !dbg !6683
  store i32 %call117, i32* %tmp, align 4, !dbg !6688
  %108 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6689
  %lock118 = getelementptr inbounds %struct.udc, %struct.udc* %108, i32 0, i32 1, !dbg !6690
  store %struct.spinlock* %lock118, %struct.spinlock** %lock.addr.i228, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !6691, !srcloc !4838
  %109 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i228, align 8, !dbg !6692
  %110 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %109, i32 0, i32 0, !dbg !6692
  %rlock.i229 = bitcast %union.anon.4* %110 to %struct.raw_spinlock*, !dbg !6692
  br label %if.end119, !dbg !6693

if.end119:                                        ; preds = %for.end112, %if.end36
  %111 = load i32, i32* %dev_irq.addr, align 4, !dbg !6694
  %and120 = and i32 %111, 8, !dbg !6695
  %tobool121 = icmp ne i32 %and120, 0, !dbg !6695
  br i1 %tobool121, label %if.then122, label %if.end176, !dbg !6696

if.then122:                                       ; preds = %if.end119
  store i32 1, i32* %ret_val, align 4, !dbg !6697
  store i32 0, i32* @soft_reset_occured, align 4, !dbg !6698
  %112 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6699
  %waiting_zlp_ack_ep0in = getelementptr inbounds %struct.udc, %struct.udc* %112, i32 0, i32 4, !dbg !6700
  %bf.load123 = load i8, i8* %waiting_zlp_ack_ep0in, align 8, !dbg !6701
  %bf.clear124 = and i8 %bf.load123, -3, !dbg !6701
  store i8 %bf.clear124, i8* %waiting_zlp_ack_ep0in, align 8, !dbg !6701
  %113 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6702
  %set_cfg_not_acked125 = getelementptr inbounds %struct.udc, %struct.udc* %113, i32 0, i32 4, !dbg !6703
  %bf.load126 = load i8, i8* %set_cfg_not_acked125, align 8, !dbg !6704
  %bf.clear127 = and i8 %bf.load126, -5, !dbg !6704
  store i8 %bf.clear127, i8* %set_cfg_not_acked125, align 8, !dbg !6704
  %114 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6705
  %call128 = call i32 @udc_mask_unused_interrupts(%struct.udc* %114) #11, !dbg !6706
  %115 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6707
  %lock129 = getelementptr inbounds %struct.udc, %struct.udc* %115, i32 0, i32 1, !dbg !6708
  store %struct.spinlock* %lock129, %struct.spinlock** %lock.addr.i230, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !6709, !srcloc !4826
  %116 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i230, align 8, !dbg !6710
  %117 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %116, i32 0, i32 0, !dbg !6710
  %rlock.i231 = bitcast %union.anon.4* %117 to %struct.raw_spinlock*, !dbg !6710
  %118 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6711
  %sys_suspended = getelementptr inbounds %struct.udc, %struct.udc* %118, i32 0, i32 4, !dbg !6713
  %bf.load130 = load i8, i8* %sys_suspended, align 8, !dbg !6713
  %bf.lshr131 = lshr i8 %bf.load130, 5, !dbg !6713
  %bf.clear132 = and i8 %bf.lshr131, 1, !dbg !6713
  %bf.cast = zext i8 %bf.clear132 to i32, !dbg !6713
  %tobool133 = icmp ne i32 %bf.cast, 0, !dbg !6711
  br i1 %tobool133, label %land.lhs.true, label %if.end143, !dbg !6714

land.lhs.true:                                    ; preds = %if.then122
  %119 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6715
  %driver134 = getelementptr inbounds %struct.udc, %struct.udc* %119, i32 0, i32 3, !dbg !6716
  %120 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver134, align 8, !dbg !6716
  %resume = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %120, i32 0, i32 7, !dbg !6717
  %121 = load void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)** %resume, align 8, !dbg !6717
  %tobool135 = icmp ne void (%struct.usb_gadget*)* %121, null, !dbg !6715
  br i1 %tobool135, label %if.then136, label %if.end143, !dbg !6718

if.then136:                                       ; preds = %land.lhs.true
  %122 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6719
  %driver137 = getelementptr inbounds %struct.udc, %struct.udc* %122, i32 0, i32 3, !dbg !6721
  %123 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver137, align 8, !dbg !6721
  %resume138 = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %123, i32 0, i32 7, !dbg !6722
  %124 = load void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)** %resume138, align 8, !dbg !6722
  %125 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6723
  %gadget139 = getelementptr inbounds %struct.udc, %struct.udc* %125, i32 0, i32 0, !dbg !6724
  call void %124(%struct.usb_gadget* %gadget139) #11, !dbg !6719
  %126 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6725
  %sys_suspended140 = getelementptr inbounds %struct.udc, %struct.udc* %126, i32 0, i32 4, !dbg !6726
  %bf.load141 = load i8, i8* %sys_suspended140, align 8, !dbg !6727
  %bf.clear142 = and i8 %bf.load141, -33, !dbg !6727
  store i8 %bf.clear142, i8* %sys_suspended140, align 8, !dbg !6727
  br label %if.end143, !dbg !6728

if.end143:                                        ; preds = %if.then136, %land.lhs.true, %if.then122
  %127 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6729
  %gadget144 = getelementptr inbounds %struct.udc, %struct.udc* %127, i32 0, i32 0, !dbg !6730
  %128 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6731
  %driver145 = getelementptr inbounds %struct.udc, %struct.udc* %128, i32 0, i32 3, !dbg !6732
  %129 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver145, align 8, !dbg !6732
  call void @usb_gadget_udc_reset(%struct.usb_gadget* %gadget144, %struct.usb_gadget_driver* %129) #11, !dbg !6733
  %130 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6734
  %lock146 = getelementptr inbounds %struct.udc, %struct.udc* %130, i32 0, i32 1, !dbg !6735
  store %struct.spinlock* %lock146, %struct.spinlock** %lock.addr.i232, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !6736, !srcloc !4838
  %131 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i232, align 8, !dbg !6737
  %132 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %131, i32 0, i32 0, !dbg !6737
  %rlock.i233 = bitcast %union.anon.4* %132 to %struct.raw_spinlock*, !dbg !6737
  %133 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6738
  %ep147 = getelementptr inbounds %struct.udc, %struct.udc* %133, i32 0, i32 2, !dbg !6739
  %arrayidx148 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep147, i64 0, i64 0, !dbg !6738
  call void @empty_req_queue(%struct.udc_ep* %arrayidx148) #11, !dbg !6740
  %134 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6741
  %regs149 = getelementptr inbounds %struct.udc, %struct.udc* %134, i32 0, i32 9, !dbg !6742
  %135 = load %struct.udc_regs*, %struct.udc_regs** %regs149, align 8, !dbg !6742
  %136 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6743
  %ep150 = getelementptr inbounds %struct.udc, %struct.udc* %136, i32 0, i32 2, !dbg !6744
  %arrayidx151 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep150, i64 0, i64 0, !dbg !6743
  call void @ep_init(%struct.udc_regs* %135, %struct.udc_ep* %arrayidx151) #11, !dbg !6745
  %137 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6746
  %regs152 = getelementptr inbounds %struct.udc, %struct.udc* %137, i32 0, i32 9, !dbg !6747
  %138 = load %struct.udc_regs*, %struct.udc_regs** %regs152, align 8, !dbg !6747
  %sts153 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %138, i32 0, i32 2, !dbg !6748
  %139 = bitcast i32* %sts153 to i8*, !dbg !6749
  %call154 = call i32 @readl(i8* %139) #11, !dbg !6750
  store i32 %call154, i32* %tmp, align 4, !dbg !6751
  %140 = load i32, i32* %tmp, align 4, !dbg !6752
  %and155 = and i32 %140, 32768, !dbg !6754
  %tobool156 = icmp ne i32 %and155, 0, !dbg !6754
  br i1 %tobool156, label %if.end161, label %land.lhs.true157, !dbg !6755

land.lhs.true157:                                 ; preds = %if.end143
  %141 = load i32, i32* @soft_reset_after_usbreset_occured, align 4, !dbg !6756
  %tobool158 = icmp ne i32 %141, 0, !dbg !6756
  br i1 %tobool158, label %if.end161, label %if.then159, !dbg !6757

if.then159:                                       ; preds = %land.lhs.true157
  %142 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6758
  call void @udc_soft_reset(%struct.udc* %142) #11, !dbg !6760
  %143 = load i32, i32* @soft_reset_after_usbreset_occured, align 4, !dbg !6761
  %inc160 = add i32 %143, 1, !dbg !6761
  store i32 %inc160, i32* @soft_reset_after_usbreset_occured, align 4, !dbg !6761
  br label %if.end161, !dbg !6762

if.end161:                                        ; preds = %if.then159, %land.lhs.true157, %if.end143
  %144 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6763
  %regs162 = getelementptr inbounds %struct.udc, %struct.udc* %144, i32 0, i32 9, !dbg !6764
  %145 = load %struct.udc_regs*, %struct.udc_regs** %regs162, align 8, !dbg !6764
  %cfg163 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %145, i32 0, i32 0, !dbg !6765
  %146 = bitcast i32* %cfg163 to i8*, !dbg !6766
  %call164 = call i32 @readl(i8* %146) #11, !dbg !6767
  store i32 %call164, i32* %tmp, align 4, !dbg !6768
  %147 = load i32, i32* %tmp, align 4, !dbg !6769
  %or165 = or i32 %147, 536870912, !dbg !6770
  %148 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6771
  %regs166 = getelementptr inbounds %struct.udc, %struct.udc* %148, i32 0, i32 9, !dbg !6772
  %149 = load %struct.udc_regs*, %struct.udc_regs** %regs166, align 8, !dbg !6772
  %cfg167 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %149, i32 0, i32 0, !dbg !6773
  %150 = bitcast i32* %cfg167 to i8*, !dbg !6774
  call void @writel(i32 %or165, i8* %150) #11, !dbg !6775
  %151 = load i32, i32* %tmp, align 4, !dbg !6776
  %152 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6777
  %regs168 = getelementptr inbounds %struct.udc, %struct.udc* %152, i32 0, i32 9, !dbg !6778
  %153 = load %struct.udc_regs*, %struct.udc_regs** %regs168, align 8, !dbg !6778
  %cfg169 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %153, i32 0, i32 0, !dbg !6779
  %154 = bitcast i32* %cfg169 to i8*, !dbg !6780
  call void @writel(i32 %151, i8* %154) #11, !dbg !6781
  %155 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6782
  call void @udc_basic_init(%struct.udc* %155) #11, !dbg !6783
  %156 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6784
  %call170 = call i32 @udc_enable_dev_setup_interrupts(%struct.udc* %156) #11, !dbg !6785
  %157 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6786
  %regs171 = getelementptr inbounds %struct.udc, %struct.udc* %157, i32 0, i32 9, !dbg !6787
  %158 = load %struct.udc_regs*, %struct.udc_regs** %regs171, align 8, !dbg !6787
  %irqmsk = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %158, i32 0, i32 4, !dbg !6788
  %159 = bitcast i32* %irqmsk to i8*, !dbg !6789
  %call172 = call i32 @readl(i8* %159) #11, !dbg !6790
  store i32 %call172, i32* %tmp, align 4, !dbg !6791
  %160 = load i32, i32* %tmp, align 4, !dbg !6792
  %and173 = and i32 %160, -17, !dbg !6792
  store i32 %and173, i32* %tmp, align 4, !dbg !6792
  %161 = load i32, i32* %tmp, align 4, !dbg !6793
  %162 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6794
  %regs174 = getelementptr inbounds %struct.udc, %struct.udc* %162, i32 0, i32 9, !dbg !6795
  %163 = load %struct.udc_regs*, %struct.udc_regs** %regs174, align 8, !dbg !6795
  %irqmsk175 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %163, i32 0, i32 4, !dbg !6796
  %164 = bitcast i32* %irqmsk175 to i8*, !dbg !6797
  call void @writel(i32 %161, i8* %164) #11, !dbg !6798
  br label %if.end176, !dbg !6799

if.end176:                                        ; preds = %if.end161, %if.end119
  %165 = load i32, i32* %dev_irq.addr, align 4, !dbg !6800
  %and177 = and i32 %165, 16, !dbg !6801
  %tobool178 = icmp ne i32 %and177, 0, !dbg !6801
  br i1 %tobool178, label %if.then179, label %if.end193, !dbg !6802

if.then179:                                       ; preds = %if.end176
  store i32 1, i32* %ret_val, align 4, !dbg !6803
  %166 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6804
  %driver180 = getelementptr inbounds %struct.udc, %struct.udc* %166, i32 0, i32 3, !dbg !6805
  %167 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver180, align 8, !dbg !6805
  %suspend = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %167, i32 0, i32 6, !dbg !6806
  %168 = load void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)** %suspend, align 8, !dbg !6806
  %tobool181 = icmp ne void (%struct.usb_gadget*)* %168, null, !dbg !6804
  br i1 %tobool181, label %if.then182, label %if.end192, !dbg !6807

if.then182:                                       ; preds = %if.then179
  %169 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6808
  %lock183 = getelementptr inbounds %struct.udc, %struct.udc* %169, i32 0, i32 1, !dbg !6809
  store %struct.spinlock* %lock183, %struct.spinlock** %lock.addr.i234, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !6810, !srcloc !4826
  %170 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i234, align 8, !dbg !6811
  %171 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %170, i32 0, i32 0, !dbg !6811
  %rlock.i235 = bitcast %union.anon.4* %171 to %struct.raw_spinlock*, !dbg !6811
  %172 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6812
  %sys_suspended184 = getelementptr inbounds %struct.udc, %struct.udc* %172, i32 0, i32 4, !dbg !6813
  %bf.load185 = load i8, i8* %sys_suspended184, align 8, !dbg !6814
  %bf.clear186 = and i8 %bf.load185, -33, !dbg !6814
  %bf.set187 = or i8 %bf.clear186, 32, !dbg !6814
  store i8 %bf.set187, i8* %sys_suspended184, align 8, !dbg !6814
  %173 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6815
  %driver188 = getelementptr inbounds %struct.udc, %struct.udc* %173, i32 0, i32 3, !dbg !6816
  %174 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver188, align 8, !dbg !6816
  %suspend189 = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %174, i32 0, i32 6, !dbg !6817
  %175 = load void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)** %suspend189, align 8, !dbg !6817
  %176 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6818
  %gadget190 = getelementptr inbounds %struct.udc, %struct.udc* %176, i32 0, i32 0, !dbg !6819
  call void %175(%struct.usb_gadget* %gadget190) #11, !dbg !6815
  %177 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6820
  %lock191 = getelementptr inbounds %struct.udc, %struct.udc* %177, i32 0, i32 1, !dbg !6821
  store %struct.spinlock* %lock191, %struct.spinlock** %lock.addr.i236, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !6822, !srcloc !4838
  %178 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i236, align 8, !dbg !6823
  %179 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %178, i32 0, i32 0, !dbg !6823
  %rlock.i237 = bitcast %union.anon.4* %179 to %struct.raw_spinlock*, !dbg !6823
  br label %if.end192, !dbg !6824

if.end192:                                        ; preds = %if.then182, %if.then179
  br label %if.end193, !dbg !6825

if.end193:                                        ; preds = %if.end192, %if.end176
  %180 = load i32, i32* %dev_irq.addr, align 4, !dbg !6826
  %and194 = and i32 %180, 64, !dbg !6828
  %tobool195 = icmp ne i32 %and194, 0, !dbg !6828
  br i1 %tobool195, label %if.then196, label %if.end206, !dbg !6829

if.then196:                                       ; preds = %if.end193
  store i32 1, i32* %ret_val, align 4, !dbg !6830
  store i32 0, i32* @soft_reset_after_usbreset_occured, align 4, !dbg !6832
  %181 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6833
  %ep197 = getelementptr inbounds %struct.udc, %struct.udc* %181, i32 0, i32 2, !dbg !6834
  %arrayidx198 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep197, i64 0, i64 0, !dbg !6833
  call void @empty_req_queue(%struct.udc_ep* %arrayidx198) #11, !dbg !6835
  %182 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6836
  %regs199 = getelementptr inbounds %struct.udc, %struct.udc* %182, i32 0, i32 9, !dbg !6837
  %183 = load %struct.udc_regs*, %struct.udc_regs** %regs199, align 8, !dbg !6837
  %184 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6838
  %ep200 = getelementptr inbounds %struct.udc, %struct.udc* %184, i32 0, i32 2, !dbg !6839
  %arrayidx201 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep200, i64 0, i64 0, !dbg !6838
  call void @ep_init(%struct.udc_regs* %183, %struct.udc_ep* %arrayidx201) #11, !dbg !6840
  %185 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6841
  call void @udc_setup_endpoints(%struct.udc* %185) #11, !dbg !6842
  %186 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6843
  %dev202 = getelementptr inbounds %struct.udc, %struct.udc* %186, i32 0, i32 21, !dbg !6843
  %187 = load %struct.device*, %struct.device** %dev202, align 8, !dbg !6843
  %188 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6843
  %gadget203 = getelementptr inbounds %struct.udc, %struct.udc* %188, i32 0, i32 0, !dbg !6843
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget203, i32 0, i32 5, !dbg !6843
  %189 = load i32, i32* %speed, align 8, !dbg !6843
  %call204 = call i8* @usb_speed_string(i32 %189) #11, !dbg !6843
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %187, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8* %call204) #12, !dbg !6843
  %190 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6844
  call void @activate_control_endpoints(%struct.udc* %190) #11, !dbg !6845
  %191 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6846
  %call205 = call i32 @udc_enable_ep0_interrupts(%struct.udc* %191) #11, !dbg !6847
  br label %if.end206, !dbg !6848

if.end206:                                        ; preds = %if.then196, %if.end193
  %192 = load i32, i32* %dev_irq.addr, align 4, !dbg !6849
  %and207 = and i32 %192, 128, !dbg !6851
  %tobool208 = icmp ne i32 %and207, 0, !dbg !6851
  br i1 %tobool208, label %if.then209, label %if.end223, !dbg !6852

if.then209:                                       ; preds = %if.end206
  store i32 1, i32* %ret_val, align 4, !dbg !6853
  %193 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6855
  %regs210 = getelementptr inbounds %struct.udc, %struct.udc* %193, i32 0, i32 9, !dbg !6856
  %194 = load %struct.udc_regs*, %struct.udc_regs** %regs210, align 8, !dbg !6856
  %sts211 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %194, i32 0, i32 2, !dbg !6857
  %195 = bitcast i32* %sts211 to i8*, !dbg !6858
  %call212 = call i32 @readl(i8* %195) #11, !dbg !6859
  store i32 %call212, i32* %tmp, align 4, !dbg !6860
  %196 = load i32, i32* %tmp, align 4, !dbg !6861
  %and213 = and i32 %196, 131072, !dbg !6863
  %tobool214 = icmp ne i32 %and213, 0, !dbg !6863
  br i1 %tobool214, label %if.end222, label %if.then215, !dbg !6864

if.then215:                                       ; preds = %if.then209
  %197 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6865
  %regs216 = getelementptr inbounds %struct.udc, %struct.udc* %197, i32 0, i32 9, !dbg !6867
  %198 = load %struct.udc_regs*, %struct.udc_regs** %regs216, align 8, !dbg !6867
  %irqmsk217 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %198, i32 0, i32 4, !dbg !6868
  %199 = bitcast i32* %irqmsk217 to i8*, !dbg !6869
  %call218 = call i32 @readl(i8* %199) #11, !dbg !6870
  store i32 %call218, i32* %tmp, align 4, !dbg !6871
  %200 = load i32, i32* %tmp, align 4, !dbg !6872
  %or219 = or i32 %200, 16, !dbg !6872
  store i32 %or219, i32* %tmp, align 4, !dbg !6872
  %201 = load i32, i32* %tmp, align 4, !dbg !6873
  %202 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6874
  %regs220 = getelementptr inbounds %struct.udc, %struct.udc* %202, i32 0, i32 9, !dbg !6875
  %203 = load %struct.udc_regs*, %struct.udc_regs** %regs220, align 8, !dbg !6875
  %irqmsk221 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %203, i32 0, i32 4, !dbg !6876
  %204 = bitcast i32* %irqmsk221 to i8*, !dbg !6877
  call void @writel(i32 %201, i8* %204) #11, !dbg !6878
  %205 = load %struct.udc*, %struct.udc** @udc, align 8, !dbg !6879
  call void @usb_disconnect(%struct.udc* %205) #11, !dbg !6880
  br label %if.end222, !dbg !6881

if.end222:                                        ; preds = %if.then215, %if.then209
  br label %if.end223, !dbg !6882

if.end223:                                        ; preds = %if.end222, %if.end206
  %206 = load i32, i32* %ret_val, align 4, !dbg !6883
  ret i32 %206, !dbg !6884
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @gadget_release(%struct.device* %pdev) #0 !dbg !6885 {
entry:
  %pdev.addr = alloca %struct.device*, align 8
  %dev = alloca %struct.amd5536udc*, align 8
  store %struct.device* %pdev, %struct.device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %pdev.addr, metadata !6886, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.declare(metadata %struct.amd5536udc** %dev, metadata !6888, metadata !DIExpression()), !dbg !6891
  %0 = load %struct.device*, %struct.device** %pdev.addr, align 8, !dbg !6892
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #11, !dbg !6893
  %1 = bitcast i8* %call to %struct.amd5536udc*, !dbg !6893
  store %struct.amd5536udc* %1, %struct.amd5536udc** %dev, align 8, !dbg !6891
  %2 = load %struct.amd5536udc*, %struct.amd5536udc** %dev, align 8, !dbg !6894
  %3 = bitcast %struct.amd5536udc* %2 to i8*, !dbg !6894
  call void @kfree(i8* %3) #11, !dbg !6895
  ret void, !dbg !6896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !6897 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6900, metadata !DIExpression()), !dbg !6901
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6902
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !6903
  %1 = load i8*, i8** %driver_data, align 8, !dbg !6903
  ret i8* %1, !dbg !6904
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @udc_remove(%struct.udc* %dev) #0 !dbg !6905 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !6906, metadata !DIExpression()), !dbg !6907
  %0 = load i32, i32* @stop_timer, align 4, !dbg !6908
  %inc = add i32 %0, 1, !dbg !6908
  store i32 %inc, i32* @stop_timer, align 4, !dbg !6908
  %call = call i32 @timer_pending(%struct.timer_list* @udc_timer) #11, !dbg !6909
  %tobool = icmp ne i32 %call, 0, !dbg !6909
  br i1 %tobool, label %if.then, label %if.end, !dbg !6911

if.then:                                          ; preds = %entry
  call void @wait_for_completion(%struct.completion* @on_exit) #11, !dbg !6912
  br label %if.end, !dbg !6912

if.end:                                           ; preds = %if.then, %entry
  %call1 = call i32 @del_timer(%struct.timer_list* @udc_timer) #11, !dbg !6913
  %1 = load i32, i32* @stop_pollstall_timer, align 4, !dbg !6914
  %inc2 = add i32 %1, 1, !dbg !6914
  store i32 %inc2, i32* @stop_pollstall_timer, align 4, !dbg !6914
  %call3 = call i32 @timer_pending(%struct.timer_list* @udc_pollstall_timer) #11, !dbg !6915
  %tobool4 = icmp ne i32 %call3, 0, !dbg !6915
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !6917

if.then5:                                         ; preds = %if.end
  call void @wait_for_completion(%struct.completion* @on_pollstall_exit) #11, !dbg !6918
  br label %if.end6, !dbg !6918

if.end6:                                          ; preds = %if.then5, %if.end
  %call7 = call i32 @del_timer(%struct.timer_list* @udc_pollstall_timer) #11, !dbg !6919
  store %struct.udc* null, %struct.udc** @udc, align 8, !dbg !6920
  ret void, !dbg !6921
}

; Function Attrs: noredzone
declare dso_local void @wait_for_completion(%struct.completion*) #2

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @free_dma_pools(%struct.udc* %dev) #0 !dbg !6922 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !6923, metadata !DIExpression()), !dbg !6924
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6925
  %stp_requests = getelementptr inbounds %struct.udc, %struct.udc* %0, i32 0, i32 14, !dbg !6926
  %1 = load %struct.dma_pool*, %struct.dma_pool** %stp_requests, align 8, !dbg !6926
  %2 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6927
  %ep = getelementptr inbounds %struct.udc, %struct.udc* %2, i32 0, i32 2, !dbg !6928
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep, i64 0, i64 16, !dbg !6927
  %td = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx, i32 0, i32 7, !dbg !6929
  %3 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !6929
  %4 = bitcast %struct.udc_data_dma* %3 to i8*, !dbg !6927
  %5 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6930
  %ep1 = getelementptr inbounds %struct.udc, %struct.udc* %5, i32 0, i32 2, !dbg !6931
  %arrayidx2 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep1, i64 0, i64 16, !dbg !6930
  %td_phys = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx2, i32 0, i32 4, !dbg !6932
  %6 = load i64, i64* %td_phys, align 8, !dbg !6932
  call void @dma_pool_free(%struct.dma_pool* %1, i8* %4, i64 %6) #11, !dbg !6933
  %7 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6934
  %stp_requests3 = getelementptr inbounds %struct.udc, %struct.udc* %7, i32 0, i32 14, !dbg !6935
  %8 = load %struct.dma_pool*, %struct.dma_pool** %stp_requests3, align 8, !dbg !6935
  %9 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6936
  %ep4 = getelementptr inbounds %struct.udc, %struct.udc* %9, i32 0, i32 2, !dbg !6937
  %arrayidx5 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep4, i64 0, i64 16, !dbg !6936
  %td_stp = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx5, i32 0, i32 6, !dbg !6938
  %10 = load %struct.udc_stp_dma*, %struct.udc_stp_dma** %td_stp, align 8, !dbg !6938
  %11 = bitcast %struct.udc_stp_dma* %10 to i8*, !dbg !6936
  %12 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6939
  %ep6 = getelementptr inbounds %struct.udc, %struct.udc* %12, i32 0, i32 2, !dbg !6940
  %arrayidx7 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep6, i64 0, i64 16, !dbg !6939
  %td_stp_dma = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx7, i32 0, i32 5, !dbg !6941
  %13 = load i64, i64* %td_stp_dma, align 8, !dbg !6941
  call void @dma_pool_free(%struct.dma_pool* %8, i8* %11, i64 %13) #11, !dbg !6942
  %14 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6943
  %stp_requests8 = getelementptr inbounds %struct.udc, %struct.udc* %14, i32 0, i32 14, !dbg !6944
  %15 = load %struct.dma_pool*, %struct.dma_pool** %stp_requests8, align 8, !dbg !6944
  call void @dma_pool_destroy(%struct.dma_pool* %15) #11, !dbg !6945
  %16 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6946
  %data_requests = getelementptr inbounds %struct.udc, %struct.udc* %16, i32 0, i32 13, !dbg !6947
  %17 = load %struct.dma_pool*, %struct.dma_pool** %data_requests, align 8, !dbg !6947
  call void @dma_pool_destroy(%struct.dma_pool* %17) #11, !dbg !6948
  ret void, !dbg !6949
}

; Function Attrs: noredzone
declare dso_local void @dma_pool_free(%struct.dma_pool*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local void @dma_pool_destroy(%struct.dma_pool*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @init_dma_pools(%struct.udc* %dev) #0 !dbg !6950 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.udc*, align 8
  %td_stp = alloca %struct.udc_stp_dma*, align 8
  %td_data = alloca %struct.udc_data_dma*, align 8
  %retval1 = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !6951, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.declare(metadata %struct.udc_stp_dma** %td_stp, metadata !6953, metadata !DIExpression()), !dbg !6954
  call void @llvm.dbg.declare(metadata %struct.udc_data_dma** %td_data, metadata !6955, metadata !DIExpression()), !dbg !6956
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6957, metadata !DIExpression()), !dbg !6958
  %0 = load i8, i8* @use_dma_ppb, align 1, !dbg !6959
  %tobool = trunc i8 %0 to i1, !dbg !6959
  br i1 %tobool, label %if.then, label %if.else, !dbg !6961

if.then:                                          ; preds = %entry
  store i32 0, i32* @use_dma_bufferfill_mode, align 4, !dbg !6962
  br label %if.end, !dbg !6964

if.else:                                          ; preds = %entry
  store i8 0, i8* @use_dma_ppb_du, align 1, !dbg !6965
  store i32 1, i32* @use_dma_bufferfill_mode, align 4, !dbg !6967
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6968
  %dev2 = getelementptr inbounds %struct.udc, %struct.udc* %1, i32 0, i32 21, !dbg !6969
  %2 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !6969
  %call = call %struct.dma_pool* @dma_pool_create(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), %struct.device* %2, i64 16, i64 0, i64 0) #11, !dbg !6970
  %3 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6971
  %data_requests = getelementptr inbounds %struct.udc, %struct.udc* %3, i32 0, i32 13, !dbg !6972
  store %struct.dma_pool* %call, %struct.dma_pool** %data_requests, align 8, !dbg !6973
  %4 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6974
  %data_requests3 = getelementptr inbounds %struct.udc, %struct.udc* %4, i32 0, i32 13, !dbg !6976
  %5 = load %struct.dma_pool*, %struct.dma_pool** %data_requests3, align 8, !dbg !6976
  %tobool4 = icmp ne %struct.dma_pool* %5, null, !dbg !6974
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !6977

if.then5:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !6978
  br label %return, !dbg !6978

if.end6:                                          ; preds = %if.end
  %6 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6980
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %6, i32 0, i32 9, !dbg !6981
  %7 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !6981
  %ctl = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %7, i32 0, i32 1, !dbg !6982
  %8 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6983
  %ep = getelementptr inbounds %struct.udc, %struct.udc* %8, i32 0, i32 2, !dbg !6984
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep, i64 0, i64 0, !dbg !6983
  %dma = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx, i32 0, i32 3, !dbg !6985
  store i32* %ctl, i32** %dma, align 8, !dbg !6986
  %9 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6987
  %dev7 = getelementptr inbounds %struct.udc, %struct.udc* %9, i32 0, i32 21, !dbg !6988
  %10 = load %struct.device*, %struct.device** %dev7, align 8, !dbg !6988
  %call8 = call %struct.dma_pool* @dma_pool_create(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), %struct.device* %10, i64 16, i64 0, i64 0) #11, !dbg !6989
  %11 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6990
  %stp_requests = getelementptr inbounds %struct.udc, %struct.udc* %11, i32 0, i32 14, !dbg !6991
  store %struct.dma_pool* %call8, %struct.dma_pool** %stp_requests, align 8, !dbg !6992
  %12 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !6993
  %stp_requests9 = getelementptr inbounds %struct.udc, %struct.udc* %12, i32 0, i32 14, !dbg !6995
  %13 = load %struct.dma_pool*, %struct.dma_pool** %stp_requests9, align 8, !dbg !6995
  %tobool10 = icmp ne %struct.dma_pool* %13, null, !dbg !6993
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !6996

if.then11:                                        ; preds = %if.end6
  store i32 -12, i32* %retval1, align 4, !dbg !6997
  br label %err_create_dma_pool, !dbg !6999

if.end12:                                         ; preds = %if.end6
  %14 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7000
  %stp_requests13 = getelementptr inbounds %struct.udc, %struct.udc* %14, i32 0, i32 14, !dbg !7001
  %15 = load %struct.dma_pool*, %struct.dma_pool** %stp_requests13, align 8, !dbg !7001
  %16 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7002
  %ep14 = getelementptr inbounds %struct.udc, %struct.udc* %16, i32 0, i32 2, !dbg !7003
  %arrayidx15 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep14, i64 0, i64 16, !dbg !7002
  %td_stp_dma = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx15, i32 0, i32 5, !dbg !7004
  %call16 = call i8* @dma_pool_alloc(%struct.dma_pool* %15, i32 3264, i64* %td_stp_dma) #11, !dbg !7005
  %17 = bitcast i8* %call16 to %struct.udc_stp_dma*, !dbg !7005
  store %struct.udc_stp_dma* %17, %struct.udc_stp_dma** %td_stp, align 8, !dbg !7006
  %18 = load %struct.udc_stp_dma*, %struct.udc_stp_dma** %td_stp, align 8, !dbg !7007
  %tobool17 = icmp ne %struct.udc_stp_dma* %18, null, !dbg !7007
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !7009

if.then18:                                        ; preds = %if.end12
  store i32 -12, i32* %retval1, align 4, !dbg !7010
  br label %err_alloc_dma, !dbg !7012

if.end19:                                         ; preds = %if.end12
  %19 = load %struct.udc_stp_dma*, %struct.udc_stp_dma** %td_stp, align 8, !dbg !7013
  %20 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7014
  %ep20 = getelementptr inbounds %struct.udc, %struct.udc* %20, i32 0, i32 2, !dbg !7015
  %arrayidx21 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep20, i64 0, i64 16, !dbg !7014
  %td_stp22 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx21, i32 0, i32 6, !dbg !7016
  store %struct.udc_stp_dma* %19, %struct.udc_stp_dma** %td_stp22, align 8, !dbg !7017
  %21 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7018
  %stp_requests23 = getelementptr inbounds %struct.udc, %struct.udc* %21, i32 0, i32 14, !dbg !7019
  %22 = load %struct.dma_pool*, %struct.dma_pool** %stp_requests23, align 8, !dbg !7019
  %23 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7020
  %ep24 = getelementptr inbounds %struct.udc, %struct.udc* %23, i32 0, i32 2, !dbg !7021
  %arrayidx25 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep24, i64 0, i64 16, !dbg !7020
  %td_phys = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx25, i32 0, i32 4, !dbg !7022
  %call26 = call i8* @dma_pool_alloc(%struct.dma_pool* %22, i32 3264, i64* %td_phys) #11, !dbg !7023
  %24 = bitcast i8* %call26 to %struct.udc_data_dma*, !dbg !7023
  store %struct.udc_data_dma* %24, %struct.udc_data_dma** %td_data, align 8, !dbg !7024
  %25 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data, align 8, !dbg !7025
  %tobool27 = icmp ne %struct.udc_data_dma* %25, null, !dbg !7025
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !7027

if.then28:                                        ; preds = %if.end19
  store i32 -12, i32* %retval1, align 4, !dbg !7028
  br label %err_alloc_phys, !dbg !7030

if.end29:                                         ; preds = %if.end19
  %26 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data, align 8, !dbg !7031
  %27 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7032
  %ep30 = getelementptr inbounds %struct.udc, %struct.udc* %27, i32 0, i32 2, !dbg !7033
  %arrayidx31 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep30, i64 0, i64 16, !dbg !7032
  %td = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx31, i32 0, i32 7, !dbg !7034
  store %struct.udc_data_dma* %26, %struct.udc_data_dma** %td, align 8, !dbg !7035
  store i32 0, i32* %retval, align 4, !dbg !7036
  br label %return, !dbg !7036

err_alloc_phys:                                   ; preds = %if.then28
  call void @llvm.dbg.label(metadata !7037), !dbg !7038
  %28 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7039
  %stp_requests32 = getelementptr inbounds %struct.udc, %struct.udc* %28, i32 0, i32 14, !dbg !7040
  %29 = load %struct.dma_pool*, %struct.dma_pool** %stp_requests32, align 8, !dbg !7040
  %30 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7041
  %ep33 = getelementptr inbounds %struct.udc, %struct.udc* %30, i32 0, i32 2, !dbg !7042
  %arrayidx34 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep33, i64 0, i64 16, !dbg !7041
  %td_stp35 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx34, i32 0, i32 6, !dbg !7043
  %31 = load %struct.udc_stp_dma*, %struct.udc_stp_dma** %td_stp35, align 8, !dbg !7043
  %32 = bitcast %struct.udc_stp_dma* %31 to i8*, !dbg !7041
  %33 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7044
  %ep36 = getelementptr inbounds %struct.udc, %struct.udc* %33, i32 0, i32 2, !dbg !7045
  %arrayidx37 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep36, i64 0, i64 16, !dbg !7044
  %td_stp_dma38 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx37, i32 0, i32 5, !dbg !7046
  %34 = load i64, i64* %td_stp_dma38, align 8, !dbg !7046
  call void @dma_pool_free(%struct.dma_pool* %29, i8* %32, i64 %34) #11, !dbg !7047
  br label %err_alloc_dma, !dbg !7047

err_alloc_dma:                                    ; preds = %err_alloc_phys, %if.then18
  call void @llvm.dbg.label(metadata !7048), !dbg !7049
  %35 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7050
  %stp_requests39 = getelementptr inbounds %struct.udc, %struct.udc* %35, i32 0, i32 14, !dbg !7051
  %36 = load %struct.dma_pool*, %struct.dma_pool** %stp_requests39, align 8, !dbg !7051
  call void @dma_pool_destroy(%struct.dma_pool* %36) #11, !dbg !7052
  %37 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7053
  %stp_requests40 = getelementptr inbounds %struct.udc, %struct.udc* %37, i32 0, i32 14, !dbg !7054
  store %struct.dma_pool* null, %struct.dma_pool** %stp_requests40, align 8, !dbg !7055
  br label %err_create_dma_pool, !dbg !7053

err_create_dma_pool:                              ; preds = %err_alloc_dma, %if.then11
  call void @llvm.dbg.label(metadata !7056), !dbg !7057
  %38 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7058
  %data_requests41 = getelementptr inbounds %struct.udc, %struct.udc* %38, i32 0, i32 13, !dbg !7059
  %39 = load %struct.dma_pool*, %struct.dma_pool** %data_requests41, align 8, !dbg !7059
  call void @dma_pool_destroy(%struct.dma_pool* %39) #11, !dbg !7060
  %40 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7061
  %data_requests42 = getelementptr inbounds %struct.udc, %struct.udc* %40, i32 0, i32 13, !dbg !7062
  store %struct.dma_pool* null, %struct.dma_pool** %data_requests42, align 8, !dbg !7063
  %41 = load i32, i32* %retval1, align 4, !dbg !7064
  store i32 %41, i32* %retval, align 4, !dbg !7065
  br label %return, !dbg !7065

return:                                           ; preds = %err_create_dma_pool, %if.end29, %if.then5
  %42 = load i32, i32* %retval, align 4, !dbg !7066
  ret i32 %42, !dbg !7066
}

; Function Attrs: noredzone
declare dso_local %struct.dma_pool* @dma_pool_create(i8*, %struct.device*, i64, i64, i64) #2

; Function Attrs: noredzone
declare dso_local i8* @dma_pool_alloc(%struct.dma_pool*, i32, i64*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @udc_probe(%struct.udc* %dev) #0 !dbg !7067 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.udc*, align 8
  %tmp = alloca [128 x i8], align 16
  %reg = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !7068, metadata !DIExpression()), !dbg !7069
  call void @llvm.dbg.declare(metadata [128 x i8]* %tmp, metadata !7070, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !7072, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !7074, metadata !DIExpression()), !dbg !7075
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7076
  %gadget = getelementptr inbounds %struct.udc, %struct.udc* %0, i32 0, i32 0, !dbg !7077
  %ops = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 2, !dbg !7078
  store %struct.usb_gadget_ops* @udc_ops, %struct.usb_gadget_ops** %ops, align 8, !dbg !7079
  %1 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7080
  %gadget2 = getelementptr inbounds %struct.udc, %struct.udc* %1, i32 0, i32 0, !dbg !7081
  %dev3 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget2, i32 0, i32 9, !dbg !7082
  %call = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #11, !dbg !7083
  %2 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7084
  %gadget4 = getelementptr inbounds %struct.udc, %struct.udc* %2, i32 0, i32 0, !dbg !7085
  %name = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget4, i32 0, i32 8, !dbg !7086
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @name, i64 0, i64 0), i8** %name, align 8, !dbg !7087
  %3 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7088
  %gadget5 = getelementptr inbounds %struct.udc, %struct.udc* %3, i32 0, i32 0, !dbg !7089
  %max_speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget5, i32 0, i32 6, !dbg !7090
  store i32 3, i32* %max_speed, align 4, !dbg !7091
  %4 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7092
  %call6 = call i32 @startup_registers(%struct.udc* %4) #11, !dbg !7093
  %5 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7094
  %dev7 = getelementptr inbounds %struct.udc, %struct.udc* %5, i32 0, i32 21, !dbg !7094
  %6 = load %struct.device*, %struct.device** %dev7, align 8, !dbg !7094
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @mod_desc, i64 0, i64 0)) #12, !dbg !7094
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %tmp, i64 0, i64 0, !dbg !7095
  %7 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7096
  %irq = getelementptr inbounds %struct.udc, %struct.udc* %7, i32 0, i32 17, !dbg !7097
  %8 = load i32, i32* %irq, align 8, !dbg !7097
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32 %8) #11, !dbg !7098
  %9 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7099
  %chiprev = getelementptr inbounds %struct.udc, %struct.udc* %9, i32 0, i32 6, !dbg !7101
  %10 = load i16, i16* %chiprev, align 8, !dbg !7101
  %conv = zext i16 %10 to i32, !dbg !7099
  %cmp = icmp eq i32 %conv, 1, !dbg !7102
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7103

lor.lhs.false:                                    ; preds = %entry
  %11 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7104
  %chiprev10 = getelementptr inbounds %struct.udc, %struct.udc* %11, i32 0, i32 6, !dbg !7105
  %12 = load i16, i16* %chiprev10, align 8, !dbg !7105
  %conv11 = zext i16 %12 to i32, !dbg !7104
  %cmp12 = icmp eq i32 %conv11, 2, !dbg !7106
  br i1 %cmp12, label %if.then, label %if.end32, !dbg !7107

if.then:                                          ; preds = %lor.lhs.false, %entry
  %13 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7108
  %dev14 = getelementptr inbounds %struct.udc, %struct.udc* %13, i32 0, i32 21, !dbg !7108
  %14 = load %struct.device*, %struct.device** %dev14, align 8, !dbg !7108
  %arraydecay15 = getelementptr inbounds [128 x i8], [128 x i8]* %tmp, i64 0, i64 0, !dbg !7108
  %15 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7108
  %phys_addr = getelementptr inbounds %struct.udc, %struct.udc* %15, i32 0, i32 15, !dbg !7108
  %16 = load i64, i64* %phys_addr, align 8, !dbg !7108
  %17 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7108
  %chiprev16 = getelementptr inbounds %struct.udc, %struct.udc* %17, i32 0, i32 6, !dbg !7108
  %18 = load i16, i16* %chiprev16, align 8, !dbg !7108
  %conv17 = zext i16 %18 to i32, !dbg !7108
  %19 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7108
  %chiprev18 = getelementptr inbounds %struct.udc, %struct.udc* %19, i32 0, i32 6, !dbg !7108
  %20 = load i16, i16* %chiprev18, align 8, !dbg !7108
  %conv19 = zext i16 %20 to i32, !dbg !7108
  %cmp20 = icmp eq i32 %conv19, 1, !dbg !7108
  %21 = zext i1 %cmp20 to i64, !dbg !7108
  %cond = select i1 %cmp20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), !dbg !7108
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %14, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay15, i64 %16, i32 %conv17, i8* %cond) #12, !dbg !7108
  %arraydecay22 = getelementptr inbounds [128 x i8], [128 x i8]* %tmp, i64 0, i64 0, !dbg !7110
  %call23 = call i8* @strcpy(i8* %arraydecay22, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)) #11, !dbg !7111
  %22 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7112
  %chiprev24 = getelementptr inbounds %struct.udc, %struct.udc* %22, i32 0, i32 6, !dbg !7114
  %23 = load i16, i16* %chiprev24, align 8, !dbg !7114
  %conv25 = zext i16 %23 to i32, !dbg !7112
  %cmp26 = icmp eq i32 %conv25, 1, !dbg !7115
  br i1 %cmp26, label %if.then28, label %if.end, !dbg !7116

if.then28:                                        ; preds = %if.then
  %24 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7117
  %dev29 = getelementptr inbounds %struct.udc, %struct.udc* %24, i32 0, i32 21, !dbg !7117
  %25 = load %struct.device*, %struct.device** %dev29, align 8, !dbg !7117
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %25, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i64 0, i64 0)) #12, !dbg !7117
  store i32 -19, i32* %retval1, align 4, !dbg !7119
  br label %finished, !dbg !7120

if.end:                                           ; preds = %if.then
  %26 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7121
  %dev30 = getelementptr inbounds %struct.udc, %struct.udc* %26, i32 0, i32 21, !dbg !7121
  %27 = load %struct.device*, %struct.device** %dev30, align 8, !dbg !7121
  %arraydecay31 = getelementptr inbounds [128 x i8], [128 x i8]* %tmp, i64 0, i64 0, !dbg !7121
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %27, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0), i8* %arraydecay31) #12, !dbg !7121
  br label %if.end32, !dbg !7122

if.end32:                                         ; preds = %if.end, %lor.lhs.false
  %28 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7123
  store %struct.udc* %28, %struct.udc** @udc, align 8, !dbg !7124
  %29 = load %struct.udc*, %struct.udc** @udc, align 8, !dbg !7125
  %dev33 = getelementptr inbounds %struct.udc, %struct.udc* %29, i32 0, i32 21, !dbg !7126
  %30 = load %struct.device*, %struct.device** %dev33, align 8, !dbg !7126
  %31 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7127
  %gadget34 = getelementptr inbounds %struct.udc, %struct.udc* %31, i32 0, i32 0, !dbg !7128
  %call35 = call i32 @usb_add_gadget_udc_release(%struct.device* %30, %struct.usb_gadget* %gadget34, void (%struct.device*)* @gadget_release) #11, !dbg !7129
  store i32 %call35, i32* %retval1, align 4, !dbg !7130
  %32 = load i32, i32* %retval1, align 4, !dbg !7131
  %tobool = icmp ne i32 %32, 0, !dbg !7131
  br i1 %tobool, label %if.then36, label %if.end37, !dbg !7133

if.then36:                                        ; preds = %if.end32
  br label %finished, !dbg !7134

if.end37:                                         ; preds = %if.end32
  call void @init_timer_key(%struct.timer_list* @udc_timer, void (%struct.timer_list*)* @udc_timer_function, i32 0, i8* null, %struct.lock_class_key* null) #11, !dbg !7135
  call void @init_timer_key(%struct.timer_list* @udc_pollstall_timer, void (%struct.timer_list*)* @udc_pollstall_timer_function, i32 0, i8* null, %struct.lock_class_key* null) #11, !dbg !7136
  %33 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7137
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %33, i32 0, i32 9, !dbg !7138
  %34 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !7138
  %ctl = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %34, i32 0, i32 1, !dbg !7139
  %35 = bitcast i32* %ctl to i8*, !dbg !7140
  %call38 = call i32 @readl(i8* %35) #11, !dbg !7141
  store i32 %call38, i32* %reg, align 4, !dbg !7142
  %36 = load i32, i32* %reg, align 4, !dbg !7143
  %or = or i32 %36, 1024, !dbg !7143
  store i32 %or, i32* %reg, align 4, !dbg !7143
  %37 = load i32, i32* %reg, align 4, !dbg !7144
  %38 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7145
  %regs39 = getelementptr inbounds %struct.udc, %struct.udc* %38, i32 0, i32 9, !dbg !7146
  %39 = load %struct.udc_regs*, %struct.udc_regs** %regs39, align 8, !dbg !7146
  %ctl40 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %39, i32 0, i32 1, !dbg !7147
  %40 = bitcast i32* %ctl40 to i8*, !dbg !7148
  call void @writel(i32 %37, i8* %40) #11, !dbg !7149
  %41 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7150
  call void @print_regs(%struct.udc* %41) #11, !dbg !7151
  store i32 0, i32* %retval, align 4, !dbg !7152
  br label %return, !dbg !7152

finished:                                         ; preds = %if.then36, %if.then28
  call void @llvm.dbg.label(metadata !7153), !dbg !7154
  %42 = load i32, i32* %retval1, align 4, !dbg !7155
  store i32 %42, i32* %retval, align 4, !dbg !7156
  br label %return, !dbg !7156

return:                                           ; preds = %finished, %if.end37
  %43 = load i32, i32* %retval, align 4, !dbg !7157
  ret i32 %43, !dbg !7157
}

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @startup_registers(%struct.udc* %dev) #0 !dbg !7158 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %tmp = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !7159, metadata !DIExpression()), !dbg !7160
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7161, metadata !DIExpression()), !dbg !7162
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7163
  call void @udc_soft_reset(%struct.udc* %0) #11, !dbg !7164
  %1 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7165
  %call = call i32 @udc_mask_unused_interrupts(%struct.udc* %1) #11, !dbg !7166
  %2 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7167
  call void @udc_basic_init(%struct.udc* %2) #11, !dbg !7168
  %3 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7169
  call void @udc_setup_endpoints(%struct.udc* %3) #11, !dbg !7170
  %4 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7171
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %4, i32 0, i32 9, !dbg !7172
  %5 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !7172
  %cfg = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %5, i32 0, i32 0, !dbg !7173
  %6 = bitcast i32* %cfg to i8*, !dbg !7174
  %call1 = call i32 @readl(i8* %6) #11, !dbg !7175
  store i32 %call1, i32* %tmp, align 4, !dbg !7176
  %7 = load i8, i8* @use_fullspeed, align 1, !dbg !7177
  %tobool = trunc i8 %7 to i1, !dbg !7177
  br i1 %tobool, label %if.then, label %if.else, !dbg !7179

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %tmp, align 4, !dbg !7180
  %and = and i32 %8, -4, !dbg !7180
  %or = or i32 %and, 1, !dbg !7180
  store i32 %or, i32* %tmp, align 4, !dbg !7181
  br label %if.end, !dbg !7182

if.else:                                          ; preds = %entry
  %9 = load i32, i32* %tmp, align 4, !dbg !7183
  %and2 = and i32 %9, -4, !dbg !7183
  store i32 %and2, i32* %tmp, align 4, !dbg !7184
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %tmp, align 4, !dbg !7185
  %11 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7186
  %regs3 = getelementptr inbounds %struct.udc, %struct.udc* %11, i32 0, i32 9, !dbg !7187
  %12 = load %struct.udc_regs*, %struct.udc_regs** %regs3, align 8, !dbg !7187
  %cfg4 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %12, i32 0, i32 0, !dbg !7188
  %13 = bitcast i32* %cfg4 to i8*, !dbg !7189
  call void @writel(i32 %10, i8* %13) #11, !dbg !7190
  ret i32 0, !dbg !7191
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i32 @usb_add_gadget_udc_release(%struct.device*, %struct.usb_gadget*, void (%struct.device*)*) #2

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @udc_timer_function(%struct.timer_list* %unused) #0 !dbg !7192 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !7193, metadata !DIExpression()), !dbg !7195
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7197, metadata !DIExpression()), !dbg !7199
  %unused.addr = alloca %struct.timer_list*, align 8
  %tmp = alloca i32, align 4
  store %struct.timer_list* %unused, %struct.timer_list** %unused.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %unused.addr, metadata !7201, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7203, metadata !DIExpression()), !dbg !7204
  store %struct.spinlock* @udc_irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !7205
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !7208, !srcloc !7210
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7211
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !7211
  %rlock.i = bitcast %union.anon.4* %1 to %struct.raw_spinlock*, !dbg !7211
  %2 = load i32, i32* @set_rde, align 4, !dbg !7213
  %cmp = icmp sgt i32 %2, 0, !dbg !7215
  br i1 %cmp, label %if.then, label %if.else17, !dbg !7216

if.then:                                          ; preds = %entry
  %3 = load i32, i32* @set_rde, align 4, !dbg !7217
  %cmp1 = icmp sgt i32 %3, 1, !dbg !7220
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !7221

if.then2:                                         ; preds = %if.then
  %4 = load %struct.udc*, %struct.udc** @udc, align 8, !dbg !7222
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %4, i32 0, i32 9, !dbg !7224
  %5 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !7224
  %ctl = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %5, i32 0, i32 1, !dbg !7225
  %6 = bitcast i32* %ctl to i8*, !dbg !7226
  %call = call i32 @readl(i8* %6) #11, !dbg !7227
  store i32 %call, i32* %tmp, align 4, !dbg !7228
  %7 = load i32, i32* %tmp, align 4, !dbg !7229
  %or = or i32 %7, 4, !dbg !7229
  store i32 %or, i32* %tmp, align 4, !dbg !7229
  %8 = load i32, i32* %tmp, align 4, !dbg !7230
  %9 = load %struct.udc*, %struct.udc** @udc, align 8, !dbg !7231
  %regs3 = getelementptr inbounds %struct.udc, %struct.udc* %9, i32 0, i32 9, !dbg !7232
  %10 = load %struct.udc_regs*, %struct.udc_regs** %regs3, align 8, !dbg !7232
  %ctl4 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %10, i32 0, i32 1, !dbg !7233
  %11 = bitcast i32* %ctl4 to i8*, !dbg !7234
  call void @writel(i32 %8, i8* %11) #11, !dbg !7235
  store i32 -1, i32* @set_rde, align 4, !dbg !7236
  br label %if.end16, !dbg !7237

if.else:                                          ; preds = %if.then
  %12 = load %struct.udc*, %struct.udc** @udc, align 8, !dbg !7238
  %regs5 = getelementptr inbounds %struct.udc, %struct.udc* %12, i32 0, i32 9, !dbg !7240
  %13 = load %struct.udc_regs*, %struct.udc_regs** %regs5, align 8, !dbg !7240
  %sts = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %13, i32 0, i32 2, !dbg !7241
  %14 = bitcast i32* %sts to i8*, !dbg !7242
  %call6 = call i32 @readl(i8* %14) #11, !dbg !7243
  %and = and i32 %call6, 32768, !dbg !7244
  %tobool = icmp ne i32 %and, 0, !dbg !7244
  br i1 %tobool, label %if.then7, label %if.else10, !dbg !7245

if.then7:                                         ; preds = %if.else
  %15 = load volatile i64, i64* @jiffies, align 8, !dbg !7246
  %add = add i64 %15, 25, !dbg !7248
  store i64 %add, i64* getelementptr inbounds (%struct.timer_list, %struct.timer_list* @udc_timer, i32 0, i32 1), align 8, !dbg !7249
  %16 = load i32, i32* @stop_timer, align 4, !dbg !7250
  %tobool8 = icmp ne i32 %16, 0, !dbg !7250
  br i1 %tobool8, label %if.end, label %if.then9, !dbg !7252

if.then9:                                         ; preds = %if.then7
  call void @add_timer(%struct.timer_list* @udc_timer) #11, !dbg !7253
  br label %if.end, !dbg !7253

if.end:                                           ; preds = %if.then9, %if.then7
  br label %if.end15, !dbg !7254

if.else10:                                        ; preds = %if.else
  %17 = load i32, i32* @set_rde, align 4, !dbg !7255
  %inc = add i32 %17, 1, !dbg !7255
  store i32 %inc, i32* @set_rde, align 4, !dbg !7255
  %18 = load volatile i64, i64* @jiffies, align 8, !dbg !7257
  %add11 = add i64 %18, 250, !dbg !7258
  store i64 %add11, i64* getelementptr inbounds (%struct.timer_list, %struct.timer_list* @udc_timer, i32 0, i32 1), align 8, !dbg !7259
  %19 = load i32, i32* @stop_timer, align 4, !dbg !7260
  %tobool12 = icmp ne i32 %19, 0, !dbg !7260
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !7262

if.then13:                                        ; preds = %if.else10
  call void @add_timer(%struct.timer_list* @udc_timer) #11, !dbg !7263
  br label %if.end14, !dbg !7263

if.end14:                                         ; preds = %if.then13, %if.else10
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then2
  br label %if.end18, !dbg !7264

if.else17:                                        ; preds = %entry
  store i32 -1, i32* @set_rde, align 4, !dbg !7265
  br label %if.end18

if.end18:                                         ; preds = %if.else17, %if.end16
  store %struct.spinlock* @udc_irq_spinlock, %struct.spinlock** %lock.addr.i22, align 8
  call void @arch_local_irq_enable() #13, !dbg !7266
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !7269, !srcloc !7271
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !7272
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !7272
  %rlock.i23 = bitcast %union.anon.4* %21 to %struct.raw_spinlock*, !dbg !7272
  %22 = load i32, i32* @stop_timer, align 4, !dbg !7274
  %tobool19 = icmp ne i32 %22, 0, !dbg !7274
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !7276

if.then20:                                        ; preds = %if.end18
  call void @complete(%struct.completion* @on_exit) #11, !dbg !7277
  br label %if.end21, !dbg !7277

if.end21:                                         ; preds = %if.then20, %if.end18
  ret void, !dbg !7278
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @udc_pollstall_timer_function(%struct.timer_list* %unused) #0 !dbg !7279 {
entry:
  %lock.addr.i16 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i16, metadata !7193, metadata !DIExpression()), !dbg !7280
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7197, metadata !DIExpression()), !dbg !7282
  %unused.addr = alloca %struct.timer_list*, align 8
  %ep = alloca %struct.udc_ep*, align 8
  %halted = alloca i32, align 4
  store %struct.timer_list* %unused, %struct.timer_list** %unused.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %unused.addr, metadata !7284, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep, metadata !7286, metadata !DIExpression()), !dbg !7287
  call void @llvm.dbg.declare(metadata i32* %halted, metadata !7288, metadata !DIExpression()), !dbg !7289
  store i32 0, i32* %halted, align 4, !dbg !7289
  store %struct.spinlock* @udc_stall_spinlock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !7290
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !7291, !srcloc !7210
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7292
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !7292
  %rlock.i = bitcast %union.anon.4* %1 to %struct.raw_spinlock*, !dbg !7292
  %2 = load %struct.udc*, %struct.udc** @udc, align 8, !dbg !7293
  %ep1 = getelementptr inbounds %struct.udc, %struct.udc* %2, i32 0, i32 2, !dbg !7294
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep1, i64 0, i64 2, !dbg !7293
  store %struct.udc_ep* %arrayidx, %struct.udc_ep** %ep, align 8, !dbg !7295
  %3 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7296
  call void @udc_handle_halt_state(%struct.udc_ep* %3) #11, !dbg !7297
  %4 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7298
  %halted2 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %4, i32 0, i32 16, !dbg !7300
  %5 = load i32, i32* %halted2, align 8, !dbg !7300
  %tobool = icmp ne i32 %5, 0, !dbg !7298
  br i1 %tobool, label %if.then, label %if.end, !dbg !7301

if.then:                                          ; preds = %entry
  store i32 1, i32* %halted, align 4, !dbg !7302
  br label %if.end, !dbg !7303

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.udc*, %struct.udc** @udc, align 8, !dbg !7304
  %ep3 = getelementptr inbounds %struct.udc, %struct.udc* %6, i32 0, i32 2, !dbg !7305
  %arrayidx4 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep3, i64 0, i64 18, !dbg !7304
  store %struct.udc_ep* %arrayidx4, %struct.udc_ep** %ep, align 8, !dbg !7306
  %7 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7307
  call void @udc_handle_halt_state(%struct.udc_ep* %7) #11, !dbg !7308
  %8 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7309
  %halted5 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %8, i32 0, i32 16, !dbg !7311
  %9 = load i32, i32* %halted5, align 8, !dbg !7311
  %tobool6 = icmp ne i32 %9, 0, !dbg !7309
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7312

if.then7:                                         ; preds = %if.end
  store i32 1, i32* %halted, align 4, !dbg !7313
  br label %if.end8, !dbg !7314

if.end8:                                          ; preds = %if.then7, %if.end
  %10 = load i32, i32* @stop_pollstall_timer, align 4, !dbg !7315
  %tobool9 = icmp ne i32 %10, 0, !dbg !7315
  br i1 %tobool9, label %if.end12, label %land.lhs.true, !dbg !7317

land.lhs.true:                                    ; preds = %if.end8
  %11 = load i32, i32* %halted, align 4, !dbg !7318
  %tobool10 = icmp ne i32 %11, 0, !dbg !7318
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !7319

if.then11:                                        ; preds = %land.lhs.true
  %12 = load volatile i64, i64* @jiffies, align 8, !dbg !7320
  %add = add i64 %12, 0, !dbg !7322
  store i64 %add, i64* getelementptr inbounds (%struct.timer_list, %struct.timer_list* @udc_pollstall_timer, i32 0, i32 1), align 8, !dbg !7323
  call void @add_timer(%struct.timer_list* @udc_pollstall_timer) #11, !dbg !7324
  br label %if.end12, !dbg !7325

if.end12:                                         ; preds = %if.then11, %land.lhs.true, %if.end8
  store %struct.spinlock* @udc_stall_spinlock, %struct.spinlock** %lock.addr.i16, align 8
  call void @arch_local_irq_enable() #13, !dbg !7326
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !7327, !srcloc !7271
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i16, align 8, !dbg !7328
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !7328
  %rlock.i17 = bitcast %union.anon.4* %14 to %struct.raw_spinlock*, !dbg !7328
  %15 = load i32, i32* @stop_pollstall_timer, align 4, !dbg !7329
  %tobool13 = icmp ne i32 %15, 0, !dbg !7329
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !7331

if.then14:                                        ; preds = %if.end12
  call void @complete(%struct.completion* @on_pollstall_exit) #11, !dbg !7332
  br label %if.end15, !dbg !7332

if.end15:                                         ; preds = %if.then14, %if.end12
  ret void, !dbg !7333
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @print_regs(%struct.udc* %dev) #0 !dbg !7334 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !7335, metadata !DIExpression()), !dbg !7336
  %0 = load i8, i8* @use_dma, align 1, !dbg !7337
  %tobool = trunc i8 %0 to i1, !dbg !7337
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !7339

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @use_dma_ppb, align 1, !dbg !7340
  %tobool1 = trunc i8 %1 to i1, !dbg !7340
  br i1 %tobool1, label %land.lhs.true2, label %if.else, !dbg !7341

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load i8, i8* @use_dma_ppb_du, align 1, !dbg !7342
  %tobool3 = trunc i8 %2 to i1, !dbg !7342
  br i1 %tobool3, label %if.else, label %if.then, !dbg !7343

if.then:                                          ; preds = %land.lhs.true2
  %3 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7344
  %dev4 = getelementptr inbounds %struct.udc, %struct.udc* %3, i32 0, i32 21, !dbg !7344
  %4 = load %struct.device*, %struct.device** %dev4, align 8, !dbg !7344
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0)) #12, !dbg !7344
  br label %if.end12, !dbg !7346

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %5 = load i8, i8* @use_dma, align 1, !dbg !7347
  %tobool5 = trunc i8 %5 to i1, !dbg !7347
  br i1 %tobool5, label %land.lhs.true6, label %if.end, !dbg !7349

land.lhs.true6:                                   ; preds = %if.else
  %6 = load i8, i8* @use_dma_ppb, align 1, !dbg !7350
  %tobool7 = trunc i8 %6 to i1, !dbg !7350
  br i1 %tobool7, label %land.lhs.true8, label %if.end, !dbg !7351

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %7 = load i8, i8* @use_dma_ppb_du, align 1, !dbg !7352
  %tobool9 = trunc i8 %7 to i1, !dbg !7352
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !7353

if.then10:                                        ; preds = %land.lhs.true8
  %8 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7354
  %dev11 = getelementptr inbounds %struct.udc, %struct.udc* %8, i32 0, i32 21, !dbg !7354
  %9 = load %struct.device*, %struct.device** %dev11, align 8, !dbg !7354
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0)) #12, !dbg !7354
  br label %if.end, !dbg !7356

if.end:                                           ; preds = %if.then10, %land.lhs.true8, %land.lhs.true6, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %10 = load i8, i8* @use_dma, align 1, !dbg !7357
  %tobool13 = trunc i8 %10 to i1, !dbg !7357
  br i1 %tobool13, label %land.lhs.true14, label %if.end18, !dbg !7359

land.lhs.true14:                                  ; preds = %if.end12
  %11 = load i32, i32* @use_dma_bufferfill_mode, align 4, !dbg !7360
  %tobool15 = icmp ne i32 %11, 0, !dbg !7360
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !7361

if.then16:                                        ; preds = %land.lhs.true14
  %12 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7362
  %dev17 = getelementptr inbounds %struct.udc, %struct.udc* %12, i32 0, i32 21, !dbg !7362
  %13 = load %struct.device*, %struct.device** %dev17, align 8, !dbg !7362
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %13, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53, i64 0, i64 0)) #12, !dbg !7362
  br label %if.end18, !dbg !7364

if.end18:                                         ; preds = %if.then16, %land.lhs.true14, %if.end12
  %14 = load i8, i8* @use_dma, align 1, !dbg !7365
  %tobool19 = trunc i8 %14 to i1, !dbg !7365
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !7367

if.then20:                                        ; preds = %if.end18
  %15 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7368
  %dev21 = getelementptr inbounds %struct.udc, %struct.udc* %15, i32 0, i32 21, !dbg !7368
  %16 = load %struct.device*, %struct.device** %dev21, align 8, !dbg !7368
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0)) #12, !dbg !7368
  br label %if.end22, !dbg !7368

if.end22:                                         ; preds = %if.then20, %if.end18
  ret void, !dbg !7369
}

; Function Attrs: noredzone
declare dso_local void @usb_gadget_unmap_request(%struct.usb_gadget*, %struct.usb_request*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #0 !dbg !7370 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7373, metadata !DIExpression()), !dbg !7374
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7375
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !7376
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7377
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #11, !dbg !7378
  ret void, !dbg !7379
}

; Function Attrs: noredzone
declare dso_local void @usb_gadget_giveback_request(%struct.usb_ep*, %struct.usb_request*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !7380 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7381, metadata !DIExpression()), !dbg !7382
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7383
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !7385
  br i1 %call, label %if.end, label %if.then, !dbg !7386

if.then:                                          ; preds = %entry
  br label %return, !dbg !7387

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7388
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7389
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7389
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7390
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7391
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7391
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !7392
  br label %return, !dbg !7393

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7393
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !7394 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !7395, metadata !DIExpression()), !dbg !7396
  br label %do.body, !dbg !7397

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7398

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !7400

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !7398

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7402
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7402
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !7402
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !7402
  br label %do.end3, !dbg !7402

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !7398

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7404
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7405
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !7406
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !7407
  ret void, !dbg !7408
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !7409 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7412, metadata !DIExpression()), !dbg !7413
  ret i1 true, !dbg !7414
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7415 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7418, metadata !DIExpression()), !dbg !7419
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7420, metadata !DIExpression()), !dbg !7421
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7422
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7423
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7424
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !7425
  br label %do.body, !dbg !7426

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !7427

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !7429

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !7427

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7431
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7431
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7431
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !7431
  br label %do.end5, !dbg !7431

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !7427

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !7433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hlist_unhashed_lockless(%struct.hlist_node* %h) #0 !dbg !7434 {
entry:
  %h.addr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.hlist_node**, align 8
  store %struct.hlist_node* %h, %struct.hlist_node** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %h.addr, metadata !7439, metadata !DIExpression()), !dbg !7440
  br label %do.body, !dbg !7441

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7443

do.end:                                           ; preds = %do.body
  %0 = load %struct.hlist_node*, %struct.hlist_node** %h.addr, align 8, !dbg !7441
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %0, i32 0, i32 1, !dbg !7441
  %1 = load volatile %struct.hlist_node**, %struct.hlist_node*** %pprev, align 8, !dbg !7441
  store %struct.hlist_node** %1, %struct.hlist_node*** %tmp, align 8, !dbg !7443
  %2 = load %struct.hlist_node**, %struct.hlist_node*** %tmp, align 8, !dbg !7441
  %tobool = icmp ne %struct.hlist_node** %2, null, !dbg !7445
  %lnot = xor i1 %tobool, true, !dbg !7445
  %lnot.ext = zext i1 %lnot to i32, !dbg !7445
  ret i32 %lnot.ext, !dbg !7446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !7447 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7448, metadata !DIExpression()), !dbg !7449
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7450, metadata !DIExpression()), !dbg !7451
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7452
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7453
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7454
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7454
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7455
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !7456
  ret void, !dbg !7457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7458 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7461, metadata !DIExpression()), !dbg !7462
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7463, metadata !DIExpression()), !dbg !7464
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7465, metadata !DIExpression()), !dbg !7466
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7467
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7469
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7470
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !7471
  br i1 %call, label %if.end, label %if.then, !dbg !7472

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !7473

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7474
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7475
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !7476
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !7477
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7478
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7479
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !7480
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !7481
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7482
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7483
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !7484
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !7485
  br label %do.body, !dbg !7486

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !7487

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !7489

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !7487

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7491
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7491
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !7491
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !7491
  br label %do.end7, !dbg !7491

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !7487

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !7493
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7494 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7497, metadata !DIExpression()), !dbg !7498
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7499, metadata !DIExpression()), !dbg !7500
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7501, metadata !DIExpression()), !dbg !7502
  ret i1 true, !dbg !7503
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_rxfifo_read_dwords(%struct.udc* %dev, i32* %buf, i32 %dwords) #0 !dbg !7504 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %buf.addr = alloca i32*, align 8
  %dwords.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !7507, metadata !DIExpression()), !dbg !7508
  store i32* %buf, i32** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %buf.addr, metadata !7509, metadata !DIExpression()), !dbg !7510
  store i32 %dwords, i32* %dwords.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dwords.addr, metadata !7511, metadata !DIExpression()), !dbg !7512
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7513, metadata !DIExpression()), !dbg !7514
  br label %do.body, !dbg !7515

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7516

do.end:                                           ; preds = %do.body
  store i32 0, i32* %i, align 4, !dbg !7518
  br label %for.cond, !dbg !7520

for.cond:                                         ; preds = %for.inc, %do.end
  %0 = load i32, i32* %i, align 4, !dbg !7521
  %1 = load i32, i32* %dwords.addr, align 4, !dbg !7523
  %cmp = icmp slt i32 %0, %1, !dbg !7524
  br i1 %cmp, label %for.body, label %for.end, !dbg !7525

for.body:                                         ; preds = %for.cond
  %2 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7526
  %rxfifo = getelementptr inbounds %struct.udc, %struct.udc* %2, i32 0, i32 11, !dbg !7527
  %3 = load i32*, i32** %rxfifo, align 8, !dbg !7527
  %4 = bitcast i32* %3 to i8*, !dbg !7526
  %call = call i32 @readl(i8* %4) #11, !dbg !7528
  %5 = load i32*, i32** %buf.addr, align 8, !dbg !7529
  %6 = load i32, i32* %i, align 4, !dbg !7530
  %idx.ext = sext i32 %6 to i64, !dbg !7531
  %add.ptr = getelementptr i32, i32* %5, i64 %idx.ext, !dbg !7531
  store i32 %call, i32* %add.ptr, align 4, !dbg !7532
  br label %for.inc, !dbg !7533

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !7534
  %inc = add i32 %7, 1, !dbg !7534
  store i32 %inc, i32* %i, align 4, !dbg !7534
  br label %for.cond, !dbg !7535, !llvm.loop !7536

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !7538
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @udc_ep0_set_rde(%struct.udc* %dev) #0 !dbg !7539 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !7540, metadata !DIExpression()), !dbg !7541
  %0 = load i8, i8* @use_dma, align 1, !dbg !7542
  %tobool = trunc i8 %0 to i1, !dbg !7542
  br i1 %tobool, label %if.then, label %if.end14, !dbg !7544

if.then:                                          ; preds = %entry
  %1 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7545
  %data_ep_enabled = getelementptr inbounds %struct.udc, %struct.udc* %1, i32 0, i32 4, !dbg !7548
  %bf.load = load i8, i8* %data_ep_enabled, align 8, !dbg !7548
  %bf.lshr = lshr i8 %bf.load, 3, !dbg !7548
  %bf.clear = and i8 %bf.lshr, 1, !dbg !7548
  %bf.cast = zext i8 %bf.clear to i32, !dbg !7548
  %tobool1 = icmp ne i32 %bf.cast, 0, !dbg !7545
  br i1 %tobool1, label %lor.lhs.false, label %if.then7, !dbg !7549

lor.lhs.false:                                    ; preds = %if.then
  %2 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7550
  %data_ep_queued = getelementptr inbounds %struct.udc, %struct.udc* %2, i32 0, i32 4, !dbg !7551
  %bf.load2 = load i8, i8* %data_ep_queued, align 8, !dbg !7551
  %bf.lshr3 = lshr i8 %bf.load2, 4, !dbg !7551
  %bf.clear4 = and i8 %bf.lshr3, 1, !dbg !7551
  %bf.cast5 = zext i8 %bf.clear4 to i32, !dbg !7551
  %tobool6 = icmp ne i32 %bf.cast5, 0, !dbg !7550
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !7552

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %3 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7553
  call void @udc_set_rde(%struct.udc* %3) #11, !dbg !7555
  br label %if.end13, !dbg !7556

if.else:                                          ; preds = %lor.lhs.false
  %4 = load i32, i32* @set_rde, align 4, !dbg !7557
  %cmp = icmp ne i32 %4, 0, !dbg !7560
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !7561

land.lhs.true:                                    ; preds = %if.else
  %call = call i32 @timer_pending(%struct.timer_list* @udc_timer) #11, !dbg !7562
  %tobool8 = icmp ne i32 %call, 0, !dbg !7562
  br i1 %tobool8, label %if.end12, label %if.then9, !dbg !7563

if.then9:                                         ; preds = %land.lhs.true
  %5 = load volatile i64, i64* @jiffies, align 8, !dbg !7564
  %add = add i64 %5, 25, !dbg !7566
  store i64 %add, i64* getelementptr inbounds (%struct.timer_list, %struct.timer_list* @udc_timer, i32 0, i32 1), align 8, !dbg !7567
  store i32 1, i32* @set_rde, align 4, !dbg !7568
  %6 = load i32, i32* @stop_timer, align 4, !dbg !7569
  %tobool10 = icmp ne i32 %6, 0, !dbg !7569
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !7571

if.then11:                                        ; preds = %if.then9
  call void @add_timer(%struct.timer_list* @udc_timer) #11, !dbg !7572
  br label %if.end, !dbg !7572

if.end:                                           ; preds = %if.then11, %if.then9
  br label %if.end12, !dbg !7573

if.end12:                                         ; preds = %if.end, %land.lhs.true, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then7
  br label %if.end14, !dbg !7574

if.end14:                                         ; preds = %if.end13, %entry
  ret void, !dbg !7575
}

; Function Attrs: noredzone
declare dso_local void @add_timer(%struct.timer_list*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_set_halt(%struct.usb_ep* %usbep, i32 %halt) #0 !dbg !7576 {
entry:
  %lock.addr.i78 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i78, metadata !7577, metadata !DIExpression()), !dbg !7581
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7583, metadata !DIExpression()), !dbg !7584
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7585, metadata !DIExpression()), !dbg !7590
  %retval = alloca i32, align 4
  %usbep.addr = alloca %struct.usb_ep*, align 8
  %halt.addr = alloca i32, align 4
  %ep = alloca %struct.udc_ep*, align 8
  %tmp = alloca i32, align 4
  %iflags = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %tmp2 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp3 = alloca %struct.udc_ep*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp21 = alloca i32, align 4
  %__dummy25 = alloca i64, align 8
  %__dummy226 = alloca i64, align 8
  %tmp29 = alloca i32, align 4
  store %struct.usb_ep* %usbep, %struct.usb_ep** %usbep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %usbep.addr, metadata !7597, metadata !DIExpression()), !dbg !7598
  store i32 %halt, i32* %halt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %halt.addr, metadata !7599, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep, metadata !7601, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7603, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.declare(metadata i64* %iflags, metadata !7605, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !7607, metadata !DIExpression()), !dbg !7608
  store i32 0, i32* %retval1, align 4, !dbg !7608
  %0 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !7609
  %tobool = icmp ne %struct.usb_ep* %0, null, !dbg !7609
  br i1 %tobool, label %if.end, label %if.then, !dbg !7611

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7612
  br label %return, !dbg !7612

if.end:                                           ; preds = %entry
  store i32 0, i32* %tmp2, align 4, !dbg !7613
  %1 = load i32, i32* %tmp2, align 4, !dbg !7616
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7617, metadata !DIExpression()), !dbg !7619
  %2 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !7619
  %3 = bitcast %struct.usb_ep* %2 to i8*, !dbg !7619
  store i8* %3, i8** %__mptr, align 8, !dbg !7619
  br label %do.body, !dbg !7619

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !7620

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !7619
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !7619
  %5 = bitcast i8* %add.ptr to %struct.udc_ep*, !dbg !7619
  store %struct.udc_ep* %5, %struct.udc_ep** %tmp3, align 8, !dbg !7620
  %6 = load %struct.udc_ep*, %struct.udc_ep** %tmp3, align 8, !dbg !7619
  store %struct.udc_ep* %6, %struct.udc_ep** %ep, align 8, !dbg !7622
  %7 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7623
  %ep4 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %7, i32 0, i32 0, !dbg !7625
  %desc = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep4, i32 0, i32 9, !dbg !7626
  %8 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc, align 8, !dbg !7626
  %tobool5 = icmp ne %struct.usb_endpoint_descriptor* %8, null, !dbg !7623
  br i1 %tobool5, label %if.end12, label %land.lhs.true, !dbg !7627

land.lhs.true:                                    ; preds = %do.end
  %9 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7628
  %num = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %9, i32 0, i32 18, !dbg !7629
  %10 = bitcast i24* %num to i32*, !dbg !7629
  %bf.load = load i32, i32* %10, align 8, !dbg !7629
  %bf.clear = and i32 %bf.load, 31, !dbg !7629
  %cmp = icmp ne i32 %bf.clear, 0, !dbg !7630
  br i1 %cmp, label %land.lhs.true6, label %if.end12, !dbg !7631

land.lhs.true6:                                   ; preds = %land.lhs.true
  %11 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7632
  %num7 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %11, i32 0, i32 18, !dbg !7633
  %12 = bitcast i24* %num7 to i32*, !dbg !7633
  %bf.load8 = load i32, i32* %12, align 8, !dbg !7633
  %bf.clear9 = and i32 %bf.load8, 31, !dbg !7633
  %cmp10 = icmp ne i32 %bf.clear9, 16, !dbg !7634
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !7635

if.then11:                                        ; preds = %land.lhs.true6
  store i32 -22, i32* %retval, align 4, !dbg !7636
  br label %return, !dbg !7636

if.end12:                                         ; preds = %land.lhs.true6, %land.lhs.true, %do.end
  %13 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7637
  %dev = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %13, i32 0, i32 14, !dbg !7639
  %14 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !7639
  %driver = getelementptr inbounds %struct.udc, %struct.udc* %14, i32 0, i32 3, !dbg !7640
  %15 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver, align 8, !dbg !7640
  %tobool13 = icmp ne %struct.usb_gadget_driver* %15, null, !dbg !7637
  br i1 %tobool13, label %lor.lhs.false, label %if.then16, !dbg !7641

lor.lhs.false:                                    ; preds = %if.end12
  %16 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7642
  %dev14 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %16, i32 0, i32 14, !dbg !7643
  %17 = load %struct.udc*, %struct.udc** %dev14, align 8, !dbg !7643
  %gadget = getelementptr inbounds %struct.udc, %struct.udc* %17, i32 0, i32 0, !dbg !7644
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !7645
  %18 = load i32, i32* %speed, align 8, !dbg !7645
  %cmp15 = icmp eq i32 %18, 0, !dbg !7646
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !7647

if.then16:                                        ; preds = %lor.lhs.false, %if.end12
  store i32 -108, i32* %retval, align 4, !dbg !7648
  br label %return, !dbg !7648

if.end17:                                         ; preds = %lor.lhs.false
  br label %do.body18, !dbg !7649

do.body18:                                        ; preds = %if.end17
  br label %do.body19, !dbg !7650

do.body19:                                        ; preds = %do.body18
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7651, metadata !DIExpression()), !dbg !7653
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7654, metadata !DIExpression()), !dbg !7653
  %cmp20 = icmp eq i64* %__dummy, %__dummy2, !dbg !7653
  %conv = zext i1 %cmp20 to i32, !dbg !7653
  store i32 1, i32* %tmp21, align 4, !dbg !7653
  %19 = load i32, i32* %tmp21, align 4, !dbg !7653
  br label %do.body22, !dbg !7655

do.body22:                                        ; preds = %do.body19
  br label %do.body23, !dbg !7656

do.body23:                                        ; preds = %do.body22
  br label %do.body24, !dbg !7657

do.body24:                                        ; preds = %do.body23
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !7659, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.declare(metadata i64* %__dummy226, metadata !7663, metadata !DIExpression()), !dbg !7662
  %cmp27 = icmp eq i64* %__dummy25, %__dummy226, !dbg !7662
  %conv28 = zext i1 %cmp27 to i32, !dbg !7662
  store i32 1, i32* %tmp29, align 4, !dbg !7662
  %20 = load i32, i32* %tmp29, align 4, !dbg !7662
  %call = call i64 @arch_local_irq_save() #11, !dbg !7664
  store i64 %call, i64* %iflags, align 8, !dbg !7664
  br label %do.end30, !dbg !7664

do.end30:                                         ; preds = %do.body24
  br label %do.end31, !dbg !7657

do.end31:                                         ; preds = %do.end30
  br label %do.body32, !dbg !7656

do.body32:                                        ; preds = %do.end31
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !7665, !srcloc !7666
  br label %do.body33, !dbg !7665

do.body33:                                        ; preds = %do.body32
  store %struct.spinlock* @udc_stall_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7667
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !7668
  %rlock.i = bitcast %union.anon.4* %22 to %struct.raw_spinlock*, !dbg !7668
  br label %do.end35, !dbg !7669

do.end35:                                         ; preds = %do.body33
  br label %do.end36, !dbg !7665

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !7656

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !7655

do.end38:                                         ; preds = %do.end37
  br label %do.end39, !dbg !7650

do.end39:                                         ; preds = %do.end38
  %23 = load i32, i32* %halt.addr, align 4, !dbg !7670
  %tobool40 = icmp ne i32 %23, 0, !dbg !7670
  br i1 %tobool40, label %if.then41, label %if.else62, !dbg !7672

if.then41:                                        ; preds = %do.end39
  %24 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7673
  %num42 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %24, i32 0, i32 18, !dbg !7676
  %25 = bitcast i24* %num42 to i32*, !dbg !7676
  %bf.load43 = load i32, i32* %25, align 8, !dbg !7676
  %bf.clear44 = and i32 %bf.load43, 31, !dbg !7676
  %cmp45 = icmp eq i32 %bf.clear44, 0, !dbg !7677
  br i1 %cmp45, label %if.then47, label %if.else, !dbg !7678

if.then47:                                        ; preds = %if.then41
  %26 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7679
  %dev48 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %26, i32 0, i32 14, !dbg !7680
  %27 = load %struct.udc*, %struct.udc** %dev48, align 8, !dbg !7680
  %stall_ep0in = getelementptr inbounds %struct.udc, %struct.udc* %27, i32 0, i32 4, !dbg !7681
  %bf.load49 = load i8, i8* %stall_ep0in, align 8, !dbg !7682
  %bf.clear50 = and i8 %bf.load49, -2, !dbg !7682
  %bf.set = or i8 %bf.clear50, 1, !dbg !7682
  store i8 %bf.set, i8* %stall_ep0in, align 8, !dbg !7682
  br label %if.end61, !dbg !7679

if.else:                                          ; preds = %if.then41
  %28 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7683
  %regs = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %28, i32 0, i32 1, !dbg !7685
  %29 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs, align 8, !dbg !7685
  %ctl = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %29, i32 0, i32 0, !dbg !7686
  %30 = bitcast i32* %ctl to i8*, !dbg !7687
  %call51 = call i32 @readl(i8* %30) #11, !dbg !7688
  store i32 %call51, i32* %tmp, align 4, !dbg !7689
  %31 = load i32, i32* %tmp, align 4, !dbg !7690
  %or = or i32 %31, 1, !dbg !7690
  store i32 %or, i32* %tmp, align 4, !dbg !7690
  %32 = load i32, i32* %tmp, align 4, !dbg !7691
  %33 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7692
  %regs52 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %33, i32 0, i32 1, !dbg !7693
  %34 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs52, align 8, !dbg !7693
  %ctl53 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %34, i32 0, i32 0, !dbg !7694
  %35 = bitcast i32* %ctl53 to i8*, !dbg !7695
  call void @writel(i32 %32, i8* %35) #11, !dbg !7696
  %36 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7697
  %halted = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %36, i32 0, i32 16, !dbg !7698
  store i32 1, i32* %halted, align 8, !dbg !7699
  %call54 = call i32 @timer_pending(%struct.timer_list* @udc_pollstall_timer) #11, !dbg !7700
  %tobool55 = icmp ne i32 %call54, 0, !dbg !7700
  br i1 %tobool55, label %if.end60, label %if.then56, !dbg !7702

if.then56:                                        ; preds = %if.else
  %37 = load volatile i64, i64* @jiffies, align 8, !dbg !7703
  %add = add i64 %37, 0, !dbg !7705
  store i64 %add, i64* getelementptr inbounds (%struct.timer_list, %struct.timer_list* @udc_pollstall_timer, i32 0, i32 1), align 8, !dbg !7706
  %38 = load i32, i32* @stop_pollstall_timer, align 4, !dbg !7707
  %tobool57 = icmp ne i32 %38, 0, !dbg !7707
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !7709

if.then58:                                        ; preds = %if.then56
  call void @add_timer(%struct.timer_list* @udc_pollstall_timer) #11, !dbg !7710
  br label %if.end59, !dbg !7712

if.end59:                                         ; preds = %if.then58, %if.then56
  br label %if.end60, !dbg !7713

if.end60:                                         ; preds = %if.end59, %if.else
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then47
  br label %if.end77, !dbg !7714

if.else62:                                        ; preds = %do.end39
  %39 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7715
  %halted63 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %39, i32 0, i32 16, !dbg !7718
  %40 = load i32, i32* %halted63, align 8, !dbg !7718
  %tobool64 = icmp ne i32 %40, 0, !dbg !7715
  br i1 %tobool64, label %if.then65, label %if.end76, !dbg !7719

if.then65:                                        ; preds = %if.else62
  %41 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7720
  %regs66 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %41, i32 0, i32 1, !dbg !7722
  %42 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs66, align 8, !dbg !7722
  %ctl67 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %42, i32 0, i32 0, !dbg !7723
  %43 = bitcast i32* %ctl67 to i8*, !dbg !7724
  %call68 = call i32 @readl(i8* %43) #11, !dbg !7725
  store i32 %call68, i32* %tmp, align 4, !dbg !7726
  %44 = load i32, i32* %tmp, align 4, !dbg !7727
  %and = and i32 %44, -2, !dbg !7728
  store i32 %and, i32* %tmp, align 4, !dbg !7729
  %45 = load i32, i32* %tmp, align 4, !dbg !7730
  %or69 = or i32 %45, 256, !dbg !7730
  store i32 %or69, i32* %tmp, align 4, !dbg !7730
  %46 = load i32, i32* %tmp, align 4, !dbg !7731
  %47 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7732
  %regs70 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %47, i32 0, i32 1, !dbg !7733
  %48 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs70, align 8, !dbg !7733
  %ctl71 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %48, i32 0, i32 0, !dbg !7734
  %49 = bitcast i32* %ctl71 to i8*, !dbg !7735
  call void @writel(i32 %46, i8* %49) #11, !dbg !7736
  %50 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7737
  %halted72 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %50, i32 0, i32 16, !dbg !7738
  store i32 0, i32* %halted72, align 8, !dbg !7739
  %51 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7740
  %52 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !7741
  %num73 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %52, i32 0, i32 18, !dbg !7742
  %53 = bitcast i24* %num73 to i32*, !dbg !7742
  %bf.load74 = load i32, i32* %53, align 8, !dbg !7742
  %bf.clear75 = and i32 %bf.load74, 31, !dbg !7742
  call void @UDC_QUEUE_CNAK(%struct.udc_ep* %51, i32 %bf.clear75) #11, !dbg !7743
  br label %if.end76, !dbg !7744

if.end76:                                         ; preds = %if.then65, %if.else62
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end61
  %54 = load i64, i64* %iflags, align 8, !dbg !7745
  store %struct.spinlock* @udc_stall_spinlock, %struct.spinlock** %lock.addr.i78, align 8
  store i64 %54, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !497, metadata !7746, metadata !DIExpression()) #5, !dbg !7749
  call void @llvm.dbg.declare(metadata !497, metadata !7750, metadata !DIExpression()) #5, !dbg !7749
  store i32 1, i32* %tmp.i, align 4, !dbg !7749
  %55 = load i32, i32* %tmp.i, align 4, !dbg !7749
  call void @llvm.dbg.declare(metadata !497, metadata !7751, metadata !DIExpression()) #5, !dbg !7756
  call void @llvm.dbg.declare(metadata !497, metadata !7757, metadata !DIExpression()) #5, !dbg !7756
  store i32 1, i32* %tmp8.i, align 4, !dbg !7756
  %56 = load i32, i32* %tmp8.i, align 4, !dbg !7756
  %57 = load i64, i64* %flags.addr.i, align 8, !dbg !7758
  call void @arch_local_irq_restore(i64 %57) #13, !dbg !7758
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !7759, !srcloc !7761
  %58 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i78, align 8, !dbg !7762
  %59 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %58, i32 0, i32 0, !dbg !7762
  %rlock.i79 = bitcast %union.anon.4* %59 to %struct.raw_spinlock*, !dbg !7762
  %60 = load i32, i32* %retval1, align 4, !dbg !7764
  store i32 %60, i32* %retval, align 4, !dbg !7765
  br label %return, !dbg !7765

return:                                           ; preds = %if.end77, %if.then16, %if.then11, %if.then
  %61 = load i32, i32* %retval, align 4, !dbg !7766
  ret i32 %61, !dbg !7766
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @UDC_QUEUE_CNAK(%struct.udc_ep* %ep, i32 %num) #0 !dbg !7767 {
entry:
  %ep.addr = alloca %struct.udc_ep*, align 8
  %num.addr = alloca i32, align 4
  store %struct.udc_ep* %ep, %struct.udc_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep.addr, metadata !7770, metadata !DIExpression()), !dbg !7771
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !7772, metadata !DIExpression()), !dbg !7773
  %0 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !7774
  %regs = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %0, i32 0, i32 1, !dbg !7776
  %1 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs, align 8, !dbg !7776
  %ctl = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %1, i32 0, i32 0, !dbg !7777
  %2 = bitcast i32* %ctl to i8*, !dbg !7778
  %call = call i32 @readl(i8* %2) #11, !dbg !7779
  %and = and i32 %call, 64, !dbg !7780
  %tobool = icmp ne i32 %and, 0, !dbg !7780
  br i1 %tobool, label %if.then, label %if.else, !dbg !7781

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %num.addr, align 4, !dbg !7782
  %shl = shl i32 1, %3, !dbg !7784
  %4 = load i32, i32* @cnak_pending, align 4, !dbg !7785
  %or = or i32 %4, %shl, !dbg !7785
  store i32 %or, i32* @cnak_pending, align 4, !dbg !7785
  %5 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !7786
  %naking = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %5, i32 0, i32 13, !dbg !7787
  store i32 1, i32* %naking, align 4, !dbg !7788
  br label %if.end, !dbg !7789

if.else:                                          ; preds = %entry
  %6 = load i32, i32* @cnak_pending, align 4, !dbg !7790
  %7 = load i32, i32* %num.addr, align 4, !dbg !7791
  %shl1 = shl i32 1, %7, !dbg !7792
  %neg = xor i32 %shl1, -1, !dbg !7793
  %and2 = and i32 %6, %neg, !dbg !7794
  store i32 %and2, i32* @cnak_pending, align 4, !dbg !7795
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7796
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @udc_process_cnak_queue(%struct.udc* %dev) #0 !dbg !7797 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %tmp = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !7798, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7800, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !7802, metadata !DIExpression()), !dbg !7803
  store i32 0, i32* %tmp, align 4, !dbg !7804
  br label %for.cond, !dbg !7806

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %tmp, align 4, !dbg !7807
  %cmp = icmp ult i32 %0, 5, !dbg !7809
  br i1 %cmp, label %for.body, label %for.end, !dbg !7810

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* @cnak_pending, align 4, !dbg !7811
  %2 = load i32, i32* %tmp, align 4, !dbg !7814
  %shl = shl i32 1, %2, !dbg !7815
  %and = and i32 %1, %shl, !dbg !7816
  %tobool = icmp ne i32 %and, 0, !dbg !7816
  br i1 %tobool, label %if.then, label %if.end, !dbg !7817

if.then:                                          ; preds = %for.body
  %3 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7818
  %ep = getelementptr inbounds %struct.udc, %struct.udc* %3, i32 0, i32 2, !dbg !7820
  %4 = load i32, i32* %tmp, align 4, !dbg !7821
  %idxprom = zext i32 %4 to i64, !dbg !7818
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep, i64 0, i64 %idxprom, !dbg !7818
  %regs = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx, i32 0, i32 1, !dbg !7822
  %5 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs, align 8, !dbg !7822
  %ctl = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %5, i32 0, i32 0, !dbg !7823
  %6 = bitcast i32* %ctl to i8*, !dbg !7824
  %call = call i32 @readl(i8* %6) #11, !dbg !7825
  store i32 %call, i32* %reg, align 4, !dbg !7826
  %7 = load i32, i32* %reg, align 4, !dbg !7827
  %or = or i32 %7, 256, !dbg !7827
  store i32 %or, i32* %reg, align 4, !dbg !7827
  %8 = load i32, i32* %reg, align 4, !dbg !7828
  %9 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7829
  %ep1 = getelementptr inbounds %struct.udc, %struct.udc* %9, i32 0, i32 2, !dbg !7830
  %10 = load i32, i32* %tmp, align 4, !dbg !7831
  %idxprom2 = zext i32 %10 to i64, !dbg !7829
  %arrayidx3 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep1, i64 0, i64 %idxprom2, !dbg !7829
  %regs4 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx3, i32 0, i32 1, !dbg !7832
  %11 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs4, align 8, !dbg !7832
  %ctl5 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %11, i32 0, i32 0, !dbg !7833
  %12 = bitcast i32* %ctl5 to i8*, !dbg !7834
  call void @writel(i32 %8, i8* %12) #11, !dbg !7835
  %13 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7836
  %ep6 = getelementptr inbounds %struct.udc, %struct.udc* %13, i32 0, i32 2, !dbg !7837
  %14 = load i32, i32* %tmp, align 4, !dbg !7838
  %idxprom7 = zext i32 %14 to i64, !dbg !7836
  %arrayidx8 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep6, i64 0, i64 %idxprom7, !dbg !7836
  %naking = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx8, i32 0, i32 13, !dbg !7839
  store i32 0, i32* %naking, align 4, !dbg !7840
  %15 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7841
  %ep9 = getelementptr inbounds %struct.udc, %struct.udc* %15, i32 0, i32 2, !dbg !7842
  %16 = load i32, i32* %tmp, align 4, !dbg !7843
  %idxprom10 = zext i32 %16 to i64, !dbg !7841
  %arrayidx11 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep9, i64 0, i64 %idxprom10, !dbg !7841
  %17 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7844
  %ep12 = getelementptr inbounds %struct.udc, %struct.udc* %17, i32 0, i32 2, !dbg !7845
  %18 = load i32, i32* %tmp, align 4, !dbg !7846
  %idxprom13 = zext i32 %18 to i64, !dbg !7844
  %arrayidx14 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep12, i64 0, i64 %idxprom13, !dbg !7844
  %num = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx14, i32 0, i32 18, !dbg !7847
  %19 = bitcast i24* %num to i32*, !dbg !7847
  %bf.load = load i32, i32* %19, align 8, !dbg !7847
  %bf.clear = and i32 %bf.load, 31, !dbg !7847
  call void @UDC_QUEUE_CNAK(%struct.udc_ep* %arrayidx11, i32 %bf.clear) #11, !dbg !7848
  br label %if.end, !dbg !7849

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7850

for.inc:                                          ; preds = %if.end
  %20 = load i32, i32* %tmp, align 4, !dbg !7851
  %inc = add i32 %20, 1, !dbg !7851
  store i32 %inc, i32* %tmp, align 4, !dbg !7851
  br label %for.cond, !dbg !7852, !llvm.loop !7853

for.end:                                          ; preds = %for.cond
  %21 = load i32, i32* @cnak_pending, align 4, !dbg !7855
  %and15 = and i32 %21, 65536, !dbg !7857
  %tobool16 = icmp ne i32 %and15, 0, !dbg !7857
  br i1 %tobool16, label %if.then17, label %if.end38, !dbg !7858

if.then17:                                        ; preds = %for.end
  %22 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7859
  %ep18 = getelementptr inbounds %struct.udc, %struct.udc* %22, i32 0, i32 2, !dbg !7861
  %arrayidx19 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep18, i64 0, i64 16, !dbg !7859
  %regs20 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx19, i32 0, i32 1, !dbg !7862
  %23 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs20, align 8, !dbg !7862
  %ctl21 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %23, i32 0, i32 0, !dbg !7863
  %24 = bitcast i32* %ctl21 to i8*, !dbg !7864
  %call22 = call i32 @readl(i8* %24) #11, !dbg !7865
  store i32 %call22, i32* %reg, align 4, !dbg !7866
  %25 = load i32, i32* %reg, align 4, !dbg !7867
  %or23 = or i32 %25, 256, !dbg !7867
  store i32 %or23, i32* %reg, align 4, !dbg !7867
  %26 = load i32, i32* %reg, align 4, !dbg !7868
  %27 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7869
  %ep24 = getelementptr inbounds %struct.udc, %struct.udc* %27, i32 0, i32 2, !dbg !7870
  %arrayidx25 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep24, i64 0, i64 16, !dbg !7869
  %regs26 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx25, i32 0, i32 1, !dbg !7871
  %28 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs26, align 8, !dbg !7871
  %ctl27 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %28, i32 0, i32 0, !dbg !7872
  %29 = bitcast i32* %ctl27 to i8*, !dbg !7873
  call void @writel(i32 %26, i8* %29) #11, !dbg !7874
  %30 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7875
  %ep28 = getelementptr inbounds %struct.udc, %struct.udc* %30, i32 0, i32 2, !dbg !7876
  %arrayidx29 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep28, i64 0, i64 16, !dbg !7875
  %naking30 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx29, i32 0, i32 13, !dbg !7877
  store i32 0, i32* %naking30, align 4, !dbg !7878
  %31 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7879
  %ep31 = getelementptr inbounds %struct.udc, %struct.udc* %31, i32 0, i32 2, !dbg !7880
  %arrayidx32 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep31, i64 0, i64 16, !dbg !7879
  %32 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7881
  %ep33 = getelementptr inbounds %struct.udc, %struct.udc* %32, i32 0, i32 2, !dbg !7882
  %arrayidx34 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep33, i64 0, i64 16, !dbg !7881
  %num35 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx34, i32 0, i32 18, !dbg !7883
  %33 = bitcast i24* %num35 to i32*, !dbg !7883
  %bf.load36 = load i32, i32* %33, align 8, !dbg !7883
  %bf.clear37 = and i32 %bf.load36, 31, !dbg !7883
  call void @UDC_QUEUE_CNAK(%struct.udc_ep* %arrayidx32, i32 %bf.clear37) #11, !dbg !7884
  br label %if.end38, !dbg !7885

if.end38:                                         ; preds = %if.then17, %for.end
  ret void, !dbg !7886
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @udc_set_rde(%struct.udc* %dev) #0 !dbg !7887 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %tmp = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !7888, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7890, metadata !DIExpression()), !dbg !7891
  br label %do.body, !dbg !7892

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7893

do.end:                                           ; preds = %do.body
  %call = call i32 @timer_pending(%struct.timer_list* @udc_timer) #11, !dbg !7895
  %tobool = icmp ne i32 %call, 0, !dbg !7895
  br i1 %tobool, label %if.then, label %if.end, !dbg !7897

if.then:                                          ; preds = %do.end
  store i32 0, i32* @set_rde, align 4, !dbg !7898
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !7900
  %sub = sub i64 %0, 1, !dbg !7901
  %call1 = call i32 @mod_timer(%struct.timer_list* @udc_timer, i64 %sub) #11, !dbg !7902
  br label %if.end, !dbg !7903

if.end:                                           ; preds = %if.then, %do.end
  %1 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7904
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %1, i32 0, i32 9, !dbg !7905
  %2 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !7905
  %ctl = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %2, i32 0, i32 1, !dbg !7906
  %3 = bitcast i32* %ctl to i8*, !dbg !7907
  %call2 = call i32 @readl(i8* %3) #11, !dbg !7908
  store i32 %call2, i32* %tmp, align 4, !dbg !7909
  %4 = load i32, i32* %tmp, align 4, !dbg !7910
  %or = or i32 %4, 4, !dbg !7910
  store i32 %or, i32* %tmp, align 4, !dbg !7910
  %5 = load i32, i32* %tmp, align 4, !dbg !7911
  %6 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !7912
  %regs3 = getelementptr inbounds %struct.udc, %struct.udc* %6, i32 0, i32 9, !dbg !7913
  %7 = load %struct.udc_regs*, %struct.udc_regs** %regs3, align 8, !dbg !7913
  %ctl4 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %7, i32 0, i32 1, !dbg !7914
  %8 = bitcast i32* %ctl4 to i8*, !dbg !7915
  call void @writel(i32 %5, i8* %8) #11, !dbg !7916
  ret void, !dbg !7917
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !7918 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !7922, metadata !DIExpression()), !dbg !7923
  %call = call i64 @arch_local_save_flags() #11, !dbg !7924
  store i64 %call, i64* %f, align 8, !dbg !7925
  call void @arch_local_irq_disable() #11, !dbg !7926
  %0 = load i64, i64* %f, align 8, !dbg !7927
  ret i64 %0, !dbg !7928
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !7929 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !7930, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7933, metadata !DIExpression()), !dbg !7932
  %0 = load i64, i64* %__edi, align 8, !dbg !7932
  store i64 %0, i64* %__edi, align 8, !dbg !7932
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7934, metadata !DIExpression()), !dbg !7932
  %1 = load i64, i64* %__esi, align 8, !dbg !7932
  store i64 %1, i64* %__esi, align 8, !dbg !7932
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7935, metadata !DIExpression()), !dbg !7932
  %2 = load i64, i64* %__edx, align 8, !dbg !7932
  store i64 %2, i64* %__edx, align 8, !dbg !7932
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7936, metadata !DIExpression()), !dbg !7932
  %3 = load i64, i64* %__ecx, align 8, !dbg !7932
  store i64 %3, i64* %__ecx, align 8, !dbg !7932
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7937, metadata !DIExpression()), !dbg !7932
  %4 = load i64, i64* %__eax, align 8, !dbg !7932
  store i64 %4, i64* %__eax, align 8, !dbg !7932
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !7932
  %6 = call i64 @llvm.read_register.i64(metadata !4651), !dbg !7938
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #5, !dbg !7938, !srcloc !7941
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7938
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7938
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7938
  call void @llvm.write_register.i64(metadata !4651, i64 %asmresult1), !dbg !7938
  %8 = load i64, i64* %__eax, align 8, !dbg !7938
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !7942, metadata !DIExpression()), !dbg !7944
  store i64 -1, i64* %__mask, align 8, !dbg !7944
  %9 = load i64, i64* %__mask, align 8, !dbg !7944
  store i64 %9, i64* %tmp, align 8, !dbg !7944
  %10 = load i64, i64* %tmp, align 8, !dbg !7944
  %and = and i64 %8, %10, !dbg !7938
  store i64 %and, i64* %__ret, align 8, !dbg !7938
  %11 = load i64, i64* %__ret, align 8, !dbg !7932
  store i64 %11, i64* %tmp2, align 8, !dbg !7945
  %12 = load i64, i64* %tmp2, align 8, !dbg !7932
  ret i64 %12, !dbg !7946
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !7947 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7948, metadata !DIExpression()), !dbg !7950
  %0 = load i64, i64* %__edi, align 8, !dbg !7950
  store i64 %0, i64* %__edi, align 8, !dbg !7950
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7951, metadata !DIExpression()), !dbg !7950
  %1 = load i64, i64* %__esi, align 8, !dbg !7950
  store i64 %1, i64* %__esi, align 8, !dbg !7950
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7952, metadata !DIExpression()), !dbg !7950
  %2 = load i64, i64* %__edx, align 8, !dbg !7950
  store i64 %2, i64* %__edx, align 8, !dbg !7950
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7953, metadata !DIExpression()), !dbg !7950
  %3 = load i64, i64* %__ecx, align 8, !dbg !7950
  store i64 %3, i64* %__ecx, align 8, !dbg !7950
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7954, metadata !DIExpression()), !dbg !7950
  %4 = load i64, i64* %__eax, align 8, !dbg !7950
  store i64 %4, i64* %__eax, align 8, !dbg !7950
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !7950
  %6 = call i64 @llvm.read_register.i64(metadata !4651), !dbg !7950
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #5, !dbg !7950, !srcloc !7955
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7950
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7950
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7950
  call void @llvm.write_register.i64(metadata !4651, i64 %asmresult1), !dbg !7950
  ret void, !dbg !7956
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #4

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !7957 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !7958, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7960, metadata !DIExpression()), !dbg !7962
  %0 = load i64, i64* %__edi, align 8, !dbg !7962
  store i64 %0, i64* %__edi, align 8, !dbg !7962
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7963, metadata !DIExpression()), !dbg !7962
  %1 = load i64, i64* %__esi, align 8, !dbg !7962
  store i64 %1, i64* %__esi, align 8, !dbg !7962
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7964, metadata !DIExpression()), !dbg !7962
  %2 = load i64, i64* %__edx, align 8, !dbg !7962
  store i64 %2, i64* %__edx, align 8, !dbg !7962
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7965, metadata !DIExpression()), !dbg !7962
  %3 = load i64, i64* %__ecx, align 8, !dbg !7962
  store i64 %3, i64* %__ecx, align 8, !dbg !7962
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7966, metadata !DIExpression()), !dbg !7962
  %4 = load i64, i64* %__eax, align 8, !dbg !7962
  store i64 %4, i64* %__eax, align 8, !dbg !7962
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !7962
  %6 = call i64 @llvm.read_register.i64(metadata !4651), !dbg !7962
  %7 = load i64, i64* %f.addr, align 8, !dbg !7962
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #5, !dbg !7962, !srcloc !7967
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !7962
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !7962
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7962
  call void @llvm.write_register.i64(metadata !4651, i64 %asmresult1), !dbg !7962
  ret void, !dbg !7968
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @udc_txfifo_write(%struct.udc_ep* %ep, %struct.usb_request* %req) #0 !dbg !7969 {
entry:
  %ep.addr = alloca %struct.udc_ep*, align 8
  %req.addr = alloca %struct.usb_request*, align 8
  %req_buf = alloca i8*, align 8
  %buf = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %bytes = alloca i32, align 4
  %remaining = alloca i32, align 4
  store %struct.udc_ep* %ep, %struct.udc_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep.addr, metadata !7972, metadata !DIExpression()), !dbg !7973
  store %struct.usb_request* %req, %struct.usb_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_request** %req.addr, metadata !7974, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.declare(metadata i8** %req_buf, metadata !7976, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.declare(metadata i32** %buf, metadata !7979, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7981, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7983, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !7985, metadata !DIExpression()), !dbg !7986
  store i32 0, i32* %bytes, align 4, !dbg !7986
  call void @llvm.dbg.declare(metadata i32* %remaining, metadata !7987, metadata !DIExpression()), !dbg !7988
  store i32 0, i32* %remaining, align 4, !dbg !7988
  %0 = load %struct.usb_request*, %struct.usb_request** %req.addr, align 8, !dbg !7989
  %tobool = icmp ne %struct.usb_request* %0, null, !dbg !7989
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7991

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !7992
  %tobool1 = icmp ne %struct.udc_ep* %1, null, !dbg !7992
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7993

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !7994

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.usb_request*, %struct.usb_request** %req.addr, align 8, !dbg !7995
  %buf2 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %2, i32 0, i32 0, !dbg !7996
  %3 = load i8*, i8** %buf2, align 8, !dbg !7996
  %4 = load %struct.usb_request*, %struct.usb_request** %req.addr, align 8, !dbg !7997
  %actual = getelementptr inbounds %struct.usb_request, %struct.usb_request* %4, i32 0, i32 12, !dbg !7998
  %5 = load i32, i32* %actual, align 8, !dbg !7998
  %idx.ext = zext i32 %5 to i64, !dbg !7999
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !7999
  store i8* %add.ptr, i8** %req_buf, align 8, !dbg !8000
  %6 = load i8*, i8** %req_buf, align 8, !dbg !8001
  call void @llvm.prefetch.p0i8(i8* %6, i32 0, i32 3, i32 1), !dbg !8001
  %7 = load %struct.usb_request*, %struct.usb_request** %req.addr, align 8, !dbg !8002
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %7, i32 0, i32 1, !dbg !8003
  %8 = load i32, i32* %length, align 8, !dbg !8003
  %9 = load %struct.usb_request*, %struct.usb_request** %req.addr, align 8, !dbg !8004
  %actual3 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %9, i32 0, i32 12, !dbg !8005
  %10 = load i32, i32* %actual3, align 8, !dbg !8005
  %sub = sub i32 %8, %10, !dbg !8006
  store i32 %sub, i32* %remaining, align 4, !dbg !8007
  %11 = load i8*, i8** %req_buf, align 8, !dbg !8008
  %12 = bitcast i8* %11 to i32*, !dbg !8009
  store i32* %12, i32** %buf, align 8, !dbg !8010
  %13 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8011
  %ep4 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %13, i32 0, i32 0, !dbg !8012
  %maxpacket = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep4, i32 0, i32 7, !dbg !8013
  %14 = bitcast [7 x i8]* %maxpacket to i56*, !dbg !8013
  %bf.load = load i56, i56* %14, align 2, !dbg !8013
  %bf.clear = and i56 %bf.load, 65535, !dbg !8013
  %bf.cast = trunc i56 %bf.clear to i32, !dbg !8013
  store i32 %bf.cast, i32* %bytes, align 4, !dbg !8014
  %15 = load i32, i32* %bytes, align 4, !dbg !8015
  %16 = load i32, i32* %remaining, align 4, !dbg !8017
  %cmp = icmp ugt i32 %15, %16, !dbg !8018
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !8019

if.then5:                                         ; preds = %if.end
  %17 = load i32, i32* %remaining, align 4, !dbg !8020
  store i32 %17, i32* %bytes, align 4, !dbg !8021
  br label %if.end6, !dbg !8022

if.end6:                                          ; preds = %if.then5, %if.end
  store i32 0, i32* %i, align 4, !dbg !8023
  br label %for.cond, !dbg !8025

for.cond:                                         ; preds = %for.inc, %if.end6
  %18 = load i32, i32* %i, align 4, !dbg !8026
  %19 = load i32, i32* %bytes, align 4, !dbg !8028
  %div = udiv i32 %19, 4, !dbg !8029
  %cmp7 = icmp ult i32 %18, %div, !dbg !8030
  br i1 %cmp7, label %for.body, label %for.end, !dbg !8031

for.body:                                         ; preds = %for.cond
  %20 = load i32*, i32** %buf, align 8, !dbg !8032
  %21 = load i32, i32* %i, align 4, !dbg !8033
  %idx.ext8 = sext i32 %21 to i64, !dbg !8034
  %add.ptr9 = getelementptr i32, i32* %20, i64 %idx.ext8, !dbg !8034
  %22 = load i32, i32* %add.ptr9, align 4, !dbg !8035
  %23 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8036
  %txfifo = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %23, i32 0, i32 2, !dbg !8037
  %24 = load i32*, i32** %txfifo, align 8, !dbg !8037
  %25 = bitcast i32* %24 to i8*, !dbg !8036
  call void @writel(i32 %22, i8* %25) #11, !dbg !8038
  br label %for.inc, !dbg !8038

for.inc:                                          ; preds = %for.body
  %26 = load i32, i32* %i, align 4, !dbg !8039
  %inc = add i32 %26, 1, !dbg !8039
  store i32 %inc, i32* %i, align 4, !dbg !8039
  br label %for.cond, !dbg !8040, !llvm.loop !8041

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !8043
  br label %for.cond10, !dbg !8045

for.cond10:                                       ; preds = %for.inc16, %for.end
  %27 = load i32, i32* %j, align 4, !dbg !8046
  %28 = load i32, i32* %bytes, align 4, !dbg !8048
  %rem = urem i32 %28, 4, !dbg !8049
  %cmp11 = icmp ult i32 %27, %rem, !dbg !8050
  br i1 %cmp11, label %for.body12, label %for.end18, !dbg !8051

for.body12:                                       ; preds = %for.cond10
  %29 = load i32*, i32** %buf, align 8, !dbg !8052
  %30 = load i32, i32* %i, align 4, !dbg !8054
  %idx.ext13 = sext i32 %30 to i64, !dbg !8055
  %add.ptr14 = getelementptr i32, i32* %29, i64 %idx.ext13, !dbg !8055
  %31 = load i32, i32* %add.ptr14, align 4, !dbg !8056
  %32 = load i32, i32* %j, align 4, !dbg !8057
  %shl = shl i32 %32, 3, !dbg !8058
  %shr = lshr i32 %31, %shl, !dbg !8059
  %conv = trunc i32 %shr to i8, !dbg !8060
  %33 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8061
  %txfifo15 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %33, i32 0, i32 2, !dbg !8062
  %34 = load i32*, i32** %txfifo15, align 8, !dbg !8062
  %35 = bitcast i32* %34 to i8*, !dbg !8061
  call void @writeb(i8 zeroext %conv, i8* %35) #11, !dbg !8063
  br label %for.inc16, !dbg !8064

for.inc16:                                        ; preds = %for.body12
  %36 = load i32, i32* %j, align 4, !dbg !8065
  %inc17 = add i32 %36, 1, !dbg !8065
  store i32 %inc17, i32* %j, align 4, !dbg !8065
  br label %for.cond10, !dbg !8066, !llvm.loop !8067

for.end18:                                        ; preds = %for.cond10
  %37 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8069
  %regs = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %37, i32 0, i32 1, !dbg !8070
  %38 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs, align 8, !dbg !8070
  %confirm = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %38, i32 0, i32 7, !dbg !8071
  %39 = bitcast i32* %confirm to i8*, !dbg !8072
  call void @writel(i32 0, i8* %39) #11, !dbg !8073
  br label %return, !dbg !8074

return:                                           ; preds = %for.end18, %if.then
  ret void, !dbg !8074
}

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #0 !dbg !8075 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !8078, metadata !DIExpression()), !dbg !8079
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8080, metadata !DIExpression()), !dbg !8079
  %0 = load i8, i8* %val.addr, align 1, !dbg !8079
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !8079
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #5, !dbg !8079, !srcloc !8081
  ret void, !dbg !8079
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_rxfifo_read(%struct.udc_ep* %ep, %struct.udc_request* %req) #0 !dbg !8082 {
entry:
  %ep.addr = alloca %struct.udc_ep*, align 8
  %req.addr = alloca %struct.udc_request*, align 8
  %buf = alloca i8*, align 8
  %buf_space = alloca i32, align 4
  %bytes = alloca i32, align 4
  %finished = alloca i32, align 4
  store %struct.udc_ep* %ep, %struct.udc_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep.addr, metadata !8085, metadata !DIExpression()), !dbg !8086
  store %struct.udc_request* %req, %struct.udc_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req.addr, metadata !8087, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !8089, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.declare(metadata i32* %buf_space, metadata !8091, metadata !DIExpression()), !dbg !8092
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !8093, metadata !DIExpression()), !dbg !8094
  store i32 0, i32* %bytes, align 4, !dbg !8094
  call void @llvm.dbg.declare(metadata i32* %finished, metadata !8095, metadata !DIExpression()), !dbg !8096
  store i32 0, i32* %finished, align 4, !dbg !8096
  %0 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8097
  %regs = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %0, i32 0, i32 1, !dbg !8098
  %1 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs, align 8, !dbg !8098
  %sts = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %1, i32 0, i32 1, !dbg !8099
  %2 = bitcast i32* %sts to i8*, !dbg !8100
  %call = call i32 @readl(i8* %2) #11, !dbg !8101
  store i32 %call, i32* %bytes, align 4, !dbg !8102
  %3 = load i32, i32* %bytes, align 4, !dbg !8103
  %and = and i32 %3, 8386560, !dbg !8103
  %shr = lshr i32 %and, 11, !dbg !8103
  store i32 %shr, i32* %bytes, align 4, !dbg !8104
  %4 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8105
  %req1 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %4, i32 0, i32 0, !dbg !8106
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req1, i32 0, i32 1, !dbg !8107
  %5 = load i32, i32* %length, align 8, !dbg !8107
  %6 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8108
  %req2 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %6, i32 0, i32 0, !dbg !8109
  %actual = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req2, i32 0, i32 12, !dbg !8110
  %7 = load i32, i32* %actual, align 8, !dbg !8110
  %sub = sub i32 %5, %7, !dbg !8111
  store i32 %sub, i32* %buf_space, align 4, !dbg !8112
  %8 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8113
  %req3 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %8, i32 0, i32 0, !dbg !8114
  %buf4 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req3, i32 0, i32 0, !dbg !8115
  %9 = load i8*, i8** %buf4, align 8, !dbg !8115
  %10 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8116
  %req5 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %10, i32 0, i32 0, !dbg !8117
  %actual6 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req5, i32 0, i32 12, !dbg !8118
  %11 = load i32, i32* %actual6, align 8, !dbg !8118
  %idx.ext = zext i32 %11 to i64, !dbg !8119
  %add.ptr = getelementptr i8, i8* %9, i64 %idx.ext, !dbg !8119
  store i8* %add.ptr, i8** %buf, align 8, !dbg !8120
  %12 = load i32, i32* %bytes, align 4, !dbg !8121
  %13 = load i32, i32* %buf_space, align 4, !dbg !8123
  %cmp = icmp ugt i32 %12, %13, !dbg !8124
  br i1 %cmp, label %if.then, label %if.end11, !dbg !8125

if.then:                                          ; preds = %entry
  %14 = load i32, i32* %buf_space, align 4, !dbg !8126
  %15 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8129
  %ep7 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %15, i32 0, i32 0, !dbg !8130
  %maxpacket = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep7, i32 0, i32 7, !dbg !8131
  %16 = bitcast [7 x i8]* %maxpacket to i56*, !dbg !8131
  %bf.load = load i56, i56* %16, align 2, !dbg !8131
  %bf.clear = and i56 %bf.load, 65535, !dbg !8131
  %bf.cast = trunc i56 %bf.clear to i32, !dbg !8131
  %rem = urem i32 %14, %bf.cast, !dbg !8132
  %cmp8 = icmp ne i32 %rem, 0, !dbg !8133
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !8134

if.then9:                                         ; preds = %if.then
  %17 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8135
  %req10 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %17, i32 0, i32 0, !dbg !8137
  %status = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req10, i32 0, i32 11, !dbg !8138
  store i32 -75, i32* %status, align 4, !dbg !8139
  br label %if.end, !dbg !8140

if.end:                                           ; preds = %if.then9, %if.then
  %18 = load i32, i32* %buf_space, align 4, !dbg !8141
  store i32 %18, i32* %bytes, align 4, !dbg !8142
  br label %if.end11, !dbg !8143

if.end11:                                         ; preds = %if.end, %entry
  %19 = load i32, i32* %bytes, align 4, !dbg !8144
  %20 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8145
  %req12 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %20, i32 0, i32 0, !dbg !8146
  %actual13 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req12, i32 0, i32 12, !dbg !8147
  %21 = load i32, i32* %actual13, align 8, !dbg !8148
  %add = add i32 %21, %19, !dbg !8148
  store i32 %add, i32* %actual13, align 8, !dbg !8148
  %22 = load i32, i32* %bytes, align 4, !dbg !8149
  %23 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8151
  %ep14 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %23, i32 0, i32 0, !dbg !8152
  %maxpacket15 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep14, i32 0, i32 7, !dbg !8153
  %24 = bitcast [7 x i8]* %maxpacket15 to i56*, !dbg !8153
  %bf.load16 = load i56, i56* %24, align 2, !dbg !8153
  %bf.clear17 = and i56 %bf.load16, 65535, !dbg !8153
  %bf.cast18 = trunc i56 %bf.clear17 to i32, !dbg !8153
  %rem19 = urem i32 %22, %bf.cast18, !dbg !8154
  %cmp20 = icmp ne i32 %rem19, 0, !dbg !8155
  br i1 %cmp20, label %if.then31, label %lor.lhs.false, !dbg !8156

lor.lhs.false:                                    ; preds = %if.end11
  %25 = load i32, i32* %bytes, align 4, !dbg !8157
  %tobool = icmp ne i32 %25, 0, !dbg !8157
  br i1 %tobool, label %lor.lhs.false21, label %if.then31, !dbg !8158

lor.lhs.false21:                                  ; preds = %lor.lhs.false
  %26 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8159
  %req22 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %26, i32 0, i32 0, !dbg !8160
  %actual23 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req22, i32 0, i32 12, !dbg !8161
  %27 = load i32, i32* %actual23, align 8, !dbg !8161
  %28 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8162
  %req24 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %28, i32 0, i32 0, !dbg !8163
  %length25 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req24, i32 0, i32 1, !dbg !8164
  %29 = load i32, i32* %length25, align 8, !dbg !8164
  %cmp26 = icmp eq i32 %27, %29, !dbg !8165
  br i1 %cmp26, label %land.lhs.true, label %if.end32, !dbg !8166

land.lhs.true:                                    ; preds = %lor.lhs.false21
  %30 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8167
  %req27 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %30, i32 0, i32 0, !dbg !8168
  %zero = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req27, i32 0, i32 6, !dbg !8169
  %31 = bitcast i24* %zero to i32*, !dbg !8169
  %bf.load28 = load i32, i32* %31, align 8, !dbg !8169
  %bf.lshr = lshr i32 %bf.load28, 18, !dbg !8169
  %bf.clear29 = and i32 %bf.lshr, 1, !dbg !8169
  %tobool30 = icmp ne i32 %bf.clear29, 0, !dbg !8167
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !8170

if.then31:                                        ; preds = %land.lhs.true, %lor.lhs.false, %if.end11
  store i32 1, i32* %finished, align 4, !dbg !8171
  br label %if.end32, !dbg !8172

if.end32:                                         ; preds = %if.then31, %land.lhs.true, %lor.lhs.false21
  br label %do.body, !dbg !8173

do.body:                                          ; preds = %if.end32
  br label %do.end, !dbg !8174

do.end:                                           ; preds = %do.body
  %32 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8176
  %dev = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %32, i32 0, i32 14, !dbg !8177
  %33 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !8177
  %34 = load i8*, i8** %buf, align 8, !dbg !8178
  %35 = load i32, i32* %bytes, align 4, !dbg !8179
  %call33 = call i32 @udc_rxfifo_read_bytes(%struct.udc* %33, i8* %34, i32 %35) #11, !dbg !8180
  %36 = load i32, i32* %finished, align 4, !dbg !8181
  ret i32 %36, !dbg !8182
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @udc_init_bna_dummy(%struct.udc_request* %req) #0 !dbg !8183 {
entry:
  %req.addr = alloca %struct.udc_request*, align 8
  store %struct.udc_request* %req, %struct.udc_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req.addr, metadata !8186, metadata !DIExpression()), !dbg !8187
  %0 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8188
  %tobool = icmp ne %struct.udc_request* %0, null, !dbg !8188
  br i1 %tobool, label %if.then, label %if.end, !dbg !8190

if.then:                                          ; preds = %entry
  %1 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8191
  %td_data = getelementptr inbounds %struct.udc_request, %struct.udc_request* %1, i32 0, i32 3, !dbg !8193
  %2 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data, align 8, !dbg !8193
  %status = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %2, i32 0, i32 0, !dbg !8194
  %3 = load i32, i32* %status, align 16, !dbg !8195
  %or = or i32 %3, 134217728, !dbg !8195
  store i32 %or, i32* %status, align 16, !dbg !8195
  %4 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8196
  %td_phys = getelementptr inbounds %struct.udc_request, %struct.udc_request* %4, i32 0, i32 2, !dbg !8197
  %5 = load i64, i64* %td_phys, align 8, !dbg !8197
  %conv = trunc i64 %5 to i32, !dbg !8196
  %6 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8198
  %td_data1 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %6, i32 0, i32 3, !dbg !8199
  %7 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data1, align 8, !dbg !8199
  %next = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %7, i32 0, i32 3, !dbg !8200
  store i32 %conv, i32* %next, align 4, !dbg !8201
  %8 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8202
  %td_data2 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %8, i32 0, i32 3, !dbg !8202
  %9 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data2, align 8, !dbg !8202
  %status3 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %9, i32 0, i32 0, !dbg !8202
  %10 = load i32, i32* %status3, align 16, !dbg !8202
  %and = and i32 %10, 1073741823, !dbg !8202
  %or4 = or i32 %and, -2147483648, !dbg !8202
  %11 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8203
  %td_data5 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %11, i32 0, i32 3, !dbg !8204
  %12 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data5, align 8, !dbg !8204
  %status6 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %12, i32 0, i32 0, !dbg !8205
  store i32 %or4, i32* %status6, align 16, !dbg !8206
  br label %if.end, !dbg !8207

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8208
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.udc_data_dma* @udc_get_last_dma_desc(%struct.udc_request* %req) #0 !dbg !8209 {
entry:
  %req.addr = alloca %struct.udc_request*, align 8
  %td = alloca %struct.udc_data_dma*, align 8
  store %struct.udc_request* %req, %struct.udc_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req.addr, metadata !8212, metadata !DIExpression()), !dbg !8213
  call void @llvm.dbg.declare(metadata %struct.udc_data_dma** %td, metadata !8214, metadata !DIExpression()), !dbg !8215
  %0 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8216
  %td_data = getelementptr inbounds %struct.udc_request, %struct.udc_request* %0, i32 0, i32 3, !dbg !8217
  %1 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data, align 8, !dbg !8217
  store %struct.udc_data_dma* %1, %struct.udc_data_dma** %td, align 8, !dbg !8218
  br label %while.cond, !dbg !8219

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8220
  %tobool = icmp ne %struct.udc_data_dma* %2, null, !dbg !8220
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8221

land.rhs:                                         ; preds = %while.cond
  %3 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8222
  %status = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %3, i32 0, i32 0, !dbg !8223
  %4 = load i32, i32* %status, align 16, !dbg !8223
  %and = and i32 %4, 134217728, !dbg !8224
  %tobool1 = icmp ne i32 %and, 0, !dbg !8225
  %lnot = xor i1 %tobool1, true, !dbg !8225
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !8226
  br i1 %5, label %while.body, label %while.end, !dbg !8219

while.body:                                       ; preds = %land.end
  %6 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8227
  %next = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %6, i32 0, i32 3, !dbg !8228
  %7 = load i32, i32* %next, align 4, !dbg !8228
  %conv = zext i32 %7 to i64, !dbg !8227
  %call = call i8* @phys_to_virt(i64 %conv) #11, !dbg !8229
  %8 = bitcast i8* %call to %struct.udc_data_dma*, !dbg !8229
  store %struct.udc_data_dma* %8, %struct.udc_data_dma** %td, align 8, !dbg !8230
  br label %while.cond, !dbg !8219, !llvm.loop !8231

while.end:                                        ; preds = %land.end
  %9 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8233
  ret %struct.udc_data_dma* %9, !dbg !8234
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_get_ppbdu_rxbytes(%struct.udc_request* %req) #0 !dbg !8235 {
entry:
  %req.addr = alloca %struct.udc_request*, align 8
  %td = alloca %struct.udc_data_dma*, align 8
  %count = alloca i32, align 4
  store %struct.udc_request* %req, %struct.udc_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req.addr, metadata !8238, metadata !DIExpression()), !dbg !8239
  call void @llvm.dbg.declare(metadata %struct.udc_data_dma** %td, metadata !8240, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.declare(metadata i32* %count, metadata !8242, metadata !DIExpression()), !dbg !8243
  %0 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8244
  %td_data = getelementptr inbounds %struct.udc_request, %struct.udc_request* %0, i32 0, i32 3, !dbg !8245
  %1 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data, align 8, !dbg !8245
  store %struct.udc_data_dma* %1, %struct.udc_data_dma** %td, align 8, !dbg !8246
  %2 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8247
  %status = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %2, i32 0, i32 0, !dbg !8247
  %3 = load i32, i32* %status, align 16, !dbg !8247
  %and = and i32 %3, 65535, !dbg !8247
  %shr = lshr i32 %and, 0, !dbg !8247
  store i32 %shr, i32* %count, align 4, !dbg !8248
  br label %while.cond, !dbg !8249

while.cond:                                       ; preds = %if.end, %entry
  %4 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8250
  %tobool = icmp ne %struct.udc_data_dma* %4, null, !dbg !8250
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8251

land.rhs:                                         ; preds = %while.cond
  %5 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8252
  %status1 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %5, i32 0, i32 0, !dbg !8253
  %6 = load i32, i32* %status1, align 16, !dbg !8253
  %and2 = and i32 %6, 134217728, !dbg !8254
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8255
  %lnot = xor i1 %tobool3, true, !dbg !8255
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !8256
  br i1 %7, label %while.body, label %while.end, !dbg !8249

while.body:                                       ; preds = %land.end
  %8 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8257
  %next = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %8, i32 0, i32 3, !dbg !8259
  %9 = load i32, i32* %next, align 4, !dbg !8259
  %conv = zext i32 %9 to i64, !dbg !8257
  %call = call i8* @phys_to_virt(i64 %conv) #11, !dbg !8260
  %10 = bitcast i8* %call to %struct.udc_data_dma*, !dbg !8260
  store %struct.udc_data_dma* %10, %struct.udc_data_dma** %td, align 8, !dbg !8261
  %11 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8262
  %tobool4 = icmp ne %struct.udc_data_dma* %11, null, !dbg !8262
  br i1 %tobool4, label %if.then, label %if.end, !dbg !8264

if.then:                                          ; preds = %while.body
  %12 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8265
  %status5 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %12, i32 0, i32 0, !dbg !8265
  %13 = load i32, i32* %status5, align 16, !dbg !8265
  %and6 = and i32 %13, 65535, !dbg !8265
  %shr7 = lshr i32 %and6, 0, !dbg !8265
  %14 = load i32, i32* %count, align 4, !dbg !8267
  %add = add i32 %14, %shr7, !dbg !8267
  store i32 %add, i32* %count, align 4, !dbg !8267
  br label %if.end, !dbg !8268

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond, !dbg !8249, !llvm.loop !8269

while.end:                                        ; preds = %land.end
  %15 = load i32, i32* %count, align 4, !dbg !8271
  ret i32 %15, !dbg !8272
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @prep_dma(%struct.udc_ep* %ep, %struct.udc_request* %req, i32 %gfp) #0 !dbg !8273 {
entry:
  %retval = alloca i32, align 4
  %ep.addr = alloca %struct.udc_ep*, align 8
  %req.addr = alloca %struct.udc_request*, align 8
  %gfp.addr = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.udc_ep* %ep, %struct.udc_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep.addr, metadata !8276, metadata !DIExpression()), !dbg !8277
  store %struct.udc_request* %req, %struct.udc_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req.addr, metadata !8278, metadata !DIExpression()), !dbg !8279
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !8280, metadata !DIExpression()), !dbg !8281
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8282, metadata !DIExpression()), !dbg !8283
  store i32 0, i32* %retval1, align 4, !dbg !8283
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !8284, metadata !DIExpression()), !dbg !8285
  br label %do.body, !dbg !8286

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8287

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !8289

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !8290

do.end3:                                          ; preds = %do.body2
  %0 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8292
  %req4 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %0, i32 0, i32 0, !dbg !8293
  %dma = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req4, i32 0, i32 2, !dbg !8294
  %1 = load i64, i64* %dma, align 8, !dbg !8294
  %conv = trunc i64 %1 to i32, !dbg !8292
  %2 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8295
  %td_data = getelementptr inbounds %struct.udc_request, %struct.udc_request* %2, i32 0, i32 3, !dbg !8296
  %3 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data, align 8, !dbg !8296
  %bufptr = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %3, i32 0, i32 2, !dbg !8297
  store i32 %conv, i32* %bufptr, align 8, !dbg !8298
  %4 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8299
  %td_data5 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %4, i32 0, i32 3, !dbg !8300
  %5 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data5, align 8, !dbg !8300
  %status = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %5, i32 0, i32 0, !dbg !8301
  %6 = load i32, i32* %status, align 16, !dbg !8302
  %or = or i32 %6, 134217728, !dbg !8302
  store i32 %or, i32* %status, align 16, !dbg !8302
  %7 = load i8, i8* @use_dma_ppb, align 1, !dbg !8303
  %tobool = trunc i8 %7 to i1, !dbg !8303
  br i1 %tobool, label %if.then, label %if.end40, !dbg !8305

if.then:                                          ; preds = %do.end3
  %8 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8306
  %9 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8308
  %10 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8309
  %ep6 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %10, i32 0, i32 0, !dbg !8310
  %maxpacket = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep6, i32 0, i32 7, !dbg !8311
  %11 = bitcast [7 x i8]* %maxpacket to i56*, !dbg !8311
  %bf.load = load i56, i56* %11, align 2, !dbg !8311
  %bf.clear = and i56 %bf.load, 65535, !dbg !8311
  %bf.cast = trunc i56 %bf.clear to i32, !dbg !8311
  %conv7 = zext i32 %bf.cast to i64, !dbg !8309
  %12 = load i32, i32* %gfp.addr, align 4, !dbg !8312
  %call = call i32 @udc_create_dma_chain(%struct.udc_ep* %8, %struct.udc_request* %9, i64 %conv7, i32 %12) #11, !dbg !8313
  store i32 %call, i32* %retval1, align 4, !dbg !8314
  %13 = load i32, i32* %retval1, align 4, !dbg !8315
  %cmp = icmp ne i32 %13, 0, !dbg !8317
  br i1 %cmp, label %if.then9, label %if.end13, !dbg !8318

if.then9:                                         ; preds = %if.then
  %14 = load i32, i32* %retval1, align 4, !dbg !8319
  %cmp10 = icmp eq i32 %14, -12, !dbg !8322
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !8323

if.then12:                                        ; preds = %if.then9
  br label %if.end, !dbg !8324

if.end:                                           ; preds = %if.then12, %if.then9
  %15 = load i32, i32* %retval1, align 4, !dbg !8325
  store i32 %15, i32* %retval, align 4, !dbg !8326
  br label %return, !dbg !8326

if.end13:                                         ; preds = %if.then
  %16 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8327
  %in = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %16, i32 0, i32 18, !dbg !8329
  %17 = bitcast i24* %in to i32*, !dbg !8329
  %bf.load14 = load i32, i32* %17, align 8, !dbg !8329
  %bf.lshr = lshr i32 %bf.load14, 19, !dbg !8329
  %bf.clear15 = and i32 %bf.lshr, 1, !dbg !8329
  %tobool16 = icmp ne i32 %bf.clear15, 0, !dbg !8327
  br i1 %tobool16, label %if.then17, label %if.end39, !dbg !8330

if.then17:                                        ; preds = %if.end13
  %18 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8331
  %req18 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %18, i32 0, i32 0, !dbg !8334
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req18, i32 0, i32 1, !dbg !8335
  %19 = load i32, i32* %length, align 8, !dbg !8335
  %20 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8336
  %ep19 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %20, i32 0, i32 0, !dbg !8337
  %maxpacket20 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep19, i32 0, i32 7, !dbg !8338
  %21 = bitcast [7 x i8]* %maxpacket20 to i56*, !dbg !8338
  %bf.load21 = load i56, i56* %21, align 2, !dbg !8338
  %bf.clear22 = and i56 %bf.load21, 65535, !dbg !8338
  %bf.cast23 = trunc i56 %bf.clear22 to i32, !dbg !8338
  %cmp24 = icmp eq i32 %19, %bf.cast23, !dbg !8339
  br i1 %cmp24, label %if.then26, label %if.end38, !dbg !8340

if.then26:                                        ; preds = %if.then17
  %22 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8341
  %td_data27 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %22, i32 0, i32 3, !dbg !8341
  %23 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data27, align 8, !dbg !8341
  %status28 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %23, i32 0, i32 0, !dbg !8341
  %24 = load i32, i32* %status28, align 16, !dbg !8341
  %and = and i32 %24, -65536, !dbg !8341
  %25 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8341
  %ep29 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %25, i32 0, i32 0, !dbg !8341
  %maxpacket30 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep29, i32 0, i32 7, !dbg !8341
  %26 = bitcast [7 x i8]* %maxpacket30 to i56*, !dbg !8341
  %bf.load31 = load i56, i56* %26, align 2, !dbg !8341
  %bf.clear32 = and i56 %bf.load31, 65535, !dbg !8341
  %bf.cast33 = trunc i56 %bf.clear32 to i32, !dbg !8341
  %shl = shl i32 %bf.cast33, 0, !dbg !8341
  %and34 = and i32 %shl, 65535, !dbg !8341
  %or35 = or i32 %and, %and34, !dbg !8341
  %27 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8343
  %td_data36 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %27, i32 0, i32 3, !dbg !8344
  %28 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data36, align 8, !dbg !8344
  %status37 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %28, i32 0, i32 0, !dbg !8345
  store i32 %or35, i32* %status37, align 16, !dbg !8346
  br label %if.end38, !dbg !8347

if.end38:                                         ; preds = %if.then26, %if.then17
  br label %if.end39, !dbg !8348

if.end39:                                         ; preds = %if.end38, %if.end13
  br label %if.end40, !dbg !8349

if.end40:                                         ; preds = %if.end39, %do.end3
  %29 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8350
  %in41 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %29, i32 0, i32 18, !dbg !8352
  %30 = bitcast i24* %in41 to i32*, !dbg !8352
  %bf.load42 = load i32, i32* %30, align 8, !dbg !8352
  %bf.lshr43 = lshr i32 %bf.load42, 19, !dbg !8352
  %bf.clear44 = and i32 %bf.lshr43, 1, !dbg !8352
  %tobool45 = icmp ne i32 %bf.clear44, 0, !dbg !8350
  br i1 %tobool45, label %if.then46, label %if.else, !dbg !8353

if.then46:                                        ; preds = %if.end40
  br label %do.body47, !dbg !8354

do.body47:                                        ; preds = %if.then46
  br label %do.end48, !dbg !8356

do.end48:                                         ; preds = %do.body47
  %31 = load i8, i8* @use_dma_ppb, align 1, !dbg !8358
  %tobool49 = trunc i8 %31 to i1, !dbg !8358
  br i1 %tobool49, label %lor.lhs.false, label %if.then70, !dbg !8360

lor.lhs.false:                                    ; preds = %do.end48
  %32 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8361
  %req50 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %32, i32 0, i32 0, !dbg !8362
  %length51 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req50, i32 0, i32 1, !dbg !8363
  %33 = load i32, i32* %length51, align 8, !dbg !8363
  %34 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8364
  %ep52 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %34, i32 0, i32 0, !dbg !8365
  %maxpacket53 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep52, i32 0, i32 7, !dbg !8366
  %35 = bitcast [7 x i8]* %maxpacket53 to i56*, !dbg !8366
  %bf.load54 = load i56, i56* %35, align 2, !dbg !8366
  %bf.clear55 = and i56 %bf.load54, 65535, !dbg !8366
  %bf.cast56 = trunc i56 %bf.clear55 to i32, !dbg !8366
  %cmp57 = icmp ult i32 %33, %bf.cast56, !dbg !8367
  br i1 %cmp57, label %if.then70, label %lor.lhs.false59, !dbg !8368

lor.lhs.false59:                                  ; preds = %lor.lhs.false
  %36 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8369
  %num = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %36, i32 0, i32 18, !dbg !8370
  %37 = bitcast i24* %num to i32*, !dbg !8370
  %bf.load60 = load i32, i32* %37, align 8, !dbg !8370
  %bf.clear61 = and i32 %bf.load60, 31, !dbg !8370
  %cmp62 = icmp eq i32 %bf.clear61, 16, !dbg !8371
  br i1 %cmp62, label %if.then70, label %lor.lhs.false64, !dbg !8372

lor.lhs.false64:                                  ; preds = %lor.lhs.false59
  %38 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8373
  %num65 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %38, i32 0, i32 18, !dbg !8374
  %39 = bitcast i24* %num65 to i32*, !dbg !8374
  %bf.load66 = load i32, i32* %39, align 8, !dbg !8374
  %bf.clear67 = and i32 %bf.load66, 31, !dbg !8374
  %cmp68 = icmp eq i32 %bf.clear67, 0, !dbg !8375
  br i1 %cmp68, label %if.then70, label %if.end86, !dbg !8376

if.then70:                                        ; preds = %lor.lhs.false64, %lor.lhs.false59, %lor.lhs.false, %do.end48
  %40 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8377
  %td_data71 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %40, i32 0, i32 3, !dbg !8377
  %41 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data71, align 8, !dbg !8377
  %status72 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %41, i32 0, i32 0, !dbg !8377
  %42 = load i32, i32* %status72, align 16, !dbg !8377
  %and73 = and i32 %42, -65536, !dbg !8377
  %43 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8377
  %req74 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %43, i32 0, i32 0, !dbg !8377
  %length75 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req74, i32 0, i32 1, !dbg !8377
  %44 = load i32, i32* %length75, align 8, !dbg !8377
  %shl76 = shl i32 %44, 0, !dbg !8377
  %and77 = and i32 %shl76, 65535, !dbg !8377
  %or78 = or i32 %and73, %and77, !dbg !8377
  %45 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8379
  %td_data79 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %45, i32 0, i32 3, !dbg !8380
  %46 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data79, align 8, !dbg !8380
  %status80 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %46, i32 0, i32 0, !dbg !8381
  store i32 %or78, i32* %status80, align 16, !dbg !8382
  %47 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8383
  %td_data81 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %47, i32 0, i32 3, !dbg !8383
  %48 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data81, align 8, !dbg !8383
  %status82 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %48, i32 0, i32 0, !dbg !8383
  %49 = load i32, i32* %status82, align 16, !dbg !8383
  %and83 = and i32 %49, -134152193, !dbg !8383
  %50 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8384
  %td_data84 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %50, i32 0, i32 3, !dbg !8385
  %51 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data84, align 8, !dbg !8385
  %status85 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %51, i32 0, i32 0, !dbg !8386
  store i32 %and83, i32* %status85, align 16, !dbg !8387
  br label %if.end86, !dbg !8388

if.end86:                                         ; preds = %if.then70, %lor.lhs.false64
  %52 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8389
  %td_data87 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %52, i32 0, i32 3, !dbg !8389
  %53 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data87, align 8, !dbg !8389
  %status88 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %53, i32 0, i32 0, !dbg !8389
  %54 = load i32, i32* %status88, align 16, !dbg !8389
  %and89 = and i32 %54, 1073741823, !dbg !8389
  %or90 = or i32 %and89, -1073741824, !dbg !8389
  %55 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8390
  %td_data91 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %55, i32 0, i32 3, !dbg !8391
  %56 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data91, align 8, !dbg !8391
  %status92 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %56, i32 0, i32 0, !dbg !8392
  store i32 %or90, i32* %status92, align 16, !dbg !8393
  br label %if.end111, !dbg !8394

if.else:                                          ; preds = %if.end40
  br label %do.body93, !dbg !8395

do.body93:                                        ; preds = %if.else
  br label %do.end94, !dbg !8397

do.end94:                                         ; preds = %do.body93
  %57 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8399
  %td_data95 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %57, i32 0, i32 3, !dbg !8399
  %58 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data95, align 8, !dbg !8399
  %status96 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %58, i32 0, i32 0, !dbg !8399
  %59 = load i32, i32* %status96, align 16, !dbg !8399
  %and97 = and i32 %59, 1073741823, !dbg !8399
  %60 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8400
  %td_data98 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %60, i32 0, i32 3, !dbg !8401
  %61 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data98, align 8, !dbg !8401
  %status99 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %61, i32 0, i32 0, !dbg !8402
  store i32 %and97, i32* %status99, align 16, !dbg !8403
  %62 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8404
  %naking = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %62, i32 0, i32 13, !dbg !8406
  %63 = load i32, i32* %naking, align 4, !dbg !8406
  %tobool100 = icmp ne i32 %63, 0, !dbg !8404
  br i1 %tobool100, label %if.then101, label %if.end110, !dbg !8407

if.then101:                                       ; preds = %do.end94
  %64 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8408
  %regs = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %64, i32 0, i32 1, !dbg !8410
  %65 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs, align 8, !dbg !8410
  %ctl = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %65, i32 0, i32 0, !dbg !8411
  %66 = bitcast i32* %ctl to i8*, !dbg !8412
  %call102 = call i32 @readl(i8* %66) #11, !dbg !8413
  store i32 %call102, i32* %tmp, align 4, !dbg !8414
  %67 = load i32, i32* %tmp, align 4, !dbg !8415
  %or103 = or i32 %67, 256, !dbg !8415
  store i32 %or103, i32* %tmp, align 4, !dbg !8415
  %68 = load i32, i32* %tmp, align 4, !dbg !8416
  %69 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8417
  %regs104 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %69, i32 0, i32 1, !dbg !8418
  %70 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs104, align 8, !dbg !8418
  %ctl105 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %70, i32 0, i32 0, !dbg !8419
  %71 = bitcast i32* %ctl105 to i8*, !dbg !8420
  call void @writel(i32 %68, i8* %71) #11, !dbg !8421
  %72 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8422
  %naking106 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %72, i32 0, i32 13, !dbg !8423
  store i32 0, i32* %naking106, align 4, !dbg !8424
  %73 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8425
  %74 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8426
  %num107 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %74, i32 0, i32 18, !dbg !8427
  %75 = bitcast i24* %num107 to i32*, !dbg !8427
  %bf.load108 = load i32, i32* %75, align 8, !dbg !8427
  %bf.clear109 = and i32 %bf.load108, 31, !dbg !8427
  call void @UDC_QUEUE_CNAK(%struct.udc_ep* %73, i32 %bf.clear109) #11, !dbg !8428
  br label %if.end110, !dbg !8429

if.end110:                                        ; preds = %if.then101, %do.end94
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %if.end86
  %76 = load i32, i32* %retval1, align 4, !dbg !8430
  store i32 %76, i32* %retval, align 4, !dbg !8431
  br label %return, !dbg !8431

return:                                           ; preds = %if.end111, %if.end
  %77 = load i32, i32* %retval, align 4, !dbg !8432
  ret i32 %77, !dbg !8432
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_rxfifo_read_bytes(%struct.udc* %dev, i8* %buf, i32 %bytes) #0 !dbg !8433 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %buf.addr = alloca i8*, align 8
  %bytes.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !8436, metadata !DIExpression()), !dbg !8437
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8438, metadata !DIExpression()), !dbg !8439
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !8440, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8442, metadata !DIExpression()), !dbg !8443
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8444, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !8446, metadata !DIExpression()), !dbg !8447
  br label %do.body, !dbg !8448

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8449

do.end:                                           ; preds = %do.body
  store i32 0, i32* %i, align 4, !dbg !8451
  br label %for.cond, !dbg !8453

for.cond:                                         ; preds = %for.inc, %do.end
  %0 = load i32, i32* %i, align 4, !dbg !8454
  %1 = load i32, i32* %bytes.addr, align 4, !dbg !8456
  %div = sdiv i32 %1, 4, !dbg !8457
  %cmp = icmp slt i32 %0, %div, !dbg !8458
  br i1 %cmp, label %for.body, label %for.end, !dbg !8459

for.body:                                         ; preds = %for.cond
  %2 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !8460
  %rxfifo = getelementptr inbounds %struct.udc, %struct.udc* %2, i32 0, i32 11, !dbg !8461
  %3 = load i32*, i32** %rxfifo, align 8, !dbg !8461
  %4 = bitcast i32* %3 to i8*, !dbg !8460
  %call = call i32 @readl(i8* %4) #11, !dbg !8462
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !8463
  %6 = load i32, i32* %i, align 4, !dbg !8464
  %shl = shl i32 %6, 2, !dbg !8465
  %idx.ext = sext i32 %shl to i64, !dbg !8466
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !8466
  %7 = bitcast i8* %add.ptr to i32*, !dbg !8467
  store i32 %call, i32* %7, align 4, !dbg !8468
  br label %for.inc, !dbg !8467

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !8469
  %inc = add i32 %8, 1, !dbg !8469
  store i32 %inc, i32* %i, align 4, !dbg !8469
  br label %for.cond, !dbg !8470, !llvm.loop !8471

for.end:                                          ; preds = %for.cond
  %9 = load i32, i32* %bytes.addr, align 4, !dbg !8473
  %rem = srem i32 %9, 4, !dbg !8475
  %tobool = icmp ne i32 %rem, 0, !dbg !8475
  br i1 %tobool, label %if.then, label %if.end, !dbg !8476

if.then:                                          ; preds = %for.end
  %10 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !8477
  %rxfifo1 = getelementptr inbounds %struct.udc, %struct.udc* %10, i32 0, i32 11, !dbg !8479
  %11 = load i32*, i32** %rxfifo1, align 8, !dbg !8479
  %12 = bitcast i32* %11 to i8*, !dbg !8477
  %call2 = call i32 @readl(i8* %12) #11, !dbg !8480
  store i32 %call2, i32* %tmp, align 4, !dbg !8481
  store i32 0, i32* %j, align 4, !dbg !8482
  br label %for.cond3, !dbg !8484

for.cond3:                                        ; preds = %for.inc12, %if.then
  %13 = load i32, i32* %j, align 4, !dbg !8485
  %14 = load i32, i32* %bytes.addr, align 4, !dbg !8487
  %rem4 = srem i32 %14, 4, !dbg !8488
  %cmp5 = icmp slt i32 %13, %rem4, !dbg !8489
  br i1 %cmp5, label %for.body6, label %for.end14, !dbg !8490

for.body6:                                        ; preds = %for.cond3
  %15 = load i32, i32* %tmp, align 4, !dbg !8491
  %and = and i32 %15, 255, !dbg !8493
  %conv = trunc i32 %and to i8, !dbg !8494
  %16 = load i8*, i8** %buf.addr, align 8, !dbg !8495
  %17 = load i32, i32* %i, align 4, !dbg !8496
  %shl7 = shl i32 %17, 2, !dbg !8497
  %idx.ext8 = sext i32 %shl7 to i64, !dbg !8498
  %add.ptr9 = getelementptr i8, i8* %16, i64 %idx.ext8, !dbg !8498
  %18 = load i32, i32* %j, align 4, !dbg !8499
  %idx.ext10 = sext i32 %18 to i64, !dbg !8500
  %add.ptr11 = getelementptr i8, i8* %add.ptr9, i64 %idx.ext10, !dbg !8500
  store i8 %conv, i8* %add.ptr11, align 1, !dbg !8501
  %19 = load i32, i32* %tmp, align 4, !dbg !8502
  %shr = lshr i32 %19, 8, !dbg !8503
  store i32 %shr, i32* %tmp, align 4, !dbg !8504
  br label %for.inc12, !dbg !8505

for.inc12:                                        ; preds = %for.body6
  %20 = load i32, i32* %j, align 4, !dbg !8506
  %inc13 = add i32 %20, 1, !dbg !8506
  store i32 %inc13, i32* %j, align 4, !dbg !8506
  br label %for.cond3, !dbg !8507, !llvm.loop !8508

for.end14:                                        ; preds = %for.cond3
  br label %if.end, !dbg !8510

if.end:                                           ; preds = %for.end14, %for.end
  ret i32 0, !dbg !8511
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @phys_to_virt(i64 %address) #0 !dbg !8512 {
entry:
  %address.addr = alloca i64, align 8
  store i64 %address, i64* %address.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %address.addr, metadata !8515, metadata !DIExpression()), !dbg !8516
  %0 = load i64, i64* %address.addr, align 8, !dbg !8517
  %1 = load i64, i64* @page_offset_base, align 8, !dbg !8517
  %add = add i64 %0, %1, !dbg !8517
  %2 = inttoptr i64 %add to i8*, !dbg !8517
  ret i8* %2, !dbg !8518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_create_dma_chain(%struct.udc_ep* %ep, %struct.udc_request* %req, i64 %buf_len, i32 %gfp_flags) #0 !dbg !8519 {
entry:
  %retval = alloca i32, align 4
  %ep.addr = alloca %struct.udc_ep*, align 8
  %req.addr = alloca %struct.udc_request*, align 8
  %buf_len.addr = alloca i64, align 8
  %gfp_flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %i = alloca i32, align 4
  %dma_addr = alloca i64, align 8
  %td = alloca %struct.udc_data_dma*, align 8
  %last = alloca %struct.udc_data_dma*, align 8
  %txbytes = alloca i64, align 8
  %create_new_chain = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.udc_ep* %ep, %struct.udc_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep.addr, metadata !8522, metadata !DIExpression()), !dbg !8523
  store %struct.udc_request* %req, %struct.udc_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req.addr, metadata !8524, metadata !DIExpression()), !dbg !8525
  store i64 %buf_len, i64* %buf_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_len.addr, metadata !8526, metadata !DIExpression()), !dbg !8527
  store i32 %gfp_flags, i32* %gfp_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_flags.addr, metadata !8528, metadata !DIExpression()), !dbg !8529
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !8530, metadata !DIExpression()), !dbg !8531
  %0 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8532
  %req1 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %0, i32 0, i32 0, !dbg !8533
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req1, i32 0, i32 1, !dbg !8534
  %1 = load i32, i32* %length, align 8, !dbg !8534
  %conv = zext i32 %1 to i64, !dbg !8532
  store i64 %conv, i64* %bytes, align 8, !dbg !8531
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8535, metadata !DIExpression()), !dbg !8536
  call void @llvm.dbg.declare(metadata i64* %dma_addr, metadata !8537, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.declare(metadata %struct.udc_data_dma** %td, metadata !8539, metadata !DIExpression()), !dbg !8540
  store %struct.udc_data_dma* null, %struct.udc_data_dma** %td, align 8, !dbg !8540
  call void @llvm.dbg.declare(metadata %struct.udc_data_dma** %last, metadata !8541, metadata !DIExpression()), !dbg !8542
  store %struct.udc_data_dma* null, %struct.udc_data_dma** %last, align 8, !dbg !8542
  call void @llvm.dbg.declare(metadata i64* %txbytes, metadata !8543, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.declare(metadata i32* %create_new_chain, metadata !8545, metadata !DIExpression()), !dbg !8546
  store i32 0, i32* %create_new_chain, align 4, !dbg !8546
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8547, metadata !DIExpression()), !dbg !8548
  br label %do.body, !dbg !8549

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8550

do.end:                                           ; preds = %do.body
  store i64 -1, i64* %dma_addr, align 8, !dbg !8552
  %2 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8553
  %in = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %2, i32 0, i32 18, !dbg !8555
  %3 = bitcast i24* %in to i32*, !dbg !8555
  %bf.load = load i32, i32* %3, align 8, !dbg !8555
  %bf.lshr = lshr i32 %bf.load, 19, !dbg !8555
  %bf.clear = and i32 %bf.lshr, 1, !dbg !8555
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !8553
  br i1 %tobool, label %if.end, label %if.then, !dbg !8556

if.then:                                          ; preds = %do.end
  %4 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8557
  %td_data = getelementptr inbounds %struct.udc_request, %struct.udc_request* %4, i32 0, i32 3, !dbg !8558
  %5 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data, align 8, !dbg !8558
  %status = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %5, i32 0, i32 0, !dbg !8559
  %6 = load i32, i32* %status, align 16, !dbg !8560
  %and = and i32 %6, -134217729, !dbg !8560
  store i32 %and, i32* %status, align 16, !dbg !8560
  br label %if.end, !dbg !8557

if.end:                                           ; preds = %if.then, %do.end
  %7 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8561
  %req2 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %7, i32 0, i32 0, !dbg !8562
  %length3 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req2, i32 0, i32 1, !dbg !8563
  %8 = load i32, i32* %length3, align 8, !dbg !8563
  %9 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8564
  %ep4 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %9, i32 0, i32 0, !dbg !8565
  %maxpacket = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep4, i32 0, i32 7, !dbg !8566
  %10 = bitcast [7 x i8]* %maxpacket to i56*, !dbg !8566
  %bf.load5 = load i56, i56* %10, align 2, !dbg !8566
  %bf.clear6 = and i56 %bf.load5, 65535, !dbg !8566
  %bf.cast = trunc i56 %bf.clear6 to i32, !dbg !8566
  %div = udiv i32 %8, %bf.cast, !dbg !8567
  store i32 %div, i32* %len, align 4, !dbg !8568
  %11 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8569
  %req7 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %11, i32 0, i32 0, !dbg !8571
  %length8 = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req7, i32 0, i32 1, !dbg !8572
  %12 = load i32, i32* %length8, align 8, !dbg !8572
  %13 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8573
  %ep9 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %13, i32 0, i32 0, !dbg !8574
  %maxpacket10 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep9, i32 0, i32 7, !dbg !8575
  %14 = bitcast [7 x i8]* %maxpacket10 to i56*, !dbg !8575
  %bf.load11 = load i56, i56* %14, align 2, !dbg !8575
  %bf.clear12 = and i56 %bf.load11, 65535, !dbg !8575
  %bf.cast13 = trunc i56 %bf.clear12 to i32, !dbg !8575
  %rem = urem i32 %12, %bf.cast13, !dbg !8576
  %tobool14 = icmp ne i32 %rem, 0, !dbg !8576
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !8577

if.then15:                                        ; preds = %if.end
  %15 = load i32, i32* %len, align 4, !dbg !8578
  %inc = add i32 %15, 1, !dbg !8578
  store i32 %inc, i32* %len, align 4, !dbg !8578
  br label %if.end16, !dbg !8579

if.end16:                                         ; preds = %if.then15, %if.end
  %16 = load i32, i32* %len, align 4, !dbg !8580
  %17 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8582
  %chain_len = getelementptr inbounds %struct.udc_request, %struct.udc_request* %17, i32 0, i32 6, !dbg !8583
  %18 = load i32, i32* %chain_len, align 8, !dbg !8583
  %cmp = icmp ugt i32 %16, %18, !dbg !8584
  br i1 %cmp, label %if.then18, label %if.end25, !dbg !8585

if.then18:                                        ; preds = %if.end16
  %19 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8586
  %chain_len19 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %19, i32 0, i32 6, !dbg !8589
  %20 = load i32, i32* %chain_len19, align 8, !dbg !8589
  %cmp20 = icmp ugt i32 %20, 1, !dbg !8590
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !8591

if.then22:                                        ; preds = %if.then18
  %21 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8592
  %dev = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %21, i32 0, i32 14, !dbg !8593
  %22 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !8593
  %23 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8594
  call void @udc_free_dma_chain(%struct.udc* %22, %struct.udc_request* %23) #11, !dbg !8595
  br label %if.end23, !dbg !8595

if.end23:                                         ; preds = %if.then22, %if.then18
  %24 = load i32, i32* %len, align 4, !dbg !8596
  %25 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8597
  %chain_len24 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %25, i32 0, i32 6, !dbg !8598
  store i32 %24, i32* %chain_len24, align 8, !dbg !8599
  store i32 1, i32* %create_new_chain, align 4, !dbg !8600
  br label %if.end25, !dbg !8601

if.end25:                                         ; preds = %if.end23, %if.end16
  %26 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8602
  %td_data26 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %26, i32 0, i32 3, !dbg !8603
  %27 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data26, align 8, !dbg !8603
  store %struct.udc_data_dma* %27, %struct.udc_data_dma** %td, align 8, !dbg !8604
  %28 = load i64, i64* %buf_len.addr, align 8, !dbg !8605
  %conv27 = trunc i64 %28 to i32, !dbg !8605
  store i32 %conv27, i32* %i, align 4, !dbg !8607
  br label %for.cond, !dbg !8608

for.cond:                                         ; preds = %for.inc, %if.end25
  %29 = load i32, i32* %i, align 4, !dbg !8609
  %conv28 = zext i32 %29 to i64, !dbg !8609
  %30 = load i64, i64* %bytes, align 8, !dbg !8611
  %cmp29 = icmp ult i64 %conv28, %30, !dbg !8612
  br i1 %cmp29, label %for.body, label %for.end, !dbg !8613

for.body:                                         ; preds = %for.cond
  %31 = load i32, i32* %create_new_chain, align 4, !dbg !8614
  %tobool31 = icmp ne i32 %31, 0, !dbg !8614
  br i1 %tobool31, label %if.then32, label %if.else, !dbg !8617

if.then32:                                        ; preds = %for.body
  %32 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8618
  %dev33 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %32, i32 0, i32 14, !dbg !8620
  %33 = load %struct.udc*, %struct.udc** %dev33, align 8, !dbg !8620
  %data_requests = getelementptr inbounds %struct.udc, %struct.udc* %33, i32 0, i32 13, !dbg !8621
  %34 = load %struct.dma_pool*, %struct.dma_pool** %data_requests, align 8, !dbg !8621
  %35 = load i32, i32* %gfp_flags.addr, align 4, !dbg !8622
  %call = call i8* @dma_pool_alloc(%struct.dma_pool* %34, i32 %35, i64* %dma_addr) #11, !dbg !8623
  %36 = bitcast i8* %call to %struct.udc_data_dma*, !dbg !8623
  store %struct.udc_data_dma* %36, %struct.udc_data_dma** %td, align 8, !dbg !8624
  %37 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8625
  %tobool34 = icmp ne %struct.udc_data_dma* %37, null, !dbg !8625
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !8627

if.then35:                                        ; preds = %if.then32
  store i32 -12, i32* %retval, align 4, !dbg !8628
  br label %return, !dbg !8628

if.end36:                                         ; preds = %if.then32
  %38 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8629
  %status37 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %38, i32 0, i32 0, !dbg !8630
  store i32 0, i32* %status37, align 16, !dbg !8631
  br label %if.end52, !dbg !8632

if.else:                                          ; preds = %for.body
  %39 = load i32, i32* %i, align 4, !dbg !8633
  %conv38 = zext i32 %39 to i64, !dbg !8633
  %40 = load i64, i64* %buf_len.addr, align 8, !dbg !8635
  %cmp39 = icmp eq i64 %conv38, %40, !dbg !8636
  br i1 %cmp39, label %if.then41, label %if.else46, !dbg !8637

if.then41:                                        ; preds = %if.else
  %41 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8638
  %td_data42 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %41, i32 0, i32 3, !dbg !8640
  %42 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data42, align 8, !dbg !8640
  %next = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %42, i32 0, i32 3, !dbg !8641
  %43 = load i32, i32* %next, align 4, !dbg !8641
  %conv43 = zext i32 %43 to i64, !dbg !8638
  %call44 = call i8* @phys_to_virt(i64 %conv43) #11, !dbg !8642
  %44 = bitcast i8* %call44 to %struct.udc_data_dma*, !dbg !8643
  store %struct.udc_data_dma* %44, %struct.udc_data_dma** %td, align 8, !dbg !8644
  %45 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8645
  %status45 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %45, i32 0, i32 0, !dbg !8646
  store i32 0, i32* %status45, align 16, !dbg !8647
  br label %if.end51, !dbg !8648

if.else46:                                        ; preds = %if.else
  %46 = load %struct.udc_data_dma*, %struct.udc_data_dma** %last, align 8, !dbg !8649
  %next47 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %46, i32 0, i32 3, !dbg !8651
  %47 = load i32, i32* %next47, align 4, !dbg !8651
  %conv48 = zext i32 %47 to i64, !dbg !8649
  %call49 = call i8* @phys_to_virt(i64 %conv48) #11, !dbg !8652
  %48 = bitcast i8* %call49 to %struct.udc_data_dma*, !dbg !8653
  store %struct.udc_data_dma* %48, %struct.udc_data_dma** %td, align 8, !dbg !8654
  %49 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8655
  %status50 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %49, i32 0, i32 0, !dbg !8656
  store i32 0, i32* %status50, align 16, !dbg !8657
  br label %if.end51

if.end51:                                         ; preds = %if.else46, %if.then41
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.end36
  %50 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8658
  %tobool53 = icmp ne %struct.udc_data_dma* %50, null, !dbg !8658
  br i1 %tobool53, label %if.then54, label %if.else58, !dbg !8660

if.then54:                                        ; preds = %if.end52
  %51 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8661
  %req55 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %51, i32 0, i32 0, !dbg !8662
  %dma = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req55, i32 0, i32 2, !dbg !8663
  %52 = load i64, i64* %dma, align 8, !dbg !8663
  %53 = load i32, i32* %i, align 4, !dbg !8664
  %conv56 = zext i32 %53 to i64, !dbg !8664
  %add = add i64 %52, %conv56, !dbg !8665
  %conv57 = trunc i64 %add to i32, !dbg !8661
  %54 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8666
  %bufptr = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %54, i32 0, i32 2, !dbg !8667
  store i32 %conv57, i32* %bufptr, align 8, !dbg !8668
  br label %if.end59, !dbg !8666

if.else58:                                        ; preds = %if.end52
  br label %for.end, !dbg !8669

if.end59:                                         ; preds = %if.then54
  %55 = load i64, i64* %bytes, align 8, !dbg !8670
  %56 = load i32, i32* %i, align 4, !dbg !8672
  %conv60 = zext i32 %56 to i64, !dbg !8672
  %sub = sub i64 %55, %conv60, !dbg !8673
  %57 = load i64, i64* %buf_len.addr, align 8, !dbg !8674
  %cmp61 = icmp uge i64 %sub, %57, !dbg !8675
  br i1 %cmp61, label %if.then63, label %if.else64, !dbg !8676

if.then63:                                        ; preds = %if.end59
  %58 = load i64, i64* %buf_len.addr, align 8, !dbg !8677
  store i64 %58, i64* %txbytes, align 8, !dbg !8679
  br label %if.end67, !dbg !8680

if.else64:                                        ; preds = %if.end59
  %59 = load i64, i64* %bytes, align 8, !dbg !8681
  %60 = load i32, i32* %i, align 4, !dbg !8683
  %conv65 = zext i32 %60 to i64, !dbg !8683
  %sub66 = sub i64 %59, %conv65, !dbg !8684
  store i64 %sub66, i64* %txbytes, align 8, !dbg !8685
  br label %if.end67

if.end67:                                         ; preds = %if.else64, %if.then63
  %61 = load i32, i32* %i, align 4, !dbg !8686
  %conv68 = zext i32 %61 to i64, !dbg !8686
  %62 = load i64, i64* %buf_len.addr, align 8, !dbg !8688
  %cmp69 = icmp eq i64 %conv68, %62, !dbg !8689
  br i1 %cmp69, label %if.then71, label %if.else104, !dbg !8690

if.then71:                                        ; preds = %if.end67
  %63 = load i32, i32* %create_new_chain, align 4, !dbg !8691
  %tobool72 = icmp ne i32 %63, 0, !dbg !8691
  br i1 %tobool72, label %if.then73, label %if.end77, !dbg !8694

if.then73:                                        ; preds = %if.then71
  %64 = load i64, i64* %dma_addr, align 8, !dbg !8695
  %conv74 = trunc i64 %64 to i32, !dbg !8695
  %65 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8696
  %td_data75 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %65, i32 0, i32 3, !dbg !8697
  %66 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data75, align 8, !dbg !8697
  %next76 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %66, i32 0, i32 3, !dbg !8698
  store i32 %conv74, i32* %next76, align 4, !dbg !8699
  br label %if.end77, !dbg !8696

if.end77:                                         ; preds = %if.then73, %if.then71
  %67 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8700
  %in78 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %67, i32 0, i32 18, !dbg !8702
  %68 = bitcast i24* %in78 to i32*, !dbg !8702
  %bf.load79 = load i32, i32* %68, align 8, !dbg !8702
  %bf.lshr80 = lshr i32 %bf.load79, 19, !dbg !8702
  %bf.clear81 = and i32 %bf.lshr80, 1, !dbg !8702
  %tobool82 = icmp ne i32 %bf.clear81, 0, !dbg !8700
  br i1 %tobool82, label %if.then83, label %if.end103, !dbg !8703

if.then83:                                        ; preds = %if.end77
  %69 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8704
  %td_data84 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %69, i32 0, i32 3, !dbg !8704
  %70 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data84, align 8, !dbg !8704
  %status85 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %70, i32 0, i32 0, !dbg !8704
  %71 = load i32, i32* %status85, align 16, !dbg !8704
  %and86 = and i32 %71, -65536, !dbg !8704
  %72 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8704
  %ep87 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %72, i32 0, i32 0, !dbg !8704
  %maxpacket88 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep87, i32 0, i32 7, !dbg !8704
  %73 = bitcast [7 x i8]* %maxpacket88 to i56*, !dbg !8704
  %bf.load89 = load i56, i56* %73, align 2, !dbg !8704
  %bf.clear90 = and i56 %bf.load89, 65535, !dbg !8704
  %bf.cast91 = trunc i56 %bf.clear90 to i32, !dbg !8704
  %shl = shl i32 %bf.cast91, 0, !dbg !8704
  %and92 = and i32 %shl, 65535, !dbg !8704
  %or = or i32 %and86, %and92, !dbg !8704
  %74 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8706
  %td_data93 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %74, i32 0, i32 3, !dbg !8707
  %75 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data93, align 8, !dbg !8707
  %status94 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %75, i32 0, i32 0, !dbg !8708
  store i32 %or, i32* %status94, align 16, !dbg !8709
  %76 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8710
  %status95 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %76, i32 0, i32 0, !dbg !8710
  %77 = load i32, i32* %status95, align 16, !dbg !8710
  %and96 = and i32 %77, -65536, !dbg !8710
  %conv97 = zext i32 %and96 to i64, !dbg !8710
  %78 = load i64, i64* %txbytes, align 8, !dbg !8710
  %shl98 = shl i64 %78, 0, !dbg !8710
  %and99 = and i64 %shl98, 65535, !dbg !8710
  %or100 = or i64 %conv97, %and99, !dbg !8710
  %conv101 = trunc i64 %or100 to i32, !dbg !8710
  %79 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8711
  %status102 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %79, i32 0, i32 0, !dbg !8712
  store i32 %conv101, i32* %status102, align 16, !dbg !8713
  br label %if.end103, !dbg !8714

if.end103:                                        ; preds = %if.then83, %if.end77
  br label %if.end125, !dbg !8715

if.else104:                                       ; preds = %if.end67
  %80 = load i32, i32* %create_new_chain, align 4, !dbg !8716
  %tobool105 = icmp ne i32 %80, 0, !dbg !8716
  br i1 %tobool105, label %if.then106, label %if.end109, !dbg !8719

if.then106:                                       ; preds = %if.else104
  %81 = load i64, i64* %dma_addr, align 8, !dbg !8720
  %conv107 = trunc i64 %81 to i32, !dbg !8720
  %82 = load %struct.udc_data_dma*, %struct.udc_data_dma** %last, align 8, !dbg !8721
  %next108 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %82, i32 0, i32 3, !dbg !8722
  store i32 %conv107, i32* %next108, align 4, !dbg !8723
  br label %if.end109, !dbg !8721

if.end109:                                        ; preds = %if.then106, %if.else104
  %83 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8724
  %in110 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %83, i32 0, i32 18, !dbg !8726
  %84 = bitcast i24* %in110 to i32*, !dbg !8726
  %bf.load111 = load i32, i32* %84, align 8, !dbg !8726
  %bf.lshr112 = lshr i32 %bf.load111, 19, !dbg !8726
  %bf.clear113 = and i32 %bf.lshr112, 1, !dbg !8726
  %tobool114 = icmp ne i32 %bf.clear113, 0, !dbg !8724
  br i1 %tobool114, label %if.then115, label %if.end124, !dbg !8727

if.then115:                                       ; preds = %if.end109
  %85 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8728
  %status116 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %85, i32 0, i32 0, !dbg !8728
  %86 = load i32, i32* %status116, align 16, !dbg !8728
  %and117 = and i32 %86, -65536, !dbg !8728
  %conv118 = zext i32 %and117 to i64, !dbg !8728
  %87 = load i64, i64* %txbytes, align 8, !dbg !8728
  %shl119 = shl i64 %87, 0, !dbg !8728
  %and120 = and i64 %shl119, 65535, !dbg !8728
  %or121 = or i64 %conv118, %and120, !dbg !8728
  %conv122 = trunc i64 %or121 to i32, !dbg !8728
  %88 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8730
  %status123 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %88, i32 0, i32 0, !dbg !8731
  store i32 %conv122, i32* %status123, align 16, !dbg !8732
  br label %if.end124, !dbg !8733

if.end124:                                        ; preds = %if.then115, %if.end109
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.end103
  %89 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8734
  store %struct.udc_data_dma* %89, %struct.udc_data_dma** %last, align 8, !dbg !8735
  br label %for.inc, !dbg !8736

for.inc:                                          ; preds = %if.end125
  %90 = load i64, i64* %buf_len.addr, align 8, !dbg !8737
  %91 = load i32, i32* %i, align 4, !dbg !8738
  %conv126 = zext i32 %91 to i64, !dbg !8738
  %add127 = add i64 %conv126, %90, !dbg !8738
  %conv128 = trunc i64 %add127 to i32, !dbg !8738
  store i32 %conv128, i32* %i, align 4, !dbg !8738
  br label %for.cond, !dbg !8739, !llvm.loop !8740

for.end:                                          ; preds = %if.else58, %for.cond
  %92 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8742
  %tobool129 = icmp ne %struct.udc_data_dma* %92, null, !dbg !8742
  br i1 %tobool129, label %if.then130, label %if.end133, !dbg !8744

if.then130:                                       ; preds = %for.end
  %93 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8745
  %status131 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %93, i32 0, i32 0, !dbg !8747
  %94 = load i32, i32* %status131, align 16, !dbg !8748
  %or132 = or i32 %94, 134217728, !dbg !8748
  store i32 %or132, i32* %status131, align 16, !dbg !8748
  %95 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8749
  %96 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8750
  %td_data_last = getelementptr inbounds %struct.udc_request, %struct.udc_request* %96, i32 0, i32 4, !dbg !8751
  store %struct.udc_data_dma* %95, %struct.udc_data_dma** %td_data_last, align 8, !dbg !8752
  br label %if.end133, !dbg !8753

if.end133:                                        ; preds = %if.then130, %for.end
  store i32 0, i32* %retval, align 4, !dbg !8754
  br label %return, !dbg !8754

return:                                           ; preds = %if.end133, %if.then35
  %97 = load i32, i32* %retval, align 4, !dbg !8755
  ret i32 %97, !dbg !8755
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @udc_free_dma_chain(%struct.udc* %dev, %struct.udc_request* %req) #0 !dbg !8756 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %req.addr = alloca %struct.udc_request*, align 8
  %td = alloca %struct.udc_data_dma*, align 8
  %i = alloca i32, align 4
  %addr_next = alloca i64, align 8
  %addr = alloca i64, align 8
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !8759, metadata !DIExpression()), !dbg !8760
  store %struct.udc_request* %req, %struct.udc_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req.addr, metadata !8761, metadata !DIExpression()), !dbg !8762
  call void @llvm.dbg.declare(metadata %struct.udc_data_dma** %td, metadata !8763, metadata !DIExpression()), !dbg !8764
  %0 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8765
  %td_data = getelementptr inbounds %struct.udc_request, %struct.udc_request* %0, i32 0, i32 3, !dbg !8766
  %1 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data, align 8, !dbg !8766
  store %struct.udc_data_dma* %1, %struct.udc_data_dma** %td, align 8, !dbg !8764
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8767, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.declare(metadata i64* %addr_next, metadata !8769, metadata !DIExpression()), !dbg !8770
  store i64 0, i64* %addr_next, align 8, !dbg !8770
  call void @llvm.dbg.declare(metadata i64* %addr, metadata !8771, metadata !DIExpression()), !dbg !8772
  %2 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8773
  %next = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %2, i32 0, i32 3, !dbg !8774
  %3 = load i32, i32* %next, align 4, !dbg !8774
  %conv = zext i32 %3 to i64, !dbg !8775
  store i64 %conv, i64* %addr, align 8, !dbg !8772
  store i32 1, i32* %i, align 4, !dbg !8776
  br label %for.cond, !dbg !8778

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !8779
  %5 = load %struct.udc_request*, %struct.udc_request** %req.addr, align 8, !dbg !8781
  %chain_len = getelementptr inbounds %struct.udc_request, %struct.udc_request* %5, i32 0, i32 6, !dbg !8782
  %6 = load i32, i32* %chain_len, align 8, !dbg !8782
  %cmp = icmp ult i32 %4, %6, !dbg !8783
  br i1 %cmp, label %for.body, label %for.end, !dbg !8784

for.body:                                         ; preds = %for.cond
  %7 = load i64, i64* %addr, align 8, !dbg !8785
  %call = call i8* @phys_to_virt(i64 %7) #11, !dbg !8787
  %8 = bitcast i8* %call to %struct.udc_data_dma*, !dbg !8787
  store %struct.udc_data_dma* %8, %struct.udc_data_dma** %td, align 8, !dbg !8788
  %9 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8789
  %next2 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %9, i32 0, i32 3, !dbg !8790
  %10 = load i32, i32* %next2, align 4, !dbg !8790
  %conv3 = zext i32 %10 to i64, !dbg !8791
  store i64 %conv3, i64* %addr_next, align 8, !dbg !8792
  %11 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !8793
  %data_requests = getelementptr inbounds %struct.udc, %struct.udc* %11, i32 0, i32 13, !dbg !8794
  %12 = load %struct.dma_pool*, %struct.dma_pool** %data_requests, align 8, !dbg !8794
  %13 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !8795
  %14 = bitcast %struct.udc_data_dma* %13 to i8*, !dbg !8795
  %15 = load i64, i64* %addr, align 8, !dbg !8796
  call void @dma_pool_free(%struct.dma_pool* %12, i8* %14, i64 %15) #11, !dbg !8797
  %16 = load i64, i64* %addr_next, align 8, !dbg !8798
  store i64 %16, i64* %addr, align 8, !dbg !8799
  br label %for.inc, !dbg !8800

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !8801
  %inc = add i32 %17, 1, !dbg !8801
  store i32 %inc, i32* %i, align 4, !dbg !8801
  br label %for.cond, !dbg !8802, !llvm.loop !8803

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8805
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: noredzone
declare dso_local void @usb_gadget_udc_reset(%struct.usb_gadget*, %struct.usb_gadget_driver*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ep_init(%struct.udc_regs* %regs, %struct.udc_ep* %ep) #0 !dbg !8806 {
entry:
  %regs.addr = alloca %struct.udc_regs*, align 8
  %ep.addr = alloca %struct.udc_ep*, align 8
  %tmp = alloca i32, align 4
  store %struct.udc_regs* %regs, %struct.udc_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_regs** %regs.addr, metadata !8809, metadata !DIExpression()), !dbg !8810
  store %struct.udc_ep* %ep, %struct.udc_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep.addr, metadata !8811, metadata !DIExpression()), !dbg !8812
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !8813, metadata !DIExpression()), !dbg !8814
  br label %do.body, !dbg !8815

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8816

do.end:                                           ; preds = %do.body
  %0 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8818
  %ep1 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %0, i32 0, i32 0, !dbg !8819
  %desc = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep1, i32 0, i32 9, !dbg !8820
  store %struct.usb_endpoint_descriptor* null, %struct.usb_endpoint_descriptor** %desc, align 8, !dbg !8821
  %1 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8822
  %ep2 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %1, i32 0, i32 0, !dbg !8823
  %ops = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep2, i32 0, i32 2, !dbg !8824
  store %struct.usb_ep_ops* @udc_ep_ops, %struct.usb_ep_ops** %ops, align 8, !dbg !8825
  %2 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8826
  %queue = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %2, i32 0, i32 15, !dbg !8827
  call void @INIT_LIST_HEAD(%struct.list_head* %queue) #11, !dbg !8828
  %3 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8829
  %ep3 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %3, i32 0, i32 0, !dbg !8830
  call void @usb_ep_set_maxpacket_limit(%struct.usb_ep* %ep3, i32 65535) #11, !dbg !8831
  %4 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8832
  %regs4 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %4, i32 0, i32 1, !dbg !8833
  %5 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs4, align 8, !dbg !8833
  %ctl = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %5, i32 0, i32 0, !dbg !8834
  %6 = bitcast i32* %ctl to i8*, !dbg !8835
  %call = call i32 @readl(i8* %6) #11, !dbg !8836
  store i32 %call, i32* %tmp, align 4, !dbg !8837
  %7 = load i32, i32* %tmp, align 4, !dbg !8838
  %or = or i32 %7, 128, !dbg !8838
  store i32 %or, i32* %tmp, align 4, !dbg !8838
  %8 = load i32, i32* %tmp, align 4, !dbg !8839
  %9 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8840
  %regs5 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %9, i32 0, i32 1, !dbg !8841
  %10 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs5, align 8, !dbg !8841
  %ctl6 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %10, i32 0, i32 0, !dbg !8842
  %11 = bitcast i32* %ctl6 to i8*, !dbg !8843
  call void @writel(i32 %8, i8* %11) #11, !dbg !8844
  %12 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8845
  %naking = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %12, i32 0, i32 13, !dbg !8846
  store i32 1, i32* %naking, align 4, !dbg !8847
  %13 = load %struct.udc_regs*, %struct.udc_regs** %regs.addr, align 8, !dbg !8848
  %ep_irqmsk = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %13, i32 0, i32 6, !dbg !8849
  %14 = bitcast i32* %ep_irqmsk to i8*, !dbg !8850
  %call7 = call i32 @readl(i8* %14) #11, !dbg !8851
  store i32 %call7, i32* %tmp, align 4, !dbg !8852
  %15 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8853
  %num = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %15, i32 0, i32 18, !dbg !8853
  %16 = bitcast i24* %num to i32*, !dbg !8853
  %bf.load = load i32, i32* %16, align 8, !dbg !8853
  %bf.clear = and i32 %bf.load, 31, !dbg !8853
  %shl = shl i32 1, %bf.clear, !dbg !8853
  %17 = load i32, i32* %tmp, align 4, !dbg !8854
  %or8 = or i32 %17, %shl, !dbg !8854
  store i32 %or8, i32* %tmp, align 4, !dbg !8854
  %18 = load i32, i32* %tmp, align 4, !dbg !8855
  %19 = load %struct.udc_regs*, %struct.udc_regs** %regs.addr, align 8, !dbg !8856
  %ep_irqmsk9 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %19, i32 0, i32 6, !dbg !8857
  %20 = bitcast i32* %ep_irqmsk9 to i8*, !dbg !8858
  call void @writel(i32 %18, i8* %20) #11, !dbg !8859
  %21 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8860
  %in = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %21, i32 0, i32 18, !dbg !8862
  %22 = bitcast i24* %in to i32*, !dbg !8862
  %bf.load10 = load i32, i32* %22, align 8, !dbg !8862
  %bf.lshr = lshr i32 %bf.load10, 19, !dbg !8862
  %bf.clear11 = and i32 %bf.lshr, 1, !dbg !8862
  %tobool = icmp ne i32 %bf.clear11, 0, !dbg !8860
  br i1 %tobool, label %if.then, label %if.end, !dbg !8863

if.then:                                          ; preds = %do.end
  %23 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8864
  %regs12 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %23, i32 0, i32 1, !dbg !8866
  %24 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs12, align 8, !dbg !8866
  %ctl13 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %24, i32 0, i32 0, !dbg !8867
  %25 = bitcast i32* %ctl13 to i8*, !dbg !8868
  %call14 = call i32 @readl(i8* %25) #11, !dbg !8869
  store i32 %call14, i32* %tmp, align 4, !dbg !8870
  %26 = load i32, i32* %tmp, align 4, !dbg !8871
  %and = and i32 %26, -9, !dbg !8871
  store i32 %and, i32* %tmp, align 4, !dbg !8871
  %27 = load i32, i32* %tmp, align 4, !dbg !8872
  %28 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8873
  %regs15 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %28, i32 0, i32 1, !dbg !8874
  %29 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs15, align 8, !dbg !8874
  %ctl16 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %29, i32 0, i32 0, !dbg !8875
  %30 = bitcast i32* %ctl16 to i8*, !dbg !8876
  call void @writel(i32 %27, i8* %30) #11, !dbg !8877
  %31 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8878
  %regs17 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %31, i32 0, i32 1, !dbg !8879
  %32 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs17, align 8, !dbg !8879
  %sts = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %32, i32 0, i32 1, !dbg !8880
  %33 = bitcast i32* %sts to i8*, !dbg !8881
  %call18 = call i32 @readl(i8* %33) #11, !dbg !8882
  store i32 %call18, i32* %tmp, align 4, !dbg !8883
  %34 = load i32, i32* %tmp, align 4, !dbg !8884
  %or19 = or i32 %34, 64, !dbg !8884
  store i32 %or19, i32* %tmp, align 4, !dbg !8884
  %35 = load i32, i32* %tmp, align 4, !dbg !8885
  %36 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8886
  %regs20 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %36, i32 0, i32 1, !dbg !8887
  %37 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs20, align 8, !dbg !8887
  %sts21 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %37, i32 0, i32 1, !dbg !8888
  %38 = bitcast i32* %sts21 to i8*, !dbg !8889
  call void @writel(i32 %35, i8* %38) #11, !dbg !8890
  %39 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8891
  %regs22 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %39, i32 0, i32 1, !dbg !8892
  %40 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs22, align 8, !dbg !8892
  %ctl23 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %40, i32 0, i32 0, !dbg !8893
  %41 = bitcast i32* %ctl23 to i8*, !dbg !8894
  %call24 = call i32 @readl(i8* %41) #11, !dbg !8895
  store i32 %call24, i32* %tmp, align 4, !dbg !8896
  %42 = load i32, i32* %tmp, align 4, !dbg !8897
  %or25 = or i32 %42, 2, !dbg !8897
  store i32 %or25, i32* %tmp, align 4, !dbg !8897
  %43 = load i32, i32* %tmp, align 4, !dbg !8898
  %44 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8899
  %regs26 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %44, i32 0, i32 1, !dbg !8900
  %45 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs26, align 8, !dbg !8900
  %ctl27 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %45, i32 0, i32 0, !dbg !8901
  %46 = bitcast i32* %ctl27 to i8*, !dbg !8902
  call void @writel(i32 %43, i8* %46) #11, !dbg !8903
  br label %if.end, !dbg !8904

if.end:                                           ; preds = %if.then, %do.end
  %47 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !8905
  %regs28 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %47, i32 0, i32 1, !dbg !8906
  %48 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs28, align 8, !dbg !8906
  %desptr = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %48, i32 0, i32 5, !dbg !8907
  %49 = bitcast i32* %desptr to i8*, !dbg !8908
  call void @writel(i32 0, i8* %49) #11, !dbg !8909
  ret void, !dbg !8910
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @udc_soft_reset(%struct.udc* %dev) #0 !dbg !8911 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !7577, metadata !DIExpression()), !dbg !8912
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7583, metadata !DIExpression()), !dbg !8916
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7585, metadata !DIExpression()), !dbg !8917
  %dev.addr = alloca %struct.udc*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !8924, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8926, metadata !DIExpression()), !dbg !8927
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !8928
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %0, i32 0, i32 9, !dbg !8929
  %1 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !8929
  %ep_irqsts = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %1, i32 0, i32 5, !dbg !8930
  %2 = bitcast i32* %ep_irqsts to i8*, !dbg !8931
  call void @writel(i32 -1, i8* %2) #11, !dbg !8932
  %3 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !8933
  %regs1 = getelementptr inbounds %struct.udc, %struct.udc* %3, i32 0, i32 9, !dbg !8934
  %4 = load %struct.udc_regs*, %struct.udc_regs** %regs1, align 8, !dbg !8934
  %irqsts = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %4, i32 0, i32 3, !dbg !8935
  %5 = bitcast i32* %irqsts to i8*, !dbg !8936
  call void @writel(i32 127, i8* %5) #11, !dbg !8937
  %6 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !8938
  %chiprev = getelementptr inbounds %struct.udc, %struct.udc* %6, i32 0, i32 6, !dbg !8939
  %7 = load i16, i16* %chiprev, align 8, !dbg !8939
  %conv = zext i16 %7 to i32, !dbg !8938
  %cmp = icmp ne i32 %conv, 10, !dbg !8940
  br i1 %cmp, label %if.then, label %if.end, !dbg !8941

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8942

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !8943

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8944, metadata !DIExpression()), !dbg !8946
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8947, metadata !DIExpression()), !dbg !8946
  %cmp4 = icmp eq i64* %__dummy, %__dummy2, !dbg !8946
  %conv5 = zext i1 %cmp4 to i32, !dbg !8946
  store i32 1, i32* %tmp, align 4, !dbg !8946
  %8 = load i32, i32* %tmp, align 4, !dbg !8946
  br label %do.body6, !dbg !8948

do.body6:                                         ; preds = %do.body3
  br label %do.body7, !dbg !8949

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !8950

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !8952, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !8956, metadata !DIExpression()), !dbg !8955
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !8955
  %conv12 = zext i1 %cmp11 to i32, !dbg !8955
  store i32 1, i32* %tmp13, align 4, !dbg !8955
  %9 = load i32, i32* %tmp13, align 4, !dbg !8955
  %call = call i64 @arch_local_irq_save() #11, !dbg !8957
  store i64 %call, i64* %flags, align 8, !dbg !8957
  br label %do.end, !dbg !8957

do.end:                                           ; preds = %do.body8
  br label %do.end14, !dbg !8950

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !8949

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !8958, !srcloc !8959
  br label %do.body16, !dbg !8958

do.body16:                                        ; preds = %do.body15
  store %struct.spinlock* @udc_irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8960
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !8961
  %rlock.i = bitcast %union.anon.4* %11 to %struct.raw_spinlock*, !dbg !8961
  br label %do.end18, !dbg !8962

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !8958

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !8949

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !8948

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !8943

do.end22:                                         ; preds = %do.end21
  %12 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !8963
  %regs23 = getelementptr inbounds %struct.udc, %struct.udc* %12, i32 0, i32 9, !dbg !8964
  %13 = load %struct.udc_regs*, %struct.udc_regs** %regs23, align 8, !dbg !8964
  %cfg = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %13, i32 0, i32 0, !dbg !8965
  %14 = bitcast i32* %cfg to i8*, !dbg !8966
  call void @writel(i32 -2147483648, i8* %14) #11, !dbg !8967
  %15 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !8968
  %regs24 = getelementptr inbounds %struct.udc, %struct.udc* %15, i32 0, i32 9, !dbg !8969
  %16 = load %struct.udc_regs*, %struct.udc_regs** %regs24, align 8, !dbg !8969
  %cfg25 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %16, i32 0, i32 0, !dbg !8970
  %17 = bitcast i32* %cfg25 to i8*, !dbg !8971
  %call26 = call i32 @readl(i8* %17) #11, !dbg !8972
  %18 = load i64, i64* %flags, align 8, !dbg !8973
  store %struct.spinlock* @udc_irq_spinlock, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !497, metadata !7746, metadata !DIExpression()) #5, !dbg !8974
  call void @llvm.dbg.declare(metadata !497, metadata !7750, metadata !DIExpression()) #5, !dbg !8974
  store i32 1, i32* %tmp.i, align 4, !dbg !8974
  %19 = load i32, i32* %tmp.i, align 4, !dbg !8974
  call void @llvm.dbg.declare(metadata !497, metadata !7751, metadata !DIExpression()) #5, !dbg !8975
  call void @llvm.dbg.declare(metadata !497, metadata !7757, metadata !DIExpression()) #5, !dbg !8975
  store i32 1, i32* %tmp8.i, align 4, !dbg !8975
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !8975
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !8976
  call void @arch_local_irq_restore(i64 %21) #13, !dbg !8976
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !8977, !srcloc !7761
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !8978
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !8978
  %rlock.i28 = bitcast %union.anon.4* %23 to %struct.raw_spinlock*, !dbg !8978
  br label %if.end, !dbg !8979

if.end:                                           ; preds = %do.end22, %entry
  ret void, !dbg !8980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @udc_setup_endpoints(%struct.udc* %dev) #0 !dbg !8981 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %ep = alloca %struct.udc_ep*, align 8
  %tmp = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !8982, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep, metadata !8984, metadata !DIExpression()), !dbg !8985
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !8986, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !8988, metadata !DIExpression()), !dbg !8989
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !8990
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %0, i32 0, i32 9, !dbg !8991
  %1 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !8991
  %sts = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %1, i32 0, i32 2, !dbg !8992
  %2 = bitcast i32* %sts to i8*, !dbg !8993
  %call = call i32 @readl(i8* %2) #11, !dbg !8994
  store i32 %call, i32* %tmp, align 4, !dbg !8995
  %3 = load i32, i32* %tmp, align 4, !dbg !8996
  %and = and i32 %3, 24576, !dbg !8996
  %shr = lshr i32 %and, 13, !dbg !8996
  store i32 %shr, i32* %tmp, align 4, !dbg !8997
  %4 = load i32, i32* %tmp, align 4, !dbg !8998
  %cmp = icmp eq i32 %4, 0, !dbg !9000
  br i1 %cmp, label %if.then, label %if.else, !dbg !9001

if.then:                                          ; preds = %entry
  %5 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9002
  %gadget = getelementptr inbounds %struct.udc, %struct.udc* %5, i32 0, i32 0, !dbg !9003
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !9004
  store i32 3, i32* %speed, align 8, !dbg !9005
  br label %if.end5, !dbg !9002

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %tmp, align 4, !dbg !9006
  %cmp1 = icmp eq i32 %6, 1, !dbg !9008
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !9009

if.then2:                                         ; preds = %if.else
  %7 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9010
  %gadget3 = getelementptr inbounds %struct.udc, %struct.udc* %7, i32 0, i32 0, !dbg !9011
  %speed4 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget3, i32 0, i32 5, !dbg !9012
  store i32 2, i32* %speed4, align 8, !dbg !9013
  br label %if.end, !dbg !9010

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  store i32 0, i32* %tmp, align 4, !dbg !9014
  br label %for.cond, !dbg !9016

for.cond:                                         ; preds = %for.inc, %if.end5
  %8 = load i32, i32* %tmp, align 4, !dbg !9017
  %cmp6 = icmp ult i32 %8, 32, !dbg !9019
  br i1 %cmp6, label %for.body, label %for.end, !dbg !9020

for.body:                                         ; preds = %for.cond
  %9 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9021
  %ep7 = getelementptr inbounds %struct.udc, %struct.udc* %9, i32 0, i32 2, !dbg !9023
  %10 = load i32, i32* %tmp, align 4, !dbg !9024
  %idxprom = zext i32 %10 to i64, !dbg !9021
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep7, i64 0, i64 %idxprom, !dbg !9021
  store %struct.udc_ep* %arrayidx, %struct.udc_ep** %ep, align 8, !dbg !9025
  %11 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9026
  %12 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9027
  %dev8 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %12, i32 0, i32 14, !dbg !9028
  store %struct.udc* %11, %struct.udc** %dev8, align 8, !dbg !9029
  %13 = load i32, i32* %tmp, align 4, !dbg !9030
  %idxprom9 = zext i32 %13 to i64, !dbg !9031
  %arrayidx10 = getelementptr [32 x %struct.anon.67], [32 x %struct.anon.67]* @ep_info, i64 0, i64 %idxprom9, !dbg !9031
  %name = getelementptr inbounds %struct.anon.67, %struct.anon.67* %arrayidx10, i32 0, i32 0, !dbg !9032
  %14 = load i8*, i8** %name, align 16, !dbg !9032
  %15 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9033
  %ep11 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %15, i32 0, i32 0, !dbg !9034
  %name12 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep11, i32 0, i32 1, !dbg !9035
  store i8* %14, i8** %name12, align 8, !dbg !9036
  %16 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9037
  %ep13 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %16, i32 0, i32 0, !dbg !9038
  %caps = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep13, i32 0, i32 4, !dbg !9039
  %17 = load i32, i32* %tmp, align 4, !dbg !9040
  %idxprom14 = zext i32 %17 to i64, !dbg !9041
  %arrayidx15 = getelementptr [32 x %struct.anon.67], [32 x %struct.anon.67]* @ep_info, i64 0, i64 %idxprom14, !dbg !9041
  %caps16 = getelementptr inbounds %struct.anon.67, %struct.anon.67* %arrayidx15, i32 0, i32 1, !dbg !9042
  %18 = bitcast %struct.usb_ep_caps* %caps to i8*, !dbg !9042
  %19 = bitcast %struct.usb_ep_caps* %caps16 to i8*, !dbg !9042
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 4, i1 false), !dbg !9042
  %20 = load i32, i32* %tmp, align 4, !dbg !9043
  %21 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9044
  %num = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %21, i32 0, i32 18, !dbg !9045
  %22 = bitcast i24* %num to i32*, !dbg !9045
  %bf.load = load i32, i32* %22, align 8, !dbg !9046
  %bf.value = and i32 %20, 31, !dbg !9046
  %bf.clear = and i32 %bf.load, -32, !dbg !9046
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !9046
  store i32 %bf.set, i32* %22, align 8, !dbg !9046
  %23 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9047
  %txfifo = getelementptr inbounds %struct.udc, %struct.udc* %23, i32 0, i32 12, !dbg !9048
  %24 = load i32*, i32** %txfifo, align 8, !dbg !9048
  %25 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9049
  %txfifo17 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %25, i32 0, i32 2, !dbg !9050
  store i32* %24, i32** %txfifo17, align 8, !dbg !9051
  %26 = load i32, i32* %tmp, align 4, !dbg !9052
  %cmp18 = icmp ult i32 %26, 16, !dbg !9054
  br i1 %cmp18, label %if.then19, label %if.else26, !dbg !9055

if.then19:                                        ; preds = %for.body
  %27 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9056
  %fifo_depth = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %27, i32 0, i32 18, !dbg !9058
  %28 = bitcast i24* %fifo_depth to i32*, !dbg !9058
  %bf.load20 = load i32, i32* %28, align 8, !dbg !9059
  %bf.clear21 = and i32 %bf.load20, -524257, !dbg !9059
  %bf.set22 = or i32 %bf.clear21, 49152, !dbg !9059
  store i32 %bf.set22, i32* %28, align 8, !dbg !9059
  %29 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9060
  %in = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %29, i32 0, i32 18, !dbg !9061
  %30 = bitcast i24* %in to i32*, !dbg !9061
  %bf.load23 = load i32, i32* %30, align 8, !dbg !9062
  %bf.clear24 = and i32 %bf.load23, -524289, !dbg !9062
  %bf.set25 = or i32 %bf.clear24, 524288, !dbg !9062
  store i32 %bf.set25, i32* %30, align 8, !dbg !9062
  br label %if.end34, !dbg !9063

if.else26:                                        ; preds = %for.body
  %31 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9064
  %fifo_depth27 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %31, i32 0, i32 18, !dbg !9066
  %32 = bitcast i24* %fifo_depth27 to i32*, !dbg !9066
  %bf.load28 = load i32, i32* %32, align 8, !dbg !9067
  %bf.clear29 = and i32 %bf.load28, -524257, !dbg !9067
  %bf.set30 = or i32 %bf.clear29, 32768, !dbg !9067
  store i32 %bf.set30, i32* %32, align 8, !dbg !9067
  %33 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9068
  %in31 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %33, i32 0, i32 18, !dbg !9069
  %34 = bitcast i24* %in31 to i32*, !dbg !9069
  %bf.load32 = load i32, i32* %34, align 8, !dbg !9070
  %bf.clear33 = and i32 %bf.load32, -524289, !dbg !9070
  store i32 %bf.clear33, i32* %34, align 8, !dbg !9070
  br label %if.end34

if.end34:                                         ; preds = %if.else26, %if.then19
  %35 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9071
  %ep_regs = getelementptr inbounds %struct.udc, %struct.udc* %35, i32 0, i32 10, !dbg !9072
  %36 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %ep_regs, align 8, !dbg !9072
  %37 = load i32, i32* %tmp, align 4, !dbg !9073
  %idxprom35 = zext i32 %37 to i64, !dbg !9071
  %arrayidx36 = getelementptr %struct.udc_ep_regs, %struct.udc_ep_regs* %36, i64 %idxprom35, !dbg !9071
  %38 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9074
  %regs37 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %38, i32 0, i32 1, !dbg !9075
  store %struct.udc_ep_regs* %arrayidx36, %struct.udc_ep_regs** %regs37, align 8, !dbg !9076
  %39 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9077
  %ep38 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %39, i32 0, i32 0, !dbg !9079
  %desc = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep38, i32 0, i32 9, !dbg !9080
  %40 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc, align 8, !dbg !9080
  %tobool = icmp ne %struct.usb_endpoint_descriptor* %40, null, !dbg !9077
  br i1 %tobool, label %if.end41, label %if.then39, !dbg !9081

if.then39:                                        ; preds = %if.end34
  %41 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9082
  %regs40 = getelementptr inbounds %struct.udc, %struct.udc* %41, i32 0, i32 9, !dbg !9083
  %42 = load %struct.udc_regs*, %struct.udc_regs** %regs40, align 8, !dbg !9083
  %43 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9084
  call void @ep_init(%struct.udc_regs* %42, %struct.udc_ep* %43) #11, !dbg !9085
  br label %if.end41, !dbg !9085

if.end41:                                         ; preds = %if.then39, %if.end34
  %44 = load i8, i8* @use_dma, align 1, !dbg !9086
  %tobool42 = trunc i8 %44 to i1, !dbg !9086
  br i1 %tobool42, label %if.then43, label %if.end65, !dbg !9088

if.then43:                                        ; preds = %if.end41
  %45 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9089
  %regs44 = getelementptr inbounds %struct.udc, %struct.udc* %45, i32 0, i32 9, !dbg !9091
  %46 = load %struct.udc_regs*, %struct.udc_regs** %regs44, align 8, !dbg !9091
  %ctl = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %46, i32 0, i32 1, !dbg !9092
  %47 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9093
  %dma = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %47, i32 0, i32 3, !dbg !9094
  store i32* %ctl, i32** %dma, align 8, !dbg !9095
  %48 = load i32, i32* %tmp, align 4, !dbg !9096
  %cmp45 = icmp ne i32 %48, 0, !dbg !9098
  br i1 %cmp45, label %land.lhs.true, label %if.end64, !dbg !9099

land.lhs.true:                                    ; preds = %if.then43
  %49 = load i32, i32* %tmp, align 4, !dbg !9100
  %cmp46 = icmp ne i32 %49, 16, !dbg !9101
  br i1 %cmp46, label %land.lhs.true47, label %if.end64, !dbg !9102

land.lhs.true47:                                  ; preds = %land.lhs.true
  %50 = load i32, i32* %tmp, align 4, !dbg !9103
  %cmp48 = icmp ugt i32 %50, 16, !dbg !9104
  br i1 %cmp48, label %if.then49, label %if.end64, !dbg !9105

if.then49:                                        ; preds = %land.lhs.true47
  %51 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9106
  %ep50 = getelementptr inbounds %struct.udc, %struct.udc* %51, i32 0, i32 2, !dbg !9108
  %52 = load i32, i32* %tmp, align 4, !dbg !9109
  %idxprom51 = zext i32 %52 to i64, !dbg !9106
  %arrayidx52 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep50, i64 0, i64 %idxprom51, !dbg !9106
  %regs53 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx52, i32 0, i32 1, !dbg !9110
  %53 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs53, align 8, !dbg !9110
  %ctl54 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %53, i32 0, i32 0, !dbg !9111
  %54 = bitcast i32* %ctl54 to i8*, !dbg !9112
  %call55 = call i32 @readl(i8* %54) #11, !dbg !9113
  store i32 %call55, i32* %reg, align 4, !dbg !9114
  %55 = load i32, i32* %reg, align 4, !dbg !9115
  %or = or i32 %55, 128, !dbg !9115
  store i32 %or, i32* %reg, align 4, !dbg !9115
  %56 = load i32, i32* %reg, align 4, !dbg !9116
  %57 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9117
  %ep56 = getelementptr inbounds %struct.udc, %struct.udc* %57, i32 0, i32 2, !dbg !9118
  %58 = load i32, i32* %tmp, align 4, !dbg !9119
  %idxprom57 = zext i32 %58 to i64, !dbg !9117
  %arrayidx58 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep56, i64 0, i64 %idxprom57, !dbg !9117
  %regs59 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx58, i32 0, i32 1, !dbg !9120
  %59 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs59, align 8, !dbg !9120
  %ctl60 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %59, i32 0, i32 0, !dbg !9121
  %60 = bitcast i32* %ctl60 to i8*, !dbg !9122
  call void @writel(i32 %56, i8* %60) #11, !dbg !9123
  %61 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9124
  %ep61 = getelementptr inbounds %struct.udc, %struct.udc* %61, i32 0, i32 2, !dbg !9125
  %62 = load i32, i32* %tmp, align 4, !dbg !9126
  %idxprom62 = zext i32 %62 to i64, !dbg !9124
  %arrayidx63 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep61, i64 0, i64 %idxprom62, !dbg !9124
  %naking = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx63, i32 0, i32 13, !dbg !9127
  store i32 1, i32* %naking, align 4, !dbg !9128
  br label %if.end64, !dbg !9129

if.end64:                                         ; preds = %if.then49, %land.lhs.true47, %land.lhs.true, %if.then43
  br label %if.end65, !dbg !9130

if.end65:                                         ; preds = %if.end64, %if.end41
  br label %for.inc, !dbg !9131

for.inc:                                          ; preds = %if.end65
  %63 = load i32, i32* %tmp, align 4, !dbg !9132
  %inc = add i32 %63, 1, !dbg !9132
  store i32 %inc, i32* %tmp, align 4, !dbg !9132
  br label %for.cond, !dbg !9133, !llvm.loop !9134

for.end:                                          ; preds = %for.cond
  %64 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9136
  %gadget66 = getelementptr inbounds %struct.udc, %struct.udc* %64, i32 0, i32 0, !dbg !9138
  %speed67 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget66, i32 0, i32 5, !dbg !9139
  %65 = load i32, i32* %speed67, align 8, !dbg !9139
  %cmp68 = icmp eq i32 %65, 2, !dbg !9140
  br i1 %cmp68, label %if.then69, label %if.else76, !dbg !9141

if.then69:                                        ; preds = %for.end
  %66 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9142
  %ep70 = getelementptr inbounds %struct.udc, %struct.udc* %66, i32 0, i32 2, !dbg !9144
  %arrayidx71 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep70, i64 0, i64 0, !dbg !9142
  %ep72 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx71, i32 0, i32 0, !dbg !9145
  call void @usb_ep_set_maxpacket_limit(%struct.usb_ep* %ep72, i32 64) #11, !dbg !9146
  %67 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9147
  %ep73 = getelementptr inbounds %struct.udc, %struct.udc* %67, i32 0, i32 2, !dbg !9148
  %arrayidx74 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep73, i64 0, i64 16, !dbg !9147
  %ep75 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx74, i32 0, i32 0, !dbg !9149
  call void @usb_ep_set_maxpacket_limit(%struct.usb_ep* %ep75, i32 64) #11, !dbg !9150
  br label %if.end88, !dbg !9151

if.else76:                                        ; preds = %for.end
  %68 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9152
  %gadget77 = getelementptr inbounds %struct.udc, %struct.udc* %68, i32 0, i32 0, !dbg !9154
  %speed78 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget77, i32 0, i32 5, !dbg !9155
  %69 = load i32, i32* %speed78, align 8, !dbg !9155
  %cmp79 = icmp eq i32 %69, 3, !dbg !9156
  br i1 %cmp79, label %if.then80, label %if.end87, !dbg !9157

if.then80:                                        ; preds = %if.else76
  %70 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9158
  %ep81 = getelementptr inbounds %struct.udc, %struct.udc* %70, i32 0, i32 2, !dbg !9160
  %arrayidx82 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep81, i64 0, i64 0, !dbg !9158
  %ep83 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx82, i32 0, i32 0, !dbg !9161
  call void @usb_ep_set_maxpacket_limit(%struct.usb_ep* %ep83, i32 64) #11, !dbg !9162
  %71 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9163
  %ep84 = getelementptr inbounds %struct.udc, %struct.udc* %71, i32 0, i32 2, !dbg !9164
  %arrayidx85 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep84, i64 0, i64 16, !dbg !9163
  %ep86 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx85, i32 0, i32 0, !dbg !9165
  call void @usb_ep_set_maxpacket_limit(%struct.usb_ep* %ep86, i32 64) #11, !dbg !9166
  br label %if.end87, !dbg !9167

if.end87:                                         ; preds = %if.then80, %if.else76
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then69
  %72 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9168
  %ep89 = getelementptr inbounds %struct.udc, %struct.udc* %72, i32 0, i32 2, !dbg !9169
  %arrayidx90 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep89, i64 0, i64 0, !dbg !9168
  %ep91 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx90, i32 0, i32 0, !dbg !9170
  %73 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9171
  %gadget92 = getelementptr inbounds %struct.udc, %struct.udc* %73, i32 0, i32 0, !dbg !9172
  %ep0 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget92, i32 0, i32 3, !dbg !9173
  store %struct.usb_ep* %ep91, %struct.usb_ep** %ep0, align 8, !dbg !9174
  %74 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9175
  %ep93 = getelementptr inbounds %struct.udc, %struct.udc* %74, i32 0, i32 2, !dbg !9176
  %arrayidx94 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep93, i64 0, i64 0, !dbg !9175
  %halted = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx94, i32 0, i32 16, !dbg !9177
  store i32 0, i32* %halted, align 8, !dbg !9178
  %75 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9179
  %gadget95 = getelementptr inbounds %struct.udc, %struct.udc* %75, i32 0, i32 0, !dbg !9180
  %ep096 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget95, i32 0, i32 3, !dbg !9181
  %76 = load %struct.usb_ep*, %struct.usb_ep** %ep096, align 8, !dbg !9181
  %ep_list = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %76, i32 0, i32 3, !dbg !9182
  call void @INIT_LIST_HEAD(%struct.list_head* %ep_list) #11, !dbg !9183
  %77 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9184
  %cur_config = getelementptr inbounds %struct.udc, %struct.udc* %77, i32 0, i32 18, !dbg !9185
  store i16 0, i16* %cur_config, align 4, !dbg !9186
  %78 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9187
  %cur_intf = getelementptr inbounds %struct.udc, %struct.udc* %78, i32 0, i32 19, !dbg !9188
  store i16 0, i16* %cur_intf, align 2, !dbg !9189
  %79 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9190
  %cur_alt = getelementptr inbounds %struct.udc, %struct.udc* %79, i32 0, i32 20, !dbg !9191
  store i16 0, i16* %cur_alt, align 8, !dbg !9192
  ret void, !dbg !9193
}

; Function Attrs: noredzone
declare dso_local i8* @usb_speed_string(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @activate_control_endpoints(%struct.udc* %dev) #0 !dbg !9194 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %tmp = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !9195, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !9197, metadata !DIExpression()), !dbg !9198
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9199
  %ep = getelementptr inbounds %struct.udc, %struct.udc* %0, i32 0, i32 2, !dbg !9200
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep, i64 0, i64 0, !dbg !9199
  %regs = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx, i32 0, i32 1, !dbg !9201
  %1 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs, align 8, !dbg !9201
  %ctl = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %1, i32 0, i32 0, !dbg !9202
  %2 = bitcast i32* %ctl to i8*, !dbg !9203
  %call = call i32 @readl(i8* %2) #11, !dbg !9204
  store i32 %call, i32* %tmp, align 4, !dbg !9205
  %3 = load i32, i32* %tmp, align 4, !dbg !9206
  %or = or i32 %3, 2, !dbg !9206
  store i32 %or, i32* %tmp, align 4, !dbg !9206
  %4 = load i32, i32* %tmp, align 4, !dbg !9207
  %5 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9208
  %ep1 = getelementptr inbounds %struct.udc, %struct.udc* %5, i32 0, i32 2, !dbg !9209
  %arrayidx2 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep1, i64 0, i64 0, !dbg !9208
  %regs3 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx2, i32 0, i32 1, !dbg !9210
  %6 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs3, align 8, !dbg !9210
  %ctl4 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %6, i32 0, i32 0, !dbg !9211
  %7 = bitcast i32* %ctl4 to i8*, !dbg !9212
  call void @writel(i32 %4, i8* %7) #11, !dbg !9213
  %8 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9214
  %ep5 = getelementptr inbounds %struct.udc, %struct.udc* %8, i32 0, i32 2, !dbg !9215
  %arrayidx6 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep5, i64 0, i64 0, !dbg !9214
  %in = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx6, i32 0, i32 18, !dbg !9216
  %9 = bitcast i24* %in to i32*, !dbg !9216
  %bf.load = load i32, i32* %9, align 8, !dbg !9217
  %bf.clear = and i32 %bf.load, -524289, !dbg !9217
  %bf.set = or i32 %bf.clear, 524288, !dbg !9217
  store i32 %bf.set, i32* %9, align 8, !dbg !9217
  %10 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9218
  %ep7 = getelementptr inbounds %struct.udc, %struct.udc* %10, i32 0, i32 2, !dbg !9219
  %arrayidx8 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep7, i64 0, i64 16, !dbg !9218
  %in9 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx8, i32 0, i32 18, !dbg !9220
  %11 = bitcast i24* %in9 to i32*, !dbg !9220
  %bf.load10 = load i32, i32* %11, align 8, !dbg !9221
  %bf.clear11 = and i32 %bf.load10, -524289, !dbg !9221
  store i32 %bf.clear11, i32* %11, align 8, !dbg !9221
  %12 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9222
  %ep12 = getelementptr inbounds %struct.udc, %struct.udc* %12, i32 0, i32 2, !dbg !9223
  %arrayidx13 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep12, i64 0, i64 0, !dbg !9222
  %regs14 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx13, i32 0, i32 1, !dbg !9224
  %13 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs14, align 8, !dbg !9224
  %bufin_framenum = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %13, i32 0, i32 2, !dbg !9225
  %14 = bitcast i32* %bufin_framenum to i8*, !dbg !9226
  %call15 = call i32 @readl(i8* %14) #11, !dbg !9227
  store i32 %call15, i32* %tmp, align 4, !dbg !9228
  %15 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9229
  %gadget = getelementptr inbounds %struct.udc, %struct.udc* %15, i32 0, i32 0, !dbg !9231
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !9232
  %16 = load i32, i32* %speed, align 8, !dbg !9232
  %cmp = icmp eq i32 %16, 2, !dbg !9233
  br i1 %cmp, label %if.then, label %if.else, !dbg !9234

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %tmp, align 4, !dbg !9235
  %and = and i32 %17, -65536, !dbg !9235
  %or16 = or i32 %and, 32, !dbg !9235
  store i32 %or16, i32* %tmp, align 4, !dbg !9236
  br label %if.end23, !dbg !9237

if.else:                                          ; preds = %entry
  %18 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9238
  %gadget17 = getelementptr inbounds %struct.udc, %struct.udc* %18, i32 0, i32 0, !dbg !9240
  %speed18 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget17, i32 0, i32 5, !dbg !9241
  %19 = load i32, i32* %speed18, align 8, !dbg !9241
  %cmp19 = icmp eq i32 %19, 3, !dbg !9242
  br i1 %cmp19, label %if.then20, label %if.end, !dbg !9243

if.then20:                                        ; preds = %if.else
  %20 = load i32, i32* %tmp, align 4, !dbg !9244
  %and21 = and i32 %20, -65536, !dbg !9244
  %or22 = or i32 %and21, 32, !dbg !9244
  store i32 %or22, i32* %tmp, align 4, !dbg !9245
  br label %if.end, !dbg !9246

if.end:                                           ; preds = %if.then20, %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end, %if.then
  %21 = load i32, i32* %tmp, align 4, !dbg !9247
  %22 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9248
  %ep24 = getelementptr inbounds %struct.udc, %struct.udc* %22, i32 0, i32 2, !dbg !9249
  %arrayidx25 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep24, i64 0, i64 0, !dbg !9248
  %regs26 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx25, i32 0, i32 1, !dbg !9250
  %23 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs26, align 8, !dbg !9250
  %bufin_framenum27 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %23, i32 0, i32 2, !dbg !9251
  %24 = bitcast i32* %bufin_framenum27 to i8*, !dbg !9252
  call void @writel(i32 %21, i8* %24) #11, !dbg !9253
  %25 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9254
  %ep28 = getelementptr inbounds %struct.udc, %struct.udc* %25, i32 0, i32 2, !dbg !9255
  %arrayidx29 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep28, i64 0, i64 0, !dbg !9254
  %regs30 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx29, i32 0, i32 1, !dbg !9256
  %26 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs30, align 8, !dbg !9256
  %bufout_maxpkt = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %26, i32 0, i32 3, !dbg !9257
  %27 = bitcast i32* %bufout_maxpkt to i8*, !dbg !9258
  %call31 = call i32 @readl(i8* %27) #11, !dbg !9259
  store i32 %call31, i32* %tmp, align 4, !dbg !9260
  %28 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9261
  %gadget32 = getelementptr inbounds %struct.udc, %struct.udc* %28, i32 0, i32 0, !dbg !9263
  %speed33 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget32, i32 0, i32 5, !dbg !9264
  %29 = load i32, i32* %speed33, align 8, !dbg !9264
  %cmp34 = icmp eq i32 %29, 2, !dbg !9265
  br i1 %cmp34, label %if.then35, label %if.else38, !dbg !9266

if.then35:                                        ; preds = %if.end23
  %30 = load i32, i32* %tmp, align 4, !dbg !9267
  %and36 = and i32 %30, -65536, !dbg !9267
  %or37 = or i32 %and36, 64, !dbg !9267
  store i32 %or37, i32* %tmp, align 4, !dbg !9268
  br label %if.end46, !dbg !9269

if.else38:                                        ; preds = %if.end23
  %31 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9270
  %gadget39 = getelementptr inbounds %struct.udc, %struct.udc* %31, i32 0, i32 0, !dbg !9272
  %speed40 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget39, i32 0, i32 5, !dbg !9273
  %32 = load i32, i32* %speed40, align 8, !dbg !9273
  %cmp41 = icmp eq i32 %32, 3, !dbg !9274
  br i1 %cmp41, label %if.then42, label %if.end45, !dbg !9275

if.then42:                                        ; preds = %if.else38
  %33 = load i32, i32* %tmp, align 4, !dbg !9276
  %and43 = and i32 %33, -65536, !dbg !9276
  %or44 = or i32 %and43, 64, !dbg !9276
  store i32 %or44, i32* %tmp, align 4, !dbg !9277
  br label %if.end45, !dbg !9278

if.end45:                                         ; preds = %if.then42, %if.else38
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then35
  %34 = load i32, i32* %tmp, align 4, !dbg !9279
  %35 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9280
  %ep47 = getelementptr inbounds %struct.udc, %struct.udc* %35, i32 0, i32 2, !dbg !9281
  %arrayidx48 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep47, i64 0, i64 0, !dbg !9280
  %regs49 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx48, i32 0, i32 1, !dbg !9282
  %36 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs49, align 8, !dbg !9282
  %bufout_maxpkt50 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %36, i32 0, i32 3, !dbg !9283
  %37 = bitcast i32* %bufout_maxpkt50 to i8*, !dbg !9284
  call void @writel(i32 %34, i8* %37) #11, !dbg !9285
  %38 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9286
  %ep51 = getelementptr inbounds %struct.udc, %struct.udc* %38, i32 0, i32 2, !dbg !9287
  %arrayidx52 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep51, i64 0, i64 16, !dbg !9286
  %regs53 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx52, i32 0, i32 1, !dbg !9288
  %39 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs53, align 8, !dbg !9288
  %bufout_maxpkt54 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %39, i32 0, i32 3, !dbg !9289
  %40 = bitcast i32* %bufout_maxpkt54 to i8*, !dbg !9290
  %call55 = call i32 @readl(i8* %40) #11, !dbg !9291
  store i32 %call55, i32* %tmp, align 4, !dbg !9292
  %41 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9293
  %gadget56 = getelementptr inbounds %struct.udc, %struct.udc* %41, i32 0, i32 0, !dbg !9295
  %speed57 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget56, i32 0, i32 5, !dbg !9296
  %42 = load i32, i32* %speed57, align 8, !dbg !9296
  %cmp58 = icmp eq i32 %42, 2, !dbg !9297
  br i1 %cmp58, label %if.then59, label %if.else62, !dbg !9298

if.then59:                                        ; preds = %if.end46
  %43 = load i32, i32* %tmp, align 4, !dbg !9299
  %and60 = and i32 %43, -65536, !dbg !9299
  %or61 = or i32 %and60, 64, !dbg !9299
  store i32 %or61, i32* %tmp, align 4, !dbg !9300
  br label %if.end70, !dbg !9301

if.else62:                                        ; preds = %if.end46
  %44 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9302
  %gadget63 = getelementptr inbounds %struct.udc, %struct.udc* %44, i32 0, i32 0, !dbg !9304
  %speed64 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget63, i32 0, i32 5, !dbg !9305
  %45 = load i32, i32* %speed64, align 8, !dbg !9305
  %cmp65 = icmp eq i32 %45, 3, !dbg !9306
  br i1 %cmp65, label %if.then66, label %if.end69, !dbg !9307

if.then66:                                        ; preds = %if.else62
  %46 = load i32, i32* %tmp, align 4, !dbg !9308
  %and67 = and i32 %46, -65536, !dbg !9308
  %or68 = or i32 %and67, 64, !dbg !9308
  store i32 %or68, i32* %tmp, align 4, !dbg !9309
  br label %if.end69, !dbg !9310

if.end69:                                         ; preds = %if.then66, %if.else62
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then59
  %47 = load i32, i32* %tmp, align 4, !dbg !9311
  %48 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9312
  %ep71 = getelementptr inbounds %struct.udc, %struct.udc* %48, i32 0, i32 2, !dbg !9313
  %arrayidx72 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep71, i64 0, i64 16, !dbg !9312
  %regs73 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx72, i32 0, i32 1, !dbg !9314
  %49 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs73, align 8, !dbg !9314
  %bufout_maxpkt74 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %49, i32 0, i32 3, !dbg !9315
  %50 = bitcast i32* %bufout_maxpkt74 to i8*, !dbg !9316
  call void @writel(i32 %47, i8* %50) #11, !dbg !9317
  %51 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9318
  %csr = getelementptr inbounds %struct.udc, %struct.udc* %51, i32 0, i32 8, !dbg !9319
  %52 = load %struct.udc_csrs*, %struct.udc_csrs** %csr, align 8, !dbg !9319
  %ne = getelementptr inbounds %struct.udc_csrs, %struct.udc_csrs* %52, i32 0, i32 1, !dbg !9320
  %arrayidx75 = getelementptr [9 x i32], [9 x i32]* %ne, i64 0, i64 0, !dbg !9318
  %53 = bitcast i32* %arrayidx75 to i8*, !dbg !9321
  %call76 = call i32 @readl(i8* %53) #11, !dbg !9322
  store i32 %call76, i32* %tmp, align 4, !dbg !9323
  %54 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9324
  %gadget77 = getelementptr inbounds %struct.udc, %struct.udc* %54, i32 0, i32 0, !dbg !9326
  %speed78 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget77, i32 0, i32 5, !dbg !9327
  %55 = load i32, i32* %speed78, align 8, !dbg !9327
  %cmp79 = icmp eq i32 %55, 2, !dbg !9328
  br i1 %cmp79, label %if.then80, label %if.else83, !dbg !9329

if.then80:                                        ; preds = %if.end70
  %56 = load i32, i32* %tmp, align 4, !dbg !9330
  %and81 = and i32 %56, -1073217537, !dbg !9330
  %or82 = or i32 %and81, 33554432, !dbg !9330
  store i32 %or82, i32* %tmp, align 4, !dbg !9331
  br label %if.end91, !dbg !9332

if.else83:                                        ; preds = %if.end70
  %57 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9333
  %gadget84 = getelementptr inbounds %struct.udc, %struct.udc* %57, i32 0, i32 0, !dbg !9335
  %speed85 = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget84, i32 0, i32 5, !dbg !9336
  %58 = load i32, i32* %speed85, align 8, !dbg !9336
  %cmp86 = icmp eq i32 %58, 3, !dbg !9337
  br i1 %cmp86, label %if.then87, label %if.end90, !dbg !9338

if.then87:                                        ; preds = %if.else83
  %59 = load i32, i32* %tmp, align 4, !dbg !9339
  %and88 = and i32 %59, -1073217537, !dbg !9339
  %or89 = or i32 %and88, 33554432, !dbg !9339
  store i32 %or89, i32* %tmp, align 4, !dbg !9340
  br label %if.end90, !dbg !9341

if.end90:                                         ; preds = %if.then87, %if.else83
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.then80
  %60 = load i32, i32* %tmp, align 4, !dbg !9342
  %61 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9343
  %csr92 = getelementptr inbounds %struct.udc, %struct.udc* %61, i32 0, i32 8, !dbg !9344
  %62 = load %struct.udc_csrs*, %struct.udc_csrs** %csr92, align 8, !dbg !9344
  %ne93 = getelementptr inbounds %struct.udc_csrs, %struct.udc_csrs* %62, i32 0, i32 1, !dbg !9345
  %arrayidx94 = getelementptr [9 x i32], [9 x i32]* %ne93, i64 0, i64 0, !dbg !9343
  %63 = bitcast i32* %arrayidx94 to i8*, !dbg !9346
  call void @writel(i32 %60, i8* %63) #11, !dbg !9347
  %64 = load i8, i8* @use_dma, align 1, !dbg !9348
  %tobool = trunc i8 %64 to i1, !dbg !9348
  br i1 %tobool, label %if.then95, label %if.end136, !dbg !9350

if.then95:                                        ; preds = %if.end91
  %65 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9351
  %ep96 = getelementptr inbounds %struct.udc, %struct.udc* %65, i32 0, i32 2, !dbg !9353
  %arrayidx97 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep96, i64 0, i64 16, !dbg !9351
  %td = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx97, i32 0, i32 7, !dbg !9354
  %66 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td, align 8, !dbg !9354
  %status = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %66, i32 0, i32 0, !dbg !9355
  %67 = load i32, i32* %status, align 16, !dbg !9356
  %or98 = or i32 %67, 134217728, !dbg !9356
  store i32 %or98, i32* %status, align 16, !dbg !9356
  %68 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9357
  %ep99 = getelementptr inbounds %struct.udc, %struct.udc* %68, i32 0, i32 2, !dbg !9358
  %arrayidx100 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep99, i64 0, i64 16, !dbg !9357
  %td_stp_dma = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx100, i32 0, i32 5, !dbg !9359
  %69 = load i64, i64* %td_stp_dma, align 8, !dbg !9359
  %conv = trunc i64 %69 to i32, !dbg !9357
  %70 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9360
  %ep101 = getelementptr inbounds %struct.udc, %struct.udc* %70, i32 0, i32 2, !dbg !9361
  %arrayidx102 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep101, i64 0, i64 16, !dbg !9360
  %regs103 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx102, i32 0, i32 1, !dbg !9362
  %71 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs103, align 8, !dbg !9362
  %subptr = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %71, i32 0, i32 4, !dbg !9363
  %72 = bitcast i32* %subptr to i8*, !dbg !9364
  call void @writel(i32 %conv, i8* %72) #11, !dbg !9365
  %73 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9366
  %ep104 = getelementptr inbounds %struct.udc, %struct.udc* %73, i32 0, i32 2, !dbg !9367
  %arrayidx105 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep104, i64 0, i64 16, !dbg !9366
  %td_phys = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx105, i32 0, i32 4, !dbg !9368
  %74 = load i64, i64* %td_phys, align 8, !dbg !9368
  %conv106 = trunc i64 %74 to i32, !dbg !9366
  %75 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9369
  %ep107 = getelementptr inbounds %struct.udc, %struct.udc* %75, i32 0, i32 2, !dbg !9370
  %arrayidx108 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep107, i64 0, i64 16, !dbg !9369
  %regs109 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx108, i32 0, i32 1, !dbg !9371
  %76 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs109, align 8, !dbg !9371
  %desptr = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %76, i32 0, i32 5, !dbg !9372
  %77 = bitcast i32* %desptr to i8*, !dbg !9373
  call void @writel(i32 %conv106, i8* %77) #11, !dbg !9374
  %call110 = call i32 @timer_pending(%struct.timer_list* @udc_timer) #11, !dbg !9375
  %tobool111 = icmp ne i32 %call110, 0, !dbg !9375
  br i1 %tobool111, label %if.then112, label %if.end114, !dbg !9377

if.then112:                                       ; preds = %if.then95
  store i32 0, i32* @set_rde, align 4, !dbg !9378
  %78 = load volatile i64, i64* @jiffies, align 8, !dbg !9380
  %sub = sub i64 %78, 1, !dbg !9381
  %call113 = call i32 @mod_timer(%struct.timer_list* @udc_timer, i64 %sub) #11, !dbg !9382
  br label %if.end114, !dbg !9383

if.end114:                                        ; preds = %if.then112, %if.then95
  %call115 = call i32 @timer_pending(%struct.timer_list* @udc_pollstall_timer) #11, !dbg !9384
  %tobool116 = icmp ne i32 %call115, 0, !dbg !9384
  br i1 %tobool116, label %if.then117, label %if.end120, !dbg !9386

if.then117:                                       ; preds = %if.end114
  %79 = load volatile i64, i64* @jiffies, align 8, !dbg !9387
  %sub118 = sub i64 %79, 1, !dbg !9388
  %call119 = call i32 @mod_timer(%struct.timer_list* @udc_pollstall_timer, i64 %sub118) #11, !dbg !9389
  br label %if.end120, !dbg !9389

if.end120:                                        ; preds = %if.then117, %if.end114
  %80 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9390
  %regs121 = getelementptr inbounds %struct.udc, %struct.udc* %80, i32 0, i32 9, !dbg !9391
  %81 = load %struct.udc_regs*, %struct.udc_regs** %regs121, align 8, !dbg !9391
  %ctl122 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %81, i32 0, i32 1, !dbg !9392
  %82 = bitcast i32* %ctl122 to i8*, !dbg !9393
  %call123 = call i32 @readl(i8* %82) #11, !dbg !9394
  store i32 %call123, i32* %tmp, align 4, !dbg !9395
  %83 = load i32, i32* %tmp, align 4, !dbg !9396
  %or124 = or i32 %83, 524, !dbg !9396
  store i32 %or124, i32* %tmp, align 4, !dbg !9396
  %84 = load i32, i32* @use_dma_bufferfill_mode, align 4, !dbg !9397
  %tobool125 = icmp ne i32 %84, 0, !dbg !9397
  br i1 %tobool125, label %if.then126, label %if.else128, !dbg !9399

if.then126:                                       ; preds = %if.end120
  %85 = load i32, i32* %tmp, align 4, !dbg !9400
  %or127 = or i32 %85, 64, !dbg !9400
  store i32 %or127, i32* %tmp, align 4, !dbg !9400
  br label %if.end133, !dbg !9401

if.else128:                                       ; preds = %if.end120
  %86 = load i8, i8* @use_dma_ppb_du, align 1, !dbg !9402
  %tobool129 = trunc i8 %86 to i1, !dbg !9402
  br i1 %tobool129, label %if.then130, label %if.end132, !dbg !9404

if.then130:                                       ; preds = %if.else128
  %87 = load i32, i32* %tmp, align 4, !dbg !9405
  %or131 = or i32 %87, 16, !dbg !9405
  store i32 %or131, i32* %tmp, align 4, !dbg !9405
  br label %if.end132, !dbg !9406

if.end132:                                        ; preds = %if.then130, %if.else128
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then126
  %88 = load i32, i32* %tmp, align 4, !dbg !9407
  %89 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9408
  %regs134 = getelementptr inbounds %struct.udc, %struct.udc* %89, i32 0, i32 9, !dbg !9409
  %90 = load %struct.udc_regs*, %struct.udc_regs** %regs134, align 8, !dbg !9409
  %ctl135 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %90, i32 0, i32 1, !dbg !9410
  %91 = bitcast i32* %ctl135 to i8*, !dbg !9411
  call void @writel(i32 %88, i8* %91) #11, !dbg !9412
  br label %if.end136, !dbg !9413

if.end136:                                        ; preds = %if.end133, %if.end91
  %92 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9414
  %ep137 = getelementptr inbounds %struct.udc, %struct.udc* %92, i32 0, i32 2, !dbg !9415
  %arrayidx138 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep137, i64 0, i64 0, !dbg !9414
  %regs139 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx138, i32 0, i32 1, !dbg !9416
  %93 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs139, align 8, !dbg !9416
  %ctl140 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %93, i32 0, i32 0, !dbg !9417
  %94 = bitcast i32* %ctl140 to i8*, !dbg !9418
  %call141 = call i32 @readl(i8* %94) #11, !dbg !9419
  store i32 %call141, i32* %tmp, align 4, !dbg !9420
  %95 = load i32, i32* %tmp, align 4, !dbg !9421
  %or142 = or i32 %95, 256, !dbg !9421
  store i32 %or142, i32* %tmp, align 4, !dbg !9421
  %96 = load i32, i32* %tmp, align 4, !dbg !9422
  %97 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9423
  %ep143 = getelementptr inbounds %struct.udc, %struct.udc* %97, i32 0, i32 2, !dbg !9424
  %arrayidx144 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep143, i64 0, i64 0, !dbg !9423
  %regs145 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx144, i32 0, i32 1, !dbg !9425
  %98 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs145, align 8, !dbg !9425
  %ctl146 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %98, i32 0, i32 0, !dbg !9426
  %99 = bitcast i32* %ctl146 to i8*, !dbg !9427
  call void @writel(i32 %96, i8* %99) #11, !dbg !9428
  %100 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9429
  %ep147 = getelementptr inbounds %struct.udc, %struct.udc* %100, i32 0, i32 2, !dbg !9430
  %arrayidx148 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep147, i64 0, i64 0, !dbg !9429
  %naking = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx148, i32 0, i32 13, !dbg !9431
  store i32 0, i32* %naking, align 4, !dbg !9432
  %101 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9433
  %ep149 = getelementptr inbounds %struct.udc, %struct.udc* %101, i32 0, i32 2, !dbg !9434
  %arrayidx150 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep149, i64 0, i64 0, !dbg !9433
  call void @UDC_QUEUE_CNAK(%struct.udc_ep* %arrayidx150, i32 0) #11, !dbg !9435
  %102 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9436
  %ep151 = getelementptr inbounds %struct.udc, %struct.udc* %102, i32 0, i32 2, !dbg !9437
  %arrayidx152 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep151, i64 0, i64 16, !dbg !9436
  %regs153 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx152, i32 0, i32 1, !dbg !9438
  %103 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs153, align 8, !dbg !9438
  %ctl154 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %103, i32 0, i32 0, !dbg !9439
  %104 = bitcast i32* %ctl154 to i8*, !dbg !9440
  %call155 = call i32 @readl(i8* %104) #11, !dbg !9441
  store i32 %call155, i32* %tmp, align 4, !dbg !9442
  %105 = load i32, i32* %tmp, align 4, !dbg !9443
  %or156 = or i32 %105, 256, !dbg !9443
  store i32 %or156, i32* %tmp, align 4, !dbg !9443
  %106 = load i32, i32* %tmp, align 4, !dbg !9444
  %107 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9445
  %ep157 = getelementptr inbounds %struct.udc, %struct.udc* %107, i32 0, i32 2, !dbg !9446
  %arrayidx158 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep157, i64 0, i64 16, !dbg !9445
  %regs159 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx158, i32 0, i32 1, !dbg !9447
  %108 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs159, align 8, !dbg !9447
  %ctl160 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %108, i32 0, i32 0, !dbg !9448
  %109 = bitcast i32* %ctl160 to i8*, !dbg !9449
  call void @writel(i32 %106, i8* %109) #11, !dbg !9450
  %110 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9451
  %ep161 = getelementptr inbounds %struct.udc, %struct.udc* %110, i32 0, i32 2, !dbg !9452
  %arrayidx162 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep161, i64 0, i64 16, !dbg !9451
  %naking163 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx162, i32 0, i32 13, !dbg !9453
  store i32 0, i32* %naking163, align 4, !dbg !9454
  %111 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9455
  %ep164 = getelementptr inbounds %struct.udc, %struct.udc* %111, i32 0, i32 2, !dbg !9456
  %arrayidx165 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep164, i64 0, i64 16, !dbg !9455
  call void @UDC_QUEUE_CNAK(%struct.udc_ep* %arrayidx165, i32 16) #11, !dbg !9457
  ret void, !dbg !9458
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_enable_ep0_interrupts(%struct.udc* %dev) #0 !dbg !9459 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %tmp = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !9460, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !9462, metadata !DIExpression()), !dbg !9463
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9464
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %0, i32 0, i32 9, !dbg !9465
  %1 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !9465
  %ep_irqmsk = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %1, i32 0, i32 6, !dbg !9466
  %2 = bitcast i32* %ep_irqmsk to i8*, !dbg !9467
  %call = call i32 @readl(i8* %2) #11, !dbg !9468
  store i32 %call, i32* %tmp, align 4, !dbg !9469
  %3 = load i32, i32* %tmp, align 4, !dbg !9470
  %and = and i32 %3, -65538, !dbg !9470
  store i32 %and, i32* %tmp, align 4, !dbg !9470
  %4 = load i32, i32* %tmp, align 4, !dbg !9471
  %5 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9472
  %regs1 = getelementptr inbounds %struct.udc, %struct.udc* %5, i32 0, i32 9, !dbg !9473
  %6 = load %struct.udc_regs*, %struct.udc_regs** %regs1, align 8, !dbg !9473
  %ep_irqmsk2 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %6, i32 0, i32 6, !dbg !9474
  %7 = bitcast i32* %ep_irqmsk2 to i8*, !dbg !9475
  call void @writel(i32 %4, i8* %7) #11, !dbg !9476
  ret i32 0, !dbg !9477
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_disconnect(%struct.udc* %dev) #0 !dbg !9478 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !9479, metadata !DIExpression()), !dbg !9480
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9481
  %connected = getelementptr inbounds %struct.udc, %struct.udc* %0, i32 0, i32 5, !dbg !9483
  %1 = load i32, i32* %connected, align 4, !dbg !9483
  %tobool = icmp ne i32 %1, 0, !dbg !9481
  br i1 %tobool, label %if.end, label %if.then, !dbg !9484

if.then:                                          ; preds = %entry
  br label %return, !dbg !9485

if.end:                                           ; preds = %entry
  %2 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9486
  %dev1 = getelementptr inbounds %struct.udc, %struct.udc* %2, i32 0, i32 21, !dbg !9486
  %3 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !9486
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i64 0, i64 0)) #12, !dbg !9486
  %4 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9487
  %connected2 = getelementptr inbounds %struct.udc, %struct.udc* %4, i32 0, i32 5, !dbg !9488
  store i32 0, i32* %connected2, align 4, !dbg !9489
  %5 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !9490
  %call = call i32 @udc_mask_unused_interrupts(%struct.udc* %5) #11, !dbg !9491
  call void @tasklet_schedule(%struct.tasklet_struct* @disconnect_tasklet) #11, !dbg !9492
  br label %return, !dbg !9493

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9493
}

; Function Attrs: noredzone
declare dso_local void @usb_ep_set_maxpacket_limit(%struct.usb_ep*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_ep_enable(%struct.usb_ep* %usbep, %struct.usb_endpoint_descriptor* %desc) #0 !dbg !9494 {
entry:
  %lock.addr.i235 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i235, metadata !7577, metadata !DIExpression()), !dbg !9495
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7583, metadata !DIExpression()), !dbg !9497
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7585, metadata !DIExpression()), !dbg !9498
  %retval = alloca i32, align 4
  %usbep.addr = alloca %struct.usb_ep*, align 8
  %desc.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  %ep = alloca %struct.udc_ep*, align 8
  %dev = alloca %struct.udc*, align 8
  %tmp = alloca i32, align 4
  %iflags = alloca i64, align 8
  %udc_csr_epix = alloca i8, align 1
  %maxpacket = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp6 = alloca %struct.udc_ep*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  %__dummy22 = alloca i64, align 8
  %__dummy223 = alloca i64, align 8
  %tmp26 = alloca i32, align 4
  store %struct.usb_ep* %usbep, %struct.usb_ep** %usbep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %usbep.addr, metadata !9505, metadata !DIExpression()), !dbg !9506
  store %struct.usb_endpoint_descriptor* %desc, %struct.usb_endpoint_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %desc.addr, metadata !9507, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep, metadata !9509, metadata !DIExpression()), !dbg !9510
  call void @llvm.dbg.declare(metadata %struct.udc** %dev, metadata !9511, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !9513, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.declare(metadata i64* %iflags, metadata !9515, metadata !DIExpression()), !dbg !9516
  call void @llvm.dbg.declare(metadata i8* %udc_csr_epix, metadata !9517, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.declare(metadata i32* %maxpacket, metadata !9519, metadata !DIExpression()), !dbg !9520
  %0 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !9521
  %tobool = icmp ne %struct.usb_ep* %0, null, !dbg !9521
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9523

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !9524
  %name = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %1, i32 0, i32 1, !dbg !9525
  %2 = load i8*, i8** %name, align 8, !dbg !9525
  %cmp = icmp eq i8* %2, getelementptr inbounds ([6 x i8], [6 x i8]* @ep0_string, i64 0, i64 0), !dbg !9526
  br i1 %cmp, label %if.then, label %lor.lhs.false1, !dbg !9527

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %3 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !9528
  %tobool2 = icmp ne %struct.usb_endpoint_descriptor* %3, null, !dbg !9528
  br i1 %tobool2, label %lor.lhs.false3, label %if.then, !dbg !9529

lor.lhs.false3:                                   ; preds = %lor.lhs.false1
  %4 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !9530
  %bDescriptorType = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %4, i32 0, i32 1, !dbg !9531
  %5 = load i8, i8* %bDescriptorType, align 1, !dbg !9531
  %conv = zext i8 %5 to i32, !dbg !9530
  %cmp4 = icmp ne i32 %conv, 5, !dbg !9532
  br i1 %cmp4, label %if.then, label %if.end, !dbg !9533

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false1, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !9534
  br label %return, !dbg !9534

if.end:                                           ; preds = %lor.lhs.false3
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9535, metadata !DIExpression()), !dbg !9537
  %6 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !9537
  %7 = bitcast %struct.usb_ep* %6 to i8*, !dbg !9537
  store i8* %7, i8** %__mptr, align 8, !dbg !9537
  br label %do.body, !dbg !9537

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9538

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !9537
  %add.ptr = getelementptr i8, i8* %8, i64 0, !dbg !9537
  %9 = bitcast i8* %add.ptr to %struct.udc_ep*, !dbg !9537
  store %struct.udc_ep* %9, %struct.udc_ep** %tmp6, align 8, !dbg !9538
  %10 = load %struct.udc_ep*, %struct.udc_ep** %tmp6, align 8, !dbg !9537
  store %struct.udc_ep* %10, %struct.udc_ep** %ep, align 8, !dbg !9540
  %11 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9541
  %dev7 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %11, i32 0, i32 14, !dbg !9542
  %12 = load %struct.udc*, %struct.udc** %dev7, align 8, !dbg !9542
  store %struct.udc* %12, %struct.udc** %dev, align 8, !dbg !9543
  %13 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9544
  %driver = getelementptr inbounds %struct.udc, %struct.udc* %13, i32 0, i32 3, !dbg !9546
  %14 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver, align 8, !dbg !9546
  %tobool8 = icmp ne %struct.usb_gadget_driver* %14, null, !dbg !9544
  br i1 %tobool8, label %lor.lhs.false9, label %if.then12, !dbg !9547

lor.lhs.false9:                                   ; preds = %do.end
  %15 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9548
  %gadget = getelementptr inbounds %struct.udc, %struct.udc* %15, i32 0, i32 0, !dbg !9549
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !9550
  %16 = load i32, i32* %speed, align 8, !dbg !9550
  %cmp10 = icmp eq i32 %16, 0, !dbg !9551
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !9552

if.then12:                                        ; preds = %lor.lhs.false9, %do.end
  store i32 -108, i32* %retval, align 4, !dbg !9553
  br label %return, !dbg !9553

if.end13:                                         ; preds = %lor.lhs.false9
  br label %do.body14, !dbg !9554

do.body14:                                        ; preds = %if.end13
  br label %do.body15, !dbg !9555

do.body15:                                        ; preds = %do.body14
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9556, metadata !DIExpression()), !dbg !9558
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9559, metadata !DIExpression()), !dbg !9558
  %cmp16 = icmp eq i64* %__dummy, %__dummy2, !dbg !9558
  %conv17 = zext i1 %cmp16 to i32, !dbg !9558
  store i32 1, i32* %tmp18, align 4, !dbg !9558
  %17 = load i32, i32* %tmp18, align 4, !dbg !9558
  br label %do.body19, !dbg !9560

do.body19:                                        ; preds = %do.body15
  br label %do.body20, !dbg !9561

do.body20:                                        ; preds = %do.body19
  br label %do.body21, !dbg !9562

do.body21:                                        ; preds = %do.body20
  call void @llvm.dbg.declare(metadata i64* %__dummy22, metadata !9564, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.declare(metadata i64* %__dummy223, metadata !9568, metadata !DIExpression()), !dbg !9567
  %cmp24 = icmp eq i64* %__dummy22, %__dummy223, !dbg !9567
  %conv25 = zext i1 %cmp24 to i32, !dbg !9567
  store i32 1, i32* %tmp26, align 4, !dbg !9567
  %18 = load i32, i32* %tmp26, align 4, !dbg !9567
  %call = call i64 @arch_local_irq_save() #11, !dbg !9569
  store i64 %call, i64* %iflags, align 8, !dbg !9569
  br label %do.end27, !dbg !9569

do.end27:                                         ; preds = %do.body21
  br label %do.end28, !dbg !9562

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !9561

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !9570, !srcloc !9571
  br label %do.body30, !dbg !9570

do.body30:                                        ; preds = %do.body29
  %19 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9572
  %lock = getelementptr inbounds %struct.udc, %struct.udc* %19, i32 0, i32 1, !dbg !9572
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9573
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !9574
  %rlock.i = bitcast %union.anon.4* %21 to %struct.raw_spinlock*, !dbg !9574
  br label %do.end32, !dbg !9572

do.end32:                                         ; preds = %do.body30
  br label %do.end33, !dbg !9570

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !9561

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !9560

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !9555

do.end36:                                         ; preds = %do.end35
  %22 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !9575
  %23 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9576
  %ep37 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %23, i32 0, i32 0, !dbg !9577
  %desc38 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep37, i32 0, i32 9, !dbg !9578
  store %struct.usb_endpoint_descriptor* %22, %struct.usb_endpoint_descriptor** %desc38, align 8, !dbg !9579
  %24 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9580
  %halted = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %24, i32 0, i32 16, !dbg !9581
  store i32 0, i32* %halted, align 8, !dbg !9582
  %25 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9583
  %ep39 = getelementptr inbounds %struct.udc, %struct.udc* %25, i32 0, i32 2, !dbg !9584
  %26 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9585
  %num = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %26, i32 0, i32 18, !dbg !9586
  %27 = bitcast i24* %num to i32*, !dbg !9586
  %bf.load = load i32, i32* %27, align 8, !dbg !9586
  %bf.clear = and i32 %bf.load, 31, !dbg !9586
  %idxprom = zext i32 %bf.clear to i64, !dbg !9583
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep39, i64 0, i64 %idxprom, !dbg !9583
  %regs = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx, i32 0, i32 1, !dbg !9587
  %28 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs, align 8, !dbg !9587
  %ctl = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %28, i32 0, i32 0, !dbg !9588
  %29 = bitcast i32* %ctl to i8*, !dbg !9589
  %call40 = call i32 @readl(i8* %29) #11, !dbg !9590
  store i32 %call40, i32* %tmp, align 4, !dbg !9591
  %30 = load i32, i32* %tmp, align 4, !dbg !9592
  %and = and i32 %30, -49, !dbg !9592
  %31 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !9592
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %31, i32 0, i32 3, !dbg !9592
  %32 = load i8, i8* %bmAttributes, align 1, !dbg !9592
  %conv41 = zext i8 %32 to i32, !dbg !9592
  %shl = shl i32 %conv41, 4, !dbg !9592
  %and42 = and i32 %shl, 48, !dbg !9592
  %or = or i32 %and, %and42, !dbg !9592
  store i32 %or, i32* %tmp, align 4, !dbg !9593
  %33 = load i32, i32* %tmp, align 4, !dbg !9594
  %34 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9595
  %ep43 = getelementptr inbounds %struct.udc, %struct.udc* %34, i32 0, i32 2, !dbg !9596
  %35 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9597
  %num44 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %35, i32 0, i32 18, !dbg !9598
  %36 = bitcast i24* %num44 to i32*, !dbg !9598
  %bf.load45 = load i32, i32* %36, align 8, !dbg !9598
  %bf.clear46 = and i32 %bf.load45, 31, !dbg !9598
  %idxprom47 = zext i32 %bf.clear46 to i64, !dbg !9595
  %arrayidx48 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep43, i64 0, i64 %idxprom47, !dbg !9595
  %regs49 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx48, i32 0, i32 1, !dbg !9599
  %37 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs49, align 8, !dbg !9599
  %ctl50 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %37, i32 0, i32 0, !dbg !9600
  %38 = bitcast i32* %ctl50 to i8*, !dbg !9601
  call void @writel(i32 %33, i8* %38) #11, !dbg !9602
  %39 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !9603
  %call51 = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %39) #11, !dbg !9604
  store i32 %call51, i32* %maxpacket, align 4, !dbg !9605
  %40 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9606
  %ep52 = getelementptr inbounds %struct.udc, %struct.udc* %40, i32 0, i32 2, !dbg !9607
  %41 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9608
  %num53 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %41, i32 0, i32 18, !dbg !9609
  %42 = bitcast i24* %num53 to i32*, !dbg !9609
  %bf.load54 = load i32, i32* %42, align 8, !dbg !9609
  %bf.clear55 = and i32 %bf.load54, 31, !dbg !9609
  %idxprom56 = zext i32 %bf.clear55 to i64, !dbg !9606
  %arrayidx57 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep52, i64 0, i64 %idxprom56, !dbg !9606
  %regs58 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx57, i32 0, i32 1, !dbg !9610
  %43 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs58, align 8, !dbg !9610
  %bufout_maxpkt = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %43, i32 0, i32 3, !dbg !9611
  %44 = bitcast i32* %bufout_maxpkt to i8*, !dbg !9612
  %call59 = call i32 @readl(i8* %44) #11, !dbg !9613
  store i32 %call59, i32* %tmp, align 4, !dbg !9614
  %45 = load i32, i32* %tmp, align 4, !dbg !9615
  %and60 = and i32 %45, -65536, !dbg !9615
  %46 = load i32, i32* %maxpacket, align 4, !dbg !9615
  %shl61 = shl i32 %46, 0, !dbg !9615
  %and62 = and i32 %shl61, 65535, !dbg !9615
  %or63 = or i32 %and60, %and62, !dbg !9615
  store i32 %or63, i32* %tmp, align 4, !dbg !9616
  %47 = load i32, i32* %maxpacket, align 4, !dbg !9617
  %48 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9618
  %ep64 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %48, i32 0, i32 0, !dbg !9619
  %maxpacket65 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep64, i32 0, i32 7, !dbg !9620
  %49 = bitcast [7 x i8]* %maxpacket65 to i56*, !dbg !9620
  %50 = zext i32 %47 to i56, !dbg !9621
  %bf.load66 = load i56, i56* %49, align 2, !dbg !9621
  %bf.value = and i56 %50, 65535, !dbg !9621
  %bf.clear67 = and i56 %bf.load66, -65536, !dbg !9621
  %bf.set = or i56 %bf.clear67, %bf.value, !dbg !9621
  store i56 %bf.set, i56* %49, align 2, !dbg !9621
  %bf.result.cast = trunc i56 %bf.value to i32, !dbg !9621
  %51 = load i32, i32* %tmp, align 4, !dbg !9622
  %52 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9623
  %ep68 = getelementptr inbounds %struct.udc, %struct.udc* %52, i32 0, i32 2, !dbg !9624
  %53 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9625
  %num69 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %53, i32 0, i32 18, !dbg !9626
  %54 = bitcast i24* %num69 to i32*, !dbg !9626
  %bf.load70 = load i32, i32* %54, align 8, !dbg !9626
  %bf.clear71 = and i32 %bf.load70, 31, !dbg !9626
  %idxprom72 = zext i32 %bf.clear71 to i64, !dbg !9623
  %arrayidx73 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep68, i64 0, i64 %idxprom72, !dbg !9623
  %regs74 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx73, i32 0, i32 1, !dbg !9627
  %55 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs74, align 8, !dbg !9627
  %bufout_maxpkt75 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %55, i32 0, i32 3, !dbg !9628
  %56 = bitcast i32* %bufout_maxpkt75 to i8*, !dbg !9629
  call void @writel(i32 %51, i8* %56) #11, !dbg !9630
  %57 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9631
  %in = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %57, i32 0, i32 18, !dbg !9633
  %58 = bitcast i24* %in to i32*, !dbg !9633
  %bf.load76 = load i32, i32* %58, align 8, !dbg !9633
  %bf.lshr = lshr i32 %bf.load76, 19, !dbg !9633
  %bf.clear77 = and i32 %bf.lshr, 1, !dbg !9633
  %tobool78 = icmp ne i32 %bf.clear77, 0, !dbg !9631
  br i1 %tobool78, label %if.then79, label %if.else, !dbg !9634

if.then79:                                        ; preds = %do.end36
  %59 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9635
  %num80 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %59, i32 0, i32 18, !dbg !9637
  %60 = bitcast i24* %num80 to i32*, !dbg !9637
  %bf.load81 = load i32, i32* %60, align 8, !dbg !9637
  %bf.clear82 = and i32 %bf.load81, 31, !dbg !9637
  %conv83 = trunc i32 %bf.clear82 to i8, !dbg !9635
  store i8 %conv83, i8* %udc_csr_epix, align 1, !dbg !9638
  %61 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9639
  %ep84 = getelementptr inbounds %struct.udc, %struct.udc* %61, i32 0, i32 2, !dbg !9640
  %62 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9641
  %num85 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %62, i32 0, i32 18, !dbg !9642
  %63 = bitcast i24* %num85 to i32*, !dbg !9642
  %bf.load86 = load i32, i32* %63, align 8, !dbg !9642
  %bf.clear87 = and i32 %bf.load86, 31, !dbg !9642
  %idxprom88 = zext i32 %bf.clear87 to i64, !dbg !9639
  %arrayidx89 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep84, i64 0, i64 %idxprom88, !dbg !9639
  %regs90 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx89, i32 0, i32 1, !dbg !9643
  %64 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs90, align 8, !dbg !9643
  %bufin_framenum = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %64, i32 0, i32 2, !dbg !9644
  %65 = bitcast i32* %bufin_framenum to i8*, !dbg !9645
  %call91 = call i32 @readl(i8* %65) #11, !dbg !9646
  store i32 %call91, i32* %tmp, align 4, !dbg !9647
  %66 = load i32, i32* %tmp, align 4, !dbg !9648
  %and92 = and i32 %66, -65536, !dbg !9648
  %67 = load i32, i32* %maxpacket, align 4, !dbg !9648
  %mul = mul i32 %67, 2, !dbg !9648
  %div = udiv i32 %mul, 4, !dbg !9648
  %shl93 = shl i32 %div, 0, !dbg !9648
  %and94 = and i32 %shl93, 65535, !dbg !9648
  %or95 = or i32 %and92, %and94, !dbg !9648
  store i32 %or95, i32* %tmp, align 4, !dbg !9649
  %68 = load i32, i32* %tmp, align 4, !dbg !9650
  %69 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9651
  %ep96 = getelementptr inbounds %struct.udc, %struct.udc* %69, i32 0, i32 2, !dbg !9652
  %70 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9653
  %num97 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %70, i32 0, i32 18, !dbg !9654
  %71 = bitcast i24* %num97 to i32*, !dbg !9654
  %bf.load98 = load i32, i32* %71, align 8, !dbg !9654
  %bf.clear99 = and i32 %bf.load98, 31, !dbg !9654
  %idxprom100 = zext i32 %bf.clear99 to i64, !dbg !9651
  %arrayidx101 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep96, i64 0, i64 %idxprom100, !dbg !9651
  %regs102 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx101, i32 0, i32 1, !dbg !9655
  %72 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs102, align 8, !dbg !9655
  %bufin_framenum103 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %72, i32 0, i32 2, !dbg !9656
  %73 = bitcast i32* %bufin_framenum103 to i8*, !dbg !9657
  call void @writel(i32 %68, i8* %73) #11, !dbg !9658
  %74 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9659
  %call104 = call i32 @udc_set_txfifo_addr(%struct.udc_ep* %74) #11, !dbg !9660
  %75 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9661
  %regs105 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %75, i32 0, i32 1, !dbg !9662
  %76 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs105, align 8, !dbg !9662
  %ctl106 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %76, i32 0, i32 0, !dbg !9663
  %77 = bitcast i32* %ctl106 to i8*, !dbg !9664
  %call107 = call i32 @readl(i8* %77) #11, !dbg !9665
  store i32 %call107, i32* %tmp, align 4, !dbg !9666
  %78 = load i32, i32* %tmp, align 4, !dbg !9667
  %or108 = or i32 %78, 2, !dbg !9667
  store i32 %or108, i32* %tmp, align 4, !dbg !9667
  %79 = load i32, i32* %tmp, align 4, !dbg !9668
  %80 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9669
  %regs109 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %80, i32 0, i32 1, !dbg !9670
  %81 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs109, align 8, !dbg !9670
  %ctl110 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %81, i32 0, i32 0, !dbg !9671
  %82 = bitcast i32* %ctl110 to i8*, !dbg !9672
  call void @writel(i32 %79, i8* %82) #11, !dbg !9673
  br label %if.end154, !dbg !9674

if.else:                                          ; preds = %do.end36
  %83 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9675
  %num111 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %83, i32 0, i32 18, !dbg !9677
  %84 = bitcast i24* %num111 to i32*, !dbg !9677
  %bf.load112 = load i32, i32* %84, align 8, !dbg !9677
  %bf.clear113 = and i32 %bf.load112, 31, !dbg !9677
  %sub = sub i32 %bf.clear113, 12, !dbg !9678
  %conv114 = trunc i32 %sub to i8, !dbg !9675
  store i8 %conv114, i8* %udc_csr_epix, align 1, !dbg !9679
  %85 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9680
  %csr = getelementptr inbounds %struct.udc, %struct.udc* %85, i32 0, i32 8, !dbg !9681
  %86 = load %struct.udc_csrs*, %struct.udc_csrs** %csr, align 8, !dbg !9681
  %ne = getelementptr inbounds %struct.udc_csrs, %struct.udc_csrs* %86, i32 0, i32 1, !dbg !9682
  %87 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9683
  %num115 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %87, i32 0, i32 18, !dbg !9684
  %88 = bitcast i24* %num115 to i32*, !dbg !9684
  %bf.load116 = load i32, i32* %88, align 8, !dbg !9684
  %bf.clear117 = and i32 %bf.load116, 31, !dbg !9684
  %sub118 = sub i32 %bf.clear117, 12, !dbg !9685
  %idxprom119 = sext i32 %sub118 to i64, !dbg !9680
  %arrayidx120 = getelementptr [9 x i32], [9 x i32]* %ne, i64 0, i64 %idxprom119, !dbg !9680
  %89 = bitcast i32* %arrayidx120 to i8*, !dbg !9686
  %call121 = call i32 @readl(i8* %89) #11, !dbg !9687
  store i32 %call121, i32* %tmp, align 4, !dbg !9688
  %90 = load i32, i32* %tmp, align 4, !dbg !9689
  %and122 = and i32 %90, -1073217537, !dbg !9689
  %91 = load i32, i32* %maxpacket, align 4, !dbg !9689
  %shl123 = shl i32 %91, 19, !dbg !9689
  %and124 = and i32 %shl123, 1073217536, !dbg !9689
  %or125 = or i32 %and122, %and124, !dbg !9689
  store i32 %or125, i32* %tmp, align 4, !dbg !9690
  %92 = load i32, i32* %tmp, align 4, !dbg !9691
  %93 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9692
  %csr126 = getelementptr inbounds %struct.udc, %struct.udc* %93, i32 0, i32 8, !dbg !9693
  %94 = load %struct.udc_csrs*, %struct.udc_csrs** %csr126, align 8, !dbg !9693
  %ne127 = getelementptr inbounds %struct.udc_csrs, %struct.udc_csrs* %94, i32 0, i32 1, !dbg !9694
  %95 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9695
  %num128 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %95, i32 0, i32 18, !dbg !9696
  %96 = bitcast i24* %num128 to i32*, !dbg !9696
  %bf.load129 = load i32, i32* %96, align 8, !dbg !9696
  %bf.clear130 = and i32 %bf.load129, 31, !dbg !9696
  %sub131 = sub i32 %bf.clear130, 12, !dbg !9697
  %idxprom132 = sext i32 %sub131 to i64, !dbg !9692
  %arrayidx133 = getelementptr [9 x i32], [9 x i32]* %ne127, i64 0, i64 %idxprom132, !dbg !9692
  %97 = bitcast i32* %arrayidx133 to i8*, !dbg !9698
  call void @writel(i32 %92, i8* %97) #11, !dbg !9699
  %98 = load i8, i8* @use_dma, align 1, !dbg !9700
  %tobool134 = trunc i8 %98 to i1, !dbg !9700
  br i1 %tobool134, label %land.lhs.true, label %if.end143, !dbg !9702

land.lhs.true:                                    ; preds = %if.else
  %99 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9703
  %in136 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %99, i32 0, i32 18, !dbg !9704
  %100 = bitcast i24* %in136 to i32*, !dbg !9704
  %bf.load137 = load i32, i32* %100, align 8, !dbg !9704
  %bf.lshr138 = lshr i32 %bf.load137, 19, !dbg !9704
  %bf.clear139 = and i32 %bf.lshr138, 1, !dbg !9704
  %tobool140 = icmp ne i32 %bf.clear139, 0, !dbg !9703
  br i1 %tobool140, label %if.end143, label %if.then141, !dbg !9705

if.then141:                                       ; preds = %land.lhs.true
  %101 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9706
  %call142 = call %struct.udc_request* @udc_alloc_bna_dummy(%struct.udc_ep* %101) #11, !dbg !9708
  %102 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9709
  %bna_dummy_req = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %102, i32 0, i32 11, !dbg !9710
  store %struct.udc_request* %call142, %struct.udc_request** %bna_dummy_req, align 8, !dbg !9711
  %103 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9712
  %bna_occurred = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %103, i32 0, i32 12, !dbg !9713
  store i32 0, i32* %bna_occurred, align 8, !dbg !9714
  br label %if.end143, !dbg !9715

if.end143:                                        ; preds = %if.then141, %land.lhs.true, %if.else
  %104 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9716
  %num144 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %104, i32 0, i32 18, !dbg !9718
  %105 = bitcast i24* %num144 to i32*, !dbg !9718
  %bf.load145 = load i32, i32* %105, align 8, !dbg !9718
  %bf.clear146 = and i32 %bf.load145, 31, !dbg !9718
  %cmp147 = icmp ne i32 %bf.clear146, 16, !dbg !9719
  br i1 %cmp147, label %if.then149, label %if.end153, !dbg !9720

if.then149:                                       ; preds = %if.end143
  %106 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9721
  %data_ep_enabled = getelementptr inbounds %struct.udc, %struct.udc* %106, i32 0, i32 4, !dbg !9722
  %bf.load150 = load i8, i8* %data_ep_enabled, align 8, !dbg !9723
  %bf.clear151 = and i8 %bf.load150, -9, !dbg !9723
  %bf.set152 = or i8 %bf.clear151, 8, !dbg !9723
  store i8 %bf.set152, i8* %data_ep_enabled, align 8, !dbg !9723
  br label %if.end153, !dbg !9721

if.end153:                                        ; preds = %if.then149, %if.end143
  br label %if.end154

if.end154:                                        ; preds = %if.end153, %if.then79
  %107 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9724
  %csr155 = getelementptr inbounds %struct.udc, %struct.udc* %107, i32 0, i32 8, !dbg !9725
  %108 = load %struct.udc_csrs*, %struct.udc_csrs** %csr155, align 8, !dbg !9725
  %ne156 = getelementptr inbounds %struct.udc_csrs, %struct.udc_csrs* %108, i32 0, i32 1, !dbg !9726
  %109 = load i8, i8* %udc_csr_epix, align 1, !dbg !9727
  %idxprom157 = zext i8 %109 to i64, !dbg !9724
  %arrayidx158 = getelementptr [9 x i32], [9 x i32]* %ne156, i64 0, i64 %idxprom157, !dbg !9724
  %110 = bitcast i32* %arrayidx158 to i8*, !dbg !9728
  %call159 = call i32 @readl(i8* %110) #11, !dbg !9729
  store i32 %call159, i32* %tmp, align 4, !dbg !9730
  %111 = load i32, i32* %tmp, align 4, !dbg !9731
  %and160 = and i32 %111, -1073217537, !dbg !9731
  %112 = load i32, i32* %maxpacket, align 4, !dbg !9731
  %shl161 = shl i32 %112, 19, !dbg !9731
  %and162 = and i32 %shl161, 1073217536, !dbg !9731
  %or163 = or i32 %and160, %and162, !dbg !9731
  store i32 %or163, i32* %tmp, align 4, !dbg !9732
  %113 = load i32, i32* %tmp, align 4, !dbg !9733
  %and164 = and i32 %113, -16, !dbg !9733
  %114 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !9733
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %114, i32 0, i32 2, !dbg !9733
  %115 = load i8, i8* %bEndpointAddress, align 1, !dbg !9733
  %conv165 = zext i8 %115 to i32, !dbg !9733
  %shl166 = shl i32 %conv165, 0, !dbg !9733
  %and167 = and i32 %shl166, 15, !dbg !9733
  %or168 = or i32 %and164, %and167, !dbg !9733
  store i32 %or168, i32* %tmp, align 4, !dbg !9734
  %116 = load i32, i32* %tmp, align 4, !dbg !9735
  %and169 = and i32 %116, -17, !dbg !9735
  %117 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9735
  %in170 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %117, i32 0, i32 18, !dbg !9735
  %118 = bitcast i24* %in170 to i32*, !dbg !9735
  %bf.load171 = load i32, i32* %118, align 8, !dbg !9735
  %bf.lshr172 = lshr i32 %bf.load171, 19, !dbg !9735
  %bf.clear173 = and i32 %bf.lshr172, 1, !dbg !9735
  %shl174 = shl i32 %bf.clear173, 4, !dbg !9735
  %and175 = and i32 %shl174, 16, !dbg !9735
  %or176 = or i32 %and169, %and175, !dbg !9735
  store i32 %or176, i32* %tmp, align 4, !dbg !9736
  %119 = load i32, i32* %tmp, align 4, !dbg !9737
  %and177 = and i32 %119, -97, !dbg !9737
  %120 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !9737
  %bmAttributes178 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %120, i32 0, i32 3, !dbg !9737
  %121 = load i8, i8* %bmAttributes178, align 1, !dbg !9737
  %conv179 = zext i8 %121 to i32, !dbg !9737
  %shl180 = shl i32 %conv179, 5, !dbg !9737
  %and181 = and i32 %shl180, 96, !dbg !9737
  %or182 = or i32 %and177, %and181, !dbg !9737
  store i32 %or182, i32* %tmp, align 4, !dbg !9738
  %122 = load i32, i32* %tmp, align 4, !dbg !9739
  %and183 = and i32 %122, -1921, !dbg !9739
  %123 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9739
  %dev184 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %123, i32 0, i32 14, !dbg !9739
  %124 = load %struct.udc*, %struct.udc** %dev184, align 8, !dbg !9739
  %cur_config = getelementptr inbounds %struct.udc, %struct.udc* %124, i32 0, i32 18, !dbg !9739
  %125 = load i16, i16* %cur_config, align 4, !dbg !9739
  %conv185 = zext i16 %125 to i32, !dbg !9739
  %shl186 = shl i32 %conv185, 7, !dbg !9739
  %and187 = and i32 %shl186, 1920, !dbg !9739
  %or188 = or i32 %and183, %and187, !dbg !9739
  store i32 %or188, i32* %tmp, align 4, !dbg !9740
  %126 = load i32, i32* %tmp, align 4, !dbg !9741
  %and189 = and i32 %126, -30721, !dbg !9741
  %127 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9741
  %dev190 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %127, i32 0, i32 14, !dbg !9741
  %128 = load %struct.udc*, %struct.udc** %dev190, align 8, !dbg !9741
  %cur_intf = getelementptr inbounds %struct.udc, %struct.udc* %128, i32 0, i32 19, !dbg !9741
  %129 = load i16, i16* %cur_intf, align 2, !dbg !9741
  %conv191 = zext i16 %129 to i32, !dbg !9741
  %shl192 = shl i32 %conv191, 11, !dbg !9741
  %and193 = and i32 %shl192, 30720, !dbg !9741
  %or194 = or i32 %and189, %and193, !dbg !9741
  store i32 %or194, i32* %tmp, align 4, !dbg !9742
  %130 = load i32, i32* %tmp, align 4, !dbg !9743
  %and195 = and i32 %130, -491521, !dbg !9743
  %131 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9743
  %dev196 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %131, i32 0, i32 14, !dbg !9743
  %132 = load %struct.udc*, %struct.udc** %dev196, align 8, !dbg !9743
  %cur_alt = getelementptr inbounds %struct.udc, %struct.udc* %132, i32 0, i32 20, !dbg !9743
  %133 = load i16, i16* %cur_alt, align 8, !dbg !9743
  %conv197 = zext i16 %133 to i32, !dbg !9743
  %shl198 = shl i32 %conv197, 15, !dbg !9743
  %and199 = and i32 %shl198, 491520, !dbg !9743
  %or200 = or i32 %and195, %and199, !dbg !9743
  store i32 %or200, i32* %tmp, align 4, !dbg !9744
  %134 = load i32, i32* %tmp, align 4, !dbg !9745
  %135 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9746
  %csr201 = getelementptr inbounds %struct.udc, %struct.udc* %135, i32 0, i32 8, !dbg !9747
  %136 = load %struct.udc_csrs*, %struct.udc_csrs** %csr201, align 8, !dbg !9747
  %ne202 = getelementptr inbounds %struct.udc_csrs, %struct.udc_csrs* %136, i32 0, i32 1, !dbg !9748
  %137 = load i8, i8* %udc_csr_epix, align 1, !dbg !9749
  %idxprom203 = zext i8 %137 to i64, !dbg !9746
  %arrayidx204 = getelementptr [9 x i32], [9 x i32]* %ne202, i64 0, i64 %idxprom203, !dbg !9746
  %138 = bitcast i32* %arrayidx204 to i8*, !dbg !9750
  call void @writel(i32 %134, i8* %138) #11, !dbg !9751
  %139 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9752
  %regs205 = getelementptr inbounds %struct.udc, %struct.udc* %139, i32 0, i32 9, !dbg !9753
  %140 = load %struct.udc_regs*, %struct.udc_regs** %regs205, align 8, !dbg !9753
  %ep_irqmsk = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %140, i32 0, i32 6, !dbg !9754
  %141 = bitcast i32* %ep_irqmsk to i8*, !dbg !9755
  %call206 = call i32 @readl(i8* %141) #11, !dbg !9756
  store i32 %call206, i32* %tmp, align 4, !dbg !9757
  %142 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9758
  %num207 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %142, i32 0, i32 18, !dbg !9758
  %143 = bitcast i24* %num207 to i32*, !dbg !9758
  %bf.load208 = load i32, i32* %143, align 8, !dbg !9758
  %bf.clear209 = and i32 %bf.load208, 31, !dbg !9758
  %shl210 = shl i32 1, %bf.clear209, !dbg !9758
  %neg = xor i32 %shl210, -1, !dbg !9758
  %144 = load i32, i32* %tmp, align 4, !dbg !9759
  %and211 = and i32 %144, %neg, !dbg !9759
  store i32 %and211, i32* %tmp, align 4, !dbg !9759
  %145 = load i32, i32* %tmp, align 4, !dbg !9760
  %146 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9761
  %regs212 = getelementptr inbounds %struct.udc, %struct.udc* %146, i32 0, i32 9, !dbg !9762
  %147 = load %struct.udc_regs*, %struct.udc_regs** %regs212, align 8, !dbg !9762
  %ep_irqmsk213 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %147, i32 0, i32 6, !dbg !9763
  %148 = bitcast i32* %ep_irqmsk213 to i8*, !dbg !9764
  call void @writel(i32 %145, i8* %148) #11, !dbg !9765
  %149 = load i8, i8* @use_dma, align 1, !dbg !9766
  %tobool214 = trunc i8 %149 to i1, !dbg !9766
  br i1 %tobool214, label %lor.lhs.false215, label %if.then221, !dbg !9768

lor.lhs.false215:                                 ; preds = %if.end154
  %150 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9769
  %in216 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %150, i32 0, i32 18, !dbg !9770
  %151 = bitcast i24* %in216 to i32*, !dbg !9770
  %bf.load217 = load i32, i32* %151, align 8, !dbg !9770
  %bf.lshr218 = lshr i32 %bf.load217, 19, !dbg !9770
  %bf.clear219 = and i32 %bf.lshr218, 1, !dbg !9770
  %tobool220 = icmp ne i32 %bf.clear219, 0, !dbg !9769
  br i1 %tobool220, label %if.then221, label %if.end231, !dbg !9771

if.then221:                                       ; preds = %lor.lhs.false215, %if.end154
  %152 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9772
  %regs222 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %152, i32 0, i32 1, !dbg !9774
  %153 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs222, align 8, !dbg !9774
  %ctl223 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %153, i32 0, i32 0, !dbg !9775
  %154 = bitcast i32* %ctl223 to i8*, !dbg !9776
  %call224 = call i32 @readl(i8* %154) #11, !dbg !9777
  store i32 %call224, i32* %tmp, align 4, !dbg !9778
  %155 = load i32, i32* %tmp, align 4, !dbg !9779
  %or225 = or i32 %155, 256, !dbg !9779
  store i32 %or225, i32* %tmp, align 4, !dbg !9779
  %156 = load i32, i32* %tmp, align 4, !dbg !9780
  %157 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9781
  %regs226 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %157, i32 0, i32 1, !dbg !9782
  %158 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs226, align 8, !dbg !9782
  %ctl227 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %158, i32 0, i32 0, !dbg !9783
  %159 = bitcast i32* %ctl227 to i8*, !dbg !9784
  call void @writel(i32 %156, i8* %159) #11, !dbg !9785
  %160 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9786
  %naking = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %160, i32 0, i32 13, !dbg !9787
  store i32 0, i32* %naking, align 4, !dbg !9788
  %161 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9789
  %162 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9790
  %num228 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %162, i32 0, i32 18, !dbg !9791
  %163 = bitcast i24* %num228 to i32*, !dbg !9791
  %bf.load229 = load i32, i32* %163, align 8, !dbg !9791
  %bf.clear230 = and i32 %bf.load229, 31, !dbg !9791
  call void @UDC_QUEUE_CNAK(%struct.udc_ep* %161, i32 %bf.clear230) #11, !dbg !9792
  br label %if.end231, !dbg !9793

if.end231:                                        ; preds = %if.then221, %lor.lhs.false215
  %164 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !9794
  %bEndpointAddress232 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %164, i32 0, i32 2, !dbg !9795
  %165 = load i8, i8* %bEndpointAddress232, align 1, !dbg !9795
  %conv233 = zext i8 %165 to i32, !dbg !9794
  store i32 %conv233, i32* %tmp, align 4, !dbg !9796
  %166 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9797
  %lock234 = getelementptr inbounds %struct.udc, %struct.udc* %166, i32 0, i32 1, !dbg !9798
  %167 = load i64, i64* %iflags, align 8, !dbg !9799
  store %struct.spinlock* %lock234, %struct.spinlock** %lock.addr.i235, align 8
  store i64 %167, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !497, metadata !7746, metadata !DIExpression()) #5, !dbg !9800
  call void @llvm.dbg.declare(metadata !497, metadata !7750, metadata !DIExpression()) #5, !dbg !9800
  store i32 1, i32* %tmp.i, align 4, !dbg !9800
  %168 = load i32, i32* %tmp.i, align 4, !dbg !9800
  call void @llvm.dbg.declare(metadata !497, metadata !7751, metadata !DIExpression()) #5, !dbg !9801
  call void @llvm.dbg.declare(metadata !497, metadata !7757, metadata !DIExpression()) #5, !dbg !9801
  store i32 1, i32* %tmp8.i, align 4, !dbg !9801
  %169 = load i32, i32* %tmp8.i, align 4, !dbg !9801
  %170 = load i64, i64* %flags.addr.i, align 8, !dbg !9802
  call void @arch_local_irq_restore(i64 %170) #13, !dbg !9802
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !9803, !srcloc !7761
  %171 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i235, align 8, !dbg !9804
  %172 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %171, i32 0, i32 0, !dbg !9804
  %rlock.i236 = bitcast %union.anon.4* %172 to %struct.raw_spinlock*, !dbg !9804
  store i32 0, i32* %retval, align 4, !dbg !9805
  br label %return, !dbg !9805

return:                                           ; preds = %if.end231, %if.then12, %if.then
  %173 = load i32, i32* %retval, align 4, !dbg !9806
  ret i32 %173, !dbg !9806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_ep_disable(%struct.usb_ep* %usbep) #0 !dbg !9807 {
entry:
  %lock.addr.i31 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i31, metadata !7577, metadata !DIExpression()), !dbg !9808
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7583, metadata !DIExpression()), !dbg !9810
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7585, metadata !DIExpression()), !dbg !9811
  %retval = alloca i32, align 4
  %usbep.addr = alloca %struct.usb_ep*, align 8
  %ep = alloca %struct.udc_ep*, align 8
  %iflags = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.udc_ep*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy12 = alloca i64, align 8
  %__dummy213 = alloca i64, align 8
  %tmp16 = alloca i32, align 4
  store %struct.usb_ep* %usbep, %struct.usb_ep** %usbep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %usbep.addr, metadata !9818, metadata !DIExpression()), !dbg !9819
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep, metadata !9820, metadata !DIExpression()), !dbg !9821
  store %struct.udc_ep* null, %struct.udc_ep** %ep, align 8, !dbg !9821
  call void @llvm.dbg.declare(metadata i64* %iflags, metadata !9822, metadata !DIExpression()), !dbg !9823
  %0 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !9824
  %tobool = icmp ne %struct.usb_ep* %0, null, !dbg !9824
  br i1 %tobool, label %if.end, label %if.then, !dbg !9826

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9827
  br label %return, !dbg !9827

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9828, metadata !DIExpression()), !dbg !9830
  %1 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !9830
  %2 = bitcast %struct.usb_ep* %1 to i8*, !dbg !9830
  store i8* %2, i8** %__mptr, align 8, !dbg !9830
  br label %do.body, !dbg !9830

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9831

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9830
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !9830
  %4 = bitcast i8* %add.ptr to %struct.udc_ep*, !dbg !9830
  store %struct.udc_ep* %4, %struct.udc_ep** %tmp, align 8, !dbg !9831
  %5 = load %struct.udc_ep*, %struct.udc_ep** %tmp, align 8, !dbg !9830
  store %struct.udc_ep* %5, %struct.udc_ep** %ep, align 8, !dbg !9833
  %6 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !9834
  %name = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %6, i32 0, i32 1, !dbg !9836
  %7 = load i8*, i8** %name, align 8, !dbg !9836
  %cmp = icmp eq i8* %7, getelementptr inbounds ([6 x i8], [6 x i8]* @ep0_string, i64 0, i64 0), !dbg !9837
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !9838

lor.lhs.false:                                    ; preds = %do.end
  %8 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9839
  %ep1 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %8, i32 0, i32 0, !dbg !9840
  %desc = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep1, i32 0, i32 9, !dbg !9841
  %9 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc, align 8, !dbg !9841
  %tobool2 = icmp ne %struct.usb_endpoint_descriptor* %9, null, !dbg !9839
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !9842

if.then3:                                         ; preds = %lor.lhs.false, %do.end
  store i32 -22, i32* %retval, align 4, !dbg !9843
  br label %return, !dbg !9843

if.end4:                                          ; preds = %lor.lhs.false
  br label %do.body5, !dbg !9844

do.body5:                                         ; preds = %if.end4
  br label %do.body6, !dbg !9845

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9846, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9849, metadata !DIExpression()), !dbg !9848
  %cmp7 = icmp eq i64* %__dummy, %__dummy2, !dbg !9848
  %conv = zext i1 %cmp7 to i32, !dbg !9848
  store i32 1, i32* %tmp8, align 4, !dbg !9848
  %10 = load i32, i32* %tmp8, align 4, !dbg !9848
  br label %do.body9, !dbg !9850

do.body9:                                         ; preds = %do.body6
  br label %do.body10, !dbg !9851

do.body10:                                        ; preds = %do.body9
  br label %do.body11, !dbg !9852

do.body11:                                        ; preds = %do.body10
  call void @llvm.dbg.declare(metadata i64* %__dummy12, metadata !9854, metadata !DIExpression()), !dbg !9857
  call void @llvm.dbg.declare(metadata i64* %__dummy213, metadata !9858, metadata !DIExpression()), !dbg !9857
  %cmp14 = icmp eq i64* %__dummy12, %__dummy213, !dbg !9857
  %conv15 = zext i1 %cmp14 to i32, !dbg !9857
  store i32 1, i32* %tmp16, align 4, !dbg !9857
  %11 = load i32, i32* %tmp16, align 4, !dbg !9857
  %call = call i64 @arch_local_irq_save() #11, !dbg !9859
  store i64 %call, i64* %iflags, align 8, !dbg !9859
  br label %do.end17, !dbg !9859

do.end17:                                         ; preds = %do.body11
  br label %do.end18, !dbg !9852

do.end18:                                         ; preds = %do.end17
  br label %do.body19, !dbg !9851

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !9860, !srcloc !9861
  br label %do.body20, !dbg !9860

do.body20:                                        ; preds = %do.body19
  %12 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9862
  %dev = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %12, i32 0, i32 14, !dbg !9862
  %13 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9862
  %lock = getelementptr inbounds %struct.udc, %struct.udc* %13, i32 0, i32 1, !dbg !9862
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9863
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !9864
  %rlock.i = bitcast %union.anon.4* %15 to %struct.raw_spinlock*, !dbg !9864
  br label %do.end22, !dbg !9862

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !9860

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !9851

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !9850

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !9845

do.end26:                                         ; preds = %do.end25
  %16 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9865
  %ep27 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %16, i32 0, i32 0, !dbg !9866
  %17 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9867
  %bna_dummy_req = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %17, i32 0, i32 11, !dbg !9868
  %18 = load %struct.udc_request*, %struct.udc_request** %bna_dummy_req, align 8, !dbg !9868
  %req = getelementptr inbounds %struct.udc_request, %struct.udc_request* %18, i32 0, i32 0, !dbg !9869
  call void @udc_free_request(%struct.usb_ep* %ep27, %struct.usb_request* %req) #11, !dbg !9870
  %19 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9871
  call void @empty_req_queue(%struct.udc_ep* %19) #11, !dbg !9872
  %20 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9873
  %dev28 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %20, i32 0, i32 14, !dbg !9874
  %21 = load %struct.udc*, %struct.udc** %dev28, align 8, !dbg !9874
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %21, i32 0, i32 9, !dbg !9875
  %22 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !9875
  %23 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9876
  call void @ep_init(%struct.udc_regs* %22, %struct.udc_ep* %23) #11, !dbg !9877
  %24 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9878
  %dev29 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %24, i32 0, i32 14, !dbg !9879
  %25 = load %struct.udc*, %struct.udc** %dev29, align 8, !dbg !9879
  %lock30 = getelementptr inbounds %struct.udc, %struct.udc* %25, i32 0, i32 1, !dbg !9880
  %26 = load i64, i64* %iflags, align 8, !dbg !9881
  store %struct.spinlock* %lock30, %struct.spinlock** %lock.addr.i31, align 8
  store i64 %26, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !497, metadata !7746, metadata !DIExpression()) #5, !dbg !9882
  call void @llvm.dbg.declare(metadata !497, metadata !7750, metadata !DIExpression()) #5, !dbg !9882
  store i32 1, i32* %tmp.i, align 4, !dbg !9882
  %27 = load i32, i32* %tmp.i, align 4, !dbg !9882
  call void @llvm.dbg.declare(metadata !497, metadata !7751, metadata !DIExpression()) #5, !dbg !9883
  call void @llvm.dbg.declare(metadata !497, metadata !7757, metadata !DIExpression()) #5, !dbg !9883
  store i32 1, i32* %tmp8.i, align 4, !dbg !9883
  %28 = load i32, i32* %tmp8.i, align 4, !dbg !9883
  %29 = load i64, i64* %flags.addr.i, align 8, !dbg !9884
  call void @arch_local_irq_restore(i64 %29) #13, !dbg !9884
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !9885, !srcloc !7761
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i31, align 8, !dbg !9886
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !9886
  %rlock.i32 = bitcast %union.anon.4* %31 to %struct.raw_spinlock*, !dbg !9886
  store i32 0, i32* %retval, align 4, !dbg !9887
  br label %return, !dbg !9887

return:                                           ; preds = %do.end26, %if.then3, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !9888
  ret i32 %32, !dbg !9888
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_request* @udc_alloc_request(%struct.usb_ep* %usbep, i32 %gfp) #0 !dbg !9889 {
entry:
  %retval = alloca %struct.usb_request*, align 8
  %usbep.addr = alloca %struct.usb_ep*, align 8
  %gfp.addr = alloca i32, align 4
  %req = alloca %struct.udc_request*, align 8
  %dma_desc = alloca %struct.udc_data_dma*, align 8
  %ep = alloca %struct.udc_ep*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.udc_ep*, align 8
  store %struct.usb_ep* %usbep, %struct.usb_ep** %usbep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %usbep.addr, metadata !9890, metadata !DIExpression()), !dbg !9891
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !9892, metadata !DIExpression()), !dbg !9893
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req, metadata !9894, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.declare(metadata %struct.udc_data_dma** %dma_desc, metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep, metadata !9898, metadata !DIExpression()), !dbg !9899
  %0 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !9900
  %tobool = icmp ne %struct.usb_ep* %0, null, !dbg !9900
  br i1 %tobool, label %if.end, label %if.then, !dbg !9902

if.then:                                          ; preds = %entry
  store %struct.usb_request* null, %struct.usb_request** %retval, align 8, !dbg !9903
  br label %return, !dbg !9903

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9904, metadata !DIExpression()), !dbg !9906
  %1 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !9906
  %2 = bitcast %struct.usb_ep* %1 to i8*, !dbg !9906
  store i8* %2, i8** %__mptr, align 8, !dbg !9906
  br label %do.body, !dbg !9906

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9907

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9906
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !9906
  %4 = bitcast i8* %add.ptr to %struct.udc_ep*, !dbg !9906
  store %struct.udc_ep* %4, %struct.udc_ep** %tmp, align 8, !dbg !9907
  %5 = load %struct.udc_ep*, %struct.udc_ep** %tmp, align 8, !dbg !9906
  store %struct.udc_ep* %5, %struct.udc_ep** %ep, align 8, !dbg !9909
  br label %do.body1, !dbg !9910

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !9911

do.end2:                                          ; preds = %do.body1
  %6 = load i32, i32* %gfp.addr, align 4, !dbg !9913
  %call = call i8* @kzalloc(i64 152, i32 %6) #11, !dbg !9914
  %7 = bitcast i8* %call to %struct.udc_request*, !dbg !9914
  store %struct.udc_request* %7, %struct.udc_request** %req, align 8, !dbg !9915
  %8 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !9916
  %tobool3 = icmp ne %struct.udc_request* %8, null, !dbg !9916
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !9918

if.then4:                                         ; preds = %do.end2
  store %struct.usb_request* null, %struct.usb_request** %retval, align 8, !dbg !9919
  br label %return, !dbg !9919

if.end5:                                          ; preds = %do.end2
  %9 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !9920
  %req6 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %9, i32 0, i32 0, !dbg !9921
  %dma = getelementptr inbounds %struct.usb_request, %struct.usb_request* %req6, i32 0, i32 2, !dbg !9922
  store i64 -1, i64* %dma, align 8, !dbg !9923
  %10 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !9924
  %queue = getelementptr inbounds %struct.udc_request, %struct.udc_request* %10, i32 0, i32 5, !dbg !9925
  call void @INIT_LIST_HEAD(%struct.list_head* %queue) #11, !dbg !9926
  %11 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9927
  %dma7 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %11, i32 0, i32 3, !dbg !9929
  %12 = load i32*, i32** %dma7, align 8, !dbg !9929
  %tobool8 = icmp ne i32* %12, null, !dbg !9927
  br i1 %tobool8, label %if.then9, label %if.end17, !dbg !9930

if.then9:                                         ; preds = %if.end5
  %13 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !9931
  %dev = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %13, i32 0, i32 14, !dbg !9933
  %14 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !9933
  %data_requests = getelementptr inbounds %struct.udc, %struct.udc* %14, i32 0, i32 13, !dbg !9934
  %15 = load %struct.dma_pool*, %struct.dma_pool** %data_requests, align 8, !dbg !9934
  %16 = load i32, i32* %gfp.addr, align 4, !dbg !9935
  %17 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !9936
  %td_phys = getelementptr inbounds %struct.udc_request, %struct.udc_request* %17, i32 0, i32 2, !dbg !9937
  %call10 = call i8* @dma_pool_alloc(%struct.dma_pool* %15, i32 %16, i64* %td_phys) #11, !dbg !9938
  %18 = bitcast i8* %call10 to %struct.udc_data_dma*, !dbg !9938
  store %struct.udc_data_dma* %18, %struct.udc_data_dma** %dma_desc, align 8, !dbg !9939
  %19 = load %struct.udc_data_dma*, %struct.udc_data_dma** %dma_desc, align 8, !dbg !9940
  %tobool11 = icmp ne %struct.udc_data_dma* %19, null, !dbg !9940
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !9942

if.then12:                                        ; preds = %if.then9
  %20 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !9943
  %21 = bitcast %struct.udc_request* %20 to i8*, !dbg !9943
  call void @kfree(i8* %21) #11, !dbg !9945
  store %struct.usb_request* null, %struct.usb_request** %retval, align 8, !dbg !9946
  br label %return, !dbg !9946

if.end13:                                         ; preds = %if.then9
  br label %do.body14, !dbg !9947

do.body14:                                        ; preds = %if.end13
  br label %do.end15, !dbg !9948

do.end15:                                         ; preds = %do.body14
  %22 = load %struct.udc_data_dma*, %struct.udc_data_dma** %dma_desc, align 8, !dbg !9950
  %status = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %22, i32 0, i32 0, !dbg !9950
  %23 = load i32, i32* %status, align 16, !dbg !9950
  %and = and i32 %23, 1073741823, !dbg !9950
  %or = or i32 %and, -1073741824, !dbg !9950
  %24 = load %struct.udc_data_dma*, %struct.udc_data_dma** %dma_desc, align 8, !dbg !9951
  %status16 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %24, i32 0, i32 0, !dbg !9952
  store i32 %or, i32* %status16, align 16, !dbg !9953
  %25 = load %struct.udc_data_dma*, %struct.udc_data_dma** %dma_desc, align 8, !dbg !9954
  %bufptr = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %25, i32 0, i32 2, !dbg !9955
  store i32 -1, i32* %bufptr, align 8, !dbg !9956
  %26 = load %struct.udc_data_dma*, %struct.udc_data_dma** %dma_desc, align 8, !dbg !9957
  %27 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !9958
  %td_data = getelementptr inbounds %struct.udc_request, %struct.udc_request* %27, i32 0, i32 3, !dbg !9959
  store %struct.udc_data_dma* %26, %struct.udc_data_dma** %td_data, align 8, !dbg !9960
  %28 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !9961
  %td_data_last = getelementptr inbounds %struct.udc_request, %struct.udc_request* %28, i32 0, i32 4, !dbg !9962
  store %struct.udc_data_dma* null, %struct.udc_data_dma** %td_data_last, align 8, !dbg !9963
  %29 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !9964
  %chain_len = getelementptr inbounds %struct.udc_request, %struct.udc_request* %29, i32 0, i32 6, !dbg !9965
  store i32 1, i32* %chain_len, align 8, !dbg !9966
  br label %if.end17, !dbg !9967

if.end17:                                         ; preds = %do.end15, %if.end5
  %30 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !9968
  %req18 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %30, i32 0, i32 0, !dbg !9969
  store %struct.usb_request* %req18, %struct.usb_request** %retval, align 8, !dbg !9970
  br label %return, !dbg !9970

return:                                           ; preds = %if.end17, %if.then12, %if.then4, %if.then
  %31 = load %struct.usb_request*, %struct.usb_request** %retval, align 8, !dbg !9971
  ret %struct.usb_request* %31, !dbg !9971
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @udc_free_request(%struct.usb_ep* %usbep, %struct.usb_request* %usbreq) #0 !dbg !9972 {
entry:
  %usbep.addr = alloca %struct.usb_ep*, align 8
  %usbreq.addr = alloca %struct.usb_request*, align 8
  %ep = alloca %struct.udc_ep*, align 8
  %req = alloca %struct.udc_request*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.udc_ep*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp5 = alloca %struct.udc_request*, align 8
  store %struct.usb_ep* %usbep, %struct.usb_ep** %usbep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %usbep.addr, metadata !9973, metadata !DIExpression()), !dbg !9974
  store %struct.usb_request* %usbreq, %struct.usb_request** %usbreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_request** %usbreq.addr, metadata !9975, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep, metadata !9977, metadata !DIExpression()), !dbg !9978
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req, metadata !9979, metadata !DIExpression()), !dbg !9980
  %0 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !9981
  %tobool = icmp ne %struct.usb_ep* %0, null, !dbg !9981
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9983

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.usb_request*, %struct.usb_request** %usbreq.addr, align 8, !dbg !9984
  %tobool1 = icmp ne %struct.usb_request* %1, null, !dbg !9984
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9985

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !9986

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9987, metadata !DIExpression()), !dbg !9989
  %2 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !9989
  %3 = bitcast %struct.usb_ep* %2 to i8*, !dbg !9989
  store i8* %3, i8** %__mptr, align 8, !dbg !9989
  br label %do.body, !dbg !9989

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9990

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !9989
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !9989
  %5 = bitcast i8* %add.ptr to %struct.udc_ep*, !dbg !9989
  store %struct.udc_ep* %5, %struct.udc_ep** %tmp, align 8, !dbg !9990
  %6 = load %struct.udc_ep*, %struct.udc_ep** %tmp, align 8, !dbg !9989
  store %struct.udc_ep* %6, %struct.udc_ep** %ep, align 8, !dbg !9992
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !9993, metadata !DIExpression()), !dbg !9995
  %7 = load %struct.usb_request*, %struct.usb_request** %usbreq.addr, align 8, !dbg !9995
  %8 = bitcast %struct.usb_request* %7 to i8*, !dbg !9995
  store i8* %8, i8** %__mptr2, align 8, !dbg !9995
  br label %do.body3, !dbg !9995

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !9996

do.end4:                                          ; preds = %do.body3
  %9 = load i8*, i8** %__mptr2, align 8, !dbg !9995
  %add.ptr6 = getelementptr i8, i8* %9, i64 0, !dbg !9995
  %10 = bitcast i8* %add.ptr6 to %struct.udc_request*, !dbg !9995
  store %struct.udc_request* %10, %struct.udc_request** %tmp5, align 8, !dbg !9996
  %11 = load %struct.udc_request*, %struct.udc_request** %tmp5, align 8, !dbg !9995
  store %struct.udc_request* %11, %struct.udc_request** %req, align 8, !dbg !9998
  br label %do.body7, !dbg !9999

do.body7:                                         ; preds = %do.end4
  br label %do.end8, !dbg !10000

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !10002

do.body9:                                         ; preds = %do.end8
  %12 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10003
  %queue = getelementptr inbounds %struct.udc_request, %struct.udc_request* %12, i32 0, i32 5, !dbg !10003
  %call = call i32 @list_empty(%struct.list_head* %queue) #11, !dbg !10003
  %tobool10 = icmp ne i32 %call, 0, !dbg !10003
  %lnot = xor i1 %tobool10, true, !dbg !10003
  %lnot11 = xor i1 %lnot, true, !dbg !10003
  %lnot12 = xor i1 %lnot11, true, !dbg !10003
  %lnot.ext = zext i1 %lnot12 to i32, !dbg !10003
  %conv = sext i32 %lnot.ext to i64, !dbg !10003
  %tobool13 = icmp ne i64 %conv, 0, !dbg !10003
  br i1 %tobool13, label %if.then14, label %if.end23, !dbg !10006

if.then14:                                        ; preds = %do.body9
  br label %do.body15, !dbg !10003

do.body15:                                        ; preds = %if.then14
  br label %do.body16, !dbg !10007

do.body16:                                        ; preds = %do.body15
  br label %do.end17, !dbg !10009

do.end17:                                         ; preds = %do.body16
  br label %do.body18, !dbg !10007

do.body18:                                        ; preds = %do.end17
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.16, i64 0, i64 0), i32 596, i32 0, i64 12) #5, !dbg !10011, !srcloc !10013
  br label %do.end19, !dbg !10011

do.end19:                                         ; preds = %do.body18
  br label %do.body20, !dbg !10007

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 248) #5, !dbg !10014, !srcloc !10017
  unreachable, !dbg !10018

do.end21:                                         ; No predecessors!
  br label %do.end22, !dbg !10007

do.end22:                                         ; preds = %do.end21
  br label %if.end23, !dbg !10007

if.end23:                                         ; preds = %do.end22, %do.body9
  br label %do.end24, !dbg !10006

do.end24:                                         ; preds = %if.end23
  %13 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10019
  %td_data = getelementptr inbounds %struct.udc_request, %struct.udc_request* %13, i32 0, i32 3, !dbg !10021
  %14 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data, align 8, !dbg !10021
  %tobool25 = icmp ne %struct.udc_data_dma* %14, null, !dbg !10019
  br i1 %tobool25, label %if.then26, label %if.end34, !dbg !10022

if.then26:                                        ; preds = %do.end24
  br label %do.body27, !dbg !10023

do.body27:                                        ; preds = %if.then26
  br label %do.end28, !dbg !10025

do.end28:                                         ; preds = %do.body27
  %15 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10027
  %chain_len = getelementptr inbounds %struct.udc_request, %struct.udc_request* %15, i32 0, i32 6, !dbg !10029
  %16 = load i32, i32* %chain_len, align 8, !dbg !10029
  %cmp = icmp ugt i32 %16, 1, !dbg !10030
  br i1 %cmp, label %if.then30, label %if.end31, !dbg !10031

if.then30:                                        ; preds = %do.end28
  %17 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10032
  %dev = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %17, i32 0, i32 14, !dbg !10033
  %18 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10033
  %19 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10034
  call void @udc_free_dma_chain(%struct.udc* %18, %struct.udc_request* %19) #11, !dbg !10035
  br label %if.end31, !dbg !10035

if.end31:                                         ; preds = %if.then30, %do.end28
  %20 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10036
  %dev32 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %20, i32 0, i32 14, !dbg !10037
  %21 = load %struct.udc*, %struct.udc** %dev32, align 8, !dbg !10037
  %data_requests = getelementptr inbounds %struct.udc, %struct.udc* %21, i32 0, i32 13, !dbg !10038
  %22 = load %struct.dma_pool*, %struct.dma_pool** %data_requests, align 8, !dbg !10038
  %23 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10039
  %td_data33 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %23, i32 0, i32 3, !dbg !10040
  %24 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data33, align 8, !dbg !10040
  %25 = bitcast %struct.udc_data_dma* %24 to i8*, !dbg !10039
  %26 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10041
  %td_phys = getelementptr inbounds %struct.udc_request, %struct.udc_request* %26, i32 0, i32 2, !dbg !10042
  %27 = load i64, i64* %td_phys, align 8, !dbg !10042
  call void @dma_pool_free(%struct.dma_pool* %22, i8* %25, i64 %27) #11, !dbg !10043
  br label %if.end34, !dbg !10044

if.end34:                                         ; preds = %if.end31, %do.end24
  %28 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10045
  %29 = bitcast %struct.udc_request* %28 to i8*, !dbg !10045
  call void @kfree(i8* %29) #11, !dbg !10046
  br label %return, !dbg !10047

return:                                           ; preds = %if.end34, %if.then
  ret void, !dbg !10047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_queue(%struct.usb_ep* %usbep, %struct.usb_request* %usbreq, i32 %gfp) #0 !dbg !10048 {
entry:
  %lock.addr.i266 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i266, metadata !7577, metadata !DIExpression()), !dbg !10049
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7583, metadata !DIExpression()), !dbg !10051
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7585, metadata !DIExpression()), !dbg !10052
  %retval = alloca i32, align 4
  %usbep.addr = alloca %struct.usb_ep*, align 8
  %usbreq.addr = alloca %struct.usb_request*, align 8
  %gfp.addr = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %open_rxfifo = alloca i8, align 1
  %iflags = alloca i64, align 8
  %ep = alloca %struct.udc_ep*, align 8
  %req = alloca %struct.udc_request*, align 8
  %dev = alloca %struct.udc*, align 8
  %tmp = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp2 = alloca %struct.udc_request*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp13 = alloca %struct.udc_ep*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp49 = alloca i32, align 4
  %__dummy53 = alloca i64, align 8
  %__dummy254 = alloca i64, align 8
  %tmp57 = alloca i32, align 4
  store %struct.usb_ep* %usbep, %struct.usb_ep** %usbep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %usbep.addr, metadata !10059, metadata !DIExpression()), !dbg !10060
  store %struct.usb_request* %usbreq, %struct.usb_request** %usbreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_request** %usbreq.addr, metadata !10061, metadata !DIExpression()), !dbg !10062
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !10063, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !10065, metadata !DIExpression()), !dbg !10066
  store i32 0, i32* %retval1, align 4, !dbg !10066
  call void @llvm.dbg.declare(metadata i8* %open_rxfifo, metadata !10067, metadata !DIExpression()), !dbg !10068
  store i8 0, i8* %open_rxfifo, align 1, !dbg !10068
  call void @llvm.dbg.declare(metadata i64* %iflags, metadata !10069, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep, metadata !10071, metadata !DIExpression()), !dbg !10072
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req, metadata !10073, metadata !DIExpression()), !dbg !10074
  call void @llvm.dbg.declare(metadata %struct.udc** %dev, metadata !10075, metadata !DIExpression()), !dbg !10076
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10077, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10079, metadata !DIExpression()), !dbg !10081
  %0 = load %struct.usb_request*, %struct.usb_request** %usbreq.addr, align 8, !dbg !10081
  %1 = bitcast %struct.usb_request* %0 to i8*, !dbg !10081
  store i8* %1, i8** %__mptr, align 8, !dbg !10081
  br label %do.body, !dbg !10081

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10082

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10081
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10081
  %3 = bitcast i8* %add.ptr to %struct.udc_request*, !dbg !10081
  store %struct.udc_request* %3, %struct.udc_request** %tmp2, align 8, !dbg !10082
  %4 = load %struct.udc_request*, %struct.udc_request** %tmp2, align 8, !dbg !10081
  store %struct.udc_request* %4, %struct.udc_request** %req, align 8, !dbg !10084
  %5 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !10085
  %tobool = icmp ne %struct.usb_ep* %5, null, !dbg !10085
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10087

lor.lhs.false:                                    ; preds = %do.end
  %6 = load %struct.usb_request*, %struct.usb_request** %usbreq.addr, align 8, !dbg !10088
  %tobool3 = icmp ne %struct.usb_request* %6, null, !dbg !10088
  br i1 %tobool3, label %lor.lhs.false4, label %if.then, !dbg !10089

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %7 = load %struct.usb_request*, %struct.usb_request** %usbreq.addr, align 8, !dbg !10090
  %complete = getelementptr inbounds %struct.usb_request, %struct.usb_request* %7, i32 0, i32 7, !dbg !10091
  %8 = load void (%struct.usb_ep*, %struct.usb_request*)*, void (%struct.usb_ep*, %struct.usb_request*)** %complete, align 8, !dbg !10091
  %tobool5 = icmp ne void (%struct.usb_ep*, %struct.usb_request*)* %8, null, !dbg !10090
  br i1 %tobool5, label %lor.lhs.false6, label %if.then, !dbg !10092

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %9 = load %struct.usb_request*, %struct.usb_request** %usbreq.addr, align 8, !dbg !10093
  %buf = getelementptr inbounds %struct.usb_request, %struct.usb_request* %9, i32 0, i32 0, !dbg !10094
  %10 = load i8*, i8** %buf, align 8, !dbg !10094
  %tobool7 = icmp ne i8* %10, null, !dbg !10093
  br i1 %tobool7, label %lor.lhs.false8, label %if.then, !dbg !10095

lor.lhs.false8:                                   ; preds = %lor.lhs.false6
  %11 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10096
  %queue = getelementptr inbounds %struct.udc_request, %struct.udc_request* %11, i32 0, i32 5, !dbg !10097
  %call = call i32 @list_empty(%struct.list_head* %queue) #11, !dbg !10098
  %tobool9 = icmp ne i32 %call, 0, !dbg !10098
  br i1 %tobool9, label %if.end, label %if.then, !dbg !10099

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false, %do.end
  store i32 -22, i32* %retval, align 4, !dbg !10100
  br label %return, !dbg !10100

if.end:                                           ; preds = %lor.lhs.false8
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !10101, metadata !DIExpression()), !dbg !10103
  %12 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !10103
  %13 = bitcast %struct.usb_ep* %12 to i8*, !dbg !10103
  store i8* %13, i8** %__mptr10, align 8, !dbg !10103
  br label %do.body11, !dbg !10103

do.body11:                                        ; preds = %if.end
  br label %do.end12, !dbg !10104

do.end12:                                         ; preds = %do.body11
  %14 = load i8*, i8** %__mptr10, align 8, !dbg !10103
  %add.ptr14 = getelementptr i8, i8* %14, i64 0, !dbg !10103
  %15 = bitcast i8* %add.ptr14 to %struct.udc_ep*, !dbg !10103
  store %struct.udc_ep* %15, %struct.udc_ep** %tmp13, align 8, !dbg !10104
  %16 = load %struct.udc_ep*, %struct.udc_ep** %tmp13, align 8, !dbg !10103
  store %struct.udc_ep* %16, %struct.udc_ep** %ep, align 8, !dbg !10106
  %17 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10107
  %ep15 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %17, i32 0, i32 0, !dbg !10109
  %desc = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep15, i32 0, i32 9, !dbg !10110
  %18 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc, align 8, !dbg !10110
  %tobool16 = icmp ne %struct.usb_endpoint_descriptor* %18, null, !dbg !10107
  br i1 %tobool16, label %if.end23, label %land.lhs.true, !dbg !10111

land.lhs.true:                                    ; preds = %do.end12
  %19 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10112
  %num = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %19, i32 0, i32 18, !dbg !10113
  %20 = bitcast i24* %num to i32*, !dbg !10113
  %bf.load = load i32, i32* %20, align 8, !dbg !10113
  %bf.clear = and i32 %bf.load, 31, !dbg !10113
  %cmp = icmp ne i32 %bf.clear, 0, !dbg !10114
  br i1 %cmp, label %land.lhs.true17, label %if.end23, !dbg !10115

land.lhs.true17:                                  ; preds = %land.lhs.true
  %21 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10116
  %num18 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %21, i32 0, i32 18, !dbg !10117
  %22 = bitcast i24* %num18 to i32*, !dbg !10117
  %bf.load19 = load i32, i32* %22, align 8, !dbg !10117
  %bf.clear20 = and i32 %bf.load19, 31, !dbg !10117
  %cmp21 = icmp ne i32 %bf.clear20, 16, !dbg !10118
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !10119

if.then22:                                        ; preds = %land.lhs.true17
  store i32 -22, i32* %retval, align 4, !dbg !10120
  br label %return, !dbg !10120

if.end23:                                         ; preds = %land.lhs.true17, %land.lhs.true, %do.end12
  br label %do.body24, !dbg !10121

do.body24:                                        ; preds = %if.end23
  br label %do.end25, !dbg !10122

do.end25:                                         ; preds = %do.body24
  %23 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10124
  %dev26 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %23, i32 0, i32 14, !dbg !10125
  %24 = load %struct.udc*, %struct.udc** %dev26, align 8, !dbg !10125
  store %struct.udc* %24, %struct.udc** %dev, align 8, !dbg !10126
  %25 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10127
  %driver = getelementptr inbounds %struct.udc, %struct.udc* %25, i32 0, i32 3, !dbg !10129
  %26 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver, align 8, !dbg !10129
  %tobool27 = icmp ne %struct.usb_gadget_driver* %26, null, !dbg !10127
  br i1 %tobool27, label %lor.lhs.false28, label %if.then30, !dbg !10130

lor.lhs.false28:                                  ; preds = %do.end25
  %27 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10131
  %gadget = getelementptr inbounds %struct.udc, %struct.udc* %27, i32 0, i32 0, !dbg !10132
  %speed = getelementptr inbounds %struct.usb_gadget, %struct.usb_gadget* %gadget, i32 0, i32 5, !dbg !10133
  %28 = load i32, i32* %speed, align 8, !dbg !10133
  %cmp29 = icmp eq i32 %28, 0, !dbg !10134
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !10135

if.then30:                                        ; preds = %lor.lhs.false28, %do.end25
  store i32 -108, i32* %retval, align 4, !dbg !10136
  br label %return, !dbg !10136

if.end31:                                         ; preds = %lor.lhs.false28
  %29 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10137
  %dma = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %29, i32 0, i32 3, !dbg !10139
  %30 = load i32*, i32** %dma, align 8, !dbg !10139
  %tobool32 = icmp ne i32* %30, null, !dbg !10137
  br i1 %tobool32, label %if.then33, label %if.end43, !dbg !10140

if.then33:                                        ; preds = %if.end31
  br label %do.body34, !dbg !10141

do.body34:                                        ; preds = %if.then33
  br label %do.end35, !dbg !10143

do.end35:                                         ; preds = %do.body34
  %31 = load %struct.udc*, %struct.udc** @udc, align 8, !dbg !10145
  %gadget36 = getelementptr inbounds %struct.udc, %struct.udc* %31, i32 0, i32 0, !dbg !10146
  %32 = load %struct.usb_request*, %struct.usb_request** %usbreq.addr, align 8, !dbg !10147
  %33 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10148
  %in = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %33, i32 0, i32 18, !dbg !10149
  %34 = bitcast i24* %in to i32*, !dbg !10149
  %bf.load37 = load i32, i32* %34, align 8, !dbg !10149
  %bf.lshr = lshr i32 %bf.load37, 19, !dbg !10149
  %bf.clear38 = and i32 %bf.lshr, 1, !dbg !10149
  %call39 = call i32 @usb_gadget_map_request(%struct.usb_gadget* %gadget36, %struct.usb_request* %32, i32 %bf.clear38) #11, !dbg !10150
  store i32 %call39, i32* %retval1, align 4, !dbg !10151
  %35 = load i32, i32* %retval1, align 4, !dbg !10152
  %tobool40 = icmp ne i32 %35, 0, !dbg !10152
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !10154

if.then41:                                        ; preds = %do.end35
  %36 = load i32, i32* %retval1, align 4, !dbg !10155
  store i32 %36, i32* %retval, align 4, !dbg !10156
  br label %return, !dbg !10156

if.end42:                                         ; preds = %do.end35
  br label %if.end43, !dbg !10157

if.end43:                                         ; preds = %if.end42, %if.end31
  br label %do.body44, !dbg !10158

do.body44:                                        ; preds = %if.end43
  br label %do.end45, !dbg !10159

do.end45:                                         ; preds = %do.body44
  br label %do.body46, !dbg !10161

do.body46:                                        ; preds = %do.end45
  br label %do.body47, !dbg !10162

do.body47:                                        ; preds = %do.body46
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10163, metadata !DIExpression()), !dbg !10165
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10166, metadata !DIExpression()), !dbg !10165
  %cmp48 = icmp eq i64* %__dummy, %__dummy2, !dbg !10165
  %conv = zext i1 %cmp48 to i32, !dbg !10165
  store i32 1, i32* %tmp49, align 4, !dbg !10165
  %37 = load i32, i32* %tmp49, align 4, !dbg !10165
  br label %do.body50, !dbg !10167

do.body50:                                        ; preds = %do.body47
  br label %do.body51, !dbg !10168

do.body51:                                        ; preds = %do.body50
  br label %do.body52, !dbg !10169

do.body52:                                        ; preds = %do.body51
  call void @llvm.dbg.declare(metadata i64* %__dummy53, metadata !10171, metadata !DIExpression()), !dbg !10174
  call void @llvm.dbg.declare(metadata i64* %__dummy254, metadata !10175, metadata !DIExpression()), !dbg !10174
  %cmp55 = icmp eq i64* %__dummy53, %__dummy254, !dbg !10174
  %conv56 = zext i1 %cmp55 to i32, !dbg !10174
  store i32 1, i32* %tmp57, align 4, !dbg !10174
  %38 = load i32, i32* %tmp57, align 4, !dbg !10174
  %call58 = call i64 @arch_local_irq_save() #11, !dbg !10176
  store i64 %call58, i64* %iflags, align 8, !dbg !10176
  br label %do.end59, !dbg !10176

do.end59:                                         ; preds = %do.body52
  br label %do.end60, !dbg !10169

do.end60:                                         ; preds = %do.end59
  br label %do.body61, !dbg !10168

do.body61:                                        ; preds = %do.end60
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !10177, !srcloc !10178
  br label %do.body62, !dbg !10177

do.body62:                                        ; preds = %do.body61
  %39 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10179
  %lock = getelementptr inbounds %struct.udc, %struct.udc* %39, i32 0, i32 1, !dbg !10179
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10180
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !10181
  %rlock.i = bitcast %union.anon.4* %41 to %struct.raw_spinlock*, !dbg !10181
  br label %do.end64, !dbg !10179

do.end64:                                         ; preds = %do.body62
  br label %do.end65, !dbg !10177

do.end65:                                         ; preds = %do.end64
  br label %do.end66, !dbg !10168

do.end66:                                         ; preds = %do.end65
  br label %do.end67, !dbg !10167

do.end67:                                         ; preds = %do.end66
  br label %do.end68, !dbg !10162

do.end68:                                         ; preds = %do.end67
  %42 = load %struct.usb_request*, %struct.usb_request** %usbreq.addr, align 8, !dbg !10182
  %actual = getelementptr inbounds %struct.usb_request, %struct.usb_request* %42, i32 0, i32 12, !dbg !10183
  store i32 0, i32* %actual, align 8, !dbg !10184
  %43 = load %struct.usb_request*, %struct.usb_request** %usbreq.addr, align 8, !dbg !10185
  %status = getelementptr inbounds %struct.usb_request, %struct.usb_request* %43, i32 0, i32 11, !dbg !10186
  store i32 -115, i32* %status, align 4, !dbg !10187
  %44 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10188
  %dma_done = getelementptr inbounds %struct.udc_request, %struct.udc_request* %44, i32 0, i32 1, !dbg !10189
  %bf.load69 = load i8, i8* %dma_done, align 8, !dbg !10190
  %bf.clear70 = and i8 %bf.load69, -3, !dbg !10190
  store i8 %bf.clear70, i8* %dma_done, align 8, !dbg !10190
  %45 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10191
  %queue71 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %45, i32 0, i32 15, !dbg !10193
  %call72 = call i32 @list_empty(%struct.list_head* %queue71) #11, !dbg !10194
  %tobool73 = icmp ne i32 %call72, 0, !dbg !10194
  br i1 %tobool73, label %if.then74, label %if.else209, !dbg !10195

if.then74:                                        ; preds = %do.end68
  %46 = load %struct.usb_request*, %struct.usb_request** %usbreq.addr, align 8, !dbg !10196
  %length = getelementptr inbounds %struct.usb_request, %struct.usb_request* %46, i32 0, i32 1, !dbg !10199
  %47 = load i32, i32* %length, align 8, !dbg !10199
  %cmp75 = icmp eq i32 %47, 0, !dbg !10200
  br i1 %cmp75, label %if.then77, label %if.end115, !dbg !10201

if.then77:                                        ; preds = %if.then74
  %48 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10202
  %49 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10204
  call void @complete_req(%struct.udc_ep* %48, %struct.udc_request* %49, i32 0) #11, !dbg !10205
  br label %do.body78, !dbg !10206

do.body78:                                        ; preds = %if.then77
  br label %do.end79, !dbg !10207

do.end79:                                         ; preds = %do.body78
  %50 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10209
  %set_cfg_not_acked = getelementptr inbounds %struct.udc, %struct.udc* %50, i32 0, i32 4, !dbg !10211
  %bf.load80 = load i8, i8* %set_cfg_not_acked, align 8, !dbg !10211
  %bf.lshr81 = lshr i8 %bf.load80, 2, !dbg !10211
  %bf.clear82 = and i8 %bf.lshr81, 1, !dbg !10211
  %bf.cast = zext i8 %bf.clear82 to i32, !dbg !10211
  %tobool83 = icmp ne i32 %bf.cast, 0, !dbg !10209
  br i1 %tobool83, label %if.then84, label %if.end91, !dbg !10212

if.then84:                                        ; preds = %do.end79
  %51 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10213
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %51, i32 0, i32 9, !dbg !10215
  %52 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !10215
  %ctl = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %52, i32 0, i32 1, !dbg !10216
  %53 = bitcast i32* %ctl to i8*, !dbg !10217
  %call85 = call i32 @readl(i8* %53) #11, !dbg !10218
  store i32 %call85, i32* %tmp, align 4, !dbg !10219
  %54 = load i32, i32* %tmp, align 4, !dbg !10220
  %or = or i32 %54, 8192, !dbg !10220
  store i32 %or, i32* %tmp, align 4, !dbg !10220
  %55 = load i32, i32* %tmp, align 4, !dbg !10221
  %56 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10222
  %regs86 = getelementptr inbounds %struct.udc, %struct.udc* %56, i32 0, i32 9, !dbg !10223
  %57 = load %struct.udc_regs*, %struct.udc_regs** %regs86, align 8, !dbg !10223
  %ctl87 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %57, i32 0, i32 1, !dbg !10224
  %58 = bitcast i32* %ctl87 to i8*, !dbg !10225
  call void @writel(i32 %55, i8* %58) #11, !dbg !10226
  %59 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10227
  %set_cfg_not_acked88 = getelementptr inbounds %struct.udc, %struct.udc* %59, i32 0, i32 4, !dbg !10228
  %bf.load89 = load i8, i8* %set_cfg_not_acked88, align 8, !dbg !10229
  %bf.clear90 = and i8 %bf.load89, -5, !dbg !10229
  store i8 %bf.clear90, i8* %set_cfg_not_acked88, align 8, !dbg !10229
  br label %if.end91, !dbg !10230

if.end91:                                         ; preds = %if.then84, %do.end79
  %60 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10231
  %waiting_zlp_ack_ep0in = getelementptr inbounds %struct.udc, %struct.udc* %60, i32 0, i32 4, !dbg !10233
  %bf.load92 = load i8, i8* %waiting_zlp_ack_ep0in, align 8, !dbg !10233
  %bf.lshr93 = lshr i8 %bf.load92, 1, !dbg !10233
  %bf.clear94 = and i8 %bf.lshr93, 1, !dbg !10233
  %bf.cast95 = zext i8 %bf.clear94 to i32, !dbg !10233
  %tobool96 = icmp ne i32 %bf.cast95, 0, !dbg !10231
  br i1 %tobool96, label %if.then97, label %if.end114, !dbg !10234

if.then97:                                        ; preds = %if.end91
  %61 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10235
  %ep98 = getelementptr inbounds %struct.udc, %struct.udc* %61, i32 0, i32 2, !dbg !10237
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep98, i64 0, i64 0, !dbg !10235
  %regs99 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx, i32 0, i32 1, !dbg !10238
  %62 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs99, align 8, !dbg !10238
  %ctl100 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %62, i32 0, i32 0, !dbg !10239
  %63 = bitcast i32* %ctl100 to i8*, !dbg !10240
  %call101 = call i32 @readl(i8* %63) #11, !dbg !10241
  store i32 %call101, i32* %tmp, align 4, !dbg !10242
  %64 = load i32, i32* %tmp, align 4, !dbg !10243
  %or102 = or i32 %64, 256, !dbg !10243
  store i32 %or102, i32* %tmp, align 4, !dbg !10243
  %65 = load i32, i32* %tmp, align 4, !dbg !10244
  %66 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10245
  %ep103 = getelementptr inbounds %struct.udc, %struct.udc* %66, i32 0, i32 2, !dbg !10246
  %arrayidx104 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep103, i64 0, i64 0, !dbg !10245
  %regs105 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx104, i32 0, i32 1, !dbg !10247
  %67 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs105, align 8, !dbg !10247
  %ctl106 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %67, i32 0, i32 0, !dbg !10248
  %68 = bitcast i32* %ctl106 to i8*, !dbg !10249
  call void @writel(i32 %65, i8* %68) #11, !dbg !10250
  %69 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10251
  %ep107 = getelementptr inbounds %struct.udc, %struct.udc* %69, i32 0, i32 2, !dbg !10252
  %arrayidx108 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep107, i64 0, i64 0, !dbg !10251
  %naking = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx108, i32 0, i32 13, !dbg !10253
  store i32 0, i32* %naking, align 4, !dbg !10254
  %70 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10255
  %ep109 = getelementptr inbounds %struct.udc, %struct.udc* %70, i32 0, i32 2, !dbg !10256
  %arrayidx110 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep109, i64 0, i64 0, !dbg !10255
  call void @UDC_QUEUE_CNAK(%struct.udc_ep* %arrayidx110, i32 0) #11, !dbg !10257
  %71 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10258
  %waiting_zlp_ack_ep0in111 = getelementptr inbounds %struct.udc, %struct.udc* %71, i32 0, i32 4, !dbg !10259
  %bf.load112 = load i8, i8* %waiting_zlp_ack_ep0in111, align 8, !dbg !10260
  %bf.clear113 = and i8 %bf.load112, -3, !dbg !10260
  store i8 %bf.clear113, i8* %waiting_zlp_ack_ep0in111, align 8, !dbg !10260
  br label %if.end114, !dbg !10261

if.end114:                                        ; preds = %if.then97, %if.end91
  br label %finished, !dbg !10262

if.end115:                                        ; preds = %if.then74
  %72 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10263
  %dma116 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %72, i32 0, i32 3, !dbg !10265
  %73 = load i32*, i32** %dma116, align 8, !dbg !10265
  %tobool117 = icmp ne i32* %73, null, !dbg !10263
  br i1 %tobool117, label %if.then118, label %if.else, !dbg !10266

if.then118:                                       ; preds = %if.end115
  %74 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10267
  %75 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10269
  %call119 = call i32 @prep_dma(%struct.udc_ep* %74, %struct.udc_request* %75, i32 2592) #11, !dbg !10270
  store i32 %call119, i32* %retval1, align 4, !dbg !10271
  %76 = load i32, i32* %retval1, align 4, !dbg !10272
  %cmp120 = icmp ne i32 %76, 0, !dbg !10274
  br i1 %cmp120, label %if.then122, label %if.end123, !dbg !10275

if.then122:                                       ; preds = %if.then118
  br label %finished, !dbg !10276

if.end123:                                        ; preds = %if.then118
  %77 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10277
  %in124 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %77, i32 0, i32 18, !dbg !10279
  %78 = bitcast i24* %in124 to i32*, !dbg !10279
  %bf.load125 = load i32, i32* %78, align 8, !dbg !10279
  %bf.lshr126 = lshr i32 %bf.load125, 19, !dbg !10279
  %bf.clear127 = and i32 %bf.lshr126, 1, !dbg !10279
  %tobool128 = icmp ne i32 %bf.clear127, 0, !dbg !10277
  br i1 %tobool128, label %if.then129, label %if.end133, !dbg !10280

if.then129:                                       ; preds = %if.end123
  %79 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10281
  %td_data = getelementptr inbounds %struct.udc_request, %struct.udc_request* %79, i32 0, i32 3, !dbg !10281
  %80 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data, align 8, !dbg !10281
  %status130 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %80, i32 0, i32 0, !dbg !10281
  %81 = load i32, i32* %status130, align 16, !dbg !10281
  %and = and i32 %81, 1073741823, !dbg !10281
  %82 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10283
  %td_data131 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %82, i32 0, i32 3, !dbg !10284
  %83 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data131, align 8, !dbg !10284
  %status132 = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %83, i32 0, i32 0, !dbg !10285
  store i32 %and, i32* %status132, align 16, !dbg !10286
  br label %if.end133, !dbg !10287

if.end133:                                        ; preds = %if.then129, %if.end123
  %84 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10288
  %in134 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %84, i32 0, i32 18, !dbg !10290
  %85 = bitcast i24* %in134 to i32*, !dbg !10290
  %bf.load135 = load i32, i32* %85, align 8, !dbg !10290
  %bf.lshr136 = lshr i32 %bf.load135, 19, !dbg !10290
  %bf.clear137 = and i32 %bf.lshr136, 1, !dbg !10290
  %tobool138 = icmp ne i32 %bf.clear137, 0, !dbg !10288
  br i1 %tobool138, label %if.end158, label %if.then139, !dbg !10291

if.then139:                                       ; preds = %if.end133
  %call140 = call i32 @timer_pending(%struct.timer_list* @udc_timer) #11, !dbg !10292
  %tobool141 = icmp ne i32 %call140, 0, !dbg !10292
  br i1 %tobool141, label %if.then142, label %if.end144, !dbg !10295

if.then142:                                       ; preds = %if.then139
  store i32 0, i32* @set_rde, align 4, !dbg !10296
  %86 = load volatile i64, i64* @jiffies, align 8, !dbg !10298
  %sub = sub i64 %86, 1, !dbg !10299
  %call143 = call i32 @mod_timer(%struct.timer_list* @udc_timer, i64 %sub) #11, !dbg !10300
  br label %if.end144, !dbg !10301

if.end144:                                        ; preds = %if.then142, %if.then139
  %87 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10302
  %regs145 = getelementptr inbounds %struct.udc, %struct.udc* %87, i32 0, i32 9, !dbg !10303
  %88 = load %struct.udc_regs*, %struct.udc_regs** %regs145, align 8, !dbg !10303
  %ctl146 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %88, i32 0, i32 1, !dbg !10304
  %89 = bitcast i32* %ctl146 to i8*, !dbg !10305
  %call147 = call i32 @readl(i8* %89) #11, !dbg !10306
  store i32 %call147, i32* %tmp, align 4, !dbg !10307
  %90 = load i32, i32* %tmp, align 4, !dbg !10308
  %and148 = and i32 %90, -5, !dbg !10308
  store i32 %and148, i32* %tmp, align 4, !dbg !10308
  %91 = load i32, i32* %tmp, align 4, !dbg !10309
  %92 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10310
  %regs149 = getelementptr inbounds %struct.udc, %struct.udc* %92, i32 0, i32 9, !dbg !10311
  %93 = load %struct.udc_regs*, %struct.udc_regs** %regs149, align 8, !dbg !10311
  %ctl150 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %93, i32 0, i32 1, !dbg !10312
  %94 = bitcast i32* %ctl150 to i8*, !dbg !10313
  call void @writel(i32 %91, i8* %94) #11, !dbg !10314
  store i8 1, i8* %open_rxfifo, align 1, !dbg !10315
  %95 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10316
  %bna_occurred = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %95, i32 0, i32 12, !dbg !10318
  %96 = load i32, i32* %bna_occurred, align 8, !dbg !10318
  %tobool151 = icmp ne i32 %96, 0, !dbg !10316
  br i1 %tobool151, label %if.then152, label %if.end157, !dbg !10319

if.then152:                                       ; preds = %if.end144
  br label %do.body153, !dbg !10320

do.body153:                                       ; preds = %if.then152
  br label %do.end154, !dbg !10322

do.end154:                                        ; preds = %do.body153
  %97 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10324
  %bna_dummy_req = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %97, i32 0, i32 11, !dbg !10325
  %98 = load %struct.udc_request*, %struct.udc_request** %bna_dummy_req, align 8, !dbg !10325
  %td_data155 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %98, i32 0, i32 3, !dbg !10326
  %99 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data155, align 8, !dbg !10326
  %100 = bitcast %struct.udc_data_dma* %99 to i8*, !dbg !10327
  %101 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10328
  %td_data156 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %101, i32 0, i32 3, !dbg !10329
  %102 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data156, align 8, !dbg !10329
  %103 = bitcast %struct.udc_data_dma* %102 to i8*, !dbg !10327
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %100, i8* align 16 %103, i64 16, i1 false), !dbg !10327
  br label %if.end157, !dbg !10330

if.end157:                                        ; preds = %do.end154, %if.end144
  br label %if.end158, !dbg !10331

if.end158:                                        ; preds = %if.end157, %if.end133
  %104 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10332
  %td_phys = getelementptr inbounds %struct.udc_request, %struct.udc_request* %104, i32 0, i32 2, !dbg !10333
  %105 = load i64, i64* %td_phys, align 8, !dbg !10333
  %conv159 = trunc i64 %105 to i32, !dbg !10332
  %106 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10334
  %regs160 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %106, i32 0, i32 1, !dbg !10335
  %107 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs160, align 8, !dbg !10335
  %desptr = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %107, i32 0, i32 5, !dbg !10336
  %108 = bitcast i32* %desptr to i8*, !dbg !10337
  call void @writel(i32 %conv159, i8* %108) #11, !dbg !10338
  %109 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10339
  %naking161 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %109, i32 0, i32 13, !dbg !10341
  %110 = load i32, i32* %naking161, align 4, !dbg !10341
  %tobool162 = icmp ne i32 %110, 0, !dbg !10339
  br i1 %tobool162, label %if.then163, label %if.end174, !dbg !10342

if.then163:                                       ; preds = %if.end158
  %111 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10343
  %regs164 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %111, i32 0, i32 1, !dbg !10345
  %112 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs164, align 8, !dbg !10345
  %ctl165 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %112, i32 0, i32 0, !dbg !10346
  %113 = bitcast i32* %ctl165 to i8*, !dbg !10347
  %call166 = call i32 @readl(i8* %113) #11, !dbg !10348
  store i32 %call166, i32* %tmp, align 4, !dbg !10349
  %114 = load i32, i32* %tmp, align 4, !dbg !10350
  %or167 = or i32 %114, 256, !dbg !10350
  store i32 %or167, i32* %tmp, align 4, !dbg !10350
  %115 = load i32, i32* %tmp, align 4, !dbg !10351
  %116 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10352
  %regs168 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %116, i32 0, i32 1, !dbg !10353
  %117 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs168, align 8, !dbg !10353
  %ctl169 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %117, i32 0, i32 0, !dbg !10354
  %118 = bitcast i32* %ctl169 to i8*, !dbg !10355
  call void @writel(i32 %115, i8* %118) #11, !dbg !10356
  %119 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10357
  %naking170 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %119, i32 0, i32 13, !dbg !10358
  store i32 0, i32* %naking170, align 4, !dbg !10359
  %120 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10360
  %121 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10361
  %num171 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %121, i32 0, i32 18, !dbg !10362
  %122 = bitcast i24* %num171 to i32*, !dbg !10362
  %bf.load172 = load i32, i32* %122, align 8, !dbg !10362
  %bf.clear173 = and i32 %bf.load172, 31, !dbg !10362
  call void @UDC_QUEUE_CNAK(%struct.udc_ep* %120, i32 %bf.clear173) #11, !dbg !10363
  br label %if.end174, !dbg !10364

if.end174:                                        ; preds = %if.then163, %if.end158
  %123 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10365
  %in175 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %123, i32 0, i32 18, !dbg !10367
  %124 = bitcast i24* %in175 to i32*, !dbg !10367
  %bf.load176 = load i32, i32* %124, align 8, !dbg !10367
  %bf.lshr177 = lshr i32 %bf.load176, 19, !dbg !10367
  %bf.clear178 = and i32 %bf.lshr177, 1, !dbg !10367
  %tobool179 = icmp ne i32 %bf.clear178, 0, !dbg !10365
  br i1 %tobool179, label %if.then180, label %if.end189, !dbg !10368

if.then180:                                       ; preds = %if.end174
  %125 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10369
  %regs181 = getelementptr inbounds %struct.udc, %struct.udc* %125, i32 0, i32 9, !dbg !10371
  %126 = load %struct.udc_regs*, %struct.udc_regs** %regs181, align 8, !dbg !10371
  %ep_irqmsk = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %126, i32 0, i32 6, !dbg !10372
  %127 = bitcast i32* %ep_irqmsk to i8*, !dbg !10373
  %call182 = call i32 @readl(i8* %127) #11, !dbg !10374
  store i32 %call182, i32* %tmp, align 4, !dbg !10375
  %128 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10376
  %num183 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %128, i32 0, i32 18, !dbg !10376
  %129 = bitcast i24* %num183 to i32*, !dbg !10376
  %bf.load184 = load i32, i32* %129, align 8, !dbg !10376
  %bf.clear185 = and i32 %bf.load184, 31, !dbg !10376
  %shl = shl i32 1, %bf.clear185, !dbg !10376
  %neg = xor i32 %shl, -1, !dbg !10376
  %130 = load i32, i32* %tmp, align 4, !dbg !10377
  %and186 = and i32 %130, %neg, !dbg !10377
  store i32 %and186, i32* %tmp, align 4, !dbg !10377
  %131 = load i32, i32* %tmp, align 4, !dbg !10378
  %132 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10379
  %regs187 = getelementptr inbounds %struct.udc, %struct.udc* %132, i32 0, i32 9, !dbg !10380
  %133 = load %struct.udc_regs*, %struct.udc_regs** %regs187, align 8, !dbg !10380
  %ep_irqmsk188 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %133, i32 0, i32 6, !dbg !10381
  %134 = bitcast i32* %ep_irqmsk188 to i8*, !dbg !10382
  call void @writel(i32 %131, i8* %134) #11, !dbg !10383
  br label %if.end189, !dbg !10384

if.end189:                                        ; preds = %if.then180, %if.end174
  br label %if.end208, !dbg !10385

if.else:                                          ; preds = %if.end115
  %135 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10386
  %in190 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %135, i32 0, i32 18, !dbg !10388
  %136 = bitcast i24* %in190 to i32*, !dbg !10388
  %bf.load191 = load i32, i32* %136, align 8, !dbg !10388
  %bf.lshr192 = lshr i32 %bf.load191, 19, !dbg !10388
  %bf.clear193 = and i32 %bf.lshr192, 1, !dbg !10388
  %tobool194 = icmp ne i32 %bf.clear193, 0, !dbg !10386
  br i1 %tobool194, label %if.then195, label %if.end207, !dbg !10389

if.then195:                                       ; preds = %if.else
  %137 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10390
  %regs196 = getelementptr inbounds %struct.udc, %struct.udc* %137, i32 0, i32 9, !dbg !10392
  %138 = load %struct.udc_regs*, %struct.udc_regs** %regs196, align 8, !dbg !10392
  %ep_irqmsk197 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %138, i32 0, i32 6, !dbg !10393
  %139 = bitcast i32* %ep_irqmsk197 to i8*, !dbg !10394
  %call198 = call i32 @readl(i8* %139) #11, !dbg !10395
  store i32 %call198, i32* %tmp, align 4, !dbg !10396
  %140 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10397
  %num199 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %140, i32 0, i32 18, !dbg !10397
  %141 = bitcast i24* %num199 to i32*, !dbg !10397
  %bf.load200 = load i32, i32* %141, align 8, !dbg !10397
  %bf.clear201 = and i32 %bf.load200, 31, !dbg !10397
  %shl202 = shl i32 1, %bf.clear201, !dbg !10397
  %neg203 = xor i32 %shl202, -1, !dbg !10397
  %142 = load i32, i32* %tmp, align 4, !dbg !10398
  %and204 = and i32 %142, %neg203, !dbg !10398
  store i32 %and204, i32* %tmp, align 4, !dbg !10398
  %143 = load i32, i32* %tmp, align 4, !dbg !10399
  %144 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10400
  %regs205 = getelementptr inbounds %struct.udc, %struct.udc* %144, i32 0, i32 9, !dbg !10401
  %145 = load %struct.udc_regs*, %struct.udc_regs** %regs205, align 8, !dbg !10401
  %ep_irqmsk206 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %145, i32 0, i32 6, !dbg !10402
  %146 = bitcast i32* %ep_irqmsk206 to i8*, !dbg !10403
  call void @writel(i32 %143, i8* %146) #11, !dbg !10404
  br label %if.end207, !dbg !10405

if.end207:                                        ; preds = %if.then195, %if.else
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.end189
  br label %if.end226, !dbg !10406

if.else209:                                       ; preds = %do.end68
  %147 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10407
  %dma210 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %147, i32 0, i32 3, !dbg !10409
  %148 = load i32*, i32** %dma210, align 8, !dbg !10409
  %tobool211 = icmp ne i32* %148, null, !dbg !10407
  br i1 %tobool211, label %if.then212, label %if.end225, !dbg !10410

if.then212:                                       ; preds = %if.else209
  %149 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10411
  %in213 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %149, i32 0, i32 18, !dbg !10414
  %150 = bitcast i24* %in213 to i32*, !dbg !10414
  %bf.load214 = load i32, i32* %150, align 8, !dbg !10414
  %bf.lshr215 = lshr i32 %bf.load214, 19, !dbg !10414
  %bf.clear216 = and i32 %bf.lshr215, 1, !dbg !10414
  %tobool217 = icmp ne i32 %bf.clear216, 0, !dbg !10411
  br i1 %tobool217, label %if.then218, label %if.end224, !dbg !10415

if.then218:                                       ; preds = %if.then212
  %151 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10416
  %152 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10418
  %call219 = call i32 @prep_dma(%struct.udc_ep* %151, %struct.udc_request* %152, i32 2592) #11, !dbg !10419
  store i32 %call219, i32* %retval1, align 4, !dbg !10420
  %153 = load i32, i32* %retval1, align 4, !dbg !10421
  %cmp220 = icmp ne i32 %153, 0, !dbg !10423
  br i1 %cmp220, label %if.then222, label %if.end223, !dbg !10424

if.then222:                                       ; preds = %if.then218
  br label %finished, !dbg !10425

if.end223:                                        ; preds = %if.then218
  br label %if.end224, !dbg !10426

if.end224:                                        ; preds = %if.end223, %if.then212
  br label %if.end225, !dbg !10427

if.end225:                                        ; preds = %if.end224, %if.else209
  br label %if.end226

if.end226:                                        ; preds = %if.end225, %if.end208
  br label %do.body227, !dbg !10428

do.body227:                                       ; preds = %if.end226
  br label %do.end228, !dbg !10429

do.end228:                                        ; preds = %do.body227
  %154 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10431
  %tobool229 = icmp ne %struct.udc_request* %154, null, !dbg !10431
  br i1 %tobool229, label %if.then230, label %if.end264, !dbg !10433

if.then230:                                       ; preds = %do.end228
  %155 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10434
  %queue231 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %155, i32 0, i32 5, !dbg !10436
  %156 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10437
  %queue232 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %156, i32 0, i32 15, !dbg !10438
  call void @list_add_tail(%struct.list_head* %queue231, %struct.list_head* %queue232) #11, !dbg !10439
  %157 = load i8, i8* %open_rxfifo, align 1, !dbg !10440
  %tobool233 = icmp ne i8 %157, 0, !dbg !10440
  br i1 %tobool233, label %if.then234, label %if.end247, !dbg !10442

if.then234:                                       ; preds = %if.then230
  %158 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10443
  %dma_going = getelementptr inbounds %struct.udc_request, %struct.udc_request* %158, i32 0, i32 1, !dbg !10445
  %bf.load235 = load i8, i8* %dma_going, align 8, !dbg !10446
  %bf.clear236 = and i8 %bf.load235, -2, !dbg !10446
  %bf.set = or i8 %bf.clear236, 1, !dbg !10446
  store i8 %bf.set, i8* %dma_going, align 8, !dbg !10446
  %159 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10447
  call void @udc_set_rde(%struct.udc* %159) #11, !dbg !10448
  %160 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10449
  %num237 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %160, i32 0, i32 18, !dbg !10451
  %161 = bitcast i24* %num237 to i32*, !dbg !10451
  %bf.load238 = load i32, i32* %161, align 8, !dbg !10451
  %bf.clear239 = and i32 %bf.load238, 31, !dbg !10451
  %cmp240 = icmp ne i32 %bf.clear239, 16, !dbg !10452
  br i1 %cmp240, label %if.then242, label %if.end246, !dbg !10453

if.then242:                                       ; preds = %if.then234
  %162 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10454
  %data_ep_queued = getelementptr inbounds %struct.udc, %struct.udc* %162, i32 0, i32 4, !dbg !10455
  %bf.load243 = load i8, i8* %data_ep_queued, align 8, !dbg !10456
  %bf.clear244 = and i8 %bf.load243, -17, !dbg !10456
  %bf.set245 = or i8 %bf.clear244, 16, !dbg !10456
  store i8 %bf.set245, i8* %data_ep_queued, align 8, !dbg !10456
  br label %if.end246, !dbg !10454

if.end246:                                        ; preds = %if.then242, %if.then234
  br label %if.end247, !dbg !10457

if.end247:                                        ; preds = %if.end246, %if.then230
  %163 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10458
  %in248 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %163, i32 0, i32 18, !dbg !10460
  %164 = bitcast i24* %in248 to i32*, !dbg !10460
  %bf.load249 = load i32, i32* %164, align 8, !dbg !10460
  %bf.lshr250 = lshr i32 %bf.load249, 19, !dbg !10460
  %bf.clear251 = and i32 %bf.lshr250, 1, !dbg !10460
  %tobool252 = icmp ne i32 %bf.clear251, 0, !dbg !10458
  br i1 %tobool252, label %if.end263, label %if.then253, !dbg !10461

if.then253:                                       ; preds = %if.end247
  %165 = load i8, i8* @use_dma, align 1, !dbg !10462
  %tobool254 = trunc i8 %165 to i1, !dbg !10462
  br i1 %tobool254, label %if.end262, label %land.lhs.true255, !dbg !10465

land.lhs.true255:                                 ; preds = %if.then253
  %166 = load i32, i32* @udc_rxfifo_pending, align 4, !dbg !10466
  %tobool256 = icmp ne i32 %166, 0, !dbg !10466
  br i1 %tobool256, label %if.then257, label %if.end262, !dbg !10467

if.then257:                                       ; preds = %land.lhs.true255
  %167 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10468
  %168 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10471
  %call258 = call i32 @udc_rxfifo_read(%struct.udc_ep* %167, %struct.udc_request* %168) #11, !dbg !10472
  %tobool259 = icmp ne i32 %call258, 0, !dbg !10472
  br i1 %tobool259, label %if.then260, label %if.end261, !dbg !10473

if.then260:                                       ; preds = %if.then257
  %169 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10474
  %170 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10476
  call void @complete_req(%struct.udc_ep* %169, %struct.udc_request* %170, i32 0) #11, !dbg !10477
  br label %if.end261, !dbg !10478

if.end261:                                        ; preds = %if.then260, %if.then257
  store i32 0, i32* @udc_rxfifo_pending, align 4, !dbg !10479
  br label %if.end262, !dbg !10480

if.end262:                                        ; preds = %if.end261, %land.lhs.true255, %if.then253
  br label %if.end263, !dbg !10481

if.end263:                                        ; preds = %if.end262, %if.end247
  br label %if.end264, !dbg !10482

if.end264:                                        ; preds = %if.end263, %do.end228
  br label %finished, !dbg !10431

finished:                                         ; preds = %if.end264, %if.then222, %if.then122, %if.end114
  call void @llvm.dbg.label(metadata !10483), !dbg !10484
  %171 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10485
  %lock265 = getelementptr inbounds %struct.udc, %struct.udc* %171, i32 0, i32 1, !dbg !10486
  %172 = load i64, i64* %iflags, align 8, !dbg !10487
  store %struct.spinlock* %lock265, %struct.spinlock** %lock.addr.i266, align 8
  store i64 %172, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !497, metadata !7746, metadata !DIExpression()) #5, !dbg !10488
  call void @llvm.dbg.declare(metadata !497, metadata !7750, metadata !DIExpression()) #5, !dbg !10488
  store i32 1, i32* %tmp.i, align 4, !dbg !10488
  %173 = load i32, i32* %tmp.i, align 4, !dbg !10488
  call void @llvm.dbg.declare(metadata !497, metadata !7751, metadata !DIExpression()) #5, !dbg !10489
  call void @llvm.dbg.declare(metadata !497, metadata !7757, metadata !DIExpression()) #5, !dbg !10489
  store i32 1, i32* %tmp8.i, align 4, !dbg !10489
  %174 = load i32, i32* %tmp8.i, align 4, !dbg !10489
  %175 = load i64, i64* %flags.addr.i, align 8, !dbg !10490
  call void @arch_local_irq_restore(i64 %175) #13, !dbg !10490
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !10491, !srcloc !7761
  %176 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i266, align 8, !dbg !10492
  %177 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %176, i32 0, i32 0, !dbg !10492
  %rlock.i267 = bitcast %union.anon.4* %177 to %struct.raw_spinlock*, !dbg !10492
  %178 = load i32, i32* %retval1, align 4, !dbg !10493
  store i32 %178, i32* %retval, align 4, !dbg !10494
  br label %return, !dbg !10494

return:                                           ; preds = %finished, %if.then41, %if.then30, %if.then22, %if.then
  %179 = load i32, i32* %retval, align 4, !dbg !10495
  ret i32 %179, !dbg !10495
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_dequeue(%struct.usb_ep* %usbep, %struct.usb_request* %usbreq) #0 !dbg !10496 {
entry:
  %lock.addr.i75 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i75, metadata !7577, metadata !DIExpression()), !dbg !10497
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7583, metadata !DIExpression()), !dbg !10499
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7585, metadata !DIExpression()), !dbg !10500
  %retval = alloca i32, align 4
  %usbep.addr = alloca %struct.usb_ep*, align 8
  %usbreq.addr = alloca %struct.usb_request*, align 8
  %ep = alloca %struct.udc_ep*, align 8
  %req = alloca %struct.udc_request*, align 8
  %halted = alloca i32, align 4
  %iflags = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.udc_ep*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp13 = alloca %struct.udc_request*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  %__dummy22 = alloca i64, align 8
  %__dummy223 = alloca i64, align 8
  %tmp26 = alloca i32, align 4
  %tmp53 = alloca i32, align 4
  %dma_sts = alloca i32, align 4
  store %struct.usb_ep* %usbep, %struct.usb_ep** %usbep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ep** %usbep.addr, metadata !10507, metadata !DIExpression()), !dbg !10508
  store %struct.usb_request* %usbreq, %struct.usb_request** %usbreq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_request** %usbreq.addr, metadata !10509, metadata !DIExpression()), !dbg !10510
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep, metadata !10511, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req, metadata !10513, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.declare(metadata i32* %halted, metadata !10515, metadata !DIExpression()), !dbg !10516
  call void @llvm.dbg.declare(metadata i64* %iflags, metadata !10517, metadata !DIExpression()), !dbg !10518
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10519, metadata !DIExpression()), !dbg !10521
  %0 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !10521
  %1 = bitcast %struct.usb_ep* %0 to i8*, !dbg !10521
  store i8* %1, i8** %__mptr, align 8, !dbg !10521
  br label %do.body, !dbg !10521

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10522

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10521
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10521
  %3 = bitcast i8* %add.ptr to %struct.udc_ep*, !dbg !10521
  store %struct.udc_ep* %3, %struct.udc_ep** %tmp, align 8, !dbg !10522
  %4 = load %struct.udc_ep*, %struct.udc_ep** %tmp, align 8, !dbg !10521
  store %struct.udc_ep* %4, %struct.udc_ep** %ep, align 8, !dbg !10524
  %5 = load %struct.usb_ep*, %struct.usb_ep** %usbep.addr, align 8, !dbg !10525
  %tobool = icmp ne %struct.usb_ep* %5, null, !dbg !10525
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10527

lor.lhs.false:                                    ; preds = %do.end
  %6 = load %struct.usb_request*, %struct.usb_request** %usbreq.addr, align 8, !dbg !10528
  %tobool1 = icmp ne %struct.usb_request* %6, null, !dbg !10528
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !10529

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %7 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10530
  %ep3 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %7, i32 0, i32 0, !dbg !10531
  %desc = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep3, i32 0, i32 9, !dbg !10532
  %8 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc, align 8, !dbg !10532
  %tobool4 = icmp ne %struct.usb_endpoint_descriptor* %8, null, !dbg !10530
  br i1 %tobool4, label %if.end, label %land.lhs.true, !dbg !10533

land.lhs.true:                                    ; preds = %lor.lhs.false2
  %9 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10534
  %num = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %9, i32 0, i32 18, !dbg !10535
  %10 = bitcast i24* %num to i32*, !dbg !10535
  %bf.load = load i32, i32* %10, align 8, !dbg !10535
  %bf.clear = and i32 %bf.load, 31, !dbg !10535
  %cmp = icmp ne i32 %bf.clear, 0, !dbg !10536
  br i1 %cmp, label %land.lhs.true5, label %if.end, !dbg !10537

land.lhs.true5:                                   ; preds = %land.lhs.true
  %11 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10538
  %num6 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %11, i32 0, i32 18, !dbg !10539
  %12 = bitcast i24* %num6 to i32*, !dbg !10539
  %bf.load7 = load i32, i32* %12, align 8, !dbg !10539
  %bf.clear8 = and i32 %bf.load7, 31, !dbg !10539
  %cmp9 = icmp ne i32 %bf.clear8, 16, !dbg !10540
  br i1 %cmp9, label %if.then, label %if.end, !dbg !10541

if.then:                                          ; preds = %land.lhs.true5, %lor.lhs.false, %do.end
  store i32 -22, i32* %retval, align 4, !dbg !10542
  br label %return, !dbg !10542

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true, %lor.lhs.false2
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !10543, metadata !DIExpression()), !dbg !10545
  %13 = load %struct.usb_request*, %struct.usb_request** %usbreq.addr, align 8, !dbg !10545
  %14 = bitcast %struct.usb_request* %13 to i8*, !dbg !10545
  store i8* %14, i8** %__mptr10, align 8, !dbg !10545
  br label %do.body11, !dbg !10545

do.body11:                                        ; preds = %if.end
  br label %do.end12, !dbg !10546

do.end12:                                         ; preds = %do.body11
  %15 = load i8*, i8** %__mptr10, align 8, !dbg !10545
  %add.ptr14 = getelementptr i8, i8* %15, i64 0, !dbg !10545
  %16 = bitcast i8* %add.ptr14 to %struct.udc_request*, !dbg !10545
  store %struct.udc_request* %16, %struct.udc_request** %tmp13, align 8, !dbg !10546
  %17 = load %struct.udc_request*, %struct.udc_request** %tmp13, align 8, !dbg !10545
  store %struct.udc_request* %17, %struct.udc_request** %req, align 8, !dbg !10548
  br label %do.body15, !dbg !10549

do.body15:                                        ; preds = %do.end12
  br label %do.body16, !dbg !10550

do.body16:                                        ; preds = %do.body15
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10551, metadata !DIExpression()), !dbg !10553
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10554, metadata !DIExpression()), !dbg !10553
  %cmp17 = icmp eq i64* %__dummy, %__dummy2, !dbg !10553
  %conv = zext i1 %cmp17 to i32, !dbg !10553
  store i32 1, i32* %tmp18, align 4, !dbg !10553
  %18 = load i32, i32* %tmp18, align 4, !dbg !10553
  br label %do.body19, !dbg !10555

do.body19:                                        ; preds = %do.body16
  br label %do.body20, !dbg !10556

do.body20:                                        ; preds = %do.body19
  br label %do.body21, !dbg !10557

do.body21:                                        ; preds = %do.body20
  call void @llvm.dbg.declare(metadata i64* %__dummy22, metadata !10559, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.declare(metadata i64* %__dummy223, metadata !10563, metadata !DIExpression()), !dbg !10562
  %cmp24 = icmp eq i64* %__dummy22, %__dummy223, !dbg !10562
  %conv25 = zext i1 %cmp24 to i32, !dbg !10562
  store i32 1, i32* %tmp26, align 4, !dbg !10562
  %19 = load i32, i32* %tmp26, align 4, !dbg !10562
  %call = call i64 @arch_local_irq_save() #11, !dbg !10564
  store i64 %call, i64* %iflags, align 8, !dbg !10564
  br label %do.end27, !dbg !10564

do.end27:                                         ; preds = %do.body21
  br label %do.end28, !dbg !10557

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !10556

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !10565, !srcloc !10566
  br label %do.body30, !dbg !10565

do.body30:                                        ; preds = %do.body29
  %20 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10567
  %dev = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %20, i32 0, i32 14, !dbg !10567
  %21 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10567
  %lock = getelementptr inbounds %struct.udc, %struct.udc* %21, i32 0, i32 1, !dbg !10567
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10568
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !10569
  %rlock.i = bitcast %union.anon.4* %23 to %struct.raw_spinlock*, !dbg !10569
  br label %do.end32, !dbg !10567

do.end32:                                         ; preds = %do.body30
  br label %do.end33, !dbg !10565

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !10556

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !10555

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !10550

do.end36:                                         ; preds = %do.end35
  %24 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10570
  %halted37 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %24, i32 0, i32 16, !dbg !10571
  %25 = load i32, i32* %halted37, align 8, !dbg !10571
  store i32 %25, i32* %halted, align 4, !dbg !10572
  %26 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10573
  %halted38 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %26, i32 0, i32 16, !dbg !10574
  store i32 1, i32* %halted38, align 8, !dbg !10575
  %27 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10576
  %queue = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %27, i32 0, i32 15, !dbg !10578
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queue, i32 0, i32 0, !dbg !10579
  %28 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10579
  %29 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10580
  %queue39 = getelementptr inbounds %struct.udc_request, %struct.udc_request* %29, i32 0, i32 5, !dbg !10581
  %cmp40 = icmp eq %struct.list_head* %28, %queue39, !dbg !10582
  br i1 %cmp40, label %if.then42, label %if.end71, !dbg !10583

if.then42:                                        ; preds = %do.end36
  %30 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10584
  %dma = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %30, i32 0, i32 3, !dbg !10587
  %31 = load i32*, i32** %dma, align 8, !dbg !10587
  %tobool43 = icmp ne i32* %31, null, !dbg !10584
  br i1 %tobool43, label %land.lhs.true44, label %if.end70, !dbg !10588

land.lhs.true44:                                  ; preds = %if.then42
  %32 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10589
  %dma_going = getelementptr inbounds %struct.udc_request, %struct.udc_request* %32, i32 0, i32 1, !dbg !10590
  %bf.load45 = load i8, i8* %dma_going, align 8, !dbg !10590
  %bf.clear46 = and i8 %bf.load45, 1, !dbg !10590
  %bf.cast = zext i8 %bf.clear46 to i32, !dbg !10590
  %tobool47 = icmp ne i32 %bf.cast, 0, !dbg !10589
  br i1 %tobool47, label %if.then48, label %if.end70, !dbg !10591

if.then48:                                        ; preds = %land.lhs.true44
  %33 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10592
  %in = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %33, i32 0, i32 18, !dbg !10595
  %34 = bitcast i24* %in to i32*, !dbg !10595
  %bf.load49 = load i32, i32* %34, align 8, !dbg !10595
  %bf.lshr = lshr i32 %bf.load49, 19, !dbg !10595
  %bf.clear50 = and i32 %bf.lshr, 1, !dbg !10595
  %tobool51 = icmp ne i32 %bf.clear50, 0, !dbg !10592
  br i1 %tobool51, label %if.then52, label %if.else, !dbg !10596

if.then52:                                        ; preds = %if.then48
  %35 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10597
  %cancel_transfer = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %35, i32 0, i32 17, !dbg !10598
  store i32 1, i32* %cancel_transfer, align 4, !dbg !10599
  br label %if.end69, !dbg !10597

if.else:                                          ; preds = %if.then48
  call void @llvm.dbg.declare(metadata i32* %tmp53, metadata !10600, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.declare(metadata i32* %dma_sts, metadata !10603, metadata !DIExpression()), !dbg !10604
  %36 = load %struct.udc*, %struct.udc** @udc, align 8, !dbg !10605
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %36, i32 0, i32 9, !dbg !10606
  %37 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !10606
  %ctl = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %37, i32 0, i32 1, !dbg !10607
  %38 = bitcast i32* %ctl to i8*, !dbg !10608
  %call54 = call i32 @readl(i8* %38) #11, !dbg !10609
  store i32 %call54, i32* %tmp53, align 4, !dbg !10610
  %39 = load i32, i32* %tmp53, align 4, !dbg !10611
  %and = and i32 %39, -5, !dbg !10612
  %40 = load %struct.udc*, %struct.udc** @udc, align 8, !dbg !10613
  %regs55 = getelementptr inbounds %struct.udc, %struct.udc* %40, i32 0, i32 9, !dbg !10614
  %41 = load %struct.udc_regs*, %struct.udc_regs** %regs55, align 8, !dbg !10614
  %ctl56 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %41, i32 0, i32 1, !dbg !10615
  %42 = bitcast i32* %ctl56 to i8*, !dbg !10616
  call void @writel(i32 %and, i8* %42) #11, !dbg !10617
  %43 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10618
  %td_data = getelementptr inbounds %struct.udc_request, %struct.udc_request* %43, i32 0, i32 3, !dbg !10618
  %44 = load %struct.udc_data_dma*, %struct.udc_data_dma** %td_data, align 8, !dbg !10618
  %status = getelementptr inbounds %struct.udc_data_dma, %struct.udc_data_dma* %44, i32 0, i32 0, !dbg !10618
  %45 = load i32, i32* %status, align 16, !dbg !10618
  %and57 = and i32 %45, -1073741824, !dbg !10618
  %shr = lshr i32 %and57, 30, !dbg !10618
  store i32 %shr, i32* %dma_sts, align 4, !dbg !10619
  %46 = load i32, i32* %dma_sts, align 4, !dbg !10620
  %cmp58 = icmp ne i32 %46, 0, !dbg !10622
  br i1 %cmp58, label %if.then60, label %if.else62, !dbg !10623

if.then60:                                        ; preds = %if.else
  %47 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10624
  %cancel_transfer61 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %47, i32 0, i32 17, !dbg !10625
  store i32 1, i32* %cancel_transfer61, align 4, !dbg !10626
  br label %if.end66, !dbg !10624

if.else62:                                        ; preds = %if.else
  %48 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10627
  %req63 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %48, i32 0, i32 8, !dbg !10629
  %49 = load %struct.udc_request*, %struct.udc_request** %req63, align 8, !dbg !10629
  call void @udc_init_bna_dummy(%struct.udc_request* %49) #11, !dbg !10630
  %50 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10631
  %bna_dummy_req = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %50, i32 0, i32 11, !dbg !10632
  %51 = load %struct.udc_request*, %struct.udc_request** %bna_dummy_req, align 8, !dbg !10632
  %td_phys = getelementptr inbounds %struct.udc_request, %struct.udc_request* %51, i32 0, i32 2, !dbg !10633
  %52 = load i64, i64* %td_phys, align 8, !dbg !10633
  %conv64 = trunc i64 %52 to i32, !dbg !10631
  %53 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10634
  %regs65 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %53, i32 0, i32 1, !dbg !10635
  %54 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs65, align 8, !dbg !10635
  %desptr = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %54, i32 0, i32 5, !dbg !10636
  %55 = bitcast i32* %desptr to i8*, !dbg !10637
  call void @writel(i32 %conv64, i8* %55) #11, !dbg !10638
  br label %if.end66

if.end66:                                         ; preds = %if.else62, %if.then60
  %56 = load i32, i32* %tmp53, align 4, !dbg !10639
  %57 = load %struct.udc*, %struct.udc** @udc, align 8, !dbg !10640
  %regs67 = getelementptr inbounds %struct.udc, %struct.udc* %57, i32 0, i32 9, !dbg !10641
  %58 = load %struct.udc_regs*, %struct.udc_regs** %regs67, align 8, !dbg !10641
  %ctl68 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %58, i32 0, i32 1, !dbg !10642
  %59 = bitcast i32* %ctl68 to i8*, !dbg !10643
  call void @writel(i32 %56, i8* %59) #11, !dbg !10644
  br label %if.end69

if.end69:                                         ; preds = %if.end66, %if.then52
  br label %if.end70, !dbg !10645

if.end70:                                         ; preds = %if.end69, %land.lhs.true44, %if.then42
  br label %if.end71, !dbg !10646

if.end71:                                         ; preds = %if.end70, %do.end36
  %60 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10647
  %61 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10648
  call void @complete_req(%struct.udc_ep* %60, %struct.udc_request* %61, i32 -104) #11, !dbg !10649
  %62 = load i32, i32* %halted, align 4, !dbg !10650
  %63 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10651
  %halted72 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %63, i32 0, i32 16, !dbg !10652
  store i32 %62, i32* %halted72, align 8, !dbg !10653
  %64 = load %struct.udc_ep*, %struct.udc_ep** %ep, align 8, !dbg !10654
  %dev73 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %64, i32 0, i32 14, !dbg !10655
  %65 = load %struct.udc*, %struct.udc** %dev73, align 8, !dbg !10655
  %lock74 = getelementptr inbounds %struct.udc, %struct.udc* %65, i32 0, i32 1, !dbg !10656
  %66 = load i64, i64* %iflags, align 8, !dbg !10657
  store %struct.spinlock* %lock74, %struct.spinlock** %lock.addr.i75, align 8
  store i64 %66, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !497, metadata !7746, metadata !DIExpression()) #5, !dbg !10658
  call void @llvm.dbg.declare(metadata !497, metadata !7750, metadata !DIExpression()) #5, !dbg !10658
  store i32 1, i32* %tmp.i, align 4, !dbg !10658
  %67 = load i32, i32* %tmp.i, align 4, !dbg !10658
  call void @llvm.dbg.declare(metadata !497, metadata !7751, metadata !DIExpression()) #5, !dbg !10659
  call void @llvm.dbg.declare(metadata !497, metadata !7757, metadata !DIExpression()) #5, !dbg !10659
  store i32 1, i32* %tmp8.i, align 4, !dbg !10659
  %68 = load i32, i32* %tmp8.i, align 4, !dbg !10659
  %69 = load i64, i64* %flags.addr.i, align 8, !dbg !10660
  call void @arch_local_irq_restore(i64 %69) #13, !dbg !10660
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !10661, !srcloc !7761
  %70 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i75, align 8, !dbg !10662
  %71 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %70, i32 0, i32 0, !dbg !10662
  %rlock.i76 = bitcast %union.anon.4* %71 to %struct.raw_spinlock*, !dbg !10662
  store i32 0, i32* %retval, align 4, !dbg !10663
  br label %return, !dbg !10663

return:                                           ; preds = %if.end71, %if.then
  %72 = load i32, i32* %retval, align 4, !dbg !10664
  ret i32 %72, !dbg !10664
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %epd) #0 !dbg !10665 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !10668, metadata !DIExpression()), !dbg !10669
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !10670
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 4, !dbg !10670
  %1 = load i16, i16* %wMaxPacketSize, align 1, !dbg !10670
  %conv = zext i16 %1 to i32, !dbg !10670
  %and = and i32 %conv, 2047, !dbg !10671
  ret i32 %and, !dbg !10672
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_set_txfifo_addr(%struct.udc_ep* %ep) #0 !dbg !10673 {
entry:
  %retval = alloca i32, align 4
  %ep.addr = alloca %struct.udc_ep*, align 8
  %dev = alloca %struct.udc*, align 8
  %tmp = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.udc_ep* %ep, %struct.udc_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep.addr, metadata !10676, metadata !DIExpression()), !dbg !10677
  call void @llvm.dbg.declare(metadata %struct.udc** %dev, metadata !10678, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10680, metadata !DIExpression()), !dbg !10681
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10682, metadata !DIExpression()), !dbg !10683
  %0 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !10684
  %tobool = icmp ne %struct.udc_ep* %0, null, !dbg !10684
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10686

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !10687
  %in = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %1, i32 0, i32 18, !dbg !10688
  %2 = bitcast i24* %in to i32*, !dbg !10688
  %bf.load = load i32, i32* %2, align 8, !dbg !10688
  %bf.lshr = lshr i32 %bf.load, 19, !dbg !10688
  %bf.clear = and i32 %bf.lshr, 1, !dbg !10688
  %tobool1 = icmp ne i32 %bf.clear, 0, !dbg !10689
  br i1 %tobool1, label %if.end, label %if.then, !dbg !10690

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !10691
  br label %return, !dbg !10691

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !10692
  %dev2 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %3, i32 0, i32 14, !dbg !10693
  %4 = load %struct.udc*, %struct.udc** %dev2, align 8, !dbg !10693
  store %struct.udc* %4, %struct.udc** %dev, align 8, !dbg !10694
  %5 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10695
  %txfifo = getelementptr inbounds %struct.udc, %struct.udc* %5, i32 0, i32 12, !dbg !10696
  %6 = load i32*, i32** %txfifo, align 8, !dbg !10696
  %7 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !10697
  %txfifo3 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %7, i32 0, i32 2, !dbg !10698
  store i32* %6, i32** %txfifo3, align 8, !dbg !10699
  store i32 0, i32* %i, align 4, !dbg !10700
  br label %for.cond, !dbg !10702

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !10703
  %9 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !10705
  %num = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %9, i32 0, i32 18, !dbg !10706
  %10 = bitcast i24* %num to i32*, !dbg !10706
  %bf.load4 = load i32, i32* %10, align 8, !dbg !10706
  %bf.clear5 = and i32 %bf.load4, 31, !dbg !10706
  %cmp = icmp slt i32 %8, %bf.clear5, !dbg !10707
  br i1 %cmp, label %for.body, label %for.end, !dbg !10708

for.body:                                         ; preds = %for.cond
  %11 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10709
  %ep6 = getelementptr inbounds %struct.udc, %struct.udc* %11, i32 0, i32 2, !dbg !10712
  %12 = load i32, i32* %i, align 4, !dbg !10713
  %idxprom = sext i32 %12 to i64, !dbg !10709
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep6, i64 0, i64 %idxprom, !dbg !10709
  %regs = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx, i32 0, i32 1, !dbg !10714
  %13 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs, align 8, !dbg !10714
  %tobool7 = icmp ne %struct.udc_ep_regs* %13, null, !dbg !10709
  br i1 %tobool7, label %if.then8, label %if.end14, !dbg !10715

if.then8:                                         ; preds = %for.body
  %14 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !10716
  %ep9 = getelementptr inbounds %struct.udc, %struct.udc* %14, i32 0, i32 2, !dbg !10718
  %15 = load i32, i32* %i, align 4, !dbg !10719
  %idxprom10 = sext i32 %15 to i64, !dbg !10716
  %arrayidx11 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep9, i64 0, i64 %idxprom10, !dbg !10716
  %regs12 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx11, i32 0, i32 1, !dbg !10720
  %16 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs12, align 8, !dbg !10720
  %bufin_framenum = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %16, i32 0, i32 2, !dbg !10721
  %17 = bitcast i32* %bufin_framenum to i8*, !dbg !10722
  %call = call i32 @readl(i8* %17) #11, !dbg !10723
  store i32 %call, i32* %tmp, align 4, !dbg !10724
  %18 = load i32, i32* %tmp, align 4, !dbg !10725
  %and = and i32 %18, 65535, !dbg !10725
  %shr = lshr i32 %and, 0, !dbg !10725
  store i32 %shr, i32* %tmp, align 4, !dbg !10726
  %19 = load i32, i32* %tmp, align 4, !dbg !10727
  %20 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !10728
  %txfifo13 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %20, i32 0, i32 2, !dbg !10729
  %21 = load i32*, i32** %txfifo13, align 8, !dbg !10730
  %idx.ext = zext i32 %19 to i64, !dbg !10730
  %add.ptr = getelementptr i32, i32* %21, i64 %idx.ext, !dbg !10730
  store i32* %add.ptr, i32** %txfifo13, align 8, !dbg !10730
  br label %if.end14, !dbg !10731

if.end14:                                         ; preds = %if.then8, %for.body
  br label %for.inc, !dbg !10732

for.inc:                                          ; preds = %if.end14
  %22 = load i32, i32* %i, align 4, !dbg !10733
  %inc = add i32 %22, 1, !dbg !10733
  store i32 %inc, i32* %i, align 4, !dbg !10733
  br label %for.cond, !dbg !10734, !llvm.loop !10735

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10737
  br label %return, !dbg !10737

return:                                           ; preds = %for.end, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !10738
  ret i32 %23, !dbg !10738
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.udc_request* @udc_alloc_bna_dummy(%struct.udc_ep* %ep) #0 !dbg !10739 {
entry:
  %ep.addr = alloca %struct.udc_ep*, align 8
  %req = alloca %struct.udc_request*, align 8
  %_req = alloca %struct.usb_request*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.udc_request*, align 8
  store %struct.udc_ep* %ep, %struct.udc_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep.addr, metadata !10742, metadata !DIExpression()), !dbg !10743
  call void @llvm.dbg.declare(metadata %struct.udc_request** %req, metadata !10744, metadata !DIExpression()), !dbg !10745
  store %struct.udc_request* null, %struct.udc_request** %req, align 8, !dbg !10745
  call void @llvm.dbg.declare(metadata %struct.usb_request** %_req, metadata !10746, metadata !DIExpression()), !dbg !10747
  store %struct.usb_request* null, %struct.usb_request** %_req, align 8, !dbg !10747
  %0 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !10748
  %ep1 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %0, i32 0, i32 0, !dbg !10749
  %call = call %struct.usb_request* @udc_alloc_request(%struct.usb_ep* %ep1, i32 2592) #11, !dbg !10750
  store %struct.usb_request* %call, %struct.usb_request** %_req, align 8, !dbg !10751
  %1 = load %struct.usb_request*, %struct.usb_request** %_req, align 8, !dbg !10752
  %tobool = icmp ne %struct.usb_request* %1, null, !dbg !10752
  br i1 %tobool, label %if.then, label %if.end, !dbg !10754

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10755, metadata !DIExpression()), !dbg !10758
  %2 = load %struct.usb_request*, %struct.usb_request** %_req, align 8, !dbg !10758
  %3 = bitcast %struct.usb_request* %2 to i8*, !dbg !10758
  store i8* %3, i8** %__mptr, align 8, !dbg !10758
  br label %do.body, !dbg !10758

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !10759

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !10758
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !10758
  %5 = bitcast i8* %add.ptr to %struct.udc_request*, !dbg !10758
  store %struct.udc_request* %5, %struct.udc_request** %tmp, align 8, !dbg !10759
  %6 = load %struct.udc_request*, %struct.udc_request** %tmp, align 8, !dbg !10758
  store %struct.udc_request* %6, %struct.udc_request** %req, align 8, !dbg !10761
  %7 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10762
  %8 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !10763
  %bna_dummy_req = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %8, i32 0, i32 11, !dbg !10764
  store %struct.udc_request* %7, %struct.udc_request** %bna_dummy_req, align 8, !dbg !10765
  %9 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10766
  call void @udc_init_bna_dummy(%struct.udc_request* %9) #11, !dbg !10767
  br label %if.end, !dbg !10768

if.end:                                           ; preds = %do.end, %entry
  %10 = load %struct.udc_request*, %struct.udc_request** %req, align 8, !dbg !10769
  ret %struct.udc_request* %10, !dbg !10770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !10771 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !10774, metadata !DIExpression()), !dbg !10778
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !10784, metadata !DIExpression()), !dbg !10785
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !10786, metadata !DIExpression()), !dbg !10787
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !10788, metadata !DIExpression()), !dbg !10789
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !10790, metadata !DIExpression()), !dbg !10794
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !10796, metadata !DIExpression()), !dbg !10800
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !10802, metadata !DIExpression()), !dbg !10806
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !10811, metadata !DIExpression()), !dbg !10812
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !10813, metadata !DIExpression()), !dbg !10814
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10815, metadata !DIExpression()), !dbg !10816
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !10817, metadata !DIExpression()), !dbg !10818
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !10819, metadata !DIExpression()), !dbg !10820
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10821, metadata !DIExpression()), !dbg !10822
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !10823, metadata !DIExpression()), !dbg !10824
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !10825, metadata !DIExpression()), !dbg !10826
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10827, metadata !DIExpression()), !dbg !10828
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10829, metadata !DIExpression()), !dbg !10830
  %0 = load i64, i64* %size.addr, align 8, !dbg !10831
  %1 = load i32, i32* %flags.addr, align 4, !dbg !10832
  %or = or i32 %1, 256, !dbg !10833
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !10834
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #5, !dbg !10835
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !10836

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !10837
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !10838
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10839

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !10840
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !10841
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !10842
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !10843
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !10820
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !10844
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !10845
  %10 = load i32, i32* %order.i.i, align 4, !dbg !10846
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !10847
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !10848
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !10849
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !10850
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !10850
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !10850
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !10850
  call void @llvm.assume(i1 %maskcond.i.i.i) #5, !dbg !10850
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !10851
  br label %kmalloc.exit, !dbg !10851

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !10852
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10853
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !10853
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !10855

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !10856
  br label %kmalloc_index.exit.i, !dbg !10856

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10857
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !10859
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !10860

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10861
  br label %kmalloc_index.exit.i, !dbg !10861

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10862
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !10864
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !10865

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10866
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !10867
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !10868

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !10869
  br label %kmalloc_index.exit.i, !dbg !10869

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10870
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !10872
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !10873

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10874
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !10875
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !10876

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !10877
  br label %kmalloc_index.exit.i, !dbg !10877

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10878
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !10880
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !10881

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10882
  br label %kmalloc_index.exit.i, !dbg !10882

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10883
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !10885
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !10886

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !10887
  br label %kmalloc_index.exit.i, !dbg !10887

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10888
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !10890
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !10891

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !10892
  br label %kmalloc_index.exit.i, !dbg !10892

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10893
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !10895
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !10896

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !10897
  br label %kmalloc_index.exit.i, !dbg !10897

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10898
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !10900
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !10901

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !10902
  br label %kmalloc_index.exit.i, !dbg !10902

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10903
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !10905
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !10906

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !10907
  br label %kmalloc_index.exit.i, !dbg !10907

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10908
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !10910
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !10911

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !10912
  br label %kmalloc_index.exit.i, !dbg !10912

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10913
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !10915
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !10916

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !10917
  br label %kmalloc_index.exit.i, !dbg !10917

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10918
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !10920
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !10921

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !10922
  br label %kmalloc_index.exit.i, !dbg !10922

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10923
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !10925
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !10926

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !10927
  br label %kmalloc_index.exit.i, !dbg !10927

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10928
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !10930
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !10931

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !10932
  br label %kmalloc_index.exit.i, !dbg !10932

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10933
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !10935
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !10936

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !10937
  br label %kmalloc_index.exit.i, !dbg !10937

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10938
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !10940
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !10941

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !10942
  br label %kmalloc_index.exit.i, !dbg !10942

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10943
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !10945
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !10946

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !10947
  br label %kmalloc_index.exit.i, !dbg !10947

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10948
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !10950
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !10951

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !10952
  br label %kmalloc_index.exit.i, !dbg !10952

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10953
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !10955
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !10956

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !10957
  br label %kmalloc_index.exit.i, !dbg !10957

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10958
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !10960
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !10961

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !10962
  br label %kmalloc_index.exit.i, !dbg !10962

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10963
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !10965
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !10966

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !10967
  br label %kmalloc_index.exit.i, !dbg !10967

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10968
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !10970
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !10971

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !10972
  br label %kmalloc_index.exit.i, !dbg !10972

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10973
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !10975
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !10976

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !10977
  br label %kmalloc_index.exit.i, !dbg !10977

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10978
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !10980
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !10981

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !10982
  br label %kmalloc_index.exit.i, !dbg !10982

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10983
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !10985
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !10986

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !10987
  br label %kmalloc_index.exit.i, !dbg !10987

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10988
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !10990
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !10991

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !10992
  br label %kmalloc_index.exit.i, !dbg !10992

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10993
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !10995
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !10996

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !10997
  br label %kmalloc_index.exit.i, !dbg !10997

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0), i32 382, i32 0, i64 12) #5, !dbg !10998, !srcloc !11001
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #5, !dbg !11002, !srcloc !11005
  unreachable, !dbg !11006

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !11007
  store i32 %45, i32* %index.i, align 4, !dbg !11008
  %46 = load i32, i32* %index.i, align 4, !dbg !11009
  %tobool.i = icmp ne i32 %46, 0, !dbg !11009
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !11011

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !11012
  br label %kmalloc.exit, !dbg !11012

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !11013
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11014
  %and.i.i = and i32 %48, 17, !dbg !11014
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !11014
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !11014
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !11014
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11014
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !11016

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !11017
  br label %kmalloc_type.exit.i, !dbg !11017

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11018
  %and2.i.i = and i32 %49, 1, !dbg !11019
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !11018
  %50 = zext i1 %tobool3.i.i to i64, !dbg !11018
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !11018
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !11020
  br label %kmalloc_type.exit.i, !dbg !11020

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !11021
  %idxprom.i = zext i32 %51 to i64, !dbg !11022
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !11022
  %52 = load i32, i32* %index.i, align 4, !dbg !11023
  %idxprom6.i = zext i32 %52 to i64, !dbg !11022
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !11022
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !11022
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !11024
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !11025
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11026
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11027
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !11028
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !11028
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !11028
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !11028
  call void @llvm.assume(i1 %maskcond.i.i) #5, !dbg !11028
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !10789
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11029
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !11030
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !11031
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11032
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !11033
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !11034
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !11035
  store i8* %62, i8** %retval.i, align 8, !dbg !11036
  br label %kmalloc.exit, !dbg !11036

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !11037
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !11038
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !11039
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !11039
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !11039
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !11039
  call void @llvm.assume(i1 %maskcond.i) #5, !dbg !11039
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !11040
  br label %kmalloc.exit, !dbg !11040

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !11041
  ret i8* %65, !dbg !11042
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !11043 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11047, metadata !DIExpression()), !dbg !11052
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11054, metadata !DIExpression()), !dbg !11055
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11056, metadata !DIExpression()), !dbg !11057
  %0 = load i64, i64* %size.addr, align 8, !dbg !11058
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !11060
  br i1 %1, label %if.then, label %if.end447, !dbg !11061

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !11062
  %tobool = icmp ne i64 %2, 0, !dbg !11062
  br i1 %tobool, label %if.end, label %if.then1, !dbg !11065

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !11066
  br label %return, !dbg !11066

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !11067
  %cmp = icmp ult i64 %3, 4096, !dbg !11069
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !11070

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11071
  br label %return, !dbg !11071

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub = sub i64 %4, 1, !dbg !11072
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !11072
  br i1 %5, label %cond.true, label %cond.false442, !dbg !11072

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub4 = sub i64 %6, 1, !dbg !11072
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !11072
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !11072

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub6 = sub i64 %8, 1, !dbg !11072
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !11072
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !11072

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !11072

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub9 = sub i64 %9, 1, !dbg !11072
  %and = and i64 %sub9, -9223372036854775808, !dbg !11072
  %tobool10 = icmp ne i64 %and, 0, !dbg !11072
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !11072

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !11072

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub13 = sub i64 %10, 1, !dbg !11072
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !11072
  %tobool15 = icmp ne i64 %and14, 0, !dbg !11072
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !11072

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !11072

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub18 = sub i64 %11, 1, !dbg !11072
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !11072
  %tobool20 = icmp ne i64 %and19, 0, !dbg !11072
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !11072

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !11072

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub23 = sub i64 %12, 1, !dbg !11072
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !11072
  %tobool25 = icmp ne i64 %and24, 0, !dbg !11072
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !11072

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !11072

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub28 = sub i64 %13, 1, !dbg !11072
  %and29 = and i64 %sub28, 576460752303423488, !dbg !11072
  %tobool30 = icmp ne i64 %and29, 0, !dbg !11072
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !11072

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !11072

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub33 = sub i64 %14, 1, !dbg !11072
  %and34 = and i64 %sub33, 288230376151711744, !dbg !11072
  %tobool35 = icmp ne i64 %and34, 0, !dbg !11072
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !11072

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !11072

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub38 = sub i64 %15, 1, !dbg !11072
  %and39 = and i64 %sub38, 144115188075855872, !dbg !11072
  %tobool40 = icmp ne i64 %and39, 0, !dbg !11072
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !11072

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !11072

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub43 = sub i64 %16, 1, !dbg !11072
  %and44 = and i64 %sub43, 72057594037927936, !dbg !11072
  %tobool45 = icmp ne i64 %and44, 0, !dbg !11072
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !11072

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !11072

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub48 = sub i64 %17, 1, !dbg !11072
  %and49 = and i64 %sub48, 36028797018963968, !dbg !11072
  %tobool50 = icmp ne i64 %and49, 0, !dbg !11072
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !11072

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !11072

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub53 = sub i64 %18, 1, !dbg !11072
  %and54 = and i64 %sub53, 18014398509481984, !dbg !11072
  %tobool55 = icmp ne i64 %and54, 0, !dbg !11072
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !11072

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !11072

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub58 = sub i64 %19, 1, !dbg !11072
  %and59 = and i64 %sub58, 9007199254740992, !dbg !11072
  %tobool60 = icmp ne i64 %and59, 0, !dbg !11072
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !11072

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !11072

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub63 = sub i64 %20, 1, !dbg !11072
  %and64 = and i64 %sub63, 4503599627370496, !dbg !11072
  %tobool65 = icmp ne i64 %and64, 0, !dbg !11072
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !11072

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !11072

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub68 = sub i64 %21, 1, !dbg !11072
  %and69 = and i64 %sub68, 2251799813685248, !dbg !11072
  %tobool70 = icmp ne i64 %and69, 0, !dbg !11072
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !11072

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !11072

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub73 = sub i64 %22, 1, !dbg !11072
  %and74 = and i64 %sub73, 1125899906842624, !dbg !11072
  %tobool75 = icmp ne i64 %and74, 0, !dbg !11072
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !11072

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !11072

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub78 = sub i64 %23, 1, !dbg !11072
  %and79 = and i64 %sub78, 562949953421312, !dbg !11072
  %tobool80 = icmp ne i64 %and79, 0, !dbg !11072
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !11072

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !11072

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub83 = sub i64 %24, 1, !dbg !11072
  %and84 = and i64 %sub83, 281474976710656, !dbg !11072
  %tobool85 = icmp ne i64 %and84, 0, !dbg !11072
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !11072

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !11072

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub88 = sub i64 %25, 1, !dbg !11072
  %and89 = and i64 %sub88, 140737488355328, !dbg !11072
  %tobool90 = icmp ne i64 %and89, 0, !dbg !11072
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !11072

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !11072

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub93 = sub i64 %26, 1, !dbg !11072
  %and94 = and i64 %sub93, 70368744177664, !dbg !11072
  %tobool95 = icmp ne i64 %and94, 0, !dbg !11072
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !11072

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !11072

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub98 = sub i64 %27, 1, !dbg !11072
  %and99 = and i64 %sub98, 35184372088832, !dbg !11072
  %tobool100 = icmp ne i64 %and99, 0, !dbg !11072
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !11072

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !11072

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub103 = sub i64 %28, 1, !dbg !11072
  %and104 = and i64 %sub103, 17592186044416, !dbg !11072
  %tobool105 = icmp ne i64 %and104, 0, !dbg !11072
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !11072

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !11072

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub108 = sub i64 %29, 1, !dbg !11072
  %and109 = and i64 %sub108, 8796093022208, !dbg !11072
  %tobool110 = icmp ne i64 %and109, 0, !dbg !11072
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !11072

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !11072

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub113 = sub i64 %30, 1, !dbg !11072
  %and114 = and i64 %sub113, 4398046511104, !dbg !11072
  %tobool115 = icmp ne i64 %and114, 0, !dbg !11072
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !11072

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !11072

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub118 = sub i64 %31, 1, !dbg !11072
  %and119 = and i64 %sub118, 2199023255552, !dbg !11072
  %tobool120 = icmp ne i64 %and119, 0, !dbg !11072
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !11072

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !11072

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub123 = sub i64 %32, 1, !dbg !11072
  %and124 = and i64 %sub123, 1099511627776, !dbg !11072
  %tobool125 = icmp ne i64 %and124, 0, !dbg !11072
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !11072

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !11072

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub128 = sub i64 %33, 1, !dbg !11072
  %and129 = and i64 %sub128, 549755813888, !dbg !11072
  %tobool130 = icmp ne i64 %and129, 0, !dbg !11072
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !11072

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !11072

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub133 = sub i64 %34, 1, !dbg !11072
  %and134 = and i64 %sub133, 274877906944, !dbg !11072
  %tobool135 = icmp ne i64 %and134, 0, !dbg !11072
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !11072

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !11072

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub138 = sub i64 %35, 1, !dbg !11072
  %and139 = and i64 %sub138, 137438953472, !dbg !11072
  %tobool140 = icmp ne i64 %and139, 0, !dbg !11072
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !11072

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !11072

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub143 = sub i64 %36, 1, !dbg !11072
  %and144 = and i64 %sub143, 68719476736, !dbg !11072
  %tobool145 = icmp ne i64 %and144, 0, !dbg !11072
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !11072

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !11072

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub148 = sub i64 %37, 1, !dbg !11072
  %and149 = and i64 %sub148, 34359738368, !dbg !11072
  %tobool150 = icmp ne i64 %and149, 0, !dbg !11072
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !11072

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !11072

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub153 = sub i64 %38, 1, !dbg !11072
  %and154 = and i64 %sub153, 17179869184, !dbg !11072
  %tobool155 = icmp ne i64 %and154, 0, !dbg !11072
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !11072

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !11072

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub158 = sub i64 %39, 1, !dbg !11072
  %and159 = and i64 %sub158, 8589934592, !dbg !11072
  %tobool160 = icmp ne i64 %and159, 0, !dbg !11072
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !11072

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !11072

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub163 = sub i64 %40, 1, !dbg !11072
  %and164 = and i64 %sub163, 4294967296, !dbg !11072
  %tobool165 = icmp ne i64 %and164, 0, !dbg !11072
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !11072

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !11072

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub168 = sub i64 %41, 1, !dbg !11072
  %and169 = and i64 %sub168, 2147483648, !dbg !11072
  %tobool170 = icmp ne i64 %and169, 0, !dbg !11072
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !11072

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !11072

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub173 = sub i64 %42, 1, !dbg !11072
  %and174 = and i64 %sub173, 1073741824, !dbg !11072
  %tobool175 = icmp ne i64 %and174, 0, !dbg !11072
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !11072

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !11072

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub178 = sub i64 %43, 1, !dbg !11072
  %and179 = and i64 %sub178, 536870912, !dbg !11072
  %tobool180 = icmp ne i64 %and179, 0, !dbg !11072
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !11072

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !11072

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub183 = sub i64 %44, 1, !dbg !11072
  %and184 = and i64 %sub183, 268435456, !dbg !11072
  %tobool185 = icmp ne i64 %and184, 0, !dbg !11072
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !11072

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !11072

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub188 = sub i64 %45, 1, !dbg !11072
  %and189 = and i64 %sub188, 134217728, !dbg !11072
  %tobool190 = icmp ne i64 %and189, 0, !dbg !11072
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !11072

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !11072

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub193 = sub i64 %46, 1, !dbg !11072
  %and194 = and i64 %sub193, 67108864, !dbg !11072
  %tobool195 = icmp ne i64 %and194, 0, !dbg !11072
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !11072

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !11072

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub198 = sub i64 %47, 1, !dbg !11072
  %and199 = and i64 %sub198, 33554432, !dbg !11072
  %tobool200 = icmp ne i64 %and199, 0, !dbg !11072
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !11072

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !11072

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub203 = sub i64 %48, 1, !dbg !11072
  %and204 = and i64 %sub203, 16777216, !dbg !11072
  %tobool205 = icmp ne i64 %and204, 0, !dbg !11072
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !11072

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !11072

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub208 = sub i64 %49, 1, !dbg !11072
  %and209 = and i64 %sub208, 8388608, !dbg !11072
  %tobool210 = icmp ne i64 %and209, 0, !dbg !11072
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !11072

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !11072

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub213 = sub i64 %50, 1, !dbg !11072
  %and214 = and i64 %sub213, 4194304, !dbg !11072
  %tobool215 = icmp ne i64 %and214, 0, !dbg !11072
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !11072

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !11072

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub218 = sub i64 %51, 1, !dbg !11072
  %and219 = and i64 %sub218, 2097152, !dbg !11072
  %tobool220 = icmp ne i64 %and219, 0, !dbg !11072
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !11072

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !11072

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub223 = sub i64 %52, 1, !dbg !11072
  %and224 = and i64 %sub223, 1048576, !dbg !11072
  %tobool225 = icmp ne i64 %and224, 0, !dbg !11072
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !11072

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !11072

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub228 = sub i64 %53, 1, !dbg !11072
  %and229 = and i64 %sub228, 524288, !dbg !11072
  %tobool230 = icmp ne i64 %and229, 0, !dbg !11072
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !11072

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !11072

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub233 = sub i64 %54, 1, !dbg !11072
  %and234 = and i64 %sub233, 262144, !dbg !11072
  %tobool235 = icmp ne i64 %and234, 0, !dbg !11072
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !11072

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !11072

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub238 = sub i64 %55, 1, !dbg !11072
  %and239 = and i64 %sub238, 131072, !dbg !11072
  %tobool240 = icmp ne i64 %and239, 0, !dbg !11072
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !11072

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !11072

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub243 = sub i64 %56, 1, !dbg !11072
  %and244 = and i64 %sub243, 65536, !dbg !11072
  %tobool245 = icmp ne i64 %and244, 0, !dbg !11072
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !11072

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !11072

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub248 = sub i64 %57, 1, !dbg !11072
  %and249 = and i64 %sub248, 32768, !dbg !11072
  %tobool250 = icmp ne i64 %and249, 0, !dbg !11072
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !11072

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !11072

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub253 = sub i64 %58, 1, !dbg !11072
  %and254 = and i64 %sub253, 16384, !dbg !11072
  %tobool255 = icmp ne i64 %and254, 0, !dbg !11072
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !11072

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !11072

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub258 = sub i64 %59, 1, !dbg !11072
  %and259 = and i64 %sub258, 8192, !dbg !11072
  %tobool260 = icmp ne i64 %and259, 0, !dbg !11072
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !11072

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !11072

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub263 = sub i64 %60, 1, !dbg !11072
  %and264 = and i64 %sub263, 4096, !dbg !11072
  %tobool265 = icmp ne i64 %and264, 0, !dbg !11072
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !11072

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !11072

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub268 = sub i64 %61, 1, !dbg !11072
  %and269 = and i64 %sub268, 2048, !dbg !11072
  %tobool270 = icmp ne i64 %and269, 0, !dbg !11072
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !11072

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !11072

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub273 = sub i64 %62, 1, !dbg !11072
  %and274 = and i64 %sub273, 1024, !dbg !11072
  %tobool275 = icmp ne i64 %and274, 0, !dbg !11072
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !11072

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !11072

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub278 = sub i64 %63, 1, !dbg !11072
  %and279 = and i64 %sub278, 512, !dbg !11072
  %tobool280 = icmp ne i64 %and279, 0, !dbg !11072
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !11072

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !11072

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub283 = sub i64 %64, 1, !dbg !11072
  %and284 = and i64 %sub283, 256, !dbg !11072
  %tobool285 = icmp ne i64 %and284, 0, !dbg !11072
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !11072

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !11072

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub288 = sub i64 %65, 1, !dbg !11072
  %and289 = and i64 %sub288, 128, !dbg !11072
  %tobool290 = icmp ne i64 %and289, 0, !dbg !11072
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !11072

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !11072

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub293 = sub i64 %66, 1, !dbg !11072
  %and294 = and i64 %sub293, 64, !dbg !11072
  %tobool295 = icmp ne i64 %and294, 0, !dbg !11072
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !11072

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !11072

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub298 = sub i64 %67, 1, !dbg !11072
  %and299 = and i64 %sub298, 32, !dbg !11072
  %tobool300 = icmp ne i64 %and299, 0, !dbg !11072
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !11072

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !11072

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub303 = sub i64 %68, 1, !dbg !11072
  %and304 = and i64 %sub303, 16, !dbg !11072
  %tobool305 = icmp ne i64 %and304, 0, !dbg !11072
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !11072

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !11072

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub308 = sub i64 %69, 1, !dbg !11072
  %and309 = and i64 %sub308, 8, !dbg !11072
  %tobool310 = icmp ne i64 %and309, 0, !dbg !11072
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !11072

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !11072

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub313 = sub i64 %70, 1, !dbg !11072
  %and314 = and i64 %sub313, 4, !dbg !11072
  %tobool315 = icmp ne i64 %and314, 0, !dbg !11072
  %71 = zext i1 %tobool315 to i64, !dbg !11072
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !11072
  br label %cond.end, !dbg !11072

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !11072
  br label %cond.end317, !dbg !11072

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !11072
  br label %cond.end319, !dbg !11072

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !11072
  br label %cond.end321, !dbg !11072

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !11072
  br label %cond.end323, !dbg !11072

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !11072
  br label %cond.end325, !dbg !11072

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !11072
  br label %cond.end327, !dbg !11072

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !11072
  br label %cond.end329, !dbg !11072

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !11072
  br label %cond.end331, !dbg !11072

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !11072
  br label %cond.end333, !dbg !11072

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !11072
  br label %cond.end335, !dbg !11072

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !11072
  br label %cond.end337, !dbg !11072

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !11072
  br label %cond.end339, !dbg !11072

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !11072
  br label %cond.end341, !dbg !11072

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !11072
  br label %cond.end343, !dbg !11072

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !11072
  br label %cond.end345, !dbg !11072

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !11072
  br label %cond.end347, !dbg !11072

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !11072
  br label %cond.end349, !dbg !11072

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !11072
  br label %cond.end351, !dbg !11072

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !11072
  br label %cond.end353, !dbg !11072

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !11072
  br label %cond.end355, !dbg !11072

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !11072
  br label %cond.end357, !dbg !11072

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !11072
  br label %cond.end359, !dbg !11072

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !11072
  br label %cond.end361, !dbg !11072

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !11072
  br label %cond.end363, !dbg !11072

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !11072
  br label %cond.end365, !dbg !11072

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !11072
  br label %cond.end367, !dbg !11072

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !11072
  br label %cond.end369, !dbg !11072

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !11072
  br label %cond.end371, !dbg !11072

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !11072
  br label %cond.end373, !dbg !11072

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !11072
  br label %cond.end375, !dbg !11072

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !11072
  br label %cond.end377, !dbg !11072

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !11072
  br label %cond.end379, !dbg !11072

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !11072
  br label %cond.end381, !dbg !11072

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !11072
  br label %cond.end383, !dbg !11072

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !11072
  br label %cond.end385, !dbg !11072

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !11072
  br label %cond.end387, !dbg !11072

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !11072
  br label %cond.end389, !dbg !11072

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !11072
  br label %cond.end391, !dbg !11072

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !11072
  br label %cond.end393, !dbg !11072

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !11072
  br label %cond.end395, !dbg !11072

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !11072
  br label %cond.end397, !dbg !11072

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !11072
  br label %cond.end399, !dbg !11072

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !11072
  br label %cond.end401, !dbg !11072

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !11072
  br label %cond.end403, !dbg !11072

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !11072
  br label %cond.end405, !dbg !11072

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !11072
  br label %cond.end407, !dbg !11072

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !11072
  br label %cond.end409, !dbg !11072

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !11072
  br label %cond.end411, !dbg !11072

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !11072
  br label %cond.end413, !dbg !11072

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !11072
  br label %cond.end415, !dbg !11072

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !11072
  br label %cond.end417, !dbg !11072

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !11072
  br label %cond.end419, !dbg !11072

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !11072
  br label %cond.end421, !dbg !11072

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !11072
  br label %cond.end423, !dbg !11072

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !11072
  br label %cond.end425, !dbg !11072

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !11072
  br label %cond.end427, !dbg !11072

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !11072
  br label %cond.end429, !dbg !11072

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !11072
  br label %cond.end431, !dbg !11072

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !11072
  br label %cond.end433, !dbg !11072

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !11072
  br label %cond.end435, !dbg !11072

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !11072
  br label %cond.end437, !dbg !11072

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !11072
  br label %cond.end440, !dbg !11072

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !11072

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !11072
  br label %cond.end444, !dbg !11072

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !11072
  %sub443 = sub i64 %72, 1, !dbg !11072
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !11072
  br label %cond.end444, !dbg !11072

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !11072
  %sub446 = sub i32 %cond445, 12, !dbg !11073
  %add = add i32 %sub446, 1, !dbg !11074
  store i32 %add, i32* %retval, align 4, !dbg !11075
  br label %return, !dbg !11075

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !11076
  %dec = add i64 %73, -1, !dbg !11076
  store i64 %dec, i64* %size.addr, align 8, !dbg !11076
  %74 = load i64, i64* %size.addr, align 8, !dbg !11077
  %shr = lshr i64 %74, 12, !dbg !11077
  store i64 %shr, i64* %size.addr, align 8, !dbg !11077
  %75 = load i64, i64* %size.addr, align 8, !dbg !11078
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11055
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !11079
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !11080
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #4, !dbg !11079, !srcloc !11081
  store i32 %78, i32* %bitpos.i, align 4, !dbg !11079
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !11082
  %add.i = add i32 %79, 1, !dbg !11083
  store i32 %add.i, i32* %retval, align 4, !dbg !11084
  br label %return, !dbg !11084

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !11085
  ret i32 %80, !dbg !11085
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !11086 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11047, metadata !DIExpression()), !dbg !11090
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11054, metadata !DIExpression()), !dbg !11092
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11093, metadata !DIExpression()), !dbg !11094
  %0 = load i64, i64* %n.addr, align 8, !dbg !11095
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11092
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !11096
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !11097
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #4, !dbg !11096, !srcloc !11081
  store i32 %3, i32* %bitpos.i, align 4, !dbg !11096
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !11098
  %add.i = add i32 %4, 1, !dbg !11099
  %sub = sub i32 %add.i, 1, !dbg !11100
  ret i32 %sub, !dbg !11101
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !11102 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !11106, metadata !DIExpression()), !dbg !11107
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !11108, metadata !DIExpression()), !dbg !11109
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11110, metadata !DIExpression()), !dbg !11111
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11112, metadata !DIExpression()), !dbg !11113
  %0 = load i8*, i8** %object.addr, align 8, !dbg !11114
  ret i8* %0, !dbg !11115
}

; Function Attrs: noredzone
declare dso_local i32 @usb_gadget_map_request(%struct.usb_gadget*, %struct.usb_request*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_schedule(%struct.tasklet_struct* %t) #0 !dbg !11116 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !11117, metadata !DIExpression()), !dbg !11118
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !11119
  %state = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 1, !dbg !11121
  %call = call zeroext i1 @test_and_set_bit(i64 0, i64* %state) #11, !dbg !11122
  br i1 %call, label %if.end, label %if.then, !dbg !11123

if.then:                                          ; preds = %entry
  %1 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !11124
  call void @__tasklet_schedule(%struct.tasklet_struct* %1) #11, !dbg !11125
  br label %if.end, !dbg !11125

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11126
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !11127 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11133, metadata !DIExpression()), !dbg !11135
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11137, metadata !DIExpression()), !dbg !11138
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !11139, metadata !DIExpression()), !dbg !11141
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !11142, metadata !DIExpression()), !dbg !11147
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11149, metadata !DIExpression()), !dbg !11150
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11151, metadata !DIExpression()), !dbg !11152
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11153, metadata !DIExpression()), !dbg !11154
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11155
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11156
  %div = sdiv i64 %1, 64, !dbg !11156
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11157
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11155
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11158
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11159
  %conv.i = trunc i64 %4 to i32, !dbg !11159
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !11160
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11161
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11161
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #13, !dbg !11161
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11162
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !11163
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !11141
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !11141
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #5, !dbg !11141, !srcloc !11164
  store i8 %11, i8* %c.i, align 1, !dbg !11141
  %12 = load i8, i8* %c.i, align 1, !dbg !11141
  %tobool.i = trunc i8 %12 to i1, !dbg !11141
  %frombool.i = zext i1 %tobool.i to i8, !dbg !11141
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !11141
  %13 = load i8, i8* %tmp.i, align 1, !dbg !11141
  %tobool1.i = trunc i8 %13 to i1, !dbg !11141
  ret i1 %tobool1.i, !dbg !11165
}

; Function Attrs: noredzone
declare dso_local void @__tasklet_schedule(%struct.tasklet_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !11166 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !11170, metadata !DIExpression()), !dbg !11171
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11172, metadata !DIExpression()), !dbg !11173
  ret i1 true, !dbg !11174
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !11175 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11179, metadata !DIExpression()), !dbg !11180
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11181, metadata !DIExpression()), !dbg !11182
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11183, metadata !DIExpression()), !dbg !11184
  ret void, !dbg !11185
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @udc_tasklet_disconnect(i64 %par) #0 !dbg !11186 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !7193, metadata !DIExpression()), !dbg !11187
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !4761, metadata !DIExpression()), !dbg !11189
  %lock.addr.i18 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i18, metadata !4768, metadata !DIExpression()), !dbg !11193
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7197, metadata !DIExpression()), !dbg !11195
  %par.addr = alloca i64, align 8
  %dev = alloca %struct.udc*, align 8
  %tmp = alloca i32, align 4
  store i64 %par, i64* %par.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %par.addr, metadata !11197, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.declare(metadata %struct.udc** %dev, metadata !11199, metadata !DIExpression()), !dbg !11200
  %0 = load %struct.udc*, %struct.udc** @udc, align 8, !dbg !11201
  store %struct.udc* %0, %struct.udc** %dev, align 8, !dbg !11200
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !11202, metadata !DIExpression()), !dbg !11203
  %1 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11204
  %lock = getelementptr inbounds %struct.udc, %struct.udc* %1, i32 0, i32 1, !dbg !11205
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !11206
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11207, !srcloc !7210
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11208
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !11208
  %rlock.i = bitcast %union.anon.4* %3 to %struct.raw_spinlock*, !dbg !11208
  %4 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11209
  %driver = getelementptr inbounds %struct.udc, %struct.udc* %4, i32 0, i32 3, !dbg !11210
  %5 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver, align 8, !dbg !11210
  %tobool = icmp ne %struct.usb_gadget_driver* %5, null, !dbg !11209
  br i1 %tobool, label %if.then, label %if.end, !dbg !11211

if.then:                                          ; preds = %entry
  %6 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11212
  %lock1 = getelementptr inbounds %struct.udc, %struct.udc* %6, i32 0, i32 1, !dbg !11213
  store %struct.spinlock* %lock1, %struct.spinlock** %lock.addr.i18, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11214, !srcloc !4826
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i18, align 8, !dbg !11215
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !11215
  %rlock.i19 = bitcast %union.anon.4* %8 to %struct.raw_spinlock*, !dbg !11215
  %9 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11216
  %driver2 = getelementptr inbounds %struct.udc, %struct.udc* %9, i32 0, i32 3, !dbg !11217
  %10 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver2, align 8, !dbg !11217
  %disconnect = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %10, i32 0, i32 5, !dbg !11218
  %11 = load void (%struct.usb_gadget*)*, void (%struct.usb_gadget*)** %disconnect, align 8, !dbg !11218
  %12 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11219
  %gadget = getelementptr inbounds %struct.udc, %struct.udc* %12, i32 0, i32 0, !dbg !11220
  call void %11(%struct.usb_gadget* %gadget) #11, !dbg !11216
  %13 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11221
  %lock3 = getelementptr inbounds %struct.udc, %struct.udc* %13, i32 0, i32 1, !dbg !11222
  store %struct.spinlock* %lock3, %struct.spinlock** %lock.addr.i20, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11223, !srcloc !4838
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !11224
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !11224
  %rlock.i21 = bitcast %union.anon.4* %15 to %struct.raw_spinlock*, !dbg !11224
  store i32 0, i32* %tmp, align 4, !dbg !11225
  br label %for.cond, !dbg !11227

for.cond:                                         ; preds = %for.inc, %if.then
  %16 = load i32, i32* %tmp, align 4, !dbg !11228
  %cmp = icmp ult i32 %16, 32, !dbg !11230
  br i1 %cmp, label %for.body, label %for.end, !dbg !11231

for.body:                                         ; preds = %for.cond
  %17 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11232
  %ep = getelementptr inbounds %struct.udc, %struct.udc* %17, i32 0, i32 2, !dbg !11233
  %18 = load i32, i32* %tmp, align 4, !dbg !11234
  %idxprom = zext i32 %18 to i64, !dbg !11232
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep, i64 0, i64 %idxprom, !dbg !11232
  call void @empty_req_queue(%struct.udc_ep* %arrayidx) #11, !dbg !11235
  br label %for.inc, !dbg !11235

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %tmp, align 4, !dbg !11236
  %inc = add i32 %19, 1, !dbg !11236
  store i32 %inc, i32* %tmp, align 4, !dbg !11236
  br label %for.cond, !dbg !11237, !llvm.loop !11238

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !11240

if.end:                                           ; preds = %for.end, %entry
  %20 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11241
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %20, i32 0, i32 9, !dbg !11242
  %21 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !11242
  %22 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11243
  %ep4 = getelementptr inbounds %struct.udc, %struct.udc* %22, i32 0, i32 2, !dbg !11244
  %arrayidx5 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep4, i64 0, i64 0, !dbg !11243
  call void @ep_init(%struct.udc_regs* %21, %struct.udc_ep* %arrayidx5) #11, !dbg !11245
  %23 = load i32, i32* @soft_reset_occured, align 4, !dbg !11246
  %tobool6 = icmp ne i32 %23, 0, !dbg !11246
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !11248

if.then7:                                         ; preds = %if.end
  %24 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11249
  call void @udc_soft_reset(%struct.udc* %24) #11, !dbg !11251
  %25 = load i32, i32* @soft_reset_occured, align 4, !dbg !11252
  %inc8 = add i32 %25, 1, !dbg !11252
  store i32 %inc8, i32* @soft_reset_occured, align 4, !dbg !11252
  br label %if.end9, !dbg !11253

if.end9:                                          ; preds = %if.then7, %if.end
  %26 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11254
  %call = call i32 @udc_enable_dev_setup_interrupts(%struct.udc* %26) #11, !dbg !11255
  %27 = load i8, i8* @use_fullspeed, align 1, !dbg !11256
  %tobool10 = trunc i8 %27 to i1, !dbg !11256
  br i1 %tobool10, label %if.then11, label %if.end16, !dbg !11258

if.then11:                                        ; preds = %if.end9
  %28 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11259
  %regs12 = getelementptr inbounds %struct.udc, %struct.udc* %28, i32 0, i32 9, !dbg !11261
  %29 = load %struct.udc_regs*, %struct.udc_regs** %regs12, align 8, !dbg !11261
  %cfg = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %29, i32 0, i32 0, !dbg !11262
  %30 = bitcast i32* %cfg to i8*, !dbg !11263
  %call13 = call i32 @readl(i8* %30) #11, !dbg !11264
  store i32 %call13, i32* %tmp, align 4, !dbg !11265
  %31 = load i32, i32* %tmp, align 4, !dbg !11266
  %and = and i32 %31, -4, !dbg !11266
  %or = or i32 %and, 1, !dbg !11266
  store i32 %or, i32* %tmp, align 4, !dbg !11267
  %32 = load i32, i32* %tmp, align 4, !dbg !11268
  %33 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11269
  %regs14 = getelementptr inbounds %struct.udc, %struct.udc* %33, i32 0, i32 9, !dbg !11270
  %34 = load %struct.udc_regs*, %struct.udc_regs** %regs14, align 8, !dbg !11270
  %cfg15 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %34, i32 0, i32 0, !dbg !11271
  %35 = bitcast i32* %cfg15 to i8*, !dbg !11272
  call void @writel(i32 %32, i8* %35) #11, !dbg !11273
  br label %if.end16, !dbg !11274

if.end16:                                         ; preds = %if.then11, %if.end9
  %36 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11275
  %lock17 = getelementptr inbounds %struct.udc, %struct.udc* %36, i32 0, i32 1, !dbg !11276
  store %struct.spinlock* %lock17, %struct.spinlock** %lock.addr.i22, align 8
  call void @arch_local_irq_enable() #13, !dbg !11277
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11278, !srcloc !7271
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !11279
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !11279
  %rlock.i23 = bitcast %union.anon.4* %38 to %struct.raw_spinlock*, !dbg !11279
  ret void, !dbg !11280
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !11281 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11282, metadata !DIExpression()), !dbg !11284
  %0 = load i64, i64* %__edi, align 8, !dbg !11284
  store i64 %0, i64* %__edi, align 8, !dbg !11284
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11285, metadata !DIExpression()), !dbg !11284
  %1 = load i64, i64* %__esi, align 8, !dbg !11284
  store i64 %1, i64* %__esi, align 8, !dbg !11284
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11286, metadata !DIExpression()), !dbg !11284
  %2 = load i64, i64* %__edx, align 8, !dbg !11284
  store i64 %2, i64* %__edx, align 8, !dbg !11284
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11287, metadata !DIExpression()), !dbg !11284
  %3 = load i64, i64* %__ecx, align 8, !dbg !11284
  store i64 %3, i64* %__ecx, align 8, !dbg !11284
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11288, metadata !DIExpression()), !dbg !11284
  %4 = load i64, i64* %__eax, align 8, !dbg !11284
  store i64 %4, i64* %__eax, align 8, !dbg !11284
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !11284
  %6 = call i64 @llvm.read_register.i64(metadata !4651), !dbg !11284
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #5, !dbg !11284, !srcloc !11289
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11284
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11284
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11284
  call void @llvm.write_register.i64(metadata !4651, i64 %asmresult1), !dbg !11284
  ret void, !dbg !11290
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_get_frame(%struct.usb_gadget* %gadget) #0 !dbg !11291 {
entry:
  %gadget.addr = alloca %struct.usb_gadget*, align 8
  store %struct.usb_gadget* %gadget, %struct.usb_gadget** %gadget.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget** %gadget.addr, metadata !11292, metadata !DIExpression()), !dbg !11293
  ret i32 -95, !dbg !11294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_wakeup(%struct.usb_gadget* %gadget) #0 !dbg !11295 {
entry:
  %retval = alloca i32, align 4
  %gadget.addr = alloca %struct.usb_gadget*, align 8
  %dev = alloca %struct.udc*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.udc*, align 8
  store %struct.usb_gadget* %gadget, %struct.usb_gadget** %gadget.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget** %gadget.addr, metadata !11296, metadata !DIExpression()), !dbg !11297
  call void @llvm.dbg.declare(metadata %struct.udc** %dev, metadata !11298, metadata !DIExpression()), !dbg !11299
  %0 = load %struct.usb_gadget*, %struct.usb_gadget** %gadget.addr, align 8, !dbg !11300
  %tobool = icmp ne %struct.usb_gadget* %0, null, !dbg !11300
  br i1 %tobool, label %if.end, label %if.then, !dbg !11302

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11303
  br label %return, !dbg !11303

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11304, metadata !DIExpression()), !dbg !11306
  %1 = load %struct.usb_gadget*, %struct.usb_gadget** %gadget.addr, align 8, !dbg !11306
  %2 = bitcast %struct.usb_gadget* %1 to i8*, !dbg !11306
  store i8* %2, i8** %__mptr, align 8, !dbg !11306
  br label %do.body, !dbg !11306

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !11307

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !11306
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !11306
  %4 = bitcast i8* %add.ptr to %struct.udc*, !dbg !11306
  store %struct.udc* %4, %struct.udc** %tmp, align 8, !dbg !11307
  %5 = load %struct.udc*, %struct.udc** %tmp, align 8, !dbg !11306
  store %struct.udc* %5, %struct.udc** %dev, align 8, !dbg !11309
  %6 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11310
  %call = call i32 @udc_remote_wakeup(%struct.udc* %6) #11, !dbg !11311
  store i32 0, i32* %retval, align 4, !dbg !11312
  br label %return, !dbg !11312

return:                                           ; preds = %do.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !11313
  ret i32 %7, !dbg !11313
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @amd5536_udc_start(%struct.usb_gadget* %g, %struct.usb_gadget_driver* %driver) #0 !dbg !11314 {
entry:
  %g.addr = alloca %struct.usb_gadget*, align 8
  %driver.addr = alloca %struct.usb_gadget_driver*, align 8
  %dev = alloca %struct.udc*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.udc*, align 8
  %tmp1 = alloca i32, align 4
  store %struct.usb_gadget* %g, %struct.usb_gadget** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget** %g.addr, metadata !11315, metadata !DIExpression()), !dbg !11316
  store %struct.usb_gadget_driver* %driver, %struct.usb_gadget_driver** %driver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget_driver** %driver.addr, metadata !11317, metadata !DIExpression()), !dbg !11318
  call void @llvm.dbg.declare(metadata %struct.udc** %dev, metadata !11319, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11321, metadata !DIExpression()), !dbg !11323
  %0 = load %struct.usb_gadget*, %struct.usb_gadget** %g.addr, align 8, !dbg !11323
  %1 = bitcast %struct.usb_gadget* %0 to i8*, !dbg !11323
  store i8* %1, i8** %__mptr, align 8, !dbg !11323
  br label %do.body, !dbg !11323

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11324

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !11323
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !11323
  %3 = bitcast i8* %add.ptr to %struct.udc*, !dbg !11323
  store %struct.udc* %3, %struct.udc** %tmp, align 8, !dbg !11324
  %4 = load %struct.udc*, %struct.udc** %tmp, align 8, !dbg !11323
  store %struct.udc* %4, %struct.udc** %dev, align 8, !dbg !11320
  call void @llvm.dbg.declare(metadata i32* %tmp1, metadata !11326, metadata !DIExpression()), !dbg !11327
  %5 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver.addr, align 8, !dbg !11328
  %driver2 = getelementptr inbounds %struct.usb_gadget_driver, %struct.usb_gadget_driver* %5, i32 0, i32 9, !dbg !11329
  %bus = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver2, i32 0, i32 1, !dbg !11330
  store %struct.bus_type* null, %struct.bus_type** %bus, align 8, !dbg !11331
  %6 = load %struct.usb_gadget_driver*, %struct.usb_gadget_driver** %driver.addr, align 8, !dbg !11332
  %7 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11333
  %driver3 = getelementptr inbounds %struct.udc, %struct.udc* %7, i32 0, i32 3, !dbg !11334
  store %struct.usb_gadget_driver* %6, %struct.usb_gadget_driver** %driver3, align 8, !dbg !11335
  %8 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11336
  %ep = getelementptr inbounds %struct.udc, %struct.udc* %8, i32 0, i32 2, !dbg !11337
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep, i64 0, i64 0, !dbg !11336
  %ep4 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx, i32 0, i32 0, !dbg !11338
  %driver_data = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep4, i32 0, i32 0, !dbg !11339
  %9 = load i8*, i8** %driver_data, align 8, !dbg !11339
  %10 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11340
  %ep5 = getelementptr inbounds %struct.udc, %struct.udc* %10, i32 0, i32 2, !dbg !11341
  %arrayidx6 = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep5, i64 0, i64 16, !dbg !11340
  %ep7 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %arrayidx6, i32 0, i32 0, !dbg !11342
  %driver_data8 = getelementptr inbounds %struct.usb_ep, %struct.usb_ep* %ep7, i32 0, i32 0, !dbg !11343
  store i8* %9, i8** %driver_data8, align 8, !dbg !11344
  %11 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11345
  %call = call i32 @setup_ep0(%struct.udc* %11) #11, !dbg !11346
  %12 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11347
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %12, i32 0, i32 9, !dbg !11348
  %13 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !11348
  %ctl = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %13, i32 0, i32 1, !dbg !11349
  %14 = bitcast i32* %ctl to i8*, !dbg !11350
  %call9 = call i32 @readl(i8* %14) #11, !dbg !11351
  store i32 %call9, i32* %tmp1, align 4, !dbg !11352
  %15 = load i32, i32* %tmp1, align 4, !dbg !11353
  %and = and i32 %15, -1025, !dbg !11354
  store i32 %and, i32* %tmp1, align 4, !dbg !11355
  %16 = load i32, i32* %tmp1, align 4, !dbg !11356
  %17 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11357
  %regs10 = getelementptr inbounds %struct.udc, %struct.udc* %17, i32 0, i32 9, !dbg !11358
  %18 = load %struct.udc_regs*, %struct.udc_regs** %regs10, align 8, !dbg !11358
  %ctl11 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %18, i32 0, i32 1, !dbg !11359
  %19 = bitcast i32* %ctl11 to i8*, !dbg !11360
  call void @writel(i32 %16, i8* %19) #11, !dbg !11361
  %20 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11362
  call void @usb_connect(%struct.udc* %20) #11, !dbg !11363
  ret i32 0, !dbg !11364
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @amd5536_udc_stop(%struct.usb_gadget* %g) #0 !dbg !11365 {
entry:
  %lock.addr.i28 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i28, metadata !7577, metadata !DIExpression()), !dbg !11366
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7583, metadata !DIExpression()), !dbg !11368
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7585, metadata !DIExpression()), !dbg !11369
  %g.addr = alloca %struct.usb_gadget*, align 8
  %dev = alloca %struct.udc*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.udc*, align 8
  %flags = alloca i64, align 8
  %tmp1 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.usb_gadget* %g, %struct.usb_gadget** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget** %g.addr, metadata !11376, metadata !DIExpression()), !dbg !11377
  call void @llvm.dbg.declare(metadata %struct.udc** %dev, metadata !11378, metadata !DIExpression()), !dbg !11379
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11380, metadata !DIExpression()), !dbg !11382
  %0 = load %struct.usb_gadget*, %struct.usb_gadget** %g.addr, align 8, !dbg !11382
  %1 = bitcast %struct.usb_gadget* %0 to i8*, !dbg !11382
  store i8* %1, i8** %__mptr, align 8, !dbg !11382
  br label %do.body, !dbg !11382

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11383

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !11382
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !11382
  %3 = bitcast i8* %add.ptr to %struct.udc*, !dbg !11382
  store %struct.udc* %3, %struct.udc** %tmp, align 8, !dbg !11383
  %4 = load %struct.udc*, %struct.udc** %tmp, align 8, !dbg !11382
  store %struct.udc* %4, %struct.udc** %dev, align 8, !dbg !11379
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11385, metadata !DIExpression()), !dbg !11386
  call void @llvm.dbg.declare(metadata i32* %tmp1, metadata !11387, metadata !DIExpression()), !dbg !11388
  br label %do.body2, !dbg !11389

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !11390

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11391, metadata !DIExpression()), !dbg !11393
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11394, metadata !DIExpression()), !dbg !11393
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11393
  %conv = zext i1 %cmp to i32, !dbg !11393
  store i32 1, i32* %tmp4, align 4, !dbg !11393
  %5 = load i32, i32* %tmp4, align 4, !dbg !11393
  br label %do.body5, !dbg !11395

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !11396

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !11397

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !11399, metadata !DIExpression()), !dbg !11402
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !11403, metadata !DIExpression()), !dbg !11402
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !11402
  %conv11 = zext i1 %cmp10 to i32, !dbg !11402
  store i32 1, i32* %tmp12, align 4, !dbg !11402
  %6 = load i32, i32* %tmp12, align 4, !dbg !11402
  %call = call i64 @arch_local_irq_save() #11, !dbg !11404
  store i64 %call, i64* %flags, align 8, !dbg !11404
  br label %do.end13, !dbg !11404

do.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !11397

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !11396

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11405, !srcloc !11406
  br label %do.body16, !dbg !11405

do.body16:                                        ; preds = %do.body15
  %7 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11407
  %lock = getelementptr inbounds %struct.udc, %struct.udc* %7, i32 0, i32 1, !dbg !11407
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11408
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !11409
  %rlock.i = bitcast %union.anon.4* %9 to %struct.raw_spinlock*, !dbg !11409
  br label %do.end18, !dbg !11407

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !11405

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11396

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !11395

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !11390

do.end22:                                         ; preds = %do.end21
  %10 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11410
  %call23 = call i32 @udc_mask_unused_interrupts(%struct.udc* %10) #11, !dbg !11411
  %11 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11412
  call void @shutdown(%struct.udc* %11, %struct.usb_gadget_driver* null) #11, !dbg !11413
  %12 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11414
  %lock24 = getelementptr inbounds %struct.udc, %struct.udc* %12, i32 0, i32 1, !dbg !11415
  %13 = load i64, i64* %flags, align 8, !dbg !11416
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i28, align 8
  store i64 %13, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !497, metadata !7746, metadata !DIExpression()) #5, !dbg !11417
  call void @llvm.dbg.declare(metadata !497, metadata !7750, metadata !DIExpression()) #5, !dbg !11417
  store i32 1, i32* %tmp.i, align 4, !dbg !11417
  %14 = load i32, i32* %tmp.i, align 4, !dbg !11417
  call void @llvm.dbg.declare(metadata !497, metadata !7751, metadata !DIExpression()) #5, !dbg !11418
  call void @llvm.dbg.declare(metadata !497, metadata !7757, metadata !DIExpression()) #5, !dbg !11418
  store i32 1, i32* %tmp8.i, align 4, !dbg !11418
  %15 = load i32, i32* %tmp8.i, align 4, !dbg !11418
  %16 = load i64, i64* %flags.addr.i, align 8, !dbg !11419
  call void @arch_local_irq_restore(i64 %16) #13, !dbg !11419
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11420, !srcloc !7761
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i28, align 8, !dbg !11421
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !11421
  %rlock.i29 = bitcast %union.anon.4* %18 to %struct.raw_spinlock*, !dbg !11421
  %19 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11422
  %driver = getelementptr inbounds %struct.udc, %struct.udc* %19, i32 0, i32 3, !dbg !11423
  store %struct.usb_gadget_driver* null, %struct.usb_gadget_driver** %driver, align 8, !dbg !11424
  %20 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11425
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %20, i32 0, i32 9, !dbg !11426
  %21 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !11426
  %ctl = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %21, i32 0, i32 1, !dbg !11427
  %22 = bitcast i32* %ctl to i8*, !dbg !11428
  %call25 = call i32 @readl(i8* %22) #11, !dbg !11429
  store i32 %call25, i32* %tmp1, align 4, !dbg !11430
  %23 = load i32, i32* %tmp1, align 4, !dbg !11431
  %or = or i32 %23, 1024, !dbg !11431
  store i32 %or, i32* %tmp1, align 4, !dbg !11431
  %24 = load i32, i32* %tmp1, align 4, !dbg !11432
  %25 = load %struct.udc*, %struct.udc** %dev, align 8, !dbg !11433
  %regs26 = getelementptr inbounds %struct.udc, %struct.udc* %25, i32 0, i32 9, !dbg !11434
  %26 = load %struct.udc_regs*, %struct.udc_regs** %regs26, align 8, !dbg !11434
  %ctl27 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %26, i32 0, i32 1, !dbg !11435
  %27 = bitcast i32* %ctl27 to i8*, !dbg !11436
  call void @writel(i32 %24, i8* %27) #11, !dbg !11437
  ret i32 0, !dbg !11438
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @udc_remote_wakeup(%struct.udc* %dev) #0 !dbg !11439 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !7577, metadata !DIExpression()), !dbg !11440
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7583, metadata !DIExpression()), !dbg !11442
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7585, metadata !DIExpression()), !dbg !11443
  %dev.addr = alloca %struct.udc*, align 8
  %flags = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp2 = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !11450, metadata !DIExpression()), !dbg !11451
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11452, metadata !DIExpression()), !dbg !11453
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !11454, metadata !DIExpression()), !dbg !11455
  br label %do.body, !dbg !11456

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11457

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11458, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11461, metadata !DIExpression()), !dbg !11460
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11460
  %conv = zext i1 %cmp to i32, !dbg !11460
  store i32 1, i32* %tmp2, align 4, !dbg !11460
  %0 = load i32, i32* %tmp2, align 4, !dbg !11460
  br label %do.body3, !dbg !11462

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !11463

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !11464

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !11466, metadata !DIExpression()), !dbg !11469
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !11470, metadata !DIExpression()), !dbg !11469
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !11469
  %conv9 = zext i1 %cmp8 to i32, !dbg !11469
  store i32 1, i32* %tmp10, align 4, !dbg !11469
  %1 = load i32, i32* %tmp10, align 4, !dbg !11469
  %call = call i64 @arch_local_irq_save() #11, !dbg !11471
  store i64 %call, i64* %flags, align 8, !dbg !11471
  br label %do.end, !dbg !11471

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !11464

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !11463

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11472, !srcloc !11473
  br label %do.body13, !dbg !11472

do.body13:                                        ; preds = %do.body12
  %2 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11474
  %lock = getelementptr inbounds %struct.udc, %struct.udc* %2, i32 0, i32 1, !dbg !11474
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11475
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !11476
  %rlock.i = bitcast %union.anon.4* %4 to %struct.raw_spinlock*, !dbg !11476
  br label %do.end15, !dbg !11474

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !11472

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !11463

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !11462

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !11457

do.end19:                                         ; preds = %do.end18
  %5 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11477
  %regs = getelementptr inbounds %struct.udc, %struct.udc* %5, i32 0, i32 9, !dbg !11478
  %6 = load %struct.udc_regs*, %struct.udc_regs** %regs, align 8, !dbg !11478
  %ctl = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %6, i32 0, i32 1, !dbg !11479
  %7 = bitcast i32* %ctl to i8*, !dbg !11480
  %call20 = call i32 @readl(i8* %7) #11, !dbg !11481
  store i32 %call20, i32* %tmp, align 4, !dbg !11482
  %8 = load i32, i32* %tmp, align 4, !dbg !11483
  %or = or i32 %8, 1, !dbg !11483
  store i32 %or, i32* %tmp, align 4, !dbg !11483
  %9 = load i32, i32* %tmp, align 4, !dbg !11484
  %10 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11485
  %regs21 = getelementptr inbounds %struct.udc, %struct.udc* %10, i32 0, i32 9, !dbg !11486
  %11 = load %struct.udc_regs*, %struct.udc_regs** %regs21, align 8, !dbg !11486
  %ctl22 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %11, i32 0, i32 1, !dbg !11487
  %12 = bitcast i32* %ctl22 to i8*, !dbg !11488
  call void @writel(i32 %9, i8* %12) #11, !dbg !11489
  %13 = load i32, i32* %tmp, align 4, !dbg !11490
  %and = and i32 %13, -2, !dbg !11490
  store i32 %and, i32* %tmp, align 4, !dbg !11490
  %14 = load i32, i32* %tmp, align 4, !dbg !11491
  %15 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11492
  %regs23 = getelementptr inbounds %struct.udc, %struct.udc* %15, i32 0, i32 9, !dbg !11493
  %16 = load %struct.udc_regs*, %struct.udc_regs** %regs23, align 8, !dbg !11493
  %ctl24 = getelementptr inbounds %struct.udc_regs, %struct.udc_regs* %16, i32 0, i32 1, !dbg !11494
  %17 = bitcast i32* %ctl24 to i8*, !dbg !11495
  call void @writel(i32 %14, i8* %17) #11, !dbg !11496
  %18 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11497
  %lock25 = getelementptr inbounds %struct.udc, %struct.udc* %18, i32 0, i32 1, !dbg !11498
  %19 = load i64, i64* %flags, align 8, !dbg !11499
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !497, metadata !7746, metadata !DIExpression()) #5, !dbg !11500
  call void @llvm.dbg.declare(metadata !497, metadata !7750, metadata !DIExpression()) #5, !dbg !11500
  store i32 1, i32* %tmp.i, align 4, !dbg !11500
  %20 = load i32, i32* %tmp.i, align 4, !dbg !11500
  call void @llvm.dbg.declare(metadata !497, metadata !7751, metadata !DIExpression()) #5, !dbg !11501
  call void @llvm.dbg.declare(metadata !497, metadata !7757, metadata !DIExpression()) #5, !dbg !11501
  store i32 1, i32* %tmp8.i, align 4, !dbg !11501
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !11501
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !11502
  call void @arch_local_irq_restore(i64 %22) #13, !dbg !11502
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11503, !srcloc !7761
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !11504
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !11504
  %rlock.i27 = bitcast %union.anon.4* %24 to %struct.raw_spinlock*, !dbg !11504
  ret i32 0, !dbg !11505
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @setup_ep0(%struct.udc* %dev) #0 !dbg !11506 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !11507, metadata !DIExpression()), !dbg !11508
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11509
  call void @activate_control_endpoints(%struct.udc* %0) #11, !dbg !11510
  %1 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11511
  %call = call i32 @udc_enable_ep0_interrupts(%struct.udc* %1) #11, !dbg !11512
  %2 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11513
  %call1 = call i32 @udc_enable_dev_setup_interrupts(%struct.udc* %2) #11, !dbg !11514
  ret i32 0, !dbg !11515
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_connect(%struct.udc* %dev) #0 !dbg !11516 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !11517, metadata !DIExpression()), !dbg !11518
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11519
  %connected = getelementptr inbounds %struct.udc, %struct.udc* %0, i32 0, i32 5, !dbg !11521
  %1 = load i32, i32* %connected, align 4, !dbg !11521
  %tobool = icmp ne i32 %1, 0, !dbg !11519
  br i1 %tobool, label %if.then, label %if.end, !dbg !11522

if.then:                                          ; preds = %entry
  br label %return, !dbg !11523

if.end:                                           ; preds = %entry
  %2 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11524
  %dev1 = getelementptr inbounds %struct.udc, %struct.udc* %2, i32 0, i32 21, !dbg !11524
  %3 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !11524
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0)) #12, !dbg !11524
  %4 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11525
  %connected2 = getelementptr inbounds %struct.udc, %struct.udc* %4, i32 0, i32 5, !dbg !11526
  store i32 1, i32* %connected2, align 4, !dbg !11527
  %5 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11528
  call void @udc_basic_init(%struct.udc* %5) #11, !dbg !11529
  %6 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11530
  %call = call i32 @udc_enable_dev_setup_interrupts(%struct.udc* %6) #11, !dbg !11531
  br label %return, !dbg !11532

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11532
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @shutdown(%struct.udc* %dev, %struct.usb_gadget_driver* %driver) #0 !dbg !11533 {
entry:
  %dev.addr = alloca %struct.udc*, align 8
  %driver.addr = alloca %struct.usb_gadget_driver*, align 8
  %tmp = alloca i32, align 4
  store %struct.udc* %dev, %struct.udc** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc** %dev.addr, metadata !11536, metadata !DIExpression()), !dbg !11537
  store %struct.usb_gadget_driver* %driver, %struct.usb_gadget_driver** %driver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_gadget_driver** %driver.addr, metadata !11538, metadata !DIExpression()), !dbg !11539
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !11540, metadata !DIExpression()), !dbg !11541
  %0 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11542
  call void @udc_basic_init(%struct.udc* %0) #11, !dbg !11543
  store i32 0, i32* %tmp, align 4, !dbg !11544
  br label %for.cond, !dbg !11546

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %tmp, align 4, !dbg !11547
  %cmp = icmp slt i32 %1, 32, !dbg !11549
  br i1 %cmp, label %for.body, label %for.end, !dbg !11550

for.body:                                         ; preds = %for.cond
  %2 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11551
  %ep = getelementptr inbounds %struct.udc, %struct.udc* %2, i32 0, i32 2, !dbg !11552
  %3 = load i32, i32* %tmp, align 4, !dbg !11553
  %idxprom = sext i32 %3 to i64, !dbg !11551
  %arrayidx = getelementptr [32 x %struct.udc_ep], [32 x %struct.udc_ep]* %ep, i64 0, i64 %idxprom, !dbg !11551
  call void @empty_req_queue(%struct.udc_ep* %arrayidx) #11, !dbg !11554
  br label %for.inc, !dbg !11554

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %tmp, align 4, !dbg !11555
  %inc = add i32 %4, 1, !dbg !11555
  store i32 %inc, i32* %tmp, align 4, !dbg !11555
  br label %for.cond, !dbg !11556, !llvm.loop !11557

for.end:                                          ; preds = %for.cond
  %5 = load %struct.udc*, %struct.udc** %dev.addr, align 8, !dbg !11559
  call void @udc_setup_endpoints(%struct.udc* %5) #11, !dbg !11560
  ret void, !dbg !11561
}

; Function Attrs: noredzone
declare dso_local void @complete(%struct.completion*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @udc_handle_halt_state(%struct.udc_ep* %ep) #0 !dbg !11562 {
entry:
  %ep.addr = alloca %struct.udc_ep*, align 8
  %tmp = alloca i32, align 4
  store %struct.udc_ep* %ep, %struct.udc_ep** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.udc_ep** %ep.addr, metadata !11563, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !11565, metadata !DIExpression()), !dbg !11566
  %0 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !11567
  %halted = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %0, i32 0, i32 16, !dbg !11569
  %1 = load i32, i32* %halted, align 8, !dbg !11569
  %cmp = icmp eq i32 %1, 1, !dbg !11570
  br i1 %cmp, label %if.then, label %if.end5, !dbg !11571

if.then:                                          ; preds = %entry
  %2 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !11572
  %regs = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %2, i32 0, i32 1, !dbg !11574
  %3 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs, align 8, !dbg !11574
  %ctl = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %3, i32 0, i32 0, !dbg !11575
  %4 = bitcast i32* %ctl to i8*, !dbg !11576
  %call = call i32 @readl(i8* %4) #11, !dbg !11577
  store i32 %call, i32* %tmp, align 4, !dbg !11578
  %5 = load i32, i32* %tmp, align 4, !dbg !11579
  %and = and i32 %5, 1, !dbg !11581
  %tobool = icmp ne i32 %and, 0, !dbg !11581
  br i1 %tobool, label %if.end, label %if.then1, !dbg !11582

if.then1:                                         ; preds = %if.then
  %6 = load i32, i32* %tmp, align 4, !dbg !11583
  %or = or i32 %6, 256, !dbg !11583
  store i32 %or, i32* %tmp, align 4, !dbg !11583
  %7 = load i32, i32* %tmp, align 4, !dbg !11585
  %8 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !11586
  %regs2 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %8, i32 0, i32 1, !dbg !11587
  %9 = load %struct.udc_ep_regs*, %struct.udc_ep_regs** %regs2, align 8, !dbg !11587
  %ctl3 = getelementptr inbounds %struct.udc_ep_regs, %struct.udc_ep_regs* %9, i32 0, i32 0, !dbg !11588
  %10 = bitcast i32* %ctl3 to i8*, !dbg !11589
  call void @writel(i32 %7, i8* %10) #11, !dbg !11590
  %11 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !11591
  %halted4 = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %11, i32 0, i32 16, !dbg !11592
  store i32 0, i32* %halted4, align 8, !dbg !11593
  %12 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !11594
  %13 = load %struct.udc_ep*, %struct.udc_ep** %ep.addr, align 8, !dbg !11595
  %num = getelementptr inbounds %struct.udc_ep, %struct.udc_ep* %13, i32 0, i32 18, !dbg !11596
  %14 = bitcast i24* %num to i32*, !dbg !11596
  %bf.load = load i32, i32* %14, align 8, !dbg !11596
  %bf.clear = and i32 %bf.load, 31, !dbg !11596
  call void @UDC_QUEUE_CNAK(%struct.udc_ep* %12, i32 %bf.clear) #11, !dbg !11597
  br label %if.end, !dbg !11598

if.end:                                           ; preds = %if.then1, %if.then
  br label %if.end5, !dbg !11599

if.end5:                                          ; preds = %if.end, %entry
  ret void, !dbg !11600
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly }
attributes #5 = { nounwind }
attributes #6 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #7 = { argmemonly nounwind willreturn }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4651}
!llvm.module.flags = !{!4652, !4653, !4654, !4655}
!llvm.ident = !{!4656}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_use_dma", scope: !2, file: !141, line: 609, type: !4648, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !137, globals: !4431, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/usb/gadget/udc/snps_udc_core.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !16, !23, !29, !34, !40, !47, !53, !62, !70, !76, !83, !91, !97, !103, !114, !120, !125, !132}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_speed", file: !6, line: 1146, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/uapi/linux/usb/ch9.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15}
!9 = !DIEnumerator(name: "USB_SPEED_UNKNOWN", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "USB_SPEED_LOW", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "USB_SPEED_FULL", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "USB_SPEED_HIGH", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "USB_SPEED_WIRELESS", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "USB_SPEED_SUPER", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "USB_SPEED_SUPER_PLUS", value: 6, isUnsigned: true)
!16 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !17, line: 15, baseType: !7, size: 32, elements: !18)
!17 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!18 = !{!19, !20, !21, !22}
!19 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!21 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!22 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !24, line: 546, baseType: !7, size: 32, elements: !25)
!24 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!25 = !{!26, !27, !28}
!26 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!27 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!28 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !30, line: 65, baseType: !7, size: 32, elements: !31)
!30 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!31 = !{!32, !33}
!32 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !35, line: 16, baseType: !7, size: 32, elements: !36)
!35 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!36 = !{!37, !38, !39}
!37 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!38 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !41, line: 59, baseType: !7, size: 32, elements: !42)
!41 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!42 = !{!43, !44, !45, !46}
!43 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!46 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !48, line: 54, baseType: !7, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !54, line: 296, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58, !59, !60, !61}
!56 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!59 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!60 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!61 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!62 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !63, line: 9, baseType: !7, size: 32, elements: !64)
!63 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!64 = !{!65, !66, !67, !68, !69}
!65 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!66 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!67 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!68 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!69 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!70 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !71, line: 26, baseType: !7, size: 32, elements: !72)
!71 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!72 = !{!73, !74, !75}
!73 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!74 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !77, line: 343, baseType: !7, size: 32, elements: !78)
!77 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!78 = !{!79, !80, !81, !82}
!79 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!80 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!81 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!82 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !84, line: 524, baseType: !7, size: 32, elements: !85)
!84 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!85 = !{!86, !87, !88, !89, !90}
!86 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!87 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!88 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!89 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !84, line: 502, baseType: !7, size: 32, elements: !92)
!92 = !{!93, !94, !95, !96}
!93 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!94 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!95 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!96 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !98, line: 44, baseType: !7, size: 32, elements: !99)
!98 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!99 = !{!100, !101, !102}
!100 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!101 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!102 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_state", file: !6, line: 1156, baseType: !7, size: 32, elements: !104)
!104 = !{!105, !106, !107, !108, !109, !110, !111, !112, !113}
!105 = !DIEnumerator(name: "USB_STATE_NOTATTACHED", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "USB_STATE_ATTACHED", value: 1, isUnsigned: true)
!107 = !DIEnumerator(name: "USB_STATE_POWERED", value: 2, isUnsigned: true)
!108 = !DIEnumerator(name: "USB_STATE_RECONNECTING", value: 3, isUnsigned: true)
!109 = !DIEnumerator(name: "USB_STATE_UNAUTHENTICATED", value: 4, isUnsigned: true)
!110 = !DIEnumerator(name: "USB_STATE_DEFAULT", value: 5, isUnsigned: true)
!111 = !DIEnumerator(name: "USB_STATE_ADDRESS", value: 6, isUnsigned: true)
!112 = !DIEnumerator(name: "USB_STATE_CONFIGURED", value: 7, isUnsigned: true)
!113 = !DIEnumerator(name: "USB_STATE_SUSPENDED", value: 8, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !115, line: 11, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119}
!117 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!119 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !121, line: 10, baseType: !7, size: 32, elements: !122)
!121 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!122 = !{!123, !124}
!123 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!125 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !126, line: 305, baseType: !7, size: 32, elements: !127)
!126 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!127 = !{!128, !129, !130, !131}
!128 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!130 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!131 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!132 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !133, line: 651, baseType: !7, size: 32, elements: !134)
!133 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!134 = !{!135, !136}
!135 = !DIEnumerator(name: "TASKLET_STATE_SCHED", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "TASKLET_STATE_RUN", value: 1, isUnsigned: true)
!137 = !{!138, !139, !229, !304, !306, !309, !310, !296, !319, !163, !336, !271, !4428, !150, !292, !209, !211, !1084, !4430, !297, !356}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udc_request", file: !141, line: 476, size: 1216, elements: !142)
!141 = !DIFile(filename: "drivers/usb/gadget/udc/amd5536udc.h", directory: "/home/lizy2001/genbc/linux")
!142 = !{!143, !288, !289, !290, !291, !301, !302, !303}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !140, file: !141, line: 478, baseType: !144, size: 768)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_request", file: !145, line: 100, size: 768, elements: !146)
!145 = !DIFile(filename: "./include/linux/usb/gadget.h", directory: "/home/lizy2001/genbc/linux")
!146 = !{!147, !148, !149, !157, !168, !169, !170, !171, !172, !173, !174, !175, !176, !283, !284, !285, !286, !287}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !144, file: !145, line: 101, baseType: !138, size: 64)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !144, file: !145, line: 102, baseType: !7, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !144, file: !145, line: 103, baseType: !150, size: 64, offset: 128)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !151, line: 143, baseType: !152)
!151 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !153, line: 23, baseType: !154)
!153 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !155, line: 31, baseType: !156)
!155 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!156 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !144, file: !145, line: 105, baseType: !158, size: 64, offset: 192)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !160, line: 11, size: 256, elements: !161)
!160 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!161 = !{!162, !164, !165, !166, !167}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !159, file: !160, line: 12, baseType: !163, size: 64)
!163 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !159, file: !160, line: 13, baseType: !7, size: 32, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !159, file: !160, line: 14, baseType: !7, size: 32, offset: 96)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !159, file: !160, line: 15, baseType: !150, size: 64, offset: 128)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !159, file: !160, line: 17, baseType: !7, size: 32, offset: 192)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "num_sgs", scope: !144, file: !145, line: 106, baseType: !7, size: 32, offset: 256)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "num_mapped_sgs", scope: !144, file: !145, line: 107, baseType: !7, size: 32, offset: 288)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !144, file: !145, line: 109, baseType: !7, size: 16, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "is_last", scope: !144, file: !145, line: 110, baseType: !7, size: 1, offset: 336, flags: DIFlagBitField, extraData: i64 320)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "no_interrupt", scope: !144, file: !145, line: 111, baseType: !7, size: 1, offset: 337, flags: DIFlagBitField, extraData: i64 320)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !144, file: !145, line: 112, baseType: !7, size: 1, offset: 338, flags: DIFlagBitField, extraData: i64 320)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "short_not_ok", scope: !144, file: !145, line: 113, baseType: !7, size: 1, offset: 339, flags: DIFlagBitField, extraData: i64 320)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mapped", scope: !144, file: !145, line: 114, baseType: !7, size: 1, offset: 340, flags: DIFlagBitField, extraData: i64 320)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !144, file: !145, line: 116, baseType: !177, size: 64, offset: 384)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!178 = !DISubroutineType(types: !179)
!179 = !{null, !180, !228}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ep", file: !145, line: 226, size: 576, elements: !182)
!182 = !{!183, !184, !188, !246, !252, !261, !264, !265, !266, !267, !268, !269, !270, !272, !273}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !181, file: !145, line: 227, baseType: !138, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !145, line: 229, baseType: !185, size: 64, offset: 64)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64)
!186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !187)
!187 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !181, file: !145, line: 230, baseType: !189, size: 64, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 64)
!190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !191)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ep_ops", file: !145, line: 136, size: 704, elements: !192)
!192 = !{!193, !216, !220, !224, !230, !231, !235, !239, !243, !244, !245}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !191, file: !145, line: 137, baseType: !194, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!195 = !DISubroutineType(types: !196)
!196 = !{!197, !180, !198}
!197 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !200)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_endpoint_descriptor", file: !6, line: 407, size: 72, elements: !201)
!201 = !{!202, !205, !206, !207, !208, !213, !214, !215}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !200, file: !6, line: 408, baseType: !203, size: 8)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !155, line: 21, baseType: !204)
!204 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !200, file: !6, line: 409, baseType: !203, size: 8, offset: 8)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "bEndpointAddress", scope: !200, file: !6, line: 411, baseType: !203, size: 8, offset: 16)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !200, file: !6, line: 412, baseType: !203, size: 8, offset: 24)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "wMaxPacketSize", scope: !200, file: !6, line: 413, baseType: !209, size: 16, offset: 32)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !210, line: 29, baseType: !211)
!210 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !155, line: 24, baseType: !212)
!212 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "bInterval", scope: !200, file: !6, line: 414, baseType: !203, size: 8, offset: 48)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "bRefresh", scope: !200, file: !6, line: 418, baseType: !203, size: 8, offset: 56)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "bSynchAddress", scope: !200, file: !6, line: 419, baseType: !203, size: 8, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !191, file: !145, line: 139, baseType: !217, size: 64, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!218 = !DISubroutineType(types: !219)
!219 = !{!197, !180}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !191, file: !145, line: 140, baseType: !221, size: 64, offset: 128)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = !DISubroutineType(types: !223)
!223 = !{null, !180}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_request", scope: !191, file: !145, line: 142, baseType: !225, size: 64, offset: 192)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = !DISubroutineType(types: !227)
!227 = !{!228, !180, !229}
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !151, line: 148, baseType: !7)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "free_request", scope: !191, file: !145, line: 144, baseType: !177, size: 64, offset: 256)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !191, file: !145, line: 146, baseType: !232, size: 64, offset: 320)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!233 = !DISubroutineType(types: !234)
!234 = !{!197, !180, !228, !229}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !191, file: !145, line: 148, baseType: !236, size: 64, offset: 384)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64)
!237 = !DISubroutineType(types: !238)
!238 = !{!197, !180, !228}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "set_halt", scope: !191, file: !145, line: 150, baseType: !240, size: 64, offset: 448)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64)
!241 = !DISubroutineType(types: !242)
!242 = !{!197, !180, !197}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "set_wedge", scope: !191, file: !145, line: 151, baseType: !217, size: 64, offset: 512)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_status", scope: !191, file: !145, line: 153, baseType: !217, size: 64, offset: 576)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_flush", scope: !191, file: !145, line: 154, baseType: !221, size: 64, offset: 640)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "ep_list", scope: !181, file: !145, line: 231, baseType: !247, size: 128, offset: 192)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !151, line: 178, size: 128, elements: !248)
!248 = !{!249, !251}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !247, file: !151, line: 179, baseType: !250, size: 64)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !247, file: !151, line: 179, baseType: !250, size: 64, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !181, file: !145, line: 232, baseType: !253, size: 32, offset: 320)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ep_caps", file: !145, line: 166, size: 32, elements: !254)
!254 = !{!255, !256, !257, !258, !259, !260}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "type_control", scope: !253, file: !145, line: 167, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "type_iso", scope: !253, file: !145, line: 168, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "type_bulk", scope: !253, file: !145, line: 169, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "type_int", scope: !253, file: !145, line: 170, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "dir_in", scope: !253, file: !145, line: 171, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "dir_out", scope: !253, file: !145, line: 172, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "claimed", scope: !181, file: !145, line: 233, baseType: !262, size: 8, offset: 352)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !151, line: 30, baseType: !263)
!263 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !181, file: !145, line: 234, baseType: !262, size: 8, offset: 360)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "maxpacket", scope: !181, file: !145, line: 235, baseType: !7, size: 16, offset: 368, flags: DIFlagBitField, extraData: i64 368)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "maxpacket_limit", scope: !181, file: !145, line: 236, baseType: !7, size: 16, offset: 384, flags: DIFlagBitField, extraData: i64 368)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "max_streams", scope: !181, file: !145, line: 237, baseType: !7, size: 16, offset: 400, flags: DIFlagBitField, extraData: i64 368)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "mult", scope: !181, file: !145, line: 238, baseType: !7, size: 2, offset: 416, flags: DIFlagBitField, extraData: i64 368)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "maxburst", scope: !181, file: !145, line: 239, baseType: !7, size: 5, offset: 418, flags: DIFlagBitField, extraData: i64 368)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !181, file: !145, line: 240, baseType: !271, size: 8, offset: 424)
!271 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !153, line: 17, baseType: !203)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !181, file: !145, line: 241, baseType: !198, size: 64, offset: 448)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "comp_desc", scope: !181, file: !145, line: 242, baseType: !274, size: 64, offset: 512)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !276)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_ep_comp_descriptor", file: !6, line: 689, size: 48, elements: !277)
!277 = !{!278, !279, !280, !281, !282}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !276, file: !6, line: 690, baseType: !203, size: 8)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !276, file: !6, line: 691, baseType: !203, size: 8, offset: 8)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxBurst", scope: !276, file: !6, line: 693, baseType: !203, size: 8, offset: 16)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !276, file: !6, line: 694, baseType: !203, size: 8, offset: 24)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "wBytesPerInterval", scope: !276, file: !6, line: 695, baseType: !209, size: 16, offset: 32)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !144, file: !145, line: 118, baseType: !138, size: 64, offset: 448)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !144, file: !145, line: 119, baseType: !247, size: 128, offset: 512)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !144, file: !145, line: 121, baseType: !7, size: 32, offset: 640)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !144, file: !145, line: 123, baseType: !197, size: 32, offset: 672)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "actual", scope: !144, file: !145, line: 124, baseType: !7, size: 32, offset: 704)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "dma_going", scope: !140, file: !141, line: 481, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "dma_done", scope: !140, file: !141, line: 482, baseType: !7, size: 1, offset: 769, flags: DIFlagBitField, extraData: i64 768)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "td_phys", scope: !140, file: !141, line: 484, baseType: !150, size: 64, offset: 832)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "td_data", scope: !140, file: !141, line: 486, baseType: !292, size: 64, offset: 896)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udc_data_dma", file: !141, line: 464, size: 128, align: 128, elements: !294)
!294 = !{!295, !298, !299, !300}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !293, file: !141, line: 466, baseType: !296, size: 32)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !153, line: 21, baseType: !297)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !155, line: 27, baseType: !7)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved", scope: !293, file: !141, line: 468, baseType: !296, size: 32, offset: 32)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "bufptr", scope: !293, file: !141, line: 470, baseType: !296, size: 32, offset: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !293, file: !141, line: 472, baseType: !296, size: 32, offset: 96)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "td_data_last", scope: !140, file: !141, line: 488, baseType: !292, size: 64, offset: 960)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !140, file: !141, line: 489, baseType: !247, size: 128, offset: 1024)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "chain_len", scope: !140, file: !141, line: 492, baseType: !7, size: 32, offset: 1152)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !250)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !312)
!312 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !313)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !151, line: 186, size: 128, elements: !316)
!316 = !{!317, !318}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !315, file: !151, line: 187, baseType: !314, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !315, file: !151, line: 187, baseType: !313, size: 64, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udc_ep", file: !141, line: 497, size: 1600, elements: !321)
!321 = !{!322, !323, !335, !337, !338, !339, !340, !348, !349, !350, !351, !352, !353, !354, !355, !4422, !4423, !4424, !4425, !4426, !4427}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "ep", scope: !320, file: !141, line: 498, baseType: !181, size: 576)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !320, file: !141, line: 499, baseType: !324, size: 64, offset: 576)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udc_ep_regs", file: !141, line: 423, size: 256, elements: !326)
!326 = !{!327, !328, !329, !330, !331, !332, !333, !334}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !325, file: !141, line: 426, baseType: !296, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "sts", scope: !325, file: !141, line: 429, baseType: !296, size: 32, offset: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "bufin_framenum", scope: !325, file: !141, line: 432, baseType: !296, size: 32, offset: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "bufout_maxpkt", scope: !325, file: !141, line: 435, baseType: !296, size: 32, offset: 96)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "subptr", scope: !325, file: !141, line: 438, baseType: !296, size: 32, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "desptr", scope: !325, file: !141, line: 441, baseType: !296, size: 32, offset: 160)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !325, file: !141, line: 444, baseType: !296, size: 32, offset: 192)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !325, file: !141, line: 447, baseType: !296, size: 32, offset: 224)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "txfifo", scope: !320, file: !141, line: 500, baseType: !336, size: 64, offset: 640)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !320, file: !141, line: 501, baseType: !336, size: 64, offset: 704)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "td_phys", scope: !320, file: !141, line: 502, baseType: !150, size: 64, offset: 768)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "td_stp_dma", scope: !320, file: !141, line: 503, baseType: !150, size: 64, offset: 832)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "td_stp", scope: !320, file: !141, line: 504, baseType: !341, size: 64, offset: 896)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udc_stp_dma", file: !141, line: 452, size: 128, align: 128, elements: !343)
!343 = !{!344, !345, !346, !347}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !342, file: !141, line: 454, baseType: !296, size: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved", scope: !342, file: !141, line: 456, baseType: !296, size: 32, offset: 32)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "data12", scope: !342, file: !141, line: 458, baseType: !296, size: 32, offset: 64)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "data34", scope: !342, file: !141, line: 460, baseType: !296, size: 32, offset: 96)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "td", scope: !320, file: !141, line: 505, baseType: !292, size: 64, offset: 960)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !320, file: !141, line: 507, baseType: !139, size: 64, offset: 1024)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "req_used", scope: !320, file: !141, line: 508, baseType: !7, size: 32, offset: 1088)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "req_completed", scope: !320, file: !141, line: 509, baseType: !7, size: 32, offset: 1120)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "bna_dummy_req", scope: !320, file: !141, line: 511, baseType: !139, size: 64, offset: 1152)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "bna_occurred", scope: !320, file: !141, line: 512, baseType: !7, size: 32, offset: 1216)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "naking", scope: !320, file: !141, line: 515, baseType: !7, size: 32, offset: 1248)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !320, file: !141, line: 517, baseType: !356, size: 64, offset: 1280)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udc", file: !141, line: 529, size: 60224, elements: !358)
!358 = !{!359, !4063, !4064, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4354, !4361, !4372, !4373, !4374, !4375, !4379, !4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387, !4390, !4394, !4412, !4413, !4420, !4421}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "gadget", scope: !357, file: !141, line: 530, baseType: !360, size: 6592)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_gadget", file: !145, line: 400, size: 6592, elements: !361)
!361 = !{!362, !383, !386, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !360, file: !145, line: 401, baseType: !363, size: 256)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !364, line: 102, size: 256, elements: !365)
!364 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!365 = !{!366, !376, !377}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !363, file: !364, line: 103, baseType: !367, size: 64)
!367 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !368, line: 13, baseType: !369)
!368 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !151, line: 175, baseType: !370)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !151, line: 173, size: 64, elements: !371)
!371 = !{!372}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !370, file: !151, line: 174, baseType: !373, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !153, line: 22, baseType: !374)
!374 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !155, line: 30, baseType: !375)
!375 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !363, file: !364, line: 104, baseType: !247, size: 128, offset: 64)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !363, file: !364, line: 105, baseType: !378, size: 64, offset: 192)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !364, line: 21, baseType: !379)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64)
!380 = !DISubroutineType(types: !381)
!381 = !{null, !382}
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "udc", scope: !360, file: !145, line: 402, baseType: !384, size: 64, offset: 256)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = !DICompositeType(tag: DW_TAG_structure_type, name: "usb_udc", file: !145, line: 306, flags: DIFlagFwdDecl)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !360, file: !145, line: 404, baseType: !387, size: 64, offset: 320)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !389)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_gadget_ops", file: !145, line: 311, size: 768, elements: !390)
!390 = !{!391, !396, !397, !401, !402, !406, !407, !411, !422, !4020, !4021, !4025}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "get_frame", scope: !389, file: !145, line: 312, baseType: !392, size: 64)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!393 = !DISubroutineType(types: !394)
!394 = !{!197, !395}
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !389, file: !145, line: 313, baseType: !392, size: 64, offset: 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "set_selfpowered", scope: !389, file: !145, line: 314, baseType: !398, size: 64, offset: 128)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DISubroutineType(types: !400)
!400 = !{!197, !395, !197}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "vbus_session", scope: !389, file: !145, line: 315, baseType: !398, size: 64, offset: 192)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "vbus_draw", scope: !389, file: !145, line: 316, baseType: !403, size: 64, offset: 256)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!404 = !DISubroutineType(types: !405)
!405 = !{!197, !395, !7}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "pullup", scope: !389, file: !145, line: 317, baseType: !398, size: 64, offset: 320)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !389, file: !145, line: 318, baseType: !408, size: 64, offset: 384)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!409 = !DISubroutineType(types: !410)
!410 = !{!197, !395, !7, !163}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "get_config_params", scope: !389, file: !145, line: 320, baseType: !412, size: 64, offset: 448)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = !DISubroutineType(types: !414)
!414 = !{null, !395, !415}
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_dcd_config_params", file: !145, line: 293, size: 48, elements: !417)
!417 = !{!418, !419, !420, !421}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "bU1devExitLat", scope: !416, file: !145, line: 294, baseType: !203, size: 8)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "bU2DevExitLat", scope: !416, file: !145, line: 296, baseType: !209, size: 16, offset: 16)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "besl_baseline", scope: !416, file: !145, line: 298, baseType: !203, size: 8, offset: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "besl_deep", scope: !416, file: !145, line: 299, baseType: !203, size: 8, offset: 40)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "udc_start", scope: !389, file: !145, line: 322, baseType: !423, size: 64, offset: 512)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DISubroutineType(types: !425)
!425 = !{!197, !395, !426}
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_gadget_driver", file: !145, line: 699, size: 1984, elements: !428)
!428 = !{!429, !431, !432, !433, !437, !450, !451, !452, !453, !454, !4017, !4018, !4019}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !427, file: !145, line: 700, baseType: !430, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "max_speed", scope: !427, file: !145, line: 701, baseType: !5, size: 32, offset: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !427, file: !145, line: 702, baseType: !423, size: 64, offset: 128)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "unbind", scope: !427, file: !145, line: 704, baseType: !434, size: 64, offset: 192)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DISubroutineType(types: !436)
!436 = !{null, !395}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !427, file: !145, line: 705, baseType: !438, size: 64, offset: 256)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = !DISubroutineType(types: !440)
!440 = !{!197, !395, !441}
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !443)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ctrlrequest", file: !6, line: 213, size: 64, elements: !444)
!444 = !{!445, !446, !447, !448, !449}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "bRequestType", scope: !443, file: !6, line: 214, baseType: !203, size: 8)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "bRequest", scope: !443, file: !6, line: 215, baseType: !203, size: 8, offset: 8)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "wValue", scope: !443, file: !6, line: 216, baseType: !209, size: 16, offset: 16)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "wIndex", scope: !443, file: !6, line: 217, baseType: !209, size: 16, offset: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "wLength", scope: !443, file: !6, line: 218, baseType: !209, size: 16, offset: 48)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !427, file: !145, line: 707, baseType: !434, size: 64, offset: 320)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !427, file: !145, line: 708, baseType: !434, size: 64, offset: 384)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !427, file: !145, line: 709, baseType: !434, size: 64, offset: 448)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !427, file: !145, line: 710, baseType: !434, size: 64, offset: 512)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !427, file: !145, line: 713, baseType: !455, size: 1152, offset: 576)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !98, line: 95, size: 1152, elements: !456)
!456 = !{!457, !458, !3974, !3975, !3976, !3977, !3978, !3991, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4012, !4013, !4014}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !455, file: !98, line: 96, baseType: !185, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !455, file: !98, line: 97, baseType: !459, size: 64, offset: 64)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !461, line: 82, size: 1408, elements: !462)
!461 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!462 = !{!463, !464, !465, !3945, !3946, !3947, !3948, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3963, !3964, !3965, !3966, !3967, !3971, !3972, !3973}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !460, file: !461, line: 83, baseType: !185, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !460, file: !461, line: 84, baseType: !185, size: 64, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !460, file: !461, line: 85, baseType: !466, size: 64, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !77, line: 461, size: 5568, elements: !468)
!468 = !{!469, !3582, !3583, !3586, !3587, !3638, !3639, !3641, !3642, !3643, !3644, !3653, !3762, !3775, !3778, !3779, !3783, !3785, !3786, !3787, !3791, !3797, !3798, !3801, !3805, !3895, !3896, !3897, !3898, !3899, !3933, !3934, !3935, !3938, !3941, !3942, !3943, !3944}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !467, file: !77, line: 462, baseType: !470, size: 512)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !471, line: 64, size: 512, elements: !472)
!471 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!472 = !{!473, !474, !475, !477, !536, !3433, !3572, !3577, !3578, !3579, !3580, !3581}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !470, file: !471, line: 65, baseType: !185, size: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !470, file: !471, line: 66, baseType: !247, size: 128, offset: 64)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !470, file: !471, line: 67, baseType: !476, size: 64, offset: 192)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !470, file: !471, line: 68, baseType: !478, size: 64, offset: 256)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !471, line: 192, size: 704, elements: !480)
!480 = !{!481, !482, !498, !499}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !479, file: !471, line: 193, baseType: !247, size: 128)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !479, file: !471, line: 194, baseType: !483, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !484, line: 83, baseType: !485)
!484 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !484, line: 71, elements: !486)
!486 = !{!487}
!487 = !DIDerivedType(tag: DW_TAG_member, scope: !485, file: !484, line: 72, baseType: !488)
!488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !485, file: !484, line: 72, elements: !489)
!489 = !{!490}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !488, file: !484, line: 73, baseType: !491)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !484, line: 20, elements: !492)
!492 = !{!493}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !491, file: !484, line: 21, baseType: !494)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !495, line: 25, baseType: !496)
!495 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 25, elements: !497)
!497 = !{}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !479, file: !471, line: 195, baseType: !470, size: 512, offset: 128)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !479, file: !471, line: 196, baseType: !500, size: 64, offset: 640)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !502)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !471, line: 156, size: 192, elements: !503)
!503 = !{!504, !509, !514}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !502, file: !471, line: 157, baseType: !505, size: 64)
!505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = !DISubroutineType(types: !508)
!508 = !{!197, !478, !476}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !502, file: !471, line: 158, baseType: !510, size: 64, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !511)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = !DISubroutineType(types: !513)
!513 = !{!185, !478, !476}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !502, file: !471, line: 159, baseType: !515, size: 64, offset: 128)
!515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !516)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = !DISubroutineType(types: !518)
!518 = !{!197, !478, !476, !519}
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !471, line: 148, size: 20736, elements: !521)
!521 = !{!522, !526, !530, !531, !535}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !520, file: !471, line: 149, baseType: !523, size: 192)
!523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, size: 192, elements: !524)
!524 = !{!525}
!525 = !DISubrange(count: 3)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !520, file: !471, line: 150, baseType: !527, size: 4096, offset: 192)
!527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, size: 4096, elements: !528)
!528 = !{!529}
!529 = !DISubrange(count: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !520, file: !471, line: 151, baseType: !197, size: 32, offset: 4288)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !520, file: !471, line: 152, baseType: !532, size: 16384, offset: 4320)
!532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 16384, elements: !533)
!533 = !{!534}
!534 = !DISubrange(count: 2048)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !520, file: !471, line: 153, baseType: !197, size: 32, offset: 20704)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !470, file: !471, line: 69, baseType: !537, size: 64, offset: 320)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !471, line: 138, size: 448, elements: !539)
!539 = !{!540, !544, !572, !574, !3395, !3423, !3427}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !538, file: !471, line: 139, baseType: !541, size: 64)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DISubroutineType(types: !543)
!543 = !{null, !476}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !538, file: !471, line: 140, baseType: !545, size: 64, offset: 64)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !547)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !548, line: 230, size: 128, elements: !549)
!548 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!549 = !{!550, !565}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !547, file: !548, line: 231, baseType: !551, size: 64)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DISubroutineType(types: !553)
!553 = !{!554, !476, !559, !430}
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !151, line: 60, baseType: !555)
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !556, line: 73, baseType: !557)
!556 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !556, line: 15, baseType: !558)
!558 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !548, line: 30, size: 128, elements: !561)
!561 = !{!562, !563}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !560, file: !548, line: 31, baseType: !185, size: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !560, file: !548, line: 32, baseType: !564, size: 16, offset: 64)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !151, line: 19, baseType: !212)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !547, file: !548, line: 232, baseType: !566, size: 64, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DISubroutineType(types: !568)
!568 = !{!554, !476, !559, !185, !569}
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !151, line: 55, baseType: !570)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !556, line: 72, baseType: !571)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !556, line: 16, baseType: !163)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !538, file: !471, line: 141, baseType: !573, size: 64, offset: 128)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !538, file: !471, line: 142, baseType: !575, size: 64, offset: 192)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !578)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !548, line: 84, size: 320, elements: !579)
!579 = !{!580, !581, !585, !3392, !3393}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !578, file: !548, line: 85, baseType: !185, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !578, file: !548, line: 86, baseType: !582, size: 64, offset: 64)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = !DISubroutineType(types: !584)
!584 = !{!564, !476, !559, !197}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !578, file: !548, line: 88, baseType: !586, size: 64, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = !DISubroutineType(types: !588)
!588 = !{!564, !476, !589, !197}
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !548, line: 168, size: 448, elements: !591)
!591 = !{!592, !593, !594, !595, !3387, !3388}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !590, file: !548, line: 169, baseType: !560, size: 128)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !590, file: !548, line: 170, baseType: !569, size: 64, offset: 128)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !590, file: !548, line: 171, baseType: !138, size: 64, offset: 192)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !590, file: !548, line: 172, baseType: !596, size: 64, offset: 256)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DISubroutineType(types: !598)
!598 = !{!554, !599, !476, !589, !430, !768, !569}
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !54, line: 916, size: 1856, align: 32, elements: !601)
!601 = !{!602, !620, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3370, !3371, !3380, !3381, !3382, !3383, !3384, !3385, !3386}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !600, file: !54, line: 920, baseType: !603, size: 128)
!603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !600, file: !54, line: 917, size: 128, elements: !604)
!604 = !{!605, !611}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !603, file: !54, line: 918, baseType: !606, size: 64)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !607, line: 58, size: 64, elements: !608)
!607 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!608 = !{!609}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !606, file: !607, line: 59, baseType: !610, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !603, file: !54, line: 919, baseType: !612, size: 128, align: 64)
!612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !151, line: 216, size: 128, align: 64, elements: !613)
!613 = !{!614, !616}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !612, file: !151, line: 217, baseType: !615, size: 64)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !612, file: !151, line: 218, baseType: !617, size: 64, offset: 64)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = !DISubroutineType(types: !619)
!619 = !{null, !615}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !600, file: !54, line: 921, baseType: !621, size: 128, offset: 128)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !622, line: 8, size: 128, elements: !623)
!622 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!623 = !{!624, !628}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !621, file: !622, line: 9, baseType: !625, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !627, line: 18, flags: DIFlagFwdDecl)
!627 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!628 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !621, file: !622, line: 10, baseType: !629, size: 64, offset: 64)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !627, line: 89, size: 1536, elements: !631)
!631 = !{!632, !633, !643, !651, !652, !667, !3320, !3322, !3334, !3335, !3336, !3337, !3338, !3344, !3345, !3346}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !630, file: !627, line: 91, baseType: !7, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !630, file: !627, line: 92, baseType: !634, size: 32, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !635, line: 277, baseType: !636)
!635 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !635, line: 277, size: 32, elements: !637)
!637 = !{!638}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !636, file: !635, line: 277, baseType: !639, size: 32)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !635, line: 70, baseType: !640)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !635, line: 65, size: 32, elements: !641)
!641 = !{!642}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !640, file: !635, line: 66, baseType: !7, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !630, file: !627, line: 93, baseType: !644, size: 128, offset: 64)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !645, line: 38, size: 128, elements: !646)
!645 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!646 = !{!647, !649}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !644, file: !645, line: 39, baseType: !648, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !644, file: !645, line: 39, baseType: !650, size: 64, offset: 64)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !630, file: !627, line: 94, baseType: !629, size: 64, offset: 192)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !630, file: !627, line: 95, baseType: !653, size: 128, offset: 256)
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !627, line: 47, size: 128, elements: !654)
!654 = !{!655, !664}
!655 = !DIDerivedType(tag: DW_TAG_member, scope: !653, file: !627, line: 48, baseType: !656, size: 64)
!656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !653, file: !627, line: 48, size: 64, elements: !657)
!657 = !{!658, !663}
!658 = !DIDerivedType(tag: DW_TAG_member, scope: !656, file: !627, line: 49, baseType: !659, size: 64)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !656, file: !627, line: 49, size: 64, elements: !660)
!660 = !{!661, !662}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !659, file: !627, line: 50, baseType: !296, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !659, file: !627, line: 50, baseType: !296, size: 32, offset: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !656, file: !627, line: 52, baseType: !152, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !653, file: !627, line: 54, baseType: !665, size: 64, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !630, file: !627, line: 96, baseType: !668, size: 64, offset: 384)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !54, line: 610, size: 4224, elements: !670)
!670 = !{!671, !672, !673, !681, !688, !689, !833, !3032, !3033, !3034, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3296, !3304, !3305, !3306, !3316, !3317, !3318, !3319}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !669, file: !54, line: 611, baseType: !564, size: 16)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !669, file: !54, line: 612, baseType: !212, size: 16, offset: 16)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !669, file: !54, line: 613, baseType: !674, size: 32, offset: 32)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !675, line: 23, baseType: !676)
!675 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !675, line: 21, size: 32, elements: !677)
!677 = !{!678}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !676, file: !675, line: 22, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !151, line: 32, baseType: !680)
!680 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !556, line: 49, baseType: !7)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !669, file: !54, line: 614, baseType: !682, size: 32, offset: 64)
!682 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !675, line: 28, baseType: !683)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !675, line: 26, size: 32, elements: !684)
!684 = !{!685}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !683, file: !675, line: 27, baseType: !686, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !151, line: 33, baseType: !687)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !556, line: 50, baseType: !7)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !669, file: !54, line: 615, baseType: !7, size: 32, offset: 96)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !669, file: !54, line: 622, baseType: !690, size: 64, offset: 128)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !692)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !54, line: 1864, size: 1536, align: 512, elements: !693)
!693 = !{!694, !698, !711, !715, !721, !725, !729, !733, !737, !741, !745, !746, !752, !756, !780, !809, !813, !819, !824, !828, !829}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !692, file: !54, line: 1865, baseType: !695, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DISubroutineType(types: !697)
!697 = !{!629, !668, !629, !7}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !692, file: !54, line: 1866, baseType: !699, size: 64, offset: 64)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DISubroutineType(types: !701)
!701 = !{!185, !629, !668, !702}
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !704, line: 10, size: 128, elements: !705)
!704 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!705 = !{!706, !710}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !703, file: !704, line: 11, baseType: !707, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DISubroutineType(types: !709)
!709 = !{null, !138}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !703, file: !704, line: 12, baseType: !138, size: 64, offset: 64)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !692, file: !54, line: 1867, baseType: !712, size: 64, offset: 128)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DISubroutineType(types: !714)
!714 = !{!197, !668, !197}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !692, file: !54, line: 1868, baseType: !716, size: 64, offset: 192)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DISubroutineType(types: !718)
!718 = !{!719, !668, !197}
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !54, line: 581, flags: DIFlagFwdDecl)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !692, file: !54, line: 1870, baseType: !722, size: 64, offset: 256)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DISubroutineType(types: !724)
!724 = !{!197, !629, !430, !197}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !692, file: !54, line: 1872, baseType: !726, size: 64, offset: 320)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DISubroutineType(types: !728)
!728 = !{!197, !668, !629, !564, !262}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !692, file: !54, line: 1873, baseType: !730, size: 64, offset: 384)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DISubroutineType(types: !732)
!732 = !{!197, !629, !668, !629}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !692, file: !54, line: 1874, baseType: !734, size: 64, offset: 448)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DISubroutineType(types: !736)
!736 = !{!197, !668, !629}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !692, file: !54, line: 1875, baseType: !738, size: 64, offset: 512)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DISubroutineType(types: !740)
!740 = !{!197, !668, !629, !185}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !692, file: !54, line: 1876, baseType: !742, size: 64, offset: 576)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DISubroutineType(types: !744)
!744 = !{!197, !668, !629, !564}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !692, file: !54, line: 1877, baseType: !734, size: 64, offset: 640)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !692, file: !54, line: 1878, baseType: !747, size: 64, offset: 704)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DISubroutineType(types: !749)
!749 = !{!197, !668, !629, !564, !750}
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !151, line: 16, baseType: !751)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !151, line: 13, baseType: !296)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !692, file: !54, line: 1879, baseType: !753, size: 64, offset: 768)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DISubroutineType(types: !755)
!755 = !{!197, !668, !629, !668, !629, !7}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !692, file: !54, line: 1881, baseType: !757, size: 64, offset: 832)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DISubroutineType(types: !759)
!759 = !{!197, !629, !760}
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !54, line: 219, size: 640, elements: !762)
!762 = !{!763, !764, !765, !766, !767, !770, !777, !778, !779}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !761, file: !54, line: 220, baseType: !7, size: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !761, file: !54, line: 221, baseType: !564, size: 16, offset: 32)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !761, file: !54, line: 222, baseType: !674, size: 32, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !761, file: !54, line: 223, baseType: !682, size: 32, offset: 96)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !761, file: !54, line: 224, baseType: !768, size: 64, offset: 128)
!768 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !151, line: 46, baseType: !769)
!769 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !556, line: 88, baseType: !375)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !761, file: !54, line: 225, baseType: !771, size: 128, offset: 192)
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !772, line: 13, size: 128, elements: !773)
!772 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!773 = !{!774, !776}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !771, file: !772, line: 14, baseType: !775, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !772, line: 8, baseType: !374)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !771, file: !772, line: 15, baseType: !558, size: 64, offset: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !761, file: !54, line: 226, baseType: !771, size: 128, offset: 320)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !761, file: !54, line: 227, baseType: !771, size: 128, offset: 448)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !761, file: !54, line: 234, baseType: !599, size: 64, offset: 576)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !692, file: !54, line: 1882, baseType: !781, size: 64, offset: 896)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DISubroutineType(types: !783)
!783 = !{!197, !784, !786, !296, !7}
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !621)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !788, line: 22, size: 1152, elements: !789)
!788 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!789 = !{!790, !791, !792, !793, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !787, file: !788, line: 23, baseType: !296, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !787, file: !788, line: 24, baseType: !564, size: 16, offset: 32)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !787, file: !788, line: 25, baseType: !7, size: 32, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !787, file: !788, line: 26, baseType: !794, size: 32, offset: 96)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !151, line: 104, baseType: !296)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !787, file: !788, line: 27, baseType: !152, size: 64, offset: 128)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !787, file: !788, line: 28, baseType: !152, size: 64, offset: 192)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !787, file: !788, line: 37, baseType: !152, size: 64, offset: 256)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !787, file: !788, line: 38, baseType: !750, size: 32, offset: 320)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !787, file: !788, line: 39, baseType: !750, size: 32, offset: 352)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !787, file: !788, line: 40, baseType: !674, size: 32, offset: 384)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !787, file: !788, line: 41, baseType: !682, size: 32, offset: 416)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !787, file: !788, line: 42, baseType: !768, size: 64, offset: 448)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !787, file: !788, line: 43, baseType: !771, size: 128, offset: 512)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !787, file: !788, line: 44, baseType: !771, size: 128, offset: 640)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !787, file: !788, line: 45, baseType: !771, size: 128, offset: 768)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !787, file: !788, line: 46, baseType: !771, size: 128, offset: 896)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !787, file: !788, line: 47, baseType: !152, size: 64, offset: 1024)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !787, file: !788, line: 48, baseType: !152, size: 64, offset: 1088)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !692, file: !54, line: 1883, baseType: !810, size: 64, offset: 960)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DISubroutineType(types: !812)
!812 = !{!554, !629, !430, !569}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !692, file: !54, line: 1884, baseType: !814, size: 64, offset: 1024)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DISubroutineType(types: !816)
!816 = !{!197, !668, !817, !152, !152}
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !54, line: 50, flags: DIFlagFwdDecl)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !692, file: !54, line: 1886, baseType: !820, size: 64, offset: 1088)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DISubroutineType(types: !822)
!822 = !{!197, !668, !823, !197}
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !692, file: !54, line: 1887, baseType: !825, size: 64, offset: 1152)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DISubroutineType(types: !827)
!827 = !{!197, !668, !629, !599, !7, !564}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !692, file: !54, line: 1890, baseType: !742, size: 64, offset: 1216)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !692, file: !54, line: 1891, baseType: !830, size: 64, offset: 1280)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DISubroutineType(types: !832)
!832 = !{!197, !668, !719, !197}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !669, file: !54, line: 623, baseType: !834, size: 64, offset: 192)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !54, line: 1416, size: 9472, elements: !836)
!836 = !{!837, !838, !839, !840, !841, !842, !886, !2639, !2721, !2804, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2820, !2824, !2825, !2828, !2829, !2832, !2833, !2834, !2875, !2902, !2903, !2904, !2905, !2906, !2907, !2910, !2912, !2919, !2920, !2922, !2923, !2924, !2983, !2984, !2999, !3000, !3001, !3002, !3003, !3006, !3007, !3008, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !835, file: !54, line: 1417, baseType: !247, size: 128)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !835, file: !54, line: 1418, baseType: !750, size: 32, offset: 128)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !835, file: !54, line: 1419, baseType: !204, size: 8, offset: 160)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !835, file: !54, line: 1420, baseType: !163, size: 64, offset: 192)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !835, file: !54, line: 1421, baseType: !768, size: 64, offset: 256)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !835, file: !54, line: 1422, baseType: !843, size: 64, offset: 320)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !54, line: 2228, size: 576, elements: !845)
!845 = !{!846, !847, !848, !855, !859, !863, !867, !871, !872, !876, !879, !880, !881, !883, !884, !885}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !844, file: !54, line: 2229, baseType: !185, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !844, file: !54, line: 2230, baseType: !197, size: 32, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !844, file: !54, line: 2238, baseType: !849, size: 64, offset: 128)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DISubroutineType(types: !851)
!851 = !{!197, !852}
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !854, line: 28, flags: DIFlagFwdDecl)
!854 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!855 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !844, file: !54, line: 2239, baseType: !856, size: 64, offset: 192)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !858)
!858 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !54, line: 70, flags: DIFlagFwdDecl)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !844, file: !54, line: 2240, baseType: !860, size: 64, offset: 256)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DISubroutineType(types: !862)
!862 = !{!629, !843, !197, !185, !138}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !844, file: !54, line: 2242, baseType: !864, size: 64, offset: 320)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DISubroutineType(types: !866)
!866 = !{null, !834}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !844, file: !54, line: 2243, baseType: !868, size: 64, offset: 384)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !870, line: 76, flags: DIFlagFwdDecl)
!870 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!871 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !844, file: !54, line: 2244, baseType: !843, size: 64, offset: 448)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !844, file: !54, line: 2245, baseType: !873, size: 64, offset: 512)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !151, line: 182, size: 64, elements: !874)
!874 = !{!875}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !873, file: !151, line: 183, baseType: !314, size: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !844, file: !54, line: 2247, baseType: !877, offset: 576)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !878, line: 187, elements: !497)
!878 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!879 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !844, file: !54, line: 2248, baseType: !877, offset: 576)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !844, file: !54, line: 2249, baseType: !877, offset: 576)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !844, file: !54, line: 2250, baseType: !882, offset: 576)
!882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !877, elements: !524)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !844, file: !54, line: 2252, baseType: !877, offset: 576)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !844, file: !54, line: 2253, baseType: !877, offset: 576)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !844, file: !54, line: 2254, baseType: !877, offset: 576)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !835, file: !54, line: 1423, baseType: !887, size: 64, offset: 384)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !889)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !54, line: 1935, size: 1472, elements: !890)
!890 = !{!891, !895, !899, !900, !904, !910, !914, !915, !916, !920, !924, !925, !926, !927, !933, !938, !939, !946, !947, !948, !949, !2623, !2638}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !889, file: !54, line: 1936, baseType: !892, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{!668, !834}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !889, file: !54, line: 1937, baseType: !896, size: 64, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{null, !668}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !889, file: !54, line: 1938, baseType: !896, size: 64, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !889, file: !54, line: 1940, baseType: !901, size: 64, offset: 192)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DISubroutineType(types: !903)
!903 = !{null, !668, !197}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !889, file: !54, line: 1941, baseType: !905, size: 64, offset: 256)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = !DISubroutineType(types: !907)
!907 = !{!197, !668, !908}
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !24, line: 40, flags: DIFlagFwdDecl)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !889, file: !54, line: 1942, baseType: !911, size: 64, offset: 320)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!197, !668}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !889, file: !54, line: 1943, baseType: !896, size: 64, offset: 384)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !889, file: !54, line: 1944, baseType: !864, size: 64, offset: 448)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !889, file: !54, line: 1945, baseType: !917, size: 64, offset: 512)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{!197, !834, !197}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !889, file: !54, line: 1946, baseType: !921, size: 64, offset: 576)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!197, !834}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !889, file: !54, line: 1947, baseType: !921, size: 64, offset: 640)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !889, file: !54, line: 1948, baseType: !921, size: 64, offset: 704)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !889, file: !54, line: 1949, baseType: !921, size: 64, offset: 768)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !889, file: !54, line: 1950, baseType: !928, size: 64, offset: 832)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{!197, !629, !931}
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !54, line: 57, flags: DIFlagFwdDecl)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !889, file: !54, line: 1951, baseType: !934, size: 64, offset: 896)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DISubroutineType(types: !936)
!936 = !{!197, !834, !937, !430}
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !889, file: !54, line: 1952, baseType: !864, size: 64, offset: 960)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !889, file: !54, line: 1954, baseType: !940, size: 64, offset: 1024)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DISubroutineType(types: !942)
!942 = !{!197, !943, !629}
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !945, line: 539, flags: DIFlagFwdDecl)
!945 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!946 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !889, file: !54, line: 1955, baseType: !940, size: 64, offset: 1088)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !889, file: !54, line: 1956, baseType: !940, size: 64, offset: 1152)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !889, file: !54, line: 1957, baseType: !940, size: 64, offset: 1216)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !889, file: !54, line: 1963, baseType: !950, size: 64, offset: 1280)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DISubroutineType(types: !952)
!952 = !{!197, !834, !953, !229}
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !955, line: 68, size: 512, align: 128, elements: !956)
!955 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!956 = !{!957, !958, !2615, !2622}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !954, file: !955, line: 69, baseType: !163, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, scope: !954, file: !955, line: 77, baseType: !959, size: 320, offset: 64)
!959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !954, file: !955, line: 77, size: 320, elements: !960)
!960 = !{!961, !1140, !1144, !1172, !1180, !1186, !2546, !2614}
!961 = !DIDerivedType(tag: DW_TAG_member, scope: !959, file: !955, line: 78, baseType: !962, size: 320)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !959, file: !955, line: 78, size: 320, elements: !963)
!963 = !{!964, !965, !1138, !1139}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !962, file: !955, line: 84, baseType: !247, size: 128)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !962, file: !955, line: 86, baseType: !966, size: 64, offset: 128)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !54, line: 451, size: 1216, align: 64, elements: !968)
!968 = !{!969, !970, !977, !978, !983, !998, !1007, !1008, !1009, !1010, !1131, !1132, !1135, !1136, !1137}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !967, file: !54, line: 452, baseType: !668, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !967, file: !54, line: 453, baseType: !971, size: 128, offset: 64)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !972, line: 292, size: 128, elements: !973)
!972 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!973 = !{!974, !975, !976}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !971, file: !972, line: 293, baseType: !483)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !971, file: !972, line: 295, baseType: !229, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !971, file: !972, line: 296, baseType: !138, size: 64, offset: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !967, file: !54, line: 454, baseType: !229, size: 32, offset: 192)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !967, file: !54, line: 455, baseType: !979, size: 32, offset: 224)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !151, line: 168, baseType: !980)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !151, line: 166, size: 32, elements: !981)
!981 = !{!982}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !980, file: !151, line: 167, baseType: !197, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !967, file: !54, line: 460, baseType: !984, size: 128, offset: 256)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !985, line: 125, size: 128, elements: !986)
!985 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!986 = !{!987, !997}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !984, file: !985, line: 126, baseType: !988, size: 64)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !985, line: 31, size: 64, elements: !989)
!989 = !{!990}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !988, file: !985, line: 32, baseType: !991, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !985, line: 24, size: 192, align: 64, elements: !993)
!993 = !{!994, !995, !996}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !992, file: !985, line: 25, baseType: !163, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !992, file: !985, line: 26, baseType: !991, size: 64, offset: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !992, file: !985, line: 27, baseType: !991, size: 64, offset: 128)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !984, file: !985, line: 127, baseType: !991, size: 64, offset: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !967, file: !54, line: 461, baseType: !999, size: 256, offset: 384)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1000, line: 35, size: 256, elements: !1001)
!1000 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1001 = !{!1002, !1003, !1004, !1006}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !999, file: !1000, line: 36, baseType: !367, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !999, file: !1000, line: 42, baseType: !367, size: 64, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !999, file: !1000, line: 46, baseType: !1005, offset: 128)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !484, line: 29, baseType: !491)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !999, file: !1000, line: 47, baseType: !247, size: 128, offset: 128)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !967, file: !54, line: 462, baseType: !163, size: 64, offset: 640)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !967, file: !54, line: 463, baseType: !163, size: 64, offset: 704)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !967, file: !54, line: 464, baseType: !163, size: 64, offset: 768)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !967, file: !54, line: 465, baseType: !1011, size: 64, offset: 832)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !54, line: 367, size: 1408, elements: !1014)
!1014 = !{!1015, !1019, !1023, !1027, !1031, !1035, !1041, !1047, !1051, !1056, !1060, !1064, !1068, !1095, !1099, !1105, !1106, !1107, !1111, !1116, !1120, !1127}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1013, file: !54, line: 368, baseType: !1016, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!197, !953, !908}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1013, file: !54, line: 369, baseType: !1020, size: 64, offset: 64)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!197, !599, !953}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1013, file: !54, line: 372, baseType: !1024, size: 64, offset: 128)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!197, !966, !908}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1013, file: !54, line: 375, baseType: !1028, size: 64, offset: 192)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!197, !953}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1013, file: !54, line: 381, baseType: !1032, size: 64, offset: 256)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!197, !599, !966, !250, !7}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1013, file: !54, line: 383, baseType: !1036, size: 64, offset: 320)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{null, !1039}
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !54, line: 290, flags: DIFlagFwdDecl)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1013, file: !54, line: 385, baseType: !1042, size: 64, offset: 384)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{!197, !599, !966, !768, !7, !7, !1045, !1046}
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1013, file: !54, line: 388, baseType: !1048, size: 64, offset: 448)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!197, !599, !966, !768, !7, !7, !953, !138}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1013, file: !54, line: 393, baseType: !1052, size: 64, offset: 512)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!1055, !966, !1055}
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !151, line: 125, baseType: !152)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1013, file: !54, line: 394, baseType: !1057, size: 64, offset: 576)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{null, !953, !7, !7}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1013, file: !54, line: 395, baseType: !1061, size: 64, offset: 640)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!197, !953, !229}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1013, file: !54, line: 396, baseType: !1065, size: 64, offset: 704)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{null, !953}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1013, file: !54, line: 397, baseType: !1069, size: 64, offset: 768)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!554, !1072, !1093}
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !54, line: 320, size: 384, elements: !1074)
!1074 = !{!1075, !1076, !1077, !1081, !1082, !1083, !1085, !1086}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1073, file: !54, line: 321, baseType: !599, size: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1073, file: !54, line: 326, baseType: !768, size: 64, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1073, file: !54, line: 327, baseType: !1078, size: 64, offset: 128)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{null, !1072, !558, !558}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1073, file: !54, line: 328, baseType: !138, size: 64, offset: 192)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1073, file: !54, line: 329, baseType: !197, size: 32, offset: 256)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1073, file: !54, line: 330, baseType: !1084, size: 16, offset: 288)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !153, line: 19, baseType: !211)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1073, file: !54, line: 331, baseType: !1084, size: 16, offset: 304)
!1086 = !DIDerivedType(tag: DW_TAG_member, scope: !1073, file: !54, line: 332, baseType: !1087, size: 64, offset: 320)
!1087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1073, file: !54, line: 332, size: 64, elements: !1088)
!1088 = !{!1089, !1090}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1087, file: !54, line: 333, baseType: !7, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1087, file: !54, line: 334, baseType: !1091, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !54, line: 334, flags: DIFlagFwdDecl)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !54, line: 64, flags: DIFlagFwdDecl)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1013, file: !54, line: 402, baseType: !1096, size: 64, offset: 832)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!197, !966, !953, !953, !16}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1013, file: !54, line: 404, baseType: !1100, size: 64, offset: 896)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!262, !953, !1103}
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1104, line: 305, baseType: !7)
!1104 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1013, file: !54, line: 405, baseType: !1065, size: 64, offset: 960)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1013, file: !54, line: 406, baseType: !1028, size: 64, offset: 1024)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1013, file: !54, line: 407, baseType: !1108, size: 64, offset: 1088)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!197, !953, !163, !163}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1013, file: !54, line: 409, baseType: !1112, size: 64, offset: 1152)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{null, !953, !1115, !1115}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1013, file: !54, line: 410, baseType: !1117, size: 64, offset: 1216)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1118 = !DISubroutineType(types: !1119)
!1119 = !{!197, !966, !953}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1013, file: !54, line: 413, baseType: !1121, size: 64, offset: 1280)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!197, !1124, !599, !1126}
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !54, line: 61, flags: DIFlagFwdDecl)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1013, file: !54, line: 415, baseType: !1128, size: 64, offset: 1344)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{null, !599}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !967, file: !54, line: 466, baseType: !163, size: 64, offset: 896)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !967, file: !54, line: 467, baseType: !1133, size: 32, offset: 960)
!1133 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1134, line: 8, baseType: !296)
!1134 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !967, file: !54, line: 468, baseType: !483, offset: 992)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !967, file: !54, line: 469, baseType: !247, size: 128, offset: 1024)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !967, file: !54, line: 470, baseType: !138, size: 64, offset: 1152)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !962, file: !955, line: 87, baseType: !163, size: 64, offset: 192)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !962, file: !955, line: 94, baseType: !163, size: 64, offset: 256)
!1140 = !DIDerivedType(tag: DW_TAG_member, scope: !959, file: !955, line: 96, baseType: !1141, size: 64)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !959, file: !955, line: 96, size: 64, elements: !1142)
!1142 = !{!1143}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1141, file: !955, line: 101, baseType: !150, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_member, scope: !959, file: !955, line: 103, baseType: !1145, size: 320)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !959, file: !955, line: 103, size: 320, elements: !1146)
!1146 = !{!1147, !1157, !1160, !1161}
!1147 = !DIDerivedType(tag: DW_TAG_member, scope: !1145, file: !955, line: 104, baseType: !1148, size: 128)
!1148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1145, file: !955, line: 104, size: 128, elements: !1149)
!1149 = !{!1150, !1151}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1148, file: !955, line: 105, baseType: !247, size: 128)
!1151 = !DIDerivedType(tag: DW_TAG_member, scope: !1148, file: !955, line: 106, baseType: !1152, size: 128)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1148, file: !955, line: 106, size: 128, elements: !1153)
!1153 = !{!1154, !1155, !1156}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1152, file: !955, line: 107, baseType: !953, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1152, file: !955, line: 109, baseType: !197, size: 32, offset: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1152, file: !955, line: 110, baseType: !197, size: 32, offset: 96)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1145, file: !955, line: 117, baseType: !1158, size: 64, offset: 128)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !955, line: 117, flags: DIFlagFwdDecl)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1145, file: !955, line: 119, baseType: !138, size: 64, offset: 192)
!1161 = !DIDerivedType(tag: DW_TAG_member, scope: !1145, file: !955, line: 120, baseType: !1162, size: 64, offset: 256)
!1162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1145, file: !955, line: 120, size: 64, elements: !1163)
!1163 = !{!1164, !1165, !1166}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1162, file: !955, line: 121, baseType: !138, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1162, file: !955, line: 122, baseType: !163, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, scope: !1162, file: !955, line: 123, baseType: !1167, size: 32)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1162, file: !955, line: 123, size: 32, elements: !1168)
!1168 = !{!1169, !1170, !1171}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1167, file: !955, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1167, file: !955, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1167, file: !955, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1172 = !DIDerivedType(tag: DW_TAG_member, scope: !959, file: !955, line: 130, baseType: !1173, size: 192)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !959, file: !955, line: 130, size: 192, elements: !1174)
!1174 = !{!1175, !1176, !1177, !1178, !1179}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1173, file: !955, line: 131, baseType: !163, size: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1173, file: !955, line: 134, baseType: !204, size: 8, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1173, file: !955, line: 135, baseType: !204, size: 8, offset: 72)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1173, file: !955, line: 136, baseType: !979, size: 32, offset: 96)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1173, file: !955, line: 137, baseType: !7, size: 32, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_member, scope: !959, file: !955, line: 139, baseType: !1181, size: 256)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !959, file: !955, line: 139, size: 256, elements: !1182)
!1182 = !{!1183, !1184, !1185}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1181, file: !955, line: 140, baseType: !163, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1181, file: !955, line: 141, baseType: !979, size: 32, offset: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1181, file: !955, line: 143, baseType: !247, size: 128, offset: 128)
!1186 = !DIDerivedType(tag: DW_TAG_member, scope: !959, file: !955, line: 145, baseType: !1187, size: 256)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !959, file: !955, line: 145, size: 256, elements: !1188)
!1188 = !{!1189, !1190, !1192, !1193, !2545}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1187, file: !955, line: 146, baseType: !163, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1187, file: !955, line: 147, baseType: !1191, size: 64, offset: 64)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !945, line: 509, baseType: !953)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1187, file: !955, line: 148, baseType: !163, size: 64, offset: 128)
!1193 = !DIDerivedType(tag: DW_TAG_member, scope: !1187, file: !955, line: 149, baseType: !1194, size: 64, offset: 192)
!1194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1187, file: !955, line: 149, size: 64, elements: !1195)
!1195 = !{!1196, !2544}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1194, file: !955, line: 150, baseType: !1197, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !955, line: 388, size: 7296, elements: !1199)
!1199 = !{!1200, !2540}
!1200 = !DIDerivedType(tag: DW_TAG_member, scope: !1198, file: !955, line: 389, baseType: !1201, size: 7296)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1198, file: !955, line: 389, size: 7296, elements: !1202)
!1202 = !{!1203, !1321, !1322, !1323, !1327, !1328, !1329, !1330, !1331, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1372, !1380, !1383, !1429, !1430, !2524, !2525, !2528, !2529, !2530, !2533, !2534, !2535, !2538, !2539}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1201, file: !955, line: 390, baseType: !1204, size: 64)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !955, line: 305, size: 1472, elements: !1206)
!1206 = !{!1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1221, !1222, !1227, !1228, !1231, !1315, !1316, !1317, !1318, !1319}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1205, file: !955, line: 308, baseType: !163, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1205, file: !955, line: 309, baseType: !163, size: 64, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1205, file: !955, line: 313, baseType: !1204, size: 64, offset: 128)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1205, file: !955, line: 313, baseType: !1204, size: 64, offset: 192)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1205, file: !955, line: 315, baseType: !992, size: 192, align: 64, offset: 256)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1205, file: !955, line: 323, baseType: !163, size: 64, offset: 448)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1205, file: !955, line: 327, baseType: !1197, size: 64, offset: 512)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1205, file: !955, line: 333, baseType: !1215, size: 64, offset: 576)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !945, line: 284, baseType: !1216)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !945, line: 284, size: 64, elements: !1217)
!1217 = !{!1218}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1216, file: !945, line: 284, baseType: !1219, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1220, line: 19, baseType: !163)
!1220 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1205, file: !955, line: 334, baseType: !163, size: 64, offset: 640)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1205, file: !955, line: 343, baseType: !1223, size: 256, offset: 704)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1205, file: !955, line: 340, size: 256, elements: !1224)
!1224 = !{!1225, !1226}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1223, file: !955, line: 341, baseType: !992, size: 192, align: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1223, file: !955, line: 342, baseType: !163, size: 64, offset: 192)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1205, file: !955, line: 351, baseType: !247, size: 128, offset: 960)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1205, file: !955, line: 353, baseType: !1229, size: 64, offset: 1088)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1230 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !955, line: 353, flags: DIFlagFwdDecl)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1205, file: !955, line: 356, baseType: !1232, size: 64, offset: 1152)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1234)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !24, line: 557, size: 832, elements: !1235)
!1235 = !{!1236, !1240, !1241, !1245, !1249, !1289, !1293, !1297, !1301, !1302, !1303, !1307, !1311}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1234, file: !24, line: 558, baseType: !1237, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{null, !1204}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1234, file: !24, line: 559, baseType: !1237, size: 64, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1234, file: !24, line: 560, baseType: !1242, size: 64, offset: 128)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DISubroutineType(types: !1244)
!1244 = !{!197, !1204, !163}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1234, file: !24, line: 561, baseType: !1246, size: 64, offset: 192)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!197, !1204}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1234, file: !24, line: 562, baseType: !1250, size: 64, offset: 256)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!1253, !1254}
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !955, line: 682, baseType: !7)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !24, line: 508, size: 768, elements: !1256)
!1256 = !{!1257, !1258, !1259, !1260, !1261, !1262, !1269, !1276, !1282, !1283, !1284, !1286, !1288}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1255, file: !24, line: 509, baseType: !1204, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1255, file: !24, line: 510, baseType: !7, size: 32, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1255, file: !24, line: 511, baseType: !229, size: 32, offset: 96)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1255, file: !24, line: 512, baseType: !163, size: 64, offset: 128)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1255, file: !24, line: 513, baseType: !163, size: 64, offset: 192)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1255, file: !24, line: 514, baseType: !1263, size: 64, offset: 256)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !945, line: 385, baseType: !1265)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !945, line: 385, size: 64, elements: !1266)
!1266 = !{!1267}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1265, file: !945, line: 385, baseType: !1268, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1220, line: 15, baseType: !163)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1255, file: !24, line: 516, baseType: !1270, size: 64, offset: 320)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !945, line: 359, baseType: !1272)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !945, line: 359, size: 64, elements: !1273)
!1273 = !{!1274}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1272, file: !945, line: 359, baseType: !1275, size: 64)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1220, line: 16, baseType: !163)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1255, file: !24, line: 519, baseType: !1277, size: 64, offset: 384)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1220, line: 21, baseType: !1278)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1220, line: 21, size: 64, elements: !1279)
!1279 = !{!1280}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1278, file: !1220, line: 21, baseType: !1281, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1220, line: 14, baseType: !163)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1255, file: !24, line: 521, baseType: !953, size: 64, offset: 448)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1255, file: !24, line: 522, baseType: !953, size: 64, offset: 512)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1255, file: !24, line: 528, baseType: !1285, size: 64, offset: 576)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1255, file: !24, line: 532, baseType: !1287, size: 64, offset: 640)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1255, file: !24, line: 536, baseType: !1191, size: 64, offset: 704)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1234, file: !24, line: 563, baseType: !1290, size: 64, offset: 320)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!1253, !1254, !23}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1234, file: !24, line: 565, baseType: !1294, size: 64, offset: 384)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{null, !1254, !163, !163}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1234, file: !24, line: 567, baseType: !1298, size: 64, offset: 448)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!163, !1204}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1234, file: !24, line: 571, baseType: !1250, size: 64, offset: 512)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1234, file: !24, line: 574, baseType: !1250, size: 64, offset: 576)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1234, file: !24, line: 579, baseType: !1304, size: 64, offset: 640)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{!197, !1204, !163, !138, !197, !197}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1234, file: !24, line: 585, baseType: !1308, size: 64, offset: 704)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{!185, !1204}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1234, file: !24, line: 615, baseType: !1312, size: 64, offset: 768)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!953, !1204, !163}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1205, file: !955, line: 359, baseType: !163, size: 64, offset: 1216)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1205, file: !955, line: 361, baseType: !599, size: 64, offset: 1280)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1205, file: !955, line: 362, baseType: !138, size: 64, offset: 1344)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1205, file: !955, line: 365, baseType: !367, size: 64, offset: 1408)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1205, file: !955, line: 373, baseType: !1320, offset: 1472)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !955, line: 296, elements: !497)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1201, file: !955, line: 391, baseType: !988, size: 64, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1201, file: !955, line: 392, baseType: !152, size: 64, offset: 128)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1201, file: !955, line: 394, baseType: !1324, size: 64, offset: 192)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!163, !599, !163, !163, !163, !163}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1201, file: !955, line: 398, baseType: !163, size: 64, offset: 256)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1201, file: !955, line: 399, baseType: !163, size: 64, offset: 320)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1201, file: !955, line: 405, baseType: !163, size: 64, offset: 384)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1201, file: !955, line: 406, baseType: !163, size: 64, offset: 448)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1201, file: !955, line: 407, baseType: !1332, size: 64, offset: 512)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !945, line: 286, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !945, line: 286, size: 64, elements: !1335)
!1335 = !{!1336}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1334, file: !945, line: 286, baseType: !1337, size: 64)
!1337 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1220, line: 18, baseType: !163)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1201, file: !955, line: 416, baseType: !979, size: 32, offset: 576)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1201, file: !955, line: 428, baseType: !979, size: 32, offset: 608)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1201, file: !955, line: 437, baseType: !979, size: 32, offset: 640)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1201, file: !955, line: 447, baseType: !979, size: 32, offset: 672)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1201, file: !955, line: 450, baseType: !367, size: 64, offset: 704)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1201, file: !955, line: 452, baseType: !197, size: 32, offset: 768)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1201, file: !955, line: 454, baseType: !483, offset: 800)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1201, file: !955, line: 457, baseType: !999, size: 256, offset: 832)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1201, file: !955, line: 459, baseType: !247, size: 128, offset: 1088)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1201, file: !955, line: 466, baseType: !163, size: 64, offset: 1216)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1201, file: !955, line: 467, baseType: !163, size: 64, offset: 1280)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1201, file: !955, line: 469, baseType: !163, size: 64, offset: 1344)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1201, file: !955, line: 470, baseType: !163, size: 64, offset: 1408)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1201, file: !955, line: 471, baseType: !369, size: 64, offset: 1472)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1201, file: !955, line: 472, baseType: !163, size: 64, offset: 1536)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1201, file: !955, line: 473, baseType: !163, size: 64, offset: 1600)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1201, file: !955, line: 474, baseType: !163, size: 64, offset: 1664)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1201, file: !955, line: 475, baseType: !163, size: 64, offset: 1728)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1201, file: !955, line: 477, baseType: !483, offset: 1792)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1201, file: !955, line: 478, baseType: !163, size: 64, offset: 1792)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1201, file: !955, line: 478, baseType: !163, size: 64, offset: 1856)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1201, file: !955, line: 478, baseType: !163, size: 64, offset: 1920)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1201, file: !955, line: 478, baseType: !163, size: 64, offset: 1984)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1201, file: !955, line: 479, baseType: !163, size: 64, offset: 2048)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1201, file: !955, line: 479, baseType: !163, size: 64, offset: 2112)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1201, file: !955, line: 479, baseType: !163, size: 64, offset: 2176)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1201, file: !955, line: 480, baseType: !163, size: 64, offset: 2240)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1201, file: !955, line: 480, baseType: !163, size: 64, offset: 2304)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1201, file: !955, line: 480, baseType: !163, size: 64, offset: 2368)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1201, file: !955, line: 480, baseType: !163, size: 64, offset: 2432)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1201, file: !955, line: 482, baseType: !1369, size: 2816, offset: 2496)
!1369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 2816, elements: !1370)
!1370 = !{!1371}
!1371 = !DISubrange(count: 44)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1201, file: !955, line: 488, baseType: !1373, size: 256, offset: 5312)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1374, line: 60, size: 256, elements: !1375)
!1374 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1375 = !{!1376}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1373, file: !1374, line: 61, baseType: !1377, size: 256)
!1377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 256, elements: !1378)
!1378 = !{!1379}
!1379 = !DISubrange(count: 4)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1201, file: !955, line: 490, baseType: !1381, size: 64, offset: 5568)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !955, line: 490, flags: DIFlagFwdDecl)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1201, file: !955, line: 493, baseType: !1384, size: 896, offset: 5632)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1385, line: 53, baseType: !1386)
!1385 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1385, line: 13, size: 896, elements: !1387)
!1387 = !{!1388, !1389, !1390, !1391, !1394, !1395, !1402, !1403, !1423, !1424, !1425}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1386, file: !1385, line: 18, baseType: !152, size: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1386, file: !1385, line: 28, baseType: !369, size: 64, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1386, file: !1385, line: 31, baseType: !999, size: 256, offset: 128)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1386, file: !1385, line: 32, baseType: !1392, size: 64, offset: 384)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1385, line: 32, flags: DIFlagFwdDecl)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1386, file: !1385, line: 37, baseType: !212, size: 16, offset: 448)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1386, file: !1385, line: 40, baseType: !1396, size: 192, offset: 512)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1397, line: 53, size: 192, elements: !1398)
!1397 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1398 = !{!1399, !1400, !1401}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1396, file: !1397, line: 54, baseType: !367, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1396, file: !1397, line: 55, baseType: !483, offset: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1396, file: !1397, line: 59, baseType: !247, size: 128, offset: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1386, file: !1385, line: 41, baseType: !138, size: 64, offset: 704)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1386, file: !1385, line: 42, baseType: !1404, size: 64, offset: 768)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1406)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1407, line: 13, size: 896, elements: !1408)
!1407 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1408 = !{!1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1406, file: !1407, line: 14, baseType: !138, size: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1406, file: !1407, line: 15, baseType: !163, size: 64, offset: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1406, file: !1407, line: 17, baseType: !163, size: 64, offset: 128)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1406, file: !1407, line: 17, baseType: !163, size: 64, offset: 192)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1406, file: !1407, line: 19, baseType: !558, size: 64, offset: 256)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1406, file: !1407, line: 21, baseType: !558, size: 64, offset: 320)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1406, file: !1407, line: 22, baseType: !558, size: 64, offset: 384)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1406, file: !1407, line: 23, baseType: !558, size: 64, offset: 448)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1406, file: !1407, line: 24, baseType: !558, size: 64, offset: 512)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1406, file: !1407, line: 25, baseType: !558, size: 64, offset: 576)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1406, file: !1407, line: 26, baseType: !558, size: 64, offset: 640)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1406, file: !1407, line: 27, baseType: !558, size: 64, offset: 704)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1406, file: !1407, line: 28, baseType: !558, size: 64, offset: 768)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1406, file: !1407, line: 29, baseType: !558, size: 64, offset: 832)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1386, file: !1385, line: 44, baseType: !979, size: 32, offset: 832)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1386, file: !1385, line: 50, baseType: !1084, size: 16, offset: 864)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1386, file: !1385, line: 51, baseType: !1426, size: 16, offset: 880)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !153, line: 18, baseType: !1427)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !155, line: 23, baseType: !1428)
!1428 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1201, file: !955, line: 495, baseType: !163, size: 64, offset: 6528)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1201, file: !955, line: 497, baseType: !1431, size: 64, offset: 6592)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !955, line: 381, size: 384, elements: !1433)
!1433 = !{!1434, !1435, !2523}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1432, file: !955, line: 382, baseType: !979, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1432, file: !955, line: 383, baseType: !1436, size: 128, offset: 64)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !955, line: 376, size: 128, elements: !1437)
!1437 = !{!1438, !2521}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1436, file: !955, line: 377, baseType: !1439, size: 64)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1441, line: 640, size: 48640, elements: !1442)
!1441 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1442 = !{!1443, !1449, !1451, !1452, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1469, !1487, !1498, !1581, !1582, !1583, !1594, !1595, !1597, !1598, !1599, !1600, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1678, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1716, !1718, !1719, !1720, !1732, !1733, !1734, !1735, !1736, !1737, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1761, !1766, !1950, !1951, !1952, !1953, !1957, !1960, !1963, !1966, !1969, !1973, !2074, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2120, !2121, !2122, !2123, !2124, !2129, !2130, !2131, !2134, !2135, !2138, !2141, !2144, !2147, !2179, !2182, !2183, !2262, !2263, !2266, !2267, !2270, !2271, !2272, !2276, !2277, !2278, !2291, !2292, !2293, !2303, !2308, !2311, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1440, file: !1441, line: 646, baseType: !1444, size: 128)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1445, line: 56, size: 128, elements: !1446)
!1445 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1446 = !{!1447, !1448}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1444, file: !1445, line: 57, baseType: !163, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1444, file: !1445, line: 58, baseType: !296, size: 32, offset: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1440, file: !1441, line: 649, baseType: !1450, size: 64, offset: 128)
!1450 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !558)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1440, file: !1441, line: 657, baseType: !138, size: 64, offset: 192)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1440, file: !1441, line: 658, baseType: !1453, size: 32, offset: 256)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1454, line: 113, baseType: !1455)
!1454 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1454, line: 111, size: 32, elements: !1456)
!1456 = !{!1457}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1455, file: !1454, line: 112, baseType: !979, size: 32)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1440, file: !1441, line: 660, baseType: !7, size: 32, offset: 288)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1440, file: !1441, line: 661, baseType: !7, size: 32, offset: 320)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1440, file: !1441, line: 684, baseType: !197, size: 32, offset: 352)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1440, file: !1441, line: 686, baseType: !197, size: 32, offset: 384)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1440, file: !1441, line: 687, baseType: !197, size: 32, offset: 416)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1440, file: !1441, line: 688, baseType: !197, size: 32, offset: 448)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1440, file: !1441, line: 689, baseType: !7, size: 32, offset: 480)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1440, file: !1441, line: 691, baseType: !1466, size: 64, offset: 512)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1468)
!1468 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1441, line: 691, flags: DIFlagFwdDecl)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1440, file: !1441, line: 692, baseType: !1470, size: 832, offset: 576)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1441, line: 451, size: 832, elements: !1471)
!1471 = !{!1472, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1470, file: !1441, line: 453, baseType: !1473, size: 128)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1441, line: 325, size: 128, elements: !1474)
!1474 = !{!1475, !1476}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1473, file: !1441, line: 326, baseType: !163, size: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1473, file: !1441, line: 327, baseType: !296, size: 32, offset: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1470, file: !1441, line: 454, baseType: !992, size: 192, align: 64, offset: 128)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1470, file: !1441, line: 455, baseType: !247, size: 128, offset: 320)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1470, file: !1441, line: 456, baseType: !7, size: 32, offset: 448)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1470, file: !1441, line: 458, baseType: !152, size: 64, offset: 512)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1470, file: !1441, line: 459, baseType: !152, size: 64, offset: 576)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1470, file: !1441, line: 460, baseType: !152, size: 64, offset: 640)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1470, file: !1441, line: 461, baseType: !152, size: 64, offset: 704)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1470, file: !1441, line: 463, baseType: !152, size: 64, offset: 768)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1470, file: !1441, line: 465, baseType: !1486, offset: 832)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1441, line: 415, elements: !497)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1440, file: !1441, line: 693, baseType: !1488, size: 384, offset: 1408)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1441, line: 489, size: 384, elements: !1489)
!1489 = !{!1490, !1491, !1492, !1493, !1494, !1495, !1496}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1488, file: !1441, line: 490, baseType: !247, size: 128)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1488, file: !1441, line: 491, baseType: !163, size: 64, offset: 128)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1488, file: !1441, line: 492, baseType: !163, size: 64, offset: 192)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1488, file: !1441, line: 493, baseType: !7, size: 32, offset: 256)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1488, file: !1441, line: 494, baseType: !212, size: 16, offset: 288)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1488, file: !1441, line: 495, baseType: !212, size: 16, offset: 304)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1488, file: !1441, line: 497, baseType: !1497, size: 64, offset: 320)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1440, file: !1441, line: 697, baseType: !1499, size: 1792, offset: 1792)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1441, line: 507, size: 1792, elements: !1500)
!1500 = !{!1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1578, !1579}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1499, file: !1441, line: 508, baseType: !992, size: 192, align: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1499, file: !1441, line: 515, baseType: !152, size: 64, offset: 192)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1499, file: !1441, line: 516, baseType: !152, size: 64, offset: 256)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1499, file: !1441, line: 517, baseType: !152, size: 64, offset: 320)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1499, file: !1441, line: 518, baseType: !152, size: 64, offset: 384)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1499, file: !1441, line: 519, baseType: !152, size: 64, offset: 448)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1499, file: !1441, line: 526, baseType: !373, size: 64, offset: 512)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1499, file: !1441, line: 527, baseType: !152, size: 64, offset: 576)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1499, file: !1441, line: 528, baseType: !7, size: 32, offset: 640)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1499, file: !1441, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1499, file: !1441, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1499, file: !1441, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1499, file: !1441, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1499, file: !1441, line: 563, baseType: !1515, size: 512, offset: 704)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !30, line: 118, size: 512, elements: !1516)
!1516 = !{!1517, !1525, !1526, !1531, !1574, !1575, !1576, !1577}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1515, file: !30, line: 119, baseType: !1518, size: 256)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1519, line: 9, size: 256, elements: !1520)
!1519 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1520 = !{!1521, !1522}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1518, file: !1519, line: 10, baseType: !992, size: 192, align: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1518, file: !1519, line: 11, baseType: !1523, size: 64, offset: 192)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1524, line: 29, baseType: !373)
!1524 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1515, file: !30, line: 120, baseType: !1523, size: 64, offset: 256)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1515, file: !30, line: 121, baseType: !1527, size: 64, offset: 320)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!29, !1530}
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1515, file: !30, line: 122, baseType: !1532, size: 64, offset: 384)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !30, line: 159, size: 512, align: 512, elements: !1534)
!1534 = !{!1535, !1555, !1556, !1559, !1564, !1565, !1569, !1573}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1533, file: !30, line: 160, baseType: !1536, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !30, line: 214, size: 4608, align: 512, elements: !1538)
!1538 = !{!1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1537, file: !30, line: 215, baseType: !1005)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1537, file: !30, line: 216, baseType: !7, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1537, file: !30, line: 217, baseType: !7, size: 32, offset: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1537, file: !30, line: 218, baseType: !7, size: 32, offset: 64)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1537, file: !30, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1537, file: !30, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1537, file: !30, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1537, file: !30, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1537, file: !30, line: 233, baseType: !1523, size: 64, offset: 128)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1537, file: !30, line: 234, baseType: !1530, size: 64, offset: 192)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1537, file: !30, line: 235, baseType: !1523, size: 64, offset: 256)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1537, file: !30, line: 236, baseType: !1530, size: 64, offset: 320)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1537, file: !30, line: 237, baseType: !1552, size: 4096, offset: 512)
!1552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 4096, elements: !1553)
!1553 = !{!1554}
!1554 = !DISubrange(count: 8)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1533, file: !30, line: 161, baseType: !7, size: 32, offset: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1533, file: !30, line: 162, baseType: !1557, size: 32, offset: 96)
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !151, line: 27, baseType: !1558)
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !556, line: 96, baseType: !197)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1533, file: !30, line: 163, baseType: !1560, size: 32, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !635, line: 276, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !635, line: 276, size: 32, elements: !1562)
!1562 = !{!1563}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1561, file: !635, line: 276, baseType: !639, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1533, file: !30, line: 164, baseType: !1530, size: 64, offset: 192)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1533, file: !30, line: 165, baseType: !1566, size: 128, offset: 256)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1519, line: 14, size: 128, elements: !1567)
!1567 = !{!1568}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1566, file: !1519, line: 15, baseType: !984, size: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1533, file: !30, line: 166, baseType: !1570, size: 64, offset: 384)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{!1523}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1533, file: !30, line: 167, baseType: !1523, size: 64, offset: 448)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1515, file: !30, line: 123, baseType: !271, size: 8, offset: 448)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1515, file: !30, line: 124, baseType: !271, size: 8, offset: 456)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1515, file: !30, line: 125, baseType: !271, size: 8, offset: 464)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1515, file: !30, line: 126, baseType: !271, size: 8, offset: 472)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1499, file: !1441, line: 572, baseType: !1515, size: 512, offset: 1216)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1499, file: !1441, line: 580, baseType: !1580, size: 64, offset: 1728)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1440, file: !1441, line: 721, baseType: !7, size: 32, offset: 3584)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1440, file: !1441, line: 722, baseType: !197, size: 32, offset: 3616)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1440, file: !1441, line: 723, baseType: !1584, size: 64, offset: 3648)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!1585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1586)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1587, line: 17, baseType: !1588)
!1587 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1587, line: 17, size: 64, elements: !1589)
!1589 = !{!1590}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1588, file: !1587, line: 17, baseType: !1591, size: 64)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 64, elements: !1592)
!1592 = !{!1593}
!1593 = !DISubrange(count: 1)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1440, file: !1441, line: 724, baseType: !1586, size: 64, offset: 3712)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1440, file: !1441, line: 749, baseType: !1596, offset: 3776)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1441, line: 290, elements: !497)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1440, file: !1441, line: 751, baseType: !247, size: 128, offset: 3776)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1440, file: !1441, line: 757, baseType: !1197, size: 64, offset: 3904)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1440, file: !1441, line: 758, baseType: !1197, size: 64, offset: 3968)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1440, file: !1441, line: 761, baseType: !1601, size: 320, offset: 4032)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1374, line: 34, size: 320, elements: !1602)
!1602 = !{!1603, !1604}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1601, file: !1374, line: 35, baseType: !152, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1601, file: !1374, line: 36, baseType: !1605, size: 256, offset: 64)
!1605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1204, size: 256, elements: !1378)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1440, file: !1441, line: 766, baseType: !197, size: 32, offset: 4352)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1440, file: !1441, line: 767, baseType: !197, size: 32, offset: 4384)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1440, file: !1441, line: 768, baseType: !197, size: 32, offset: 4416)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1440, file: !1441, line: 770, baseType: !197, size: 32, offset: 4448)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1440, file: !1441, line: 772, baseType: !163, size: 64, offset: 4480)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1440, file: !1441, line: 775, baseType: !7, size: 32, offset: 4544)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1440, file: !1441, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1440, file: !1441, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1440, file: !1441, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1440, file: !1441, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1440, file: !1441, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1440, file: !1441, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1440, file: !1441, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1440, file: !1441, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1440, file: !1441, line: 831, baseType: !163, size: 64, offset: 4672)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1440, file: !1441, line: 833, baseType: !1622, size: 384, offset: 4736)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !35, line: 25, size: 384, elements: !1623)
!1623 = !{!1624, !1629}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1622, file: !35, line: 26, baseType: !1625, size: 64)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{!558, !1628}
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, scope: !1622, file: !35, line: 27, baseType: !1630, size: 320, offset: 64)
!1630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1622, file: !35, line: 27, size: 320, elements: !1631)
!1631 = !{!1632, !1641, !1668}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1630, file: !35, line: 36, baseType: !1633, size: 320)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1630, file: !35, line: 29, size: 320, elements: !1634)
!1634 = !{!1635, !1636, !1637, !1638, !1639, !1640}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1633, file: !35, line: 30, baseType: !336, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1633, file: !35, line: 31, baseType: !296, size: 32, offset: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1633, file: !35, line: 32, baseType: !296, size: 32, offset: 96)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1633, file: !35, line: 33, baseType: !296, size: 32, offset: 128)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1633, file: !35, line: 34, baseType: !152, size: 64, offset: 192)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1633, file: !35, line: 35, baseType: !336, size: 64, offset: 256)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1630, file: !35, line: 46, baseType: !1642, size: 192)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1630, file: !35, line: 38, size: 192, elements: !1643)
!1643 = !{!1644, !1645, !1646, !1667}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1642, file: !35, line: 39, baseType: !1557, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1642, file: !35, line: 40, baseType: !34, size: 32, offset: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, scope: !1642, file: !35, line: 41, baseType: !1647, size: 64, offset: 64)
!1647 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1642, file: !35, line: 41, size: 64, elements: !1648)
!1648 = !{!1649, !1657}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1647, file: !35, line: 42, baseType: !1650, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1652, line: 7, size: 128, elements: !1653)
!1652 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1653 = !{!1654, !1656}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1651, file: !1652, line: 8, baseType: !1655, size: 64)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !556, line: 93, baseType: !375)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1651, file: !1652, line: 9, baseType: !375, size: 64, offset: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1647, file: !35, line: 43, baseType: !1658, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1660, line: 7, size: 64, elements: !1661)
!1660 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1661 = !{!1662, !1666}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1659, file: !1660, line: 8, baseType: !1663, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1660, line: 5, baseType: !1664)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !153, line: 20, baseType: !1665)
!1665 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !155, line: 26, baseType: !197)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1659, file: !1660, line: 9, baseType: !1664, size: 32, offset: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1642, file: !35, line: 45, baseType: !152, size: 64, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1630, file: !35, line: 54, baseType: !1669, size: 256)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1630, file: !35, line: 48, size: 256, elements: !1670)
!1670 = !{!1671, !1674, !1675, !1676, !1677}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1669, file: !35, line: 49, baseType: !1672, size: 64)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !35, line: 14, flags: DIFlagFwdDecl)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1669, file: !35, line: 50, baseType: !197, size: 32, offset: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1669, file: !35, line: 51, baseType: !197, size: 32, offset: 96)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1669, file: !35, line: 52, baseType: !163, size: 64, offset: 128)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1669, file: !35, line: 53, baseType: !163, size: 64, offset: 192)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1440, file: !1441, line: 835, baseType: !1679, size: 32, offset: 5120)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !151, line: 22, baseType: !1680)
!1680 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !556, line: 28, baseType: !197)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1440, file: !1441, line: 836, baseType: !1679, size: 32, offset: 5152)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1440, file: !1441, line: 840, baseType: !163, size: 64, offset: 5184)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1440, file: !1441, line: 849, baseType: !1439, size: 64, offset: 5248)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1440, file: !1441, line: 852, baseType: !1439, size: 64, offset: 5312)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1440, file: !1441, line: 857, baseType: !247, size: 128, offset: 5376)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1440, file: !1441, line: 858, baseType: !247, size: 128, offset: 5504)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1440, file: !1441, line: 859, baseType: !1439, size: 64, offset: 5632)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1440, file: !1441, line: 867, baseType: !247, size: 128, offset: 5696)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1440, file: !1441, line: 868, baseType: !247, size: 128, offset: 5824)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1440, file: !1441, line: 871, baseType: !1691, size: 64, offset: 5952)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !63, line: 59, size: 768, elements: !1693)
!1693 = !{!1694, !1695, !1696, !1697, !1699, !1700, !1707, !1708}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1692, file: !63, line: 61, baseType: !1453, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1692, file: !63, line: 62, baseType: !7, size: 32, offset: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1692, file: !63, line: 63, baseType: !483, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1692, file: !63, line: 65, baseType: !1698, size: 256, offset: 64)
!1698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !873, size: 256, elements: !1378)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1692, file: !63, line: 66, baseType: !873, size: 64, offset: 320)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1692, file: !63, line: 68, baseType: !1701, size: 128, offset: 384)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1702, line: 40, baseType: !1703)
!1702 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1702, line: 36, size: 128, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1703, file: !1702, line: 37, baseType: !483)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1703, file: !1702, line: 38, baseType: !247, size: 128)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1692, file: !63, line: 69, baseType: !612, size: 128, align: 64, offset: 512)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1692, file: !63, line: 70, baseType: !1709, size: 128, offset: 640)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1710, size: 128, elements: !1592)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !63, line: 54, size: 128, elements: !1711)
!1711 = !{!1712, !1713}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1710, file: !63, line: 55, baseType: !197, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1710, file: !63, line: 56, baseType: !1714, size: 64, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !63, line: 56, flags: DIFlagFwdDecl)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1440, file: !1441, line: 872, baseType: !1717, size: 512, offset: 6016)
!1717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 512, elements: !1378)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1440, file: !1441, line: 873, baseType: !247, size: 128, offset: 6528)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1440, file: !1441, line: 874, baseType: !247, size: 128, offset: 6656)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1440, file: !1441, line: 876, baseType: !1721, size: 64, offset: 6784)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1723, line: 26, size: 192, elements: !1724)
!1723 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1724 = !{!1725, !1726}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1722, file: !1723, line: 27, baseType: !7, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1722, file: !1723, line: 28, baseType: !1727, size: 128, offset: 64)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1728, line: 43, size: 128, elements: !1729)
!1728 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1729 = !{!1730, !1731}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1727, file: !1728, line: 44, baseType: !1005)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1727, file: !1728, line: 45, baseType: !247, size: 128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1440, file: !1441, line: 879, baseType: !937, size: 64, offset: 6848)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1440, file: !1441, line: 882, baseType: !937, size: 64, offset: 6912)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1440, file: !1441, line: 884, baseType: !152, size: 64, offset: 6976)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1440, file: !1441, line: 885, baseType: !152, size: 64, offset: 7040)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1440, file: !1441, line: 890, baseType: !152, size: 64, offset: 7104)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1440, file: !1441, line: 891, baseType: !1738, size: 128, offset: 7168)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1441, line: 242, size: 128, elements: !1739)
!1739 = !{!1740, !1741, !1742}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1738, file: !1441, line: 244, baseType: !152, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1738, file: !1441, line: 245, baseType: !152, size: 64, offset: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1738, file: !1441, line: 246, baseType: !1005, offset: 128)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1440, file: !1441, line: 900, baseType: !163, size: 64, offset: 7296)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1440, file: !1441, line: 901, baseType: !163, size: 64, offset: 7360)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1440, file: !1441, line: 904, baseType: !152, size: 64, offset: 7424)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1440, file: !1441, line: 907, baseType: !152, size: 64, offset: 7488)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1440, file: !1441, line: 910, baseType: !163, size: 64, offset: 7552)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1440, file: !1441, line: 911, baseType: !163, size: 64, offset: 7616)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1440, file: !1441, line: 914, baseType: !1750, size: 640, offset: 7680)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1751, line: 123, size: 640, elements: !1752)
!1751 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1752 = !{!1753, !1759, !1760}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1750, file: !1751, line: 124, baseType: !1754, size: 576)
!1754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1755, size: 576, elements: !524)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1751, line: 108, size: 192, elements: !1756)
!1756 = !{!1757, !1758}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1755, file: !1751, line: 109, baseType: !152, size: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1755, file: !1751, line: 110, baseType: !1566, size: 128, offset: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1750, file: !1751, line: 125, baseType: !7, size: 32, offset: 576)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1750, file: !1751, line: 126, baseType: !7, size: 32, offset: 608)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1440, file: !1441, line: 917, baseType: !1762, size: 192, offset: 8320)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1751, line: 134, size: 192, elements: !1763)
!1763 = !{!1764, !1765}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1762, file: !1751, line: 135, baseType: !612, size: 128, align: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1762, file: !1751, line: 136, baseType: !7, size: 32, offset: 128)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1440, file: !1441, line: 923, baseType: !1767, size: 64, offset: 8512)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1769)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1770, line: 111, size: 1280, elements: !1771)
!1770 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1771 = !{!1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1791, !1792, !1793, !1794, !1795, !1796, !1903, !1904, !1905, !1906, !1932, !1935, !1945}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1769, file: !1770, line: 112, baseType: !979, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1769, file: !1770, line: 120, baseType: !674, size: 32, offset: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1769, file: !1770, line: 121, baseType: !682, size: 32, offset: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1769, file: !1770, line: 122, baseType: !674, size: 32, offset: 96)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1769, file: !1770, line: 123, baseType: !682, size: 32, offset: 128)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1769, file: !1770, line: 124, baseType: !674, size: 32, offset: 160)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1769, file: !1770, line: 125, baseType: !682, size: 32, offset: 192)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1769, file: !1770, line: 126, baseType: !674, size: 32, offset: 224)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1769, file: !1770, line: 127, baseType: !682, size: 32, offset: 256)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1769, file: !1770, line: 128, baseType: !7, size: 32, offset: 288)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1769, file: !1770, line: 129, baseType: !1783, size: 64, offset: 320)
!1783 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1784, line: 26, baseType: !1785)
!1784 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1784, line: 24, size: 64, elements: !1786)
!1786 = !{!1787}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1785, file: !1784, line: 25, baseType: !1788, size: 64)
!1788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 64, elements: !1789)
!1789 = !{!1790}
!1790 = !DISubrange(count: 2)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1769, file: !1770, line: 130, baseType: !1783, size: 64, offset: 384)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1769, file: !1770, line: 131, baseType: !1783, size: 64, offset: 448)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1769, file: !1770, line: 132, baseType: !1783, size: 64, offset: 512)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1769, file: !1770, line: 133, baseType: !1783, size: 64, offset: 576)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1769, file: !1770, line: 135, baseType: !204, size: 8, offset: 640)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1769, file: !1770, line: 137, baseType: !1797, size: 64, offset: 704)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1799, line: 189, size: 1664, elements: !1800)
!1799 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1800 = !{!1801, !1802, !1805, !1810, !1811, !1814, !1815, !1820, !1821, !1822, !1823, !1825, !1826, !1827, !1828, !1829, !1867, !1888}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1798, file: !1799, line: 190, baseType: !1453, size: 32)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1798, file: !1799, line: 191, baseType: !1803, size: 32, offset: 32)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1799, line: 28, baseType: !1804)
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !151, line: 98, baseType: !1664)
!1805 = !DIDerivedType(tag: DW_TAG_member, scope: !1798, file: !1799, line: 192, baseType: !1806, size: 192, offset: 64)
!1806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1798, file: !1799, line: 192, size: 192, elements: !1807)
!1807 = !{!1808, !1809}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1806, file: !1799, line: 193, baseType: !247, size: 128)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1806, file: !1799, line: 194, baseType: !992, size: 192, align: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1798, file: !1799, line: 199, baseType: !999, size: 256, offset: 256)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1798, file: !1799, line: 200, baseType: !1812, size: 64, offset: 512)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1799, line: 200, flags: DIFlagFwdDecl)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1798, file: !1799, line: 201, baseType: !138, size: 64, offset: 576)
!1815 = !DIDerivedType(tag: DW_TAG_member, scope: !1798, file: !1799, line: 202, baseType: !1816, size: 64, offset: 640)
!1816 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1798, file: !1799, line: 202, size: 64, elements: !1817)
!1817 = !{!1818, !1819}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1816, file: !1799, line: 203, baseType: !775, size: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1816, file: !1799, line: 204, baseType: !775, size: 64)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1798, file: !1799, line: 206, baseType: !775, size: 64, offset: 704)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1798, file: !1799, line: 207, baseType: !674, size: 32, offset: 768)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1798, file: !1799, line: 208, baseType: !682, size: 32, offset: 800)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1798, file: !1799, line: 209, baseType: !1824, size: 32, offset: 832)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1799, line: 31, baseType: !794)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1798, file: !1799, line: 210, baseType: !212, size: 16, offset: 864)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1798, file: !1799, line: 211, baseType: !212, size: 16, offset: 880)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1798, file: !1799, line: 215, baseType: !1428, size: 16, offset: 896)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1798, file: !1799, line: 222, baseType: !163, size: 64, offset: 960)
!1829 = !DIDerivedType(tag: DW_TAG_member, scope: !1798, file: !1799, line: 239, baseType: !1830, size: 320, offset: 1024)
!1830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1798, file: !1799, line: 239, size: 320, elements: !1831)
!1831 = !{!1832, !1859}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1830, file: !1799, line: 240, baseType: !1833, size: 320)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1799, line: 108, size: 320, elements: !1834)
!1834 = !{!1835, !1836, !1848, !1851, !1858}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1833, file: !1799, line: 110, baseType: !163, size: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, scope: !1833, file: !1799, line: 111, baseType: !1837, size: 64, offset: 64)
!1837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1833, file: !1799, line: 111, size: 64, elements: !1838)
!1838 = !{!1839, !1847}
!1839 = !DIDerivedType(tag: DW_TAG_member, scope: !1837, file: !1799, line: 112, baseType: !1840, size: 64)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1837, file: !1799, line: 112, size: 64, elements: !1841)
!1841 = !{!1842, !1843}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1840, file: !1799, line: 114, baseType: !1084, size: 16)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1840, file: !1799, line: 115, baseType: !1844, size: 48, offset: 16)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 48, elements: !1845)
!1845 = !{!1846}
!1846 = !DISubrange(count: 6)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1837, file: !1799, line: 121, baseType: !163, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1833, file: !1799, line: 123, baseType: !1849, size: 64, offset: 128)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1799, line: 96, flags: DIFlagFwdDecl)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1833, file: !1799, line: 124, baseType: !1852, size: 64, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1799, line: 102, size: 192, elements: !1854)
!1854 = !{!1855, !1856, !1857}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1853, file: !1799, line: 103, baseType: !612, size: 128, align: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1853, file: !1799, line: 104, baseType: !1453, size: 32, offset: 128)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1853, file: !1799, line: 105, baseType: !262, size: 8, offset: 160)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1833, file: !1799, line: 125, baseType: !185, size: 64, offset: 256)
!1859 = !DIDerivedType(tag: DW_TAG_member, scope: !1830, file: !1799, line: 241, baseType: !1860, size: 320)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1830, file: !1799, line: 241, size: 320, elements: !1861)
!1861 = !{!1862, !1863, !1864, !1865, !1866}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1860, file: !1799, line: 242, baseType: !163, size: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1860, file: !1799, line: 243, baseType: !163, size: 64, offset: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1860, file: !1799, line: 244, baseType: !1849, size: 64, offset: 128)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1860, file: !1799, line: 245, baseType: !1852, size: 64, offset: 192)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1860, file: !1799, line: 246, baseType: !430, size: 64, offset: 256)
!1867 = !DIDerivedType(tag: DW_TAG_member, scope: !1798, file: !1799, line: 254, baseType: !1868, size: 256, offset: 1344)
!1868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1798, file: !1799, line: 254, size: 256, elements: !1869)
!1869 = !{!1870, !1876}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1868, file: !1799, line: 255, baseType: !1871, size: 256)
!1871 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1799, line: 128, size: 256, elements: !1872)
!1872 = !{!1873, !1874}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1871, file: !1799, line: 129, baseType: !138, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1871, file: !1799, line: 130, baseType: !1875, size: 256)
!1875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !138, size: 256, elements: !1378)
!1876 = !DIDerivedType(tag: DW_TAG_member, scope: !1868, file: !1799, line: 256, baseType: !1877, size: 256)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1868, file: !1799, line: 256, size: 256, elements: !1878)
!1878 = !{!1879, !1880}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1877, file: !1799, line: 258, baseType: !247, size: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1877, file: !1799, line: 259, baseType: !1881, size: 128, offset: 128)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1882, line: 22, size: 128, elements: !1883)
!1882 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1883 = !{!1884, !1887}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1881, file: !1882, line: 23, baseType: !1885, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1886 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1882, line: 23, flags: DIFlagFwdDecl)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1881, file: !1882, line: 24, baseType: !163, size: 64, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1798, file: !1799, line: 274, baseType: !1889, size: 64, offset: 1600)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1799, line: 170, size: 192, elements: !1891)
!1891 = !{!1892, !1901, !1902}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1890, file: !1799, line: 171, baseType: !1893, size: 64)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1799, line: 165, baseType: !1894)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{!197, !1797, !1897, !1899, !1797}
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64)
!1898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1850)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1871)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1890, file: !1799, line: 172, baseType: !1797, size: 64, offset: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1890, file: !1799, line: 173, baseType: !1849, size: 64, offset: 128)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1769, file: !1770, line: 138, baseType: !1797, size: 64, offset: 768)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1769, file: !1770, line: 139, baseType: !1797, size: 64, offset: 832)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1769, file: !1770, line: 140, baseType: !1797, size: 64, offset: 896)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1769, file: !1770, line: 145, baseType: !1907, size: 64, offset: 960)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1909, line: 13, size: 896, elements: !1910)
!1909 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1910 = !{!1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1908, file: !1909, line: 14, baseType: !1453, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1908, file: !1909, line: 15, baseType: !979, size: 32, offset: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1908, file: !1909, line: 16, baseType: !979, size: 32, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1908, file: !1909, line: 21, baseType: !367, size: 64, offset: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1908, file: !1909, line: 27, baseType: !163, size: 64, offset: 192)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1908, file: !1909, line: 28, baseType: !163, size: 64, offset: 256)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1908, file: !1909, line: 29, baseType: !367, size: 64, offset: 320)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1908, file: !1909, line: 32, baseType: !315, size: 128, offset: 384)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1908, file: !1909, line: 33, baseType: !674, size: 32, offset: 512)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1908, file: !1909, line: 37, baseType: !367, size: 64, offset: 576)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1908, file: !1909, line: 44, baseType: !1922, size: 256, offset: 640)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1923, line: 15, size: 256, elements: !1924)
!1923 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1924 = !{!1925, !1926, !1927, !1928, !1929, !1930, !1931}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1922, file: !1923, line: 16, baseType: !1005)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1922, file: !1923, line: 18, baseType: !197, size: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1922, file: !1923, line: 19, baseType: !197, size: 32, offset: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1922, file: !1923, line: 20, baseType: !197, size: 32, offset: 64)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1922, file: !1923, line: 21, baseType: !197, size: 32, offset: 96)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1922, file: !1923, line: 22, baseType: !163, size: 64, offset: 128)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1922, file: !1923, line: 23, baseType: !163, size: 64, offset: 192)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1769, file: !1770, line: 146, baseType: !1933, size: 64, offset: 1024)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !675, line: 18, flags: DIFlagFwdDecl)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1769, file: !1770, line: 147, baseType: !1936, size: 64, offset: 1088)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1770, line: 25, size: 64, elements: !1938)
!1938 = !{!1939, !1940, !1941}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1937, file: !1770, line: 26, baseType: !979, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1937, file: !1770, line: 27, baseType: !197, size: 32, offset: 32)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1937, file: !1770, line: 28, baseType: !1942, offset: 64)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !682, elements: !1943)
!1943 = !{!1944}
!1944 = !DISubrange(count: 0)
!1945 = !DIDerivedType(tag: DW_TAG_member, scope: !1769, file: !1770, line: 149, baseType: !1946, size: 128, offset: 1152)
!1946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1769, file: !1770, line: 149, size: 128, elements: !1947)
!1947 = !{!1948, !1949}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1946, file: !1770, line: 150, baseType: !197, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1946, file: !1770, line: 151, baseType: !612, size: 128, align: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1440, file: !1441, line: 926, baseType: !1767, size: 64, offset: 8576)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1440, file: !1441, line: 929, baseType: !1767, size: 64, offset: 8640)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1440, file: !1441, line: 933, baseType: !1797, size: 64, offset: 8704)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1440, file: !1441, line: 943, baseType: !1954, size: 128, offset: 8768)
!1954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 128, elements: !1955)
!1955 = !{!1956}
!1956 = !DISubrange(count: 16)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1440, file: !1441, line: 945, baseType: !1958, size: 64, offset: 8896)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1441, line: 49, flags: DIFlagFwdDecl)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1440, file: !1441, line: 956, baseType: !1961, size: 64, offset: 8960)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1441, line: 45, flags: DIFlagFwdDecl)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1440, file: !1441, line: 959, baseType: !1964, size: 64, offset: 9024)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1965 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1441, line: 959, flags: DIFlagFwdDecl)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1440, file: !1441, line: 962, baseType: !1967, size: 64, offset: 9088)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1441, line: 66, flags: DIFlagFwdDecl)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1440, file: !1441, line: 966, baseType: !1970, size: 64, offset: 9152)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1972, line: 35, flags: DIFlagFwdDecl)
!1972 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1440, file: !1441, line: 969, baseType: !1974, size: 64, offset: 9216)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1976, line: 82, size: 7296, elements: !1977)
!1976 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1977 = !{!1978, !1979, !1980, !1981, !1982, !1983, !1984, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2013, !2022, !2023, !2025, !2026, !2027, !2030, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2060, !2061, !2068, !2069, !2070, !2071, !2072, !2073}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1975, file: !1976, line: 83, baseType: !1453, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1975, file: !1976, line: 84, baseType: !979, size: 32, offset: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1975, file: !1976, line: 85, baseType: !197, size: 32, offset: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1975, file: !1976, line: 86, baseType: !247, size: 128, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1975, file: !1976, line: 88, baseType: !1701, size: 128, offset: 256)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1975, file: !1976, line: 91, baseType: !1439, size: 64, offset: 384)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1975, file: !1976, line: 94, baseType: !1985, size: 192, offset: 448)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1986, line: 30, size: 192, elements: !1987)
!1986 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1987 = !{!1988, !1989}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1985, file: !1986, line: 31, baseType: !247, size: 128)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1985, file: !1986, line: 32, baseType: !1990, size: 64, offset: 128)
!1990 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1991, line: 25, baseType: !1992)
!1991 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1991, line: 23, size: 64, elements: !1993)
!1993 = !{!1994}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1992, file: !1991, line: 24, baseType: !1591, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1975, file: !1976, line: 97, baseType: !873, size: 64, offset: 640)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1975, file: !1976, line: 100, baseType: !197, size: 32, offset: 704)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1975, file: !1976, line: 106, baseType: !197, size: 32, offset: 736)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1975, file: !1976, line: 107, baseType: !1439, size: 64, offset: 768)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1975, file: !1976, line: 110, baseType: !197, size: 32, offset: 832)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1975, file: !1976, line: 111, baseType: !7, size: 32, offset: 864)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1975, file: !1976, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1975, file: !1976, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1975, file: !1976, line: 128, baseType: !197, size: 32, offset: 928)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1975, file: !1976, line: 129, baseType: !247, size: 128, offset: 960)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1975, file: !1976, line: 132, baseType: !1515, size: 512, offset: 1088)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1975, file: !1976, line: 133, baseType: !1523, size: 64, offset: 1600)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1975, file: !1976, line: 140, baseType: !2008, size: 256, offset: 1664)
!2008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2009, size: 256, elements: !1789)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1976, line: 38, size: 128, elements: !2010)
!2010 = !{!2011, !2012}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2009, file: !1976, line: 39, baseType: !152, size: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2009, file: !1976, line: 40, baseType: !152, size: 64, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1975, file: !1976, line: 146, baseType: !2014, size: 192, offset: 1920)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1976, line: 66, size: 192, elements: !2015)
!2015 = !{!2016}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2014, file: !1976, line: 67, baseType: !2017, size: 192)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1976, line: 47, size: 192, elements: !2018)
!2018 = !{!2019, !2020, !2021}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2017, file: !1976, line: 48, baseType: !369, size: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2017, file: !1976, line: 49, baseType: !369, size: 64, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2017, file: !1976, line: 50, baseType: !369, size: 64, offset: 128)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1975, file: !1976, line: 150, baseType: !1750, size: 640, offset: 2112)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1975, file: !1976, line: 153, baseType: !2024, size: 256, offset: 2752)
!2024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1691, size: 256, elements: !1378)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1975, file: !1976, line: 159, baseType: !1691, size: 64, offset: 3008)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1975, file: !1976, line: 162, baseType: !197, size: 32, offset: 3072)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1975, file: !1976, line: 164, baseType: !2028, size: 64, offset: 3136)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1976, line: 164, flags: DIFlagFwdDecl)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1975, file: !1976, line: 175, baseType: !2031, size: 32, offset: 3200)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !635, line: 805, baseType: !2032)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !635, line: 798, size: 32, elements: !2033)
!2033 = !{!2034, !2035}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2032, file: !635, line: 803, baseType: !634, size: 32)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2032, file: !635, line: 804, baseType: !483, offset: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1975, file: !1976, line: 176, baseType: !152, size: 64, offset: 3264)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1975, file: !1976, line: 176, baseType: !152, size: 64, offset: 3328)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1975, file: !1976, line: 176, baseType: !152, size: 64, offset: 3392)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1975, file: !1976, line: 176, baseType: !152, size: 64, offset: 3456)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1975, file: !1976, line: 177, baseType: !152, size: 64, offset: 3520)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1975, file: !1976, line: 178, baseType: !152, size: 64, offset: 3584)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1975, file: !1976, line: 179, baseType: !1738, size: 128, offset: 3648)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1975, file: !1976, line: 180, baseType: !163, size: 64, offset: 3776)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1975, file: !1976, line: 180, baseType: !163, size: 64, offset: 3840)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1975, file: !1976, line: 180, baseType: !163, size: 64, offset: 3904)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1975, file: !1976, line: 180, baseType: !163, size: 64, offset: 3968)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1975, file: !1976, line: 181, baseType: !163, size: 64, offset: 4032)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1975, file: !1976, line: 181, baseType: !163, size: 64, offset: 4096)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1975, file: !1976, line: 181, baseType: !163, size: 64, offset: 4160)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1975, file: !1976, line: 181, baseType: !163, size: 64, offset: 4224)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1975, file: !1976, line: 182, baseType: !163, size: 64, offset: 4288)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1975, file: !1976, line: 182, baseType: !163, size: 64, offset: 4352)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1975, file: !1976, line: 182, baseType: !163, size: 64, offset: 4416)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1975, file: !1976, line: 182, baseType: !163, size: 64, offset: 4480)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1975, file: !1976, line: 183, baseType: !163, size: 64, offset: 4544)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1975, file: !1976, line: 183, baseType: !163, size: 64, offset: 4608)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1975, file: !1976, line: 184, baseType: !2058, offset: 4672)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2059, line: 12, elements: !497)
!2059 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1975, file: !1976, line: 192, baseType: !156, size: 64, offset: 4672)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1975, file: !1976, line: 203, baseType: !2062, size: 2048, offset: 4736)
!2062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2063, size: 2048, elements: !1955)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2064, line: 43, size: 128, elements: !2065)
!2064 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2065 = !{!2066, !2067}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2063, file: !2064, line: 44, baseType: !571, size: 64)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2063, file: !2064, line: 45, baseType: !571, size: 64, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1975, file: !1976, line: 220, baseType: !262, size: 8, offset: 6784)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1975, file: !1976, line: 221, baseType: !1428, size: 16, offset: 6800)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1975, file: !1976, line: 222, baseType: !1428, size: 16, offset: 6816)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1975, file: !1976, line: 224, baseType: !1197, size: 64, offset: 6848)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1975, file: !1976, line: 227, baseType: !1396, size: 192, offset: 6912)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1975, file: !1976, line: 233, baseType: !1396, size: 192, offset: 7104)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1440, file: !1441, line: 970, baseType: !2075, size: 64, offset: 9280)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1976, line: 20, size: 16576, elements: !2077)
!2077 = !{!2078, !2079, !2080, !2081}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2076, file: !1976, line: 21, baseType: !483)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2076, file: !1976, line: 22, baseType: !1453, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2076, file: !1976, line: 23, baseType: !1701, size: 128, offset: 64)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2076, file: !1976, line: 24, baseType: !2082, size: 16384, offset: 192)
!2082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2083, size: 16384, elements: !528)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1986, line: 49, size: 256, elements: !2084)
!2084 = !{!2085}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2083, file: !1986, line: 50, baseType: !2086, size: 256)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1986, line: 35, size: 256, elements: !2087)
!2087 = !{!2088, !2095, !2096, !2102}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2086, file: !1986, line: 37, baseType: !2089, size: 64)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2090, line: 19, baseType: !2091)
!2090 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2090, line: 18, baseType: !2093)
!2093 = !DISubroutineType(types: !2094)
!2094 = !{null, !197}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2086, file: !1986, line: 38, baseType: !163, size: 64, offset: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2086, file: !1986, line: 44, baseType: !2097, size: 64, offset: 128)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2090, line: 22, baseType: !2098)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2090, line: 21, baseType: !2100)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{null}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2086, file: !1986, line: 46, baseType: !1990, size: 64, offset: 192)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1440, file: !1441, line: 971, baseType: !1990, size: 64, offset: 9344)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1440, file: !1441, line: 972, baseType: !1990, size: 64, offset: 9408)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1440, file: !1441, line: 974, baseType: !1990, size: 64, offset: 9472)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1440, file: !1441, line: 975, baseType: !1985, size: 192, offset: 9536)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1440, file: !1441, line: 976, baseType: !163, size: 64, offset: 9728)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1440, file: !1441, line: 977, baseType: !569, size: 64, offset: 9792)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1440, file: !1441, line: 978, baseType: !7, size: 32, offset: 9856)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1440, file: !1441, line: 980, baseType: !615, size: 64, offset: 9920)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1440, file: !1441, line: 989, baseType: !2112, size: 128, offset: 9984)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2113, line: 35, size: 128, elements: !2114)
!2113 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2114 = !{!2115, !2116, !2117}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2112, file: !2113, line: 36, baseType: !197, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2112, file: !2113, line: 37, baseType: !979, size: 32, offset: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2112, file: !2113, line: 38, baseType: !2118, size: 64, offset: 64)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64)
!2119 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2113, line: 23, flags: DIFlagFwdDecl)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1440, file: !1441, line: 992, baseType: !152, size: 64, offset: 10112)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1440, file: !1441, line: 993, baseType: !152, size: 64, offset: 10176)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1440, file: !1441, line: 996, baseType: !483, offset: 10240)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1440, file: !1441, line: 999, baseType: !1005, offset: 10240)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1440, file: !1441, line: 1001, baseType: !2125, size: 64, offset: 10240)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1441, line: 636, size: 64, elements: !2126)
!2126 = !{!2127}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2125, file: !1441, line: 637, baseType: !2128, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1440, file: !1441, line: 1005, baseType: !984, size: 128, offset: 10304)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1440, file: !1441, line: 1007, baseType: !1439, size: 64, offset: 10432)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1440, file: !1441, line: 1009, baseType: !2132, size: 64, offset: 10496)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2133 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1441, line: 1009, flags: DIFlagFwdDecl)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1440, file: !1441, line: 1043, baseType: !138, size: 64, offset: 10560)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1440, file: !1441, line: 1046, baseType: !2136, size: 64, offset: 10624)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1441, line: 41, flags: DIFlagFwdDecl)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1440, file: !1441, line: 1050, baseType: !2139, size: 64, offset: 10688)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1441, line: 42, flags: DIFlagFwdDecl)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1440, file: !1441, line: 1054, baseType: !2142, size: 64, offset: 10752)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1441, line: 55, flags: DIFlagFwdDecl)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1440, file: !1441, line: 1056, baseType: !2145, size: 64, offset: 10816)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64)
!2146 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1441, line: 40, flags: DIFlagFwdDecl)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1440, file: !1441, line: 1058, baseType: !2148, size: 64, offset: 10880)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2150, line: 99, size: 704, elements: !2151)
!2150 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2151 = !{!2152, !2153, !2154, !2155, !2156, !2157, !2158, !2177, !2178}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2149, file: !2150, line: 100, baseType: !367, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2149, file: !2150, line: 101, baseType: !979, size: 32, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2149, file: !2150, line: 102, baseType: !979, size: 32, offset: 96)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2149, file: !2150, line: 105, baseType: !483, offset: 128)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2149, file: !2150, line: 107, baseType: !212, size: 16, offset: 128)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2149, file: !2150, line: 109, baseType: !971, size: 128, offset: 192)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2149, file: !2150, line: 110, baseType: !2159, size: 64, offset: 320)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2150, line: 73, size: 448, elements: !2161)
!2161 = !{!2162, !2165, !2166, !2171, !2176}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2160, file: !2150, line: 74, baseType: !2163, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2150, line: 74, flags: DIFlagFwdDecl)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2160, file: !2150, line: 75, baseType: !2148, size: 64, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, scope: !2160, file: !2150, line: 83, baseType: !2167, size: 128, offset: 128)
!2167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2160, file: !2150, line: 83, size: 128, elements: !2168)
!2168 = !{!2169, !2170}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2167, file: !2150, line: 84, baseType: !247, size: 128)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2167, file: !2150, line: 85, baseType: !1158, size: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, scope: !2160, file: !2150, line: 87, baseType: !2172, size: 128, offset: 256)
!2172 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2160, file: !2150, line: 87, size: 128, elements: !2173)
!2173 = !{!2174, !2175}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2172, file: !2150, line: 88, baseType: !315, size: 128)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2172, file: !2150, line: 89, baseType: !612, size: 128, align: 64)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2160, file: !2150, line: 92, baseType: !7, size: 32, offset: 384)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2149, file: !2150, line: 111, baseType: !873, size: 64, offset: 384)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2149, file: !2150, line: 113, baseType: !363, size: 256, offset: 448)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1440, file: !1441, line: 1061, baseType: !2180, size: 64, offset: 10944)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1441, line: 43, flags: DIFlagFwdDecl)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1440, file: !1441, line: 1064, baseType: !163, size: 64, offset: 11008)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1440, file: !1441, line: 1065, baseType: !2184, size: 64, offset: 11072)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1986, line: 14, baseType: !2186)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1986, line: 12, size: 384, elements: !2187)
!2187 = !{!2188}
!2188 = !DIDerivedType(tag: DW_TAG_member, scope: !2186, file: !1986, line: 13, baseType: !2189, size: 384)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2186, file: !1986, line: 13, size: 384, elements: !2190)
!2190 = !{!2191, !2192, !2193, !2194}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2189, file: !1986, line: 13, baseType: !197, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2189, file: !1986, line: 13, baseType: !197, size: 32, offset: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2189, file: !1986, line: 13, baseType: !197, size: 32, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2189, file: !1986, line: 13, baseType: !2195, size: 256, offset: 128)
!2195 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2196, line: 32, size: 256, elements: !2197)
!2196 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2197 = !{!2198, !2203, !2216, !2222, !2231, !2251, !2256}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2195, file: !2196, line: 37, baseType: !2199, size: 64)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2195, file: !2196, line: 34, size: 64, elements: !2200)
!2200 = !{!2201, !2202}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2199, file: !2196, line: 35, baseType: !1680, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2199, file: !2196, line: 36, baseType: !680, size: 32, offset: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2195, file: !2196, line: 45, baseType: !2204, size: 192)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2195, file: !2196, line: 40, size: 192, elements: !2205)
!2205 = !{!2206, !2208, !2209, !2215}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2204, file: !2196, line: 41, baseType: !2207, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !556, line: 95, baseType: !197)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2204, file: !2196, line: 42, baseType: !197, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2204, file: !2196, line: 43, baseType: !2210, size: 64, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2196, line: 11, baseType: !2211)
!2211 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2196, line: 8, size: 64, elements: !2212)
!2212 = !{!2213, !2214}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2211, file: !2196, line: 9, baseType: !197, size: 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2211, file: !2196, line: 10, baseType: !138, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2204, file: !2196, line: 44, baseType: !197, size: 32, offset: 128)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2195, file: !2196, line: 52, baseType: !2217, size: 128)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2195, file: !2196, line: 48, size: 128, elements: !2218)
!2218 = !{!2219, !2220, !2221}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2217, file: !2196, line: 49, baseType: !1680, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2217, file: !2196, line: 50, baseType: !680, size: 32, offset: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2217, file: !2196, line: 51, baseType: !2210, size: 64, offset: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2195, file: !2196, line: 61, baseType: !2223, size: 256)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2195, file: !2196, line: 55, size: 256, elements: !2224)
!2224 = !{!2225, !2226, !2227, !2228, !2230}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2223, file: !2196, line: 56, baseType: !1680, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2223, file: !2196, line: 57, baseType: !680, size: 32, offset: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2223, file: !2196, line: 58, baseType: !197, size: 32, offset: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2223, file: !2196, line: 59, baseType: !2229, size: 64, offset: 128)
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !556, line: 94, baseType: !557)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2223, file: !2196, line: 60, baseType: !2229, size: 64, offset: 192)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2195, file: !2196, line: 95, baseType: !2232, size: 256)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2195, file: !2196, line: 64, size: 256, elements: !2233)
!2233 = !{!2234, !2235}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2232, file: !2196, line: 65, baseType: !138, size: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, scope: !2232, file: !2196, line: 77, baseType: !2236, size: 192, offset: 64)
!2236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2232, file: !2196, line: 77, size: 192, elements: !2237)
!2237 = !{!2238, !2239, !2246}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2236, file: !2196, line: 82, baseType: !1428, size: 16)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2236, file: !2196, line: 88, baseType: !2240, size: 192)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2236, file: !2196, line: 84, size: 192, elements: !2241)
!2241 = !{!2242, !2244, !2245}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2240, file: !2196, line: 85, baseType: !2243, size: 64)
!2243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 64, elements: !1553)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2240, file: !2196, line: 86, baseType: !138, size: 64, offset: 64)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2240, file: !2196, line: 87, baseType: !138, size: 64, offset: 128)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2236, file: !2196, line: 93, baseType: !2247, size: 96)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2236, file: !2196, line: 90, size: 96, elements: !2248)
!2248 = !{!2249, !2250}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2247, file: !2196, line: 91, baseType: !2243, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2247, file: !2196, line: 92, baseType: !297, size: 32, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2195, file: !2196, line: 101, baseType: !2252, size: 128)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2195, file: !2196, line: 98, size: 128, elements: !2253)
!2253 = !{!2254, !2255}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2252, file: !2196, line: 99, baseType: !558, size: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2252, file: !2196, line: 100, baseType: !197, size: 32, offset: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2195, file: !2196, line: 108, baseType: !2257, size: 128)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2195, file: !2196, line: 104, size: 128, elements: !2258)
!2258 = !{!2259, !2260, !2261}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2257, file: !2196, line: 105, baseType: !138, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2257, file: !2196, line: 106, baseType: !197, size: 32, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2257, file: !2196, line: 107, baseType: !7, size: 32, offset: 96)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1440, file: !1441, line: 1067, baseType: !2058, offset: 11136)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1440, file: !1441, line: 1099, baseType: !2264, size: 64, offset: 11136)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64)
!2265 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1441, line: 56, flags: DIFlagFwdDecl)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1440, file: !1441, line: 1103, baseType: !247, size: 128, offset: 11200)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1440, file: !1441, line: 1104, baseType: !2268, size: 64, offset: 11328)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!2269 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1441, line: 46, flags: DIFlagFwdDecl)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1440, file: !1441, line: 1105, baseType: !1396, size: 192, offset: 11392)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1440, file: !1441, line: 1106, baseType: !7, size: 32, offset: 11584)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1440, file: !1441, line: 1109, baseType: !2273, size: 128, offset: 11648)
!2273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2274, size: 128, elements: !1789)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1441, line: 51, flags: DIFlagFwdDecl)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1440, file: !1441, line: 1110, baseType: !1396, size: 192, offset: 11776)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1440, file: !1441, line: 1111, baseType: !247, size: 128, offset: 11968)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1440, file: !1441, line: 1173, baseType: !2279, size: 64, offset: 12096)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2281, line: 62, size: 256, align: 256, elements: !2282)
!2281 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2282 = !{!2283, !2284, !2285, !2290}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2280, file: !2281, line: 75, baseType: !297, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2280, file: !2281, line: 90, baseType: !297, size: 32, offset: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2280, file: !2281, line: 124, baseType: !2286, size: 64, offset: 64)
!2286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2280, file: !2281, line: 109, size: 64, elements: !2287)
!2287 = !{!2288, !2289}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2286, file: !2281, line: 110, baseType: !154, size: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2286, file: !2281, line: 112, baseType: !154, size: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2280, file: !2281, line: 144, baseType: !297, size: 32, offset: 128)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1440, file: !1441, line: 1174, baseType: !296, size: 32, offset: 12160)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1440, file: !1441, line: 1179, baseType: !163, size: 64, offset: 12224)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1440, file: !1441, line: 1182, baseType: !2294, size: 128, offset: 12288)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1374, line: 76, size: 128, elements: !2295)
!2295 = !{!2296, !2301, !2302}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2294, file: !1374, line: 85, baseType: !2297, size: 64)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2298, line: 7, size: 64, elements: !2299)
!2298 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2299 = !{!2300}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2297, file: !2298, line: 12, baseType: !1588, size: 64)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2294, file: !1374, line: 88, baseType: !262, size: 8, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2294, file: !1374, line: 95, baseType: !262, size: 8, offset: 72)
!2303 = !DIDerivedType(tag: DW_TAG_member, scope: !1440, file: !1441, line: 1184, baseType: !2304, size: 128, offset: 12416)
!2304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1440, file: !1441, line: 1184, size: 128, elements: !2305)
!2305 = !{!2306, !2307}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2304, file: !1441, line: 1185, baseType: !1453, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2304, file: !1441, line: 1186, baseType: !612, size: 128, align: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1440, file: !1441, line: 1190, baseType: !2309, size: 64, offset: 12544)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64)
!2310 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1441, line: 53, flags: DIFlagFwdDecl)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1440, file: !1441, line: 1192, baseType: !2312, size: 128, offset: 12608)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1374, line: 64, size: 128, elements: !2313)
!2313 = !{!2314, !2315, !2316}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2312, file: !1374, line: 65, baseType: !953, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2312, file: !1374, line: 67, baseType: !297, size: 32, offset: 64)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2312, file: !1374, line: 68, baseType: !297, size: 32, offset: 96)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1440, file: !1441, line: 1206, baseType: !197, size: 32, offset: 12736)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1440, file: !1441, line: 1207, baseType: !197, size: 32, offset: 12768)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1440, file: !1441, line: 1209, baseType: !163, size: 64, offset: 12800)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1440, file: !1441, line: 1219, baseType: !152, size: 64, offset: 12864)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1440, file: !1441, line: 1220, baseType: !152, size: 64, offset: 12928)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1440, file: !1441, line: 1317, baseType: !197, size: 32, offset: 12992)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1440, file: !1441, line: 1319, baseType: !1439, size: 64, offset: 13056)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1440, file: !1441, line: 1322, baseType: !2325, size: 64, offset: 13120)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2327, line: 56, size: 512, elements: !2328)
!2327 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2328 = !{!2329, !2330, !2331, !2332, !2333, !2334, !2335, !2337}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2326, file: !2327, line: 57, baseType: !2325, size: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2326, file: !2327, line: 58, baseType: !138, size: 64, offset: 64)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2326, file: !2327, line: 59, baseType: !163, size: 64, offset: 128)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2326, file: !2327, line: 60, baseType: !163, size: 64, offset: 192)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2326, file: !2327, line: 61, baseType: !1045, size: 64, offset: 256)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2326, file: !2327, line: 62, baseType: !7, size: 32, offset: 320)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2326, file: !2327, line: 63, baseType: !2336, size: 64, offset: 384)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !151, line: 153, baseType: !152)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2326, file: !2327, line: 64, baseType: !2338, size: 64, offset: 448)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64)
!2339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1440, file: !1441, line: 1326, baseType: !1453, size: 32, offset: 13184)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1440, file: !1441, line: 1342, baseType: !138, size: 64, offset: 13248)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1440, file: !1441, line: 1343, baseType: !154, size: 64, offset: 13312)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1440, file: !1441, line: 1344, baseType: !152, size: 64, offset: 13376)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1440, file: !1441, line: 1345, baseType: !154, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1440, file: !1441, line: 1346, baseType: !154, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1440, file: !1441, line: 1347, baseType: !154, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1440, file: !1441, line: 1348, baseType: !612, size: 128, align: 64, offset: 13504)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1440, file: !1441, line: 1358, baseType: !2349, size: 34816, offset: 13824)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2350, line: 485, size: 34816, elements: !2351)
!2350 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2351 = !{!2352, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2381, !2382, !2383, !2384, !2385, !2386, !2389, !2390, !2391}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2349, file: !2350, line: 487, baseType: !2353, size: 192)
!2353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2354, size: 192, elements: !524)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2355, line: 16, size: 64, elements: !2356)
!2355 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2356 = !{!2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2354, file: !2355, line: 17, baseType: !1084, size: 16)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2354, file: !2355, line: 18, baseType: !1084, size: 16, offset: 16)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2354, file: !2355, line: 19, baseType: !1084, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2354, file: !2355, line: 19, baseType: !1084, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2354, file: !2355, line: 19, baseType: !1084, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2354, file: !2355, line: 19, baseType: !1084, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2354, file: !2355, line: 19, baseType: !1084, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2354, file: !2355, line: 20, baseType: !1084, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2354, file: !2355, line: 20, baseType: !1084, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2354, file: !2355, line: 20, baseType: !1084, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2354, file: !2355, line: 20, baseType: !1084, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2354, file: !2355, line: 20, baseType: !1084, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2354, file: !2355, line: 20, baseType: !1084, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2349, file: !2350, line: 491, baseType: !163, size: 64, offset: 192)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2349, file: !2350, line: 495, baseType: !212, size: 16, offset: 256)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2349, file: !2350, line: 496, baseType: !212, size: 16, offset: 272)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2349, file: !2350, line: 497, baseType: !212, size: 16, offset: 288)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2349, file: !2350, line: 498, baseType: !212, size: 16, offset: 304)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2349, file: !2350, line: 502, baseType: !163, size: 64, offset: 320)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2349, file: !2350, line: 503, baseType: !163, size: 64, offset: 384)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2349, file: !2350, line: 514, baseType: !2378, size: 256, offset: 448)
!2378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2379, size: 256, elements: !1378)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2350, line: 483, flags: DIFlagFwdDecl)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2349, file: !2350, line: 516, baseType: !163, size: 64, offset: 704)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2349, file: !2350, line: 518, baseType: !163, size: 64, offset: 768)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2349, file: !2350, line: 520, baseType: !163, size: 64, offset: 832)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2349, file: !2350, line: 521, baseType: !163, size: 64, offset: 896)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2349, file: !2350, line: 522, baseType: !163, size: 64, offset: 960)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2349, file: !2350, line: 528, baseType: !2387, size: 64, offset: 1024)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 64)
!2388 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2350, line: 10, flags: DIFlagFwdDecl)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2349, file: !2350, line: 535, baseType: !163, size: 64, offset: 1088)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2349, file: !2350, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2349, file: !2350, line: 540, baseType: !2392, size: 33280, offset: 1536)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2393, line: 317, size: 33280, elements: !2394)
!2393 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2394 = !{!2395, !2396, !2397}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2392, file: !2393, line: 330, baseType: !7, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2392, file: !2393, line: 337, baseType: !163, size: 64, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2392, file: !2393, line: 348, baseType: !2398, size: 32768, offset: 512)
!2398 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2393, line: 304, size: 32768, elements: !2399)
!2399 = !{!2400, !2415, !2454, !2504, !2517}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2398, file: !2393, line: 305, baseType: !2401, size: 896)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2393, line: 12, size: 896, elements: !2402)
!2402 = !{!2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2414}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2401, file: !2393, line: 13, baseType: !296, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2401, file: !2393, line: 14, baseType: !296, size: 32, offset: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2401, file: !2393, line: 15, baseType: !296, size: 32, offset: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2401, file: !2393, line: 16, baseType: !296, size: 32, offset: 96)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2401, file: !2393, line: 17, baseType: !296, size: 32, offset: 128)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2401, file: !2393, line: 18, baseType: !296, size: 32, offset: 160)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2401, file: !2393, line: 19, baseType: !296, size: 32, offset: 192)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2401, file: !2393, line: 22, baseType: !2411, size: 640, offset: 224)
!2411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 640, elements: !2412)
!2412 = !{!2413}
!2413 = !DISubrange(count: 20)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2401, file: !2393, line: 25, baseType: !296, size: 32, offset: 864)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2398, file: !2393, line: 306, baseType: !2416, size: 4096, align: 128)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2393, line: 34, size: 4096, align: 128, elements: !2417)
!2417 = !{!2418, !2419, !2420, !2421, !2422, !2437, !2438, !2439, !2443, !2445, !2449}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2416, file: !2393, line: 35, baseType: !1084, size: 16)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2416, file: !2393, line: 36, baseType: !1084, size: 16, offset: 16)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2416, file: !2393, line: 37, baseType: !1084, size: 16, offset: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2416, file: !2393, line: 38, baseType: !1084, size: 16, offset: 48)
!2422 = !DIDerivedType(tag: DW_TAG_member, scope: !2416, file: !2393, line: 39, baseType: !2423, size: 128, offset: 64)
!2423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2416, file: !2393, line: 39, size: 128, elements: !2424)
!2424 = !{!2425, !2430}
!2425 = !DIDerivedType(tag: DW_TAG_member, scope: !2423, file: !2393, line: 40, baseType: !2426, size: 128)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2423, file: !2393, line: 40, size: 128, elements: !2427)
!2427 = !{!2428, !2429}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2426, file: !2393, line: 41, baseType: !152, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2426, file: !2393, line: 42, baseType: !152, size: 64, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, scope: !2423, file: !2393, line: 44, baseType: !2431, size: 128)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2423, file: !2393, line: 44, size: 128, elements: !2432)
!2432 = !{!2433, !2434, !2435, !2436}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2431, file: !2393, line: 45, baseType: !296, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2431, file: !2393, line: 46, baseType: !296, size: 32, offset: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2431, file: !2393, line: 47, baseType: !296, size: 32, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2431, file: !2393, line: 48, baseType: !296, size: 32, offset: 96)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2416, file: !2393, line: 51, baseType: !296, size: 32, offset: 192)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2416, file: !2393, line: 52, baseType: !296, size: 32, offset: 224)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2416, file: !2393, line: 55, baseType: !2440, size: 1024, offset: 256)
!2440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 1024, elements: !2441)
!2441 = !{!2442}
!2442 = !DISubrange(count: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2416, file: !2393, line: 58, baseType: !2444, size: 2048, offset: 1280)
!2444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 2048, elements: !528)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2416, file: !2393, line: 60, baseType: !2446, size: 384, offset: 3328)
!2446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 384, elements: !2447)
!2447 = !{!2448}
!2448 = !DISubrange(count: 12)
!2449 = !DIDerivedType(tag: DW_TAG_member, scope: !2416, file: !2393, line: 62, baseType: !2450, size: 384, offset: 3712)
!2450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2416, file: !2393, line: 62, size: 384, elements: !2451)
!2451 = !{!2452, !2453}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2450, file: !2393, line: 63, baseType: !2446, size: 384)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2450, file: !2393, line: 64, baseType: !2446, size: 384)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2398, file: !2393, line: 307, baseType: !2455, size: 1088)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2393, line: 79, size: 1088, elements: !2456)
!2456 = !{!2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2503}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2455, file: !2393, line: 80, baseType: !296, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2455, file: !2393, line: 81, baseType: !296, size: 32, offset: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2455, file: !2393, line: 82, baseType: !296, size: 32, offset: 64)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2455, file: !2393, line: 83, baseType: !296, size: 32, offset: 96)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2455, file: !2393, line: 84, baseType: !296, size: 32, offset: 128)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2455, file: !2393, line: 85, baseType: !296, size: 32, offset: 160)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2455, file: !2393, line: 86, baseType: !296, size: 32, offset: 192)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2455, file: !2393, line: 88, baseType: !2411, size: 640, offset: 224)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2455, file: !2393, line: 89, baseType: !271, size: 8, offset: 864)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2455, file: !2393, line: 90, baseType: !271, size: 8, offset: 872)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2455, file: !2393, line: 91, baseType: !271, size: 8, offset: 880)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2455, file: !2393, line: 92, baseType: !271, size: 8, offset: 888)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2455, file: !2393, line: 93, baseType: !271, size: 8, offset: 896)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2455, file: !2393, line: 94, baseType: !271, size: 8, offset: 904)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2455, file: !2393, line: 95, baseType: !2472, size: 64, offset: 960)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 64)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2474, line: 11, size: 128, elements: !2475)
!2474 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2475 = !{!2476, !2477}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2473, file: !2474, line: 12, baseType: !558, size: 64)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2473, file: !2474, line: 13, baseType: !2478, size: 64, offset: 64)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2480, line: 56, size: 1344, elements: !2481)
!2480 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2481 = !{!2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2479, file: !2480, line: 61, baseType: !163, size: 64)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2479, file: !2480, line: 62, baseType: !163, size: 64, offset: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2479, file: !2480, line: 63, baseType: !163, size: 64, offset: 128)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2479, file: !2480, line: 64, baseType: !163, size: 64, offset: 192)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2479, file: !2480, line: 65, baseType: !163, size: 64, offset: 256)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2479, file: !2480, line: 66, baseType: !163, size: 64, offset: 320)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2479, file: !2480, line: 68, baseType: !163, size: 64, offset: 384)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2479, file: !2480, line: 69, baseType: !163, size: 64, offset: 448)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2479, file: !2480, line: 70, baseType: !163, size: 64, offset: 512)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2479, file: !2480, line: 71, baseType: !163, size: 64, offset: 576)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2479, file: !2480, line: 72, baseType: !163, size: 64, offset: 640)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2479, file: !2480, line: 73, baseType: !163, size: 64, offset: 704)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2479, file: !2480, line: 74, baseType: !163, size: 64, offset: 768)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2479, file: !2480, line: 75, baseType: !163, size: 64, offset: 832)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2479, file: !2480, line: 76, baseType: !163, size: 64, offset: 896)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2479, file: !2480, line: 81, baseType: !163, size: 64, offset: 960)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2479, file: !2480, line: 83, baseType: !163, size: 64, offset: 1024)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2479, file: !2480, line: 84, baseType: !163, size: 64, offset: 1088)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2479, file: !2480, line: 85, baseType: !163, size: 64, offset: 1152)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2479, file: !2480, line: 86, baseType: !163, size: 64, offset: 1216)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2479, file: !2480, line: 87, baseType: !163, size: 64, offset: 1280)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2455, file: !2393, line: 96, baseType: !296, size: 32, offset: 1024)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2398, file: !2393, line: 308, baseType: !2505, size: 4608, align: 512)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2393, line: 289, size: 4608, align: 512, elements: !2506)
!2506 = !{!2507, !2508, !2515}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2505, file: !2393, line: 290, baseType: !2416, size: 4096, align: 128)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2505, file: !2393, line: 291, baseType: !2509, size: 512, offset: 4096)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2393, line: 268, size: 512, elements: !2510)
!2510 = !{!2511, !2512, !2513}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2509, file: !2393, line: 269, baseType: !152, size: 64)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2509, file: !2393, line: 270, baseType: !152, size: 64, offset: 64)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2509, file: !2393, line: 271, baseType: !2514, size: 384, offset: 128)
!2514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 384, elements: !1845)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2505, file: !2393, line: 292, baseType: !2516, offset: 4608)
!2516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, elements: !1943)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2398, file: !2393, line: 309, baseType: !2518, size: 32768)
!2518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 32768, elements: !2519)
!2519 = !{!2520}
!2520 = !DISubrange(count: 4096)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1436, file: !955, line: 378, baseType: !2522, size: 64, offset: 64)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1432, file: !955, line: 384, baseType: !1722, size: 192, offset: 192)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1201, file: !955, line: 500, baseType: !483, offset: 6656)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1201, file: !955, line: 501, baseType: !2526, size: 64, offset: 6656)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 64)
!2527 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !955, line: 387, flags: DIFlagFwdDecl)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1201, file: !955, line: 516, baseType: !1933, size: 64, offset: 6720)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1201, file: !955, line: 519, baseType: !599, size: 64, offset: 6784)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1201, file: !955, line: 521, baseType: !2531, size: 64, offset: 6848)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !955, line: 521, flags: DIFlagFwdDecl)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1201, file: !955, line: 545, baseType: !979, size: 32, offset: 6912)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1201, file: !955, line: 548, baseType: !262, size: 8, offset: 6944)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1201, file: !955, line: 550, baseType: !2536, offset: 6952)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2537, line: 142, elements: !497)
!2537 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1201, file: !955, line: 554, baseType: !363, size: 256, offset: 6976)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1201, file: !955, line: 557, baseType: !296, size: 32, offset: 7232)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1198, file: !955, line: 565, baseType: !2541, offset: 7296)
!2541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, elements: !2542)
!2542 = !{!2543}
!2543 = !DISubrange(count: -1)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1194, file: !955, line: 151, baseType: !979, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1187, file: !955, line: 156, baseType: !483, offset: 256)
!2546 = !DIDerivedType(tag: DW_TAG_member, scope: !959, file: !955, line: 159, baseType: !2547, size: 128)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !959, file: !955, line: 159, size: 128, elements: !2548)
!2548 = !{!2549, !2613}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2547, file: !955, line: 161, baseType: !2550, size: 64)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 64)
!2551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !41, line: 110, size: 1152, elements: !2552)
!2552 = !{!2553, !2563, !2584, !2585, !2586, !2587, !2588, !2600, !2601, !2602}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2551, file: !41, line: 111, baseType: !2554, size: 384)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !41, line: 19, size: 384, elements: !2555)
!2555 = !{!2556, !2558, !2559, !2560, !2561, !2562}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2554, file: !41, line: 20, baseType: !2557, size: 64)
!2557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !163)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2554, file: !41, line: 21, baseType: !2557, size: 64, offset: 64)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2554, file: !41, line: 22, baseType: !2557, size: 64, offset: 128)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2554, file: !41, line: 23, baseType: !163, size: 64, offset: 192)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2554, file: !41, line: 24, baseType: !163, size: 64, offset: 256)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2554, file: !41, line: 25, baseType: !163, size: 64, offset: 320)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2551, file: !41, line: 112, baseType: !2564, size: 64, offset: 384)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 64)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2566, line: 105, size: 128, elements: !2567)
!2566 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2567 = !{!2568, !2569}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2565, file: !2566, line: 110, baseType: !163, size: 64)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2565, file: !2566, line: 118, baseType: !2570, size: 64, offset: 64)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2566, line: 95, size: 448, elements: !2572)
!2572 = !{!2573, !2574, !2579, !2580, !2581, !2582, !2583}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2571, file: !2566, line: 96, baseType: !367, size: 64)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2571, file: !2566, line: 97, baseType: !2575, size: 64, offset: 64)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 64)
!2576 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2566, line: 60, baseType: !2577)
!2577 = !DISubroutineType(types: !2578)
!2578 = !{null, !2564}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2571, file: !2566, line: 98, baseType: !2575, size: 64, offset: 128)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2571, file: !2566, line: 99, baseType: !262, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2571, file: !2566, line: 100, baseType: !262, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2571, file: !2566, line: 101, baseType: !612, size: 128, align: 64, offset: 256)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2571, file: !2566, line: 102, baseType: !2564, size: 64, offset: 384)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2551, file: !41, line: 113, baseType: !2565, size: 128, offset: 448)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2551, file: !41, line: 114, baseType: !1722, size: 192, offset: 576)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2551, file: !41, line: 115, baseType: !40, size: 32, offset: 768)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2551, file: !41, line: 116, baseType: !7, size: 32, offset: 800)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2551, file: !41, line: 117, baseType: !2589, size: 64, offset: 832)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2591)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !41, line: 67, size: 256, elements: !2592)
!2592 = !{!2593, !2594, !2598, !2599}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2591, file: !41, line: 73, baseType: !1065, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2591, file: !41, line: 78, baseType: !2595, size: 64, offset: 64)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 64)
!2596 = !DISubroutineType(types: !2597)
!2597 = !{null, !2550}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2591, file: !41, line: 83, baseType: !2595, size: 64, offset: 128)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2591, file: !41, line: 89, baseType: !1250, size: 64, offset: 192)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2551, file: !41, line: 118, baseType: !138, size: 64, offset: 896)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2551, file: !41, line: 119, baseType: !197, size: 32, offset: 960)
!2602 = !DIDerivedType(tag: DW_TAG_member, scope: !2551, file: !41, line: 120, baseType: !2603, size: 128, offset: 1024)
!2603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2551, file: !41, line: 120, size: 128, elements: !2604)
!2604 = !{!2605, !2611}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2603, file: !41, line: 121, baseType: !2606, size: 128)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2607, line: 6, size: 128, elements: !2608)
!2607 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2608 = !{!2609, !2610}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2606, file: !2607, line: 7, baseType: !152, size: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2606, file: !2607, line: 8, baseType: !152, size: 64, offset: 64)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2603, file: !41, line: 122, baseType: !2612)
!2612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2606, elements: !1943)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2547, file: !955, line: 162, baseType: !138, size: 64, offset: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !959, file: !955, line: 176, baseType: !612, size: 128, align: 64)
!2615 = !DIDerivedType(tag: DW_TAG_member, scope: !954, file: !955, line: 179, baseType: !2616, size: 32, offset: 384)
!2616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !954, file: !955, line: 179, size: 32, elements: !2617)
!2617 = !{!2618, !2619, !2620, !2621}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2616, file: !955, line: 184, baseType: !979, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2616, file: !955, line: 192, baseType: !7, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2616, file: !955, line: 194, baseType: !7, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2616, file: !955, line: 195, baseType: !197, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !954, file: !955, line: 199, baseType: !979, size: 32, offset: 416)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !889, file: !54, line: 1964, baseType: !2624, size: 64, offset: 1344)
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 64)
!2625 = !DISubroutineType(types: !2626)
!2626 = !{!558, !834, !2627}
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2629, line: 12, size: 256, elements: !2630)
!2629 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2630 = !{!2631, !2632, !2633, !2634, !2635}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2628, file: !2629, line: 13, baseType: !229, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2628, file: !2629, line: 16, baseType: !197, size: 32, offset: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2628, file: !2629, line: 23, baseType: !163, size: 64, offset: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2628, file: !2629, line: 30, baseType: !163, size: 64, offset: 128)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2628, file: !2629, line: 33, baseType: !2636, size: 64, offset: 192)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 64)
!2637 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !955, line: 27, flags: DIFlagFwdDecl)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !889, file: !54, line: 1966, baseType: !2624, size: 64, offset: 1408)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !835, file: !54, line: 1424, baseType: !2640, size: 64, offset: 448)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2642)
!2642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !48, line: 322, size: 704, elements: !2643)
!2643 = !{!2644, !2690, !2694, !2698, !2699, !2700, !2701, !2702, !2707, !2712, !2716}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2642, file: !48, line: 323, baseType: !2645, size: 64)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = !DISubroutineType(types: !2647)
!2647 = !{!197, !2648}
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !48, line: 294, size: 1600, elements: !2650)
!2650 = !{!2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2675, !2676, !2677}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2649, file: !48, line: 295, baseType: !315, size: 128)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2649, file: !48, line: 296, baseType: !247, size: 128, offset: 128)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2649, file: !48, line: 297, baseType: !247, size: 128, offset: 256)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2649, file: !48, line: 298, baseType: !247, size: 128, offset: 384)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2649, file: !48, line: 299, baseType: !1396, size: 192, offset: 512)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2649, file: !48, line: 300, baseType: !483, offset: 704)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2649, file: !48, line: 301, baseType: !979, size: 32, offset: 704)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2649, file: !48, line: 302, baseType: !834, size: 64, offset: 768)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2649, file: !48, line: 303, baseType: !2660, size: 64, offset: 832)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !48, line: 68, size: 64, elements: !2661)
!2661 = !{!2662, !2674}
!2662 = !DIDerivedType(tag: DW_TAG_member, scope: !2660, file: !48, line: 69, baseType: !2663, size: 32)
!2663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2660, file: !48, line: 69, size: 32, elements: !2664)
!2664 = !{!2665, !2666, !2667}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2663, file: !48, line: 70, baseType: !674, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2663, file: !48, line: 71, baseType: !682, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2663, file: !48, line: 72, baseType: !2668, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2669, line: 24, baseType: !2670)
!2669 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2669, line: 22, size: 32, elements: !2671)
!2671 = !{!2672}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2670, file: !2669, line: 23, baseType: !2673, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2669, line: 20, baseType: !680)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2660, file: !48, line: 74, baseType: !47, size: 32, offset: 32)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2649, file: !48, line: 304, baseType: !768, size: 64, offset: 896)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2649, file: !48, line: 305, baseType: !163, size: 64, offset: 960)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2649, file: !48, line: 306, baseType: !2678, size: 576, offset: 1024)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !48, line: 205, size: 576, elements: !2679)
!2679 = !{!2680, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2678, file: !48, line: 206, baseType: !2681, size: 64)
!2681 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !48, line: 66, baseType: !375)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2678, file: !48, line: 207, baseType: !2681, size: 64, offset: 64)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2678, file: !48, line: 208, baseType: !2681, size: 64, offset: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2678, file: !48, line: 209, baseType: !2681, size: 64, offset: 192)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2678, file: !48, line: 210, baseType: !2681, size: 64, offset: 256)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2678, file: !48, line: 211, baseType: !2681, size: 64, offset: 320)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2678, file: !48, line: 212, baseType: !2681, size: 64, offset: 384)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2678, file: !48, line: 213, baseType: !775, size: 64, offset: 448)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2678, file: !48, line: 214, baseType: !775, size: 64, offset: 512)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2642, file: !48, line: 324, baseType: !2691, size: 64, offset: 64)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = !DISubroutineType(types: !2693)
!2693 = !{!2648, !834, !197}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2642, file: !48, line: 325, baseType: !2695, size: 64, offset: 128)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = !DISubroutineType(types: !2697)
!2697 = !{null, !2648}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2642, file: !48, line: 326, baseType: !2645, size: 64, offset: 192)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2642, file: !48, line: 327, baseType: !2645, size: 64, offset: 256)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2642, file: !48, line: 328, baseType: !2645, size: 64, offset: 320)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2642, file: !48, line: 329, baseType: !917, size: 64, offset: 384)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2642, file: !48, line: 332, baseType: !2703, size: 64, offset: 448)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 64)
!2704 = !DISubroutineType(types: !2705)
!2705 = !{!2706, !668}
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2642, file: !48, line: 333, baseType: !2708, size: 64, offset: 512)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 64)
!2709 = !DISubroutineType(types: !2710)
!2710 = !{!197, !668, !2711}
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 64)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2642, file: !48, line: 335, baseType: !2713, size: 64, offset: 576)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 64)
!2714 = !DISubroutineType(types: !2715)
!2715 = !{!197, !668, !2706}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2642, file: !48, line: 337, baseType: !2717, size: 64, offset: 640)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2718, size: 64)
!2718 = !DISubroutineType(types: !2719)
!2719 = !{!197, !834, !2720}
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !835, file: !54, line: 1425, baseType: !2722, size: 64, offset: 512)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2724)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !48, line: 428, size: 704, elements: !2725)
!2725 = !{!2726, !2730, !2731, !2735, !2736, !2737, !2752, !2775, !2779, !2780, !2803}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2724, file: !48, line: 429, baseType: !2727, size: 64)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{!197, !834, !197, !197, !784}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2724, file: !48, line: 430, baseType: !917, size: 64, offset: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2724, file: !48, line: 431, baseType: !2732, size: 64, offset: 128)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 64)
!2733 = !DISubroutineType(types: !2734)
!2734 = !{!197, !834, !7}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2724, file: !48, line: 432, baseType: !2732, size: 64, offset: 192)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2724, file: !48, line: 433, baseType: !917, size: 64, offset: 256)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2724, file: !48, line: 434, baseType: !2738, size: 64, offset: 320)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 64)
!2739 = !DISubroutineType(types: !2740)
!2740 = !{!197, !834, !197, !2741}
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !48, line: 415, size: 256, elements: !2743)
!2743 = !{!2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2742, file: !48, line: 416, baseType: !197, size: 32)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2742, file: !48, line: 417, baseType: !7, size: 32, offset: 32)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2742, file: !48, line: 418, baseType: !7, size: 32, offset: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2742, file: !48, line: 420, baseType: !7, size: 32, offset: 96)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2742, file: !48, line: 421, baseType: !7, size: 32, offset: 128)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2742, file: !48, line: 422, baseType: !7, size: 32, offset: 160)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2742, file: !48, line: 423, baseType: !7, size: 32, offset: 192)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2742, file: !48, line: 424, baseType: !7, size: 32, offset: 224)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2724, file: !48, line: 435, baseType: !2753, size: 64, offset: 384)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2754 = !DISubroutineType(types: !2755)
!2755 = !{!197, !834, !2660, !2756}
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !48, line: 343, size: 960, elements: !2758)
!2758 = !{!2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2757, file: !48, line: 344, baseType: !197, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2757, file: !48, line: 345, baseType: !152, size: 64, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2757, file: !48, line: 346, baseType: !152, size: 64, offset: 128)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2757, file: !48, line: 347, baseType: !152, size: 64, offset: 192)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2757, file: !48, line: 348, baseType: !152, size: 64, offset: 256)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2757, file: !48, line: 349, baseType: !152, size: 64, offset: 320)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2757, file: !48, line: 350, baseType: !152, size: 64, offset: 384)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2757, file: !48, line: 351, baseType: !373, size: 64, offset: 448)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2757, file: !48, line: 353, baseType: !373, size: 64, offset: 512)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2757, file: !48, line: 354, baseType: !197, size: 32, offset: 576)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2757, file: !48, line: 355, baseType: !197, size: 32, offset: 608)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2757, file: !48, line: 356, baseType: !152, size: 64, offset: 640)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2757, file: !48, line: 357, baseType: !152, size: 64, offset: 704)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2757, file: !48, line: 358, baseType: !152, size: 64, offset: 768)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2757, file: !48, line: 359, baseType: !373, size: 64, offset: 832)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2757, file: !48, line: 360, baseType: !197, size: 32, offset: 896)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2724, file: !48, line: 436, baseType: !2776, size: 64, offset: 448)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{!197, !834, !2720, !2756}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2724, file: !48, line: 438, baseType: !2753, size: 64, offset: 512)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2724, file: !48, line: 439, baseType: !2781, size: 64, offset: 576)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = !DISubroutineType(types: !2783)
!2783 = !{!197, !834, !2784}
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !48, line: 409, size: 1408, elements: !2786)
!2786 = !{!2787, !2788}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2785, file: !48, line: 410, baseType: !7, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2785, file: !48, line: 411, baseType: !2789, size: 1344, offset: 64)
!2789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2790, size: 1344, elements: !524)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !48, line: 395, size: 448, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2802}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2790, file: !48, line: 396, baseType: !7, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2790, file: !48, line: 397, baseType: !7, size: 32, offset: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2790, file: !48, line: 399, baseType: !7, size: 32, offset: 64)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2790, file: !48, line: 400, baseType: !7, size: 32, offset: 96)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2790, file: !48, line: 401, baseType: !7, size: 32, offset: 128)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2790, file: !48, line: 402, baseType: !7, size: 32, offset: 160)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2790, file: !48, line: 403, baseType: !7, size: 32, offset: 192)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2790, file: !48, line: 404, baseType: !156, size: 64, offset: 256)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2790, file: !48, line: 405, baseType: !2801, size: 64, offset: 320)
!2801 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !151, line: 126, baseType: !152)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2790, file: !48, line: 406, baseType: !2801, size: 64, offset: 384)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2724, file: !48, line: 440, baseType: !2732, size: 64, offset: 640)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !835, file: !54, line: 1426, baseType: !2805, size: 64, offset: 576)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2807)
!2807 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !54, line: 49, flags: DIFlagFwdDecl)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !835, file: !54, line: 1427, baseType: !163, size: 64, offset: 640)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !835, file: !54, line: 1428, baseType: !163, size: 64, offset: 704)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !835, file: !54, line: 1429, baseType: !163, size: 64, offset: 768)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !835, file: !54, line: 1430, baseType: !629, size: 64, offset: 832)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !835, file: !54, line: 1431, baseType: !999, size: 256, offset: 896)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !835, file: !54, line: 1432, baseType: !197, size: 32, offset: 1152)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !835, file: !54, line: 1433, baseType: !979, size: 32, offset: 1184)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !835, file: !54, line: 1437, baseType: !2816, size: 64, offset: 1216)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2818, size: 64)
!2818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2819)
!2819 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !54, line: 1437, flags: DIFlagFwdDecl)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !835, file: !54, line: 1449, baseType: !2821, size: 64, offset: 1280)
!2821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !645, line: 34, size: 64, elements: !2822)
!2822 = !{!2823}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2821, file: !645, line: 35, baseType: !648, size: 64)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !835, file: !54, line: 1450, baseType: !247, size: 128, offset: 1344)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !835, file: !54, line: 1451, baseType: !2826, size: 64, offset: 1472)
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 64)
!2827 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !54, line: 699, flags: DIFlagFwdDecl)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !835, file: !54, line: 1452, baseType: !2145, size: 64, offset: 1536)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !835, file: !54, line: 1453, baseType: !2830, size: 64, offset: 1600)
!2830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2831, size: 64)
!2831 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !54, line: 1453, flags: DIFlagFwdDecl)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !835, file: !54, line: 1454, baseType: !315, size: 128, offset: 1664)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !835, file: !54, line: 1455, baseType: !7, size: 32, offset: 1792)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !835, file: !54, line: 1456, baseType: !2835, size: 2432, offset: 1856)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !48, line: 518, size: 2432, elements: !2836)
!2836 = !{!2837, !2838, !2839, !2841, !2873}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2835, file: !48, line: 519, baseType: !7, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2835, file: !48, line: 520, baseType: !999, size: 256, offset: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2835, file: !48, line: 521, baseType: !2840, size: 192, offset: 320)
!2840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !668, size: 192, elements: !524)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2835, file: !48, line: 522, baseType: !2842, size: 1728, offset: 512)
!2842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2843, size: 1728, elements: !524)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !48, line: 222, size: 576, elements: !2844)
!2844 = !{!2845, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2843, file: !48, line: 223, baseType: !2846, size: 64)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !48, line: 443, size: 256, elements: !2848)
!2848 = !{!2849, !2850, !2863, !2864}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2847, file: !48, line: 444, baseType: !197, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2847, file: !48, line: 445, baseType: !2851, size: 64, offset: 64)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2853)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !48, line: 310, size: 512, elements: !2854)
!2854 = !{!2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2853, file: !48, line: 311, baseType: !917, size: 64)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2853, file: !48, line: 312, baseType: !917, size: 64, offset: 64)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2853, file: !48, line: 313, baseType: !917, size: 64, offset: 128)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2853, file: !48, line: 314, baseType: !917, size: 64, offset: 192)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2853, file: !48, line: 315, baseType: !2645, size: 64, offset: 256)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2853, file: !48, line: 316, baseType: !2645, size: 64, offset: 320)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2853, file: !48, line: 317, baseType: !2645, size: 64, offset: 384)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2853, file: !48, line: 318, baseType: !2717, size: 64, offset: 448)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2847, file: !48, line: 446, baseType: !868, size: 64, offset: 128)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2847, file: !48, line: 447, baseType: !2846, size: 64, offset: 192)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2843, file: !48, line: 224, baseType: !197, size: 32, offset: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2843, file: !48, line: 226, baseType: !247, size: 128, offset: 128)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2843, file: !48, line: 227, baseType: !163, size: 64, offset: 256)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2843, file: !48, line: 228, baseType: !7, size: 32, offset: 320)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2843, file: !48, line: 229, baseType: !7, size: 32, offset: 352)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2843, file: !48, line: 230, baseType: !2681, size: 64, offset: 384)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2843, file: !48, line: 231, baseType: !2681, size: 64, offset: 448)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2843, file: !48, line: 232, baseType: !138, size: 64, offset: 512)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2835, file: !48, line: 523, baseType: !2874, size: 192, offset: 2240)
!2874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2851, size: 192, elements: !524)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !835, file: !54, line: 1458, baseType: !2876, size: 2112, offset: 4288)
!2876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !54, line: 1410, size: 2112, elements: !2877)
!2877 = !{!2878, !2879, !2880}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2876, file: !54, line: 1411, baseType: !197, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2876, file: !54, line: 1412, baseType: !1701, size: 128, offset: 64)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2876, file: !54, line: 1413, baseType: !2881, size: 1920, offset: 192)
!2881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2882, size: 1920, elements: !524)
!2882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2883, line: 12, size: 640, elements: !2884)
!2883 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2884 = !{!2885, !2893, !2895, !2900, !2901}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2882, file: !2883, line: 13, baseType: !2886, size: 320)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2887, line: 17, size: 320, elements: !2888)
!2887 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2888 = !{!2889, !2890, !2891, !2892}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2886, file: !2887, line: 18, baseType: !197, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2886, file: !2887, line: 19, baseType: !197, size: 32, offset: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2886, file: !2887, line: 20, baseType: !1701, size: 128, offset: 64)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2886, file: !2887, line: 22, baseType: !612, size: 128, align: 64, offset: 192)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2882, file: !2883, line: 14, baseType: !2894, size: 64, offset: 320)
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2882, file: !2883, line: 15, baseType: !2896, size: 64, offset: 384)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2897, line: 16, size: 64, elements: !2898)
!2897 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2898 = !{!2899}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2896, file: !2897, line: 17, baseType: !1439, size: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2882, file: !2883, line: 16, baseType: !1701, size: 128, offset: 448)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2882, file: !2883, line: 17, baseType: !979, size: 32, offset: 576)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !835, file: !54, line: 1465, baseType: !138, size: 64, offset: 6400)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !835, file: !54, line: 1468, baseType: !296, size: 32, offset: 6464)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !835, file: !54, line: 1470, baseType: !775, size: 64, offset: 6528)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !835, file: !54, line: 1471, baseType: !775, size: 64, offset: 6592)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !835, file: !54, line: 1473, baseType: !297, size: 32, offset: 6656)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !835, file: !54, line: 1474, baseType: !2908, size: 64, offset: 6720)
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 64)
!2909 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !54, line: 603, flags: DIFlagFwdDecl)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !835, file: !54, line: 1477, baseType: !2911, size: 256, offset: 6784)
!2911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 256, elements: !2441)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !835, file: !54, line: 1478, baseType: !2913, size: 128, offset: 7040)
!2913 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2914, line: 18, baseType: !2915)
!2914 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2914, line: 16, size: 128, elements: !2916)
!2916 = !{!2917}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2915, file: !2914, line: 17, baseType: !2918, size: 128)
!2918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, size: 128, elements: !1955)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !835, file: !54, line: 1480, baseType: !7, size: 32, offset: 7168)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !835, file: !54, line: 1481, baseType: !2921, size: 32, offset: 7200)
!2921 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !151, line: 150, baseType: !7)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !835, file: !54, line: 1487, baseType: !1396, size: 192, offset: 7232)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !835, file: !54, line: 1493, baseType: !185, size: 64, offset: 7424)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !835, file: !54, line: 1495, baseType: !2925, size: 64, offset: 7488)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64)
!2926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2927)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !627, line: 135, size: 1024, align: 512, elements: !2928)
!2928 = !{!2929, !2933, !2934, !2941, !2947, !2951, !2955, !2959, !2960, !2964, !2968, !2973, !2977}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2927, file: !627, line: 136, baseType: !2930, size: 64)
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 64)
!2931 = !DISubroutineType(types: !2932)
!2932 = !{!197, !629, !7}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2927, file: !627, line: 137, baseType: !2930, size: 64, offset: 64)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2927, file: !627, line: 138, baseType: !2935, size: 64, offset: 128)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{!197, !2938, !2940}
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 64)
!2939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !630)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2927, file: !627, line: 139, baseType: !2942, size: 64, offset: 192)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64)
!2943 = !DISubroutineType(types: !2944)
!2944 = !{!197, !2938, !7, !185, !2945}
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 64)
!2946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !653)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2927, file: !627, line: 141, baseType: !2948, size: 64, offset: 256)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = !DISubroutineType(types: !2950)
!2950 = !{!197, !2938}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2927, file: !627, line: 142, baseType: !2952, size: 64, offset: 320)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{!197, !629}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2927, file: !627, line: 143, baseType: !2956, size: 64, offset: 384)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{null, !629}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2927, file: !627, line: 144, baseType: !2956, size: 64, offset: 448)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2927, file: !627, line: 145, baseType: !2961, size: 64, offset: 512)
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 64)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{null, !629, !668}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2927, file: !627, line: 146, baseType: !2965, size: 64, offset: 576)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = !DISubroutineType(types: !2967)
!2967 = !{!430, !629, !430, !197}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2927, file: !627, line: 147, baseType: !2969, size: 64, offset: 640)
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 64)
!2970 = !DISubroutineType(types: !2971)
!2971 = !{!625, !2972}
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2927, file: !627, line: 148, baseType: !2974, size: 64, offset: 704)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!197, !784, !262}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2927, file: !627, line: 149, baseType: !2978, size: 64, offset: 768)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{!629, !629, !2981}
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 64)
!2982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !835, file: !54, line: 1500, baseType: !197, size: 32, offset: 7552)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !835, file: !54, line: 1502, baseType: !2985, size: 448, offset: 7616)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2629, line: 60, size: 448, elements: !2986)
!2986 = !{!2987, !2992, !2993, !2994, !2995, !2996, !2997}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2985, file: !2629, line: 61, baseType: !2988, size: 64)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = !DISubroutineType(types: !2990)
!2990 = !{!163, !2991, !2627}
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2985, file: !2629, line: 63, baseType: !2988, size: 64, offset: 64)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2985, file: !2629, line: 66, baseType: !558, size: 64, offset: 128)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2985, file: !2629, line: 67, baseType: !197, size: 32, offset: 192)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2985, file: !2629, line: 68, baseType: !7, size: 32, offset: 224)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2985, file: !2629, line: 71, baseType: !247, size: 128, offset: 256)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2985, file: !2629, line: 77, baseType: !2998, size: 64, offset: 384)
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !835, file: !54, line: 1505, baseType: !367, size: 64, offset: 8064)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !835, file: !54, line: 1508, baseType: !367, size: 64, offset: 8128)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !835, file: !54, line: 1511, baseType: !197, size: 32, offset: 8192)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !835, file: !54, line: 1514, baseType: !1133, size: 32, offset: 8224)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !835, file: !54, line: 1517, baseType: !3004, size: 64, offset: 8256)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 64)
!3005 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !364, line: 18, flags: DIFlagFwdDecl)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !835, file: !54, line: 1518, baseType: !873, size: 64, offset: 8320)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !835, file: !54, line: 1525, baseType: !1933, size: 64, offset: 8384)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !835, file: !54, line: 1532, baseType: !3009, size: 64, offset: 8448)
!3009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3010, line: 52, size: 64, elements: !3011)
!3010 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3011 = !{!3012}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3009, file: !3010, line: 53, baseType: !3013, size: 64)
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 64)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3010, line: 40, size: 256, elements: !3015)
!3015 = !{!3016, !3017, !3022}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3014, file: !3010, line: 42, baseType: !483)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3014, file: !3010, line: 44, baseType: !3018, size: 192)
!3018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3010, line: 28, size: 192, elements: !3019)
!3019 = !{!3020, !3021}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3018, file: !3010, line: 29, baseType: !247, size: 128)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3018, file: !3010, line: 31, baseType: !558, size: 64, offset: 128)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3014, file: !3010, line: 49, baseType: !558, size: 64, offset: 192)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !835, file: !54, line: 1533, baseType: !3009, size: 64, offset: 8512)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !835, file: !54, line: 1534, baseType: !612, size: 128, align: 64, offset: 8576)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !835, file: !54, line: 1535, baseType: !363, size: 256, offset: 8704)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !835, file: !54, line: 1537, baseType: !1396, size: 192, offset: 8960)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !835, file: !54, line: 1542, baseType: !197, size: 32, offset: 9152)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !835, file: !54, line: 1545, baseType: !483, offset: 9184)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !835, file: !54, line: 1546, baseType: !247, size: 128, offset: 9216)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !835, file: !54, line: 1548, baseType: !483, offset: 9344)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !835, file: !54, line: 1549, baseType: !247, size: 128, offset: 9344)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !669, file: !54, line: 624, baseType: !966, size: 64, offset: 256)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !669, file: !54, line: 631, baseType: !163, size: 64, offset: 320)
!3034 = !DIDerivedType(tag: DW_TAG_member, scope: !669, file: !54, line: 639, baseType: !3035, size: 32, offset: 384)
!3035 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !669, file: !54, line: 639, size: 32, elements: !3036)
!3036 = !{!3037, !3039}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3035, file: !54, line: 640, baseType: !3038, size: 32)
!3038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3035, file: !54, line: 641, baseType: !7, size: 32)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !669, file: !54, line: 643, baseType: !750, size: 32, offset: 416)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !669, file: !54, line: 644, baseType: !768, size: 64, offset: 448)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !669, file: !54, line: 645, baseType: !771, size: 128, offset: 512)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !669, file: !54, line: 646, baseType: !771, size: 128, offset: 640)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !669, file: !54, line: 647, baseType: !771, size: 128, offset: 768)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !669, file: !54, line: 648, baseType: !483, offset: 896)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !669, file: !54, line: 649, baseType: !212, size: 16, offset: 896)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !669, file: !54, line: 650, baseType: !271, size: 8, offset: 912)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !669, file: !54, line: 651, baseType: !271, size: 8, offset: 920)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !669, file: !54, line: 652, baseType: !2801, size: 64, offset: 960)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !669, file: !54, line: 659, baseType: !163, size: 64, offset: 1024)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !669, file: !54, line: 660, baseType: !999, size: 256, offset: 1088)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !669, file: !54, line: 662, baseType: !163, size: 64, offset: 1344)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !669, file: !54, line: 663, baseType: !163, size: 64, offset: 1408)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !669, file: !54, line: 665, baseType: !315, size: 128, offset: 1472)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !669, file: !54, line: 666, baseType: !247, size: 128, offset: 1600)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !669, file: !54, line: 675, baseType: !247, size: 128, offset: 1728)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !669, file: !54, line: 676, baseType: !247, size: 128, offset: 1856)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !669, file: !54, line: 677, baseType: !247, size: 128, offset: 1984)
!3059 = !DIDerivedType(tag: DW_TAG_member, scope: !669, file: !54, line: 678, baseType: !3060, size: 128, offset: 2112)
!3060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !669, file: !54, line: 678, size: 128, elements: !3061)
!3061 = !{!3062, !3063}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3060, file: !54, line: 679, baseType: !873, size: 64)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3060, file: !54, line: 680, baseType: !612, size: 128, align: 64)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !669, file: !54, line: 682, baseType: !369, size: 64, offset: 2240)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !669, file: !54, line: 683, baseType: !369, size: 64, offset: 2304)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !669, file: !54, line: 684, baseType: !979, size: 32, offset: 2368)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !669, file: !54, line: 685, baseType: !979, size: 32, offset: 2400)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !669, file: !54, line: 686, baseType: !979, size: 32, offset: 2432)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !669, file: !54, line: 688, baseType: !979, size: 32, offset: 2464)
!3070 = !DIDerivedType(tag: DW_TAG_member, scope: !669, file: !54, line: 690, baseType: !3071, size: 64, offset: 2496)
!3071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !669, file: !54, line: 690, size: 64, elements: !3072)
!3072 = !{!3073, !3295}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3071, file: !54, line: 691, baseType: !3074, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3076)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !54, line: 1822, size: 2048, elements: !3077)
!3077 = !{!3078, !3079, !3083, !3088, !3092, !3093, !3094, !3098, !3111, !3112, !3119, !3123, !3124, !3128, !3129, !3133, !3138, !3139, !3143, !3147, !3255, !3259, !3260, !3264, !3265, !3269, !3273, !3278, !3282, !3286, !3290, !3294}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3076, file: !54, line: 1823, baseType: !868, size: 64)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3076, file: !54, line: 1824, baseType: !3080, size: 64, offset: 64)
!3080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3081, size: 64)
!3081 = !DISubroutineType(types: !3082)
!3082 = !{!768, !599, !768, !197}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3076, file: !54, line: 1825, baseType: !3084, size: 64, offset: 128)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3085 = !DISubroutineType(types: !3086)
!3086 = !{!554, !599, !430, !569, !3087}
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3076, file: !54, line: 1826, baseType: !3089, size: 64, offset: 192)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 64)
!3090 = !DISubroutineType(types: !3091)
!3091 = !{!554, !599, !185, !569, !3087}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3076, file: !54, line: 1827, baseType: !1069, size: 64, offset: 256)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3076, file: !54, line: 1828, baseType: !1069, size: 64, offset: 320)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3076, file: !54, line: 1829, baseType: !3095, size: 64, offset: 384)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3096, size: 64)
!3096 = !DISubroutineType(types: !3097)
!3097 = !{!197, !1072, !262}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3076, file: !54, line: 1830, baseType: !3099, size: 64, offset: 448)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = !DISubroutineType(types: !3101)
!3101 = !{!197, !599, !3102}
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !54, line: 1776, size: 128, elements: !3104)
!3104 = !{!3105, !3110}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3103, file: !54, line: 1777, baseType: !3106, size: 64)
!3106 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !54, line: 1773, baseType: !3107)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3108, size: 64)
!3108 = !DISubroutineType(types: !3109)
!3109 = !{!197, !3102, !185, !197, !768, !152, !7}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3103, file: !54, line: 1778, baseType: !768, size: 64, offset: 64)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3076, file: !54, line: 1831, baseType: !3099, size: 64, offset: 512)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3076, file: !54, line: 1832, baseType: !3113, size: 64, offset: 576)
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3114, size: 64)
!3114 = !DISubroutineType(types: !3115)
!3115 = !{!3116, !599, !3117}
!3116 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !210, line: 52, baseType: !7)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3118 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !854, line: 27, flags: DIFlagFwdDecl)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3076, file: !54, line: 1833, baseType: !3120, size: 64, offset: 640)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DISubroutineType(types: !3122)
!3122 = !{!558, !599, !7, !163}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3076, file: !54, line: 1834, baseType: !3120, size: 64, offset: 704)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3076, file: !54, line: 1835, baseType: !3125, size: 64, offset: 768)
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3126, size: 64)
!3126 = !DISubroutineType(types: !3127)
!3127 = !{!197, !599, !1204}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3076, file: !54, line: 1836, baseType: !163, size: 64, offset: 832)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3076, file: !54, line: 1837, baseType: !3130, size: 64, offset: 896)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = !DISubroutineType(types: !3132)
!3132 = !{!197, !668, !599}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3076, file: !54, line: 1838, baseType: !3134, size: 64, offset: 960)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 64)
!3135 = !DISubroutineType(types: !3136)
!3136 = !{!197, !599, !3137}
!3137 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !54, line: 1007, baseType: !138)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3076, file: !54, line: 1839, baseType: !3130, size: 64, offset: 1024)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3076, file: !54, line: 1840, baseType: !3140, size: 64, offset: 1088)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 64)
!3141 = !DISubroutineType(types: !3142)
!3142 = !{!197, !599, !768, !768, !197}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3076, file: !54, line: 1841, baseType: !3144, size: 64, offset: 1152)
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 64)
!3145 = !DISubroutineType(types: !3146)
!3146 = !{!197, !197, !599, !197}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3076, file: !54, line: 1842, baseType: !3148, size: 64, offset: 1216)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{!197, !599, !197, !3151}
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !54, line: 1062, size: 1664, elements: !3153)
!3153 = !{!3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3185, !3186, !3187, !3200, !3231}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3152, file: !54, line: 1063, baseType: !3151, size: 64)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3152, file: !54, line: 1064, baseType: !247, size: 128, offset: 64)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3152, file: !54, line: 1065, baseType: !315, size: 128, offset: 192)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3152, file: !54, line: 1066, baseType: !247, size: 128, offset: 320)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3152, file: !54, line: 1069, baseType: !247, size: 128, offset: 448)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3152, file: !54, line: 1072, baseType: !3137, size: 64, offset: 576)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3152, file: !54, line: 1073, baseType: !7, size: 32, offset: 640)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3152, file: !54, line: 1074, baseType: !204, size: 8, offset: 672)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3152, file: !54, line: 1075, baseType: !7, size: 32, offset: 704)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3152, file: !54, line: 1076, baseType: !197, size: 32, offset: 736)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3152, file: !54, line: 1077, baseType: !1701, size: 128, offset: 768)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3152, file: !54, line: 1078, baseType: !599, size: 64, offset: 896)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3152, file: !54, line: 1079, baseType: !768, size: 64, offset: 960)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3152, file: !54, line: 1080, baseType: !768, size: 64, offset: 1024)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3152, file: !54, line: 1082, baseType: !3169, size: 64, offset: 1088)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !54, line: 1314, size: 320, elements: !3171)
!3171 = !{!3172, !3180, !3181, !3182, !3183, !3184}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3170, file: !54, line: 1315, baseType: !3173)
!3173 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3174, line: 20, baseType: !3175)
!3174 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3174, line: 11, elements: !3176)
!3176 = !{!3177}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3175, file: !3174, line: 12, baseType: !3178)
!3178 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !495, line: 33, baseType: !3179)
!3179 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 31, elements: !497)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3170, file: !54, line: 1316, baseType: !197, size: 32)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3170, file: !54, line: 1317, baseType: !197, size: 32, offset: 32)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3170, file: !54, line: 1318, baseType: !3169, size: 64, offset: 64)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3170, file: !54, line: 1319, baseType: !599, size: 64, offset: 128)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3170, file: !54, line: 1320, baseType: !612, size: 128, align: 64, offset: 192)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3152, file: !54, line: 1084, baseType: !163, size: 64, offset: 1152)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3152, file: !54, line: 1085, baseType: !163, size: 64, offset: 1216)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3152, file: !54, line: 1087, baseType: !3188, size: 64, offset: 1280)
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3189, size: 64)
!3189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3190)
!3190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !54, line: 1011, size: 128, elements: !3191)
!3191 = !{!3192, !3196}
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3190, file: !54, line: 1012, baseType: !3193, size: 64)
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 64)
!3194 = !DISubroutineType(types: !3195)
!3195 = !{null, !3151, !3151}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3190, file: !54, line: 1013, baseType: !3197, size: 64, offset: 64)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 64)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{null, !3151}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3152, file: !54, line: 1088, baseType: !3201, size: 64, offset: 1344)
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3203)
!3203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !54, line: 1016, size: 512, elements: !3204)
!3204 = !{!3205, !3209, !3213, !3214, !3218, !3222, !3226, !3230}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3203, file: !54, line: 1017, baseType: !3206, size: 64)
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 64)
!3207 = !DISubroutineType(types: !3208)
!3208 = !{!3137, !3137}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3203, file: !54, line: 1018, baseType: !3210, size: 64, offset: 64)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{null, !3137}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3203, file: !54, line: 1019, baseType: !3197, size: 64, offset: 128)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3203, file: !54, line: 1020, baseType: !3215, size: 64, offset: 192)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 64)
!3216 = !DISubroutineType(types: !3217)
!3217 = !{!197, !3151, !197}
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3203, file: !54, line: 1021, baseType: !3219, size: 64, offset: 256)
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 64)
!3220 = !DISubroutineType(types: !3221)
!3221 = !{!262, !3151}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3203, file: !54, line: 1022, baseType: !3223, size: 64, offset: 320)
!3223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3224, size: 64)
!3224 = !DISubroutineType(types: !3225)
!3225 = !{!197, !3151, !197, !250}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3203, file: !54, line: 1023, baseType: !3227, size: 64, offset: 384)
!3227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3228, size: 64)
!3228 = !DISubroutineType(types: !3229)
!3229 = !{null, !3151, !1046}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3203, file: !54, line: 1024, baseType: !3219, size: 64, offset: 448)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3152, file: !54, line: 1097, baseType: !3232, size: 256, offset: 1408)
!3232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3152, file: !54, line: 1089, size: 256, elements: !3233)
!3233 = !{!3234, !3243, !3249}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3232, file: !54, line: 1090, baseType: !3235, size: 256)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3236, line: 10, size: 256, elements: !3237)
!3236 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3237 = !{!3238, !3239, !3242}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3235, file: !3236, line: 11, baseType: !296, size: 32)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3235, file: !3236, line: 12, baseType: !3240, size: 64, offset: 64)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 64)
!3241 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3236, line: 5, flags: DIFlagFwdDecl)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3235, file: !3236, line: 13, baseType: !247, size: 128, offset: 128)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3232, file: !54, line: 1091, baseType: !3244, size: 64)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3236, line: 17, size: 64, elements: !3245)
!3245 = !{!3246}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3244, file: !3236, line: 18, baseType: !3247, size: 64)
!3247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3248, size: 64)
!3248 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3236, line: 16, flags: DIFlagFwdDecl)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3232, file: !54, line: 1096, baseType: !3250, size: 192)
!3250 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3232, file: !54, line: 1092, size: 192, elements: !3251)
!3251 = !{!3252, !3253, !3254}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3250, file: !54, line: 1093, baseType: !247, size: 128)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3250, file: !54, line: 1094, baseType: !197, size: 32, offset: 128)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3250, file: !54, line: 1095, baseType: !7, size: 32, offset: 160)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3076, file: !54, line: 1843, baseType: !3256, size: 64, offset: 1280)
!3256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3257, size: 64)
!3257 = !DISubroutineType(types: !3258)
!3258 = !{!554, !599, !953, !197, !569, !3087, !197}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3076, file: !54, line: 1844, baseType: !1324, size: 64, offset: 1344)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3076, file: !54, line: 1845, baseType: !3261, size: 64, offset: 1408)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{!197, !197}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3076, file: !54, line: 1846, baseType: !3148, size: 64, offset: 1472)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3076, file: !54, line: 1847, baseType: !3266, size: 64, offset: 1536)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{!554, !2309, !599, !3087, !569, !7}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3076, file: !54, line: 1848, baseType: !3270, size: 64, offset: 1600)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = !DISubroutineType(types: !3272)
!3272 = !{!554, !599, !3087, !2309, !569, !7}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3076, file: !54, line: 1849, baseType: !3274, size: 64, offset: 1664)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = !DISubroutineType(types: !3276)
!3276 = !{!197, !599, !558, !3277, !1046}
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 64)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3076, file: !54, line: 1850, baseType: !3279, size: 64, offset: 1728)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!558, !599, !197, !768, !768}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3076, file: !54, line: 1852, baseType: !3283, size: 64, offset: 1792)
!3283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3284, size: 64)
!3284 = !DISubroutineType(types: !3285)
!3285 = !{null, !943, !599}
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3076, file: !54, line: 1856, baseType: !3287, size: 64, offset: 1856)
!3287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3288, size: 64)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{!554, !599, !768, !599, !768, !569, !7}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3076, file: !54, line: 1858, baseType: !3291, size: 64, offset: 1920)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = !DISubroutineType(types: !3293)
!3293 = !{!768, !599, !768, !599, !768, !768, !7}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3076, file: !54, line: 1861, baseType: !3140, size: 64, offset: 1984)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3071, file: !54, line: 692, baseType: !896, size: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !669, file: !54, line: 694, baseType: !3297, size: 64, offset: 2560)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !54, line: 1100, size: 384, elements: !3299)
!3299 = !{!3300, !3301, !3302, !3303}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3298, file: !54, line: 1101, baseType: !483)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3298, file: !54, line: 1102, baseType: !247, size: 128)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3298, file: !54, line: 1103, baseType: !247, size: 128, offset: 128)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3298, file: !54, line: 1104, baseType: !247, size: 128, offset: 256)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !669, file: !54, line: 695, baseType: !967, size: 1216, align: 64, offset: 2624)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !669, file: !54, line: 696, baseType: !247, size: 128, offset: 3840)
!3306 = !DIDerivedType(tag: DW_TAG_member, scope: !669, file: !54, line: 697, baseType: !3307, size: 64, offset: 3968)
!3307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !669, file: !54, line: 697, size: 64, elements: !3308)
!3308 = !{!3309, !3310, !3311, !3314, !3315}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3307, file: !54, line: 698, baseType: !2309, size: 64)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3307, file: !54, line: 699, baseType: !2826, size: 64)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3307, file: !54, line: 700, baseType: !3312, size: 64)
!3312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 64)
!3313 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !54, line: 700, flags: DIFlagFwdDecl)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3307, file: !54, line: 701, baseType: !430, size: 64)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3307, file: !54, line: 702, baseType: !7, size: 32)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !669, file: !54, line: 705, baseType: !297, size: 32, offset: 4032)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !669, file: !54, line: 708, baseType: !297, size: 32, offset: 4064)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !669, file: !54, line: 709, baseType: !2908, size: 64, offset: 4096)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !669, file: !54, line: 720, baseType: !138, size: 64, offset: 4160)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !630, file: !627, line: 98, baseType: !3321, size: 256, offset: 448)
!3321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 256, elements: !2441)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !630, file: !627, line: 101, baseType: !3323, size: 32, offset: 704)
!3323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3324, line: 25, size: 32, elements: !3325)
!3324 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3325 = !{!3326}
!3326 = !DIDerivedType(tag: DW_TAG_member, scope: !3323, file: !3324, line: 26, baseType: !3327, size: 32)
!3327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3323, file: !3324, line: 26, size: 32, elements: !3328)
!3328 = !{!3329}
!3329 = !DIDerivedType(tag: DW_TAG_member, scope: !3327, file: !3324, line: 30, baseType: !3330, size: 32)
!3330 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3327, file: !3324, line: 30, size: 32, elements: !3331)
!3331 = !{!3332, !3333}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3330, file: !3324, line: 31, baseType: !483)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3330, file: !3324, line: 32, baseType: !197, size: 32)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !630, file: !627, line: 102, baseType: !2925, size: 64, offset: 768)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !630, file: !627, line: 103, baseType: !834, size: 64, offset: 832)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !630, file: !627, line: 104, baseType: !163, size: 64, offset: 896)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !630, file: !627, line: 105, baseType: !138, size: 64, offset: 960)
!3338 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !627, line: 107, baseType: !3339, size: 128, offset: 1024)
!3339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !630, file: !627, line: 107, size: 128, elements: !3340)
!3340 = !{!3341, !3342}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3339, file: !627, line: 108, baseType: !247, size: 128)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3339, file: !627, line: 109, baseType: !3343, size: 64)
!3343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !630, file: !627, line: 111, baseType: !247, size: 128, offset: 1152)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !630, file: !627, line: 112, baseType: !247, size: 128, offset: 1280)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !630, file: !627, line: 120, baseType: !3347, size: 128, offset: 1408)
!3347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !630, file: !627, line: 116, size: 128, elements: !3348)
!3348 = !{!3349, !3350, !3351}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3347, file: !627, line: 117, baseType: !315, size: 128)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3347, file: !627, line: 118, baseType: !644, size: 128)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3347, file: !627, line: 119, baseType: !612, size: 128, align: 64)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !600, file: !54, line: 922, baseType: !668, size: 64, offset: 256)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !600, file: !54, line: 923, baseType: !3074, size: 64, offset: 320)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !600, file: !54, line: 929, baseType: !483, offset: 384)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !600, file: !54, line: 930, baseType: !53, size: 32, offset: 384)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !600, file: !54, line: 931, baseType: !367, size: 64, offset: 448)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !600, file: !54, line: 932, baseType: !7, size: 32, offset: 512)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !600, file: !54, line: 933, baseType: !2921, size: 32, offset: 544)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !600, file: !54, line: 934, baseType: !1396, size: 192, offset: 576)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !600, file: !54, line: 935, baseType: !768, size: 64, offset: 768)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !600, file: !54, line: 936, baseType: !3362, size: 192, offset: 832)
!3362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !54, line: 885, size: 192, elements: !3363)
!3363 = !{!3364, !3365, !3366, !3367, !3368, !3369}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3362, file: !54, line: 886, baseType: !3173)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3362, file: !54, line: 887, baseType: !1691, size: 64)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3362, file: !54, line: 888, baseType: !62, size: 32, offset: 64)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3362, file: !54, line: 889, baseType: !674, size: 32, offset: 96)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3362, file: !54, line: 889, baseType: !674, size: 32, offset: 128)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3362, file: !54, line: 890, baseType: !197, size: 32, offset: 160)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !600, file: !54, line: 937, baseType: !1767, size: 64, offset: 1024)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !600, file: !54, line: 938, baseType: !3372, size: 256, offset: 1088)
!3372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !54, line: 896, size: 256, elements: !3373)
!3373 = !{!3374, !3375, !3376, !3377, !3378, !3379}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3372, file: !54, line: 897, baseType: !163, size: 64)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3372, file: !54, line: 898, baseType: !7, size: 32, offset: 64)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3372, file: !54, line: 899, baseType: !7, size: 32, offset: 96)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3372, file: !54, line: 902, baseType: !7, size: 32, offset: 128)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3372, file: !54, line: 903, baseType: !7, size: 32, offset: 160)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3372, file: !54, line: 904, baseType: !768, size: 64, offset: 192)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !600, file: !54, line: 940, baseType: !152, size: 64, offset: 1344)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !600, file: !54, line: 945, baseType: !138, size: 64, offset: 1408)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !600, file: !54, line: 949, baseType: !247, size: 128, offset: 1472)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !600, file: !54, line: 950, baseType: !247, size: 128, offset: 1600)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !600, file: !54, line: 952, baseType: !966, size: 64, offset: 1728)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !600, file: !54, line: 953, baseType: !1133, size: 32, offset: 1792)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !600, file: !54, line: 954, baseType: !1133, size: 32, offset: 1824)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !590, file: !548, line: 174, baseType: !596, size: 64, offset: 320)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !590, file: !548, line: 176, baseType: !3389, size: 64, offset: 384)
!3389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3390, size: 64)
!3390 = !DISubroutineType(types: !3391)
!3391 = !{!197, !599, !476, !589, !1204}
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !578, file: !548, line: 90, baseType: !573, size: 64, offset: 192)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !578, file: !548, line: 91, baseType: !3394, size: 64, offset: 256)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !538, file: !471, line: 143, baseType: !3396, size: 64, offset: 256)
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 64)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!3399, !476}
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3400, size: 64)
!3400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3401)
!3401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !71, line: 39, size: 384, elements: !3402)
!3402 = !{!3403, !3404, !3408, !3412, !3418, !3422}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3401, file: !71, line: 40, baseType: !70, size: 32)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3401, file: !71, line: 41, baseType: !3405, size: 64, offset: 64)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = !DISubroutineType(types: !3407)
!3407 = !{!262}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3401, file: !71, line: 42, baseType: !3409, size: 64, offset: 128)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{!138}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3401, file: !71, line: 43, baseType: !3413, size: 64, offset: 192)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!2338, !3416}
!3416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3417, size: 64)
!3417 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !71, line: 19, flags: DIFlagFwdDecl)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3401, file: !71, line: 44, baseType: !3419, size: 64, offset: 256)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!2338}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3401, file: !71, line: 45, baseType: !707, size: 64, offset: 320)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !538, file: !471, line: 144, baseType: !3424, size: 64, offset: 320)
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3425, size: 64)
!3425 = !DISubroutineType(types: !3426)
!3426 = !{!2338, !476}
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !538, file: !471, line: 145, baseType: !3428, size: 64, offset: 384)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{null, !476, !3431, !3432}
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !470, file: !471, line: 70, baseType: !3434, size: 64, offset: 384)
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 64)
!3435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !854, line: 123, size: 1024, elements: !3436)
!3436 = !{!3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3565, !3566, !3567, !3568, !3569}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3435, file: !854, line: 124, baseType: !979, size: 32)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3435, file: !854, line: 125, baseType: !979, size: 32, offset: 32)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3435, file: !854, line: 135, baseType: !3434, size: 64, offset: 64)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3435, file: !854, line: 136, baseType: !185, size: 64, offset: 128)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3435, file: !854, line: 138, baseType: !992, size: 192, align: 64, offset: 192)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3435, file: !854, line: 140, baseType: !2338, size: 64, offset: 384)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3435, file: !854, line: 141, baseType: !7, size: 32, offset: 448)
!3444 = !DIDerivedType(tag: DW_TAG_member, scope: !3435, file: !854, line: 142, baseType: !3445, size: 256, offset: 512)
!3445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3435, file: !854, line: 142, size: 256, elements: !3446)
!3446 = !{!3447, !3493, !3497}
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3445, file: !854, line: 143, baseType: !3448, size: 192)
!3448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !854, line: 91, size: 192, elements: !3449)
!3449 = !{!3450, !3451, !3452}
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3448, file: !854, line: 92, baseType: !163, size: 64)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3448, file: !854, line: 94, baseType: !988, size: 64, offset: 64)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3448, file: !854, line: 100, baseType: !3453, size: 64, offset: 128)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 64)
!3454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !854, line: 180, size: 704, elements: !3455)
!3455 = !{!3456, !3457, !3458, !3465, !3466, !3467, !3491, !3492}
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3454, file: !854, line: 182, baseType: !3434, size: 64)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3454, file: !854, line: 183, baseType: !7, size: 32, offset: 64)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3454, file: !854, line: 186, baseType: !3459, size: 192, offset: 128)
!3459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3460, line: 19, size: 192, elements: !3461)
!3460 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3461 = !{!3462, !3463, !3464}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3459, file: !3460, line: 20, baseType: !971, size: 128)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3459, file: !3460, line: 21, baseType: !7, size: 32, offset: 128)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3459, file: !3460, line: 22, baseType: !7, size: 32, offset: 160)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3454, file: !854, line: 187, baseType: !296, size: 32, offset: 320)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3454, file: !854, line: 188, baseType: !296, size: 32, offset: 352)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3454, file: !854, line: 189, baseType: !3468, size: 64, offset: 384)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !854, line: 168, size: 320, elements: !3470)
!3470 = !{!3471, !3475, !3479, !3483, !3487}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3469, file: !854, line: 169, baseType: !3472, size: 64)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = !DISubroutineType(types: !3474)
!3474 = !{!197, !943, !3453}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3469, file: !854, line: 171, baseType: !3476, size: 64, offset: 64)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3477, size: 64)
!3477 = !DISubroutineType(types: !3478)
!3478 = !{!197, !3434, !185, !564}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3469, file: !854, line: 173, baseType: !3480, size: 64, offset: 128)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 64)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{!197, !3434}
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3469, file: !854, line: 174, baseType: !3484, size: 64, offset: 192)
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!3485 = !DISubroutineType(types: !3486)
!3486 = !{!197, !3434, !3434, !185}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3469, file: !854, line: 176, baseType: !3488, size: 64, offset: 256)
!3488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3489, size: 64)
!3489 = !DISubroutineType(types: !3490)
!3490 = !{!197, !943, !3434, !3453}
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3454, file: !854, line: 192, baseType: !247, size: 128, offset: 448)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3454, file: !854, line: 194, baseType: !1701, size: 128, offset: 576)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3445, file: !854, line: 144, baseType: !3494, size: 64)
!3494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !854, line: 103, size: 64, elements: !3495)
!3495 = !{!3496}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3494, file: !854, line: 104, baseType: !3434, size: 64)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3445, file: !854, line: 145, baseType: !3498, size: 256)
!3498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !854, line: 107, size: 256, elements: !3499)
!3499 = !{!3500, !3560, !3563, !3564}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3498, file: !854, line: 108, baseType: !3501, size: 64)
!3501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3502, size: 64)
!3502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3503)
!3503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !854, line: 217, size: 768, elements: !3504)
!3504 = !{!3505, !3525, !3529, !3533, !3537, !3541, !3545, !3549, !3550, !3551, !3552, !3556}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3503, file: !854, line: 222, baseType: !3506, size: 64)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DISubroutineType(types: !3508)
!3508 = !{!197, !3509}
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !854, line: 197, size: 1088, elements: !3511)
!3511 = !{!3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524}
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3510, file: !854, line: 199, baseType: !3434, size: 64)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3510, file: !854, line: 200, baseType: !599, size: 64, offset: 64)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3510, file: !854, line: 201, baseType: !943, size: 64, offset: 128)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3510, file: !854, line: 202, baseType: !138, size: 64, offset: 192)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3510, file: !854, line: 205, baseType: !1396, size: 192, offset: 256)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3510, file: !854, line: 206, baseType: !1396, size: 192, offset: 448)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3510, file: !854, line: 207, baseType: !197, size: 32, offset: 640)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3510, file: !854, line: 208, baseType: !247, size: 128, offset: 704)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3510, file: !854, line: 209, baseType: !430, size: 64, offset: 832)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3510, file: !854, line: 211, baseType: !569, size: 64, offset: 896)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3510, file: !854, line: 212, baseType: !262, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3510, file: !854, line: 213, baseType: !262, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3510, file: !854, line: 214, baseType: !1232, size: 64, offset: 1024)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3503, file: !854, line: 223, baseType: !3526, size: 64, offset: 64)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = !DISubroutineType(types: !3528)
!3528 = !{null, !3509}
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3503, file: !854, line: 236, baseType: !3530, size: 64, offset: 128)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DISubroutineType(types: !3532)
!3532 = !{!197, !943, !138}
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3503, file: !854, line: 238, baseType: !3534, size: 64, offset: 192)
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DISubroutineType(types: !3536)
!3536 = !{!138, !943, !3087}
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3503, file: !854, line: 239, baseType: !3538, size: 64, offset: 256)
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!3539 = !DISubroutineType(types: !3540)
!3540 = !{!138, !943, !138, !3087}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3503, file: !854, line: 240, baseType: !3542, size: 64, offset: 320)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{null, !943, !138}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3503, file: !854, line: 242, baseType: !3546, size: 64, offset: 384)
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3547, size: 64)
!3547 = !DISubroutineType(types: !3548)
!3548 = !{!554, !3509, !430, !569, !768}
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3503, file: !854, line: 252, baseType: !569, size: 64, offset: 448)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3503, file: !854, line: 259, baseType: !262, size: 8, offset: 512)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3503, file: !854, line: 260, baseType: !3546, size: 64, offset: 576)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3503, file: !854, line: 263, baseType: !3553, size: 64, offset: 640)
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 64)
!3554 = !DISubroutineType(types: !3555)
!3555 = !{!3116, !3509, !3117}
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3503, file: !854, line: 266, baseType: !3557, size: 64, offset: 704)
!3557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3558, size: 64)
!3558 = !DISubroutineType(types: !3559)
!3559 = !{!197, !3509, !1204}
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3498, file: !854, line: 109, baseType: !3561, size: 64, offset: 64)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !854, line: 31, flags: DIFlagFwdDecl)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3498, file: !854, line: 110, baseType: !768, size: 64, offset: 128)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3498, file: !854, line: 111, baseType: !3434, size: 64, offset: 192)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3435, file: !854, line: 148, baseType: !138, size: 64, offset: 768)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3435, file: !854, line: 154, baseType: !152, size: 64, offset: 832)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3435, file: !854, line: 156, baseType: !212, size: 16, offset: 896)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3435, file: !854, line: 157, baseType: !564, size: 16, offset: 912)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3435, file: !854, line: 158, baseType: !3570, size: 64, offset: 960)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !854, line: 32, flags: DIFlagFwdDecl)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !470, file: !471, line: 71, baseType: !3573, size: 32, offset: 448)
!3573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3574, line: 19, size: 32, elements: !3575)
!3574 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3575 = !{!3576}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3573, file: !3574, line: 20, baseType: !1453, size: 32)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !470, file: !471, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !470, file: !471, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !470, file: !471, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !470, file: !471, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !470, file: !471, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !467, file: !77, line: 463, baseType: !466, size: 64, offset: 512)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !467, file: !77, line: 465, baseType: !3584, size: 64, offset: 576)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3585 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !77, line: 36, flags: DIFlagFwdDecl)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !467, file: !77, line: 467, baseType: !185, size: 64, offset: 640)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !467, file: !77, line: 468, baseType: !3588, size: 64, offset: 704)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3590)
!3590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !77, line: 87, size: 384, elements: !3591)
!3591 = !{!3592, !3593, !3594, !3598, !3603, !3607}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3590, file: !77, line: 88, baseType: !185, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3590, file: !77, line: 89, baseType: !575, size: 64, offset: 64)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3590, file: !77, line: 90, baseType: !3595, size: 64, offset: 128)
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3596, size: 64)
!3596 = !DISubroutineType(types: !3597)
!3597 = !{!197, !466, !519}
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3590, file: !77, line: 91, baseType: !3599, size: 64, offset: 192)
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!3600 = !DISubroutineType(types: !3601)
!3601 = !{!430, !466, !3602, !3431, !3432}
!3602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3590, file: !77, line: 93, baseType: !3604, size: 64, offset: 256)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 64)
!3605 = !DISubroutineType(types: !3606)
!3606 = !{null, !466}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3590, file: !77, line: 95, baseType: !3608, size: 64, offset: 320)
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3609, size: 64)
!3609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3610)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !84, line: 278, size: 1472, elements: !3611)
!3611 = !{!3612, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3610, file: !84, line: 279, baseType: !3613, size: 64)
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{!197, !466}
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3610, file: !84, line: 280, baseType: !3604, size: 64, offset: 64)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3610, file: !84, line: 281, baseType: !3613, size: 64, offset: 128)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3610, file: !84, line: 282, baseType: !3613, size: 64, offset: 192)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3610, file: !84, line: 283, baseType: !3613, size: 64, offset: 256)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3610, file: !84, line: 284, baseType: !3613, size: 64, offset: 320)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3610, file: !84, line: 285, baseType: !3613, size: 64, offset: 384)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3610, file: !84, line: 286, baseType: !3613, size: 64, offset: 448)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3610, file: !84, line: 287, baseType: !3613, size: 64, offset: 512)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3610, file: !84, line: 288, baseType: !3613, size: 64, offset: 576)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3610, file: !84, line: 289, baseType: !3613, size: 64, offset: 640)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3610, file: !84, line: 290, baseType: !3613, size: 64, offset: 704)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3610, file: !84, line: 291, baseType: !3613, size: 64, offset: 768)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3610, file: !84, line: 292, baseType: !3613, size: 64, offset: 832)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3610, file: !84, line: 293, baseType: !3613, size: 64, offset: 896)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3610, file: !84, line: 294, baseType: !3613, size: 64, offset: 960)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3610, file: !84, line: 295, baseType: !3613, size: 64, offset: 1024)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3610, file: !84, line: 296, baseType: !3613, size: 64, offset: 1088)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3610, file: !84, line: 297, baseType: !3613, size: 64, offset: 1152)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3610, file: !84, line: 298, baseType: !3613, size: 64, offset: 1216)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3610, file: !84, line: 299, baseType: !3613, size: 64, offset: 1280)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3610, file: !84, line: 300, baseType: !3613, size: 64, offset: 1344)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3610, file: !84, line: 301, baseType: !3613, size: 64, offset: 1408)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !467, file: !77, line: 470, baseType: !459, size: 64, offset: 768)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !467, file: !77, line: 471, baseType: !3640, size: 64, offset: 832)
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !467, file: !77, line: 473, baseType: !138, size: 64, offset: 896)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !467, file: !77, line: 475, baseType: !138, size: 64, offset: 960)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !467, file: !77, line: 480, baseType: !1396, size: 192, offset: 1024)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !467, file: !77, line: 484, baseType: !3645, size: 576, offset: 1216)
!3645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !77, line: 361, size: 576, elements: !3646)
!3646 = !{!3647, !3648, !3649, !3650, !3651, !3652}
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3645, file: !77, line: 362, baseType: !247, size: 128)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3645, file: !77, line: 363, baseType: !247, size: 128, offset: 128)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3645, file: !77, line: 364, baseType: !247, size: 128, offset: 256)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3645, file: !77, line: 365, baseType: !247, size: 128, offset: 384)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3645, file: !77, line: 366, baseType: !262, size: 8, offset: 512)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3645, file: !77, line: 367, baseType: !76, size: 32, offset: 544)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !467, file: !77, line: 485, baseType: !3654, size: 2304, offset: 1792)
!3654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !84, line: 565, size: 2304, elements: !3655)
!3655 = !{!3656, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3755, !3759}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3654, file: !84, line: 566, baseType: !3657, size: 32)
!3657 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !84, line: 52, baseType: !3658)
!3658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !84, line: 50, size: 32, elements: !3659)
!3659 = !{!3660}
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3658, file: !84, line: 51, baseType: !197, size: 32)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3654, file: !84, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3654, file: !84, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3654, file: !84, line: 569, baseType: !262, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3654, file: !84, line: 570, baseType: !262, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3654, file: !84, line: 571, baseType: !262, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3654, file: !84, line: 572, baseType: !262, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3654, file: !84, line: 573, baseType: !262, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3654, file: !84, line: 574, baseType: !262, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3654, file: !84, line: 575, baseType: !262, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3654, file: !84, line: 576, baseType: !262, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3654, file: !84, line: 577, baseType: !296, size: 32, offset: 64)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3654, file: !84, line: 578, baseType: !483, offset: 96)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3654, file: !84, line: 580, baseType: !247, size: 128, offset: 128)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3654, file: !84, line: 581, baseType: !1722, size: 192, offset: 256)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3654, file: !84, line: 582, baseType: !3676, size: 64, offset: 448)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3678, line: 43, size: 1472, elements: !3679)
!3678 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3679 = !{!3680, !3681, !3682, !3683, !3684, !3687, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3677, file: !3678, line: 44, baseType: !185, size: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3677, file: !3678, line: 45, baseType: !197, size: 32, offset: 64)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3677, file: !3678, line: 46, baseType: !247, size: 128, offset: 128)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3677, file: !3678, line: 47, baseType: !483, offset: 256)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3677, file: !3678, line: 48, baseType: !3685, size: 64, offset: 256)
!3685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3686, size: 64)
!3686 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !84, line: 533, flags: DIFlagFwdDecl)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3677, file: !3678, line: 49, baseType: !3688, size: 320, offset: 320)
!3688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3689, line: 11, size: 320, elements: !3690)
!3689 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3690 = !{!3691, !3692, !3693, !3698}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3688, file: !3689, line: 16, baseType: !315, size: 128)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3688, file: !3689, line: 17, baseType: !163, size: 64, offset: 128)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3688, file: !3689, line: 18, baseType: !3694, size: 64, offset: 192)
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3695, size: 64)
!3695 = !DISubroutineType(types: !3696)
!3696 = !{null, !3697}
!3697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3688, size: 64)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3688, file: !3689, line: 19, baseType: !296, size: 32, offset: 256)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3677, file: !3678, line: 50, baseType: !163, size: 64, offset: 640)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3677, file: !3678, line: 51, baseType: !1523, size: 64, offset: 704)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3677, file: !3678, line: 52, baseType: !1523, size: 64, offset: 768)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3677, file: !3678, line: 53, baseType: !1523, size: 64, offset: 832)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3677, file: !3678, line: 54, baseType: !1523, size: 64, offset: 896)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3677, file: !3678, line: 55, baseType: !1523, size: 64, offset: 960)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3677, file: !3678, line: 56, baseType: !163, size: 64, offset: 1024)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3677, file: !3678, line: 57, baseType: !163, size: 64, offset: 1088)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3677, file: !3678, line: 58, baseType: !163, size: 64, offset: 1152)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3677, file: !3678, line: 59, baseType: !163, size: 64, offset: 1216)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3677, file: !3678, line: 60, baseType: !163, size: 64, offset: 1280)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3677, file: !3678, line: 61, baseType: !466, size: 64, offset: 1344)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3677, file: !3678, line: 62, baseType: !262, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3677, file: !3678, line: 63, baseType: !262, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3654, file: !84, line: 583, baseType: !262, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3654, file: !84, line: 584, baseType: !262, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3654, file: !84, line: 585, baseType: !262, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3654, file: !84, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3654, file: !84, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3654, file: !84, line: 592, baseType: !1515, size: 512, offset: 576)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3654, file: !84, line: 593, baseType: !152, size: 64, offset: 1088)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3654, file: !84, line: 594, baseType: !363, size: 256, offset: 1152)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3654, file: !84, line: 595, baseType: !1701, size: 128, offset: 1408)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3654, file: !84, line: 596, baseType: !3685, size: 64, offset: 1536)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3654, file: !84, line: 597, baseType: !979, size: 32, offset: 1600)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3654, file: !84, line: 598, baseType: !979, size: 32, offset: 1632)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3654, file: !84, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3654, file: !84, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3654, file: !84, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3654, file: !84, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3654, file: !84, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3654, file: !84, line: 604, baseType: !262, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3654, file: !84, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3654, file: !84, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3654, file: !84, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3654, file: !84, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3654, file: !84, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3654, file: !84, line: 610, baseType: !7, size: 32, offset: 1696)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3654, file: !84, line: 611, baseType: !83, size: 32, offset: 1728)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3654, file: !84, line: 612, baseType: !91, size: 32, offset: 1760)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3654, file: !84, line: 613, baseType: !197, size: 32, offset: 1792)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3654, file: !84, line: 614, baseType: !197, size: 32, offset: 1824)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3654, file: !84, line: 615, baseType: !152, size: 64, offset: 1856)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3654, file: !84, line: 616, baseType: !152, size: 64, offset: 1920)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3654, file: !84, line: 617, baseType: !152, size: 64, offset: 1984)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3654, file: !84, line: 618, baseType: !152, size: 64, offset: 2048)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3654, file: !84, line: 620, baseType: !3746, size: 64, offset: 2112)
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3747, size: 64)
!3747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !84, line: 536, size: 256, elements: !3748)
!3748 = !{!3749, !3750, !3751, !3752}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3747, file: !84, line: 537, baseType: !483)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3747, file: !84, line: 538, baseType: !7, size: 32)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3747, file: !84, line: 540, baseType: !247, size: 128, offset: 64)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3747, file: !84, line: 543, baseType: !3753, size: 64, offset: 192)
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 64)
!3754 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !84, line: 534, flags: DIFlagFwdDecl)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3654, file: !84, line: 621, baseType: !3756, size: 64, offset: 2176)
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = !DISubroutineType(types: !3758)
!3758 = !{null, !466, !1664}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3654, file: !84, line: 622, baseType: !3760, size: 64, offset: 2240)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !84, line: 622, flags: DIFlagFwdDecl)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !467, file: !77, line: 486, baseType: !3763, size: 64, offset: 4096)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64)
!3764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !84, line: 642, size: 1792, elements: !3765)
!3765 = !{!3766, !3767, !3768, !3772, !3773, !3774}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3764, file: !84, line: 643, baseType: !3610, size: 1472)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3764, file: !84, line: 644, baseType: !3613, size: 64, offset: 1472)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3764, file: !84, line: 645, baseType: !3769, size: 64, offset: 1536)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3770 = !DISubroutineType(types: !3771)
!3771 = !{null, !466, !262}
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3764, file: !84, line: 646, baseType: !3613, size: 64, offset: 1600)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3764, file: !84, line: 647, baseType: !3604, size: 64, offset: 1664)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3764, file: !84, line: 648, baseType: !3604, size: 64, offset: 1728)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !467, file: !77, line: 493, baseType: !3776, size: 64, offset: 4160)
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3777, size: 64)
!3777 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !77, line: 493, flags: DIFlagFwdDecl)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !467, file: !77, line: 499, baseType: !247, size: 128, offset: 4224)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !467, file: !77, line: 502, baseType: !3780, size: 64, offset: 4352)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3782)
!3782 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !77, line: 502, flags: DIFlagFwdDecl)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !467, file: !77, line: 504, baseType: !3784, size: 64, offset: 4416)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !467, file: !77, line: 505, baseType: !152, size: 64, offset: 4480)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !467, file: !77, line: 510, baseType: !152, size: 64, offset: 4544)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !467, file: !77, line: 511, baseType: !3788, size: 64, offset: 4608)
!3788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3789, size: 64)
!3789 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3790)
!3790 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !77, line: 511, flags: DIFlagFwdDecl)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !467, file: !77, line: 513, baseType: !3792, size: 64, offset: 4672)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !77, line: 288, size: 128, elements: !3794)
!3794 = !{!3795, !3796}
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3793, file: !77, line: 293, baseType: !7, size: 32)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3793, file: !77, line: 294, baseType: !163, size: 64, offset: 64)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !467, file: !77, line: 515, baseType: !247, size: 128, offset: 4736)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !467, file: !77, line: 526, baseType: !3799, offset: 4864)
!3799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3800, line: 5, elements: !497)
!3800 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !467, file: !77, line: 528, baseType: !3802, size: 64, offset: 4864)
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3803, size: 64)
!3803 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3804, line: 14, flags: DIFlagFwdDecl)
!3804 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !467, file: !77, line: 529, baseType: !3806, size: 64, offset: 4928)
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3808, line: 17, size: 192, elements: !3809)
!3808 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3809 = !{!3810, !3811, !3894}
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3807, file: !3808, line: 18, baseType: !3806, size: 64)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3807, file: !3808, line: 19, baseType: !3812, size: 64, offset: 64)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3814)
!3814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3808, line: 110, size: 1152, elements: !3815)
!3815 = !{!3816, !3820, !3824, !3830, !3836, !3840, !3844, !3849, !3853, !3854, !3858, !3862, !3866, !3877, !3878, !3879, !3880, !3890}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3814, file: !3808, line: 111, baseType: !3817, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3818, size: 64)
!3818 = !DISubroutineType(types: !3819)
!3819 = !{!3806, !3806}
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3814, file: !3808, line: 112, baseType: !3821, size: 64, offset: 64)
!3821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3822, size: 64)
!3822 = !DISubroutineType(types: !3823)
!3823 = !{null, !3806}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3814, file: !3808, line: 113, baseType: !3825, size: 64, offset: 128)
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3826, size: 64)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{!262, !3828}
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3807)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3814, file: !3808, line: 114, baseType: !3831, size: 64, offset: 192)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3832, size: 64)
!3832 = !DISubroutineType(types: !3833)
!3833 = !{!2338, !3828, !3834}
!3834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3835, size: 64)
!3835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !467)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3814, file: !3808, line: 116, baseType: !3837, size: 64, offset: 256)
!3837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3838, size: 64)
!3838 = !DISubroutineType(types: !3839)
!3839 = !{!262, !3828, !185}
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3814, file: !3808, line: 118, baseType: !3841, size: 64, offset: 320)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{!197, !3828, !185, !7, !138, !569}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3814, file: !3808, line: 123, baseType: !3845, size: 64, offset: 384)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!197, !3828, !185, !3848, !569}
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3814, file: !3808, line: 126, baseType: !3850, size: 64, offset: 448)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3851, size: 64)
!3851 = !DISubroutineType(types: !3852)
!3852 = !{!185, !3828}
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3814, file: !3808, line: 127, baseType: !3850, size: 64, offset: 512)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3814, file: !3808, line: 128, baseType: !3855, size: 64, offset: 576)
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 64)
!3856 = !DISubroutineType(types: !3857)
!3857 = !{!3806, !3828}
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3814, file: !3808, line: 130, baseType: !3859, size: 64, offset: 640)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!3806, !3828, !3806}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3814, file: !3808, line: 133, baseType: !3863, size: 64, offset: 704)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{!3806, !3828, !185}
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3814, file: !3808, line: 135, baseType: !3867, size: 64, offset: 768)
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!197, !3828, !185, !185, !7, !7, !3870}
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3808, line: 43, size: 640, elements: !3872)
!3872 = !{!3873, !3874, !3875}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3871, file: !3808, line: 44, baseType: !3806, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3871, file: !3808, line: 45, baseType: !7, size: 32, offset: 64)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3871, file: !3808, line: 46, baseType: !3876, size: 512, offset: 128)
!3876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 512, elements: !1553)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3814, file: !3808, line: 140, baseType: !3859, size: 64, offset: 832)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3814, file: !3808, line: 143, baseType: !3855, size: 64, offset: 896)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3814, file: !3808, line: 145, baseType: !3817, size: 64, offset: 960)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3814, file: !3808, line: 146, baseType: !3881, size: 64, offset: 1024)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 64)
!3882 = !DISubroutineType(types: !3883)
!3883 = !{!197, !3828, !3884}
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64)
!3885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3808, line: 29, size: 128, elements: !3886)
!3886 = !{!3887, !3888, !3889}
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3885, file: !3808, line: 30, baseType: !7, size: 32)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3885, file: !3808, line: 31, baseType: !7, size: 32, offset: 32)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3885, file: !3808, line: 32, baseType: !3828, size: 64, offset: 64)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3814, file: !3808, line: 148, baseType: !3891, size: 64, offset: 1088)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DISubroutineType(types: !3893)
!3893 = !{!197, !3828, !466}
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3807, file: !3808, line: 20, baseType: !466, size: 64, offset: 128)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !467, file: !77, line: 534, baseType: !750, size: 32, offset: 4992)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !467, file: !77, line: 535, baseType: !296, size: 32, offset: 5024)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !467, file: !77, line: 537, baseType: !483, offset: 5056)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !467, file: !77, line: 538, baseType: !247, size: 128, offset: 5056)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !467, file: !77, line: 540, baseType: !3900, size: 64, offset: 5184)
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 64)
!3901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3902, line: 54, size: 960, elements: !3903)
!3902 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3903 = !{!3904, !3905, !3906, !3907, !3908, !3909, !3910, !3914, !3918, !3919, !3920, !3921, !3925, !3929, !3930}
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3901, file: !3902, line: 55, baseType: !185, size: 64)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3901, file: !3902, line: 56, baseType: !868, size: 64, offset: 64)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3901, file: !3902, line: 58, baseType: !575, size: 64, offset: 128)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3901, file: !3902, line: 59, baseType: !575, size: 64, offset: 192)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3901, file: !3902, line: 60, baseType: !476, size: 64, offset: 256)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3901, file: !3902, line: 62, baseType: !3595, size: 64, offset: 320)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3901, file: !3902, line: 63, baseType: !3911, size: 64, offset: 384)
!3911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3912, size: 64)
!3912 = !DISubroutineType(types: !3913)
!3913 = !{!430, !466, !3602}
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3901, file: !3902, line: 65, baseType: !3915, size: 64, offset: 448)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 64)
!3916 = !DISubroutineType(types: !3917)
!3917 = !{null, !3900}
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3901, file: !3902, line: 66, baseType: !3604, size: 64, offset: 512)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3901, file: !3902, line: 68, baseType: !3613, size: 64, offset: 576)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3901, file: !3902, line: 70, baseType: !3399, size: 64, offset: 640)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3901, file: !3902, line: 71, baseType: !3922, size: 64, offset: 704)
!3922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 64)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{!2338, !466}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3901, file: !3902, line: 73, baseType: !3926, size: 64, offset: 768)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 64)
!3927 = !DISubroutineType(types: !3928)
!3928 = !{null, !466, !3431, !3432}
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3901, file: !3902, line: 75, baseType: !3608, size: 64, offset: 832)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3901, file: !3902, line: 77, baseType: !3931, size: 64, offset: 896)
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3932, size: 64)
!3932 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !461, line: 111, flags: DIFlagFwdDecl)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !467, file: !77, line: 541, baseType: !575, size: 64, offset: 5248)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !467, file: !77, line: 543, baseType: !3604, size: 64, offset: 5312)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !467, file: !77, line: 544, baseType: !3936, size: 64, offset: 5376)
!3936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3937, size: 64)
!3937 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !77, line: 45, flags: DIFlagFwdDecl)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !467, file: !77, line: 545, baseType: !3939, size: 64, offset: 5440)
!3939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!3940 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !77, line: 47, flags: DIFlagFwdDecl)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !467, file: !77, line: 547, baseType: !262, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !467, file: !77, line: 548, baseType: !262, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !467, file: !77, line: 549, baseType: !262, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !467, file: !77, line: 550, baseType: !262, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !460, file: !461, line: 86, baseType: !575, size: 64, offset: 192)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !460, file: !461, line: 87, baseType: !575, size: 64, offset: 256)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !460, file: !461, line: 88, baseType: !575, size: 64, offset: 320)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !460, file: !461, line: 90, baseType: !3949, size: 64, offset: 384)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = !DISubroutineType(types: !3951)
!3951 = !{!197, !466, !3640}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !460, file: !461, line: 91, baseType: !3595, size: 64, offset: 448)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !460, file: !461, line: 92, baseType: !3613, size: 64, offset: 512)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !460, file: !461, line: 93, baseType: !3604, size: 64, offset: 576)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !460, file: !461, line: 94, baseType: !3613, size: 64, offset: 640)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !460, file: !461, line: 95, baseType: !3604, size: 64, offset: 704)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !460, file: !461, line: 97, baseType: !3613, size: 64, offset: 768)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !460, file: !461, line: 98, baseType: !3613, size: 64, offset: 832)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !460, file: !461, line: 100, baseType: !3960, size: 64, offset: 896)
!3960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3961, size: 64)
!3961 = !DISubroutineType(types: !3962)
!3962 = !{!197, !466, !3657}
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !460, file: !461, line: 101, baseType: !3613, size: 64, offset: 960)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !460, file: !461, line: 103, baseType: !3613, size: 64, offset: 1024)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !460, file: !461, line: 105, baseType: !3613, size: 64, offset: 1088)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !460, file: !461, line: 107, baseType: !3608, size: 64, offset: 1152)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !460, file: !461, line: 109, baseType: !3968, size: 64, offset: 1216)
!3968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3969, size: 64)
!3969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3970)
!3970 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !461, line: 109, flags: DIFlagFwdDecl)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !460, file: !461, line: 111, baseType: !3931, size: 64, offset: 1280)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !460, file: !461, line: 112, baseType: !877, offset: 1344)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !460, file: !461, line: 114, baseType: !262, size: 8, offset: 1344)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !455, file: !98, line: 99, baseType: !868, size: 64, offset: 128)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !455, file: !98, line: 100, baseType: !185, size: 64, offset: 192)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !455, file: !98, line: 102, baseType: !262, size: 8, offset: 256)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !455, file: !98, line: 103, baseType: !97, size: 32, offset: 288)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !455, file: !98, line: 105, baseType: !3979, size: 64, offset: 320)
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3980, size: 64)
!3980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3981)
!3981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3982, line: 262, size: 1600, elements: !3983)
!3982 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3983 = !{!3984, !3985, !3986, !3990}
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3981, file: !3982, line: 263, baseType: !2911, size: 256)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3981, file: !3982, line: 264, baseType: !2911, size: 256, offset: 256)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3981, file: !3982, line: 265, baseType: !3987, size: 1024, offset: 512)
!3987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 1024, elements: !3988)
!3988 = !{!3989}
!3989 = !DISubrange(count: 128)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3981, file: !3982, line: 266, baseType: !2338, size: 64, offset: 1536)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !455, file: !98, line: 106, baseType: !3992, size: 64, offset: 384)
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3993, size: 64)
!3993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3994)
!3994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3982, line: 210, size: 256, elements: !3995)
!3995 = !{!3996, !4000, !4002, !4003}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3994, file: !3982, line: 211, baseType: !3997, size: 72)
!3997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, size: 72, elements: !3998)
!3998 = !{!3999}
!3999 = !DISubrange(count: 9)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3994, file: !3982, line: 212, baseType: !4001, size: 64, offset: 128)
!4001 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3982, line: 14, baseType: !163)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3994, file: !3982, line: 213, baseType: !297, size: 32, offset: 192)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3994, file: !3982, line: 214, baseType: !297, size: 32, offset: 224)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !455, file: !98, line: 108, baseType: !3613, size: 64, offset: 448)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !455, file: !98, line: 109, baseType: !3604, size: 64, offset: 512)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !455, file: !98, line: 110, baseType: !3613, size: 64, offset: 576)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !455, file: !98, line: 111, baseType: !3604, size: 64, offset: 640)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !455, file: !98, line: 112, baseType: !3960, size: 64, offset: 704)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !455, file: !98, line: 113, baseType: !3613, size: 64, offset: 768)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !455, file: !98, line: 114, baseType: !575, size: 64, offset: 832)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !455, file: !98, line: 115, baseType: !575, size: 64, offset: 896)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !455, file: !98, line: 117, baseType: !3608, size: 64, offset: 960)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !455, file: !98, line: 118, baseType: !3604, size: 64, offset: 1024)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !455, file: !98, line: 120, baseType: !4015, size: 64, offset: 1088)
!4015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4016, size: 64)
!4016 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !98, line: 120, flags: DIFlagFwdDecl)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "udc_name", scope: !427, file: !145, line: 715, baseType: !430, size: 64, offset: 1728)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !427, file: !145, line: 716, baseType: !247, size: 128, offset: 1792)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "match_existing_only", scope: !427, file: !145, line: 717, baseType: !7, size: 1, offset: 1920, flags: DIFlagBitField, extraData: i64 1920)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "udc_stop", scope: !389, file: !145, line: 324, baseType: !392, size: 64, offset: 576)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "udc_set_speed", scope: !389, file: !145, line: 325, baseType: !4022, size: 64, offset: 640)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{null, !395, !5}
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "match_ep", scope: !389, file: !145, line: 326, baseType: !4026, size: 64, offset: 704)
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 64)
!4027 = !DISubroutineType(types: !4028)
!4028 = !{!180, !395, !4029, !4030}
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "ep0", scope: !360, file: !145, line: 405, baseType: !180, size: 64, offset: 384)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "ep_list", scope: !360, file: !145, line: 406, baseType: !247, size: 128, offset: 448)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !360, file: !145, line: 407, baseType: !5, size: 32, offset: 576)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "max_speed", scope: !360, file: !145, line: 408, baseType: !5, size: 32, offset: 608)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !360, file: !145, line: 409, baseType: !103, size: 32, offset: 640)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !360, file: !145, line: 410, baseType: !185, size: 64, offset: 704)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !360, file: !145, line: 411, baseType: !467, size: 5568, offset: 768)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "isoch_delay", scope: !360, file: !145, line: 412, baseType: !7, size: 32, offset: 6336)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "out_epnum", scope: !360, file: !145, line: 413, baseType: !7, size: 32, offset: 6368)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "in_epnum", scope: !360, file: !145, line: 414, baseType: !7, size: 32, offset: 6400)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "mA", scope: !360, file: !145, line: 415, baseType: !7, size: 32, offset: 6432)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "otg_caps", scope: !360, file: !145, line: 416, baseType: !4043, size: 64, offset: 6464)
!4043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4044, size: 64)
!4044 = !DICompositeType(tag: DW_TAG_structure_type, name: "usb_otg_caps", file: !145, line: 416, flags: DIFlagFwdDecl)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "sg_supported", scope: !360, file: !145, line: 418, baseType: !7, size: 1, offset: 6528, flags: DIFlagBitField, extraData: i64 6528)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "is_otg", scope: !360, file: !145, line: 419, baseType: !7, size: 1, offset: 6529, flags: DIFlagBitField, extraData: i64 6528)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "is_a_peripheral", scope: !360, file: !145, line: 420, baseType: !7, size: 1, offset: 6530, flags: DIFlagBitField, extraData: i64 6528)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "b_hnp_enable", scope: !360, file: !145, line: 421, baseType: !7, size: 1, offset: 6531, flags: DIFlagBitField, extraData: i64 6528)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "a_hnp_support", scope: !360, file: !145, line: 422, baseType: !7, size: 1, offset: 6532, flags: DIFlagBitField, extraData: i64 6528)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "a_alt_hnp_support", scope: !360, file: !145, line: 423, baseType: !7, size: 1, offset: 6533, flags: DIFlagBitField, extraData: i64 6528)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "hnp_polling_support", scope: !360, file: !145, line: 424, baseType: !7, size: 1, offset: 6534, flags: DIFlagBitField, extraData: i64 6528)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "host_request_flag", scope: !360, file: !145, line: 425, baseType: !7, size: 1, offset: 6535, flags: DIFlagBitField, extraData: i64 6528)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_ep_out_aligned_size", scope: !360, file: !145, line: 426, baseType: !7, size: 1, offset: 6536, flags: DIFlagBitField, extraData: i64 6528)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_altset_not_supp", scope: !360, file: !145, line: 427, baseType: !7, size: 1, offset: 6537, flags: DIFlagBitField, extraData: i64 6528)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_stall_not_supp", scope: !360, file: !145, line: 428, baseType: !7, size: 1, offset: 6538, flags: DIFlagBitField, extraData: i64 6528)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_zlp_not_supp", scope: !360, file: !145, line: 429, baseType: !7, size: 1, offset: 6539, flags: DIFlagBitField, extraData: i64 6528)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_avoids_skb_reserve", scope: !360, file: !145, line: 430, baseType: !7, size: 1, offset: 6540, flags: DIFlagBitField, extraData: i64 6528)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "is_selfpowered", scope: !360, file: !145, line: 431, baseType: !7, size: 1, offset: 6541, flags: DIFlagBitField, extraData: i64 6528)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "deactivated", scope: !360, file: !145, line: 432, baseType: !7, size: 1, offset: 6542, flags: DIFlagBitField, extraData: i64 6528)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "connected", scope: !360, file: !145, line: 433, baseType: !7, size: 1, offset: 6543, flags: DIFlagBitField, extraData: i64 6528)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_capable", scope: !360, file: !145, line: 434, baseType: !7, size: 1, offset: 6544, flags: DIFlagBitField, extraData: i64 6528)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !360, file: !145, line: 435, baseType: !197, size: 32, offset: 6560)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !357, file: !141, line: 531, baseType: !483, offset: 6592)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "ep", scope: !357, file: !141, line: 533, baseType: !4065, size: 51200, offset: 6592)
!4065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 51200, elements: !2441)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !357, file: !141, line: 534, baseType: !426, size: 64, offset: 57792)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "stall_ep0in", scope: !357, file: !141, line: 536, baseType: !7, size: 1, offset: 57856, flags: DIFlagBitField, extraData: i64 57856)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "waiting_zlp_ack_ep0in", scope: !357, file: !141, line: 537, baseType: !7, size: 1, offset: 57857, flags: DIFlagBitField, extraData: i64 57856)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "set_cfg_not_acked", scope: !357, file: !141, line: 538, baseType: !7, size: 1, offset: 57858, flags: DIFlagBitField, extraData: i64 57856)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "data_ep_enabled", scope: !357, file: !141, line: 539, baseType: !7, size: 1, offset: 57859, flags: DIFlagBitField, extraData: i64 57856)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "data_ep_queued", scope: !357, file: !141, line: 540, baseType: !7, size: 1, offset: 57860, flags: DIFlagBitField, extraData: i64 57856)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "sys_suspended", scope: !357, file: !141, line: 541, baseType: !7, size: 1, offset: 57861, flags: DIFlagBitField, extraData: i64 57856)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "connected", scope: !357, file: !141, line: 542, baseType: !7, size: 32, offset: 57888)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "chiprev", scope: !357, file: !141, line: 544, baseType: !1084, size: 16, offset: 57920)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !357, file: !141, line: 547, baseType: !4076, size: 64, offset: 57984)
!4076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4077, size: 64)
!4077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !4078, line: 309, size: 19264, elements: !4079)
!4078 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!4079 = !{!4080, !4081, !4155, !4156, !4157, !4158, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4186, !4251, !4252, !4253, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4274, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4288, !4289, !4290, !4291, !4292, !4293, !4294, !4295, !4296, !4297, !4298, !4299, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4327, !4328, !4330, !4331, !4332, !4333, !4335, !4336, !4337, !4340, !4347, !4348, !4349, !4350, !4351, !4352, !4353}
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !4077, file: !4078, line: 310, baseType: !247, size: 128)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4077, file: !4078, line: 311, baseType: !4082, size: 64, offset: 128)
!4082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4083, size: 64)
!4083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !4078, line: 605, size: 8064, elements: !4084)
!4084 = !{!4085, !4086, !4087, !4088, !4089, !4090, !4091, !4106, !4107, !4108, !4132, !4135, !4136, !4139, !4140, !4141, !4142, !4143, !4147, !4148, !4150, !4151, !4152, !4153, !4154}
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4083, file: !4078, line: 606, baseType: !247, size: 128)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4083, file: !4078, line: 607, baseType: !4082, size: 64, offset: 128)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4083, file: !4078, line: 608, baseType: !247, size: 128, offset: 192)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !4083, file: !4078, line: 609, baseType: !247, size: 128, offset: 320)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4083, file: !4078, line: 610, baseType: !4076, size: 64, offset: 448)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !4083, file: !4078, line: 611, baseType: !247, size: 128, offset: 512)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4083, file: !4078, line: 613, baseType: !4092, size: 256, offset: 640)
!4092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4093, size: 256, elements: !1378)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4095, line: 20, size: 512, elements: !4096)
!4095 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4096 = !{!4097, !4099, !4100, !4101, !4102, !4103, !4104, !4105}
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4094, file: !4095, line: 21, baseType: !4098, size: 64)
!4098 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !151, line: 158, baseType: !2336)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4094, file: !4095, line: 22, baseType: !4098, size: 64, offset: 64)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4094, file: !4095, line: 23, baseType: !185, size: 64, offset: 128)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4094, file: !4095, line: 24, baseType: !163, size: 64, offset: 192)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4094, file: !4095, line: 25, baseType: !163, size: 64, offset: 256)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4094, file: !4095, line: 26, baseType: !4093, size: 64, offset: 320)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4094, file: !4095, line: 26, baseType: !4093, size: 64, offset: 384)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4094, file: !4095, line: 26, baseType: !4093, size: 64, offset: 448)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4083, file: !4078, line: 614, baseType: !247, size: 128, offset: 896)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !4083, file: !4078, line: 615, baseType: !4094, size: 512, offset: 1024)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4083, file: !4078, line: 617, baseType: !4109, size: 64, offset: 1536)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !4078, line: 731, size: 320, elements: !4111)
!4111 = !{!4112, !4116, !4120, !4124, !4128}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !4110, file: !4078, line: 732, baseType: !4113, size: 64)
!4113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4114, size: 64)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{!197, !4082}
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !4110, file: !4078, line: 733, baseType: !4117, size: 64, offset: 64)
!4117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4118, size: 64)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{null, !4082}
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !4110, file: !4078, line: 734, baseType: !4121, size: 64, offset: 128)
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 64)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!138, !4082, !7, !197}
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4110, file: !4078, line: 735, baseType: !4125, size: 64, offset: 192)
!4125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4126, size: 64)
!4126 = !DISubroutineType(types: !4127)
!4127 = !{!197, !4082, !7, !197, !197, !336}
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4110, file: !4078, line: 736, baseType: !4129, size: 64, offset: 256)
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4130, size: 64)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{!197, !4082, !7, !197, !197, !296}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !4083, file: !4078, line: 618, baseType: !4133, size: 64, offset: 1600)
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !4078, line: 537, flags: DIFlagFwdDecl)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4083, file: !4078, line: 619, baseType: !138, size: 64, offset: 1664)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !4083, file: !4078, line: 620, baseType: !4137, size: 64, offset: 1728)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !133, line: 123, flags: DIFlagFwdDecl)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4083, file: !4078, line: 622, baseType: !204, size: 8, offset: 1792)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !4083, file: !4078, line: 623, baseType: !204, size: 8, offset: 1800)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !4083, file: !4078, line: 624, baseType: !204, size: 8, offset: 1808)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !4083, file: !4078, line: 625, baseType: !204, size: 8, offset: 1816)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4083, file: !4078, line: 630, baseType: !4144, size: 384, offset: 1824)
!4144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 384, elements: !4145)
!4145 = !{!4146}
!4146 = !DISubrange(count: 48)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !4083, file: !4078, line: 632, baseType: !212, size: 16, offset: 2208)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !4083, file: !4078, line: 633, baseType: !4149, size: 16, offset: 2224)
!4149 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !4078, line: 237, baseType: !212)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !4083, file: !4078, line: 634, baseType: !466, size: 64, offset: 2240)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4083, file: !4078, line: 635, baseType: !467, size: 5568, offset: 2304)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !4083, file: !4078, line: 636, baseType: !589, size: 64, offset: 7872)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !4083, file: !4078, line: 637, baseType: !589, size: 64, offset: 7936)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !4083, file: !4078, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !4077, file: !4078, line: 312, baseType: !4082, size: 64, offset: 192)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4077, file: !4078, line: 314, baseType: !138, size: 64, offset: 256)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !4077, file: !4078, line: 315, baseType: !4137, size: 64, offset: 320)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !4077, file: !4078, line: 316, baseType: !4159, size: 64, offset: 384)
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !4078, line: 69, size: 832, elements: !4161)
!4161 = !{!4162, !4163, !4164, !4167, !4168}
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4160, file: !4078, line: 70, baseType: !4082, size: 64)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4160, file: !4078, line: 71, baseType: !247, size: 128, offset: 64)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4160, file: !4078, line: 72, baseType: !4165, size: 64, offset: 192)
!4165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4166, size: 64)
!4166 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !4078, line: 72, flags: DIFlagFwdDecl)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4160, file: !4078, line: 73, baseType: !204, size: 8, offset: 256)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4160, file: !4078, line: 74, baseType: !470, size: 512, offset: 320)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !4077, file: !4078, line: 318, baseType: !7, size: 32, offset: 448)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4077, file: !4078, line: 319, baseType: !212, size: 16, offset: 480)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4077, file: !4078, line: 320, baseType: !212, size: 16, offset: 496)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !4077, file: !4078, line: 321, baseType: !212, size: 16, offset: 512)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !4077, file: !4078, line: 322, baseType: !212, size: 16, offset: 528)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4077, file: !4078, line: 323, baseType: !7, size: 32, offset: 544)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !4077, file: !4078, line: 324, baseType: !271, size: 8, offset: 576)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !4077, file: !4078, line: 325, baseType: !271, size: 8, offset: 584)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !4077, file: !4078, line: 330, baseType: !271, size: 8, offset: 592)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !4077, file: !4078, line: 331, baseType: !271, size: 8, offset: 600)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !4077, file: !4078, line: 332, baseType: !271, size: 8, offset: 608)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !4077, file: !4078, line: 333, baseType: !271, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !4077, file: !4078, line: 334, baseType: !271, size: 8, offset: 624)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4077, file: !4078, line: 335, baseType: !271, size: 8, offset: 632)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !4077, file: !4078, line: 336, baseType: !1084, size: 16, offset: 640)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !4077, file: !4078, line: 337, baseType: !4185, size: 64, offset: 704)
!4185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4077, file: !4078, line: 339, baseType: !4187, size: 64, offset: 768)
!4187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4188, size: 64)
!4188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !4078, line: 858, size: 2048, elements: !4189)
!4189 = !{!4190, !4191, !4192, !4204, !4208, !4212, !4216, !4220, !4221, !4225, !4244, !4245, !4246}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4188, file: !4078, line: 859, baseType: !247, size: 128)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4188, file: !4078, line: 860, baseType: !185, size: 64, offset: 128)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4188, file: !4078, line: 861, baseType: !4193, size: 64, offset: 192)
!4193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4194, size: 64)
!4194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4195)
!4195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3982, line: 38, size: 256, elements: !4196)
!4196 = !{!4197, !4198, !4199, !4200, !4201, !4202, !4203}
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4195, file: !3982, line: 39, baseType: !297, size: 32)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4195, file: !3982, line: 39, baseType: !297, size: 32, offset: 32)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !4195, file: !3982, line: 40, baseType: !297, size: 32, offset: 64)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4195, file: !3982, line: 40, baseType: !297, size: 32, offset: 96)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4195, file: !3982, line: 41, baseType: !297, size: 32, offset: 128)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !4195, file: !3982, line: 41, baseType: !297, size: 32, offset: 160)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4195, file: !3982, line: 42, baseType: !4001, size: 64, offset: 192)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4188, file: !4078, line: 862, baseType: !4205, size: 64, offset: 256)
!4205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4206, size: 64)
!4206 = !DISubroutineType(types: !4207)
!4207 = !{!197, !4076, !4193}
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4188, file: !4078, line: 863, baseType: !4209, size: 64, offset: 320)
!4209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4210, size: 64)
!4210 = !DISubroutineType(types: !4211)
!4211 = !{null, !4076}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4188, file: !4078, line: 864, baseType: !4213, size: 64, offset: 384)
!4213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4214, size: 64)
!4214 = !DISubroutineType(types: !4215)
!4215 = !{!197, !4076, !3657}
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4188, file: !4078, line: 865, baseType: !4217, size: 64, offset: 448)
!4217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4218, size: 64)
!4218 = !DISubroutineType(types: !4219)
!4219 = !{!197, !4076}
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4188, file: !4078, line: 866, baseType: !4209, size: 64, offset: 512)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !4188, file: !4078, line: 867, baseType: !4222, size: 64, offset: 576)
!4222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4223, size: 64)
!4223 = !DISubroutineType(types: !4224)
!4224 = !{!197, !4076, !197}
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !4188, file: !4078, line: 868, baseType: !4226, size: 64, offset: 640)
!4226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4227, size: 64)
!4227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4228)
!4228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !4078, line: 795, size: 384, elements: !4229)
!4229 = !{!4230, !4236, !4240, !4241, !4242, !4243}
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4228, file: !4078, line: 797, baseType: !4231, size: 64)
!4231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4232, size: 64)
!4232 = !DISubroutineType(types: !4233)
!4233 = !{!4234, !4076, !4235}
!4234 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !4078, line: 772, baseType: !7)
!4235 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !4078, line: 180, baseType: !7)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4228, file: !4078, line: 801, baseType: !4237, size: 64, offset: 64)
!4237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4238, size: 64)
!4238 = !DISubroutineType(types: !4239)
!4239 = !{!4234, !4076}
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4228, file: !4078, line: 804, baseType: !4237, size: 64, offset: 128)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4228, file: !4078, line: 807, baseType: !4209, size: 64, offset: 192)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4228, file: !4078, line: 808, baseType: !4209, size: 64, offset: 256)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4228, file: !4078, line: 811, baseType: !4209, size: 64, offset: 320)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4188, file: !4078, line: 869, baseType: !575, size: 64, offset: 704)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4188, file: !4078, line: 870, baseType: !455, size: 1152, offset: 768)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4188, file: !4078, line: 871, baseType: !4247, size: 128, offset: 1920)
!4247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !4078, line: 759, size: 128, elements: !4248)
!4248 = !{!4249, !4250}
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4247, file: !4078, line: 760, baseType: !483)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4247, file: !4078, line: 761, baseType: !247, size: 128)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !4077, file: !4078, line: 340, baseType: !152, size: 64, offset: 832)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4077, file: !4078, line: 346, baseType: !3793, size: 128, offset: 896)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !4077, file: !4078, line: 348, baseType: !4254, size: 32, offset: 1024)
!4254 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !4078, line: 155, baseType: !197)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !4077, file: !4078, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !4077, file: !4078, line: 352, baseType: !271, size: 8, offset: 1064)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !4077, file: !4078, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !4077, file: !4078, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !4077, file: !4078, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !4077, file: !4078, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !4077, file: !4078, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !4077, file: !4078, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !4077, file: !4078, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !4077, file: !4078, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !4077, file: !4078, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !4077, file: !4078, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !4077, file: !4078, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !4077, file: !4078, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !4077, file: !4078, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !4077, file: !4078, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !4077, file: !4078, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !4077, file: !4078, line: 376, baseType: !7, size: 32, offset: 1120)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !4077, file: !4078, line: 377, baseType: !7, size: 32, offset: 1152)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !4077, file: !4078, line: 380, baseType: !4275, size: 64, offset: 1216)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !4078, line: 303, flags: DIFlagFwdDecl)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !4077, file: !4078, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !4077, file: !4078, line: 383, baseType: !197, size: 32, offset: 1312)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !4077, file: !4078, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !4077, file: !4078, line: 387, baseType: !4235, size: 32, offset: 1376)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4077, file: !4078, line: 388, baseType: !467, size: 5568, offset: 1408)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !4077, file: !4078, line: 390, baseType: !197, size: 32, offset: 6976)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4077, file: !4078, line: 396, baseType: !7, size: 32, offset: 7008)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4077, file: !4078, line: 397, baseType: !4285, size: 8704, offset: 7040)
!4285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4094, size: 8704, elements: !4286)
!4286 = !{!4287}
!4287 = !DISubrange(count: 17)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4077, file: !4078, line: 399, baseType: !262, size: 8, offset: 15744)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !4077, file: !4078, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !4077, file: !4078, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !4077, file: !4078, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !4077, file: !4078, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !4077, file: !4078, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !4077, file: !4078, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !4077, file: !4078, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !4077, file: !4078, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !4077, file: !4078, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !4077, file: !4078, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !4077, file: !4078, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !4077, file: !4078, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !4077, file: !4078, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !4077, file: !4078, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !4077, file: !4078, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !4077, file: !4078, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !4077, file: !4078, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !4077, file: !4078, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !4077, file: !4078, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !4077, file: !4078, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !4077, file: !4078, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !4077, file: !4078, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !4077, file: !4078, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !4077, file: !4078, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !4077, file: !4078, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !4077, file: !4078, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !4077, file: !4078, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !4077, file: !4078, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !4077, file: !4078, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !4077, file: !4078, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !4077, file: !4078, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !4077, file: !4078, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !4077, file: !4078, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !4077, file: !4078, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !4077, file: !4078, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !4077, file: !4078, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !4077, file: !4078, line: 450, baseType: !4326, size: 16, offset: 15792)
!4326 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !4078, line: 206, baseType: !212)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !4077, file: !4078, line: 451, baseType: !979, size: 32, offset: 15808)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !4077, file: !4078, line: 453, baseType: !4329, size: 512, offset: 15840)
!4329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 512, elements: !1955)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !4077, file: !4078, line: 454, baseType: !873, size: 64, offset: 16384)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !4077, file: !4078, line: 455, baseType: !589, size: 64, offset: 16448)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !4077, file: !4078, line: 456, baseType: !197, size: 32, offset: 16512)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !4077, file: !4078, line: 457, baseType: !4334, size: 1088, offset: 16576)
!4334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !589, size: 1088, elements: !4286)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !4077, file: !4078, line: 458, baseType: !4334, size: 1088, offset: 17664)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !4077, file: !4078, line: 469, baseType: !575, size: 64, offset: 18752)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !4077, file: !4078, line: 471, baseType: !4338, size: 64, offset: 18816)
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4339, size: 64)
!4339 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !4078, line: 304, flags: DIFlagFwdDecl)
!4340 = !DIDerivedType(tag: DW_TAG_member, scope: !4077, file: !4078, line: 478, baseType: !4341, size: 64, offset: 18880)
!4341 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4077, file: !4078, line: 478, size: 64, elements: !4342)
!4342 = !{!4343, !4346}
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4341, file: !4078, line: 479, baseType: !4344, size: 64)
!4344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4345, size: 64)
!4345 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !4078, line: 305, flags: DIFlagFwdDecl)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4341, file: !4078, line: 480, baseType: !4076, size: 64)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !4077, file: !4078, line: 482, baseType: !1084, size: 16, offset: 18944)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !4077, file: !4078, line: 483, baseType: !271, size: 8, offset: 18960)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !4077, file: !4078, line: 497, baseType: !1084, size: 16, offset: 18976)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !4077, file: !4078, line: 498, baseType: !2336, size: 64, offset: 19008)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !4077, file: !4078, line: 499, baseType: !569, size: 64, offset: 19072)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !4077, file: !4078, line: 500, baseType: !430, size: 64, offset: 19136)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !4077, file: !4078, line: 502, baseType: !163, size: 64, offset: 19200)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "csr", scope: !357, file: !141, line: 548, baseType: !4355, size: 64, offset: 58048)
!4355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4356, size: 64)
!4356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udc_csrs", file: !141, line: 388, size: 320, elements: !4357)
!4357 = !{!4358, !4359}
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "sca", scope: !4356, file: !141, line: 391, baseType: !296, size: 32)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "ne", scope: !4356, file: !141, line: 394, baseType: !4360, size: 288, offset: 32)
!4360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 288, elements: !3998)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !357, file: !141, line: 549, baseType: !4362, size: 64, offset: 58112)
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4363, size: 64)
!4363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udc_regs", file: !141, line: 398, size: 224, elements: !4364)
!4364 = !{!4365, !4366, !4367, !4368, !4369, !4370, !4371}
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !4363, file: !141, line: 401, baseType: !296, size: 32)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !4363, file: !141, line: 404, baseType: !296, size: 32, offset: 32)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "sts", scope: !4363, file: !141, line: 407, baseType: !296, size: 32, offset: 64)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "irqsts", scope: !4363, file: !141, line: 410, baseType: !296, size: 32, offset: 96)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "irqmsk", scope: !4363, file: !141, line: 413, baseType: !296, size: 32, offset: 128)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "ep_irqsts", scope: !4363, file: !141, line: 416, baseType: !296, size: 32, offset: 160)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "ep_irqmsk", scope: !4363, file: !141, line: 419, baseType: !296, size: 32, offset: 192)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "ep_regs", scope: !357, file: !141, line: 550, baseType: !324, size: 64, offset: 58176)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "rxfifo", scope: !357, file: !141, line: 551, baseType: !336, size: 64, offset: 58240)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "txfifo", scope: !357, file: !141, line: 552, baseType: !336, size: 64, offset: 58304)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "data_requests", scope: !357, file: !141, line: 555, baseType: !4376, size: 64, offset: 58368)
!4376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4377 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_pool", file: !4378, line: 21, flags: DIFlagFwdDecl)
!4378 = !DIFile(filename: "./include/linux/dmapool.h", directory: "/home/lizy2001/genbc/linux")
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "stp_requests", scope: !357, file: !141, line: 556, baseType: !4376, size: 64, offset: 58432)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !357, file: !141, line: 559, baseType: !163, size: 64, offset: 58496)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "virt_addr", scope: !357, file: !141, line: 560, baseType: !138, size: 64, offset: 58560)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !357, file: !141, line: 561, baseType: !7, size: 32, offset: 58624)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "cur_config", scope: !357, file: !141, line: 564, baseType: !1084, size: 16, offset: 58656)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "cur_intf", scope: !357, file: !141, line: 565, baseType: !1084, size: 16, offset: 58672)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "cur_alt", scope: !357, file: !141, line: 566, baseType: !1084, size: 16, offset: 58688)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !357, file: !141, line: 569, baseType: !466, size: 64, offset: 58752)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "udc_phy", scope: !357, file: !141, line: 570, baseType: !4388, size: 64, offset: 58816)
!4388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4389, size: 64)
!4389 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy", file: !141, line: 570, flags: DIFlagFwdDecl)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "edev", scope: !357, file: !141, line: 571, baseType: !4391, size: 64, offset: 58880)
!4391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4392, size: 64)
!4392 = !DICompositeType(tag: DW_TAG_structure_type, name: "extcon_dev", file: !4393, line: 166, flags: DIFlagFwdDecl)
!4393 = !DIFile(filename: "./include/linux/extcon.h", directory: "/home/lizy2001/genbc/linux")
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "extcon_nb", scope: !357, file: !141, line: 572, baseType: !4395, size: 256, offset: 58944)
!4395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extcon_specific_cable_nb", file: !4393, line: 300, size: 256, elements: !4396)
!4396 = !{!4397, !4409, !4410, !4411}
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "user_nb", scope: !4395, file: !4393, line: 301, baseType: !4398, size: 64)
!4398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4399, size: 64)
!4399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !4400, line: 54, size: 192, elements: !4401)
!4400 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!4401 = !{!4402, !4407, !4408}
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !4399, file: !4400, line: 55, baseType: !4403, size: 64)
!4403 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !4400, line: 51, baseType: !4404)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4405, size: 64)
!4405 = !DISubroutineType(types: !4406)
!4406 = !{!197, !4398, !163, !138}
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4399, file: !4400, line: 56, baseType: !4398, size: 64, offset: 64)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !4399, file: !4400, line: 57, baseType: !197, size: 32, offset: 128)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "cable_index", scope: !4395, file: !4393, line: 302, baseType: !197, size: 32, offset: 64)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "edev", scope: !4395, file: !4393, line: 303, baseType: !4391, size: 64, offset: 128)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "previous_value", scope: !4395, file: !4393, line: 304, baseType: !163, size: 64, offset: 192)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "nb", scope: !357, file: !141, line: 573, baseType: !4399, size: 192, offset: 59200)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "drd_work", scope: !357, file: !141, line: 574, baseType: !4414, size: 704, offset: 59392)
!4414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !364, line: 115, size: 704, elements: !4415)
!4415 = !{!4416, !4417, !4418, !4419}
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4414, file: !364, line: 116, baseType: !363, size: 256)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4414, file: !364, line: 117, baseType: !3688, size: 320, offset: 256)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !4414, file: !364, line: 120, baseType: !3004, size: 64, offset: 576)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !4414, file: !364, line: 121, baseType: !197, size: 32, offset: 640)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "drd_wq", scope: !357, file: !141, line: 575, baseType: !3004, size: 64, offset: 60096)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "conn_type", scope: !357, file: !141, line: 576, baseType: !296, size: 32, offset: 60160)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !320, file: !141, line: 520, baseType: !247, size: 128, offset: 1344)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "halted", scope: !320, file: !141, line: 521, baseType: !7, size: 32, offset: 1472)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "cancel_transfer", scope: !320, file: !141, line: 522, baseType: !7, size: 32, offset: 1504)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !320, file: !141, line: 523, baseType: !7, size: 5, offset: 1536, flags: DIFlagBitField, extraData: i64 1536)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_depth", scope: !320, file: !141, line: 524, baseType: !7, size: 14, offset: 1541, flags: DIFlagBitField, extraData: i64 1536)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !320, file: !141, line: 525, baseType: !7, size: 1, offset: 1555, flags: DIFlagBitField, extraData: i64 1536)
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4429, size: 64)
!4429 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !204)
!4430 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !210, line: 31, baseType: !297)
!4431 = !{!4432, !4484, !4489, !4494, !4496, !4498, !4503, !4505, !4510, !4515, !4517, !4522, !4527, !4529, !4534, !4539, !4544, !4546, !4548, !4550, !4552, !4554, !4556, !4558, !0, !4560, !4562, !4564, !4566, !4571, !4576, !4578, !4580, !4587, !4589, !4591, !4593, !4595, !4597, !4600, !4602, !4604, !4613, !4634, !4636, !4638, !4640, !4643}
!4432 = !DIGlobalVariableExpression(var: !4433, expr: !DIExpression())
!4433 = distinct !DIGlobalVariable(name: "__param_use_dma", scope: !2, file: !141, line: 609, type: !4434, isLocal: true, isDefinition: true, align: 64)
!4434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4435)
!4435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !4436, line: 69, size: 320, elements: !4437)
!4436 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!4437 = !{!4438, !4439, !4440, !4456, !4458, !4462, !4463}
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4435, file: !4436, line: 70, baseType: !185, size: 64)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4435, file: !4436, line: 71, baseType: !868, size: 64, offset: 64)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4435, file: !4436, line: 72, baseType: !4441, size: 64, offset: 128)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 64)
!4442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4443)
!4443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !4436, line: 47, size: 256, elements: !4444)
!4444 = !{!4445, !4446, !4451, !4455}
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4443, file: !4436, line: 49, baseType: !7, size: 32)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4443, file: !4436, line: 51, baseType: !4447, size: 64, offset: 64)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4448 = !DISubroutineType(types: !4449)
!4449 = !{!197, !185, !4450}
!4450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4434, size: 64)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4443, file: !4436, line: 53, baseType: !4452, size: 64, offset: 128)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = !DISubroutineType(types: !4454)
!4454 = !{!197, !430, !4450}
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4443, file: !4436, line: 55, baseType: !707, size: 64, offset: 192)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !4435, file: !4436, line: 73, baseType: !4457, size: 16, offset: 192)
!4457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1084)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4435, file: !4436, line: 74, baseType: !4459, size: 8, offset: 208)
!4459 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !153, line: 16, baseType: !4460)
!4460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !155, line: 20, baseType: !4461)
!4461 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4435, file: !4436, line: 75, baseType: !271, size: 8, offset: 216)
!4463 = !DIDerivedType(tag: DW_TAG_member, scope: !4435, file: !4436, line: 76, baseType: !4464, size: 64, offset: 256)
!4464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4435, file: !4436, line: 76, size: 64, elements: !4465)
!4465 = !{!4466, !4467, !4474}
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4464, file: !4436, line: 77, baseType: !138, size: 64)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4464, file: !4436, line: 78, baseType: !4468, size: 64)
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 64)
!4469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4470)
!4470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !4436, line: 86, size: 128, elements: !4471)
!4471 = !{!4472, !4473}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !4470, file: !4436, line: 87, baseType: !7, size: 32)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4470, file: !4436, line: 88, baseType: !430, size: 64, offset: 64)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !4464, file: !4436, line: 79, baseType: !4475, size: 64)
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4476, size: 64)
!4476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4477)
!4477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !4436, line: 92, size: 256, elements: !4478)
!4478 = !{!4479, !4480, !4481, !4482, !4483}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4477, file: !4436, line: 94, baseType: !7, size: 32)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !4477, file: !4436, line: 95, baseType: !7, size: 32, offset: 32)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4477, file: !4436, line: 96, baseType: !2894, size: 64, offset: 64)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4477, file: !4436, line: 97, baseType: !4441, size: 64, offset: 128)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4477, file: !4436, line: 98, baseType: !138, size: 64, offset: 192)
!4484 = !DIGlobalVariableExpression(var: !4485, expr: !DIExpression())
!4485 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_use_dmatype235", scope: !2, file: !141, line: 609, type: !4486, isLocal: true, isDefinition: true, align: 8)
!4486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 288, elements: !4487)
!4487 = !{!4488}
!4488 = !DISubrange(count: 36)
!4489 = !DIGlobalVariableExpression(var: !4490, expr: !DIExpression())
!4490 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_use_dma236", scope: !2, file: !141, line: 610, type: !4491, isLocal: true, isDefinition: true, align: 8)
!4491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 320, elements: !4492)
!4492 = !{!4493}
!4493 = !DISubrange(count: 40)
!4494 = !DIGlobalVariableExpression(var: !4495, expr: !DIExpression())
!4495 = distinct !DIGlobalVariable(name: "__param_use_dma_ppb", scope: !2, file: !141, line: 611, type: !4434, isLocal: true, isDefinition: true, align: 64)
!4496 = !DIGlobalVariableExpression(var: !4497, expr: !DIExpression())
!4497 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_use_dma_ppbtype237", scope: !2, file: !141, line: 611, type: !4491, isLocal: true, isDefinition: true, align: 8)
!4498 = !DIGlobalVariableExpression(var: !4499, expr: !DIExpression())
!4499 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_use_dma_ppb238", scope: !2, file: !141, line: 612, type: !4500, isLocal: true, isDefinition: true, align: 8)
!4500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 560, elements: !4501)
!4501 = !{!4502}
!4502 = !DISubrange(count: 70)
!4503 = !DIGlobalVariableExpression(var: !4504, expr: !DIExpression())
!4504 = distinct !DIGlobalVariable(name: "__param_use_dma_ppb_du", scope: !2, file: !141, line: 613, type: !4434, isLocal: true, isDefinition: true, align: 64)
!4505 = !DIGlobalVariableExpression(var: !4506, expr: !DIExpression())
!4506 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_use_dma_ppb_dutype239", scope: !2, file: !141, line: 613, type: !4507, isLocal: true, isDefinition: true, align: 8)
!4507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 344, elements: !4508)
!4508 = !{!4509}
!4509 = !DISubrange(count: 43)
!4510 = !DIGlobalVariableExpression(var: !4511, expr: !DIExpression())
!4511 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_use_dma_ppb_du240", scope: !2, file: !141, line: 614, type: !4512, isLocal: true, isDefinition: true, align: 8)
!4512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 768, elements: !4513)
!4513 = !{!4514}
!4514 = !DISubrange(count: 96)
!4515 = !DIGlobalVariableExpression(var: !4516, expr: !DIExpression())
!4516 = distinct !DIGlobalVariable(name: "__param_use_fullspeed", scope: !2, file: !141, line: 616, type: !4434, isLocal: true, isDefinition: true, align: 64)
!4517 = !DIGlobalVariableExpression(var: !4518, expr: !DIExpression())
!4518 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_use_fullspeedtype241", scope: !2, file: !141, line: 616, type: !4519, isLocal: true, isDefinition: true, align: 8)
!4519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 336, elements: !4520)
!4520 = !{!4521}
!4521 = !DISubrange(count: 42)
!4522 = !DIGlobalVariableExpression(var: !4523, expr: !DIExpression())
!4523 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_use_fullspeed242", scope: !2, file: !141, line: 617, type: !4524, isLocal: true, isDefinition: true, align: 8)
!4524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 456, elements: !4525)
!4525 = !{!4526}
!4526 = !DISubrange(count: 57)
!4527 = !DIGlobalVariableExpression(var: !4528, expr: !DIExpression())
!4528 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description265", scope: !2, file: !3, line: 3215, type: !4524, isLocal: true, isDefinition: true, align: 8)
!4529 = !DIGlobalVariableExpression(var: !4530, expr: !DIExpression())
!4530 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author266", scope: !2, file: !3, line: 3216, type: !4531, isLocal: true, isDefinition: true, align: 8)
!4531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 296, elements: !4532)
!4532 = !{!4533}
!4533 = !DISubrange(count: 37)
!4534 = !DIGlobalVariableExpression(var: !4535, expr: !DIExpression())
!4535 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file267", scope: !2, file: !3, line: 3217, type: !4536, isLocal: true, isDefinition: true, align: 8)
!4536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 448, elements: !4537)
!4537 = !{!4538}
!4538 = !DISubrange(count: 56)
!4539 = !DIGlobalVariableExpression(var: !4540, expr: !DIExpression())
!4540 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license268", scope: !2, file: !3, line: 3217, type: !4541, isLocal: true, isDefinition: true, align: 8)
!4541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 208, elements: !4542)
!4542 = !{!4543}
!4543 = !DISubrange(count: 26)
!4544 = !DIGlobalVariableExpression(var: !4545, expr: !DIExpression())
!4545 = distinct !DIGlobalVariable(name: "use_dma_ppb_du", scope: !2, file: !141, line: 604, type: !262, isLocal: true, isDefinition: true)
!4546 = !DIGlobalVariableExpression(var: !4547, expr: !DIExpression())
!4547 = distinct !DIGlobalVariable(name: "use_fullspeed", scope: !2, file: !141, line: 606, type: !262, isLocal: true, isDefinition: true)
!4548 = !DIGlobalVariableExpression(var: !4549, expr: !DIExpression())
!4549 = distinct !DIGlobalVariable(name: "udc", scope: !2, file: !3, line: 56, type: !356, isLocal: true, isDefinition: true)
!4550 = !DIGlobalVariableExpression(var: !4551, expr: !DIExpression())
!4551 = distinct !DIGlobalVariable(name: "udc_timer", scope: !2, file: !3, line: 74, type: !3688, isLocal: true, isDefinition: true)
!4552 = !DIGlobalVariableExpression(var: !4553, expr: !DIExpression())
!4553 = distinct !DIGlobalVariable(name: "stop_timer", scope: !2, file: !3, line: 75, type: !197, isLocal: true, isDefinition: true)
!4554 = !DIGlobalVariableExpression(var: !4555, expr: !DIExpression())
!4555 = distinct !DIGlobalVariable(name: "udc_pollstall_timer", scope: !2, file: !3, line: 94, type: !3688, isLocal: true, isDefinition: true)
!4556 = !DIGlobalVariableExpression(var: !4557, expr: !DIExpression())
!4557 = distinct !DIGlobalVariable(name: "stop_pollstall_timer", scope: !2, file: !3, line: 95, type: !197, isLocal: true, isDefinition: true)
!4558 = !DIGlobalVariableExpression(var: !4559, expr: !DIExpression())
!4559 = distinct !DIGlobalVariable(name: "use_dma_bufferfill_mode", scope: !2, file: !3, line: 182, type: !197, isLocal: true, isDefinition: true)
!4560 = !DIGlobalVariableExpression(var: !4561, expr: !DIExpression())
!4561 = distinct !DIGlobalVariable(name: "use_dma", scope: !2, file: !141, line: 600, type: !262, isLocal: true, isDefinition: true)
!4562 = !DIGlobalVariableExpression(var: !4563, expr: !DIExpression())
!4563 = distinct !DIGlobalVariable(name: "__param_str_use_dma_ppb", scope: !2, file: !141, line: 611, type: !4541, isLocal: true, isDefinition: true)
!4564 = !DIGlobalVariableExpression(var: !4565, expr: !DIExpression())
!4565 = distinct !DIGlobalVariable(name: "use_dma_ppb", scope: !2, file: !141, line: 602, type: !262, isLocal: true, isDefinition: true)
!4566 = !DIGlobalVariableExpression(var: !4567, expr: !DIExpression())
!4567 = distinct !DIGlobalVariable(name: "__param_str_use_dma_ppb_du", scope: !2, file: !141, line: 613, type: !4568, isLocal: true, isDefinition: true)
!4568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 232, elements: !4569)
!4569 = !{!4570}
!4570 = !DISubrange(count: 29)
!4571 = !DIGlobalVariableExpression(var: !4572, expr: !DIExpression())
!4572 = distinct !DIGlobalVariable(name: "__param_str_use_fullspeed", scope: !2, file: !141, line: 616, type: !4573, isLocal: true, isDefinition: true)
!4573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 224, elements: !4574)
!4574 = !{!4575}
!4575 = !DISubrange(count: 28)
!4576 = !DIGlobalVariableExpression(var: !4577, expr: !DIExpression())
!4577 = distinct !DIGlobalVariable(name: "set_rde", scope: !2, file: !3, line: 91, type: !197, isLocal: true, isDefinition: true)
!4578 = !DIGlobalVariableExpression(var: !4579, expr: !DIExpression())
!4579 = distinct !DIGlobalVariable(name: "hs_tx_buf", scope: !2, file: !3, line: 184, type: !163, isLocal: true, isDefinition: true)
!4580 = !DIGlobalVariableExpression(var: !4581, expr: !DIExpression())
!4581 = distinct !DIGlobalVariable(name: "setup_data", scope: !2, file: !3, line: 53, type: !4582, isLocal: true, isDefinition: true)
!4582 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "udc_setup_data", file: !141, line: 582, size: 64, elements: !4583)
!4583 = !{!4584, !4586}
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4582, file: !141, line: 583, baseType: !4585, size: 64)
!4585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 64, elements: !1789)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4582, file: !141, line: 584, baseType: !443, size: 64)
!4587 = !DIGlobalVariableExpression(var: !4588, expr: !DIExpression())
!4588 = distinct !DIGlobalVariable(name: "udc_stall_spinlock", scope: !2, file: !3, line: 61, type: !483, isLocal: true, isDefinition: true)
!4589 = !DIGlobalVariableExpression(var: !4590, expr: !DIExpression())
!4590 = distinct !DIGlobalVariable(name: "cnak_pending", scope: !2, file: !3, line: 308, type: !296, isLocal: true, isDefinition: true)
!4591 = !DIGlobalVariableExpression(var: !4592, expr: !DIExpression())
!4592 = distinct !DIGlobalVariable(name: "udc_rxfifo_pending", scope: !2, file: !3, line: 67, type: !7, isLocal: true, isDefinition: true)
!4593 = !DIGlobalVariableExpression(var: !4594, expr: !DIExpression())
!4594 = distinct !DIGlobalVariable(name: "soft_reset_occured", scope: !2, file: !3, line: 70, type: !197, isLocal: true, isDefinition: true)
!4595 = !DIGlobalVariableExpression(var: !4596, expr: !DIExpression())
!4596 = distinct !DIGlobalVariable(name: "udc_ep_ops", scope: !2, file: !3, line: 1371, type: !190, isLocal: true, isDefinition: true)
!4597 = !DIGlobalVariableExpression(var: !4598, expr: !DIExpression())
!4598 = distinct !DIGlobalVariable(name: "ep0_string", scope: !2, file: !3, line: 102, type: !4599, isLocal: true, isDefinition: true)
!4599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 48, elements: !1845)
!4600 = !DIGlobalVariableExpression(var: !4601, expr: !DIExpression())
!4601 = distinct !DIGlobalVariable(name: "soft_reset_after_usbreset_occured", scope: !2, file: !3, line: 71, type: !197, isLocal: true, isDefinition: true)
!4602 = !DIGlobalVariableExpression(var: !4603, expr: !DIExpression())
!4603 = distinct !DIGlobalVariable(name: "udc_irq_spinlock", scope: !2, file: !3, line: 59, type: !483, isLocal: true, isDefinition: true)
!4604 = !DIGlobalVariableExpression(var: !4605, expr: !DIExpression())
!4605 = distinct !DIGlobalVariable(name: "ep_info", scope: !2, file: !3, line: 106, type: !4606, isLocal: true, isDefinition: true)
!4606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4607, size: 4096, elements: !2441)
!4607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4608)
!4608 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 103, size: 128, elements: !4609)
!4609 = !{!4610, !4611}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4608, file: !3, line: 104, baseType: !185, size: 64)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !4608, file: !3, line: 105, baseType: !4612, size: 32, offset: 64)
!4612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !253)
!4613 = !DIGlobalVariableExpression(var: !4614, expr: !DIExpression())
!4614 = distinct !DIGlobalVariable(name: "disconnect_tasklet", scope: !2, file: !3, line: 99, type: !4615, isLocal: true, isDefinition: true)
!4615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !133, line: 609, size: 320, elements: !4616)
!4616 = !{!4617, !4619, !4620, !4621, !4622, !4633}
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4615, file: !133, line: 611, baseType: !4618, size: 64)
!4618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4615, size: 64)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4615, file: !133, line: 612, baseType: !163, size: 64, offset: 64)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4615, file: !133, line: 613, baseType: !979, size: 32, offset: 128)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !4615, file: !133, line: 614, baseType: !262, size: 8, offset: 160)
!4622 = !DIDerivedType(tag: DW_TAG_member, scope: !4615, file: !133, line: 615, baseType: !4623, size: 64, offset: 192)
!4623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4615, file: !133, line: 615, size: 64, elements: !4624)
!4624 = !{!4625, !4629}
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4623, file: !133, line: 616, baseType: !4626, size: 64)
!4626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4627, size: 64)
!4627 = !DISubroutineType(types: !4628)
!4628 = !{null, !163}
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4623, file: !133, line: 617, baseType: !4630, size: 64)
!4630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4631, size: 64)
!4631 = !DISubroutineType(types: !4632)
!4632 = !{null, !4618}
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4615, file: !133, line: 619, baseType: !163, size: 64, offset: 256)
!4634 = !DIGlobalVariableExpression(var: !4635, expr: !DIExpression())
!4635 = distinct !DIGlobalVariable(name: "on_exit", scope: !2, file: !3, line: 93, type: !1722, isLocal: true, isDefinition: true)
!4636 = !DIGlobalVariableExpression(var: !4637, expr: !DIExpression())
!4637 = distinct !DIGlobalVariable(name: "on_pollstall_exit", scope: !2, file: !3, line: 96, type: !1722, isLocal: true, isDefinition: true)
!4638 = !DIGlobalVariableExpression(var: !4639, expr: !DIExpression())
!4639 = distinct !DIGlobalVariable(name: "udc_ops", scope: !2, file: !3, line: 1430, type: !388, isLocal: true, isDefinition: true)
!4640 = !DIGlobalVariableExpression(var: !4641, expr: !DIExpression())
!4641 = distinct !DIGlobalVariable(name: "name", scope: !2, file: !3, line: 47, type: !4642, isLocal: true, isDefinition: true)
!4642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 32, elements: !1378)
!4643 = !DIGlobalVariableExpression(var: !4644, expr: !DIExpression())
!4644 = distinct !DIGlobalVariable(name: "mod_desc", scope: !2, file: !3, line: 46, type: !4645, isLocal: true, isDefinition: true)
!4645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 248, elements: !4646)
!4646 = !{!4647}
!4647 = !DISubrange(count: 31)
!4648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 176, elements: !4649)
!4649 = !{!4650}
!4650 = !DISubrange(count: 22)
!4651 = !{!"rsp"}
!4652 = !{i32 7, !"Dwarf Version", i32 4}
!4653 = !{i32 2, !"Debug Info Version", i32 3}
!4654 = !{i32 1, !"wchar_size", i32 2}
!4655 = !{i32 1, !"Code Model", i32 2}
!4656 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4657 = distinct !DISubprogram(name: "udc_mask_unused_interrupts", scope: !3, file: !3, line: 221, type: !4658, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !497)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{!197, !356}
!4660 = !DILocalVariable(name: "dev", arg: 1, scope: !4657, file: !3, line: 221, type: !356)
!4661 = !DILocation(line: 221, column: 44, scope: !4657)
!4662 = !DILocalVariable(name: "tmp", scope: !4657, file: !3, line: 223, type: !296)
!4663 = !DILocation(line: 223, column: 6, scope: !4657)
!4664 = !DILocation(line: 226, column: 6, scope: !4657)
!4665 = !DILocation(line: 234, column: 9, scope: !4657)
!4666 = !DILocation(line: 234, column: 15, scope: !4657)
!4667 = !DILocation(line: 234, column: 20, scope: !4657)
!4668 = !DILocation(line: 234, column: 26, scope: !4657)
!4669 = !DILocation(line: 234, column: 14, scope: !4657)
!4670 = !DILocation(line: 234, column: 2, scope: !4657)
!4671 = !DILocation(line: 237, column: 37, scope: !4657)
!4672 = !DILocation(line: 237, column: 42, scope: !4657)
!4673 = !DILocation(line: 237, column: 48, scope: !4657)
!4674 = !DILocation(line: 237, column: 36, scope: !4657)
!4675 = !DILocation(line: 237, column: 2, scope: !4657)
!4676 = !DILocation(line: 239, column: 2, scope: !4657)
!4677 = distinct !DISubprogram(name: "writel", scope: !4678, file: !4678, line: 67, type: !4679, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!4678 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!4679 = !DISubroutineType(types: !4680)
!4680 = !{null, !7, !4681}
!4681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4682, size: 64)
!4682 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4683 = !DILocalVariable(name: "val", arg: 1, scope: !4677, file: !4678, line: 67, type: !7)
!4684 = !DILocation(line: 67, column: 1, scope: !4677)
!4685 = !DILocalVariable(name: "addr", arg: 2, scope: !4677, file: !4678, line: 67, type: !4681)
!4686 = !{i32 -2143351872}
!4687 = distinct !DISubprogram(name: "udc_enable_dev_setup_interrupts", scope: !3, file: !3, line: 261, type: !4658, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !497)
!4688 = !DILocalVariable(name: "dev", arg: 1, scope: !4687, file: !3, line: 261, type: !356)
!4689 = !DILocation(line: 261, column: 49, scope: !4687)
!4690 = !DILocalVariable(name: "tmp", scope: !4687, file: !3, line: 263, type: !296)
!4691 = !DILocation(line: 263, column: 6, scope: !4687)
!4692 = !DILocation(line: 268, column: 15, scope: !4687)
!4693 = !DILocation(line: 268, column: 20, scope: !4687)
!4694 = !DILocation(line: 268, column: 26, scope: !4687)
!4695 = !DILocation(line: 268, column: 14, scope: !4687)
!4696 = !DILocation(line: 268, column: 8, scope: !4687)
!4697 = !DILocation(line: 268, column: 6, scope: !4687)
!4698 = !DILocation(line: 271, column: 6, scope: !4687)
!4699 = !DILocation(line: 276, column: 9, scope: !4687)
!4700 = !DILocation(line: 276, column: 15, scope: !4687)
!4701 = !DILocation(line: 276, column: 20, scope: !4687)
!4702 = !DILocation(line: 276, column: 26, scope: !4687)
!4703 = !DILocation(line: 276, column: 14, scope: !4687)
!4704 = !DILocation(line: 276, column: 2, scope: !4687)
!4705 = !DILocation(line: 278, column: 2, scope: !4687)
!4706 = distinct !DISubprogram(name: "readl", scope: !4678, file: !4678, line: 59, type: !4707, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!4707 = !DISubroutineType(types: !4708)
!4708 = !{!7, !4709}
!4709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4710, size: 64)
!4710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4682)
!4711 = !DILocalVariable(name: "addr", arg: 1, scope: !4706, file: !4678, line: 59, type: !4709)
!4712 = !DILocation(line: 59, column: 1, scope: !4706)
!4713 = !DILocalVariable(name: "ret", scope: !4706, file: !4678, line: 59, type: !7)
!4714 = !{i32 -2143354265}
!4715 = distinct !DISubprogram(name: "empty_req_queue", scope: !3, file: !3, line: 1239, type: !4716, scopeLine: 1240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !497)
!4716 = !DISubroutineType(types: !4717)
!4717 = !{null, !319}
!4718 = !DILocalVariable(name: "ep", arg: 1, scope: !4715, file: !3, line: 1239, type: !319)
!4719 = !DILocation(line: 1239, column: 37, scope: !4715)
!4720 = !DILocalVariable(name: "req", scope: !4715, file: !3, line: 1241, type: !139)
!4721 = !DILocation(line: 1241, column: 22, scope: !4715)
!4722 = !DILocation(line: 1243, column: 2, scope: !4715)
!4723 = !DILocation(line: 1243, column: 6, scope: !4715)
!4724 = !DILocation(line: 1243, column: 13, scope: !4715)
!4725 = !DILocation(line: 1244, column: 2, scope: !4715)
!4726 = !DILocation(line: 1244, column: 22, scope: !4715)
!4727 = !DILocation(line: 1244, column: 26, scope: !4715)
!4728 = !DILocation(line: 1244, column: 10, scope: !4715)
!4729 = !DILocation(line: 1244, column: 9, scope: !4715)
!4730 = !DILocalVariable(name: "__mptr", scope: !4731, file: !3, line: 1245, type: !138)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 1245, column: 9)
!4732 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 1244, column: 34)
!4733 = !DILocation(line: 1245, column: 9, scope: !4731)
!4734 = !DILocation(line: 1245, column: 9, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1245, column: 9)
!4736 = !DILocation(line: 1245, column: 7, scope: !4732)
!4737 = !DILocation(line: 1248, column: 16, scope: !4732)
!4738 = !DILocation(line: 1248, column: 20, scope: !4732)
!4739 = !DILocation(line: 1248, column: 3, scope: !4732)
!4740 = distinct !{!4740, !4725, !4741}
!4741 = !DILocation(line: 1249, column: 2, scope: !4715)
!4742 = !DILocation(line: 1250, column: 1, scope: !4715)
!4743 = distinct !DISubprogram(name: "list_empty", scope: !4744, file: !4744, line: 280, type: !4745, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!4744 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!4745 = !DISubroutineType(types: !4746)
!4746 = !{!197, !4747}
!4747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4748, size: 64)
!4748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !247)
!4749 = !DILocalVariable(name: "head", arg: 1, scope: !4743, file: !4744, line: 280, type: !4747)
!4750 = !DILocation(line: 280, column: 54, scope: !4743)
!4751 = !DILocation(line: 282, column: 9, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4743, file: !4744, line: 282, column: 9)
!4753 = !DILocation(line: 282, column: 9, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4752, file: !4744, line: 282, column: 9)
!4755 = !DILocation(line: 282, column: 34, scope: !4743)
!4756 = !DILocation(line: 282, column: 31, scope: !4743)
!4757 = !DILocation(line: 282, column: 2, scope: !4743)
!4758 = distinct !DISubprogram(name: "complete_req", scope: !3, file: !3, line: 964, type: !4759, scopeLine: 967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!4759 = !DISubroutineType(types: !4760)
!4760 = !{null, !319, !139, !197}
!4761 = !DILocalVariable(name: "lock", arg: 1, scope: !4762, file: !4763, line: 352, type: !1287)
!4762 = distinct !DISubprogram(name: "spin_lock", scope: !4763, file: !4763, line: 352, type: !4764, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!4763 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!4764 = !DISubroutineType(types: !4765)
!4765 = !{null, !1287}
!4766 = !DILocation(line: 352, column: 51, scope: !4762, inlinedAt: !4767)
!4767 = distinct !DILocation(line: 993, column: 2, scope: !4758)
!4768 = !DILocalVariable(name: "lock", arg: 1, scope: !4769, file: !4763, line: 392, type: !1287)
!4769 = distinct !DISubprogram(name: "spin_unlock", scope: !4763, file: !4763, line: 392, type: !4764, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!4770 = !DILocation(line: 392, column: 53, scope: !4769, inlinedAt: !4771)
!4771 = distinct !DILocation(line: 991, column: 2, scope: !4758)
!4772 = !DILocalVariable(name: "ep", arg: 1, scope: !4758, file: !3, line: 964, type: !319)
!4773 = !DILocation(line: 964, column: 29, scope: !4758)
!4774 = !DILocalVariable(name: "req", arg: 2, scope: !4758, file: !3, line: 964, type: !139)
!4775 = !DILocation(line: 964, column: 53, scope: !4758)
!4776 = !DILocalVariable(name: "sts", arg: 3, scope: !4758, file: !3, line: 964, type: !197)
!4777 = !DILocation(line: 964, column: 62, scope: !4758)
!4778 = !DILocalVariable(name: "dev", scope: !4758, file: !3, line: 968, type: !356)
!4779 = !DILocation(line: 968, column: 15, scope: !4758)
!4780 = !DILocalVariable(name: "halted", scope: !4758, file: !3, line: 969, type: !7)
!4781 = !DILocation(line: 969, column: 12, scope: !4758)
!4782 = !DILocation(line: 971, column: 2, scope: !4758)
!4783 = !DILocation(line: 971, column: 2, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 971, column: 2)
!4785 = !DILocation(line: 973, column: 8, scope: !4758)
!4786 = !DILocation(line: 973, column: 12, scope: !4758)
!4787 = !DILocation(line: 973, column: 6, scope: !4758)
!4788 = !DILocation(line: 975, column: 6, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 975, column: 6)
!4790 = !DILocation(line: 975, column: 10, scope: !4789)
!4791 = !DILocation(line: 975, column: 6, scope: !4758)
!4792 = !DILocation(line: 976, column: 29, scope: !4789)
!4793 = !DILocation(line: 976, column: 34, scope: !4789)
!4794 = !DILocation(line: 976, column: 43, scope: !4789)
!4795 = !DILocation(line: 976, column: 48, scope: !4789)
!4796 = !DILocation(line: 976, column: 53, scope: !4789)
!4797 = !DILocation(line: 976, column: 57, scope: !4789)
!4798 = !DILocation(line: 976, column: 3, scope: !4789)
!4799 = !DILocation(line: 978, column: 11, scope: !4758)
!4800 = !DILocation(line: 978, column: 15, scope: !4758)
!4801 = !DILocation(line: 978, column: 9, scope: !4758)
!4802 = !DILocation(line: 979, column: 2, scope: !4758)
!4803 = !DILocation(line: 979, column: 6, scope: !4758)
!4804 = !DILocation(line: 979, column: 13, scope: !4758)
!4805 = !DILocation(line: 982, column: 6, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 982, column: 6)
!4807 = !DILocation(line: 982, column: 11, scope: !4806)
!4808 = !DILocation(line: 982, column: 15, scope: !4806)
!4809 = !DILocation(line: 982, column: 22, scope: !4806)
!4810 = !DILocation(line: 982, column: 6, scope: !4758)
!4811 = !DILocation(line: 983, column: 21, scope: !4806)
!4812 = !DILocation(line: 983, column: 3, scope: !4806)
!4813 = !DILocation(line: 983, column: 8, scope: !4806)
!4814 = !DILocation(line: 983, column: 12, scope: !4806)
!4815 = !DILocation(line: 983, column: 19, scope: !4806)
!4816 = !DILocation(line: 986, column: 17, scope: !4758)
!4817 = !DILocation(line: 986, column: 22, scope: !4758)
!4818 = !DILocation(line: 986, column: 2, scope: !4758)
!4819 = !DILocation(line: 988, column: 2, scope: !4758)
!4820 = !DILocation(line: 988, column: 2, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 988, column: 2)
!4822 = !DILocation(line: 991, column: 15, scope: !4758)
!4823 = !DILocation(line: 991, column: 20, scope: !4758)
!4824 = !DILocation(line: 394, column: 2, scope: !4825, inlinedAt: !4771)
!4825 = distinct !DILexicalBlock(scope: !4769, file: !4763, line: 394, column: 2)
!4826 = !{i32 -2145397772}
!4827 = !DILocation(line: 394, column: 2, scope: !4828, inlinedAt: !4771)
!4828 = distinct !DILexicalBlock(scope: !4825, file: !4763, line: 394, column: 2)
!4829 = !DILocation(line: 992, column: 31, scope: !4758)
!4830 = !DILocation(line: 992, column: 35, scope: !4758)
!4831 = !DILocation(line: 992, column: 40, scope: !4758)
!4832 = !DILocation(line: 992, column: 45, scope: !4758)
!4833 = !DILocation(line: 992, column: 2, scope: !4758)
!4834 = !DILocation(line: 993, column: 13, scope: !4758)
!4835 = !DILocation(line: 993, column: 18, scope: !4758)
!4836 = !DILocation(line: 354, column: 2, scope: !4837, inlinedAt: !4767)
!4837 = distinct !DILexicalBlock(scope: !4762, file: !4763, line: 354, column: 2)
!4838 = !{i32 -2145400133}
!4839 = !DILocation(line: 354, column: 2, scope: !4840, inlinedAt: !4767)
!4840 = distinct !DILexicalBlock(scope: !4837, file: !4763, line: 354, column: 2)
!4841 = !DILocation(line: 994, column: 15, scope: !4758)
!4842 = !DILocation(line: 994, column: 2, scope: !4758)
!4843 = !DILocation(line: 994, column: 6, scope: !4758)
!4844 = !DILocation(line: 994, column: 13, scope: !4758)
!4845 = !DILocation(line: 995, column: 1, scope: !4758)
!4846 = distinct !DISubprogram(name: "udc_basic_init", scope: !3, file: !3, line: 1459, type: !4847, scopeLine: 1460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !497)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{null, !356}
!4849 = !DILocalVariable(name: "dev", arg: 1, scope: !4846, file: !3, line: 1459, type: !356)
!4850 = !DILocation(line: 1459, column: 33, scope: !4846)
!4851 = !DILocalVariable(name: "tmp", scope: !4846, file: !3, line: 1461, type: !296)
!4852 = !DILocation(line: 1461, column: 6, scope: !4846)
!4853 = !DILocation(line: 1465, column: 2, scope: !4846)
!4854 = !DILocation(line: 1465, column: 7, scope: !4846)
!4855 = !DILocation(line: 1465, column: 14, scope: !4846)
!4856 = !DILocation(line: 1465, column: 20, scope: !4846)
!4857 = !DILocation(line: 1468, column: 6, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 1468, column: 6)
!4859 = !DILocation(line: 1468, column: 6, scope: !4846)
!4860 = !DILocation(line: 1469, column: 11, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 1468, column: 33)
!4862 = !DILocation(line: 1470, column: 25, scope: !4861)
!4863 = !DILocation(line: 1470, column: 33, scope: !4861)
!4864 = !DILocation(line: 1470, column: 3, scope: !4861)
!4865 = !DILocation(line: 1471, column: 2, scope: !4861)
!4866 = !DILocation(line: 1473, column: 6, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 1473, column: 6)
!4868 = !DILocation(line: 1473, column: 6, scope: !4846)
!4869 = !DILocation(line: 1474, column: 35, scope: !4867)
!4870 = !DILocation(line: 1474, column: 43, scope: !4867)
!4871 = !DILocation(line: 1474, column: 3, scope: !4867)
!4872 = !DILocation(line: 1476, column: 15, scope: !4846)
!4873 = !DILocation(line: 1476, column: 20, scope: !4846)
!4874 = !DILocation(line: 1476, column: 26, scope: !4846)
!4875 = !DILocation(line: 1476, column: 14, scope: !4846)
!4876 = !DILocation(line: 1476, column: 8, scope: !4846)
!4877 = !DILocation(line: 1476, column: 6, scope: !4846)
!4878 = !DILocation(line: 1477, column: 6, scope: !4846)
!4879 = !DILocation(line: 1478, column: 6, scope: !4846)
!4880 = !DILocation(line: 1479, column: 9, scope: !4846)
!4881 = !DILocation(line: 1479, column: 15, scope: !4846)
!4882 = !DILocation(line: 1479, column: 20, scope: !4846)
!4883 = !DILocation(line: 1479, column: 26, scope: !4846)
!4884 = !DILocation(line: 1479, column: 14, scope: !4846)
!4885 = !DILocation(line: 1479, column: 2, scope: !4846)
!4886 = !DILocation(line: 1482, column: 15, scope: !4846)
!4887 = !DILocation(line: 1482, column: 20, scope: !4846)
!4888 = !DILocation(line: 1482, column: 26, scope: !4846)
!4889 = !DILocation(line: 1482, column: 14, scope: !4846)
!4890 = !DILocation(line: 1482, column: 8, scope: !4846)
!4891 = !DILocation(line: 1482, column: 6, scope: !4846)
!4892 = !DILocation(line: 1483, column: 6, scope: !4846)
!4893 = !DILocation(line: 1485, column: 6, scope: !4846)
!4894 = !DILocation(line: 1487, column: 6, scope: !4846)
!4895 = !DILocation(line: 1488, column: 9, scope: !4846)
!4896 = !DILocation(line: 1488, column: 15, scope: !4846)
!4897 = !DILocation(line: 1488, column: 20, scope: !4846)
!4898 = !DILocation(line: 1488, column: 26, scope: !4846)
!4899 = !DILocation(line: 1488, column: 14, scope: !4846)
!4900 = !DILocation(line: 1488, column: 2, scope: !4846)
!4901 = !DILocation(line: 1490, column: 16, scope: !4846)
!4902 = !DILocation(line: 1490, column: 2, scope: !4846)
!4903 = !DILocation(line: 1492, column: 2, scope: !4846)
!4904 = !DILocation(line: 1492, column: 7, scope: !4846)
!4905 = !DILocation(line: 1492, column: 23, scope: !4846)
!4906 = !DILocation(line: 1493, column: 2, scope: !4846)
!4907 = !DILocation(line: 1493, column: 7, scope: !4846)
!4908 = !DILocation(line: 1493, column: 22, scope: !4846)
!4909 = !DILocation(line: 1494, column: 1, scope: !4846)
!4910 = distinct !DISubprogram(name: "timer_pending", scope: !3689, file: !3689, line: 166, type: !4911, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{!197, !4913}
!4913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4914, size: 64)
!4914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3688)
!4915 = !DILocalVariable(name: "timer", arg: 1, scope: !4910, file: !3689, line: 166, type: !4913)
!4916 = !DILocation(line: 166, column: 59, scope: !4910)
!4917 = !DILocation(line: 168, column: 35, scope: !4910)
!4918 = !DILocation(line: 168, column: 42, scope: !4910)
!4919 = !DILocation(line: 168, column: 10, scope: !4910)
!4920 = !DILocation(line: 168, column: 9, scope: !4910)
!4921 = !DILocation(line: 168, column: 2, scope: !4910)
!4922 = distinct !DISubprogram(name: "make_ep_lists", scope: !3, file: !3, line: 1438, type: !4847, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!4923 = !DILocalVariable(name: "dev", arg: 1, scope: !4922, file: !3, line: 1438, type: !356)
!4924 = !DILocation(line: 1438, column: 39, scope: !4922)
!4925 = !DILocation(line: 1441, column: 18, scope: !4922)
!4926 = !DILocation(line: 1441, column: 23, scope: !4922)
!4927 = !DILocation(line: 1441, column: 30, scope: !4922)
!4928 = !DILocation(line: 1441, column: 2, scope: !4922)
!4929 = !DILocation(line: 1442, column: 17, scope: !4922)
!4930 = !DILocation(line: 1442, column: 22, scope: !4922)
!4931 = !DILocation(line: 1442, column: 45, scope: !4922)
!4932 = !DILocation(line: 1442, column: 48, scope: !4922)
!4933 = !DILocation(line: 1443, column: 8, scope: !4922)
!4934 = !DILocation(line: 1443, column: 13, scope: !4922)
!4935 = !DILocation(line: 1443, column: 20, scope: !4922)
!4936 = !DILocation(line: 1442, column: 2, scope: !4922)
!4937 = !DILocation(line: 1444, column: 17, scope: !4922)
!4938 = !DILocation(line: 1444, column: 22, scope: !4922)
!4939 = !DILocation(line: 1444, column: 38, scope: !4922)
!4940 = !DILocation(line: 1444, column: 41, scope: !4922)
!4941 = !DILocation(line: 1445, column: 8, scope: !4922)
!4942 = !DILocation(line: 1445, column: 13, scope: !4922)
!4943 = !DILocation(line: 1445, column: 20, scope: !4922)
!4944 = !DILocation(line: 1444, column: 2, scope: !4922)
!4945 = !DILocation(line: 1446, column: 17, scope: !4922)
!4946 = !DILocation(line: 1446, column: 22, scope: !4922)
!4947 = !DILocation(line: 1446, column: 39, scope: !4922)
!4948 = !DILocation(line: 1446, column: 42, scope: !4922)
!4949 = !DILocation(line: 1447, column: 8, scope: !4922)
!4950 = !DILocation(line: 1447, column: 13, scope: !4922)
!4951 = !DILocation(line: 1447, column: 20, scope: !4922)
!4952 = !DILocation(line: 1446, column: 2, scope: !4922)
!4953 = !DILocation(line: 1450, column: 2, scope: !4922)
!4954 = !DILocation(line: 1450, column: 7, scope: !4922)
!4955 = !DILocation(line: 1450, column: 30, scope: !4922)
!4956 = !DILocation(line: 1450, column: 41, scope: !4922)
!4957 = !DILocation(line: 1451, column: 6, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 1451, column: 6)
!4959 = !DILocation(line: 1451, column: 11, scope: !4958)
!4960 = !DILocation(line: 1451, column: 18, scope: !4958)
!4961 = !DILocation(line: 1451, column: 24, scope: !4958)
!4962 = !DILocation(line: 1451, column: 6, scope: !4922)
!4963 = !DILocation(line: 1452, column: 3, scope: !4958)
!4964 = !DILocation(line: 1452, column: 8, scope: !4958)
!4965 = !DILocation(line: 1452, column: 24, scope: !4958)
!4966 = !DILocation(line: 1452, column: 35, scope: !4958)
!4967 = !DILocation(line: 1453, column: 11, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4958, file: !3, line: 1453, column: 11)
!4969 = !DILocation(line: 1453, column: 16, scope: !4968)
!4970 = !DILocation(line: 1453, column: 23, scope: !4968)
!4971 = !DILocation(line: 1453, column: 29, scope: !4968)
!4972 = !DILocation(line: 1453, column: 11, scope: !4958)
!4973 = !DILocation(line: 1454, column: 37, scope: !4968)
!4974 = !DILocation(line: 1454, column: 3, scope: !4968)
!4975 = !DILocation(line: 1454, column: 8, scope: !4968)
!4976 = !DILocation(line: 1454, column: 24, scope: !4968)
!4977 = !DILocation(line: 1454, column: 35, scope: !4968)
!4978 = !DILocation(line: 1455, column: 2, scope: !4922)
!4979 = !DILocation(line: 1455, column: 7, scope: !4922)
!4980 = !DILocation(line: 1455, column: 24, scope: !4922)
!4981 = !DILocation(line: 1455, column: 35, scope: !4922)
!4982 = !DILocation(line: 1456, column: 1, scope: !4922)
!4983 = distinct !DISubprogram(name: "udc_irq", scope: !3, file: !3, line: 2994, type: !4984, scopeLine: 2995, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !497)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{!4986, !197, !138}
!4986 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !115, line: 17, baseType: !114)
!4987 = !DILocation(line: 392, column: 53, scope: !4769, inlinedAt: !4988)
!4988 = distinct !DILocation(line: 3043, column: 2, scope: !4983)
!4989 = !DILocation(line: 352, column: 51, scope: !4762, inlinedAt: !4990)
!4990 = distinct !DILocation(line: 3002, column: 2, scope: !4983)
!4991 = !DILocalVariable(name: "irq", arg: 1, scope: !4983, file: !3, line: 2994, type: !197)
!4992 = !DILocation(line: 2994, column: 25, scope: !4983)
!4993 = !DILocalVariable(name: "pdev", arg: 2, scope: !4983, file: !3, line: 2994, type: !138)
!4994 = !DILocation(line: 2994, column: 36, scope: !4983)
!4995 = !DILocalVariable(name: "dev", scope: !4983, file: !3, line: 2996, type: !356)
!4996 = !DILocation(line: 2996, column: 14, scope: !4983)
!4997 = !DILocation(line: 2996, column: 20, scope: !4983)
!4998 = !DILocalVariable(name: "reg", scope: !4983, file: !3, line: 2997, type: !296)
!4999 = !DILocation(line: 2997, column: 6, scope: !4983)
!5000 = !DILocalVariable(name: "i", scope: !4983, file: !3, line: 2998, type: !1084)
!5001 = !DILocation(line: 2998, column: 6, scope: !4983)
!5002 = !DILocalVariable(name: "ep_irq", scope: !4983, file: !3, line: 2999, type: !296)
!5003 = !DILocation(line: 2999, column: 6, scope: !4983)
!5004 = !DILocalVariable(name: "ret_val", scope: !4983, file: !3, line: 3000, type: !4986)
!5005 = !DILocation(line: 3000, column: 14, scope: !4983)
!5006 = !DILocation(line: 3002, column: 13, scope: !4983)
!5007 = !DILocation(line: 3002, column: 18, scope: !4983)
!5008 = !DILocation(line: 354, column: 2, scope: !4837, inlinedAt: !4990)
!5009 = !DILocation(line: 354, column: 2, scope: !4840, inlinedAt: !4990)
!5010 = !DILocation(line: 3005, column: 15, scope: !4983)
!5011 = !DILocation(line: 3005, column: 20, scope: !4983)
!5012 = !DILocation(line: 3005, column: 26, scope: !4983)
!5013 = !DILocation(line: 3005, column: 14, scope: !4983)
!5014 = !DILocation(line: 3005, column: 8, scope: !4983)
!5015 = !DILocation(line: 3005, column: 6, scope: !4983)
!5016 = !DILocation(line: 3006, column: 6, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 3006, column: 6)
!5018 = !DILocation(line: 3006, column: 6, scope: !4983)
!5019 = !DILocation(line: 3007, column: 7, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 3007, column: 7)
!5021 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 3006, column: 11)
!5022 = !DILocation(line: 3007, column: 11, scope: !5020)
!5023 = !DILocation(line: 3007, column: 7, scope: !5021)
!5024 = !DILocation(line: 3008, column: 35, scope: !5020)
!5025 = !DILocation(line: 3008, column: 15, scope: !5020)
!5026 = !DILocation(line: 3008, column: 12, scope: !5020)
!5027 = !DILocation(line: 3008, column: 4, scope: !5020)
!5028 = !DILocation(line: 3009, column: 7, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 3009, column: 7)
!5030 = !DILocation(line: 3009, column: 11, scope: !5029)
!5031 = !DILocation(line: 3009, column: 7, scope: !5021)
!5032 = !DILocation(line: 3010, column: 34, scope: !5029)
!5033 = !DILocation(line: 3010, column: 15, scope: !5029)
!5034 = !DILocation(line: 3010, column: 12, scope: !5029)
!5035 = !DILocation(line: 3010, column: 4, scope: !5029)
!5036 = !DILocation(line: 3016, column: 10, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 3016, column: 3)
!5038 = !DILocation(line: 3016, column: 8, scope: !5037)
!5039 = !DILocation(line: 3016, column: 15, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 3016, column: 3)
!5041 = !DILocation(line: 3016, column: 17, scope: !5040)
!5042 = !DILocation(line: 3016, column: 3, scope: !5037)
!5043 = !DILocation(line: 3017, column: 18, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 3016, column: 36)
!5045 = !DILocation(line: 3017, column: 15, scope: !5044)
!5046 = !DILocation(line: 3017, column: 11, scope: !5044)
!5047 = !DILocation(line: 3018, column: 10, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 3018, column: 8)
!5049 = !DILocation(line: 3018, column: 16, scope: !5048)
!5050 = !DILocation(line: 3018, column: 14, scope: !5048)
!5051 = !DILocation(line: 3018, column: 24, scope: !5048)
!5052 = !DILocation(line: 3018, column: 27, scope: !5048)
!5053 = !DILocation(line: 3018, column: 29, scope: !5048)
!5054 = !DILocation(line: 3018, column: 8, scope: !5044)
!5055 = !DILocation(line: 3019, column: 5, scope: !5048)
!5056 = !DILocation(line: 3022, column: 11, scope: !5044)
!5057 = !DILocation(line: 3022, column: 20, scope: !5044)
!5058 = !DILocation(line: 3022, column: 25, scope: !5044)
!5059 = !DILocation(line: 3022, column: 31, scope: !5044)
!5060 = !DILocation(line: 3022, column: 19, scope: !5044)
!5061 = !DILocation(line: 3022, column: 4, scope: !5044)
!5062 = !DILocation(line: 3025, column: 8, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 3025, column: 8)
!5064 = !DILocation(line: 3025, column: 10, scope: !5063)
!5065 = !DILocation(line: 3025, column: 8, scope: !5044)
!5066 = !DILocation(line: 3026, column: 33, scope: !5063)
!5067 = !DILocation(line: 3026, column: 38, scope: !5063)
!5068 = !DILocation(line: 3026, column: 16, scope: !5063)
!5069 = !DILocation(line: 3026, column: 13, scope: !5063)
!5070 = !DILocation(line: 3026, column: 5, scope: !5063)
!5071 = !DILocation(line: 3028, column: 32, scope: !5063)
!5072 = !DILocation(line: 3028, column: 37, scope: !5063)
!5073 = !DILocation(line: 3028, column: 16, scope: !5063)
!5074 = !DILocation(line: 3028, column: 13, scope: !5063)
!5075 = !DILocation(line: 3029, column: 3, scope: !5044)
!5076 = !DILocation(line: 3016, column: 32, scope: !5040)
!5077 = !DILocation(line: 3016, column: 3, scope: !5040)
!5078 = distinct !{!5078, !5042, !5079}
!5079 = !DILocation(line: 3029, column: 3, scope: !5037)
!5080 = !DILocation(line: 3031, column: 2, scope: !5021)
!5081 = !DILocation(line: 3035, column: 15, scope: !4983)
!5082 = !DILocation(line: 3035, column: 20, scope: !4983)
!5083 = !DILocation(line: 3035, column: 26, scope: !4983)
!5084 = !DILocation(line: 3035, column: 14, scope: !4983)
!5085 = !DILocation(line: 3035, column: 8, scope: !4983)
!5086 = !DILocation(line: 3035, column: 6, scope: !4983)
!5087 = !DILocation(line: 3036, column: 6, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 3036, column: 6)
!5089 = !DILocation(line: 3036, column: 6, scope: !4983)
!5090 = !DILocation(line: 3038, column: 10, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 3036, column: 11)
!5092 = !DILocation(line: 3038, column: 16, scope: !5091)
!5093 = !DILocation(line: 3038, column: 21, scope: !5091)
!5094 = !DILocation(line: 3038, column: 27, scope: !5091)
!5095 = !DILocation(line: 3038, column: 15, scope: !5091)
!5096 = !DILocation(line: 3038, column: 3, scope: !5091)
!5097 = !DILocation(line: 3039, column: 26, scope: !5091)
!5098 = !DILocation(line: 3039, column: 31, scope: !5091)
!5099 = !DILocation(line: 3039, column: 14, scope: !5091)
!5100 = !DILocation(line: 3039, column: 11, scope: !5091)
!5101 = !DILocation(line: 3040, column: 2, scope: !5091)
!5102 = !DILocation(line: 3043, column: 15, scope: !4983)
!5103 = !DILocation(line: 3043, column: 20, scope: !4983)
!5104 = !DILocation(line: 394, column: 2, scope: !4825, inlinedAt: !4988)
!5105 = !DILocation(line: 394, column: 2, scope: !4828, inlinedAt: !4988)
!5106 = !DILocation(line: 3044, column: 9, scope: !4983)
!5107 = !DILocation(line: 3044, column: 2, scope: !4983)
!5108 = distinct !DISubprogram(name: "udc_control_out_isr", scope: !3, file: !3, line: 2448, type: !5109, scopeLine: 2451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{!4986, !356}
!5111 = !DILocation(line: 352, column: 51, scope: !4762, inlinedAt: !5112)
!5112 = distinct !DILocation(line: 2568, column: 3, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 2481, column: 34)
!5114 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 2481, column: 6)
!5115 = !DILocation(line: 392, column: 53, scope: !4769, inlinedAt: !5116)
!5116 = distinct !DILocation(line: 2565, column: 3, scope: !5113)
!5117 = !DILocalVariable(name: "dev", arg: 1, scope: !5108, file: !3, line: 2448, type: !356)
!5118 = !DILocation(line: 2448, column: 52, scope: !5108)
!5119 = !DILocalVariable(name: "ret_val", scope: !5108, file: !3, line: 2452, type: !4986)
!5120 = !DILocation(line: 2452, column: 14, scope: !5108)
!5121 = !DILocalVariable(name: "tmp", scope: !5108, file: !3, line: 2453, type: !296)
!5122 = !DILocation(line: 2453, column: 6, scope: !5108)
!5123 = !DILocalVariable(name: "setup_supported", scope: !5108, file: !3, line: 2454, type: !197)
!5124 = !DILocation(line: 2454, column: 6, scope: !5108)
!5125 = !DILocalVariable(name: "count", scope: !5108, file: !3, line: 2455, type: !296)
!5126 = !DILocation(line: 2455, column: 6, scope: !5108)
!5127 = !DILocalVariable(name: "set", scope: !5108, file: !3, line: 2456, type: !197)
!5128 = !DILocation(line: 2456, column: 6, scope: !5108)
!5129 = !DILocalVariable(name: "ep", scope: !5108, file: !3, line: 2457, type: !319)
!5130 = !DILocation(line: 2457, column: 17, scope: !5108)
!5131 = !DILocalVariable(name: "ep_tmp", scope: !5108, file: !3, line: 2458, type: !319)
!5132 = !DILocation(line: 2458, column: 17, scope: !5108)
!5133 = !DILocation(line: 2460, column: 8, scope: !5108)
!5134 = !DILocation(line: 2460, column: 13, scope: !5108)
!5135 = !DILocation(line: 2460, column: 5, scope: !5108)
!5136 = !DILocation(line: 2463, column: 38, scope: !5108)
!5137 = !DILocation(line: 2463, column: 43, scope: !5108)
!5138 = !DILocation(line: 2463, column: 49, scope: !5108)
!5139 = !DILocation(line: 2463, column: 37, scope: !5108)
!5140 = !DILocation(line: 2463, column: 2, scope: !5108)
!5141 = !DILocation(line: 2465, column: 15, scope: !5108)
!5142 = !DILocation(line: 2465, column: 20, scope: !5108)
!5143 = !DILocation(line: 2465, column: 38, scope: !5108)
!5144 = !DILocation(line: 2465, column: 44, scope: !5108)
!5145 = !DILocation(line: 2465, column: 14, scope: !5108)
!5146 = !DILocation(line: 2465, column: 8, scope: !5108)
!5147 = !DILocation(line: 2465, column: 6, scope: !5108)
!5148 = !DILocation(line: 2467, column: 6, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 2467, column: 6)
!5150 = !DILocation(line: 2467, column: 10, scope: !5149)
!5151 = !DILocation(line: 2467, column: 6, scope: !5108)
!5152 = !DILocation(line: 2468, column: 3, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5149, file: !3, line: 2467, column: 36)
!5154 = !DILocation(line: 2468, column: 3, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 2468, column: 3)
!5156 = !DILocation(line: 2470, column: 5, scope: !5153)
!5157 = !DILocation(line: 2470, column: 10, scope: !5153)
!5158 = !DILocation(line: 2470, column: 28, scope: !5153)
!5159 = !DILocation(line: 2470, column: 34, scope: !5153)
!5160 = !DILocation(line: 2470, column: 4, scope: !5153)
!5161 = !DILocation(line: 2469, column: 3, scope: !5153)
!5162 = !DILocation(line: 2471, column: 3, scope: !5153)
!5163 = !DILocation(line: 2471, column: 7, scope: !5153)
!5164 = !DILocation(line: 2471, column: 20, scope: !5153)
!5165 = !DILocation(line: 2472, column: 11, scope: !5153)
!5166 = !DILocation(line: 2473, column: 3, scope: !5153)
!5167 = !DILocation(line: 2477, column: 8, scope: !5108)
!5168 = !DILocation(line: 2477, column: 6, scope: !5108)
!5169 = !DILocation(line: 2478, column: 2, scope: !5108)
!5170 = !DILocation(line: 2478, column: 2, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 2478, column: 2)
!5172 = !DILocation(line: 2481, column: 6, scope: !5114)
!5173 = !DILocation(line: 2481, column: 10, scope: !5114)
!5174 = !DILocation(line: 2481, column: 6, scope: !5108)
!5175 = !DILocation(line: 2482, column: 11, scope: !5113)
!5176 = !DILocation(line: 2484, column: 3, scope: !5113)
!5177 = !DILocation(line: 2484, column: 7, scope: !5113)
!5178 = !DILocation(line: 2484, column: 12, scope: !5113)
!5179 = !DILocation(line: 2484, column: 24, scope: !5113)
!5180 = !DILocation(line: 2485, column: 3, scope: !5113)
!5181 = !DILocation(line: 2485, column: 8, scope: !5113)
!5182 = !DILocation(line: 2485, column: 30, scope: !5113)
!5183 = !DILocation(line: 2488, column: 16, scope: !5113)
!5184 = !DILocation(line: 2488, column: 21, scope: !5113)
!5185 = !DILocation(line: 2488, column: 38, scope: !5113)
!5186 = !DILocation(line: 2488, column: 44, scope: !5113)
!5187 = !DILocation(line: 2488, column: 15, scope: !5113)
!5188 = !DILocation(line: 2488, column: 9, scope: !5113)
!5189 = !DILocation(line: 2488, column: 7, scope: !5113)
!5190 = !DILocation(line: 2489, column: 7, scope: !5113)
!5191 = !DILocation(line: 2490, column: 10, scope: !5113)
!5192 = !DILocation(line: 2490, column: 16, scope: !5113)
!5193 = !DILocation(line: 2490, column: 21, scope: !5113)
!5194 = !DILocation(line: 2490, column: 38, scope: !5113)
!5195 = !DILocation(line: 2490, column: 44, scope: !5113)
!5196 = !DILocation(line: 2490, column: 15, scope: !5113)
!5197 = !DILocation(line: 2490, column: 3, scope: !5113)
!5198 = !DILocation(line: 2491, column: 3, scope: !5113)
!5199 = !DILocation(line: 2491, column: 8, scope: !5113)
!5200 = !DILocation(line: 2491, column: 25, scope: !5113)
!5201 = !DILocation(line: 2491, column: 32, scope: !5113)
!5202 = !DILocation(line: 2493, column: 7, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 2493, column: 7)
!5204 = !DILocation(line: 2493, column: 7, scope: !5113)
!5205 = !DILocation(line: 2497, column: 6, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 2493, column: 16)
!5207 = !DILocation(line: 2497, column: 11, scope: !5206)
!5208 = !DILocation(line: 2497, column: 29, scope: !5206)
!5209 = !DILocation(line: 2497, column: 35, scope: !5206)
!5210 = !DILocation(line: 2497, column: 5, scope: !5206)
!5211 = !DILocation(line: 2496, column: 4, scope: !5206)
!5212 = !DILocation(line: 2500, column: 5, scope: !5206)
!5213 = !DILocation(line: 2500, column: 10, scope: !5206)
!5214 = !DILocation(line: 2500, column: 28, scope: !5206)
!5215 = !DILocation(line: 2500, column: 36, scope: !5206)
!5216 = !DILocation(line: 2499, column: 23, scope: !5206)
!5217 = !DILocation(line: 2502, column: 5, scope: !5206)
!5218 = !DILocation(line: 2502, column: 10, scope: !5206)
!5219 = !DILocation(line: 2502, column: 28, scope: !5206)
!5220 = !DILocation(line: 2502, column: 36, scope: !5206)
!5221 = !DILocation(line: 2501, column: 23, scope: !5206)
!5222 = !DILocation(line: 2504, column: 4, scope: !5206)
!5223 = !DILocation(line: 2504, column: 9, scope: !5206)
!5224 = !DILocation(line: 2504, column: 27, scope: !5206)
!5225 = !DILocation(line: 2504, column: 35, scope: !5206)
!5226 = !DILocation(line: 2504, column: 42, scope: !5206)
!5227 = !DILocation(line: 2506, column: 3, scope: !5206)
!5228 = !DILocation(line: 2508, column: 27, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 2506, column: 10)
!5230 = !DILocation(line: 2508, column: 4, scope: !5229)
!5231 = !DILocation(line: 2512, column: 27, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 2512, column: 7)
!5233 = !DILocation(line: 2512, column: 8, scope: !5232)
!5234 = !DILocation(line: 2512, column: 40, scope: !5232)
!5235 = !DILocation(line: 2512, column: 54, scope: !5232)
!5236 = !DILocation(line: 2512, column: 7, scope: !5113)
!5237 = !DILocation(line: 2513, column: 23, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 2512, column: 60)
!5239 = !DILocation(line: 2513, column: 28, scope: !5238)
!5240 = !DILocation(line: 2513, column: 45, scope: !5238)
!5241 = !DILocation(line: 2513, column: 4, scope: !5238)
!5242 = !DILocation(line: 2513, column: 9, scope: !5238)
!5243 = !DILocation(line: 2513, column: 16, scope: !5238)
!5244 = !DILocation(line: 2513, column: 20, scope: !5238)
!5245 = !DILocation(line: 2515, column: 20, scope: !5238)
!5246 = !DILocation(line: 2515, column: 4, scope: !5238)
!5247 = !DILocation(line: 2516, column: 8, scope: !5238)
!5248 = !DILocation(line: 2517, column: 3, scope: !5238)
!5249 = !DILocation(line: 2518, column: 23, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 2517, column: 10)
!5251 = !DILocation(line: 2518, column: 28, scope: !5250)
!5252 = !DILocation(line: 2518, column: 46, scope: !5250)
!5253 = !DILocation(line: 2518, column: 4, scope: !5250)
!5254 = !DILocation(line: 2518, column: 9, scope: !5250)
!5255 = !DILocation(line: 2518, column: 16, scope: !5250)
!5256 = !DILocation(line: 2518, column: 20, scope: !5250)
!5257 = !DILocation(line: 2523, column: 8, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5250, file: !3, line: 2523, column: 8)
!5259 = !DILocation(line: 2523, column: 12, scope: !5258)
!5260 = !DILocation(line: 2523, column: 8, scope: !5250)
!5261 = !DILocation(line: 2525, column: 12, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 2523, column: 27)
!5263 = !DILocation(line: 2525, column: 16, scope: !5262)
!5264 = !DILocation(line: 2525, column: 31, scope: !5262)
!5265 = !DILocation(line: 2526, column: 7, scope: !5262)
!5266 = !DILocation(line: 2526, column: 12, scope: !5262)
!5267 = !DILocation(line: 2526, column: 30, scope: !5262)
!5268 = !DILocation(line: 2526, column: 36, scope: !5262)
!5269 = !DILocation(line: 2526, column: 6, scope: !5262)
!5270 = !DILocation(line: 2525, column: 5, scope: !5262)
!5271 = !DILocation(line: 2527, column: 5, scope: !5262)
!5272 = !DILocation(line: 2527, column: 9, scope: !5262)
!5273 = !DILocation(line: 2527, column: 22, scope: !5262)
!5274 = !DILocation(line: 2528, column: 4, scope: !5262)
!5275 = !DILocation(line: 2530, column: 8, scope: !5250)
!5276 = !DILocation(line: 2531, column: 4, scope: !5250)
!5277 = !DILocation(line: 2531, column: 9, scope: !5250)
!5278 = !DILocation(line: 2531, column: 27, scope: !5250)
!5279 = !DILocation(line: 2531, column: 34, scope: !5250)
!5280 = !DILocation(line: 2536, column: 12, scope: !5250)
!5281 = !DILocation(line: 2537, column: 9, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5250, file: !3, line: 2537, column: 8)
!5283 = !DILocation(line: 2537, column: 8, scope: !5250)
!5284 = !DILocation(line: 2538, column: 25, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 2537, column: 36)
!5286 = !DILocation(line: 2538, column: 33, scope: !5285)
!5287 = !DILocation(line: 2538, column: 23, scope: !5285)
!5288 = !DILocation(line: 2540, column: 10, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 2540, column: 9)
!5290 = !DILocation(line: 2540, column: 9, scope: !5285)
!5291 = !DILocation(line: 2541, column: 6, scope: !5289)
!5292 = !DILocation(line: 2542, column: 4, scope: !5285)
!5293 = !DILocation(line: 2551, column: 7, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 2551, column: 7)
!5295 = !DILocation(line: 2551, column: 26, scope: !5294)
!5296 = !DILocation(line: 2552, column: 5, scope: !5294)
!5297 = !DILocation(line: 2552, column: 8, scope: !5294)
!5298 = !DILocation(line: 2552, column: 27, scope: !5294)
!5299 = !DILocation(line: 2551, column: 7, scope: !5113)
!5300 = !DILocation(line: 2558, column: 14, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5294, file: !3, line: 2552, column: 49)
!5302 = !DILocation(line: 2558, column: 19, scope: !5301)
!5303 = !DILocation(line: 2558, column: 11, scope: !5301)
!5304 = !DILocation(line: 2559, column: 18, scope: !5301)
!5305 = !DILocation(line: 2559, column: 26, scope: !5301)
!5306 = !DILocation(line: 2559, column: 4, scope: !5301)
!5307 = !DILocation(line: 2560, column: 14, scope: !5301)
!5308 = !DILocation(line: 2560, column: 19, scope: !5301)
!5309 = !DILocation(line: 2560, column: 11, scope: !5301)
!5310 = !DILocation(line: 2561, column: 18, scope: !5301)
!5311 = !DILocation(line: 2561, column: 26, scope: !5301)
!5312 = !DILocation(line: 2561, column: 4, scope: !5301)
!5313 = !DILocation(line: 2562, column: 3, scope: !5301)
!5314 = !DILocation(line: 2565, column: 16, scope: !5113)
!5315 = !DILocation(line: 2565, column: 21, scope: !5113)
!5316 = !DILocation(line: 394, column: 2, scope: !4825, inlinedAt: !5116)
!5317 = !DILocation(line: 394, column: 2, scope: !4828, inlinedAt: !5116)
!5318 = !DILocation(line: 2566, column: 21, scope: !5113)
!5319 = !DILocation(line: 2566, column: 26, scope: !5113)
!5320 = !DILocation(line: 2566, column: 34, scope: !5113)
!5321 = !DILocation(line: 2566, column: 41, scope: !5113)
!5322 = !DILocation(line: 2566, column: 46, scope: !5113)
!5323 = !DILocation(line: 2566, column: 19, scope: !5113)
!5324 = !DILocation(line: 2568, column: 14, scope: !5113)
!5325 = !DILocation(line: 2568, column: 19, scope: !5113)
!5326 = !DILocation(line: 354, column: 2, scope: !4837, inlinedAt: !5112)
!5327 = !DILocation(line: 354, column: 2, scope: !4840, inlinedAt: !5112)
!5328 = !DILocation(line: 2570, column: 16, scope: !5113)
!5329 = !DILocation(line: 2570, column: 21, scope: !5113)
!5330 = !DILocation(line: 2570, column: 38, scope: !5113)
!5331 = !DILocation(line: 2570, column: 44, scope: !5113)
!5332 = !DILocation(line: 2570, column: 15, scope: !5113)
!5333 = !DILocation(line: 2570, column: 9, scope: !5113)
!5334 = !DILocation(line: 2570, column: 7, scope: !5113)
!5335 = !DILocation(line: 2572, column: 7, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 2572, column: 7)
!5337 = !DILocation(line: 2572, column: 23, scope: !5336)
!5338 = !DILocation(line: 2572, column: 28, scope: !5336)
!5339 = !DILocation(line: 2572, column: 31, scope: !5336)
!5340 = !DILocation(line: 2572, column: 47, scope: !5336)
!5341 = !DILocation(line: 2572, column: 7, scope: !5113)
!5342 = !DILocation(line: 2575, column: 8, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 2573, column: 26)
!5344 = !DILocation(line: 2576, column: 11, scope: !5343)
!5345 = !DILocation(line: 2576, column: 17, scope: !5343)
!5346 = !DILocation(line: 2576, column: 22, scope: !5343)
!5347 = !DILocation(line: 2576, column: 39, scope: !5343)
!5348 = !DILocation(line: 2576, column: 45, scope: !5343)
!5349 = !DILocation(line: 2576, column: 16, scope: !5343)
!5350 = !DILocation(line: 2576, column: 4, scope: !5343)
!5351 = !DILocation(line: 2577, column: 4, scope: !5343)
!5352 = !DILocation(line: 2577, column: 9, scope: !5343)
!5353 = !DILocation(line: 2577, column: 26, scope: !5343)
!5354 = !DILocation(line: 2577, column: 33, scope: !5343)
!5355 = !DILocation(line: 2578, column: 20, scope: !5343)
!5356 = !DILocation(line: 2578, column: 25, scope: !5343)
!5357 = !DILocation(line: 2578, column: 4, scope: !5343)
!5358 = !DILocation(line: 2581, column: 3, scope: !5343)
!5359 = !DILocation(line: 2581, column: 14, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 2581, column: 14)
!5361 = !DILocation(line: 2581, column: 30, scope: !5360)
!5362 = !DILocation(line: 2581, column: 14, scope: !5336)
!5363 = !DILocation(line: 2582, column: 8, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5360, file: !3, line: 2581, column: 35)
!5365 = !DILocation(line: 2583, column: 11, scope: !5364)
!5366 = !DILocation(line: 2583, column: 17, scope: !5364)
!5367 = !DILocation(line: 2583, column: 22, scope: !5364)
!5368 = !DILocation(line: 2583, column: 39, scope: !5364)
!5369 = !DILocation(line: 2583, column: 45, scope: !5364)
!5370 = !DILocation(line: 2583, column: 16, scope: !5364)
!5371 = !DILocation(line: 2583, column: 4, scope: !5364)
!5372 = !DILocation(line: 2584, column: 3, scope: !5364)
!5373 = !DILocation(line: 2585, column: 4, scope: !5360)
!5374 = !DILocation(line: 2585, column: 9, scope: !5360)
!5375 = !DILocation(line: 2585, column: 31, scope: !5360)
!5376 = !DILocation(line: 2589, column: 8, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 2589, column: 7)
!5378 = !DILocation(line: 2589, column: 7, scope: !5113)
!5379 = !DILocation(line: 2590, column: 17, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 2589, column: 13)
!5381 = !DILocation(line: 2590, column: 22, scope: !5380)
!5382 = !DILocation(line: 2590, column: 40, scope: !5380)
!5383 = !DILocation(line: 2590, column: 46, scope: !5380)
!5384 = !DILocation(line: 2590, column: 16, scope: !5380)
!5385 = !DILocation(line: 2590, column: 10, scope: !5380)
!5386 = !DILocation(line: 2590, column: 8, scope: !5380)
!5387 = !DILocation(line: 2591, column: 8, scope: !5380)
!5388 = !DILocation(line: 2592, column: 11, scope: !5380)
!5389 = !DILocation(line: 2592, column: 17, scope: !5380)
!5390 = !DILocation(line: 2592, column: 22, scope: !5380)
!5391 = !DILocation(line: 2592, column: 40, scope: !5380)
!5392 = !DILocation(line: 2592, column: 46, scope: !5380)
!5393 = !DILocation(line: 2592, column: 16, scope: !5380)
!5394 = !DILocation(line: 2592, column: 4, scope: !5380)
!5395 = !DILocation(line: 2593, column: 4, scope: !5380)
!5396 = !DILocation(line: 2593, column: 9, scope: !5380)
!5397 = !DILocation(line: 2593, column: 27, scope: !5380)
!5398 = !DILocation(line: 2593, column: 34, scope: !5380)
!5399 = !DILocation(line: 2594, column: 20, scope: !5380)
!5400 = !DILocation(line: 2594, column: 25, scope: !5380)
!5401 = !DILocation(line: 2594, column: 4, scope: !5380)
!5402 = !DILocation(line: 2595, column: 3, scope: !5380)
!5403 = !DILocation(line: 2597, column: 8, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 2597, column: 7)
!5405 = !DILocation(line: 2597, column: 7, scope: !5113)
!5406 = !DILocation(line: 2600, column: 6, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 2597, column: 17)
!5408 = !DILocation(line: 2600, column: 11, scope: !5407)
!5409 = !DILocation(line: 2600, column: 29, scope: !5407)
!5410 = !DILocation(line: 2600, column: 35, scope: !5407)
!5411 = !DILocation(line: 2600, column: 5, scope: !5407)
!5412 = !DILocation(line: 2599, column: 4, scope: !5407)
!5413 = !DILocation(line: 2601, column: 3, scope: !5407)
!5414 = !DILocation(line: 2604, column: 2, scope: !5113)
!5415 = !DILocation(line: 2604, column: 13, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 2604, column: 13)
!5417 = !DILocation(line: 2604, column: 17, scope: !5416)
!5418 = !DILocation(line: 2604, column: 13, scope: !5114)
!5419 = !DILocation(line: 2606, column: 32, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 2604, column: 40)
!5421 = !DILocation(line: 2606, column: 37, scope: !5420)
!5422 = !DILocation(line: 2606, column: 55, scope: !5420)
!5423 = !DILocation(line: 2606, column: 61, scope: !5420)
!5424 = !DILocation(line: 2606, column: 31, scope: !5420)
!5425 = !DILocation(line: 2606, column: 3, scope: !5420)
!5426 = !DILocation(line: 2609, column: 7, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5420, file: !3, line: 2609, column: 7)
!5428 = !DILocation(line: 2609, column: 7, scope: !5420)
!5429 = !DILocation(line: 2611, column: 20, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 2611, column: 8)
!5431 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 2609, column: 16)
!5432 = !DILocation(line: 2611, column: 25, scope: !5430)
!5433 = !DILocation(line: 2611, column: 43, scope: !5430)
!5434 = !DILocation(line: 2611, column: 8, scope: !5430)
!5435 = !DILocation(line: 2611, column: 8, scope: !5431)
!5436 = !DILocation(line: 2612, column: 5, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 2611, column: 51)
!5438 = !DILocation(line: 2612, column: 5, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 2612, column: 5)
!5440 = !DILocation(line: 2616, column: 6, scope: !5437)
!5441 = !DILocation(line: 2615, column: 5, scope: !5437)
!5442 = !DILocation(line: 2615, column: 10, scope: !5437)
!5443 = !DILocation(line: 2615, column: 28, scope: !5437)
!5444 = !DILocation(line: 2615, column: 32, scope: !5437)
!5445 = !DILocation(line: 2615, column: 39, scope: !5437)
!5446 = !DILocation(line: 2621, column: 21, scope: !5437)
!5447 = !DILocation(line: 2621, column: 5, scope: !5437)
!5448 = !DILocation(line: 2622, column: 13, scope: !5437)
!5449 = !DILocation(line: 2624, column: 4, scope: !5437)
!5450 = !DILocation(line: 2626, column: 33, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 2624, column: 11)
!5452 = !DILocation(line: 2626, column: 16, scope: !5451)
!5453 = !DILocation(line: 2626, column: 13, scope: !5451)
!5454 = !DILocation(line: 2628, column: 12, scope: !5451)
!5455 = !DILocation(line: 2628, column: 17, scope: !5451)
!5456 = !DILocation(line: 2628, column: 35, scope: !5451)
!5457 = !DILocation(line: 2629, column: 7, scope: !5451)
!5458 = !DILocation(line: 2629, column: 12, scope: !5451)
!5459 = !DILocation(line: 2629, column: 30, scope: !5451)
!5460 = !DILocation(line: 2629, column: 36, scope: !5451)
!5461 = !DILocation(line: 2629, column: 6, scope: !5451)
!5462 = !DILocation(line: 2628, column: 5, scope: !5451)
!5463 = !DILocation(line: 2631, column: 21, scope: !5451)
!5464 = !DILocation(line: 2631, column: 5, scope: !5451)
!5465 = !DILocation(line: 2633, column: 3, scope: !5431)
!5466 = !DILocation(line: 2636, column: 19, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 2633, column: 10)
!5468 = !DILocation(line: 2636, column: 24, scope: !5467)
!5469 = !DILocation(line: 2636, column: 42, scope: !5467)
!5470 = !DILocation(line: 2636, column: 48, scope: !5467)
!5471 = !DILocation(line: 2636, column: 18, scope: !5467)
!5472 = !DILocation(line: 2636, column: 12, scope: !5467)
!5473 = !DILocation(line: 2636, column: 10, scope: !5467)
!5474 = !DILocation(line: 2637, column: 12, scope: !5467)
!5475 = !DILocation(line: 2637, column: 10, scope: !5467)
!5476 = !DILocation(line: 2639, column: 10, scope: !5467)
!5477 = !DILocation(line: 2642, column: 8, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 2642, column: 8)
!5479 = !DILocation(line: 2642, column: 14, scope: !5478)
!5480 = !DILocation(line: 2642, column: 8, scope: !5467)
!5481 = !DILocation(line: 2643, column: 33, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 2642, column: 20)
!5483 = !DILocation(line: 2643, column: 16, scope: !5482)
!5484 = !DILocation(line: 2643, column: 13, scope: !5482)
!5485 = !DILocation(line: 2644, column: 4, scope: !5482)
!5486 = !DILocation(line: 2646, column: 12, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 2644, column: 11)
!5488 = !DILocation(line: 2646, column: 17, scope: !5487)
!5489 = !DILocation(line: 2646, column: 35, scope: !5487)
!5490 = !DILocation(line: 2646, column: 41, scope: !5487)
!5491 = !DILocation(line: 2646, column: 11, scope: !5487)
!5492 = !DILocation(line: 2646, column: 5, scope: !5487)
!5493 = !DILocation(line: 2647, column: 13, scope: !5487)
!5494 = !DILocation(line: 2650, column: 2, scope: !5420)
!5495 = !DILocation(line: 2653, column: 6, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 2653, column: 6)
!5497 = !DILocation(line: 2653, column: 6, scope: !5108)
!5498 = !DILocation(line: 2655, column: 14, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 2655, column: 7)
!5500 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 2653, column: 20)
!5501 = !DILocation(line: 2655, column: 19, scope: !5499)
!5502 = !DILocation(line: 2655, column: 25, scope: !5499)
!5503 = !DILocation(line: 2655, column: 13, scope: !5499)
!5504 = !DILocation(line: 2655, column: 7, scope: !5499)
!5505 = !DILocation(line: 2655, column: 30, scope: !5499)
!5506 = !DILocation(line: 2655, column: 7, scope: !5500)
!5507 = !DILocation(line: 2656, column: 27, scope: !5499)
!5508 = !DILocation(line: 2656, column: 4, scope: !5499)
!5509 = !DILocation(line: 2657, column: 2, scope: !5500)
!5510 = !DILabel(scope: !5108, name: "finished", file: !3, line: 2659)
!5511 = !DILocation(line: 2659, column: 1, scope: !5108)
!5512 = !DILocation(line: 2660, column: 9, scope: !5108)
!5513 = !DILocation(line: 2660, column: 2, scope: !5108)
!5514 = distinct !DISubprogram(name: "udc_control_in_isr", scope: !3, file: !3, line: 2664, type: !5109, scopeLine: 2665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!5515 = !DILocalVariable(name: "dev", arg: 1, scope: !5514, file: !3, line: 2664, type: !356)
!5516 = !DILocation(line: 2664, column: 51, scope: !5514)
!5517 = !DILocalVariable(name: "ret_val", scope: !5514, file: !3, line: 2666, type: !4986)
!5518 = !DILocation(line: 2666, column: 14, scope: !5514)
!5519 = !DILocalVariable(name: "tmp", scope: !5514, file: !3, line: 2667, type: !296)
!5520 = !DILocation(line: 2667, column: 6, scope: !5514)
!5521 = !DILocalVariable(name: "ep", scope: !5514, file: !3, line: 2668, type: !319)
!5522 = !DILocation(line: 2668, column: 17, scope: !5514)
!5523 = !DILocalVariable(name: "req", scope: !5514, file: !3, line: 2669, type: !139)
!5524 = !DILocation(line: 2669, column: 22, scope: !5514)
!5525 = !DILocalVariable(name: "len", scope: !5514, file: !3, line: 2670, type: !7)
!5526 = !DILocation(line: 2670, column: 11, scope: !5514)
!5527 = !DILocation(line: 2672, column: 8, scope: !5514)
!5528 = !DILocation(line: 2672, column: 13, scope: !5514)
!5529 = !DILocation(line: 2672, column: 5, scope: !5514)
!5530 = !DILocation(line: 2675, column: 37, scope: !5514)
!5531 = !DILocation(line: 2675, column: 42, scope: !5514)
!5532 = !DILocation(line: 2675, column: 48, scope: !5514)
!5533 = !DILocation(line: 2675, column: 36, scope: !5514)
!5534 = !DILocation(line: 2675, column: 2, scope: !5514)
!5535 = !DILocation(line: 2677, column: 15, scope: !5514)
!5536 = !DILocation(line: 2677, column: 20, scope: !5514)
!5537 = !DILocation(line: 2677, column: 37, scope: !5514)
!5538 = !DILocation(line: 2677, column: 43, scope: !5514)
!5539 = !DILocation(line: 2677, column: 14, scope: !5514)
!5540 = !DILocation(line: 2677, column: 8, scope: !5514)
!5541 = !DILocation(line: 2677, column: 6, scope: !5514)
!5542 = !DILocation(line: 2679, column: 6, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 2679, column: 6)
!5544 = !DILocation(line: 2679, column: 10, scope: !5543)
!5545 = !DILocation(line: 2679, column: 6, scope: !5514)
!5546 = !DILocation(line: 2680, column: 3, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 2679, column: 36)
!5548 = !DILocation(line: 2680, column: 3, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 2680, column: 3)
!5550 = !DILocation(line: 2681, column: 11, scope: !5547)
!5551 = !DILocation(line: 2685, column: 6, scope: !5547)
!5552 = !DILocation(line: 2685, column: 11, scope: !5547)
!5553 = !DILocation(line: 2685, column: 28, scope: !5547)
!5554 = !DILocation(line: 2685, column: 34, scope: !5547)
!5555 = !DILocation(line: 2685, column: 5, scope: !5547)
!5556 = !DILocation(line: 2684, column: 3, scope: !5547)
!5557 = !DILocation(line: 2688, column: 2, scope: !5547)
!5558 = !DILocation(line: 2688, column: 13, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 2688, column: 13)
!5560 = !DILocation(line: 2688, column: 17, scope: !5559)
!5561 = !DILocation(line: 2688, column: 13, scope: !5543)
!5562 = !DILocation(line: 2689, column: 11, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 2688, column: 42)
!5564 = !DILocation(line: 2691, column: 7, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 2691, column: 7)
!5566 = !DILocation(line: 2691, column: 11, scope: !5565)
!5567 = !DILocation(line: 2691, column: 7, scope: !5563)
!5568 = !DILocation(line: 2694, column: 6, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 2691, column: 16)
!5570 = !DILocation(line: 2694, column: 11, scope: !5569)
!5571 = !DILocation(line: 2694, column: 28, scope: !5569)
!5572 = !DILocation(line: 2694, column: 34, scope: !5569)
!5573 = !DILocation(line: 2694, column: 5, scope: !5569)
!5574 = !DILocation(line: 2693, column: 4, scope: !5569)
!5575 = !DILocation(line: 2695, column: 3, scope: !5569)
!5576 = !DILocation(line: 2696, column: 7, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 2696, column: 7)
!5578 = !DILocation(line: 2696, column: 12, scope: !5577)
!5579 = !DILocation(line: 2696, column: 7, scope: !5563)
!5580 = !DILocation(line: 2699, column: 17, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 2696, column: 25)
!5582 = !DILocation(line: 2699, column: 21, scope: !5581)
!5583 = !DILocation(line: 2699, column: 27, scope: !5581)
!5584 = !DILocation(line: 2699, column: 16, scope: !5581)
!5585 = !DILocation(line: 2699, column: 10, scope: !5581)
!5586 = !DILocation(line: 2699, column: 8, scope: !5581)
!5587 = !DILocation(line: 2700, column: 8, scope: !5581)
!5588 = !DILocation(line: 2701, column: 11, scope: !5581)
!5589 = !DILocation(line: 2701, column: 17, scope: !5581)
!5590 = !DILocation(line: 2701, column: 21, scope: !5581)
!5591 = !DILocation(line: 2701, column: 27, scope: !5581)
!5592 = !DILocation(line: 2701, column: 16, scope: !5581)
!5593 = !DILocation(line: 2701, column: 4, scope: !5581)
!5594 = !DILocation(line: 2702, column: 3, scope: !5581)
!5595 = !DILocation(line: 2703, column: 21, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 2703, column: 8)
!5597 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 2702, column: 10)
!5598 = !DILocation(line: 2703, column: 25, scope: !5596)
!5599 = !DILocation(line: 2703, column: 9, scope: !5596)
!5600 = !DILocation(line: 2703, column: 8, scope: !5597)
!5601 = !DILocalVariable(name: "__mptr", scope: !5602, file: !3, line: 2705, type: !138)
!5602 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 2705, column: 11)
!5603 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 2703, column: 33)
!5604 = !DILocation(line: 2705, column: 11, scope: !5602)
!5605 = !DILocation(line: 2705, column: 11, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 2705, column: 11)
!5607 = !DILocation(line: 2705, column: 9, scope: !5603)
!5608 = !DILocation(line: 2708, column: 9, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 2708, column: 9)
!5610 = !DILocation(line: 2708, column: 13, scope: !5609)
!5611 = !DILocation(line: 2708, column: 9, scope: !5603)
!5612 = !DILocation(line: 2710, column: 13, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5609, file: !3, line: 2708, column: 18)
!5614 = !DILocation(line: 2710, column: 18, scope: !5613)
!5615 = !DILocation(line: 2710, column: 28, scope: !5613)
!5616 = !DILocation(line: 2710, column: 32, scope: !5613)
!5617 = !DILocation(line: 2710, column: 38, scope: !5613)
!5618 = !DILocation(line: 2710, column: 27, scope: !5613)
!5619 = !DILocation(line: 2710, column: 6, scope: !5613)
!5620 = !DILocation(line: 2713, column: 7, scope: !5613)
!5621 = !DILocation(line: 2712, column: 6, scope: !5613)
!5622 = !DILocation(line: 2712, column: 11, scope: !5613)
!5623 = !DILocation(line: 2712, column: 20, scope: !5613)
!5624 = !DILocation(line: 2712, column: 27, scope: !5613)
!5625 = !DILocation(line: 2720, column: 13, scope: !5613)
!5626 = !DILocation(line: 2720, column: 18, scope: !5613)
!5627 = !DILocation(line: 2720, column: 35, scope: !5613)
!5628 = !DILocation(line: 2720, column: 41, scope: !5613)
!5629 = !DILocation(line: 2720, column: 12, scope: !5613)
!5630 = !DILocation(line: 2720, column: 6, scope: !5613)
!5631 = !DILocation(line: 2719, column: 10, scope: !5613)
!5632 = !DILocation(line: 2721, column: 10, scope: !5613)
!5633 = !DILocation(line: 2722, column: 13, scope: !5613)
!5634 = !DILocation(line: 2723, column: 7, scope: !5613)
!5635 = !DILocation(line: 2723, column: 12, scope: !5613)
!5636 = !DILocation(line: 2723, column: 29, scope: !5613)
!5637 = !DILocation(line: 2723, column: 35, scope: !5613)
!5638 = !DILocation(line: 2723, column: 6, scope: !5613)
!5639 = !DILocation(line: 2722, column: 6, scope: !5613)
!5640 = !DILocation(line: 2726, column: 24, scope: !5613)
!5641 = !DILocation(line: 2726, column: 29, scope: !5613)
!5642 = !DILocation(line: 2726, column: 33, scope: !5613)
!5643 = !DILocation(line: 2726, column: 6, scope: !5613)
!5644 = !DILocation(line: 2726, column: 11, scope: !5613)
!5645 = !DILocation(line: 2726, column: 15, scope: !5613)
!5646 = !DILocation(line: 2726, column: 22, scope: !5613)
!5647 = !DILocation(line: 2729, column: 19, scope: !5613)
!5648 = !DILocation(line: 2729, column: 23, scope: !5613)
!5649 = !DILocation(line: 2729, column: 6, scope: !5613)
!5650 = !DILocation(line: 2731, column: 5, scope: !5613)
!5651 = !DILocation(line: 2733, column: 23, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5609, file: !3, line: 2731, column: 12)
!5653 = !DILocation(line: 2733, column: 28, scope: !5652)
!5654 = !DILocation(line: 2733, column: 33, scope: !5652)
!5655 = !DILocation(line: 2733, column: 6, scope: !5652)
!5656 = !DILocation(line: 2736, column: 12, scope: !5652)
!5657 = !DILocation(line: 2736, column: 17, scope: !5652)
!5658 = !DILocation(line: 2736, column: 21, scope: !5652)
!5659 = !DILocation(line: 2736, column: 30, scope: !5652)
!5660 = !DILocation(line: 2736, column: 35, scope: !5652)
!5661 = !DILocation(line: 2736, column: 39, scope: !5652)
!5662 = !DILocation(line: 2736, column: 28, scope: !5652)
!5663 = !DILocation(line: 2736, column: 10, scope: !5652)
!5664 = !DILocation(line: 2737, column: 10, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 2737, column: 10)
!5666 = !DILocation(line: 2737, column: 16, scope: !5665)
!5667 = !DILocation(line: 2737, column: 20, scope: !5665)
!5668 = !DILocation(line: 2737, column: 23, scope: !5665)
!5669 = !DILocation(line: 2737, column: 14, scope: !5665)
!5670 = !DILocation(line: 2737, column: 10, scope: !5652)
!5671 = !DILocation(line: 2738, column: 13, scope: !5665)
!5672 = !DILocation(line: 2738, column: 17, scope: !5665)
!5673 = !DILocation(line: 2738, column: 20, scope: !5665)
!5674 = !DILocation(line: 2738, column: 11, scope: !5665)
!5675 = !DILocation(line: 2738, column: 7, scope: !5665)
!5676 = !DILocation(line: 2740, column: 25, scope: !5652)
!5677 = !DILocation(line: 2740, column: 6, scope: !5652)
!5678 = !DILocation(line: 2740, column: 11, scope: !5652)
!5679 = !DILocation(line: 2740, column: 15, scope: !5652)
!5680 = !DILocation(line: 2740, column: 22, scope: !5652)
!5681 = !DILocation(line: 2741, column: 10, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 2741, column: 10)
!5683 = !DILocation(line: 2741, column: 15, scope: !5682)
!5684 = !DILocation(line: 2741, column: 19, scope: !5682)
!5685 = !DILocation(line: 2741, column: 29, scope: !5682)
!5686 = !DILocation(line: 2741, column: 34, scope: !5682)
!5687 = !DILocation(line: 2741, column: 38, scope: !5682)
!5688 = !DILocation(line: 2741, column: 26, scope: !5682)
!5689 = !DILocation(line: 2742, column: 7, scope: !5682)
!5690 = !DILocation(line: 2742, column: 11, scope: !5682)
!5691 = !DILocation(line: 2742, column: 18, scope: !5682)
!5692 = !DILocation(line: 2742, column: 22, scope: !5682)
!5693 = !DILocation(line: 2742, column: 25, scope: !5682)
!5694 = !DILocation(line: 2742, column: 15, scope: !5682)
!5695 = !DILocation(line: 2741, column: 10, scope: !5652)
!5696 = !DILocation(line: 2744, column: 20, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5682, file: !3, line: 2742, column: 37)
!5698 = !DILocation(line: 2744, column: 24, scope: !5697)
!5699 = !DILocation(line: 2744, column: 7, scope: !5697)
!5700 = !DILocation(line: 2745, column: 6, scope: !5697)
!5701 = !DILocation(line: 2748, column: 4, scope: !5603)
!5702 = !DILocation(line: 2750, column: 3, scope: !5563)
!5703 = !DILocation(line: 2750, column: 7, scope: !5563)
!5704 = !DILocation(line: 2750, column: 14, scope: !5563)
!5705 = !DILocation(line: 2751, column: 3, scope: !5563)
!5706 = !DILocation(line: 2751, column: 8, scope: !5563)
!5707 = !DILocation(line: 2751, column: 20, scope: !5563)
!5708 = !DILocation(line: 2752, column: 8, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 2752, column: 7)
!5710 = !DILocation(line: 2752, column: 12, scope: !5709)
!5711 = !DILocation(line: 2752, column: 7, scope: !5563)
!5712 = !DILocation(line: 2755, column: 6, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 2752, column: 17)
!5714 = !DILocation(line: 2755, column: 11, scope: !5713)
!5715 = !DILocation(line: 2755, column: 28, scope: !5713)
!5716 = !DILocation(line: 2755, column: 34, scope: !5713)
!5717 = !DILocation(line: 2755, column: 5, scope: !5713)
!5718 = !DILocation(line: 2754, column: 4, scope: !5713)
!5719 = !DILocation(line: 2756, column: 3, scope: !5713)
!5720 = !DILocation(line: 2757, column: 2, scope: !5563)
!5721 = !DILocation(line: 2759, column: 9, scope: !5514)
!5722 = !DILocation(line: 2759, column: 2, scope: !5514)
!5723 = distinct !DISubprogram(name: "udc_data_out_isr", scope: !3, file: !3, line: 2081, type: !5724, scopeLine: 2082, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!5724 = !DISubroutineType(types: !5725)
!5725 = !{!4986, !356, !197}
!5726 = !DILocalVariable(name: "dev", arg: 1, scope: !5723, file: !3, line: 2081, type: !356)
!5727 = !DILocation(line: 2081, column: 49, scope: !5723)
!5728 = !DILocalVariable(name: "ep_ix", arg: 2, scope: !5723, file: !3, line: 2081, type: !197)
!5729 = !DILocation(line: 2081, column: 58, scope: !5723)
!5730 = !DILocalVariable(name: "ret_val", scope: !5723, file: !3, line: 2083, type: !4986)
!5731 = !DILocation(line: 2083, column: 15, scope: !5723)
!5732 = !DILocalVariable(name: "tmp", scope: !5723, file: !3, line: 2084, type: !296)
!5733 = !DILocation(line: 2084, column: 8, scope: !5723)
!5734 = !DILocalVariable(name: "ep", scope: !5723, file: !3, line: 2085, type: !319)
!5735 = !DILocation(line: 2085, column: 18, scope: !5723)
!5736 = !DILocalVariable(name: "req", scope: !5723, file: !3, line: 2086, type: !139)
!5737 = !DILocation(line: 2086, column: 22, scope: !5723)
!5738 = !DILocalVariable(name: "count", scope: !5723, file: !3, line: 2087, type: !7)
!5739 = !DILocation(line: 2087, column: 16, scope: !5723)
!5740 = !DILocalVariable(name: "td", scope: !5723, file: !3, line: 2088, type: !292)
!5741 = !DILocation(line: 2088, column: 23, scope: !5723)
!5742 = !DILocalVariable(name: "dma_done", scope: !5723, file: !3, line: 2089, type: !7)
!5743 = !DILocation(line: 2089, column: 12, scope: !5723)
!5744 = !DILocation(line: 2091, column: 2, scope: !5723)
!5745 = !DILocation(line: 2091, column: 2, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 2091, column: 2)
!5747 = !DILocation(line: 2092, column: 8, scope: !5723)
!5748 = !DILocation(line: 2092, column: 13, scope: !5723)
!5749 = !DILocation(line: 2092, column: 16, scope: !5723)
!5750 = !DILocation(line: 2092, column: 5, scope: !5723)
!5751 = !DILocation(line: 2094, column: 15, scope: !5723)
!5752 = !DILocation(line: 2094, column: 19, scope: !5723)
!5753 = !DILocation(line: 2094, column: 25, scope: !5723)
!5754 = !DILocation(line: 2094, column: 14, scope: !5723)
!5755 = !DILocation(line: 2094, column: 8, scope: !5723)
!5756 = !DILocation(line: 2094, column: 6, scope: !5723)
!5757 = !DILocation(line: 2095, column: 6, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 2095, column: 6)
!5759 = !DILocation(line: 2095, column: 6, scope: !5723)
!5760 = !DILocation(line: 2097, column: 7, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 2097, column: 7)
!5762 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 2095, column: 15)
!5763 = !DILocation(line: 2097, column: 11, scope: !5761)
!5764 = !DILocation(line: 2097, column: 7, scope: !5762)
!5765 = !DILocation(line: 2101, column: 11, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 2097, column: 37)
!5767 = !DILocation(line: 2101, column: 15, scope: !5766)
!5768 = !DILocation(line: 2101, column: 42, scope: !5766)
!5769 = !DILocation(line: 2101, column: 46, scope: !5766)
!5770 = !DILocation(line: 2101, column: 52, scope: !5766)
!5771 = !DILocation(line: 2101, column: 41, scope: !5766)
!5772 = !DILocation(line: 2101, column: 4, scope: !5766)
!5773 = !DILocation(line: 2102, column: 9, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 2102, column: 8)
!5775 = !DILocation(line: 2102, column: 13, scope: !5774)
!5776 = !DILocation(line: 2102, column: 8, scope: !5766)
!5777 = !DILocation(line: 2103, column: 5, scope: !5774)
!5778 = !DILocation(line: 2103, column: 9, scope: !5774)
!5779 = !DILocation(line: 2103, column: 22, scope: !5774)
!5780 = !DILocation(line: 2105, column: 5, scope: !5774)
!5781 = !DILocation(line: 2105, column: 9, scope: !5774)
!5782 = !DILocation(line: 2105, column: 25, scope: !5774)
!5783 = !DILocation(line: 2106, column: 12, scope: !5766)
!5784 = !DILocation(line: 2107, column: 4, scope: !5766)
!5785 = !DILocation(line: 2109, column: 2, scope: !5762)
!5786 = !DILocation(line: 2111, column: 6, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 2111, column: 6)
!5788 = !DILocation(line: 2111, column: 10, scope: !5787)
!5789 = !DILocation(line: 2111, column: 6, scope: !5723)
!5790 = !DILocation(line: 2112, column: 3, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 2111, column: 35)
!5792 = !DILocation(line: 2115, column: 10, scope: !5791)
!5793 = !DILocation(line: 2115, column: 14, scope: !5791)
!5794 = !DILocation(line: 2115, column: 40, scope: !5791)
!5795 = !DILocation(line: 2115, column: 44, scope: !5791)
!5796 = !DILocation(line: 2115, column: 50, scope: !5791)
!5797 = !DILocation(line: 2115, column: 39, scope: !5791)
!5798 = !DILocation(line: 2115, column: 3, scope: !5791)
!5799 = !DILocation(line: 2116, column: 11, scope: !5791)
!5800 = !DILocation(line: 2117, column: 3, scope: !5791)
!5801 = !DILocation(line: 2120, column: 19, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 2120, column: 6)
!5803 = !DILocation(line: 2120, column: 23, scope: !5802)
!5804 = !DILocation(line: 2120, column: 7, scope: !5802)
!5805 = !DILocation(line: 2120, column: 6, scope: !5723)
!5806 = !DILocalVariable(name: "__mptr", scope: !5807, file: !3, line: 2123, type: !138)
!5807 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 2123, column: 9)
!5808 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 2120, column: 31)
!5809 = !DILocation(line: 2123, column: 9, scope: !5807)
!5810 = !DILocation(line: 2123, column: 9, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 2123, column: 9)
!5812 = !DILocation(line: 2123, column: 7, scope: !5808)
!5813 = !DILocation(line: 2125, column: 2, scope: !5808)
!5814 = !DILocation(line: 2126, column: 7, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 2125, column: 9)
!5816 = !DILocation(line: 2127, column: 22, scope: !5815)
!5817 = !DILocation(line: 2129, column: 2, scope: !5723)
!5818 = !DILocation(line: 2129, column: 2, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 2129, column: 2)
!5820 = !DILocation(line: 2131, column: 7, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 2131, column: 6)
!5822 = !DILocation(line: 2131, column: 6, scope: !5723)
!5823 = !DILocation(line: 2134, column: 7, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 2134, column: 7)
!5825 = distinct !DILexicalBlock(scope: !5821, file: !3, line: 2131, column: 16)
!5826 = !DILocation(line: 2134, column: 11, scope: !5824)
!5827 = !DILocation(line: 2134, column: 30, scope: !5824)
!5828 = !DILocation(line: 2134, column: 34, scope: !5824)
!5829 = !DILocation(line: 2134, column: 14, scope: !5824)
!5830 = !DILocation(line: 2134, column: 7, scope: !5825)
!5831 = !DILocation(line: 2135, column: 12, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 2134, column: 40)
!5833 = !DILocation(line: 2138, column: 17, scope: !5832)
!5834 = !DILocation(line: 2138, column: 21, scope: !5832)
!5835 = !DILocation(line: 2138, column: 4, scope: !5832)
!5836 = !DILocation(line: 2140, column: 21, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5832, file: !3, line: 2140, column: 8)
!5838 = !DILocation(line: 2140, column: 25, scope: !5837)
!5839 = !DILocation(line: 2140, column: 9, scope: !5837)
!5840 = !DILocation(line: 2140, column: 32, scope: !5837)
!5841 = !DILocation(line: 2140, column: 36, scope: !5837)
!5842 = !DILocation(line: 2140, column: 40, scope: !5837)
!5843 = !DILocation(line: 2140, column: 8, scope: !5832)
!5844 = !DILocalVariable(name: "__mptr", scope: !5845, file: !3, line: 2141, type: !138)
!5845 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 2141, column: 11)
!5846 = distinct !DILexicalBlock(scope: !5837, file: !3, line: 2140, column: 48)
!5847 = !DILocation(line: 2141, column: 11, scope: !5845)
!5848 = !DILocation(line: 2141, column: 11, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 2141, column: 11)
!5850 = !DILocation(line: 2141, column: 9, scope: !5846)
!5851 = !DILocation(line: 2143, column: 4, scope: !5846)
!5852 = !DILocation(line: 2144, column: 9, scope: !5837)
!5853 = !DILocation(line: 2145, column: 3, scope: !5832)
!5854 = !DILocation(line: 2148, column: 2, scope: !5825)
!5855 = !DILocation(line: 2148, column: 14, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5821, file: !3, line: 2148, column: 13)
!5857 = !DILocation(line: 2148, column: 18, scope: !5856)
!5858 = !DILocation(line: 2148, column: 34, scope: !5856)
!5859 = !DILocation(line: 2148, column: 37, scope: !5856)
!5860 = !DILocation(line: 2148, column: 13, scope: !5821)
!5861 = !DILocation(line: 2149, column: 11, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5856, file: !3, line: 2148, column: 42)
!5863 = !DILocation(line: 2152, column: 8, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 2152, column: 7)
!5865 = !DILocation(line: 2152, column: 7, scope: !5862)
!5866 = !DILocation(line: 2153, column: 15, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 2152, column: 21)
!5868 = !DILocation(line: 2153, column: 13, scope: !5867)
!5869 = !DILocation(line: 2156, column: 3, scope: !5867)
!5870 = !DILocation(line: 2161, column: 8, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 2161, column: 8)
!5872 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 2156, column: 10)
!5873 = !DILocation(line: 2161, column: 12, scope: !5871)
!5874 = !DILocation(line: 2161, column: 8, scope: !5872)
!5875 = !DILocation(line: 2162, column: 5, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 2161, column: 26)
!5877 = !DILocation(line: 2162, column: 5, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 2162, column: 5)
!5879 = !DILocation(line: 2163, column: 12, scope: !5876)
!5880 = !DILocation(line: 2163, column: 17, scope: !5876)
!5881 = !DILocation(line: 2163, column: 5, scope: !5876)
!5882 = !DILocation(line: 2163, column: 26, scope: !5876)
!5883 = !DILocation(line: 2163, column: 30, scope: !5876)
!5884 = !DILocation(line: 2163, column: 45, scope: !5876)
!5885 = !DILocation(line: 2165, column: 5, scope: !5876)
!5886 = !DILocation(line: 2165, column: 9, scope: !5876)
!5887 = !DILocation(line: 2165, column: 22, scope: !5876)
!5888 = !DILocation(line: 2166, column: 24, scope: !5876)
!5889 = !DILocation(line: 2166, column: 28, scope: !5876)
!5890 = !DILocation(line: 2166, column: 5, scope: !5876)
!5891 = !DILocation(line: 2167, column: 4, scope: !5876)
!5892 = !DILocation(line: 2168, column: 31, scope: !5872)
!5893 = !DILocation(line: 2168, column: 9, scope: !5872)
!5894 = !DILocation(line: 2168, column: 7, scope: !5872)
!5895 = !DILocation(line: 2169, column: 15, scope: !5872)
!5896 = !DILocation(line: 2169, column: 13, scope: !5872)
!5897 = !DILocation(line: 2171, column: 7, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 2171, column: 7)
!5899 = !DILocation(line: 2171, column: 16, scope: !5898)
!5900 = !DILocation(line: 2171, column: 7, scope: !5862)
!5901 = !DILocation(line: 2173, column: 9, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 2173, column: 8)
!5903 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 2171, column: 48)
!5904 = !DILocation(line: 2173, column: 8, scope: !5903)
!5905 = !DILocation(line: 2175, column: 13, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 2173, column: 22)
!5907 = !DILocation(line: 2175, column: 11, scope: !5906)
!5908 = !DILocation(line: 2177, column: 5, scope: !5906)
!5909 = !DILocation(line: 2177, column: 5, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5906, file: !3, line: 2177, column: 5)
!5911 = !DILocation(line: 2179, column: 4, scope: !5906)
!5912 = !DILocation(line: 2180, column: 5, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 2179, column: 11)
!5914 = !DILocation(line: 2180, column: 5, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 2180, column: 5)
!5916 = !DILocation(line: 2181, column: 5, scope: !5913)
!5917 = !DILocation(line: 2181, column: 5, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 2181, column: 5)
!5919 = !DILocation(line: 2183, column: 9, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 2183, column: 9)
!5921 = !DILocation(line: 2183, column: 9, scope: !5913)
!5922 = !DILocation(line: 2185, column: 36, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 2183, column: 25)
!5924 = !DILocation(line: 2185, column: 14, scope: !5923)
!5925 = !DILocation(line: 2185, column: 12, scope: !5923)
!5926 = !DILocation(line: 2186, column: 5, scope: !5923)
!5927 = !DILocation(line: 2188, column: 14, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 2186, column: 12)
!5929 = !DILocation(line: 2188, column: 12, scope: !5928)
!5930 = !DILocation(line: 2190, column: 11, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 2190, column: 10)
!5932 = !DILocation(line: 2190, column: 17, scope: !5931)
!5933 = !DILocation(line: 2190, column: 20, scope: !5931)
!5934 = !DILocation(line: 2190, column: 25, scope: !5931)
!5935 = !DILocation(line: 2190, column: 29, scope: !5931)
!5936 = !DILocation(line: 2191, column: 7, scope: !5931)
!5937 = !DILocation(line: 2190, column: 10, scope: !5928)
!5938 = !DILocation(line: 2196, column: 13, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 2191, column: 29)
!5940 = !DILocation(line: 2197, column: 6, scope: !5939)
!5941 = !DILocation(line: 2199, column: 5, scope: !5913)
!5942 = !DILocation(line: 2199, column: 5, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 2199, column: 5)
!5944 = !DILocation(line: 2202, column: 10, scope: !5903)
!5945 = !DILocation(line: 2202, column: 15, scope: !5903)
!5946 = !DILocation(line: 2202, column: 19, scope: !5903)
!5947 = !DILocation(line: 2202, column: 28, scope: !5903)
!5948 = !DILocation(line: 2202, column: 33, scope: !5903)
!5949 = !DILocation(line: 2202, column: 37, scope: !5903)
!5950 = !DILocation(line: 2202, column: 26, scope: !5903)
!5951 = !DILocation(line: 2202, column: 8, scope: !5903)
!5952 = !DILocation(line: 2203, column: 8, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 2203, column: 8)
!5954 = !DILocation(line: 2203, column: 16, scope: !5953)
!5955 = !DILocation(line: 2203, column: 14, scope: !5953)
!5956 = !DILocation(line: 2203, column: 8, scope: !5903)
!5957 = !DILocation(line: 2204, column: 10, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5959, file: !3, line: 2204, column: 9)
!5959 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 2203, column: 21)
!5960 = !DILocation(line: 2204, column: 16, scope: !5958)
!5961 = !DILocation(line: 2204, column: 20, scope: !5958)
!5962 = !DILocation(line: 2204, column: 23, scope: !5958)
!5963 = !DILocation(line: 2204, column: 14, scope: !5958)
!5964 = !DILocation(line: 2204, column: 34, scope: !5958)
!5965 = !DILocation(line: 2204, column: 9, scope: !5959)
!5966 = !DILocation(line: 2207, column: 6, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 2204, column: 40)
!5968 = !DILocation(line: 2207, column: 11, scope: !5967)
!5969 = !DILocation(line: 2207, column: 15, scope: !5967)
!5970 = !DILocation(line: 2207, column: 22, scope: !5967)
!5971 = !DILocation(line: 2208, column: 5, scope: !5967)
!5972 = !DILocation(line: 2209, column: 13, scope: !5959)
!5973 = !DILocation(line: 2209, column: 11, scope: !5959)
!5974 = !DILocation(line: 2210, column: 4, scope: !5959)
!5975 = !DILocation(line: 2211, column: 23, scope: !5903)
!5976 = !DILocation(line: 2211, column: 4, scope: !5903)
!5977 = !DILocation(line: 2211, column: 9, scope: !5903)
!5978 = !DILocation(line: 2211, column: 13, scope: !5903)
!5979 = !DILocation(line: 2211, column: 20, scope: !5903)
!5980 = !DILocation(line: 2212, column: 4, scope: !5903)
!5981 = !DILocation(line: 2212, column: 9, scope: !5903)
!5982 = !DILocation(line: 2212, column: 19, scope: !5903)
!5983 = !DILocation(line: 2214, column: 17, scope: !5903)
!5984 = !DILocation(line: 2214, column: 21, scope: !5903)
!5985 = !DILocation(line: 2214, column: 4, scope: !5903)
!5986 = !DILocation(line: 2217, column: 21, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 2217, column: 8)
!5988 = !DILocation(line: 2217, column: 25, scope: !5987)
!5989 = !DILocation(line: 2217, column: 9, scope: !5987)
!5990 = !DILocation(line: 2217, column: 32, scope: !5987)
!5991 = !DILocation(line: 2217, column: 36, scope: !5987)
!5992 = !DILocation(line: 2217, column: 40, scope: !5987)
!5993 = !DILocation(line: 2217, column: 8, scope: !5903)
!5994 = !DILocalVariable(name: "__mptr", scope: !5995, file: !3, line: 2218, type: !138)
!5995 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 2218, column: 11)
!5996 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 2217, column: 48)
!5997 = !DILocation(line: 2218, column: 11, scope: !5995)
!5998 = !DILocation(line: 2218, column: 11, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 2218, column: 11)
!6000 = !DILocation(line: 2218, column: 9, scope: !5996)
!6001 = !DILocation(line: 2227, column: 9, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 2227, column: 9)
!6003 = !DILocation(line: 2227, column: 14, scope: !6002)
!6004 = !DILocation(line: 2227, column: 24, scope: !6002)
!6005 = !DILocation(line: 2227, column: 9, scope: !5996)
!6006 = !DILocation(line: 2229, column: 19, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 2229, column: 10)
!6008 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 2227, column: 30)
!6009 = !DILocation(line: 2229, column: 23, scope: !6007)
!6010 = !DILocation(line: 2229, column: 10, scope: !6007)
!6011 = !DILocation(line: 2229, column: 40, scope: !6007)
!6012 = !DILocation(line: 2229, column: 10, scope: !6008)
!6013 = !DILocation(line: 2230, column: 7, scope: !6007)
!6014 = !DILocation(line: 2232, column: 13, scope: !6008)
!6015 = !DILocation(line: 2232, column: 18, scope: !6008)
!6016 = !DILocation(line: 2233, column: 8, scope: !6008)
!6017 = !DILocation(line: 2233, column: 12, scope: !6008)
!6018 = !DILocation(line: 2233, column: 18, scope: !6008)
!6019 = !DILocation(line: 2233, column: 7, scope: !6008)
!6020 = !DILocation(line: 2232, column: 6, scope: !6008)
!6021 = !DILocation(line: 2234, column: 6, scope: !6008)
!6022 = !DILocation(line: 2234, column: 11, scope: !6008)
!6023 = !DILocation(line: 2234, column: 21, scope: !6008)
!6024 = !DILocation(line: 2236, column: 18, scope: !6008)
!6025 = !DILocation(line: 2236, column: 6, scope: !6008)
!6026 = !DILocation(line: 2237, column: 5, scope: !6008)
!6027 = !DILocation(line: 2238, column: 4, scope: !5996)
!6028 = !DILocation(line: 2243, column: 9, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 2243, column: 9)
!6030 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 2238, column: 11)
!6031 = !DILocation(line: 2243, column: 13, scope: !6029)
!6032 = !DILocation(line: 2243, column: 9, scope: !6030)
!6033 = !DILocation(line: 2245, column: 13, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6029, file: !3, line: 2243, column: 28)
!6035 = !DILocation(line: 2245, column: 17, scope: !6034)
!6036 = !DILocation(line: 2245, column: 32, scope: !6034)
!6037 = !DILocation(line: 2246, column: 8, scope: !6034)
!6038 = !DILocation(line: 2246, column: 12, scope: !6034)
!6039 = !DILocation(line: 2246, column: 18, scope: !6034)
!6040 = !DILocation(line: 2246, column: 7, scope: !6034)
!6041 = !DILocation(line: 2245, column: 6, scope: !6034)
!6042 = !DILocation(line: 2247, column: 6, scope: !6034)
!6043 = !DILocation(line: 2247, column: 10, scope: !6034)
!6044 = !DILocation(line: 2247, column: 23, scope: !6034)
!6045 = !DILocation(line: 2248, column: 5, scope: !6034)
!6046 = !DILocation(line: 2255, column: 9, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 2255, column: 9)
!6048 = !DILocation(line: 2255, column: 17, scope: !6047)
!6049 = !DILocation(line: 2256, column: 7, scope: !6047)
!6050 = !DILocation(line: 2256, column: 11, scope: !6047)
!6051 = !DILocation(line: 2255, column: 9, scope: !6030)
!6052 = !DILocation(line: 2258, column: 7, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 2256, column: 38)
!6054 = !DILocation(line: 2259, column: 7, scope: !6053)
!6055 = !DILocation(line: 2257, column: 24, scope: !6053)
!6056 = !DILocation(line: 2260, column: 14, scope: !6053)
!6057 = !DILocation(line: 2261, column: 11, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 2261, column: 10)
!6059 = !DILocation(line: 2261, column: 10, scope: !6053)
!6060 = !DILocation(line: 2262, column: 7, scope: !6058)
!6061 = !DILocation(line: 2263, column: 5, scope: !6053)
!6062 = !DILocation(line: 2264, column: 9, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 2264, column: 9)
!6064 = !DILocation(line: 2264, column: 13, scope: !6063)
!6065 = !DILocation(line: 2264, column: 17, scope: !6063)
!6066 = !DILocation(line: 2264, column: 9, scope: !6030)
!6067 = !DILocation(line: 2265, column: 6, scope: !6063)
!6068 = !DILocation(line: 2265, column: 11, scope: !6063)
!6069 = !DILocation(line: 2265, column: 26, scope: !6063)
!6070 = !DILocation(line: 2268, column: 3, scope: !5903)
!6071 = !DILocation(line: 2273, column: 16, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 2268, column: 10)
!6073 = !DILocation(line: 2273, column: 4, scope: !6072)
!6074 = !DILocation(line: 2276, column: 2, scope: !5862)
!6075 = !DILocation(line: 2276, column: 13, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !5856, file: !3, line: 2276, column: 13)
!6077 = !DILocation(line: 2276, column: 17, scope: !6076)
!6078 = !DILocation(line: 2276, column: 13, scope: !5856)
!6079 = !DILocation(line: 2277, column: 11, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 2276, column: 34)
!6081 = !DILocation(line: 2278, column: 3, scope: !6080)
!6082 = !DILocation(line: 2278, column: 7, scope: !6080)
!6083 = !DILocation(line: 2278, column: 23, scope: !6080)
!6084 = !DILocation(line: 2279, column: 2, scope: !6080)
!6085 = !DILocation(line: 2282, column: 6, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 2282, column: 6)
!6087 = !DILocation(line: 2282, column: 6, scope: !5723)
!6088 = !DILocation(line: 2284, column: 14, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 2284, column: 7)
!6090 = distinct !DILexicalBlock(scope: !6086, file: !3, line: 2282, column: 20)
!6091 = !DILocation(line: 2284, column: 19, scope: !6089)
!6092 = !DILocation(line: 2284, column: 25, scope: !6089)
!6093 = !DILocation(line: 2284, column: 13, scope: !6089)
!6094 = !DILocation(line: 2284, column: 7, scope: !6089)
!6095 = !DILocation(line: 2284, column: 30, scope: !6089)
!6096 = !DILocation(line: 2284, column: 7, scope: !6090)
!6097 = !DILocation(line: 2285, column: 27, scope: !6089)
!6098 = !DILocation(line: 2285, column: 4, scope: !6089)
!6099 = !DILocation(line: 2286, column: 2, scope: !6090)
!6100 = !DILocation(line: 2289, column: 31, scope: !5723)
!6101 = !DILocation(line: 2289, column: 35, scope: !5723)
!6102 = !DILocation(line: 2289, column: 41, scope: !5723)
!6103 = !DILocation(line: 2289, column: 30, scope: !5723)
!6104 = !DILocation(line: 2289, column: 2, scope: !5723)
!6105 = !DILabel(scope: !5723, name: "finished", file: !3, line: 2290)
!6106 = !DILocation(line: 2290, column: 1, scope: !5723)
!6107 = !DILocation(line: 2291, column: 9, scope: !5723)
!6108 = !DILocation(line: 2291, column: 2, scope: !5723)
!6109 = distinct !DISubprogram(name: "udc_data_in_isr", scope: !3, file: !3, line: 2295, type: !5724, scopeLine: 2296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!6110 = !DILocalVariable(name: "dev", arg: 1, scope: !6109, file: !3, line: 2295, type: !356)
!6111 = !DILocation(line: 2295, column: 48, scope: !6109)
!6112 = !DILocalVariable(name: "ep_ix", arg: 2, scope: !6109, file: !3, line: 2295, type: !197)
!6113 = !DILocation(line: 2295, column: 57, scope: !6109)
!6114 = !DILocalVariable(name: "ret_val", scope: !6109, file: !3, line: 2297, type: !4986)
!6115 = !DILocation(line: 2297, column: 14, scope: !6109)
!6116 = !DILocalVariable(name: "tmp", scope: !6109, file: !3, line: 2298, type: !296)
!6117 = !DILocation(line: 2298, column: 6, scope: !6109)
!6118 = !DILocalVariable(name: "epsts", scope: !6109, file: !3, line: 2299, type: !296)
!6119 = !DILocation(line: 2299, column: 6, scope: !6109)
!6120 = !DILocalVariable(name: "ep", scope: !6109, file: !3, line: 2300, type: !319)
!6121 = !DILocation(line: 2300, column: 17, scope: !6109)
!6122 = !DILocalVariable(name: "req", scope: !6109, file: !3, line: 2301, type: !139)
!6123 = !DILocation(line: 2301, column: 22, scope: !6109)
!6124 = !DILocalVariable(name: "td", scope: !6109, file: !3, line: 2302, type: !292)
!6125 = !DILocation(line: 2302, column: 23, scope: !6109)
!6126 = !DILocalVariable(name: "len", scope: !6109, file: !3, line: 2303, type: !7)
!6127 = !DILocation(line: 2303, column: 11, scope: !6109)
!6128 = !DILocation(line: 2305, column: 8, scope: !6109)
!6129 = !DILocation(line: 2305, column: 13, scope: !6109)
!6130 = !DILocation(line: 2305, column: 16, scope: !6109)
!6131 = !DILocation(line: 2305, column: 5, scope: !6109)
!6132 = !DILocation(line: 2307, column: 17, scope: !6109)
!6133 = !DILocation(line: 2307, column: 21, scope: !6109)
!6134 = !DILocation(line: 2307, column: 27, scope: !6109)
!6135 = !DILocation(line: 2307, column: 16, scope: !6109)
!6136 = !DILocation(line: 2307, column: 10, scope: !6109)
!6137 = !DILocation(line: 2307, column: 8, scope: !6109)
!6138 = !DILocation(line: 2308, column: 6, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 2308, column: 6)
!6140 = !DILocation(line: 2308, column: 6, scope: !6109)
!6141 = !DILocation(line: 2310, column: 7, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 2310, column: 7)
!6143 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 2308, column: 15)
!6144 = !DILocation(line: 2310, column: 13, scope: !6142)
!6145 = !DILocation(line: 2310, column: 7, scope: !6143)
!6146 = !DILocation(line: 2311, column: 4, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 2310, column: 39)
!6148 = !DILocation(line: 2317, column: 11, scope: !6147)
!6149 = !DILocation(line: 2317, column: 19, scope: !6147)
!6150 = !DILocation(line: 2317, column: 23, scope: !6147)
!6151 = !DILocation(line: 2317, column: 29, scope: !6147)
!6152 = !DILocation(line: 2317, column: 18, scope: !6147)
!6153 = !DILocation(line: 2317, column: 4, scope: !6147)
!6154 = !DILocation(line: 2318, column: 12, scope: !6147)
!6155 = !DILocation(line: 2319, column: 4, scope: !6147)
!6156 = !DILocation(line: 2321, column: 2, scope: !6143)
!6157 = !DILocation(line: 2323, column: 6, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 2323, column: 6)
!6159 = !DILocation(line: 2323, column: 12, scope: !6158)
!6160 = !DILocation(line: 2323, column: 6, scope: !6109)
!6161 = !DILocation(line: 2324, column: 3, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6158, file: !3, line: 2323, column: 37)
!6163 = !DILocation(line: 2329, column: 10, scope: !6162)
!6164 = !DILocation(line: 2329, column: 16, scope: !6162)
!6165 = !DILocation(line: 2329, column: 42, scope: !6162)
!6166 = !DILocation(line: 2329, column: 46, scope: !6162)
!6167 = !DILocation(line: 2329, column: 52, scope: !6162)
!6168 = !DILocation(line: 2329, column: 41, scope: !6162)
!6169 = !DILocation(line: 2329, column: 3, scope: !6162)
!6170 = !DILocation(line: 2330, column: 11, scope: !6162)
!6171 = !DILocation(line: 2331, column: 3, scope: !6162)
!6172 = !DILocation(line: 2335, column: 6, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 2335, column: 6)
!6174 = !DILocation(line: 2335, column: 12, scope: !6173)
!6175 = !DILocation(line: 2335, column: 6, scope: !6109)
!6176 = !DILocation(line: 2336, column: 3, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 2335, column: 38)
!6178 = !DILocation(line: 2336, column: 3, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 2336, column: 3)
!6180 = !DILocation(line: 2337, column: 11, scope: !6177)
!6181 = !DILocation(line: 2338, column: 8, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 2338, column: 7)
!6183 = !DILocation(line: 2338, column: 12, scope: !6182)
!6184 = !DILocation(line: 2338, column: 28, scope: !6182)
!6185 = !DILocation(line: 2338, column: 44, scope: !6182)
!6186 = !DILocation(line: 2338, column: 48, scope: !6182)
!6187 = !DILocation(line: 2338, column: 32, scope: !6182)
!6188 = !DILocation(line: 2338, column: 7, scope: !6177)
!6189 = !DILocalVariable(name: "__mptr", scope: !6190, file: !3, line: 2339, type: !138)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 2339, column: 10)
!6191 = distinct !DILexicalBlock(scope: !6182, file: !3, line: 2338, column: 56)
!6192 = !DILocation(line: 2339, column: 10, scope: !6190)
!6193 = !DILocation(line: 2339, column: 10, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 2339, column: 10)
!6195 = !DILocation(line: 2339, column: 8, scope: !6191)
!6196 = !DILocation(line: 2345, column: 8, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 2345, column: 8)
!6198 = !DILocation(line: 2345, column: 8, scope: !6191)
!6199 = !DILocation(line: 2346, column: 32, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 2345, column: 24)
!6201 = !DILocation(line: 2346, column: 10, scope: !6200)
!6202 = !DILocation(line: 2346, column: 8, scope: !6200)
!6203 = !DILocation(line: 2347, column: 9, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 2347, column: 9)
!6205 = !DILocation(line: 2347, column: 9, scope: !6200)
!6206 = !DILocation(line: 2348, column: 24, scope: !6204)
!6207 = !DILocation(line: 2348, column: 29, scope: !6204)
!6208 = !DILocation(line: 2348, column: 33, scope: !6204)
!6209 = !DILocation(line: 2348, column: 6, scope: !6204)
!6210 = !DILocation(line: 2348, column: 11, scope: !6204)
!6211 = !DILocation(line: 2348, column: 15, scope: !6204)
!6212 = !DILocation(line: 2348, column: 22, scope: !6204)
!6213 = !DILocation(line: 2349, column: 4, scope: !6200)
!6214 = !DILocation(line: 2351, column: 23, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 2349, column: 11)
!6216 = !DILocation(line: 2351, column: 28, scope: !6215)
!6217 = !DILocation(line: 2351, column: 32, scope: !6215)
!6218 = !DILocation(line: 2351, column: 5, scope: !6215)
!6219 = !DILocation(line: 2351, column: 10, scope: !6215)
!6220 = !DILocation(line: 2351, column: 14, scope: !6215)
!6221 = !DILocation(line: 2351, column: 21, scope: !6215)
!6222 = !DILocation(line: 2354, column: 8, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 2354, column: 8)
!6224 = !DILocation(line: 2354, column: 13, scope: !6223)
!6225 = !DILocation(line: 2354, column: 17, scope: !6223)
!6226 = !DILocation(line: 2354, column: 27, scope: !6223)
!6227 = !DILocation(line: 2354, column: 32, scope: !6223)
!6228 = !DILocation(line: 2354, column: 36, scope: !6223)
!6229 = !DILocation(line: 2354, column: 24, scope: !6223)
!6230 = !DILocation(line: 2354, column: 8, scope: !6191)
!6231 = !DILocation(line: 2356, column: 18, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6223, file: !3, line: 2354, column: 44)
!6233 = !DILocation(line: 2356, column: 22, scope: !6232)
!6234 = !DILocation(line: 2356, column: 5, scope: !6232)
!6235 = !DILocation(line: 2357, column: 5, scope: !6232)
!6236 = !DILocation(line: 2357, column: 10, scope: !6232)
!6237 = !DILocation(line: 2357, column: 20, scope: !6232)
!6238 = !DILocation(line: 2359, column: 21, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2359, column: 9)
!6240 = !DILocation(line: 2359, column: 25, scope: !6239)
!6241 = !DILocation(line: 2359, column: 9, scope: !6239)
!6242 = !DILocation(line: 2359, column: 9, scope: !6232)
!6243 = !DILocation(line: 2361, column: 19, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 2359, column: 33)
!6245 = !DILocation(line: 2361, column: 24, scope: !6244)
!6246 = !DILocation(line: 2361, column: 30, scope: !6244)
!6247 = !DILocation(line: 2361, column: 18, scope: !6244)
!6248 = !DILocation(line: 2361, column: 12, scope: !6244)
!6249 = !DILocation(line: 2361, column: 10, scope: !6244)
!6250 = !DILocation(line: 2362, column: 13, scope: !6244)
!6251 = !DILocation(line: 2362, column: 10, scope: !6244)
!6252 = !DILocation(line: 2363, column: 13, scope: !6244)
!6253 = !DILocation(line: 2363, column: 19, scope: !6244)
!6254 = !DILocation(line: 2363, column: 24, scope: !6244)
!6255 = !DILocation(line: 2363, column: 30, scope: !6244)
!6256 = !DILocation(line: 2363, column: 18, scope: !6244)
!6257 = !DILocation(line: 2363, column: 6, scope: !6244)
!6258 = !DILocation(line: 2364, column: 5, scope: !6244)
!6259 = !DILocation(line: 2365, column: 4, scope: !6232)
!6260 = !DILocation(line: 2366, column: 3, scope: !6191)
!6261 = !DILocation(line: 2367, column: 3, scope: !6177)
!6262 = !DILocation(line: 2367, column: 7, scope: !6177)
!6263 = !DILocation(line: 2367, column: 23, scope: !6177)
!6264 = !DILocation(line: 2369, column: 2, scope: !6177)
!6265 = !DILocation(line: 2374, column: 7, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 2374, column: 6)
!6267 = !DILocation(line: 2374, column: 13, scope: !6266)
!6268 = !DILocation(line: 2375, column: 4, scope: !6266)
!6269 = !DILocation(line: 2375, column: 9, scope: !6266)
!6270 = !DILocation(line: 2375, column: 15, scope: !6266)
!6271 = !DILocation(line: 2374, column: 6, scope: !6109)
!6272 = !DILocation(line: 2376, column: 11, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 2375, column: 42)
!6274 = !DILocation(line: 2377, column: 20, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 2377, column: 7)
!6276 = !DILocation(line: 2377, column: 24, scope: !6275)
!6277 = !DILocation(line: 2377, column: 8, scope: !6275)
!6278 = !DILocation(line: 2377, column: 7, scope: !6273)
!6279 = !DILocalVariable(name: "__mptr", scope: !6280, file: !3, line: 2379, type: !138)
!6280 = distinct !DILexicalBlock(scope: !6281, file: !3, line: 2379, column: 10)
!6281 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 2377, column: 32)
!6282 = !DILocation(line: 2379, column: 10, scope: !6280)
!6283 = !DILocation(line: 2379, column: 10, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 2379, column: 10)
!6285 = !DILocation(line: 2379, column: 8, scope: !6281)
!6286 = !DILocation(line: 2382, column: 9, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6281, file: !3, line: 2382, column: 8)
!6288 = !DILocation(line: 2382, column: 8, scope: !6281)
!6289 = !DILocation(line: 2384, column: 22, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 2382, column: 18)
!6291 = !DILocation(line: 2384, column: 27, scope: !6290)
!6292 = !DILocation(line: 2384, column: 32, scope: !6290)
!6293 = !DILocation(line: 2384, column: 5, scope: !6290)
!6294 = !DILocation(line: 2385, column: 11, scope: !6290)
!6295 = !DILocation(line: 2385, column: 16, scope: !6290)
!6296 = !DILocation(line: 2385, column: 20, scope: !6290)
!6297 = !DILocation(line: 2385, column: 29, scope: !6290)
!6298 = !DILocation(line: 2385, column: 34, scope: !6290)
!6299 = !DILocation(line: 2385, column: 38, scope: !6290)
!6300 = !DILocation(line: 2385, column: 27, scope: !6290)
!6301 = !DILocation(line: 2385, column: 9, scope: !6290)
!6302 = !DILocation(line: 2386, column: 9, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 2386, column: 9)
!6304 = !DILocation(line: 2386, column: 15, scope: !6303)
!6305 = !DILocation(line: 2386, column: 19, scope: !6303)
!6306 = !DILocation(line: 2386, column: 22, scope: !6303)
!6307 = !DILocation(line: 2386, column: 13, scope: !6303)
!6308 = !DILocation(line: 2386, column: 9, scope: !6290)
!6309 = !DILocation(line: 2387, column: 12, scope: !6303)
!6310 = !DILocation(line: 2387, column: 16, scope: !6303)
!6311 = !DILocation(line: 2387, column: 19, scope: !6303)
!6312 = !DILocation(line: 2387, column: 10, scope: !6303)
!6313 = !DILocation(line: 2387, column: 6, scope: !6303)
!6314 = !DILocation(line: 2388, column: 24, scope: !6290)
!6315 = !DILocation(line: 2388, column: 5, scope: !6290)
!6316 = !DILocation(line: 2388, column: 10, scope: !6290)
!6317 = !DILocation(line: 2388, column: 14, scope: !6290)
!6318 = !DILocation(line: 2388, column: 21, scope: !6290)
!6319 = !DILocation(line: 2389, column: 9, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 2389, column: 9)
!6321 = !DILocation(line: 2389, column: 14, scope: !6320)
!6322 = !DILocation(line: 2389, column: 18, scope: !6320)
!6323 = !DILocation(line: 2389, column: 28, scope: !6320)
!6324 = !DILocation(line: 2389, column: 33, scope: !6320)
!6325 = !DILocation(line: 2389, column: 37, scope: !6320)
!6326 = !DILocation(line: 2389, column: 25, scope: !6320)
!6327 = !DILocation(line: 2390, column: 6, scope: !6320)
!6328 = !DILocation(line: 2390, column: 10, scope: !6320)
!6329 = !DILocation(line: 2390, column: 17, scope: !6320)
!6330 = !DILocation(line: 2390, column: 21, scope: !6320)
!6331 = !DILocation(line: 2390, column: 24, scope: !6320)
!6332 = !DILocation(line: 2390, column: 14, scope: !6320)
!6333 = !DILocation(line: 2389, column: 9, scope: !6290)
!6334 = !DILocation(line: 2392, column: 19, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 2390, column: 36)
!6336 = !DILocation(line: 2392, column: 23, scope: !6335)
!6337 = !DILocation(line: 2392, column: 6, scope: !6335)
!6338 = !DILocation(line: 2393, column: 5, scope: !6335)
!6339 = !DILocation(line: 2395, column: 4, scope: !6290)
!6340 = !DILocation(line: 2395, column: 15, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 2395, column: 15)
!6342 = !DILocation(line: 2395, column: 19, scope: !6341)
!6343 = !DILocation(line: 2395, column: 23, scope: !6341)
!6344 = !DILocation(line: 2395, column: 28, scope: !6341)
!6345 = !DILocation(line: 2395, column: 15, scope: !6287)
!6346 = !DILocation(line: 2396, column: 5, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 2395, column: 39)
!6348 = !DILocation(line: 2396, column: 5, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 2396, column: 5)
!6350 = !DILocation(line: 2398, column: 9, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 2398, column: 9)
!6352 = !DILocation(line: 2398, column: 14, scope: !6351)
!6353 = !DILocation(line: 2398, column: 9, scope: !6347)
!6354 = !DILocation(line: 2400, column: 6, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 2398, column: 23)
!6356 = !DILocation(line: 2400, column: 11, scope: !6355)
!6357 = !DILocation(line: 2400, column: 21, scope: !6355)
!6358 = !DILocation(line: 2406, column: 10, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 2406, column: 10)
!6360 = !DILocation(line: 2406, column: 22, scope: !6359)
!6361 = !DILocation(line: 2406, column: 25, scope: !6359)
!6362 = !DILocation(line: 2406, column: 30, scope: !6359)
!6363 = !DILocation(line: 2406, column: 34, scope: !6359)
!6364 = !DILocation(line: 2407, column: 8, scope: !6359)
!6365 = !DILocation(line: 2407, column: 12, scope: !6359)
!6366 = !DILocation(line: 2407, column: 15, scope: !6359)
!6367 = !DILocation(line: 2406, column: 41, scope: !6359)
!6368 = !DILocation(line: 2406, column: 10, scope: !6355)
!6369 = !DILocation(line: 2408, column: 7, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 2407, column: 26)
!6371 = !DILocation(line: 2408, column: 12, scope: !6370)
!6372 = !DILocation(line: 2408, column: 21, scope: !6370)
!6373 = !DILocation(line: 2408, column: 28, scope: !6370)
!6374 = !DILocation(line: 2411, column: 6, scope: !6370)
!6375 = !DILocation(line: 2414, column: 13, scope: !6355)
!6376 = !DILocation(line: 2414, column: 18, scope: !6355)
!6377 = !DILocation(line: 2414, column: 28, scope: !6355)
!6378 = !DILocation(line: 2414, column: 32, scope: !6355)
!6379 = !DILocation(line: 2414, column: 38, scope: !6355)
!6380 = !DILocation(line: 2414, column: 27, scope: !6355)
!6381 = !DILocation(line: 2414, column: 6, scope: !6355)
!6382 = !DILocation(line: 2418, column: 7, scope: !6355)
!6383 = !DILocation(line: 2417, column: 6, scope: !6355)
!6384 = !DILocation(line: 2417, column: 11, scope: !6355)
!6385 = !DILocation(line: 2417, column: 20, scope: !6355)
!6386 = !DILocation(line: 2417, column: 27, scope: !6355)
!6387 = !DILocation(line: 2424, column: 19, scope: !6355)
!6388 = !DILocation(line: 2424, column: 23, scope: !6355)
!6389 = !DILocation(line: 2424, column: 29, scope: !6355)
!6390 = !DILocation(line: 2424, column: 18, scope: !6355)
!6391 = !DILocation(line: 2424, column: 12, scope: !6355)
!6392 = !DILocation(line: 2424, column: 10, scope: !6355)
!6393 = !DILocation(line: 2425, column: 10, scope: !6355)
!6394 = !DILocation(line: 2426, column: 13, scope: !6355)
!6395 = !DILocation(line: 2426, column: 19, scope: !6355)
!6396 = !DILocation(line: 2426, column: 23, scope: !6355)
!6397 = !DILocation(line: 2426, column: 29, scope: !6355)
!6398 = !DILocation(line: 2426, column: 18, scope: !6355)
!6399 = !DILocation(line: 2426, column: 6, scope: !6355)
!6400 = !DILocation(line: 2427, column: 5, scope: !6355)
!6401 = !DILocation(line: 2428, column: 4, scope: !6347)
!6402 = !DILocation(line: 2430, column: 3, scope: !6281)
!6403 = !DILocation(line: 2430, column: 15, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 2430, column: 14)
!6405 = !DILocation(line: 2430, column: 23, scope: !6404)
!6406 = !DILocation(line: 2430, column: 26, scope: !6404)
!6407 = !DILocation(line: 2430, column: 30, scope: !6404)
!6408 = !DILocation(line: 2430, column: 14, scope: !6275)
!6409 = !DILocation(line: 2433, column: 6, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 2430, column: 34)
!6411 = !DILocation(line: 2433, column: 11, scope: !6410)
!6412 = !DILocation(line: 2433, column: 17, scope: !6410)
!6413 = !DILocation(line: 2433, column: 5, scope: !6410)
!6414 = !DILocation(line: 2432, column: 10, scope: !6410)
!6415 = !DILocation(line: 2432, column: 8, scope: !6410)
!6416 = !DILocation(line: 2434, column: 11, scope: !6410)
!6417 = !DILocation(line: 2434, column: 8, scope: !6410)
!6418 = !DILocation(line: 2435, column: 11, scope: !6410)
!6419 = !DILocation(line: 2436, column: 6, scope: !6410)
!6420 = !DILocation(line: 2436, column: 11, scope: !6410)
!6421 = !DILocation(line: 2436, column: 17, scope: !6410)
!6422 = !DILocation(line: 2436, column: 5, scope: !6410)
!6423 = !DILocation(line: 2435, column: 4, scope: !6410)
!6424 = !DILocation(line: 2437, column: 3, scope: !6410)
!6425 = !DILocation(line: 2438, column: 2, scope: !6273)
!6426 = !DILocation(line: 2440, column: 9, scope: !6109)
!6427 = !DILocation(line: 2440, column: 17, scope: !6109)
!6428 = !DILocation(line: 2440, column: 21, scope: !6109)
!6429 = !DILocation(line: 2440, column: 27, scope: !6109)
!6430 = !DILocation(line: 2440, column: 16, scope: !6109)
!6431 = !DILocation(line: 2440, column: 2, scope: !6109)
!6432 = !DILabel(scope: !6109, name: "finished", file: !3, line: 2442)
!6433 = !DILocation(line: 2442, column: 1, scope: !6109)
!6434 = !DILocation(line: 2443, column: 9, scope: !6109)
!6435 = !DILocation(line: 2443, column: 2, scope: !6109)
!6436 = distinct !DISubprogram(name: "udc_dev_isr", scope: !3, file: !3, line: 2764, type: !6437, scopeLine: 2767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!6437 = !DISubroutineType(types: !6438)
!6438 = !{!4986, !356, !296}
!6439 = !DILocation(line: 352, column: 51, scope: !4762, inlinedAt: !6440)
!6440 = distinct !DILocation(line: 2948, column: 4, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6442, file: !3, line: 2944, column: 29)
!6442 = distinct !DILexicalBlock(scope: !6443, file: !3, line: 2944, column: 7)
!6443 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 2941, column: 40)
!6444 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 2941, column: 6)
!6445 = !DILocation(line: 392, column: 53, scope: !4769, inlinedAt: !6446)
!6446 = distinct !DILocation(line: 2945, column: 4, scope: !6441)
!6447 = !DILocation(line: 352, column: 51, scope: !4762, inlinedAt: !6448)
!6448 = distinct !DILocation(line: 2905, column: 3, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 2885, column: 40)
!6450 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 2885, column: 6)
!6451 = !DILocation(line: 392, column: 53, scope: !4769, inlinedAt: !6452)
!6452 = distinct !DILocation(line: 2899, column: 3, scope: !6449)
!6453 = !DILocation(line: 352, column: 51, scope: !4762, inlinedAt: !6454)
!6454 = distinct !DILocation(line: 2882, column: 3, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6456, file: !3, line: 2825, column: 40)
!6456 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 2825, column: 6)
!6457 = !DILocation(line: 392, column: 53, scope: !4769, inlinedAt: !6458)
!6458 = distinct !DILocation(line: 2880, column: 3, scope: !6455)
!6459 = !DILocation(line: 352, column: 51, scope: !4762, inlinedAt: !6460)
!6460 = distinct !DILocation(line: 2822, column: 3, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 2776, column: 40)
!6462 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 2776, column: 6)
!6463 = !DILocation(line: 392, column: 53, scope: !4769, inlinedAt: !6464)
!6464 = distinct !DILocation(line: 2820, column: 3, scope: !6461)
!6465 = !DILocalVariable(name: "dev", arg: 1, scope: !6436, file: !3, line: 2764, type: !356)
!6466 = !DILocation(line: 2764, column: 44, scope: !6436)
!6467 = !DILocalVariable(name: "dev_irq", arg: 2, scope: !6436, file: !3, line: 2764, type: !296)
!6468 = !DILocation(line: 2764, column: 53, scope: !6436)
!6469 = !DILocalVariable(name: "ret_val", scope: !6436, file: !3, line: 2768, type: !4986)
!6470 = !DILocation(line: 2768, column: 14, scope: !6436)
!6471 = !DILocalVariable(name: "tmp", scope: !6436, file: !3, line: 2769, type: !296)
!6472 = !DILocation(line: 2769, column: 6, scope: !6436)
!6473 = !DILocalVariable(name: "cfg", scope: !6436, file: !3, line: 2770, type: !296)
!6474 = !DILocation(line: 2770, column: 6, scope: !6436)
!6475 = !DILocalVariable(name: "ep", scope: !6436, file: !3, line: 2771, type: !319)
!6476 = !DILocation(line: 2771, column: 17, scope: !6436)
!6477 = !DILocalVariable(name: "i", scope: !6436, file: !3, line: 2772, type: !1084)
!6478 = !DILocation(line: 2772, column: 6, scope: !6436)
!6479 = !DILocalVariable(name: "udc_csr_epix", scope: !6436, file: !3, line: 2773, type: !271)
!6480 = !DILocation(line: 2773, column: 5, scope: !6436)
!6481 = !DILocation(line: 2776, column: 6, scope: !6462)
!6482 = !DILocation(line: 2776, column: 14, scope: !6462)
!6483 = !DILocation(line: 2776, column: 6, scope: !6436)
!6484 = !DILocation(line: 2777, column: 11, scope: !6461)
!6485 = !DILocation(line: 2780, column: 16, scope: !6461)
!6486 = !DILocation(line: 2780, column: 21, scope: !6461)
!6487 = !DILocation(line: 2780, column: 27, scope: !6461)
!6488 = !DILocation(line: 2780, column: 15, scope: !6461)
!6489 = !DILocation(line: 2780, column: 9, scope: !6461)
!6490 = !DILocation(line: 2780, column: 7, scope: !6461)
!6491 = !DILocation(line: 2781, column: 9, scope: !6461)
!6492 = !DILocation(line: 2781, column: 7, scope: !6461)
!6493 = !DILocation(line: 2783, column: 21, scope: !6461)
!6494 = !DILocation(line: 2783, column: 3, scope: !6461)
!6495 = !DILocation(line: 2783, column: 8, scope: !6461)
!6496 = !DILocation(line: 2783, column: 19, scope: !6461)
!6497 = !DILocation(line: 2784, column: 3, scope: !6461)
!6498 = !DILocation(line: 2784, column: 8, scope: !6461)
!6499 = !DILocation(line: 2784, column: 26, scope: !6461)
!6500 = !DILocation(line: 2787, column: 3, scope: !6461)
!6501 = !DILocation(line: 2788, column: 31, scope: !6461)
!6502 = !DILocation(line: 2789, column: 31, scope: !6461)
!6503 = !DILocation(line: 2789, column: 29, scope: !6461)
!6504 = !DILocation(line: 2792, column: 10, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 2792, column: 3)
!6506 = !DILocation(line: 2792, column: 8, scope: !6505)
!6507 = !DILocation(line: 2792, column: 15, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 2792, column: 3)
!6509 = !DILocation(line: 2792, column: 17, scope: !6508)
!6510 = !DILocation(line: 2792, column: 3, scope: !6505)
!6511 = !DILocation(line: 2793, column: 10, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 2792, column: 36)
!6513 = !DILocation(line: 2793, column: 15, scope: !6512)
!6514 = !DILocation(line: 2793, column: 18, scope: !6512)
!6515 = !DILocation(line: 2793, column: 7, scope: !6512)
!6516 = !DILocation(line: 2794, column: 8, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6512, file: !3, line: 2794, column: 8)
!6518 = !DILocation(line: 2794, column: 12, scope: !6517)
!6519 = !DILocation(line: 2794, column: 8, scope: !6512)
!6520 = !DILocation(line: 2797, column: 20, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 2794, column: 16)
!6522 = !DILocation(line: 2797, column: 24, scope: !6521)
!6523 = !DILocation(line: 2797, column: 18, scope: !6521)
!6524 = !DILocation(line: 2801, column: 4, scope: !6521)
!6525 = !DILocation(line: 2803, column: 20, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 2801, column: 11)
!6527 = !DILocation(line: 2803, column: 24, scope: !6526)
!6528 = !DILocation(line: 2803, column: 28, scope: !6526)
!6529 = !DILocation(line: 2803, column: 18, scope: !6526)
!6530 = !DILocation(line: 2806, column: 17, scope: !6512)
!6531 = !DILocation(line: 2806, column: 22, scope: !6512)
!6532 = !DILocation(line: 2806, column: 27, scope: !6512)
!6533 = !DILocation(line: 2806, column: 30, scope: !6512)
!6534 = !DILocation(line: 2806, column: 16, scope: !6512)
!6535 = !DILocation(line: 2806, column: 10, scope: !6512)
!6536 = !DILocation(line: 2806, column: 8, scope: !6512)
!6537 = !DILocation(line: 2808, column: 10, scope: !6512)
!6538 = !DILocation(line: 2808, column: 8, scope: !6512)
!6539 = !DILocation(line: 2811, column: 11, scope: !6512)
!6540 = !DILocation(line: 2811, column: 17, scope: !6512)
!6541 = !DILocation(line: 2811, column: 22, scope: !6512)
!6542 = !DILocation(line: 2811, column: 27, scope: !6512)
!6543 = !DILocation(line: 2811, column: 30, scope: !6512)
!6544 = !DILocation(line: 2811, column: 16, scope: !6512)
!6545 = !DILocation(line: 2811, column: 4, scope: !6512)
!6546 = !DILocation(line: 2814, column: 4, scope: !6512)
!6547 = !DILocation(line: 2814, column: 8, scope: !6512)
!6548 = !DILocation(line: 2814, column: 15, scope: !6512)
!6549 = !DILocation(line: 2815, column: 17, scope: !6512)
!6550 = !DILocation(line: 2815, column: 21, scope: !6512)
!6551 = !DILocation(line: 2815, column: 27, scope: !6512)
!6552 = !DILocation(line: 2815, column: 16, scope: !6512)
!6553 = !DILocation(line: 2815, column: 10, scope: !6512)
!6554 = !DILocation(line: 2815, column: 8, scope: !6512)
!6555 = !DILocation(line: 2816, column: 10, scope: !6512)
!6556 = !DILocation(line: 2816, column: 14, scope: !6512)
!6557 = !DILocation(line: 2816, column: 8, scope: !6512)
!6558 = !DILocation(line: 2817, column: 11, scope: !6512)
!6559 = !DILocation(line: 2817, column: 17, scope: !6512)
!6560 = !DILocation(line: 2817, column: 21, scope: !6512)
!6561 = !DILocation(line: 2817, column: 27, scope: !6512)
!6562 = !DILocation(line: 2817, column: 16, scope: !6512)
!6563 = !DILocation(line: 2817, column: 4, scope: !6512)
!6564 = !DILocation(line: 2818, column: 3, scope: !6512)
!6565 = !DILocation(line: 2792, column: 32, scope: !6508)
!6566 = !DILocation(line: 2792, column: 3, scope: !6508)
!6567 = distinct !{!6567, !6510, !6568}
!6568 = !DILocation(line: 2818, column: 3, scope: !6505)
!6569 = !DILocation(line: 2820, column: 16, scope: !6461)
!6570 = !DILocation(line: 2820, column: 21, scope: !6461)
!6571 = !DILocation(line: 394, column: 2, scope: !4825, inlinedAt: !6464)
!6572 = !DILocation(line: 394, column: 2, scope: !4828, inlinedAt: !6464)
!6573 = !DILocation(line: 2821, column: 9, scope: !6461)
!6574 = !DILocation(line: 2821, column: 14, scope: !6461)
!6575 = !DILocation(line: 2821, column: 22, scope: !6461)
!6576 = !DILocation(line: 2821, column: 29, scope: !6461)
!6577 = !DILocation(line: 2821, column: 34, scope: !6461)
!6578 = !DILocation(line: 2821, column: 7, scope: !6461)
!6579 = !DILocation(line: 2822, column: 14, scope: !6461)
!6580 = !DILocation(line: 2822, column: 19, scope: !6461)
!6581 = !DILocation(line: 354, column: 2, scope: !4837, inlinedAt: !6460)
!6582 = !DILocation(line: 354, column: 2, scope: !4840, inlinedAt: !6460)
!6583 = !DILocation(line: 2824, column: 2, scope: !6461)
!6584 = !DILocation(line: 2825, column: 6, scope: !6456)
!6585 = !DILocation(line: 2825, column: 14, scope: !6456)
!6586 = !DILocation(line: 2825, column: 6, scope: !6436)
!6587 = !DILocation(line: 2826, column: 11, scope: !6455)
!6588 = !DILocation(line: 2828, column: 3, scope: !6455)
!6589 = !DILocation(line: 2828, column: 8, scope: !6455)
!6590 = !DILocation(line: 2828, column: 26, scope: !6455)
!6591 = !DILocation(line: 2830, column: 16, scope: !6455)
!6592 = !DILocation(line: 2830, column: 21, scope: !6455)
!6593 = !DILocation(line: 2830, column: 27, scope: !6455)
!6594 = !DILocation(line: 2830, column: 15, scope: !6455)
!6595 = !DILocation(line: 2830, column: 9, scope: !6455)
!6596 = !DILocation(line: 2830, column: 7, scope: !6455)
!6597 = !DILocation(line: 2831, column: 18, scope: !6455)
!6598 = !DILocation(line: 2831, column: 3, scope: !6455)
!6599 = !DILocation(line: 2831, column: 8, scope: !6455)
!6600 = !DILocation(line: 2831, column: 16, scope: !6455)
!6601 = !DILocation(line: 2832, column: 19, scope: !6455)
!6602 = !DILocation(line: 2832, column: 3, scope: !6455)
!6603 = !DILocation(line: 2832, column: 8, scope: !6455)
!6604 = !DILocation(line: 2832, column: 17, scope: !6455)
!6605 = !DILocation(line: 2835, column: 3, scope: !6455)
!6606 = !DILocation(line: 2836, column: 31, scope: !6455)
!6607 = !DILocation(line: 2837, column: 35, scope: !6455)
!6608 = !DILocation(line: 2838, column: 31, scope: !6455)
!6609 = !DILocation(line: 2838, column: 29, scope: !6455)
!6610 = !DILocation(line: 2839, column: 31, scope: !6455)
!6611 = !DILocation(line: 2839, column: 29, scope: !6455)
!6612 = !DILocation(line: 2845, column: 10, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 2845, column: 3)
!6614 = !DILocation(line: 2845, column: 8, scope: !6613)
!6615 = !DILocation(line: 2845, column: 15, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 2845, column: 3)
!6617 = !DILocation(line: 2845, column: 17, scope: !6616)
!6618 = !DILocation(line: 2845, column: 3, scope: !6613)
!6619 = !DILocation(line: 2846, column: 10, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6616, file: !3, line: 2845, column: 36)
!6621 = !DILocation(line: 2846, column: 15, scope: !6620)
!6622 = !DILocation(line: 2846, column: 18, scope: !6620)
!6623 = !DILocation(line: 2846, column: 7, scope: !6620)
!6624 = !DILocation(line: 2847, column: 8, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 2847, column: 8)
!6626 = !DILocation(line: 2847, column: 12, scope: !6625)
!6627 = !DILocation(line: 2847, column: 8, scope: !6620)
!6628 = !DILocation(line: 2850, column: 20, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 2847, column: 16)
!6630 = !DILocation(line: 2850, column: 24, scope: !6629)
!6631 = !DILocation(line: 2850, column: 18, scope: !6629)
!6632 = !DILocation(line: 2854, column: 4, scope: !6629)
!6633 = !DILocation(line: 2856, column: 20, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 2854, column: 11)
!6635 = !DILocation(line: 2856, column: 24, scope: !6634)
!6636 = !DILocation(line: 2856, column: 28, scope: !6634)
!6637 = !DILocation(line: 2856, column: 18, scope: !6634)
!6638 = !DILocation(line: 2861, column: 17, scope: !6620)
!6639 = !DILocation(line: 2861, column: 22, scope: !6620)
!6640 = !DILocation(line: 2861, column: 27, scope: !6620)
!6641 = !DILocation(line: 2861, column: 30, scope: !6620)
!6642 = !DILocation(line: 2861, column: 16, scope: !6620)
!6643 = !DILocation(line: 2861, column: 10, scope: !6620)
!6644 = !DILocation(line: 2861, column: 8, scope: !6620)
!6645 = !DILocation(line: 2863, column: 10, scope: !6620)
!6646 = !DILocation(line: 2863, column: 8, scope: !6620)
!6647 = !DILocation(line: 2867, column: 10, scope: !6620)
!6648 = !DILocation(line: 2867, column: 8, scope: !6620)
!6649 = !DILocation(line: 2870, column: 11, scope: !6620)
!6650 = !DILocation(line: 2870, column: 17, scope: !6620)
!6651 = !DILocation(line: 2870, column: 22, scope: !6620)
!6652 = !DILocation(line: 2870, column: 27, scope: !6620)
!6653 = !DILocation(line: 2870, column: 30, scope: !6620)
!6654 = !DILocation(line: 2870, column: 16, scope: !6620)
!6655 = !DILocation(line: 2870, column: 4, scope: !6620)
!6656 = !DILocation(line: 2873, column: 4, scope: !6620)
!6657 = !DILocation(line: 2873, column: 8, scope: !6620)
!6658 = !DILocation(line: 2873, column: 15, scope: !6620)
!6659 = !DILocation(line: 2874, column: 17, scope: !6620)
!6660 = !DILocation(line: 2874, column: 21, scope: !6620)
!6661 = !DILocation(line: 2874, column: 27, scope: !6620)
!6662 = !DILocation(line: 2874, column: 16, scope: !6620)
!6663 = !DILocation(line: 2874, column: 10, scope: !6620)
!6664 = !DILocation(line: 2874, column: 8, scope: !6620)
!6665 = !DILocation(line: 2875, column: 10, scope: !6620)
!6666 = !DILocation(line: 2875, column: 14, scope: !6620)
!6667 = !DILocation(line: 2875, column: 8, scope: !6620)
!6668 = !DILocation(line: 2876, column: 11, scope: !6620)
!6669 = !DILocation(line: 2876, column: 17, scope: !6620)
!6670 = !DILocation(line: 2876, column: 21, scope: !6620)
!6671 = !DILocation(line: 2876, column: 27, scope: !6620)
!6672 = !DILocation(line: 2876, column: 16, scope: !6620)
!6673 = !DILocation(line: 2876, column: 4, scope: !6620)
!6674 = !DILocation(line: 2877, column: 3, scope: !6620)
!6675 = !DILocation(line: 2845, column: 32, scope: !6616)
!6676 = !DILocation(line: 2845, column: 3, scope: !6616)
!6677 = distinct !{!6677, !6618, !6678}
!6678 = !DILocation(line: 2877, column: 3, scope: !6613)
!6679 = !DILocation(line: 2880, column: 16, scope: !6455)
!6680 = !DILocation(line: 2880, column: 21, scope: !6455)
!6681 = !DILocation(line: 394, column: 2, scope: !4825, inlinedAt: !6458)
!6682 = !DILocation(line: 394, column: 2, scope: !4828, inlinedAt: !6458)
!6683 = !DILocation(line: 2881, column: 9, scope: !6455)
!6684 = !DILocation(line: 2881, column: 14, scope: !6455)
!6685 = !DILocation(line: 2881, column: 22, scope: !6455)
!6686 = !DILocation(line: 2881, column: 29, scope: !6455)
!6687 = !DILocation(line: 2881, column: 34, scope: !6455)
!6688 = !DILocation(line: 2881, column: 7, scope: !6455)
!6689 = !DILocation(line: 2882, column: 14, scope: !6455)
!6690 = !DILocation(line: 2882, column: 19, scope: !6455)
!6691 = !DILocation(line: 354, column: 2, scope: !4837, inlinedAt: !6454)
!6692 = !DILocation(line: 354, column: 2, scope: !4840, inlinedAt: !6454)
!6693 = !DILocation(line: 2884, column: 2, scope: !6455)
!6694 = !DILocation(line: 2885, column: 6, scope: !6450)
!6695 = !DILocation(line: 2885, column: 14, scope: !6450)
!6696 = !DILocation(line: 2885, column: 6, scope: !6436)
!6697 = !DILocation(line: 2887, column: 11, scope: !6449)
!6698 = !DILocation(line: 2890, column: 22, scope: !6449)
!6699 = !DILocation(line: 2892, column: 3, scope: !6449)
!6700 = !DILocation(line: 2892, column: 8, scope: !6449)
!6701 = !DILocation(line: 2892, column: 30, scope: !6449)
!6702 = !DILocation(line: 2893, column: 3, scope: !6449)
!6703 = !DILocation(line: 2893, column: 8, scope: !6449)
!6704 = !DILocation(line: 2893, column: 26, scope: !6449)
!6705 = !DILocation(line: 2896, column: 30, scope: !6449)
!6706 = !DILocation(line: 2896, column: 3, scope: !6449)
!6707 = !DILocation(line: 2899, column: 16, scope: !6449)
!6708 = !DILocation(line: 2899, column: 21, scope: !6449)
!6709 = !DILocation(line: 394, column: 2, scope: !4825, inlinedAt: !6452)
!6710 = !DILocation(line: 394, column: 2, scope: !4828, inlinedAt: !6452)
!6711 = !DILocation(line: 2900, column: 7, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 2900, column: 7)
!6713 = !DILocation(line: 2900, column: 12, scope: !6712)
!6714 = !DILocation(line: 2900, column: 26, scope: !6712)
!6715 = !DILocation(line: 2900, column: 29, scope: !6712)
!6716 = !DILocation(line: 2900, column: 34, scope: !6712)
!6717 = !DILocation(line: 2900, column: 42, scope: !6712)
!6718 = !DILocation(line: 2900, column: 7, scope: !6449)
!6719 = !DILocation(line: 2901, column: 4, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 2900, column: 50)
!6721 = !DILocation(line: 2901, column: 9, scope: !6720)
!6722 = !DILocation(line: 2901, column: 17, scope: !6720)
!6723 = !DILocation(line: 2901, column: 25, scope: !6720)
!6724 = !DILocation(line: 2901, column: 30, scope: !6720)
!6725 = !DILocation(line: 2902, column: 4, scope: !6720)
!6726 = !DILocation(line: 2902, column: 9, scope: !6720)
!6727 = !DILocation(line: 2902, column: 23, scope: !6720)
!6728 = !DILocation(line: 2903, column: 3, scope: !6720)
!6729 = !DILocation(line: 2904, column: 25, scope: !6449)
!6730 = !DILocation(line: 2904, column: 30, scope: !6449)
!6731 = !DILocation(line: 2904, column: 38, scope: !6449)
!6732 = !DILocation(line: 2904, column: 43, scope: !6449)
!6733 = !DILocation(line: 2904, column: 3, scope: !6449)
!6734 = !DILocation(line: 2905, column: 14, scope: !6449)
!6735 = !DILocation(line: 2905, column: 19, scope: !6449)
!6736 = !DILocation(line: 354, column: 2, scope: !4837, inlinedAt: !6448)
!6737 = !DILocation(line: 354, column: 2, scope: !4840, inlinedAt: !6448)
!6738 = !DILocation(line: 2908, column: 20, scope: !6449)
!6739 = !DILocation(line: 2908, column: 25, scope: !6449)
!6740 = !DILocation(line: 2908, column: 3, scope: !6449)
!6741 = !DILocation(line: 2909, column: 11, scope: !6449)
!6742 = !DILocation(line: 2909, column: 16, scope: !6449)
!6743 = !DILocation(line: 2909, column: 23, scope: !6449)
!6744 = !DILocation(line: 2909, column: 28, scope: !6449)
!6745 = !DILocation(line: 2909, column: 3, scope: !6449)
!6746 = !DILocation(line: 2912, column: 16, scope: !6449)
!6747 = !DILocation(line: 2912, column: 21, scope: !6449)
!6748 = !DILocation(line: 2912, column: 27, scope: !6449)
!6749 = !DILocation(line: 2912, column: 15, scope: !6449)
!6750 = !DILocation(line: 2912, column: 9, scope: !6449)
!6751 = !DILocation(line: 2912, column: 7, scope: !6449)
!6752 = !DILocation(line: 2913, column: 9, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 2913, column: 7)
!6754 = !DILocation(line: 2913, column: 13, scope: !6753)
!6755 = !DILocation(line: 2914, column: 5, scope: !6753)
!6756 = !DILocation(line: 2914, column: 9, scope: !6753)
!6757 = !DILocation(line: 2913, column: 7, scope: !6449)
!6758 = !DILocation(line: 2915, column: 19, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 2914, column: 44)
!6760 = !DILocation(line: 2915, column: 4, scope: !6759)
!6761 = !DILocation(line: 2916, column: 37, scope: !6759)
!6762 = !DILocation(line: 2917, column: 3, scope: !6759)
!6763 = !DILocation(line: 2925, column: 16, scope: !6449)
!6764 = !DILocation(line: 2925, column: 21, scope: !6449)
!6765 = !DILocation(line: 2925, column: 27, scope: !6449)
!6766 = !DILocation(line: 2925, column: 15, scope: !6449)
!6767 = !DILocation(line: 2925, column: 9, scope: !6449)
!6768 = !DILocation(line: 2925, column: 7, scope: !6449)
!6769 = !DILocation(line: 2926, column: 10, scope: !6449)
!6770 = !DILocation(line: 2926, column: 14, scope: !6449)
!6771 = !DILocation(line: 2926, column: 45, scope: !6449)
!6772 = !DILocation(line: 2926, column: 50, scope: !6449)
!6773 = !DILocation(line: 2926, column: 56, scope: !6449)
!6774 = !DILocation(line: 2926, column: 44, scope: !6449)
!6775 = !DILocation(line: 2926, column: 3, scope: !6449)
!6776 = !DILocation(line: 2927, column: 10, scope: !6449)
!6777 = !DILocation(line: 2927, column: 16, scope: !6449)
!6778 = !DILocation(line: 2927, column: 21, scope: !6449)
!6779 = !DILocation(line: 2927, column: 27, scope: !6449)
!6780 = !DILocation(line: 2927, column: 15, scope: !6449)
!6781 = !DILocation(line: 2927, column: 3, scope: !6449)
!6782 = !DILocation(line: 2930, column: 18, scope: !6449)
!6783 = !DILocation(line: 2930, column: 3, scope: !6449)
!6784 = !DILocation(line: 2933, column: 35, scope: !6449)
!6785 = !DILocation(line: 2933, column: 3, scope: !6449)
!6786 = !DILocation(line: 2936, column: 16, scope: !6449)
!6787 = !DILocation(line: 2936, column: 21, scope: !6449)
!6788 = !DILocation(line: 2936, column: 27, scope: !6449)
!6789 = !DILocation(line: 2936, column: 15, scope: !6449)
!6790 = !DILocation(line: 2936, column: 9, scope: !6449)
!6791 = !DILocation(line: 2936, column: 7, scope: !6449)
!6792 = !DILocation(line: 2937, column: 7, scope: !6449)
!6793 = !DILocation(line: 2938, column: 10, scope: !6449)
!6794 = !DILocation(line: 2938, column: 16, scope: !6449)
!6795 = !DILocation(line: 2938, column: 21, scope: !6449)
!6796 = !DILocation(line: 2938, column: 27, scope: !6449)
!6797 = !DILocation(line: 2938, column: 15, scope: !6449)
!6798 = !DILocation(line: 2938, column: 3, scope: !6449)
!6799 = !DILocation(line: 2940, column: 2, scope: !6449)
!6800 = !DILocation(line: 2941, column: 6, scope: !6444)
!6801 = !DILocation(line: 2941, column: 14, scope: !6444)
!6802 = !DILocation(line: 2941, column: 6, scope: !6436)
!6803 = !DILocation(line: 2943, column: 11, scope: !6443)
!6804 = !DILocation(line: 2944, column: 7, scope: !6442)
!6805 = !DILocation(line: 2944, column: 12, scope: !6442)
!6806 = !DILocation(line: 2944, column: 20, scope: !6442)
!6807 = !DILocation(line: 2944, column: 7, scope: !6443)
!6808 = !DILocation(line: 2945, column: 17, scope: !6441)
!6809 = !DILocation(line: 2945, column: 22, scope: !6441)
!6810 = !DILocation(line: 394, column: 2, scope: !4825, inlinedAt: !6446)
!6811 = !DILocation(line: 394, column: 2, scope: !4828, inlinedAt: !6446)
!6812 = !DILocation(line: 2946, column: 4, scope: !6441)
!6813 = !DILocation(line: 2946, column: 9, scope: !6441)
!6814 = !DILocation(line: 2946, column: 23, scope: !6441)
!6815 = !DILocation(line: 2947, column: 4, scope: !6441)
!6816 = !DILocation(line: 2947, column: 9, scope: !6441)
!6817 = !DILocation(line: 2947, column: 17, scope: !6441)
!6818 = !DILocation(line: 2947, column: 26, scope: !6441)
!6819 = !DILocation(line: 2947, column: 31, scope: !6441)
!6820 = !DILocation(line: 2948, column: 15, scope: !6441)
!6821 = !DILocation(line: 2948, column: 20, scope: !6441)
!6822 = !DILocation(line: 354, column: 2, scope: !4837, inlinedAt: !6440)
!6823 = !DILocation(line: 354, column: 2, scope: !4840, inlinedAt: !6440)
!6824 = !DILocation(line: 2949, column: 3, scope: !6441)
!6825 = !DILocation(line: 2950, column: 2, scope: !6443)
!6826 = !DILocation(line: 2951, column: 6, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 2951, column: 6)
!6828 = !DILocation(line: 2951, column: 14, scope: !6827)
!6829 = !DILocation(line: 2951, column: 6, scope: !6436)
!6830 = !DILocation(line: 2953, column: 11, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 2951, column: 42)
!6832 = !DILocation(line: 2954, column: 37, scope: !6831)
!6833 = !DILocation(line: 2957, column: 20, scope: !6831)
!6834 = !DILocation(line: 2957, column: 25, scope: !6831)
!6835 = !DILocation(line: 2957, column: 3, scope: !6831)
!6836 = !DILocation(line: 2958, column: 11, scope: !6831)
!6837 = !DILocation(line: 2958, column: 16, scope: !6831)
!6838 = !DILocation(line: 2958, column: 23, scope: !6831)
!6839 = !DILocation(line: 2958, column: 28, scope: !6831)
!6840 = !DILocation(line: 2958, column: 3, scope: !6831)
!6841 = !DILocation(line: 2961, column: 23, scope: !6831)
!6842 = !DILocation(line: 2961, column: 3, scope: !6831)
!6843 = !DILocation(line: 2962, column: 3, scope: !6831)
!6844 = !DILocation(line: 2966, column: 30, scope: !6831)
!6845 = !DILocation(line: 2966, column: 3, scope: !6831)
!6846 = !DILocation(line: 2969, column: 29, scope: !6831)
!6847 = !DILocation(line: 2969, column: 3, scope: !6831)
!6848 = !DILocation(line: 2970, column: 2, scope: !6831)
!6849 = !DILocation(line: 2972, column: 6, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 2972, column: 6)
!6851 = !DILocation(line: 2972, column: 14, scope: !6850)
!6852 = !DILocation(line: 2972, column: 6, scope: !6436)
!6853 = !DILocation(line: 2974, column: 11, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 2972, column: 41)
!6855 = !DILocation(line: 2977, column: 16, scope: !6854)
!6856 = !DILocation(line: 2977, column: 21, scope: !6854)
!6857 = !DILocation(line: 2977, column: 27, scope: !6854)
!6858 = !DILocation(line: 2977, column: 15, scope: !6854)
!6859 = !DILocation(line: 2977, column: 9, scope: !6854)
!6860 = !DILocation(line: 2977, column: 7, scope: !6854)
!6861 = !DILocation(line: 2978, column: 9, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 2978, column: 7)
!6863 = !DILocation(line: 2978, column: 13, scope: !6862)
!6864 = !DILocation(line: 2978, column: 7, scope: !6854)
!6865 = !DILocation(line: 2980, column: 17, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 2978, column: 45)
!6867 = !DILocation(line: 2980, column: 22, scope: !6866)
!6868 = !DILocation(line: 2980, column: 28, scope: !6866)
!6869 = !DILocation(line: 2980, column: 16, scope: !6866)
!6870 = !DILocation(line: 2980, column: 10, scope: !6866)
!6871 = !DILocation(line: 2980, column: 8, scope: !6866)
!6872 = !DILocation(line: 2981, column: 8, scope: !6866)
!6873 = !DILocation(line: 2982, column: 11, scope: !6866)
!6874 = !DILocation(line: 2982, column: 17, scope: !6866)
!6875 = !DILocation(line: 2982, column: 22, scope: !6866)
!6876 = !DILocation(line: 2982, column: 28, scope: !6866)
!6877 = !DILocation(line: 2982, column: 16, scope: !6866)
!6878 = !DILocation(line: 2982, column: 4, scope: !6866)
!6879 = !DILocation(line: 2985, column: 19, scope: !6866)
!6880 = !DILocation(line: 2985, column: 4, scope: !6866)
!6881 = !DILocation(line: 2986, column: 3, scope: !6866)
!6882 = !DILocation(line: 2988, column: 2, scope: !6854)
!6883 = !DILocation(line: 2990, column: 9, scope: !6436)
!6884 = !DILocation(line: 2990, column: 2, scope: !6436)
!6885 = distinct !DISubprogram(name: "gadget_release", scope: !3, file: !3, line: 3049, type: !3605, scopeLine: 3050, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !497)
!6886 = !DILocalVariable(name: "pdev", arg: 1, scope: !6885, file: !3, line: 3049, type: !466)
!6887 = !DILocation(line: 3049, column: 36, scope: !6885)
!6888 = !DILocalVariable(name: "dev", scope: !6885, file: !3, line: 3051, type: !6889)
!6889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6890, size: 64)
!6890 = !DICompositeType(tag: DW_TAG_structure_type, name: "amd5536udc", scope: !6885, file: !3, line: 3051, flags: DIFlagFwdDecl)
!6891 = !DILocation(line: 3051, column: 21, scope: !6885)
!6892 = !DILocation(line: 3051, column: 43, scope: !6885)
!6893 = !DILocation(line: 3051, column: 27, scope: !6885)
!6894 = !DILocation(line: 3052, column: 8, scope: !6885)
!6895 = !DILocation(line: 3052, column: 2, scope: !6885)
!6896 = !DILocation(line: 3053, column: 1, scope: !6885)
!6897 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !77, file: !77, line: 655, type: !6898, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!6898 = !DISubroutineType(types: !6899)
!6899 = !{!138, !3834}
!6900 = !DILocalVariable(name: "dev", arg: 1, scope: !6897, file: !77, line: 655, type: !3834)
!6901 = !DILocation(line: 655, column: 58, scope: !6897)
!6902 = !DILocation(line: 657, column: 9, scope: !6897)
!6903 = !DILocation(line: 657, column: 14, scope: !6897)
!6904 = !DILocation(line: 657, column: 2, scope: !6897)
!6905 = distinct !DISubprogram(name: "udc_remove", scope: !3, file: !3, line: 3057, type: !4847, scopeLine: 3058, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !497)
!6906 = !DILocalVariable(name: "dev", arg: 1, scope: !6905, file: !3, line: 3057, type: !356)
!6907 = !DILocation(line: 3057, column: 29, scope: !6905)
!6908 = !DILocation(line: 3060, column: 12, scope: !6905)
!6909 = !DILocation(line: 3061, column: 6, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 3061, column: 6)
!6911 = !DILocation(line: 3061, column: 6, scope: !6905)
!6912 = !DILocation(line: 3062, column: 3, scope: !6910)
!6913 = !DILocation(line: 3063, column: 2, scope: !6905)
!6914 = !DILocation(line: 3065, column: 22, scope: !6905)
!6915 = !DILocation(line: 3066, column: 6, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 3066, column: 6)
!6917 = !DILocation(line: 3066, column: 6, scope: !6905)
!6918 = !DILocation(line: 3067, column: 3, scope: !6916)
!6919 = !DILocation(line: 3068, column: 2, scope: !6905)
!6920 = !DILocation(line: 3069, column: 6, scope: !6905)
!6921 = !DILocation(line: 3070, column: 1, scope: !6905)
!6922 = distinct !DISubprogram(name: "free_dma_pools", scope: !3, file: !3, line: 3074, type: !4847, scopeLine: 3075, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !497)
!6923 = !DILocalVariable(name: "dev", arg: 1, scope: !6922, file: !3, line: 3074, type: !356)
!6924 = !DILocation(line: 3074, column: 33, scope: !6922)
!6925 = !DILocation(line: 3076, column: 16, scope: !6922)
!6926 = !DILocation(line: 3076, column: 21, scope: !6922)
!6927 = !DILocation(line: 3076, column: 35, scope: !6922)
!6928 = !DILocation(line: 3076, column: 40, scope: !6922)
!6929 = !DILocation(line: 3076, column: 58, scope: !6922)
!6930 = !DILocation(line: 3077, column: 9, scope: !6922)
!6931 = !DILocation(line: 3077, column: 14, scope: !6922)
!6932 = !DILocation(line: 3077, column: 32, scope: !6922)
!6933 = !DILocation(line: 3076, column: 2, scope: !6922)
!6934 = !DILocation(line: 3078, column: 16, scope: !6922)
!6935 = !DILocation(line: 3078, column: 21, scope: !6922)
!6936 = !DILocation(line: 3078, column: 35, scope: !6922)
!6937 = !DILocation(line: 3078, column: 40, scope: !6922)
!6938 = !DILocation(line: 3078, column: 58, scope: !6922)
!6939 = !DILocation(line: 3079, column: 9, scope: !6922)
!6940 = !DILocation(line: 3079, column: 14, scope: !6922)
!6941 = !DILocation(line: 3079, column: 32, scope: !6922)
!6942 = !DILocation(line: 3078, column: 2, scope: !6922)
!6943 = !DILocation(line: 3080, column: 19, scope: !6922)
!6944 = !DILocation(line: 3080, column: 24, scope: !6922)
!6945 = !DILocation(line: 3080, column: 2, scope: !6922)
!6946 = !DILocation(line: 3081, column: 19, scope: !6922)
!6947 = !DILocation(line: 3081, column: 24, scope: !6922)
!6948 = !DILocation(line: 3081, column: 2, scope: !6922)
!6949 = !DILocation(line: 3082, column: 1, scope: !6922)
!6950 = distinct !DISubprogram(name: "init_dma_pools", scope: !3, file: !3, line: 3086, type: !4658, scopeLine: 3087, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !497)
!6951 = !DILocalVariable(name: "dev", arg: 1, scope: !6950, file: !3, line: 3086, type: !356)
!6952 = !DILocation(line: 3086, column: 32, scope: !6950)
!6953 = !DILocalVariable(name: "td_stp", scope: !6950, file: !3, line: 3088, type: !341)
!6954 = !DILocation(line: 3088, column: 22, scope: !6950)
!6955 = !DILocalVariable(name: "td_data", scope: !6950, file: !3, line: 3089, type: !292)
!6956 = !DILocation(line: 3089, column: 23, scope: !6950)
!6957 = !DILocalVariable(name: "retval", scope: !6950, file: !3, line: 3090, type: !197)
!6958 = !DILocation(line: 3090, column: 6, scope: !6950)
!6959 = !DILocation(line: 3093, column: 6, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 3093, column: 6)
!6961 = !DILocation(line: 3093, column: 6, scope: !6950)
!6962 = !DILocation(line: 3094, column: 27, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 3093, column: 19)
!6964 = !DILocation(line: 3095, column: 2, scope: !6963)
!6965 = !DILocation(line: 3096, column: 18, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 3095, column: 9)
!6967 = !DILocation(line: 3097, column: 27, scope: !6966)
!6968 = !DILocation(line: 3101, column: 56, scope: !6950)
!6969 = !DILocation(line: 3101, column: 61, scope: !6950)
!6970 = !DILocation(line: 3101, column: 23, scope: !6950)
!6971 = !DILocation(line: 3101, column: 2, scope: !6950)
!6972 = !DILocation(line: 3101, column: 7, scope: !6950)
!6973 = !DILocation(line: 3101, column: 21, scope: !6950)
!6974 = !DILocation(line: 3103, column: 7, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 3103, column: 6)
!6976 = !DILocation(line: 3103, column: 12, scope: !6975)
!6977 = !DILocation(line: 3103, column: 6, scope: !6950)
!6978 = !DILocation(line: 3105, column: 3, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6975, file: !3, line: 3103, column: 27)
!6980 = !DILocation(line: 3109, column: 31, scope: !6950)
!6981 = !DILocation(line: 3109, column: 36, scope: !6950)
!6982 = !DILocation(line: 3109, column: 42, scope: !6950)
!6983 = !DILocation(line: 3109, column: 2, scope: !6950)
!6984 = !DILocation(line: 3109, column: 7, scope: !6950)
!6985 = !DILocation(line: 3109, column: 24, scope: !6950)
!6986 = !DILocation(line: 3109, column: 28, scope: !6950)
!6987 = !DILocation(line: 3112, column: 56, scope: !6950)
!6988 = !DILocation(line: 3112, column: 61, scope: !6950)
!6989 = !DILocation(line: 3112, column: 22, scope: !6950)
!6990 = !DILocation(line: 3112, column: 2, scope: !6950)
!6991 = !DILocation(line: 3112, column: 7, scope: !6950)
!6992 = !DILocation(line: 3112, column: 20, scope: !6950)
!6993 = !DILocation(line: 3114, column: 7, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 3114, column: 6)
!6995 = !DILocation(line: 3114, column: 12, scope: !6994)
!6996 = !DILocation(line: 3114, column: 6, scope: !6950)
!6997 = !DILocation(line: 3116, column: 10, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 3114, column: 26)
!6999 = !DILocation(line: 3117, column: 3, scope: !6998)
!7000 = !DILocation(line: 3120, column: 26, scope: !6950)
!7001 = !DILocation(line: 3120, column: 31, scope: !6950)
!7002 = !DILocation(line: 3121, column: 6, scope: !6950)
!7003 = !DILocation(line: 3121, column: 11, scope: !6950)
!7004 = !DILocation(line: 3121, column: 29, scope: !6950)
!7005 = !DILocation(line: 3120, column: 11, scope: !6950)
!7006 = !DILocation(line: 3120, column: 9, scope: !6950)
!7007 = !DILocation(line: 3122, column: 7, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 3122, column: 6)
!7009 = !DILocation(line: 3122, column: 6, scope: !6950)
!7010 = !DILocation(line: 3123, column: 10, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 3122, column: 15)
!7012 = !DILocation(line: 3124, column: 3, scope: !7011)
!7013 = !DILocation(line: 3126, column: 34, scope: !6950)
!7014 = !DILocation(line: 3126, column: 2, scope: !6950)
!7015 = !DILocation(line: 3126, column: 7, scope: !6950)
!7016 = !DILocation(line: 3126, column: 25, scope: !6950)
!7017 = !DILocation(line: 3126, column: 32, scope: !6950)
!7018 = !DILocation(line: 3129, column: 27, scope: !6950)
!7019 = !DILocation(line: 3129, column: 32, scope: !6950)
!7020 = !DILocation(line: 3130, column: 6, scope: !6950)
!7021 = !DILocation(line: 3130, column: 11, scope: !6950)
!7022 = !DILocation(line: 3130, column: 29, scope: !6950)
!7023 = !DILocation(line: 3129, column: 12, scope: !6950)
!7024 = !DILocation(line: 3129, column: 10, scope: !6950)
!7025 = !DILocation(line: 3131, column: 7, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 3131, column: 6)
!7027 = !DILocation(line: 3131, column: 6, scope: !6950)
!7028 = !DILocation(line: 3132, column: 10, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 3131, column: 16)
!7030 = !DILocation(line: 3133, column: 3, scope: !7029)
!7031 = !DILocation(line: 3135, column: 30, scope: !6950)
!7032 = !DILocation(line: 3135, column: 2, scope: !6950)
!7033 = !DILocation(line: 3135, column: 7, scope: !6950)
!7034 = !DILocation(line: 3135, column: 25, scope: !6950)
!7035 = !DILocation(line: 3135, column: 28, scope: !6950)
!7036 = !DILocation(line: 3136, column: 2, scope: !6950)
!7037 = !DILabel(scope: !6950, name: "err_alloc_phys", file: !3, line: 3138)
!7038 = !DILocation(line: 3138, column: 1, scope: !6950)
!7039 = !DILocation(line: 3139, column: 16, scope: !6950)
!7040 = !DILocation(line: 3139, column: 21, scope: !6950)
!7041 = !DILocation(line: 3139, column: 35, scope: !6950)
!7042 = !DILocation(line: 3139, column: 40, scope: !6950)
!7043 = !DILocation(line: 3139, column: 58, scope: !6950)
!7044 = !DILocation(line: 3140, column: 9, scope: !6950)
!7045 = !DILocation(line: 3140, column: 14, scope: !6950)
!7046 = !DILocation(line: 3140, column: 32, scope: !6950)
!7047 = !DILocation(line: 3139, column: 2, scope: !6950)
!7048 = !DILabel(scope: !6950, name: "err_alloc_dma", file: !3, line: 3141)
!7049 = !DILocation(line: 3141, column: 1, scope: !6950)
!7050 = !DILocation(line: 3142, column: 19, scope: !6950)
!7051 = !DILocation(line: 3142, column: 24, scope: !6950)
!7052 = !DILocation(line: 3142, column: 2, scope: !6950)
!7053 = !DILocation(line: 3143, column: 2, scope: !6950)
!7054 = !DILocation(line: 3143, column: 7, scope: !6950)
!7055 = !DILocation(line: 3143, column: 20, scope: !6950)
!7056 = !DILabel(scope: !6950, name: "err_create_dma_pool", file: !3, line: 3144)
!7057 = !DILocation(line: 3144, column: 1, scope: !6950)
!7058 = !DILocation(line: 3145, column: 19, scope: !6950)
!7059 = !DILocation(line: 3145, column: 24, scope: !6950)
!7060 = !DILocation(line: 3145, column: 2, scope: !6950)
!7061 = !DILocation(line: 3146, column: 2, scope: !6950)
!7062 = !DILocation(line: 3146, column: 7, scope: !6950)
!7063 = !DILocation(line: 3146, column: 21, scope: !6950)
!7064 = !DILocation(line: 3147, column: 9, scope: !6950)
!7065 = !DILocation(line: 3147, column: 2, scope: !6950)
!7066 = !DILocation(line: 3148, column: 1, scope: !6950)
!7067 = distinct !DISubprogram(name: "udc_probe", scope: !3, file: !3, line: 3152, type: !4658, scopeLine: 3153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7068 = !DILocalVariable(name: "dev", arg: 1, scope: !7067, file: !3, line: 3152, type: !356)
!7069 = !DILocation(line: 3152, column: 27, scope: !7067)
!7070 = !DILocalVariable(name: "tmp", scope: !7067, file: !3, line: 3154, type: !3987)
!7071 = !DILocation(line: 3154, column: 8, scope: !7067)
!7072 = !DILocalVariable(name: "reg", scope: !7067, file: !3, line: 3155, type: !296)
!7073 = !DILocation(line: 3155, column: 7, scope: !7067)
!7074 = !DILocalVariable(name: "retval", scope: !7067, file: !3, line: 3156, type: !197)
!7075 = !DILocation(line: 3156, column: 7, scope: !7067)
!7076 = !DILocation(line: 3159, column: 2, scope: !7067)
!7077 = !DILocation(line: 3159, column: 7, scope: !7067)
!7078 = !DILocation(line: 3159, column: 14, scope: !7067)
!7079 = !DILocation(line: 3159, column: 18, scope: !7067)
!7080 = !DILocation(line: 3161, column: 16, scope: !7067)
!7081 = !DILocation(line: 3161, column: 21, scope: !7067)
!7082 = !DILocation(line: 3161, column: 28, scope: !7067)
!7083 = !DILocation(line: 3161, column: 2, scope: !7067)
!7084 = !DILocation(line: 3162, column: 2, scope: !7067)
!7085 = !DILocation(line: 3162, column: 7, scope: !7067)
!7086 = !DILocation(line: 3162, column: 14, scope: !7067)
!7087 = !DILocation(line: 3162, column: 19, scope: !7067)
!7088 = !DILocation(line: 3163, column: 2, scope: !7067)
!7089 = !DILocation(line: 3163, column: 7, scope: !7067)
!7090 = !DILocation(line: 3163, column: 14, scope: !7067)
!7091 = !DILocation(line: 3163, column: 24, scope: !7067)
!7092 = !DILocation(line: 3166, column: 20, scope: !7067)
!7093 = !DILocation(line: 3166, column: 2, scope: !7067)
!7094 = !DILocation(line: 3168, column: 2, scope: !7067)
!7095 = !DILocation(line: 3170, column: 11, scope: !7067)
!7096 = !DILocation(line: 3170, column: 35, scope: !7067)
!7097 = !DILocation(line: 3170, column: 40, scope: !7067)
!7098 = !DILocation(line: 3170, column: 2, scope: !7067)
!7099 = !DILocation(line: 3173, column: 6, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 3173, column: 6)
!7101 = !DILocation(line: 3173, column: 11, scope: !7100)
!7102 = !DILocation(line: 3173, column: 19, scope: !7100)
!7103 = !DILocation(line: 3173, column: 35, scope: !7100)
!7104 = !DILocation(line: 3174, column: 6, scope: !7100)
!7105 = !DILocation(line: 3174, column: 11, scope: !7100)
!7106 = !DILocation(line: 3174, column: 19, scope: !7100)
!7107 = !DILocation(line: 3173, column: 6, scope: !7067)
!7108 = !DILocation(line: 3175, column: 3, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 3174, column: 36)
!7110 = !DILocation(line: 3179, column: 10, scope: !7109)
!7111 = !DILocation(line: 3179, column: 3, scope: !7109)
!7112 = !DILocation(line: 3180, column: 7, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7109, file: !3, line: 3180, column: 7)
!7114 = !DILocation(line: 3180, column: 12, scope: !7113)
!7115 = !DILocation(line: 3180, column: 20, scope: !7113)
!7116 = !DILocation(line: 3180, column: 7, scope: !7109)
!7117 = !DILocation(line: 3181, column: 4, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7113, file: !3, line: 3180, column: 37)
!7119 = !DILocation(line: 3182, column: 11, scope: !7118)
!7120 = !DILocation(line: 3183, column: 4, scope: !7118)
!7121 = !DILocation(line: 3185, column: 3, scope: !7109)
!7122 = !DILocation(line: 3187, column: 2, scope: !7109)
!7123 = !DILocation(line: 3189, column: 8, scope: !7067)
!7124 = !DILocation(line: 3189, column: 6, scope: !7067)
!7125 = !DILocation(line: 3191, column: 38, scope: !7067)
!7126 = !DILocation(line: 3191, column: 43, scope: !7067)
!7127 = !DILocation(line: 3191, column: 49, scope: !7067)
!7128 = !DILocation(line: 3191, column: 54, scope: !7067)
!7129 = !DILocation(line: 3191, column: 11, scope: !7067)
!7130 = !DILocation(line: 3191, column: 9, scope: !7067)
!7131 = !DILocation(line: 3193, column: 6, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 3193, column: 6)
!7133 = !DILocation(line: 3193, column: 6, scope: !7067)
!7134 = !DILocation(line: 3194, column: 3, scope: !7132)
!7135 = !DILocation(line: 3197, column: 2, scope: !7067)
!7136 = !DILocation(line: 3198, column: 2, scope: !7067)
!7137 = !DILocation(line: 3201, column: 15, scope: !7067)
!7138 = !DILocation(line: 3201, column: 20, scope: !7067)
!7139 = !DILocation(line: 3201, column: 26, scope: !7067)
!7140 = !DILocation(line: 3201, column: 14, scope: !7067)
!7141 = !DILocation(line: 3201, column: 8, scope: !7067)
!7142 = !DILocation(line: 3201, column: 6, scope: !7067)
!7143 = !DILocation(line: 3202, column: 6, scope: !7067)
!7144 = !DILocation(line: 3203, column: 9, scope: !7067)
!7145 = !DILocation(line: 3203, column: 15, scope: !7067)
!7146 = !DILocation(line: 3203, column: 20, scope: !7067)
!7147 = !DILocation(line: 3203, column: 26, scope: !7067)
!7148 = !DILocation(line: 3203, column: 14, scope: !7067)
!7149 = !DILocation(line: 3203, column: 2, scope: !7067)
!7150 = !DILocation(line: 3206, column: 13, scope: !7067)
!7151 = !DILocation(line: 3206, column: 2, scope: !7067)
!7152 = !DILocation(line: 3208, column: 2, scope: !7067)
!7153 = !DILabel(scope: !7067, name: "finished", file: !3, line: 3210)
!7154 = !DILocation(line: 3210, column: 1, scope: !7067)
!7155 = !DILocation(line: 3211, column: 9, scope: !7067)
!7156 = !DILocation(line: 3211, column: 2, scope: !7067)
!7157 = !DILocation(line: 3212, column: 1, scope: !7067)
!7158 = distinct !DISubprogram(name: "startup_registers", scope: !3, file: !3, line: 1498, type: !4658, scopeLine: 1499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7159 = !DILocalVariable(name: "dev", arg: 1, scope: !7158, file: !3, line: 1498, type: !356)
!7160 = !DILocation(line: 1498, column: 42, scope: !7158)
!7161 = !DILocalVariable(name: "tmp", scope: !7158, file: !3, line: 1500, type: !296)
!7162 = !DILocation(line: 1500, column: 6, scope: !7158)
!7163 = !DILocation(line: 1503, column: 17, scope: !7158)
!7164 = !DILocation(line: 1503, column: 2, scope: !7158)
!7165 = !DILocation(line: 1506, column: 29, scope: !7158)
!7166 = !DILocation(line: 1506, column: 2, scope: !7158)
!7167 = !DILocation(line: 1509, column: 17, scope: !7158)
!7168 = !DILocation(line: 1509, column: 2, scope: !7158)
!7169 = !DILocation(line: 1511, column: 22, scope: !7158)
!7170 = !DILocation(line: 1511, column: 2, scope: !7158)
!7171 = !DILocation(line: 1514, column: 15, scope: !7158)
!7172 = !DILocation(line: 1514, column: 20, scope: !7158)
!7173 = !DILocation(line: 1514, column: 26, scope: !7158)
!7174 = !DILocation(line: 1514, column: 14, scope: !7158)
!7175 = !DILocation(line: 1514, column: 8, scope: !7158)
!7176 = !DILocation(line: 1514, column: 6, scope: !7158)
!7177 = !DILocation(line: 1515, column: 6, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 1515, column: 6)
!7179 = !DILocation(line: 1515, column: 6, scope: !7158)
!7180 = !DILocation(line: 1516, column: 9, scope: !7178)
!7181 = !DILocation(line: 1516, column: 7, scope: !7178)
!7182 = !DILocation(line: 1516, column: 3, scope: !7178)
!7183 = !DILocation(line: 1518, column: 9, scope: !7178)
!7184 = !DILocation(line: 1518, column: 7, scope: !7178)
!7185 = !DILocation(line: 1519, column: 9, scope: !7158)
!7186 = !DILocation(line: 1519, column: 15, scope: !7158)
!7187 = !DILocation(line: 1519, column: 20, scope: !7158)
!7188 = !DILocation(line: 1519, column: 26, scope: !7158)
!7189 = !DILocation(line: 1519, column: 14, scope: !7158)
!7190 = !DILocation(line: 1519, column: 2, scope: !7158)
!7191 = !DILocation(line: 1521, column: 2, scope: !7158)
!7192 = distinct !DISubprogram(name: "udc_timer_function", scope: !3, file: !3, line: 1729, type: !3695, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7193 = !DILocalVariable(name: "lock", arg: 1, scope: !7194, file: !4763, line: 402, type: !1287)
!7194 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !4763, file: !4763, line: 402, type: !4764, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7195 = !DILocation(line: 402, column: 57, scope: !7194, inlinedAt: !7196)
!7196 = distinct !DILocation(line: 1772, column: 2, scope: !7192)
!7197 = !DILocalVariable(name: "lock", arg: 1, scope: !7198, file: !4763, line: 377, type: !1287)
!7198 = distinct !DISubprogram(name: "spin_lock_irq", scope: !4763, file: !4763, line: 377, type: !4764, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7199 = !DILocation(line: 377, column: 55, scope: !7198, inlinedAt: !7200)
!7200 = distinct !DILocation(line: 1733, column: 2, scope: !7192)
!7201 = !DILocalVariable(name: "unused", arg: 1, scope: !7192, file: !3, line: 1729, type: !3697)
!7202 = !DILocation(line: 1729, column: 51, scope: !7192)
!7203 = !DILocalVariable(name: "tmp", scope: !7192, file: !3, line: 1731, type: !296)
!7204 = !DILocation(line: 1731, column: 6, scope: !7192)
!7205 = !DILocation(line: 379, column: 2, scope: !7206, inlinedAt: !7200)
!7206 = distinct !DILexicalBlock(scope: !7207, file: !4763, line: 379, column: 2)
!7207 = distinct !DILexicalBlock(scope: !7198, file: !4763, line: 379, column: 2)
!7208 = !DILocation(line: 379, column: 2, scope: !7209, inlinedAt: !7200)
!7209 = distinct !DILexicalBlock(scope: !7207, file: !4763, line: 379, column: 2)
!7210 = !{i32 -2145398238}
!7211 = !DILocation(line: 379, column: 2, scope: !7212, inlinedAt: !7200)
!7212 = distinct !DILexicalBlock(scope: !7209, file: !4763, line: 379, column: 2)
!7213 = !DILocation(line: 1735, column: 6, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 1735, column: 6)
!7215 = !DILocation(line: 1735, column: 14, scope: !7214)
!7216 = !DILocation(line: 1735, column: 6, scope: !7192)
!7217 = !DILocation(line: 1740, column: 7, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7219, file: !3, line: 1740, column: 7)
!7219 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 1735, column: 19)
!7220 = !DILocation(line: 1740, column: 15, scope: !7218)
!7221 = !DILocation(line: 1740, column: 7, scope: !7219)
!7222 = !DILocation(line: 1742, column: 17, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 1740, column: 20)
!7224 = !DILocation(line: 1742, column: 22, scope: !7223)
!7225 = !DILocation(line: 1742, column: 28, scope: !7223)
!7226 = !DILocation(line: 1742, column: 16, scope: !7223)
!7227 = !DILocation(line: 1742, column: 10, scope: !7223)
!7228 = !DILocation(line: 1742, column: 8, scope: !7223)
!7229 = !DILocation(line: 1743, column: 8, scope: !7223)
!7230 = !DILocation(line: 1744, column: 11, scope: !7223)
!7231 = !DILocation(line: 1744, column: 17, scope: !7223)
!7232 = !DILocation(line: 1744, column: 22, scope: !7223)
!7233 = !DILocation(line: 1744, column: 28, scope: !7223)
!7234 = !DILocation(line: 1744, column: 16, scope: !7223)
!7235 = !DILocation(line: 1744, column: 4, scope: !7223)
!7236 = !DILocation(line: 1745, column: 12, scope: !7223)
!7237 = !DILocation(line: 1746, column: 3, scope: !7223)
!7238 = !DILocation(line: 1746, column: 21, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 1746, column: 14)
!7240 = !DILocation(line: 1746, column: 26, scope: !7239)
!7241 = !DILocation(line: 1746, column: 32, scope: !7239)
!7242 = !DILocation(line: 1746, column: 20, scope: !7239)
!7243 = !DILocation(line: 1746, column: 14, scope: !7239)
!7244 = !DILocation(line: 1747, column: 5, scope: !7239)
!7245 = !DILocation(line: 1746, column: 14, scope: !7218)
!7246 = !DILocation(line: 1752, column: 24, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 1747, column: 41)
!7248 = !DILocation(line: 1752, column: 32, scope: !7247)
!7249 = !DILocation(line: 1752, column: 22, scope: !7247)
!7250 = !DILocation(line: 1753, column: 9, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7247, file: !3, line: 1753, column: 8)
!7252 = !DILocation(line: 1753, column: 8, scope: !7247)
!7253 = !DILocation(line: 1754, column: 5, scope: !7251)
!7254 = !DILocation(line: 1755, column: 3, scope: !7247)
!7255 = !DILocation(line: 1763, column: 11, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 1755, column: 10)
!7257 = !DILocation(line: 1765, column: 24, scope: !7256)
!7258 = !DILocation(line: 1765, column: 32, scope: !7256)
!7259 = !DILocation(line: 1765, column: 22, scope: !7256)
!7260 = !DILocation(line: 1766, column: 9, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 1766, column: 8)
!7262 = !DILocation(line: 1766, column: 8, scope: !7256)
!7263 = !DILocation(line: 1767, column: 5, scope: !7261)
!7264 = !DILocation(line: 1770, column: 2, scope: !7219)
!7265 = !DILocation(line: 1771, column: 11, scope: !7214)
!7266 = !DILocation(line: 404, column: 2, scope: !7267, inlinedAt: !7196)
!7267 = distinct !DILexicalBlock(scope: !7268, file: !4763, line: 404, column: 2)
!7268 = distinct !DILexicalBlock(scope: !7194, file: !4763, line: 404, column: 2)
!7269 = !DILocation(line: 404, column: 2, scope: !7270, inlinedAt: !7196)
!7270 = distinct !DILexicalBlock(scope: !7268, file: !4763, line: 404, column: 2)
!7271 = !{i32 -2145396490}
!7272 = !DILocation(line: 404, column: 2, scope: !7273, inlinedAt: !7196)
!7273 = distinct !DILexicalBlock(scope: !7270, file: !4763, line: 404, column: 2)
!7274 = !DILocation(line: 1773, column: 6, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 1773, column: 6)
!7276 = !DILocation(line: 1773, column: 6, scope: !7192)
!7277 = !DILocation(line: 1774, column: 3, scope: !7275)
!7278 = !DILocation(line: 1776, column: 1, scope: !7192)
!7279 = distinct !DISubprogram(name: "udc_pollstall_timer_function", scope: !3, file: !3, line: 1809, type: !3695, scopeLine: 1810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7280 = !DILocation(line: 402, column: 57, scope: !7194, inlinedAt: !7281)
!7281 = distinct !DILocation(line: 1836, column: 2, scope: !7279)
!7282 = !DILocation(line: 377, column: 55, scope: !7198, inlinedAt: !7283)
!7283 = distinct !DILocation(line: 1814, column: 2, scope: !7279)
!7284 = !DILocalVariable(name: "unused", arg: 1, scope: !7279, file: !3, line: 1809, type: !3697)
!7285 = !DILocation(line: 1809, column: 61, scope: !7279)
!7286 = !DILocalVariable(name: "ep", scope: !7279, file: !3, line: 1811, type: !319)
!7287 = !DILocation(line: 1811, column: 17, scope: !7279)
!7288 = !DILocalVariable(name: "halted", scope: !7279, file: !3, line: 1812, type: !197)
!7289 = !DILocation(line: 1812, column: 6, scope: !7279)
!7290 = !DILocation(line: 379, column: 2, scope: !7206, inlinedAt: !7283)
!7291 = !DILocation(line: 379, column: 2, scope: !7209, inlinedAt: !7283)
!7292 = !DILocation(line: 379, column: 2, scope: !7212, inlinedAt: !7283)
!7293 = !DILocation(line: 1819, column: 8, scope: !7279)
!7294 = !DILocation(line: 1819, column: 13, scope: !7279)
!7295 = !DILocation(line: 1819, column: 5, scope: !7279)
!7296 = !DILocation(line: 1820, column: 24, scope: !7279)
!7297 = !DILocation(line: 1820, column: 2, scope: !7279)
!7298 = !DILocation(line: 1821, column: 6, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 1821, column: 6)
!7300 = !DILocation(line: 1821, column: 10, scope: !7299)
!7301 = !DILocation(line: 1821, column: 6, scope: !7279)
!7302 = !DILocation(line: 1822, column: 10, scope: !7299)
!7303 = !DILocation(line: 1822, column: 3, scope: !7299)
!7304 = !DILocation(line: 1824, column: 8, scope: !7279)
!7305 = !DILocation(line: 1824, column: 13, scope: !7279)
!7306 = !DILocation(line: 1824, column: 5, scope: !7279)
!7307 = !DILocation(line: 1825, column: 24, scope: !7279)
!7308 = !DILocation(line: 1825, column: 2, scope: !7279)
!7309 = !DILocation(line: 1826, column: 6, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 1826, column: 6)
!7311 = !DILocation(line: 1826, column: 10, scope: !7310)
!7312 = !DILocation(line: 1826, column: 6, scope: !7279)
!7313 = !DILocation(line: 1827, column: 10, scope: !7310)
!7314 = !DILocation(line: 1827, column: 3, scope: !7310)
!7315 = !DILocation(line: 1830, column: 7, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 1830, column: 6)
!7317 = !DILocation(line: 1830, column: 28, scope: !7316)
!7318 = !DILocation(line: 1830, column: 31, scope: !7316)
!7319 = !DILocation(line: 1830, column: 6, scope: !7279)
!7320 = !DILocation(line: 1831, column: 33, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 1830, column: 39)
!7322 = !DILocation(line: 1831, column: 41, scope: !7321)
!7323 = !DILocation(line: 1831, column: 31, scope: !7321)
!7324 = !DILocation(line: 1834, column: 3, scope: !7321)
!7325 = !DILocation(line: 1835, column: 2, scope: !7321)
!7326 = !DILocation(line: 404, column: 2, scope: !7267, inlinedAt: !7281)
!7327 = !DILocation(line: 404, column: 2, scope: !7270, inlinedAt: !7281)
!7328 = !DILocation(line: 404, column: 2, scope: !7273, inlinedAt: !7281)
!7329 = !DILocation(line: 1838, column: 6, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 1838, column: 6)
!7331 = !DILocation(line: 1838, column: 6, scope: !7279)
!7332 = !DILocation(line: 1839, column: 3, scope: !7330)
!7333 = !DILocation(line: 1840, column: 1, scope: !7279)
!7334 = distinct !DISubprogram(name: "print_regs", scope: !3, file: !3, line: 188, type: !4847, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7335 = !DILocalVariable(name: "dev", arg: 1, scope: !7334, file: !3, line: 188, type: !356)
!7336 = !DILocation(line: 188, column: 36, scope: !7334)
!7337 = !DILocation(line: 202, column: 6, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 202, column: 6)
!7339 = !DILocation(line: 202, column: 14, scope: !7338)
!7340 = !DILocation(line: 202, column: 17, scope: !7338)
!7341 = !DILocation(line: 202, column: 29, scope: !7338)
!7342 = !DILocation(line: 202, column: 33, scope: !7338)
!7343 = !DILocation(line: 202, column: 6, scope: !7334)
!7344 = !DILocation(line: 205, column: 3, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 202, column: 49)
!7346 = !DILocation(line: 206, column: 2, scope: !7345)
!7347 = !DILocation(line: 206, column: 13, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 206, column: 13)
!7349 = !DILocation(line: 206, column: 21, scope: !7348)
!7350 = !DILocation(line: 206, column: 24, scope: !7348)
!7351 = !DILocation(line: 206, column: 36, scope: !7348)
!7352 = !DILocation(line: 206, column: 39, scope: !7348)
!7353 = !DILocation(line: 206, column: 13, scope: !7338)
!7354 = !DILocation(line: 209, column: 3, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 206, column: 55)
!7356 = !DILocation(line: 210, column: 2, scope: !7355)
!7357 = !DILocation(line: 211, column: 6, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 211, column: 6)
!7359 = !DILocation(line: 211, column: 14, scope: !7358)
!7360 = !DILocation(line: 211, column: 17, scope: !7358)
!7361 = !DILocation(line: 211, column: 6, scope: !7334)
!7362 = !DILocation(line: 213, column: 3, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 211, column: 42)
!7364 = !DILocation(line: 214, column: 2, scope: !7363)
!7365 = !DILocation(line: 215, column: 7, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 215, column: 6)
!7367 = !DILocation(line: 215, column: 6, scope: !7334)
!7368 = !DILocation(line: 216, column: 3, scope: !7366)
!7369 = !DILocation(line: 218, column: 1, scope: !7334)
!7370 = distinct !DISubprogram(name: "list_del_init", scope: !4744, file: !4744, line: 202, type: !7371, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7371 = !DISubroutineType(types: !7372)
!7372 = !{null, !250}
!7373 = !DILocalVariable(name: "entry", arg: 1, scope: !7370, file: !4744, line: 202, type: !250)
!7374 = !DILocation(line: 202, column: 52, scope: !7370)
!7375 = !DILocation(line: 204, column: 19, scope: !7370)
!7376 = !DILocation(line: 204, column: 2, scope: !7370)
!7377 = !DILocation(line: 205, column: 17, scope: !7370)
!7378 = !DILocation(line: 205, column: 2, scope: !7370)
!7379 = !DILocation(line: 206, column: 1, scope: !7370)
!7380 = distinct !DISubprogram(name: "__list_del_entry", scope: !4744, file: !4744, line: 130, type: !7371, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7381 = !DILocalVariable(name: "entry", arg: 1, scope: !7380, file: !4744, line: 130, type: !250)
!7382 = !DILocation(line: 130, column: 55, scope: !7380)
!7383 = !DILocation(line: 132, column: 30, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7380, file: !4744, line: 132, column: 6)
!7385 = !DILocation(line: 132, column: 7, scope: !7384)
!7386 = !DILocation(line: 132, column: 6, scope: !7380)
!7387 = !DILocation(line: 133, column: 3, scope: !7384)
!7388 = !DILocation(line: 135, column: 13, scope: !7380)
!7389 = !DILocation(line: 135, column: 20, scope: !7380)
!7390 = !DILocation(line: 135, column: 26, scope: !7380)
!7391 = !DILocation(line: 135, column: 33, scope: !7380)
!7392 = !DILocation(line: 135, column: 2, scope: !7380)
!7393 = !DILocation(line: 136, column: 1, scope: !7380)
!7394 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !4744, file: !4744, line: 33, type: !7371, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7395 = !DILocalVariable(name: "list", arg: 1, scope: !7394, file: !4744, line: 33, type: !250)
!7396 = !DILocation(line: 33, column: 53, scope: !7394)
!7397 = !DILocation(line: 35, column: 2, scope: !7394)
!7398 = !DILocation(line: 35, column: 2, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7394, file: !4744, line: 35, column: 2)
!7400 = !DILocation(line: 35, column: 2, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7399, file: !4744, line: 35, column: 2)
!7402 = !DILocation(line: 35, column: 2, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7399, file: !4744, line: 35, column: 2)
!7404 = !DILocation(line: 36, column: 15, scope: !7394)
!7405 = !DILocation(line: 36, column: 2, scope: !7394)
!7406 = !DILocation(line: 36, column: 8, scope: !7394)
!7407 = !DILocation(line: 36, column: 13, scope: !7394)
!7408 = !DILocation(line: 37, column: 1, scope: !7394)
!7409 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !4744, file: !4744, line: 51, type: !7410, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7410 = !DISubroutineType(types: !7411)
!7411 = !{!262, !250}
!7412 = !DILocalVariable(name: "entry", arg: 1, scope: !7409, file: !4744, line: 51, type: !250)
!7413 = !DILocation(line: 51, column: 61, scope: !7409)
!7414 = !DILocation(line: 53, column: 2, scope: !7409)
!7415 = distinct !DISubprogram(name: "__list_del", scope: !4744, file: !4744, line: 110, type: !7416, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7416 = !DISubroutineType(types: !7417)
!7417 = !{null, !250, !250}
!7418 = !DILocalVariable(name: "prev", arg: 1, scope: !7415, file: !4744, line: 110, type: !250)
!7419 = !DILocation(line: 110, column: 50, scope: !7415)
!7420 = !DILocalVariable(name: "next", arg: 2, scope: !7415, file: !4744, line: 110, type: !250)
!7421 = !DILocation(line: 110, column: 75, scope: !7415)
!7422 = !DILocation(line: 112, column: 15, scope: !7415)
!7423 = !DILocation(line: 112, column: 2, scope: !7415)
!7424 = !DILocation(line: 112, column: 8, scope: !7415)
!7425 = !DILocation(line: 112, column: 13, scope: !7415)
!7426 = !DILocation(line: 113, column: 2, scope: !7415)
!7427 = !DILocation(line: 113, column: 2, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7415, file: !4744, line: 113, column: 2)
!7429 = !DILocation(line: 113, column: 2, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7428, file: !4744, line: 113, column: 2)
!7431 = !DILocation(line: 113, column: 2, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7428, file: !4744, line: 113, column: 2)
!7433 = !DILocation(line: 114, column: 1, scope: !7415)
!7434 = distinct !DISubprogram(name: "hlist_unhashed_lockless", scope: !4744, file: !4744, line: 819, type: !7435, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7435 = !DISubroutineType(types: !7436)
!7436 = !{!197, !7437}
!7437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7438, size: 64)
!7438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !315)
!7439 = !DILocalVariable(name: "h", arg: 1, scope: !7434, file: !4744, line: 819, type: !7437)
!7440 = !DILocation(line: 819, column: 68, scope: !7434)
!7441 = !DILocation(line: 821, column: 10, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7434, file: !4744, line: 821, column: 10)
!7443 = !DILocation(line: 821, column: 10, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7442, file: !4744, line: 821, column: 10)
!7445 = !DILocation(line: 821, column: 9, scope: !7434)
!7446 = !DILocation(line: 821, column: 2, scope: !7434)
!7447 = distinct !DISubprogram(name: "list_add_tail", scope: !4744, file: !4744, line: 98, type: !7416, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7448 = !DILocalVariable(name: "new", arg: 1, scope: !7447, file: !4744, line: 98, type: !250)
!7449 = !DILocation(line: 98, column: 52, scope: !7447)
!7450 = !DILocalVariable(name: "head", arg: 2, scope: !7447, file: !4744, line: 98, type: !250)
!7451 = !DILocation(line: 98, column: 75, scope: !7447)
!7452 = !DILocation(line: 100, column: 13, scope: !7447)
!7453 = !DILocation(line: 100, column: 18, scope: !7447)
!7454 = !DILocation(line: 100, column: 24, scope: !7447)
!7455 = !DILocation(line: 100, column: 30, scope: !7447)
!7456 = !DILocation(line: 100, column: 2, scope: !7447)
!7457 = !DILocation(line: 101, column: 1, scope: !7447)
!7458 = distinct !DISubprogram(name: "__list_add", scope: !4744, file: !4744, line: 63, type: !7459, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7459 = !DISubroutineType(types: !7460)
!7460 = !{null, !250, !250, !250}
!7461 = !DILocalVariable(name: "new", arg: 1, scope: !7458, file: !4744, line: 63, type: !250)
!7462 = !DILocation(line: 63, column: 49, scope: !7458)
!7463 = !DILocalVariable(name: "prev", arg: 2, scope: !7458, file: !4744, line: 64, type: !250)
!7464 = !DILocation(line: 64, column: 28, scope: !7458)
!7465 = !DILocalVariable(name: "next", arg: 3, scope: !7458, file: !4744, line: 65, type: !250)
!7466 = !DILocation(line: 65, column: 28, scope: !7458)
!7467 = !DILocation(line: 67, column: 24, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7458, file: !4744, line: 67, column: 6)
!7469 = !DILocation(line: 67, column: 29, scope: !7468)
!7470 = !DILocation(line: 67, column: 35, scope: !7468)
!7471 = !DILocation(line: 67, column: 7, scope: !7468)
!7472 = !DILocation(line: 67, column: 6, scope: !7458)
!7473 = !DILocation(line: 68, column: 3, scope: !7468)
!7474 = !DILocation(line: 70, column: 15, scope: !7458)
!7475 = !DILocation(line: 70, column: 2, scope: !7458)
!7476 = !DILocation(line: 70, column: 8, scope: !7458)
!7477 = !DILocation(line: 70, column: 13, scope: !7458)
!7478 = !DILocation(line: 71, column: 14, scope: !7458)
!7479 = !DILocation(line: 71, column: 2, scope: !7458)
!7480 = !DILocation(line: 71, column: 7, scope: !7458)
!7481 = !DILocation(line: 71, column: 12, scope: !7458)
!7482 = !DILocation(line: 72, column: 14, scope: !7458)
!7483 = !DILocation(line: 72, column: 2, scope: !7458)
!7484 = !DILocation(line: 72, column: 7, scope: !7458)
!7485 = !DILocation(line: 72, column: 12, scope: !7458)
!7486 = !DILocation(line: 73, column: 2, scope: !7458)
!7487 = !DILocation(line: 73, column: 2, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7458, file: !4744, line: 73, column: 2)
!7489 = !DILocation(line: 73, column: 2, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7488, file: !4744, line: 73, column: 2)
!7491 = !DILocation(line: 73, column: 2, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7488, file: !4744, line: 73, column: 2)
!7493 = !DILocation(line: 74, column: 1, scope: !7458)
!7494 = distinct !DISubprogram(name: "__list_add_valid", scope: !4744, file: !4744, line: 45, type: !7495, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7495 = !DISubroutineType(types: !7496)
!7496 = !{!262, !250, !250, !250}
!7497 = !DILocalVariable(name: "new", arg: 1, scope: !7494, file: !4744, line: 45, type: !250)
!7498 = !DILocation(line: 45, column: 55, scope: !7494)
!7499 = !DILocalVariable(name: "prev", arg: 2, scope: !7494, file: !4744, line: 46, type: !250)
!7500 = !DILocation(line: 46, column: 23, scope: !7494)
!7501 = !DILocalVariable(name: "next", arg: 3, scope: !7494, file: !4744, line: 47, type: !250)
!7502 = !DILocation(line: 47, column: 23, scope: !7494)
!7503 = !DILocation(line: 49, column: 2, scope: !7494)
!7504 = distinct !DISubprogram(name: "udc_rxfifo_read_dwords", scope: !3, file: !3, line: 684, type: !7505, scopeLine: 685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7505 = !DISubroutineType(types: !7506)
!7506 = !{!197, !356, !336, !197}
!7507 = !DILocalVariable(name: "dev", arg: 1, scope: !7504, file: !3, line: 684, type: !356)
!7508 = !DILocation(line: 684, column: 47, scope: !7504)
!7509 = !DILocalVariable(name: "buf", arg: 2, scope: !7504, file: !3, line: 684, type: !336)
!7510 = !DILocation(line: 684, column: 57, scope: !7504)
!7511 = !DILocalVariable(name: "dwords", arg: 3, scope: !7504, file: !3, line: 684, type: !197)
!7512 = !DILocation(line: 684, column: 66, scope: !7504)
!7513 = !DILocalVariable(name: "i", scope: !7504, file: !3, line: 686, type: !197)
!7514 = !DILocation(line: 686, column: 6, scope: !7504)
!7515 = !DILocation(line: 688, column: 2, scope: !7504)
!7516 = !DILocation(line: 688, column: 2, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 688, column: 2)
!7518 = !DILocation(line: 690, column: 9, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 690, column: 2)
!7520 = !DILocation(line: 690, column: 7, scope: !7519)
!7521 = !DILocation(line: 690, column: 14, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 690, column: 2)
!7523 = !DILocation(line: 690, column: 18, scope: !7522)
!7524 = !DILocation(line: 690, column: 16, scope: !7522)
!7525 = !DILocation(line: 690, column: 2, scope: !7519)
!7526 = !DILocation(line: 691, column: 22, scope: !7522)
!7527 = !DILocation(line: 691, column: 27, scope: !7522)
!7528 = !DILocation(line: 691, column: 16, scope: !7522)
!7529 = !DILocation(line: 691, column: 5, scope: !7522)
!7530 = !DILocation(line: 691, column: 11, scope: !7522)
!7531 = !DILocation(line: 691, column: 9, scope: !7522)
!7532 = !DILocation(line: 691, column: 14, scope: !7522)
!7533 = !DILocation(line: 691, column: 3, scope: !7522)
!7534 = !DILocation(line: 690, column: 27, scope: !7522)
!7535 = !DILocation(line: 690, column: 2, scope: !7522)
!7536 = distinct !{!7536, !7525, !7537}
!7537 = !DILocation(line: 691, column: 33, scope: !7519)
!7538 = !DILocation(line: 692, column: 2, scope: !7504)
!7539 = distinct !DISubprogram(name: "udc_ep0_set_rde", scope: !3, file: !3, line: 2054, type: !4847, scopeLine: 2055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7540 = !DILocalVariable(name: "dev", arg: 1, scope: !7539, file: !3, line: 2054, type: !356)
!7541 = !DILocation(line: 2054, column: 41, scope: !7539)
!7542 = !DILocation(line: 2056, column: 6, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 2056, column: 6)
!7544 = !DILocation(line: 2056, column: 6, scope: !7539)
!7545 = !DILocation(line: 2061, column: 8, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 2061, column: 7)
!7547 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 2056, column: 15)
!7548 = !DILocation(line: 2061, column: 13, scope: !7546)
!7549 = !DILocation(line: 2061, column: 29, scope: !7546)
!7550 = !DILocation(line: 2061, column: 32, scope: !7546)
!7551 = !DILocation(line: 2061, column: 37, scope: !7546)
!7552 = !DILocation(line: 2061, column: 7, scope: !7547)
!7553 = !DILocation(line: 2062, column: 16, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 2061, column: 53)
!7555 = !DILocation(line: 2062, column: 4, scope: !7554)
!7556 = !DILocation(line: 2063, column: 3, scope: !7554)
!7557 = !DILocation(line: 2068, column: 8, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 2068, column: 8)
!7559 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 2063, column: 10)
!7560 = !DILocation(line: 2068, column: 16, scope: !7558)
!7561 = !DILocation(line: 2068, column: 21, scope: !7558)
!7562 = !DILocation(line: 2068, column: 25, scope: !7558)
!7563 = !DILocation(line: 2068, column: 8, scope: !7559)
!7564 = !DILocation(line: 2070, column: 6, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7558, file: !3, line: 2068, column: 52)
!7566 = !DILocation(line: 2070, column: 14, scope: !7565)
!7567 = !DILocation(line: 2069, column: 23, scope: !7565)
!7568 = !DILocation(line: 2071, column: 13, scope: !7565)
!7569 = !DILocation(line: 2072, column: 10, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 2072, column: 9)
!7571 = !DILocation(line: 2072, column: 9, scope: !7565)
!7572 = !DILocation(line: 2073, column: 6, scope: !7570)
!7573 = !DILocation(line: 2074, column: 4, scope: !7565)
!7574 = !DILocation(line: 2076, column: 2, scope: !7547)
!7575 = !DILocation(line: 2077, column: 1, scope: !7539)
!7576 = distinct !DISubprogram(name: "udc_set_halt", scope: !3, file: !3, line: 1309, type: !241, scopeLine: 1310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7577 = !DILocalVariable(name: "lock", arg: 1, scope: !7578, file: !4763, line: 407, type: !1287)
!7578 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !4763, file: !4763, line: 407, type: !7579, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7579 = !DISubroutineType(types: !7580)
!7580 = !{null, !1287, !163}
!7581 = !DILocation(line: 407, column: 64, scope: !7578, inlinedAt: !7582)
!7582 = distinct !DILocation(line: 1366, column: 2, scope: !7576)
!7583 = !DILocalVariable(name: "flags", arg: 2, scope: !7578, file: !4763, line: 407, type: !163)
!7584 = !DILocation(line: 407, column: 84, scope: !7578, inlinedAt: !7582)
!7585 = !DILocalVariable(name: "lock", arg: 1, scope: !7586, file: !4763, line: 327, type: !1287)
!7586 = distinct !DISubprogram(name: "spinlock_check", scope: !4763, file: !4763, line: 327, type: !7587, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7587 = !DISubroutineType(types: !7588)
!7588 = !{!7589, !1287}
!7589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!7590 = !DILocation(line: 327, column: 67, scope: !7586, inlinedAt: !7591)
!7591 = distinct !DILocation(line: 1327, column: 2, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 1327, column: 2)
!7593 = distinct !DILexicalBlock(scope: !7594, file: !3, line: 1327, column: 2)
!7594 = distinct !DILexicalBlock(scope: !7595, file: !3, line: 1327, column: 2)
!7595 = distinct !DILexicalBlock(scope: !7596, file: !3, line: 1327, column: 2)
!7596 = distinct !DILexicalBlock(scope: !7576, file: !3, line: 1327, column: 2)
!7597 = !DILocalVariable(name: "usbep", arg: 1, scope: !7576, file: !3, line: 1309, type: !180)
!7598 = !DILocation(line: 1309, column: 29, scope: !7576)
!7599 = !DILocalVariable(name: "halt", arg: 2, scope: !7576, file: !3, line: 1309, type: !197)
!7600 = !DILocation(line: 1309, column: 40, scope: !7576)
!7601 = !DILocalVariable(name: "ep", scope: !7576, file: !3, line: 1311, type: !319)
!7602 = !DILocation(line: 1311, column: 17, scope: !7576)
!7603 = !DILocalVariable(name: "tmp", scope: !7576, file: !3, line: 1312, type: !296)
!7604 = !DILocation(line: 1312, column: 6, scope: !7576)
!7605 = !DILocalVariable(name: "iflags", scope: !7576, file: !3, line: 1313, type: !163)
!7606 = !DILocation(line: 1313, column: 16, scope: !7576)
!7607 = !DILocalVariable(name: "retval", scope: !7576, file: !3, line: 1314, type: !197)
!7608 = !DILocation(line: 1314, column: 6, scope: !7576)
!7609 = !DILocation(line: 1316, column: 7, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7576, file: !3, line: 1316, column: 6)
!7611 = !DILocation(line: 1316, column: 6, scope: !7576)
!7612 = !DILocation(line: 1317, column: 3, scope: !7610)
!7613 = !DILocation(line: 1319, column: 2, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7615, file: !3, line: 1319, column: 2)
!7615 = distinct !DILexicalBlock(scope: !7576, file: !3, line: 1319, column: 2)
!7616 = !DILocation(line: 1319, column: 2, scope: !7615)
!7617 = !DILocalVariable(name: "__mptr", scope: !7618, file: !3, line: 1321, type: !138)
!7618 = distinct !DILexicalBlock(scope: !7576, file: !3, line: 1321, column: 7)
!7619 = !DILocation(line: 1321, column: 7, scope: !7618)
!7620 = !DILocation(line: 1321, column: 7, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7618, file: !3, line: 1321, column: 7)
!7622 = !DILocation(line: 1321, column: 5, scope: !7576)
!7623 = !DILocation(line: 1322, column: 7, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7576, file: !3, line: 1322, column: 6)
!7625 = !DILocation(line: 1322, column: 11, scope: !7624)
!7626 = !DILocation(line: 1322, column: 14, scope: !7624)
!7627 = !DILocation(line: 1322, column: 19, scope: !7624)
!7628 = !DILocation(line: 1322, column: 23, scope: !7624)
!7629 = !DILocation(line: 1322, column: 27, scope: !7624)
!7630 = !DILocation(line: 1322, column: 31, scope: !7624)
!7631 = !DILocation(line: 1322, column: 36, scope: !7624)
!7632 = !DILocation(line: 1322, column: 39, scope: !7624)
!7633 = !DILocation(line: 1322, column: 43, scope: !7624)
!7634 = !DILocation(line: 1322, column: 47, scope: !7624)
!7635 = !DILocation(line: 1322, column: 6, scope: !7576)
!7636 = !DILocation(line: 1323, column: 3, scope: !7624)
!7637 = !DILocation(line: 1324, column: 7, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7576, file: !3, line: 1324, column: 6)
!7639 = !DILocation(line: 1324, column: 11, scope: !7638)
!7640 = !DILocation(line: 1324, column: 16, scope: !7638)
!7641 = !DILocation(line: 1324, column: 23, scope: !7638)
!7642 = !DILocation(line: 1324, column: 26, scope: !7638)
!7643 = !DILocation(line: 1324, column: 30, scope: !7638)
!7644 = !DILocation(line: 1324, column: 35, scope: !7638)
!7645 = !DILocation(line: 1324, column: 42, scope: !7638)
!7646 = !DILocation(line: 1324, column: 48, scope: !7638)
!7647 = !DILocation(line: 1324, column: 6, scope: !7576)
!7648 = !DILocation(line: 1325, column: 3, scope: !7638)
!7649 = !DILocation(line: 1327, column: 2, scope: !7576)
!7650 = !DILocation(line: 1327, column: 2, scope: !7596)
!7651 = !DILocalVariable(name: "__dummy", scope: !7652, file: !3, line: 1327, type: !163)
!7652 = distinct !DILexicalBlock(scope: !7595, file: !3, line: 1327, column: 2)
!7653 = !DILocation(line: 1327, column: 2, scope: !7652)
!7654 = !DILocalVariable(name: "__dummy2", scope: !7652, file: !3, line: 1327, type: !163)
!7655 = !DILocation(line: 1327, column: 2, scope: !7595)
!7656 = !DILocation(line: 1327, column: 2, scope: !7594)
!7657 = !DILocation(line: 1327, column: 2, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7594, file: !3, line: 1327, column: 2)
!7659 = !DILocalVariable(name: "__dummy", scope: !7660, file: !3, line: 1327, type: !163)
!7660 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 1327, column: 2)
!7661 = distinct !DILexicalBlock(scope: !7658, file: !3, line: 1327, column: 2)
!7662 = !DILocation(line: 1327, column: 2, scope: !7660)
!7663 = !DILocalVariable(name: "__dummy2", scope: !7660, file: !3, line: 1327, type: !163)
!7664 = !DILocation(line: 1327, column: 2, scope: !7661)
!7665 = !DILocation(line: 1327, column: 2, scope: !7593)
!7666 = !{i32 -2141454095}
!7667 = !DILocation(line: 329, column: 10, scope: !7586, inlinedAt: !7591)
!7668 = !DILocation(line: 329, column: 16, scope: !7586, inlinedAt: !7591)
!7669 = !DILocation(line: 1327, column: 2, scope: !7592)
!7670 = !DILocation(line: 1329, column: 6, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7576, file: !3, line: 1329, column: 6)
!7672 = !DILocation(line: 1329, column: 6, scope: !7576)
!7673 = !DILocation(line: 1330, column: 7, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 1330, column: 7)
!7675 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 1329, column: 12)
!7676 = !DILocation(line: 1330, column: 11, scope: !7674)
!7677 = !DILocation(line: 1330, column: 15, scope: !7674)
!7678 = !DILocation(line: 1330, column: 7, scope: !7675)
!7679 = !DILocation(line: 1331, column: 4, scope: !7674)
!7680 = !DILocation(line: 1331, column: 8, scope: !7674)
!7681 = !DILocation(line: 1331, column: 13, scope: !7674)
!7682 = !DILocation(line: 1331, column: 25, scope: !7674)
!7683 = !DILocation(line: 1337, column: 17, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 1332, column: 8)
!7685 = !DILocation(line: 1337, column: 21, scope: !7684)
!7686 = !DILocation(line: 1337, column: 27, scope: !7684)
!7687 = !DILocation(line: 1337, column: 16, scope: !7684)
!7688 = !DILocation(line: 1337, column: 10, scope: !7684)
!7689 = !DILocation(line: 1337, column: 8, scope: !7684)
!7690 = !DILocation(line: 1338, column: 8, scope: !7684)
!7691 = !DILocation(line: 1339, column: 11, scope: !7684)
!7692 = !DILocation(line: 1339, column: 17, scope: !7684)
!7693 = !DILocation(line: 1339, column: 21, scope: !7684)
!7694 = !DILocation(line: 1339, column: 27, scope: !7684)
!7695 = !DILocation(line: 1339, column: 16, scope: !7684)
!7696 = !DILocation(line: 1339, column: 4, scope: !7684)
!7697 = !DILocation(line: 1340, column: 4, scope: !7684)
!7698 = !DILocation(line: 1340, column: 8, scope: !7684)
!7699 = !DILocation(line: 1340, column: 15, scope: !7684)
!7700 = !DILocation(line: 1343, column: 9, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 1343, column: 8)
!7702 = !DILocation(line: 1343, column: 8, scope: !7684)
!7703 = !DILocation(line: 1344, column: 35, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 1343, column: 46)
!7705 = !DILocation(line: 1344, column: 43, scope: !7704)
!7706 = !DILocation(line: 1344, column: 33, scope: !7704)
!7707 = !DILocation(line: 1347, column: 10, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7704, file: !3, line: 1347, column: 9)
!7709 = !DILocation(line: 1347, column: 9, scope: !7704)
!7710 = !DILocation(line: 1349, column: 6, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 1347, column: 32)
!7712 = !DILocation(line: 1350, column: 5, scope: !7711)
!7713 = !DILocation(line: 1351, column: 4, scope: !7704)
!7714 = !DILocation(line: 1353, column: 2, scope: !7675)
!7715 = !DILocation(line: 1355, column: 7, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 1355, column: 7)
!7717 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 1353, column: 9)
!7718 = !DILocation(line: 1355, column: 11, scope: !7716)
!7719 = !DILocation(line: 1355, column: 7, scope: !7717)
!7720 = !DILocation(line: 1356, column: 17, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7716, file: !3, line: 1355, column: 19)
!7722 = !DILocation(line: 1356, column: 21, scope: !7721)
!7723 = !DILocation(line: 1356, column: 27, scope: !7721)
!7724 = !DILocation(line: 1356, column: 16, scope: !7721)
!7725 = !DILocation(line: 1356, column: 10, scope: !7721)
!7726 = !DILocation(line: 1356, column: 8, scope: !7721)
!7727 = !DILocation(line: 1358, column: 10, scope: !7721)
!7728 = !DILocation(line: 1358, column: 14, scope: !7721)
!7729 = !DILocation(line: 1358, column: 8, scope: !7721)
!7730 = !DILocation(line: 1360, column: 8, scope: !7721)
!7731 = !DILocation(line: 1361, column: 11, scope: !7721)
!7732 = !DILocation(line: 1361, column: 17, scope: !7721)
!7733 = !DILocation(line: 1361, column: 21, scope: !7721)
!7734 = !DILocation(line: 1361, column: 27, scope: !7721)
!7735 = !DILocation(line: 1361, column: 16, scope: !7721)
!7736 = !DILocation(line: 1361, column: 4, scope: !7721)
!7737 = !DILocation(line: 1362, column: 4, scope: !7721)
!7738 = !DILocation(line: 1362, column: 8, scope: !7721)
!7739 = !DILocation(line: 1362, column: 15, scope: !7721)
!7740 = !DILocation(line: 1363, column: 19, scope: !7721)
!7741 = !DILocation(line: 1363, column: 23, scope: !7721)
!7742 = !DILocation(line: 1363, column: 27, scope: !7721)
!7743 = !DILocation(line: 1363, column: 4, scope: !7721)
!7744 = !DILocation(line: 1364, column: 3, scope: !7721)
!7745 = !DILocation(line: 1366, column: 46, scope: !7576)
!7746 = !DILocalVariable(name: "__dummy", scope: !7747, file: !4763, line: 409, type: !163)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !4763, line: 409, column: 2)
!7748 = distinct !DILexicalBlock(scope: !7578, file: !4763, line: 409, column: 2)
!7749 = !DILocation(line: 409, column: 2, scope: !7747, inlinedAt: !7582)
!7750 = !DILocalVariable(name: "__dummy2", scope: !7747, file: !4763, line: 409, type: !163)
!7751 = !DILocalVariable(name: "__dummy", scope: !7752, file: !4763, line: 409, type: !163)
!7752 = distinct !DILexicalBlock(scope: !7753, file: !4763, line: 409, column: 2)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !4763, line: 409, column: 2)
!7754 = distinct !DILexicalBlock(scope: !7755, file: !4763, line: 409, column: 2)
!7755 = distinct !DILexicalBlock(scope: !7748, file: !4763, line: 409, column: 2)
!7756 = !DILocation(line: 409, column: 2, scope: !7752, inlinedAt: !7582)
!7757 = !DILocalVariable(name: "__dummy2", scope: !7752, file: !4763, line: 409, type: !163)
!7758 = !DILocation(line: 409, column: 2, scope: !7753, inlinedAt: !7582)
!7759 = !DILocation(line: 409, column: 2, scope: !7760, inlinedAt: !7582)
!7760 = distinct !DILexicalBlock(scope: !7755, file: !4763, line: 409, column: 2)
!7761 = !{i32 -2145395446}
!7762 = !DILocation(line: 409, column: 2, scope: !7763, inlinedAt: !7582)
!7763 = distinct !DILexicalBlock(scope: !7760, file: !4763, line: 409, column: 2)
!7764 = !DILocation(line: 1367, column: 9, scope: !7576)
!7765 = !DILocation(line: 1367, column: 2, scope: !7576)
!7766 = !DILocation(line: 1368, column: 1, scope: !7576)
!7767 = distinct !DISubprogram(name: "UDC_QUEUE_CNAK", scope: !3, file: !3, line: 310, type: !7768, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7768 = !DISubroutineType(types: !7769)
!7769 = !{null, !319, !7}
!7770 = !DILocalVariable(name: "ep", arg: 1, scope: !7767, file: !3, line: 310, type: !319)
!7771 = !DILocation(line: 310, column: 43, scope: !7767)
!7772 = !DILocalVariable(name: "num", arg: 2, scope: !7767, file: !3, line: 310, type: !7)
!7773 = !DILocation(line: 310, column: 56, scope: !7767)
!7774 = !DILocation(line: 312, column: 13, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 312, column: 6)
!7776 = !DILocation(line: 312, column: 17, scope: !7775)
!7777 = !DILocation(line: 312, column: 23, scope: !7775)
!7778 = !DILocation(line: 312, column: 12, scope: !7775)
!7779 = !DILocation(line: 312, column: 6, scope: !7775)
!7780 = !DILocation(line: 312, column: 28, scope: !7775)
!7781 = !DILocation(line: 312, column: 6, scope: !7767)
!7782 = !DILocation(line: 314, column: 25, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 312, column: 54)
!7784 = !DILocation(line: 314, column: 21, scope: !7783)
!7785 = !DILocation(line: 314, column: 16, scope: !7783)
!7786 = !DILocation(line: 315, column: 3, scope: !7783)
!7787 = !DILocation(line: 315, column: 7, scope: !7783)
!7788 = !DILocation(line: 315, column: 14, scope: !7783)
!7789 = !DILocation(line: 316, column: 2, scope: !7783)
!7790 = !DILocation(line: 317, column: 18, scope: !7775)
!7791 = !DILocation(line: 317, column: 42, scope: !7775)
!7792 = !DILocation(line: 317, column: 38, scope: !7775)
!7793 = !DILocation(line: 317, column: 34, scope: !7775)
!7794 = !DILocation(line: 317, column: 31, scope: !7775)
!7795 = !DILocation(line: 317, column: 16, scope: !7775)
!7796 = !DILocation(line: 318, column: 1, scope: !7767)
!7797 = distinct !DISubprogram(name: "udc_process_cnak_queue", scope: !3, file: !3, line: 2022, type: !4847, scopeLine: 2023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7798 = !DILocalVariable(name: "dev", arg: 1, scope: !7797, file: !3, line: 2022, type: !356)
!7799 = !DILocation(line: 2022, column: 48, scope: !7797)
!7800 = !DILocalVariable(name: "tmp", scope: !7797, file: !3, line: 2024, type: !296)
!7801 = !DILocation(line: 2024, column: 6, scope: !7797)
!7802 = !DILocalVariable(name: "reg", scope: !7797, file: !3, line: 2025, type: !296)
!7803 = !DILocation(line: 2025, column: 6, scope: !7797)
!7804 = !DILocation(line: 2029, column: 11, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 2029, column: 2)
!7806 = !DILocation(line: 2029, column: 7, scope: !7805)
!7807 = !DILocation(line: 2029, column: 16, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7805, file: !3, line: 2029, column: 2)
!7809 = !DILocation(line: 2029, column: 20, scope: !7808)
!7810 = !DILocation(line: 2029, column: 2, scope: !7805)
!7811 = !DILocation(line: 2030, column: 7, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 2030, column: 7)
!7813 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 2029, column: 48)
!7814 = !DILocation(line: 2030, column: 28, scope: !7812)
!7815 = !DILocation(line: 2030, column: 25, scope: !7812)
!7816 = !DILocation(line: 2030, column: 20, scope: !7812)
!7817 = !DILocation(line: 2030, column: 7, scope: !7813)
!7818 = !DILocation(line: 2033, column: 17, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7812, file: !3, line: 2030, column: 34)
!7820 = !DILocation(line: 2033, column: 22, scope: !7819)
!7821 = !DILocation(line: 2033, column: 25, scope: !7819)
!7822 = !DILocation(line: 2033, column: 30, scope: !7819)
!7823 = !DILocation(line: 2033, column: 36, scope: !7819)
!7824 = !DILocation(line: 2033, column: 16, scope: !7819)
!7825 = !DILocation(line: 2033, column: 10, scope: !7819)
!7826 = !DILocation(line: 2033, column: 8, scope: !7819)
!7827 = !DILocation(line: 2034, column: 8, scope: !7819)
!7828 = !DILocation(line: 2035, column: 11, scope: !7819)
!7829 = !DILocation(line: 2035, column: 17, scope: !7819)
!7830 = !DILocation(line: 2035, column: 22, scope: !7819)
!7831 = !DILocation(line: 2035, column: 25, scope: !7819)
!7832 = !DILocation(line: 2035, column: 30, scope: !7819)
!7833 = !DILocation(line: 2035, column: 36, scope: !7819)
!7834 = !DILocation(line: 2035, column: 16, scope: !7819)
!7835 = !DILocation(line: 2035, column: 4, scope: !7819)
!7836 = !DILocation(line: 2036, column: 4, scope: !7819)
!7837 = !DILocation(line: 2036, column: 9, scope: !7819)
!7838 = !DILocation(line: 2036, column: 12, scope: !7819)
!7839 = !DILocation(line: 2036, column: 17, scope: !7819)
!7840 = !DILocation(line: 2036, column: 24, scope: !7819)
!7841 = !DILocation(line: 2037, column: 20, scope: !7819)
!7842 = !DILocation(line: 2037, column: 25, scope: !7819)
!7843 = !DILocation(line: 2037, column: 28, scope: !7819)
!7844 = !DILocation(line: 2037, column: 34, scope: !7819)
!7845 = !DILocation(line: 2037, column: 39, scope: !7819)
!7846 = !DILocation(line: 2037, column: 42, scope: !7819)
!7847 = !DILocation(line: 2037, column: 47, scope: !7819)
!7848 = !DILocation(line: 2037, column: 4, scope: !7819)
!7849 = !DILocation(line: 2038, column: 3, scope: !7819)
!7850 = !DILocation(line: 2039, column: 2, scope: !7813)
!7851 = !DILocation(line: 2029, column: 44, scope: !7808)
!7852 = !DILocation(line: 2029, column: 2, scope: !7808)
!7853 = distinct !{!7853, !7810, !7854}
!7854 = !DILocation(line: 2039, column: 2, scope: !7805)
!7855 = !DILocation(line: 2041, column: 6, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 2041, column: 6)
!7857 = !DILocation(line: 2041, column: 19, scope: !7856)
!7858 = !DILocation(line: 2041, column: 6, scope: !7797)
!7859 = !DILocation(line: 2044, column: 16, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 2041, column: 43)
!7861 = !DILocation(line: 2044, column: 21, scope: !7860)
!7862 = !DILocation(line: 2044, column: 39, scope: !7860)
!7863 = !DILocation(line: 2044, column: 45, scope: !7860)
!7864 = !DILocation(line: 2044, column: 15, scope: !7860)
!7865 = !DILocation(line: 2044, column: 9, scope: !7860)
!7866 = !DILocation(line: 2044, column: 7, scope: !7860)
!7867 = !DILocation(line: 2045, column: 7, scope: !7860)
!7868 = !DILocation(line: 2046, column: 10, scope: !7860)
!7869 = !DILocation(line: 2046, column: 16, scope: !7860)
!7870 = !DILocation(line: 2046, column: 21, scope: !7860)
!7871 = !DILocation(line: 2046, column: 39, scope: !7860)
!7872 = !DILocation(line: 2046, column: 45, scope: !7860)
!7873 = !DILocation(line: 2046, column: 15, scope: !7860)
!7874 = !DILocation(line: 2046, column: 3, scope: !7860)
!7875 = !DILocation(line: 2047, column: 3, scope: !7860)
!7876 = !DILocation(line: 2047, column: 8, scope: !7860)
!7877 = !DILocation(line: 2047, column: 26, scope: !7860)
!7878 = !DILocation(line: 2047, column: 33, scope: !7860)
!7879 = !DILocation(line: 2048, column: 19, scope: !7860)
!7880 = !DILocation(line: 2048, column: 24, scope: !7860)
!7881 = !DILocation(line: 2049, column: 5, scope: !7860)
!7882 = !DILocation(line: 2049, column: 10, scope: !7860)
!7883 = !DILocation(line: 2049, column: 28, scope: !7860)
!7884 = !DILocation(line: 2048, column: 3, scope: !7860)
!7885 = !DILocation(line: 2050, column: 2, scope: !7860)
!7886 = !DILocation(line: 2051, column: 1, scope: !7797)
!7887 = distinct !DISubprogram(name: "udc_set_rde", scope: !3, file: !3, line: 1034, type: !4847, scopeLine: 1035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7888 = !DILocalVariable(name: "dev", arg: 1, scope: !7887, file: !3, line: 1034, type: !356)
!7889 = !DILocation(line: 1034, column: 37, scope: !7887)
!7890 = !DILocalVariable(name: "tmp", scope: !7887, file: !3, line: 1036, type: !296)
!7891 = !DILocation(line: 1036, column: 6, scope: !7887)
!7892 = !DILocation(line: 1038, column: 2, scope: !7887)
!7893 = !DILocation(line: 1038, column: 2, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7887, file: !3, line: 1038, column: 2)
!7895 = !DILocation(line: 1040, column: 6, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7887, file: !3, line: 1040, column: 6)
!7897 = !DILocation(line: 1040, column: 6, scope: !7887)
!7898 = !DILocation(line: 1041, column: 11, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 1040, column: 33)
!7900 = !DILocation(line: 1042, column: 25, scope: !7899)
!7901 = !DILocation(line: 1042, column: 33, scope: !7899)
!7902 = !DILocation(line: 1042, column: 3, scope: !7899)
!7903 = !DILocation(line: 1043, column: 2, scope: !7899)
!7904 = !DILocation(line: 1045, column: 15, scope: !7887)
!7905 = !DILocation(line: 1045, column: 20, scope: !7887)
!7906 = !DILocation(line: 1045, column: 26, scope: !7887)
!7907 = !DILocation(line: 1045, column: 14, scope: !7887)
!7908 = !DILocation(line: 1045, column: 8, scope: !7887)
!7909 = !DILocation(line: 1045, column: 6, scope: !7887)
!7910 = !DILocation(line: 1046, column: 6, scope: !7887)
!7911 = !DILocation(line: 1047, column: 9, scope: !7887)
!7912 = !DILocation(line: 1047, column: 15, scope: !7887)
!7913 = !DILocation(line: 1047, column: 20, scope: !7887)
!7914 = !DILocation(line: 1047, column: 26, scope: !7887)
!7915 = !DILocation(line: 1047, column: 14, scope: !7887)
!7916 = !DILocation(line: 1047, column: 2, scope: !7887)
!7917 = !DILocation(line: 1048, column: 1, scope: !7887)
!7918 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !7919, file: !7919, line: 666, type: !7920, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7919 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!7920 = !DISubroutineType(types: !7921)
!7921 = !{!163}
!7922 = !DILocalVariable(name: "f", scope: !7918, file: !7919, line: 668, type: !163)
!7923 = !DILocation(line: 668, column: 16, scope: !7918)
!7924 = !DILocation(line: 670, column: 6, scope: !7918)
!7925 = !DILocation(line: 670, column: 4, scope: !7918)
!7926 = !DILocation(line: 671, column: 2, scope: !7918)
!7927 = !DILocation(line: 672, column: 9, scope: !7918)
!7928 = !DILocation(line: 672, column: 2, scope: !7918)
!7929 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !7919, file: !7919, line: 646, type: !7920, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7930 = !DILocalVariable(name: "__ret", scope: !7931, file: !7919, line: 648, type: !163)
!7931 = distinct !DILexicalBlock(scope: !7929, file: !7919, line: 648, column: 9)
!7932 = !DILocation(line: 648, column: 9, scope: !7931)
!7933 = !DILocalVariable(name: "__edi", scope: !7931, file: !7919, line: 648, type: !163)
!7934 = !DILocalVariable(name: "__esi", scope: !7931, file: !7919, line: 648, type: !163)
!7935 = !DILocalVariable(name: "__edx", scope: !7931, file: !7919, line: 648, type: !163)
!7936 = !DILocalVariable(name: "__ecx", scope: !7931, file: !7919, line: 648, type: !163)
!7937 = !DILocalVariable(name: "__eax", scope: !7931, file: !7919, line: 648, type: !163)
!7938 = !DILocation(line: 648, column: 9, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7940, file: !7919, line: 648, column: 9)
!7940 = distinct !DILexicalBlock(scope: !7931, file: !7919, line: 648, column: 9)
!7941 = !{i32 -2145709015, i32 -2145706700, i32 -2145706466, i32 -2145706415, i32 -2145706387, i32 -2145706362, i32 -2145706678, i32 -2145706665, i32 -2145706227, i32 -2145706108, i32 -2145706573, i32 -2145706546, i32 -2145706518, i32 -2145706488}
!7942 = !DILocalVariable(name: "__mask", scope: !7943, file: !7919, line: 648, type: !163)
!7943 = distinct !DILexicalBlock(scope: !7939, file: !7919, line: 648, column: 9)
!7944 = !DILocation(line: 648, column: 9, scope: !7943)
!7945 = !DILocation(line: 648, column: 9, scope: !7940)
!7946 = !DILocation(line: 648, column: 2, scope: !7929)
!7947 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !7919, file: !7919, line: 656, type: !2100, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7948 = !DILocalVariable(name: "__edi", scope: !7949, file: !7919, line: 658, type: !163)
!7949 = distinct !DILexicalBlock(scope: !7947, file: !7919, line: 658, column: 2)
!7950 = !DILocation(line: 658, column: 2, scope: !7949)
!7951 = !DILocalVariable(name: "__esi", scope: !7949, file: !7919, line: 658, type: !163)
!7952 = !DILocalVariable(name: "__edx", scope: !7949, file: !7919, line: 658, type: !163)
!7953 = !DILocalVariable(name: "__ecx", scope: !7949, file: !7919, line: 658, type: !163)
!7954 = !DILocalVariable(name: "__eax", scope: !7949, file: !7919, line: 658, type: !163)
!7955 = !{i32 -2145701921, i32 -2145701189, i32 -2145700955, i32 -2145700904, i32 -2145700876, i32 -2145700851, i32 -2145701167, i32 -2145701154, i32 -2145700716, i32 -2145700597, i32 -2145701062, i32 -2145701035, i32 -2145701007, i32 -2145700977}
!7956 = !DILocation(line: 659, column: 1, scope: !7947)
!7957 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !7919, file: !7919, line: 651, type: !4627, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7958 = !DILocalVariable(name: "f", arg: 1, scope: !7957, file: !7919, line: 651, type: !163)
!7959 = !DILocation(line: 651, column: 65, scope: !7957)
!7960 = !DILocalVariable(name: "__edi", scope: !7961, file: !7919, line: 653, type: !163)
!7961 = distinct !DILexicalBlock(scope: !7957, file: !7919, line: 653, column: 2)
!7962 = !DILocation(line: 653, column: 2, scope: !7961)
!7963 = !DILocalVariable(name: "__esi", scope: !7961, file: !7919, line: 653, type: !163)
!7964 = !DILocalVariable(name: "__edx", scope: !7961, file: !7919, line: 653, type: !163)
!7965 = !DILocalVariable(name: "__ecx", scope: !7961, file: !7919, line: 653, type: !163)
!7966 = !DILocalVariable(name: "__eax", scope: !7961, file: !7919, line: 653, type: !163)
!7967 = !{i32 -2145704548, i32 -2145703798, i32 -2145703564, i32 -2145703513, i32 -2145703485, i32 -2145703460, i32 -2145703776, i32 -2145703763, i32 -2145703325, i32 -2145703206, i32 -2145703671, i32 -2145703644, i32 -2145703616, i32 -2145703586}
!7968 = !DILocation(line: 654, column: 1, scope: !7957)
!7969 = distinct !DISubprogram(name: "udc_txfifo_write", scope: !3, file: !3, line: 648, type: !7970, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!7970 = !DISubroutineType(types: !7971)
!7971 = !{null, !319, !228}
!7972 = !DILocalVariable(name: "ep", arg: 1, scope: !7969, file: !3, line: 648, type: !319)
!7973 = !DILocation(line: 648, column: 33, scope: !7969)
!7974 = !DILocalVariable(name: "req", arg: 2, scope: !7969, file: !3, line: 648, type: !228)
!7975 = !DILocation(line: 648, column: 57, scope: !7969)
!7976 = !DILocalVariable(name: "req_buf", scope: !7969, file: !3, line: 650, type: !7977)
!7977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!7978 = !DILocation(line: 650, column: 8, scope: !7969)
!7979 = !DILocalVariable(name: "buf", scope: !7969, file: !3, line: 651, type: !336)
!7980 = !DILocation(line: 651, column: 9, scope: !7969)
!7981 = !DILocalVariable(name: "i", scope: !7969, file: !3, line: 652, type: !197)
!7982 = !DILocation(line: 652, column: 8, scope: !7969)
!7983 = !DILocalVariable(name: "j", scope: !7969, file: !3, line: 652, type: !197)
!7984 = !DILocation(line: 652, column: 11, scope: !7969)
!7985 = !DILocalVariable(name: "bytes", scope: !7969, file: !3, line: 653, type: !7)
!7986 = !DILocation(line: 653, column: 12, scope: !7969)
!7987 = !DILocalVariable(name: "remaining", scope: !7969, file: !3, line: 654, type: !7)
!7988 = !DILocation(line: 654, column: 12, scope: !7969)
!7989 = !DILocation(line: 656, column: 7, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 656, column: 6)
!7991 = !DILocation(line: 656, column: 11, scope: !7990)
!7992 = !DILocation(line: 656, column: 15, scope: !7990)
!7993 = !DILocation(line: 656, column: 6, scope: !7969)
!7994 = !DILocation(line: 657, column: 3, scope: !7990)
!7995 = !DILocation(line: 659, column: 12, scope: !7969)
!7996 = !DILocation(line: 659, column: 17, scope: !7969)
!7997 = !DILocation(line: 659, column: 23, scope: !7969)
!7998 = !DILocation(line: 659, column: 28, scope: !7969)
!7999 = !DILocation(line: 659, column: 21, scope: !7969)
!8000 = !DILocation(line: 659, column: 10, scope: !7969)
!8001 = !DILocation(line: 660, column: 2, scope: !7969)
!8002 = !DILocation(line: 661, column: 14, scope: !7969)
!8003 = !DILocation(line: 661, column: 19, scope: !7969)
!8004 = !DILocation(line: 661, column: 28, scope: !7969)
!8005 = !DILocation(line: 661, column: 33, scope: !7969)
!8006 = !DILocation(line: 661, column: 26, scope: !7969)
!8007 = !DILocation(line: 661, column: 12, scope: !7969)
!8008 = !DILocation(line: 663, column: 16, scope: !7969)
!8009 = !DILocation(line: 663, column: 8, scope: !7969)
!8010 = !DILocation(line: 663, column: 6, scope: !7969)
!8011 = !DILocation(line: 665, column: 10, scope: !7969)
!8012 = !DILocation(line: 665, column: 14, scope: !7969)
!8013 = !DILocation(line: 665, column: 17, scope: !7969)
!8014 = !DILocation(line: 665, column: 8, scope: !7969)
!8015 = !DILocation(line: 666, column: 6, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 666, column: 6)
!8017 = !DILocation(line: 666, column: 14, scope: !8016)
!8018 = !DILocation(line: 666, column: 12, scope: !8016)
!8019 = !DILocation(line: 666, column: 6, scope: !7969)
!8020 = !DILocation(line: 667, column: 11, scope: !8016)
!8021 = !DILocation(line: 667, column: 9, scope: !8016)
!8022 = !DILocation(line: 667, column: 3, scope: !8016)
!8023 = !DILocation(line: 670, column: 9, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 670, column: 2)
!8025 = !DILocation(line: 670, column: 7, scope: !8024)
!8026 = !DILocation(line: 670, column: 14, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 670, column: 2)
!8028 = !DILocation(line: 670, column: 18, scope: !8027)
!8029 = !DILocation(line: 670, column: 24, scope: !8027)
!8030 = !DILocation(line: 670, column: 16, scope: !8027)
!8031 = !DILocation(line: 670, column: 2, scope: !8024)
!8032 = !DILocation(line: 671, column: 12, scope: !8027)
!8033 = !DILocation(line: 671, column: 18, scope: !8027)
!8034 = !DILocation(line: 671, column: 16, scope: !8027)
!8035 = !DILocation(line: 671, column: 10, scope: !8027)
!8036 = !DILocation(line: 671, column: 22, scope: !8027)
!8037 = !DILocation(line: 671, column: 26, scope: !8027)
!8038 = !DILocation(line: 671, column: 3, scope: !8027)
!8039 = !DILocation(line: 670, column: 44, scope: !8027)
!8040 = !DILocation(line: 670, column: 2, scope: !8027)
!8041 = distinct !{!8041, !8031, !8042}
!8042 = !DILocation(line: 671, column: 32, scope: !8024)
!8043 = !DILocation(line: 674, column: 9, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 674, column: 2)
!8045 = !DILocation(line: 674, column: 7, scope: !8044)
!8046 = !DILocation(line: 674, column: 14, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8044, file: !3, line: 674, column: 2)
!8048 = !DILocation(line: 674, column: 18, scope: !8047)
!8049 = !DILocation(line: 674, column: 24, scope: !8047)
!8050 = !DILocation(line: 674, column: 16, scope: !8047)
!8051 = !DILocation(line: 674, column: 2, scope: !8044)
!8052 = !DILocation(line: 675, column: 17, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 674, column: 48)
!8054 = !DILocation(line: 675, column: 23, scope: !8053)
!8055 = !DILocation(line: 675, column: 21, scope: !8053)
!8056 = !DILocation(line: 675, column: 15, scope: !8053)
!8057 = !DILocation(line: 675, column: 30, scope: !8053)
!8058 = !DILocation(line: 675, column: 32, scope: !8053)
!8059 = !DILocation(line: 675, column: 26, scope: !8053)
!8060 = !DILocation(line: 675, column: 10, scope: !8053)
!8061 = !DILocation(line: 676, column: 8, scope: !8053)
!8062 = !DILocation(line: 676, column: 12, scope: !8053)
!8063 = !DILocation(line: 675, column: 3, scope: !8053)
!8064 = !DILocation(line: 677, column: 2, scope: !8053)
!8065 = !DILocation(line: 674, column: 44, scope: !8047)
!8066 = !DILocation(line: 674, column: 2, scope: !8047)
!8067 = distinct !{!8067, !8051, !8068}
!8068 = !DILocation(line: 677, column: 2, scope: !8044)
!8069 = !DILocation(line: 680, column: 13, scope: !7969)
!8070 = !DILocation(line: 680, column: 17, scope: !7969)
!8071 = !DILocation(line: 680, column: 23, scope: !7969)
!8072 = !DILocation(line: 680, column: 12, scope: !7969)
!8073 = !DILocation(line: 680, column: 2, scope: !7969)
!8074 = !DILocation(line: 681, column: 1, scope: !7969)
!8075 = distinct !DISubprogram(name: "writeb", scope: !4678, file: !4678, line: 65, type: !8076, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!8076 = !DISubroutineType(types: !8077)
!8077 = !{null, !204, !4681}
!8078 = !DILocalVariable(name: "val", arg: 1, scope: !8075, file: !4678, line: 65, type: !204)
!8079 = !DILocation(line: 65, column: 1, scope: !8075)
!8080 = !DILocalVariable(name: "addr", arg: 2, scope: !8075, file: !4678, line: 65, type: !4681)
!8081 = !{i32 -2143352642}
!8082 = distinct !DISubprogram(name: "udc_rxfifo_read", scope: !3, file: !3, line: 721, type: !8083, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!8083 = !DISubroutineType(types: !8084)
!8084 = !{!197, !319, !139}
!8085 = !DILocalVariable(name: "ep", arg: 1, scope: !8082, file: !3, line: 721, type: !319)
!8086 = !DILocation(line: 721, column: 32, scope: !8082)
!8087 = !DILocalVariable(name: "req", arg: 2, scope: !8082, file: !3, line: 721, type: !139)
!8088 = !DILocation(line: 721, column: 56, scope: !8082)
!8089 = !DILocalVariable(name: "buf", scope: !8082, file: !3, line: 723, type: !7977)
!8090 = !DILocation(line: 723, column: 6, scope: !8082)
!8091 = !DILocalVariable(name: "buf_space", scope: !8082, file: !3, line: 724, type: !7)
!8092 = !DILocation(line: 724, column: 11, scope: !8082)
!8093 = !DILocalVariable(name: "bytes", scope: !8082, file: !3, line: 725, type: !7)
!8094 = !DILocation(line: 725, column: 11, scope: !8082)
!8095 = !DILocalVariable(name: "finished", scope: !8082, file: !3, line: 726, type: !7)
!8096 = !DILocation(line: 726, column: 11, scope: !8082)
!8097 = !DILocation(line: 729, column: 17, scope: !8082)
!8098 = !DILocation(line: 729, column: 21, scope: !8082)
!8099 = !DILocation(line: 729, column: 27, scope: !8082)
!8100 = !DILocation(line: 729, column: 16, scope: !8082)
!8101 = !DILocation(line: 729, column: 10, scope: !8082)
!8102 = !DILocation(line: 729, column: 8, scope: !8082)
!8103 = !DILocation(line: 730, column: 10, scope: !8082)
!8104 = !DILocation(line: 730, column: 8, scope: !8082)
!8105 = !DILocation(line: 732, column: 14, scope: !8082)
!8106 = !DILocation(line: 732, column: 19, scope: !8082)
!8107 = !DILocation(line: 732, column: 23, scope: !8082)
!8108 = !DILocation(line: 732, column: 32, scope: !8082)
!8109 = !DILocation(line: 732, column: 37, scope: !8082)
!8110 = !DILocation(line: 732, column: 41, scope: !8082)
!8111 = !DILocation(line: 732, column: 30, scope: !8082)
!8112 = !DILocation(line: 732, column: 12, scope: !8082)
!8113 = !DILocation(line: 733, column: 8, scope: !8082)
!8114 = !DILocation(line: 733, column: 13, scope: !8082)
!8115 = !DILocation(line: 733, column: 17, scope: !8082)
!8116 = !DILocation(line: 733, column: 23, scope: !8082)
!8117 = !DILocation(line: 733, column: 28, scope: !8082)
!8118 = !DILocation(line: 733, column: 32, scope: !8082)
!8119 = !DILocation(line: 733, column: 21, scope: !8082)
!8120 = !DILocation(line: 733, column: 6, scope: !8082)
!8121 = !DILocation(line: 734, column: 6, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 734, column: 6)
!8123 = !DILocation(line: 734, column: 14, scope: !8122)
!8124 = !DILocation(line: 734, column: 12, scope: !8122)
!8125 = !DILocation(line: 734, column: 6, scope: !8082)
!8126 = !DILocation(line: 735, column: 8, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 735, column: 7)
!8128 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 734, column: 25)
!8129 = !DILocation(line: 735, column: 20, scope: !8127)
!8130 = !DILocation(line: 735, column: 24, scope: !8127)
!8131 = !DILocation(line: 735, column: 27, scope: !8127)
!8132 = !DILocation(line: 735, column: 18, scope: !8127)
!8133 = !DILocation(line: 735, column: 38, scope: !8127)
!8134 = !DILocation(line: 735, column: 7, scope: !8128)
!8135 = !DILocation(line: 739, column: 4, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 735, column: 44)
!8137 = !DILocation(line: 739, column: 9, scope: !8136)
!8138 = !DILocation(line: 739, column: 13, scope: !8136)
!8139 = !DILocation(line: 739, column: 20, scope: !8136)
!8140 = !DILocation(line: 740, column: 3, scope: !8136)
!8141 = !DILocation(line: 741, column: 11, scope: !8128)
!8142 = !DILocation(line: 741, column: 9, scope: !8128)
!8143 = !DILocation(line: 742, column: 2, scope: !8128)
!8144 = !DILocation(line: 743, column: 21, scope: !8082)
!8145 = !DILocation(line: 743, column: 2, scope: !8082)
!8146 = !DILocation(line: 743, column: 7, scope: !8082)
!8147 = !DILocation(line: 743, column: 11, scope: !8082)
!8148 = !DILocation(line: 743, column: 18, scope: !8082)
!8149 = !DILocation(line: 746, column: 8, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 746, column: 6)
!8151 = !DILocation(line: 746, column: 16, scope: !8150)
!8152 = !DILocation(line: 746, column: 20, scope: !8150)
!8153 = !DILocation(line: 746, column: 23, scope: !8150)
!8154 = !DILocation(line: 746, column: 14, scope: !8150)
!8155 = !DILocation(line: 746, column: 34, scope: !8150)
!8156 = !DILocation(line: 746, column: 40, scope: !8150)
!8157 = !DILocation(line: 746, column: 45, scope: !8150)
!8158 = !DILocation(line: 747, column: 3, scope: !8150)
!8159 = !DILocation(line: 747, column: 8, scope: !8150)
!8160 = !DILocation(line: 747, column: 13, scope: !8150)
!8161 = !DILocation(line: 747, column: 17, scope: !8150)
!8162 = !DILocation(line: 747, column: 27, scope: !8150)
!8163 = !DILocation(line: 747, column: 32, scope: !8150)
!8164 = !DILocation(line: 747, column: 36, scope: !8150)
!8165 = !DILocation(line: 747, column: 24, scope: !8150)
!8166 = !DILocation(line: 747, column: 44, scope: !8150)
!8167 = !DILocation(line: 747, column: 48, scope: !8150)
!8168 = !DILocation(line: 747, column: 53, scope: !8150)
!8169 = !DILocation(line: 747, column: 57, scope: !8150)
!8170 = !DILocation(line: 746, column: 6, scope: !8082)
!8171 = !DILocation(line: 748, column: 12, scope: !8150)
!8172 = !DILocation(line: 748, column: 3, scope: !8150)
!8173 = !DILocation(line: 751, column: 2, scope: !8082)
!8174 = !DILocation(line: 751, column: 2, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 751, column: 2)
!8176 = !DILocation(line: 752, column: 24, scope: !8082)
!8177 = !DILocation(line: 752, column: 28, scope: !8082)
!8178 = !DILocation(line: 752, column: 33, scope: !8082)
!8179 = !DILocation(line: 752, column: 38, scope: !8082)
!8180 = !DILocation(line: 752, column: 2, scope: !8082)
!8181 = !DILocation(line: 754, column: 9, scope: !8082)
!8182 = !DILocation(line: 754, column: 2, scope: !8082)
!8183 = distinct !DISubprogram(name: "udc_init_bna_dummy", scope: !3, file: !3, line: 611, type: !8184, scopeLine: 612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!8184 = !DISubroutineType(types: !8185)
!8185 = !{null, !139}
!8186 = !DILocalVariable(name: "req", arg: 1, scope: !8183, file: !3, line: 611, type: !139)
!8187 = !DILocation(line: 611, column: 52, scope: !8183)
!8188 = !DILocation(line: 613, column: 6, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8183, file: !3, line: 613, column: 6)
!8190 = !DILocation(line: 613, column: 6, scope: !8183)
!8191 = !DILocation(line: 615, column: 3, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 613, column: 11)
!8193 = !DILocation(line: 615, column: 8, scope: !8192)
!8194 = !DILocation(line: 615, column: 17, scope: !8192)
!8195 = !DILocation(line: 615, column: 24, scope: !8192)
!8196 = !DILocation(line: 617, column: 24, scope: !8192)
!8197 = !DILocation(line: 617, column: 29, scope: !8192)
!8198 = !DILocation(line: 617, column: 3, scope: !8192)
!8199 = !DILocation(line: 617, column: 8, scope: !8192)
!8200 = !DILocation(line: 617, column: 17, scope: !8192)
!8201 = !DILocation(line: 617, column: 22, scope: !8192)
!8202 = !DILocation(line: 620, column: 6, scope: !8192)
!8203 = !DILocation(line: 619, column: 3, scope: !8192)
!8204 = !DILocation(line: 619, column: 8, scope: !8192)
!8205 = !DILocation(line: 619, column: 17, scope: !8192)
!8206 = !DILocation(line: 620, column: 4, scope: !8192)
!8207 = !DILocation(line: 627, column: 2, scope: !8192)
!8208 = !DILocation(line: 628, column: 1, scope: !8183)
!8209 = distinct !DISubprogram(name: "udc_get_last_dma_desc", scope: !3, file: !3, line: 998, type: !8210, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!8210 = !DISubroutineType(types: !8211)
!8211 = !{!292, !139}
!8212 = !DILocalVariable(name: "req", arg: 1, scope: !8209, file: !3, line: 998, type: !139)
!8213 = !DILocation(line: 998, column: 71, scope: !8209)
!8214 = !DILocalVariable(name: "td", scope: !8209, file: !3, line: 1000, type: !292)
!8215 = !DILocation(line: 1000, column: 23, scope: !8209)
!8216 = !DILocation(line: 1002, column: 7, scope: !8209)
!8217 = !DILocation(line: 1002, column: 12, scope: !8209)
!8218 = !DILocation(line: 1002, column: 5, scope: !8209)
!8219 = !DILocation(line: 1003, column: 2, scope: !8209)
!8220 = !DILocation(line: 1003, column: 9, scope: !8209)
!8221 = !DILocation(line: 1003, column: 12, scope: !8209)
!8222 = !DILocation(line: 1003, column: 17, scope: !8209)
!8223 = !DILocation(line: 1003, column: 21, scope: !8209)
!8224 = !DILocation(line: 1003, column: 28, scope: !8209)
!8225 = !DILocation(line: 1003, column: 15, scope: !8209)
!8226 = !DILocation(line: 0, scope: !8209)
!8227 = !DILocation(line: 1004, column: 21, scope: !8209)
!8228 = !DILocation(line: 1004, column: 25, scope: !8209)
!8229 = !DILocation(line: 1004, column: 8, scope: !8209)
!8230 = !DILocation(line: 1004, column: 6, scope: !8209)
!8231 = distinct !{!8231, !8219, !8232}
!8232 = !DILocation(line: 1004, column: 29, scope: !8209)
!8233 = !DILocation(line: 1006, column: 9, scope: !8209)
!8234 = !DILocation(line: 1006, column: 2, scope: !8209)
!8235 = distinct !DISubprogram(name: "udc_get_ppbdu_rxbytes", scope: !3, file: !3, line: 1011, type: !8236, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!8236 = !DISubroutineType(types: !8237)
!8237 = !{!296, !139}
!8238 = !DILocalVariable(name: "req", arg: 1, scope: !8235, file: !3, line: 1011, type: !139)
!8239 = !DILocation(line: 1011, column: 54, scope: !8235)
!8240 = !DILocalVariable(name: "td", scope: !8235, file: !3, line: 1013, type: !292)
!8241 = !DILocation(line: 1013, column: 23, scope: !8235)
!8242 = !DILocalVariable(name: "count", scope: !8235, file: !3, line: 1014, type: !296)
!8243 = !DILocation(line: 1014, column: 6, scope: !8235)
!8244 = !DILocation(line: 1016, column: 7, scope: !8235)
!8245 = !DILocation(line: 1016, column: 12, scope: !8235)
!8246 = !DILocation(line: 1016, column: 5, scope: !8235)
!8247 = !DILocation(line: 1018, column: 10, scope: !8235)
!8248 = !DILocation(line: 1018, column: 8, scope: !8235)
!8249 = !DILocation(line: 1020, column: 2, scope: !8235)
!8250 = !DILocation(line: 1020, column: 9, scope: !8235)
!8251 = !DILocation(line: 1020, column: 12, scope: !8235)
!8252 = !DILocation(line: 1020, column: 17, scope: !8235)
!8253 = !DILocation(line: 1020, column: 21, scope: !8235)
!8254 = !DILocation(line: 1020, column: 28, scope: !8235)
!8255 = !DILocation(line: 1020, column: 15, scope: !8235)
!8256 = !DILocation(line: 0, scope: !8235)
!8257 = !DILocation(line: 1021, column: 21, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8235, file: !3, line: 1020, column: 58)
!8259 = !DILocation(line: 1021, column: 25, scope: !8258)
!8260 = !DILocation(line: 1021, column: 8, scope: !8258)
!8261 = !DILocation(line: 1021, column: 6, scope: !8258)
!8262 = !DILocation(line: 1023, column: 7, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 1023, column: 7)
!8264 = !DILocation(line: 1023, column: 7, scope: !8258)
!8265 = !DILocation(line: 1024, column: 13, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8263, file: !3, line: 1023, column: 11)
!8267 = !DILocation(line: 1024, column: 10, scope: !8266)
!8268 = !DILocation(line: 1026, column: 3, scope: !8266)
!8269 = distinct !{!8269, !8249, !8270}
!8270 = !DILocation(line: 1027, column: 2, scope: !8235)
!8271 = !DILocation(line: 1029, column: 9, scope: !8235)
!8272 = !DILocation(line: 1029, column: 2, scope: !8235)
!8273 = distinct !DISubprogram(name: "prep_dma", scope: !3, file: !3, line: 875, type: !8274, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!8274 = !DISubroutineType(types: !8275)
!8275 = !{!197, !319, !139, !229}
!8276 = !DILocalVariable(name: "ep", arg: 1, scope: !8273, file: !3, line: 875, type: !319)
!8277 = !DILocation(line: 875, column: 36, scope: !8273)
!8278 = !DILocalVariable(name: "req", arg: 2, scope: !8273, file: !3, line: 875, type: !139)
!8279 = !DILocation(line: 875, column: 60, scope: !8273)
!8280 = !DILocalVariable(name: "gfp", arg: 3, scope: !8273, file: !3, line: 875, type: !229)
!8281 = !DILocation(line: 875, column: 71, scope: !8273)
!8282 = !DILocalVariable(name: "retval", scope: !8273, file: !3, line: 877, type: !197)
!8283 = !DILocation(line: 877, column: 6, scope: !8273)
!8284 = !DILocalVariable(name: "tmp", scope: !8273, file: !3, line: 878, type: !296)
!8285 = !DILocation(line: 878, column: 6, scope: !8273)
!8286 = !DILocation(line: 880, column: 2, scope: !8273)
!8287 = !DILocation(line: 880, column: 2, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 880, column: 2)
!8289 = !DILocation(line: 881, column: 2, scope: !8273)
!8290 = !DILocation(line: 881, column: 2, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 881, column: 2)
!8292 = !DILocation(line: 885, column: 25, scope: !8273)
!8293 = !DILocation(line: 885, column: 30, scope: !8273)
!8294 = !DILocation(line: 885, column: 34, scope: !8273)
!8295 = !DILocation(line: 885, column: 2, scope: !8273)
!8296 = !DILocation(line: 885, column: 7, scope: !8273)
!8297 = !DILocation(line: 885, column: 16, scope: !8273)
!8298 = !DILocation(line: 885, column: 23, scope: !8273)
!8299 = !DILocation(line: 888, column: 2, scope: !8273)
!8300 = !DILocation(line: 888, column: 7, scope: !8273)
!8301 = !DILocation(line: 888, column: 16, scope: !8273)
!8302 = !DILocation(line: 888, column: 23, scope: !8273)
!8303 = !DILocation(line: 891, column: 6, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 891, column: 6)
!8305 = !DILocation(line: 891, column: 6, scope: !8273)
!8306 = !DILocation(line: 893, column: 33, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 891, column: 19)
!8308 = !DILocation(line: 893, column: 37, scope: !8307)
!8309 = !DILocation(line: 893, column: 42, scope: !8307)
!8310 = !DILocation(line: 893, column: 46, scope: !8307)
!8311 = !DILocation(line: 893, column: 49, scope: !8307)
!8312 = !DILocation(line: 893, column: 60, scope: !8307)
!8313 = !DILocation(line: 893, column: 12, scope: !8307)
!8314 = !DILocation(line: 893, column: 10, scope: !8307)
!8315 = !DILocation(line: 894, column: 7, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 894, column: 7)
!8317 = !DILocation(line: 894, column: 14, scope: !8316)
!8318 = !DILocation(line: 894, column: 7, scope: !8307)
!8319 = !DILocation(line: 895, column: 8, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 895, column: 8)
!8321 = distinct !DILexicalBlock(scope: !8316, file: !3, line: 894, column: 20)
!8322 = !DILocation(line: 895, column: 15, scope: !8320)
!8323 = !DILocation(line: 895, column: 8, scope: !8321)
!8324 = !DILocation(line: 896, column: 5, scope: !8320)
!8325 = !DILocation(line: 897, column: 11, scope: !8321)
!8326 = !DILocation(line: 897, column: 4, scope: !8321)
!8327 = !DILocation(line: 899, column: 7, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 899, column: 7)
!8329 = !DILocation(line: 899, column: 11, scope: !8328)
!8330 = !DILocation(line: 899, column: 7, scope: !8307)
!8331 = !DILocation(line: 900, column: 8, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8333, file: !3, line: 900, column: 8)
!8333 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 899, column: 15)
!8334 = !DILocation(line: 900, column: 13, scope: !8332)
!8335 = !DILocation(line: 900, column: 17, scope: !8332)
!8336 = !DILocation(line: 900, column: 27, scope: !8332)
!8337 = !DILocation(line: 900, column: 31, scope: !8332)
!8338 = !DILocation(line: 900, column: 34, scope: !8332)
!8339 = !DILocation(line: 900, column: 24, scope: !8332)
!8340 = !DILocation(line: 900, column: 8, scope: !8333)
!8341 = !DILocation(line: 903, column: 6, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8332, file: !3, line: 900, column: 45)
!8343 = !DILocation(line: 902, column: 5, scope: !8342)
!8344 = !DILocation(line: 902, column: 10, scope: !8342)
!8345 = !DILocation(line: 902, column: 19, scope: !8342)
!8346 = !DILocation(line: 902, column: 26, scope: !8342)
!8347 = !DILocation(line: 907, column: 4, scope: !8342)
!8348 = !DILocation(line: 908, column: 3, scope: !8333)
!8349 = !DILocation(line: 910, column: 2, scope: !8307)
!8350 = !DILocation(line: 912, column: 6, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 912, column: 6)
!8352 = !DILocation(line: 912, column: 10, scope: !8351)
!8353 = !DILocation(line: 912, column: 6, scope: !8273)
!8354 = !DILocation(line: 913, column: 3, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8351, file: !3, line: 912, column: 14)
!8356 = !DILocation(line: 913, column: 3, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 913, column: 3)
!8358 = !DILocation(line: 921, column: 8, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 921, column: 7)
!8360 = !DILocation(line: 921, column: 20, scope: !8359)
!8361 = !DILocation(line: 921, column: 23, scope: !8359)
!8362 = !DILocation(line: 921, column: 28, scope: !8359)
!8363 = !DILocation(line: 921, column: 32, scope: !8359)
!8364 = !DILocation(line: 921, column: 41, scope: !8359)
!8365 = !DILocation(line: 921, column: 45, scope: !8359)
!8366 = !DILocation(line: 921, column: 48, scope: !8359)
!8367 = !DILocation(line: 921, column: 39, scope: !8359)
!8368 = !DILocation(line: 922, column: 5, scope: !8359)
!8369 = !DILocation(line: 922, column: 8, scope: !8359)
!8370 = !DILocation(line: 922, column: 12, scope: !8359)
!8371 = !DILocation(line: 922, column: 16, scope: !8359)
!8372 = !DILocation(line: 923, column: 5, scope: !8359)
!8373 = !DILocation(line: 923, column: 8, scope: !8359)
!8374 = !DILocation(line: 923, column: 12, scope: !8359)
!8375 = !DILocation(line: 923, column: 16, scope: !8359)
!8376 = !DILocation(line: 921, column: 7, scope: !8355)
!8377 = !DILocation(line: 926, column: 5, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 923, column: 33)
!8379 = !DILocation(line: 925, column: 4, scope: !8378)
!8380 = !DILocation(line: 925, column: 9, scope: !8378)
!8381 = !DILocation(line: 925, column: 18, scope: !8378)
!8382 = !DILocation(line: 925, column: 25, scope: !8378)
!8383 = !DILocation(line: 931, column: 5, scope: !8378)
!8384 = !DILocation(line: 930, column: 4, scope: !8378)
!8385 = !DILocation(line: 930, column: 9, scope: !8378)
!8386 = !DILocation(line: 930, column: 18, scope: !8378)
!8387 = !DILocation(line: 930, column: 25, scope: !8378)
!8388 = !DILocation(line: 934, column: 3, scope: !8378)
!8389 = !DILocation(line: 937, column: 4, scope: !8355)
!8390 = !DILocation(line: 936, column: 3, scope: !8355)
!8391 = !DILocation(line: 936, column: 8, scope: !8355)
!8392 = !DILocation(line: 936, column: 17, scope: !8355)
!8393 = !DILocation(line: 936, column: 24, scope: !8355)
!8394 = !DILocation(line: 940, column: 2, scope: !8355)
!8395 = !DILocation(line: 941, column: 3, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8351, file: !3, line: 940, column: 9)
!8397 = !DILocation(line: 941, column: 3, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8396, file: !3, line: 941, column: 3)
!8399 = !DILocation(line: 944, column: 4, scope: !8396)
!8400 = !DILocation(line: 943, column: 3, scope: !8396)
!8401 = !DILocation(line: 943, column: 8, scope: !8396)
!8402 = !DILocation(line: 943, column: 17, scope: !8396)
!8403 = !DILocation(line: 943, column: 24, scope: !8396)
!8404 = !DILocation(line: 949, column: 7, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8396, file: !3, line: 949, column: 7)
!8406 = !DILocation(line: 949, column: 11, scope: !8405)
!8407 = !DILocation(line: 949, column: 7, scope: !8396)
!8408 = !DILocation(line: 950, column: 17, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8405, file: !3, line: 949, column: 19)
!8410 = !DILocation(line: 950, column: 21, scope: !8409)
!8411 = !DILocation(line: 950, column: 27, scope: !8409)
!8412 = !DILocation(line: 950, column: 16, scope: !8409)
!8413 = !DILocation(line: 950, column: 10, scope: !8409)
!8414 = !DILocation(line: 950, column: 8, scope: !8409)
!8415 = !DILocation(line: 951, column: 8, scope: !8409)
!8416 = !DILocation(line: 952, column: 11, scope: !8409)
!8417 = !DILocation(line: 952, column: 17, scope: !8409)
!8418 = !DILocation(line: 952, column: 21, scope: !8409)
!8419 = !DILocation(line: 952, column: 27, scope: !8409)
!8420 = !DILocation(line: 952, column: 16, scope: !8409)
!8421 = !DILocation(line: 952, column: 4, scope: !8409)
!8422 = !DILocation(line: 953, column: 4, scope: !8409)
!8423 = !DILocation(line: 953, column: 8, scope: !8409)
!8424 = !DILocation(line: 953, column: 15, scope: !8409)
!8425 = !DILocation(line: 954, column: 19, scope: !8409)
!8426 = !DILocation(line: 954, column: 23, scope: !8409)
!8427 = !DILocation(line: 954, column: 27, scope: !8409)
!8428 = !DILocation(line: 954, column: 4, scope: !8409)
!8429 = !DILocation(line: 955, column: 3, scope: !8409)
!8430 = !DILocation(line: 959, column: 9, scope: !8273)
!8431 = !DILocation(line: 959, column: 2, scope: !8273)
!8432 = !DILocation(line: 960, column: 1, scope: !8273)
!8433 = distinct !DISubprogram(name: "udc_rxfifo_read_bytes", scope: !3, file: !3, line: 696, type: !8434, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!8434 = !DISubroutineType(types: !8435)
!8435 = !{!197, !356, !7977, !197}
!8436 = !DILocalVariable(name: "dev", arg: 1, scope: !8433, file: !3, line: 696, type: !356)
!8437 = !DILocation(line: 696, column: 46, scope: !8433)
!8438 = !DILocalVariable(name: "buf", arg: 2, scope: !8433, file: !3, line: 696, type: !7977)
!8439 = !DILocation(line: 696, column: 55, scope: !8433)
!8440 = !DILocalVariable(name: "bytes", arg: 3, scope: !8433, file: !3, line: 696, type: !197)
!8441 = !DILocation(line: 696, column: 64, scope: !8433)
!8442 = !DILocalVariable(name: "i", scope: !8433, file: !3, line: 698, type: !197)
!8443 = !DILocation(line: 698, column: 6, scope: !8433)
!8444 = !DILocalVariable(name: "j", scope: !8433, file: !3, line: 698, type: !197)
!8445 = !DILocation(line: 698, column: 9, scope: !8433)
!8446 = !DILocalVariable(name: "tmp", scope: !8433, file: !3, line: 699, type: !296)
!8447 = !DILocation(line: 699, column: 6, scope: !8433)
!8448 = !DILocation(line: 701, column: 2, scope: !8433)
!8449 = !DILocation(line: 701, column: 2, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8433, file: !3, line: 701, column: 2)
!8451 = !DILocation(line: 704, column: 9, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8433, file: !3, line: 704, column: 2)
!8453 = !DILocation(line: 704, column: 7, scope: !8452)
!8454 = !DILocation(line: 704, column: 14, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8452, file: !3, line: 704, column: 2)
!8456 = !DILocation(line: 704, column: 18, scope: !8455)
!8457 = !DILocation(line: 704, column: 24, scope: !8455)
!8458 = !DILocation(line: 704, column: 16, scope: !8455)
!8459 = !DILocation(line: 704, column: 2, scope: !8452)
!8460 = !DILocation(line: 705, column: 36, scope: !8455)
!8461 = !DILocation(line: 705, column: 41, scope: !8455)
!8462 = !DILocation(line: 705, column: 30, scope: !8455)
!8463 = !DILocation(line: 705, column: 13, scope: !8455)
!8464 = !DILocation(line: 705, column: 20, scope: !8455)
!8465 = !DILocation(line: 705, column: 21, scope: !8455)
!8466 = !DILocation(line: 705, column: 17, scope: !8455)
!8467 = !DILocation(line: 705, column: 3, scope: !8455)
!8468 = !DILocation(line: 705, column: 28, scope: !8455)
!8469 = !DILocation(line: 704, column: 44, scope: !8455)
!8470 = !DILocation(line: 704, column: 2, scope: !8455)
!8471 = distinct !{!8471, !8459, !8472}
!8472 = !DILocation(line: 705, column: 47, scope: !8452)
!8473 = !DILocation(line: 708, column: 6, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8433, file: !3, line: 708, column: 6)
!8475 = !DILocation(line: 708, column: 12, scope: !8474)
!8476 = !DILocation(line: 708, column: 6, scope: !8433)
!8477 = !DILocation(line: 709, column: 15, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 708, column: 31)
!8479 = !DILocation(line: 709, column: 20, scope: !8478)
!8480 = !DILocation(line: 709, column: 9, scope: !8478)
!8481 = !DILocation(line: 709, column: 7, scope: !8478)
!8482 = !DILocation(line: 710, column: 10, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 710, column: 3)
!8484 = !DILocation(line: 710, column: 8, scope: !8483)
!8485 = !DILocation(line: 710, column: 15, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 710, column: 3)
!8487 = !DILocation(line: 710, column: 19, scope: !8486)
!8488 = !DILocation(line: 710, column: 25, scope: !8486)
!8489 = !DILocation(line: 710, column: 17, scope: !8486)
!8490 = !DILocation(line: 710, column: 3, scope: !8483)
!8491 = !DILocation(line: 711, column: 31, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8486, file: !3, line: 710, column: 49)
!8493 = !DILocation(line: 711, column: 35, scope: !8492)
!8494 = !DILocation(line: 711, column: 26, scope: !8492)
!8495 = !DILocation(line: 711, column: 6, scope: !8492)
!8496 = !DILocation(line: 711, column: 13, scope: !8492)
!8497 = !DILocation(line: 711, column: 14, scope: !8492)
!8498 = !DILocation(line: 711, column: 10, scope: !8492)
!8499 = !DILocation(line: 711, column: 21, scope: !8492)
!8500 = !DILocation(line: 711, column: 19, scope: !8492)
!8501 = !DILocation(line: 711, column: 24, scope: !8492)
!8502 = !DILocation(line: 712, column: 10, scope: !8492)
!8503 = !DILocation(line: 712, column: 14, scope: !8492)
!8504 = !DILocation(line: 712, column: 8, scope: !8492)
!8505 = !DILocation(line: 713, column: 3, scope: !8492)
!8506 = !DILocation(line: 710, column: 45, scope: !8486)
!8507 = !DILocation(line: 710, column: 3, scope: !8486)
!8508 = distinct !{!8508, !8490, !8509}
!8509 = !DILocation(line: 713, column: 3, scope: !8483)
!8510 = !DILocation(line: 714, column: 2, scope: !8478)
!8511 = !DILocation(line: 716, column: 2, scope: !8433)
!8512 = distinct !DISubprogram(name: "phys_to_virt", scope: !4678, file: !4678, line: 148, type: !8513, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!8513 = !DISubroutineType(types: !8514)
!8514 = !{!138, !2336}
!8515 = !DILocalVariable(name: "address", arg: 1, scope: !8512, file: !4678, line: 148, type: !2336)
!8516 = !DILocation(line: 148, column: 46, scope: !8512)
!8517 = !DILocation(line: 150, column: 9, scope: !8512)
!8518 = !DILocation(line: 150, column: 2, scope: !8512)
!8519 = distinct !DISubprogram(name: "udc_create_dma_chain", scope: !3, file: !3, line: 758, type: !8520, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!8520 = !DISubroutineType(types: !8521)
!8521 = !{!197, !319, !139, !163, !229}
!8522 = !DILocalVariable(name: "ep", arg: 1, scope: !8519, file: !3, line: 759, type: !319)
!8523 = !DILocation(line: 759, column: 17, scope: !8519)
!8524 = !DILocalVariable(name: "req", arg: 2, scope: !8519, file: !3, line: 760, type: !139)
!8525 = !DILocation(line: 760, column: 22, scope: !8519)
!8526 = !DILocalVariable(name: "buf_len", arg: 3, scope: !8519, file: !3, line: 761, type: !163)
!8527 = !DILocation(line: 761, column: 16, scope: !8519)
!8528 = !DILocalVariable(name: "gfp_flags", arg: 4, scope: !8519, file: !3, line: 761, type: !229)
!8529 = !DILocation(line: 761, column: 31, scope: !8519)
!8530 = !DILocalVariable(name: "bytes", scope: !8519, file: !3, line: 764, type: !163)
!8531 = !DILocation(line: 764, column: 16, scope: !8519)
!8532 = !DILocation(line: 764, column: 24, scope: !8519)
!8533 = !DILocation(line: 764, column: 29, scope: !8519)
!8534 = !DILocation(line: 764, column: 33, scope: !8519)
!8535 = !DILocalVariable(name: "i", scope: !8519, file: !3, line: 765, type: !7)
!8536 = !DILocation(line: 765, column: 15, scope: !8519)
!8537 = !DILocalVariable(name: "dma_addr", scope: !8519, file: !3, line: 766, type: !150)
!8538 = !DILocation(line: 766, column: 13, scope: !8519)
!8539 = !DILocalVariable(name: "td", scope: !8519, file: !3, line: 767, type: !292)
!8540 = !DILocation(line: 767, column: 23, scope: !8519)
!8541 = !DILocalVariable(name: "last", scope: !8519, file: !3, line: 768, type: !292)
!8542 = !DILocation(line: 768, column: 23, scope: !8519)
!8543 = !DILocalVariable(name: "txbytes", scope: !8519, file: !3, line: 769, type: !163)
!8544 = !DILocation(line: 769, column: 16, scope: !8519)
!8545 = !DILocalVariable(name: "create_new_chain", scope: !8519, file: !3, line: 770, type: !7)
!8546 = !DILocation(line: 770, column: 11, scope: !8519)
!8547 = !DILocalVariable(name: "len", scope: !8519, file: !3, line: 771, type: !7)
!8548 = !DILocation(line: 771, column: 11, scope: !8519)
!8549 = !DILocation(line: 773, column: 2, scope: !8519)
!8550 = !DILocation(line: 773, column: 2, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 773, column: 2)
!8552 = !DILocation(line: 775, column: 11, scope: !8519)
!8553 = !DILocation(line: 778, column: 7, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 778, column: 6)
!8555 = !DILocation(line: 778, column: 11, scope: !8554)
!8556 = !DILocation(line: 778, column: 6, scope: !8519)
!8557 = !DILocation(line: 779, column: 3, scope: !8554)
!8558 = !DILocation(line: 779, column: 8, scope: !8554)
!8559 = !DILocation(line: 779, column: 17, scope: !8554)
!8560 = !DILocation(line: 779, column: 24, scope: !8554)
!8561 = !DILocation(line: 782, column: 8, scope: !8519)
!8562 = !DILocation(line: 782, column: 13, scope: !8519)
!8563 = !DILocation(line: 782, column: 17, scope: !8519)
!8564 = !DILocation(line: 782, column: 26, scope: !8519)
!8565 = !DILocation(line: 782, column: 30, scope: !8519)
!8566 = !DILocation(line: 782, column: 33, scope: !8519)
!8567 = !DILocation(line: 782, column: 24, scope: !8519)
!8568 = !DILocation(line: 782, column: 6, scope: !8519)
!8569 = !DILocation(line: 783, column: 6, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 783, column: 6)
!8571 = !DILocation(line: 783, column: 11, scope: !8570)
!8572 = !DILocation(line: 783, column: 15, scope: !8570)
!8573 = !DILocation(line: 783, column: 24, scope: !8570)
!8574 = !DILocation(line: 783, column: 28, scope: !8570)
!8575 = !DILocation(line: 783, column: 31, scope: !8570)
!8576 = !DILocation(line: 783, column: 22, scope: !8570)
!8577 = !DILocation(line: 783, column: 6, scope: !8519)
!8578 = !DILocation(line: 784, column: 6, scope: !8570)
!8579 = !DILocation(line: 784, column: 3, scope: !8570)
!8580 = !DILocation(line: 786, column: 6, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 786, column: 6)
!8582 = !DILocation(line: 786, column: 12, scope: !8581)
!8583 = !DILocation(line: 786, column: 17, scope: !8581)
!8584 = !DILocation(line: 786, column: 10, scope: !8581)
!8585 = !DILocation(line: 786, column: 6, scope: !8519)
!8586 = !DILocation(line: 788, column: 7, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !3, line: 788, column: 7)
!8588 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 786, column: 28)
!8589 = !DILocation(line: 788, column: 12, scope: !8587)
!8590 = !DILocation(line: 788, column: 22, scope: !8587)
!8591 = !DILocation(line: 788, column: 7, scope: !8588)
!8592 = !DILocation(line: 789, column: 23, scope: !8587)
!8593 = !DILocation(line: 789, column: 27, scope: !8587)
!8594 = !DILocation(line: 789, column: 32, scope: !8587)
!8595 = !DILocation(line: 789, column: 4, scope: !8587)
!8596 = !DILocation(line: 790, column: 20, scope: !8588)
!8597 = !DILocation(line: 790, column: 3, scope: !8588)
!8598 = !DILocation(line: 790, column: 8, scope: !8588)
!8599 = !DILocation(line: 790, column: 18, scope: !8588)
!8600 = !DILocation(line: 791, column: 20, scope: !8588)
!8601 = !DILocation(line: 792, column: 2, scope: !8588)
!8602 = !DILocation(line: 794, column: 7, scope: !8519)
!8603 = !DILocation(line: 794, column: 12, scope: !8519)
!8604 = !DILocation(line: 794, column: 5, scope: !8519)
!8605 = !DILocation(line: 796, column: 11, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 796, column: 2)
!8607 = !DILocation(line: 796, column: 9, scope: !8606)
!8608 = !DILocation(line: 796, column: 7, scope: !8606)
!8609 = !DILocation(line: 796, column: 20, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 796, column: 2)
!8611 = !DILocation(line: 796, column: 24, scope: !8610)
!8612 = !DILocation(line: 796, column: 22, scope: !8610)
!8613 = !DILocation(line: 796, column: 2, scope: !8606)
!8614 = !DILocation(line: 798, column: 7, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 798, column: 7)
!8616 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 796, column: 45)
!8617 = !DILocation(line: 798, column: 7, scope: !8616)
!8618 = !DILocation(line: 799, column: 24, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 798, column: 25)
!8620 = !DILocation(line: 799, column: 28, scope: !8619)
!8621 = !DILocation(line: 799, column: 33, scope: !8619)
!8622 = !DILocation(line: 800, column: 10, scope: !8619)
!8623 = !DILocation(line: 799, column: 9, scope: !8619)
!8624 = !DILocation(line: 799, column: 7, scope: !8619)
!8625 = !DILocation(line: 801, column: 9, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 801, column: 8)
!8627 = !DILocation(line: 801, column: 8, scope: !8619)
!8628 = !DILocation(line: 802, column: 5, scope: !8626)
!8629 = !DILocation(line: 804, column: 4, scope: !8619)
!8630 = !DILocation(line: 804, column: 8, scope: !8619)
!8631 = !DILocation(line: 804, column: 15, scope: !8619)
!8632 = !DILocation(line: 805, column: 3, scope: !8619)
!8633 = !DILocation(line: 805, column: 14, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 805, column: 14)
!8635 = !DILocation(line: 805, column: 19, scope: !8634)
!8636 = !DILocation(line: 805, column: 16, scope: !8634)
!8637 = !DILocation(line: 805, column: 14, scope: !8615)
!8638 = !DILocation(line: 808, column: 7, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 805, column: 28)
!8640 = !DILocation(line: 808, column: 12, scope: !8639)
!8641 = !DILocation(line: 808, column: 21, scope: !8639)
!8642 = !DILocation(line: 807, column: 32, scope: !8639)
!8643 = !DILocation(line: 807, column: 9, scope: !8639)
!8644 = !DILocation(line: 807, column: 7, scope: !8639)
!8645 = !DILocation(line: 809, column: 4, scope: !8639)
!8646 = !DILocation(line: 809, column: 8, scope: !8639)
!8647 = !DILocation(line: 809, column: 15, scope: !8639)
!8648 = !DILocation(line: 810, column: 3, scope: !8639)
!8649 = !DILocation(line: 811, column: 45, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 810, column: 10)
!8651 = !DILocation(line: 811, column: 51, scope: !8650)
!8652 = !DILocation(line: 811, column: 32, scope: !8650)
!8653 = !DILocation(line: 811, column: 9, scope: !8650)
!8654 = !DILocation(line: 811, column: 7, scope: !8650)
!8655 = !DILocation(line: 812, column: 4, scope: !8650)
!8656 = !DILocation(line: 812, column: 8, scope: !8650)
!8657 = !DILocation(line: 812, column: 15, scope: !8650)
!8658 = !DILocation(line: 815, column: 7, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 815, column: 7)
!8660 = !DILocation(line: 815, column: 7, scope: !8616)
!8661 = !DILocation(line: 816, column: 17, scope: !8659)
!8662 = !DILocation(line: 816, column: 22, scope: !8659)
!8663 = !DILocation(line: 816, column: 26, scope: !8659)
!8664 = !DILocation(line: 816, column: 32, scope: !8659)
!8665 = !DILocation(line: 816, column: 30, scope: !8659)
!8666 = !DILocation(line: 816, column: 4, scope: !8659)
!8667 = !DILocation(line: 816, column: 8, scope: !8659)
!8668 = !DILocation(line: 816, column: 15, scope: !8659)
!8669 = !DILocation(line: 818, column: 4, scope: !8659)
!8670 = !DILocation(line: 821, column: 8, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 821, column: 7)
!8672 = !DILocation(line: 821, column: 16, scope: !8671)
!8673 = !DILocation(line: 821, column: 14, scope: !8671)
!8674 = !DILocation(line: 821, column: 22, scope: !8671)
!8675 = !DILocation(line: 821, column: 19, scope: !8671)
!8676 = !DILocation(line: 821, column: 7, scope: !8616)
!8677 = !DILocation(line: 822, column: 14, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 821, column: 31)
!8679 = !DILocation(line: 822, column: 12, scope: !8678)
!8680 = !DILocation(line: 823, column: 3, scope: !8678)
!8681 = !DILocation(line: 825, column: 14, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 823, column: 10)
!8683 = !DILocation(line: 825, column: 22, scope: !8682)
!8684 = !DILocation(line: 825, column: 20, scope: !8682)
!8685 = !DILocation(line: 825, column: 12, scope: !8682)
!8686 = !DILocation(line: 829, column: 7, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 829, column: 7)
!8688 = !DILocation(line: 829, column: 12, scope: !8687)
!8689 = !DILocation(line: 829, column: 9, scope: !8687)
!8690 = !DILocation(line: 829, column: 7, scope: !8616)
!8691 = !DILocation(line: 830, column: 8, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 830, column: 8)
!8693 = distinct !DILexicalBlock(scope: !8687, file: !3, line: 829, column: 21)
!8694 = !DILocation(line: 830, column: 8, scope: !8693)
!8695 = !DILocation(line: 831, column: 26, scope: !8692)
!8696 = !DILocation(line: 831, column: 5, scope: !8692)
!8697 = !DILocation(line: 831, column: 10, scope: !8692)
!8698 = !DILocation(line: 831, column: 19, scope: !8692)
!8699 = !DILocation(line: 831, column: 24, scope: !8692)
!8700 = !DILocation(line: 837, column: 8, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 837, column: 8)
!8702 = !DILocation(line: 837, column: 12, scope: !8701)
!8703 = !DILocation(line: 837, column: 8, scope: !8693)
!8704 = !DILocation(line: 840, column: 6, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 837, column: 16)
!8706 = !DILocation(line: 839, column: 5, scope: !8705)
!8707 = !DILocation(line: 839, column: 10, scope: !8705)
!8708 = !DILocation(line: 839, column: 19, scope: !8705)
!8709 = !DILocation(line: 839, column: 26, scope: !8705)
!8710 = !DILocation(line: 844, column: 18, scope: !8705)
!8711 = !DILocation(line: 844, column: 5, scope: !8705)
!8712 = !DILocation(line: 844, column: 9, scope: !8705)
!8713 = !DILocation(line: 844, column: 16, scope: !8705)
!8714 = !DILocation(line: 847, column: 4, scope: !8705)
!8715 = !DILocation(line: 848, column: 3, scope: !8693)
!8716 = !DILocation(line: 849, column: 8, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 849, column: 8)
!8718 = distinct !DILexicalBlock(scope: !8687, file: !3, line: 848, column: 10)
!8719 = !DILocation(line: 849, column: 8, scope: !8718)
!8720 = !DILocation(line: 850, column: 18, scope: !8717)
!8721 = !DILocation(line: 850, column: 5, scope: !8717)
!8722 = !DILocation(line: 850, column: 11, scope: !8717)
!8723 = !DILocation(line: 850, column: 16, scope: !8717)
!8724 = !DILocation(line: 855, column: 8, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 855, column: 8)
!8726 = !DILocation(line: 855, column: 12, scope: !8725)
!8727 = !DILocation(line: 855, column: 8, scope: !8718)
!8728 = !DILocation(line: 857, column: 18, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8725, file: !3, line: 855, column: 16)
!8730 = !DILocation(line: 857, column: 5, scope: !8729)
!8731 = !DILocation(line: 857, column: 9, scope: !8729)
!8732 = !DILocation(line: 857, column: 16, scope: !8729)
!8733 = !DILocation(line: 860, column: 4, scope: !8729)
!8734 = !DILocation(line: 862, column: 10, scope: !8616)
!8735 = !DILocation(line: 862, column: 8, scope: !8616)
!8736 = !DILocation(line: 863, column: 2, scope: !8616)
!8737 = !DILocation(line: 796, column: 36, scope: !8610)
!8738 = !DILocation(line: 796, column: 33, scope: !8610)
!8739 = !DILocation(line: 796, column: 2, scope: !8610)
!8740 = distinct !{!8740, !8613, !8741}
!8741 = !DILocation(line: 863, column: 2, scope: !8606)
!8742 = !DILocation(line: 865, column: 6, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 865, column: 6)
!8744 = !DILocation(line: 865, column: 6, scope: !8519)
!8745 = !DILocation(line: 866, column: 3, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 865, column: 10)
!8747 = !DILocation(line: 866, column: 7, scope: !8746)
!8748 = !DILocation(line: 866, column: 14, scope: !8746)
!8749 = !DILocation(line: 868, column: 23, scope: !8746)
!8750 = !DILocation(line: 868, column: 3, scope: !8746)
!8751 = !DILocation(line: 868, column: 8, scope: !8746)
!8752 = !DILocation(line: 868, column: 21, scope: !8746)
!8753 = !DILocation(line: 869, column: 2, scope: !8746)
!8754 = !DILocation(line: 871, column: 2, scope: !8519)
!8755 = !DILocation(line: 872, column: 1, scope: !8519)
!8756 = distinct !DISubprogram(name: "udc_free_dma_chain", scope: !3, file: !3, line: 564, type: !8757, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!8757 = !DISubroutineType(types: !8758)
!8758 = !{null, !356, !139}
!8759 = !DILocalVariable(name: "dev", arg: 1, scope: !8756, file: !3, line: 564, type: !356)
!8760 = !DILocation(line: 564, column: 44, scope: !8756)
!8761 = !DILocalVariable(name: "req", arg: 2, scope: !8756, file: !3, line: 564, type: !139)
!8762 = !DILocation(line: 564, column: 69, scope: !8756)
!8763 = !DILocalVariable(name: "td", scope: !8756, file: !3, line: 566, type: !292)
!8764 = !DILocation(line: 566, column: 23, scope: !8756)
!8765 = !DILocation(line: 566, column: 28, scope: !8756)
!8766 = !DILocation(line: 566, column: 33, scope: !8756)
!8767 = !DILocalVariable(name: "i", scope: !8756, file: !3, line: 567, type: !7)
!8768 = !DILocation(line: 567, column: 15, scope: !8756)
!8769 = !DILocalVariable(name: "addr_next", scope: !8756, file: !3, line: 569, type: !150)
!8770 = !DILocation(line: 569, column: 13, scope: !8756)
!8771 = !DILocalVariable(name: "addr", scope: !8756, file: !3, line: 570, type: !150)
!8772 = !DILocation(line: 570, column: 13, scope: !8756)
!8773 = !DILocation(line: 570, column: 32, scope: !8756)
!8774 = !DILocation(line: 570, column: 36, scope: !8756)
!8775 = !DILocation(line: 570, column: 20, scope: !8756)
!8776 = !DILocation(line: 575, column: 9, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8756, file: !3, line: 575, column: 2)
!8778 = !DILocation(line: 575, column: 7, scope: !8777)
!8779 = !DILocation(line: 575, column: 14, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 575, column: 2)
!8781 = !DILocation(line: 575, column: 18, scope: !8780)
!8782 = !DILocation(line: 575, column: 23, scope: !8780)
!8783 = !DILocation(line: 575, column: 16, scope: !8780)
!8784 = !DILocation(line: 575, column: 2, scope: !8777)
!8785 = !DILocation(line: 576, column: 21, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 575, column: 39)
!8787 = !DILocation(line: 576, column: 8, scope: !8786)
!8788 = !DILocation(line: 576, column: 6, scope: !8786)
!8789 = !DILocation(line: 577, column: 27, scope: !8786)
!8790 = !DILocation(line: 577, column: 31, scope: !8786)
!8791 = !DILocation(line: 577, column: 15, scope: !8786)
!8792 = !DILocation(line: 577, column: 13, scope: !8786)
!8793 = !DILocation(line: 578, column: 17, scope: !8786)
!8794 = !DILocation(line: 578, column: 22, scope: !8786)
!8795 = !DILocation(line: 578, column: 37, scope: !8786)
!8796 = !DILocation(line: 578, column: 41, scope: !8786)
!8797 = !DILocation(line: 578, column: 3, scope: !8786)
!8798 = !DILocation(line: 579, column: 10, scope: !8786)
!8799 = !DILocation(line: 579, column: 8, scope: !8786)
!8800 = !DILocation(line: 580, column: 2, scope: !8786)
!8801 = !DILocation(line: 575, column: 35, scope: !8780)
!8802 = !DILocation(line: 575, column: 2, scope: !8780)
!8803 = distinct !{!8803, !8784, !8804}
!8804 = !DILocation(line: 580, column: 2, scope: !8777)
!8805 = !DILocation(line: 581, column: 1, scope: !8756)
!8806 = distinct !DISubprogram(name: "ep_init", scope: !3, file: !3, line: 451, type: !8807, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!8807 = !DISubroutineType(types: !8808)
!8808 = !{null, !4362, !319}
!8809 = !DILocalVariable(name: "regs", arg: 1, scope: !8806, file: !3, line: 451, type: !4362)
!8810 = !DILocation(line: 451, column: 46, scope: !8806)
!8811 = !DILocalVariable(name: "ep", arg: 2, scope: !8806, file: !3, line: 451, type: !319)
!8812 = !DILocation(line: 451, column: 67, scope: !8806)
!8813 = !DILocalVariable(name: "tmp", scope: !8806, file: !3, line: 453, type: !296)
!8814 = !DILocation(line: 453, column: 7, scope: !8806)
!8815 = !DILocation(line: 455, column: 2, scope: !8806)
!8816 = !DILocation(line: 455, column: 2, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8806, file: !3, line: 455, column: 2)
!8818 = !DILocation(line: 456, column: 2, scope: !8806)
!8819 = !DILocation(line: 456, column: 6, scope: !8806)
!8820 = !DILocation(line: 456, column: 9, scope: !8806)
!8821 = !DILocation(line: 456, column: 14, scope: !8806)
!8822 = !DILocation(line: 457, column: 2, scope: !8806)
!8823 = !DILocation(line: 457, column: 6, scope: !8806)
!8824 = !DILocation(line: 457, column: 9, scope: !8806)
!8825 = !DILocation(line: 457, column: 13, scope: !8806)
!8826 = !DILocation(line: 458, column: 18, scope: !8806)
!8827 = !DILocation(line: 458, column: 22, scope: !8806)
!8828 = !DILocation(line: 458, column: 2, scope: !8806)
!8829 = !DILocation(line: 460, column: 30, scope: !8806)
!8830 = !DILocation(line: 460, column: 34, scope: !8806)
!8831 = !DILocation(line: 460, column: 2, scope: !8806)
!8832 = !DILocation(line: 462, column: 15, scope: !8806)
!8833 = !DILocation(line: 462, column: 19, scope: !8806)
!8834 = !DILocation(line: 462, column: 25, scope: !8806)
!8835 = !DILocation(line: 462, column: 14, scope: !8806)
!8836 = !DILocation(line: 462, column: 8, scope: !8806)
!8837 = !DILocation(line: 462, column: 6, scope: !8806)
!8838 = !DILocation(line: 463, column: 6, scope: !8806)
!8839 = !DILocation(line: 464, column: 9, scope: !8806)
!8840 = !DILocation(line: 464, column: 15, scope: !8806)
!8841 = !DILocation(line: 464, column: 19, scope: !8806)
!8842 = !DILocation(line: 464, column: 25, scope: !8806)
!8843 = !DILocation(line: 464, column: 14, scope: !8806)
!8844 = !DILocation(line: 464, column: 2, scope: !8806)
!8845 = !DILocation(line: 465, column: 2, scope: !8806)
!8846 = !DILocation(line: 465, column: 6, scope: !8806)
!8847 = !DILocation(line: 465, column: 13, scope: !8806)
!8848 = !DILocation(line: 468, column: 15, scope: !8806)
!8849 = !DILocation(line: 468, column: 21, scope: !8806)
!8850 = !DILocation(line: 468, column: 14, scope: !8806)
!8851 = !DILocation(line: 468, column: 8, scope: !8806)
!8852 = !DILocation(line: 468, column: 6, scope: !8806)
!8853 = !DILocation(line: 469, column: 9, scope: !8806)
!8854 = !DILocation(line: 469, column: 6, scope: !8806)
!8855 = !DILocation(line: 470, column: 9, scope: !8806)
!8856 = !DILocation(line: 470, column: 15, scope: !8806)
!8857 = !DILocation(line: 470, column: 21, scope: !8806)
!8858 = !DILocation(line: 470, column: 14, scope: !8806)
!8859 = !DILocation(line: 470, column: 2, scope: !8806)
!8860 = !DILocation(line: 472, column: 6, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8806, file: !3, line: 472, column: 6)
!8862 = !DILocation(line: 472, column: 10, scope: !8861)
!8863 = !DILocation(line: 472, column: 6, scope: !8806)
!8864 = !DILocation(line: 474, column: 16, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 472, column: 14)
!8866 = !DILocation(line: 474, column: 20, scope: !8865)
!8867 = !DILocation(line: 474, column: 26, scope: !8865)
!8868 = !DILocation(line: 474, column: 15, scope: !8865)
!8869 = !DILocation(line: 474, column: 9, scope: !8865)
!8870 = !DILocation(line: 474, column: 7, scope: !8865)
!8871 = !DILocation(line: 475, column: 7, scope: !8865)
!8872 = !DILocation(line: 476, column: 10, scope: !8865)
!8873 = !DILocation(line: 476, column: 16, scope: !8865)
!8874 = !DILocation(line: 476, column: 20, scope: !8865)
!8875 = !DILocation(line: 476, column: 26, scope: !8865)
!8876 = !DILocation(line: 476, column: 15, scope: !8865)
!8877 = !DILocation(line: 476, column: 3, scope: !8865)
!8878 = !DILocation(line: 478, column: 16, scope: !8865)
!8879 = !DILocation(line: 478, column: 20, scope: !8865)
!8880 = !DILocation(line: 478, column: 26, scope: !8865)
!8881 = !DILocation(line: 478, column: 15, scope: !8865)
!8882 = !DILocation(line: 478, column: 9, scope: !8865)
!8883 = !DILocation(line: 478, column: 7, scope: !8865)
!8884 = !DILocation(line: 479, column: 7, scope: !8865)
!8885 = !DILocation(line: 480, column: 10, scope: !8865)
!8886 = !DILocation(line: 480, column: 16, scope: !8865)
!8887 = !DILocation(line: 480, column: 20, scope: !8865)
!8888 = !DILocation(line: 480, column: 26, scope: !8865)
!8889 = !DILocation(line: 480, column: 15, scope: !8865)
!8890 = !DILocation(line: 480, column: 3, scope: !8865)
!8891 = !DILocation(line: 483, column: 16, scope: !8865)
!8892 = !DILocation(line: 483, column: 20, scope: !8865)
!8893 = !DILocation(line: 483, column: 26, scope: !8865)
!8894 = !DILocation(line: 483, column: 15, scope: !8865)
!8895 = !DILocation(line: 483, column: 9, scope: !8865)
!8896 = !DILocation(line: 483, column: 7, scope: !8865)
!8897 = !DILocation(line: 484, column: 7, scope: !8865)
!8898 = !DILocation(line: 485, column: 10, scope: !8865)
!8899 = !DILocation(line: 485, column: 16, scope: !8865)
!8900 = !DILocation(line: 485, column: 20, scope: !8865)
!8901 = !DILocation(line: 485, column: 26, scope: !8865)
!8902 = !DILocation(line: 485, column: 15, scope: !8865)
!8903 = !DILocation(line: 485, column: 3, scope: !8865)
!8904 = !DILocation(line: 487, column: 2, scope: !8865)
!8905 = !DILocation(line: 489, column: 13, scope: !8806)
!8906 = !DILocation(line: 489, column: 17, scope: !8806)
!8907 = !DILocation(line: 489, column: 23, scope: !8806)
!8908 = !DILocation(line: 489, column: 12, scope: !8806)
!8909 = !DILocation(line: 489, column: 2, scope: !8806)
!8910 = !DILocation(line: 490, column: 1, scope: !8806)
!8911 = distinct !DISubprogram(name: "udc_soft_reset", scope: !3, file: !3, line: 1703, type: !4847, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!8912 = !DILocation(line: 407, column: 64, scope: !7578, inlinedAt: !8913)
!8913 = distinct !DILocation(line: 1724, column: 3, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 1720, column: 35)
!8915 = distinct !DILexicalBlock(scope: !8911, file: !3, line: 1720, column: 6)
!8916 = !DILocation(line: 407, column: 84, scope: !7578, inlinedAt: !8913)
!8917 = !DILocation(line: 327, column: 67, scope: !7586, inlinedAt: !8918)
!8918 = distinct !DILocation(line: 1721, column: 3, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8920, file: !3, line: 1721, column: 3)
!8920 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 1721, column: 3)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 1721, column: 3)
!8922 = distinct !DILexicalBlock(scope: !8923, file: !3, line: 1721, column: 3)
!8923 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 1721, column: 3)
!8924 = !DILocalVariable(name: "dev", arg: 1, scope: !8911, file: !3, line: 1703, type: !356)
!8925 = !DILocation(line: 1703, column: 40, scope: !8911)
!8926 = !DILocalVariable(name: "flags", scope: !8911, file: !3, line: 1705, type: !163)
!8927 = !DILocation(line: 1705, column: 16, scope: !8911)
!8928 = !DILocation(line: 1713, column: 37, scope: !8911)
!8929 = !DILocation(line: 1713, column: 42, scope: !8911)
!8930 = !DILocation(line: 1713, column: 48, scope: !8911)
!8931 = !DILocation(line: 1713, column: 36, scope: !8911)
!8932 = !DILocation(line: 1713, column: 2, scope: !8911)
!8933 = !DILocation(line: 1715, column: 31, scope: !8911)
!8934 = !DILocation(line: 1715, column: 36, scope: !8911)
!8935 = !DILocation(line: 1715, column: 42, scope: !8911)
!8936 = !DILocation(line: 1715, column: 30, scope: !8911)
!8937 = !DILocation(line: 1715, column: 2, scope: !8911)
!8938 = !DILocation(line: 1720, column: 6, scope: !8915)
!8939 = !DILocation(line: 1720, column: 11, scope: !8915)
!8940 = !DILocation(line: 1720, column: 19, scope: !8915)
!8941 = !DILocation(line: 1720, column: 6, scope: !8911)
!8942 = !DILocation(line: 1721, column: 3, scope: !8914)
!8943 = !DILocation(line: 1721, column: 3, scope: !8923)
!8944 = !DILocalVariable(name: "__dummy", scope: !8945, file: !3, line: 1721, type: !163)
!8945 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 1721, column: 3)
!8946 = !DILocation(line: 1721, column: 3, scope: !8945)
!8947 = !DILocalVariable(name: "__dummy2", scope: !8945, file: !3, line: 1721, type: !163)
!8948 = !DILocation(line: 1721, column: 3, scope: !8922)
!8949 = !DILocation(line: 1721, column: 3, scope: !8921)
!8950 = !DILocation(line: 1721, column: 3, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 1721, column: 3)
!8952 = !DILocalVariable(name: "__dummy", scope: !8953, file: !3, line: 1721, type: !163)
!8953 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 1721, column: 3)
!8954 = distinct !DILexicalBlock(scope: !8951, file: !3, line: 1721, column: 3)
!8955 = !DILocation(line: 1721, column: 3, scope: !8953)
!8956 = !DILocalVariable(name: "__dummy2", scope: !8953, file: !3, line: 1721, type: !163)
!8957 = !DILocation(line: 1721, column: 3, scope: !8954)
!8958 = !DILocation(line: 1721, column: 3, scope: !8920)
!8959 = !{i32 -2141447225}
!8960 = !DILocation(line: 329, column: 10, scope: !7586, inlinedAt: !8918)
!8961 = !DILocation(line: 329, column: 16, scope: !7586, inlinedAt: !8918)
!8962 = !DILocation(line: 1721, column: 3, scope: !8919)
!8963 = !DILocation(line: 1722, column: 42, scope: !8914)
!8964 = !DILocation(line: 1722, column: 47, scope: !8914)
!8965 = !DILocation(line: 1722, column: 53, scope: !8914)
!8966 = !DILocation(line: 1722, column: 41, scope: !8914)
!8967 = !DILocation(line: 1722, column: 3, scope: !8914)
!8968 = !DILocation(line: 1723, column: 10, scope: !8914)
!8969 = !DILocation(line: 1723, column: 15, scope: !8914)
!8970 = !DILocation(line: 1723, column: 21, scope: !8914)
!8971 = !DILocation(line: 1723, column: 9, scope: !8914)
!8972 = !DILocation(line: 1723, column: 3, scope: !8914)
!8973 = !DILocation(line: 1724, column: 45, scope: !8914)
!8974 = !DILocation(line: 409, column: 2, scope: !7747, inlinedAt: !8913)
!8975 = !DILocation(line: 409, column: 2, scope: !7752, inlinedAt: !8913)
!8976 = !DILocation(line: 409, column: 2, scope: !7753, inlinedAt: !8913)
!8977 = !DILocation(line: 409, column: 2, scope: !7760, inlinedAt: !8913)
!8978 = !DILocation(line: 409, column: 2, scope: !7763, inlinedAt: !8913)
!8979 = !DILocation(line: 1725, column: 2, scope: !8914)
!8980 = !DILocation(line: 1726, column: 1, scope: !8911)
!8981 = distinct !DISubprogram(name: "udc_setup_endpoints", scope: !3, file: !3, line: 1525, type: !4847, scopeLine: 1526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!8982 = !DILocalVariable(name: "dev", arg: 1, scope: !8981, file: !3, line: 1525, type: !356)
!8983 = !DILocation(line: 1525, column: 45, scope: !8981)
!8984 = !DILocalVariable(name: "ep", scope: !8981, file: !3, line: 1527, type: !319)
!8985 = !DILocation(line: 1527, column: 17, scope: !8981)
!8986 = !DILocalVariable(name: "tmp", scope: !8981, file: !3, line: 1528, type: !296)
!8987 = !DILocation(line: 1528, column: 6, scope: !8981)
!8988 = !DILocalVariable(name: "reg", scope: !8981, file: !3, line: 1529, type: !296)
!8989 = !DILocation(line: 1529, column: 6, scope: !8981)
!8990 = !DILocation(line: 1534, column: 15, scope: !8981)
!8991 = !DILocation(line: 1534, column: 20, scope: !8981)
!8992 = !DILocation(line: 1534, column: 26, scope: !8981)
!8993 = !DILocation(line: 1534, column: 14, scope: !8981)
!8994 = !DILocation(line: 1534, column: 8, scope: !8981)
!8995 = !DILocation(line: 1534, column: 6, scope: !8981)
!8996 = !DILocation(line: 1535, column: 8, scope: !8981)
!8997 = !DILocation(line: 1535, column: 6, scope: !8981)
!8998 = !DILocation(line: 1536, column: 6, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 1536, column: 6)
!9000 = !DILocation(line: 1536, column: 10, scope: !8999)
!9001 = !DILocation(line: 1536, column: 6, scope: !8981)
!9002 = !DILocation(line: 1537, column: 3, scope: !8999)
!9003 = !DILocation(line: 1537, column: 8, scope: !8999)
!9004 = !DILocation(line: 1537, column: 15, scope: !8999)
!9005 = !DILocation(line: 1537, column: 21, scope: !8999)
!9006 = !DILocation(line: 1538, column: 11, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 1538, column: 11)
!9008 = !DILocation(line: 1538, column: 15, scope: !9007)
!9009 = !DILocation(line: 1538, column: 11, scope: !8999)
!9010 = !DILocation(line: 1539, column: 3, scope: !9007)
!9011 = !DILocation(line: 1539, column: 8, scope: !9007)
!9012 = !DILocation(line: 1539, column: 15, scope: !9007)
!9013 = !DILocation(line: 1539, column: 21, scope: !9007)
!9014 = !DILocation(line: 1542, column: 11, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 1542, column: 2)
!9016 = !DILocation(line: 1542, column: 7, scope: !9015)
!9017 = !DILocation(line: 1542, column: 16, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 1542, column: 2)
!9019 = !DILocation(line: 1542, column: 20, scope: !9018)
!9020 = !DILocation(line: 1542, column: 2, scope: !9015)
!9021 = !DILocation(line: 1543, column: 9, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 1542, column: 41)
!9023 = !DILocation(line: 1543, column: 14, scope: !9022)
!9024 = !DILocation(line: 1543, column: 17, scope: !9022)
!9025 = !DILocation(line: 1543, column: 6, scope: !9022)
!9026 = !DILocation(line: 1544, column: 13, scope: !9022)
!9027 = !DILocation(line: 1544, column: 3, scope: !9022)
!9028 = !DILocation(line: 1544, column: 7, scope: !9022)
!9029 = !DILocation(line: 1544, column: 11, scope: !9022)
!9030 = !DILocation(line: 1545, column: 25, scope: !9022)
!9031 = !DILocation(line: 1545, column: 17, scope: !9022)
!9032 = !DILocation(line: 1545, column: 30, scope: !9022)
!9033 = !DILocation(line: 1545, column: 3, scope: !9022)
!9034 = !DILocation(line: 1545, column: 7, scope: !9022)
!9035 = !DILocation(line: 1545, column: 10, scope: !9022)
!9036 = !DILocation(line: 1545, column: 15, scope: !9022)
!9037 = !DILocation(line: 1546, column: 3, scope: !9022)
!9038 = !DILocation(line: 1546, column: 7, scope: !9022)
!9039 = !DILocation(line: 1546, column: 10, scope: !9022)
!9040 = !DILocation(line: 1546, column: 25, scope: !9022)
!9041 = !DILocation(line: 1546, column: 17, scope: !9022)
!9042 = !DILocation(line: 1546, column: 30, scope: !9022)
!9043 = !DILocation(line: 1547, column: 13, scope: !9022)
!9044 = !DILocation(line: 1547, column: 3, scope: !9022)
!9045 = !DILocation(line: 1547, column: 7, scope: !9022)
!9046 = !DILocation(line: 1547, column: 11, scope: !9022)
!9047 = !DILocation(line: 1549, column: 16, scope: !9022)
!9048 = !DILocation(line: 1549, column: 21, scope: !9022)
!9049 = !DILocation(line: 1549, column: 3, scope: !9022)
!9050 = !DILocation(line: 1549, column: 7, scope: !9022)
!9051 = !DILocation(line: 1549, column: 14, scope: !9022)
!9052 = !DILocation(line: 1552, column: 7, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 1552, column: 7)
!9054 = !DILocation(line: 1552, column: 11, scope: !9053)
!9055 = !DILocation(line: 1552, column: 7, scope: !9022)
!9056 = !DILocation(line: 1553, column: 4, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 1552, column: 27)
!9058 = !DILocation(line: 1553, column: 8, scope: !9057)
!9059 = !DILocation(line: 1553, column: 19, scope: !9057)
!9060 = !DILocation(line: 1554, column: 4, scope: !9057)
!9061 = !DILocation(line: 1554, column: 8, scope: !9057)
!9062 = !DILocation(line: 1554, column: 11, scope: !9057)
!9063 = !DILocation(line: 1555, column: 3, scope: !9057)
!9064 = !DILocation(line: 1556, column: 4, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 1555, column: 10)
!9066 = !DILocation(line: 1556, column: 8, scope: !9065)
!9067 = !DILocation(line: 1556, column: 19, scope: !9065)
!9068 = !DILocation(line: 1557, column: 4, scope: !9065)
!9069 = !DILocation(line: 1557, column: 8, scope: !9065)
!9070 = !DILocation(line: 1557, column: 11, scope: !9065)
!9071 = !DILocation(line: 1560, column: 15, scope: !9022)
!9072 = !DILocation(line: 1560, column: 20, scope: !9022)
!9073 = !DILocation(line: 1560, column: 28, scope: !9022)
!9074 = !DILocation(line: 1560, column: 3, scope: !9022)
!9075 = !DILocation(line: 1560, column: 7, scope: !9022)
!9076 = !DILocation(line: 1560, column: 12, scope: !9022)
!9077 = !DILocation(line: 1566, column: 8, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 1566, column: 7)
!9079 = !DILocation(line: 1566, column: 12, scope: !9078)
!9080 = !DILocation(line: 1566, column: 15, scope: !9078)
!9081 = !DILocation(line: 1566, column: 7, scope: !9022)
!9082 = !DILocation(line: 1567, column: 12, scope: !9078)
!9083 = !DILocation(line: 1567, column: 17, scope: !9078)
!9084 = !DILocation(line: 1567, column: 23, scope: !9078)
!9085 = !DILocation(line: 1567, column: 4, scope: !9078)
!9086 = !DILocation(line: 1569, column: 7, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 1569, column: 7)
!9088 = !DILocation(line: 1569, column: 7, scope: !9022)
!9089 = !DILocation(line: 1575, column: 15, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1569, column: 16)
!9091 = !DILocation(line: 1575, column: 20, scope: !9090)
!9092 = !DILocation(line: 1575, column: 26, scope: !9090)
!9093 = !DILocation(line: 1575, column: 4, scope: !9090)
!9094 = !DILocation(line: 1575, column: 8, scope: !9090)
!9095 = !DILocation(line: 1575, column: 12, scope: !9090)
!9096 = !DILocation(line: 1578, column: 8, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 1578, column: 8)
!9098 = !DILocation(line: 1578, column: 12, scope: !9097)
!9099 = !DILocation(line: 1578, column: 28, scope: !9097)
!9100 = !DILocation(line: 1578, column: 31, scope: !9097)
!9101 = !DILocation(line: 1578, column: 35, scope: !9097)
!9102 = !DILocation(line: 1579, column: 7, scope: !9097)
!9103 = !DILocation(line: 1579, column: 10, scope: !9097)
!9104 = !DILocation(line: 1579, column: 14, scope: !9097)
!9105 = !DILocation(line: 1578, column: 8, scope: !9090)
!9106 = !DILocation(line: 1581, column: 18, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 1579, column: 30)
!9108 = !DILocation(line: 1581, column: 23, scope: !9107)
!9109 = !DILocation(line: 1581, column: 26, scope: !9107)
!9110 = !DILocation(line: 1581, column: 31, scope: !9107)
!9111 = !DILocation(line: 1581, column: 37, scope: !9107)
!9112 = !DILocation(line: 1581, column: 17, scope: !9107)
!9113 = !DILocation(line: 1581, column: 11, scope: !9107)
!9114 = !DILocation(line: 1581, column: 9, scope: !9107)
!9115 = !DILocation(line: 1582, column: 9, scope: !9107)
!9116 = !DILocation(line: 1583, column: 12, scope: !9107)
!9117 = !DILocation(line: 1583, column: 18, scope: !9107)
!9118 = !DILocation(line: 1583, column: 23, scope: !9107)
!9119 = !DILocation(line: 1583, column: 26, scope: !9107)
!9120 = !DILocation(line: 1583, column: 31, scope: !9107)
!9121 = !DILocation(line: 1583, column: 37, scope: !9107)
!9122 = !DILocation(line: 1583, column: 17, scope: !9107)
!9123 = !DILocation(line: 1583, column: 5, scope: !9107)
!9124 = !DILocation(line: 1584, column: 5, scope: !9107)
!9125 = !DILocation(line: 1584, column: 10, scope: !9107)
!9126 = !DILocation(line: 1584, column: 13, scope: !9107)
!9127 = !DILocation(line: 1584, column: 18, scope: !9107)
!9128 = !DILocation(line: 1584, column: 25, scope: !9107)
!9129 = !DILocation(line: 1586, column: 4, scope: !9107)
!9130 = !DILocation(line: 1587, column: 3, scope: !9090)
!9131 = !DILocation(line: 1588, column: 2, scope: !9022)
!9132 = !DILocation(line: 1542, column: 37, scope: !9018)
!9133 = !DILocation(line: 1542, column: 2, scope: !9018)
!9134 = distinct !{!9134, !9020, !9135}
!9135 = !DILocation(line: 1588, column: 2, scope: !9015)
!9136 = !DILocation(line: 1590, column: 6, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 1590, column: 6)
!9138 = !DILocation(line: 1590, column: 11, scope: !9137)
!9139 = !DILocation(line: 1590, column: 18, scope: !9137)
!9140 = !DILocation(line: 1590, column: 24, scope: !9137)
!9141 = !DILocation(line: 1590, column: 6, scope: !8981)
!9142 = !DILocation(line: 1591, column: 31, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 1590, column: 43)
!9144 = !DILocation(line: 1591, column: 36, scope: !9143)
!9145 = !DILocation(line: 1591, column: 53, scope: !9143)
!9146 = !DILocation(line: 1591, column: 3, scope: !9143)
!9147 = !DILocation(line: 1593, column: 31, scope: !9143)
!9148 = !DILocation(line: 1593, column: 36, scope: !9143)
!9149 = !DILocation(line: 1593, column: 54, scope: !9143)
!9150 = !DILocation(line: 1593, column: 3, scope: !9143)
!9151 = !DILocation(line: 1595, column: 2, scope: !9143)
!9152 = !DILocation(line: 1595, column: 13, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 1595, column: 13)
!9154 = !DILocation(line: 1595, column: 18, scope: !9153)
!9155 = !DILocation(line: 1595, column: 25, scope: !9153)
!9156 = !DILocation(line: 1595, column: 31, scope: !9153)
!9157 = !DILocation(line: 1595, column: 13, scope: !9137)
!9158 = !DILocation(line: 1596, column: 31, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 1595, column: 50)
!9160 = !DILocation(line: 1596, column: 36, scope: !9159)
!9161 = !DILocation(line: 1596, column: 53, scope: !9159)
!9162 = !DILocation(line: 1596, column: 3, scope: !9159)
!9163 = !DILocation(line: 1598, column: 31, scope: !9159)
!9164 = !DILocation(line: 1598, column: 36, scope: !9159)
!9165 = !DILocation(line: 1598, column: 54, scope: !9159)
!9166 = !DILocation(line: 1598, column: 3, scope: !9159)
!9167 = !DILocation(line: 1600, column: 2, scope: !9159)
!9168 = !DILocation(line: 1606, column: 21, scope: !8981)
!9169 = !DILocation(line: 1606, column: 26, scope: !8981)
!9170 = !DILocation(line: 1606, column: 43, scope: !8981)
!9171 = !DILocation(line: 1606, column: 2, scope: !8981)
!9172 = !DILocation(line: 1606, column: 7, scope: !8981)
!9173 = !DILocation(line: 1606, column: 14, scope: !8981)
!9174 = !DILocation(line: 1606, column: 18, scope: !8981)
!9175 = !DILocation(line: 1607, column: 2, scope: !8981)
!9176 = !DILocation(line: 1607, column: 7, scope: !8981)
!9177 = !DILocation(line: 1607, column: 24, scope: !8981)
!9178 = !DILocation(line: 1607, column: 31, scope: !8981)
!9179 = !DILocation(line: 1608, column: 18, scope: !8981)
!9180 = !DILocation(line: 1608, column: 23, scope: !8981)
!9181 = !DILocation(line: 1608, column: 30, scope: !8981)
!9182 = !DILocation(line: 1608, column: 35, scope: !8981)
!9183 = !DILocation(line: 1608, column: 2, scope: !8981)
!9184 = !DILocation(line: 1611, column: 2, scope: !8981)
!9185 = !DILocation(line: 1611, column: 7, scope: !8981)
!9186 = !DILocation(line: 1611, column: 18, scope: !8981)
!9187 = !DILocation(line: 1612, column: 2, scope: !8981)
!9188 = !DILocation(line: 1612, column: 7, scope: !8981)
!9189 = !DILocation(line: 1612, column: 16, scope: !8981)
!9190 = !DILocation(line: 1613, column: 2, scope: !8981)
!9191 = !DILocation(line: 1613, column: 7, scope: !8981)
!9192 = !DILocation(line: 1613, column: 15, scope: !8981)
!9193 = !DILocation(line: 1614, column: 1, scope: !8981)
!9194 = distinct !DISubprogram(name: "activate_control_endpoints", scope: !3, file: !3, line: 1843, type: !4847, scopeLine: 1844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!9195 = !DILocalVariable(name: "dev", arg: 1, scope: !9194, file: !3, line: 1843, type: !356)
!9196 = !DILocation(line: 1843, column: 52, scope: !9194)
!9197 = !DILocalVariable(name: "tmp", scope: !9194, file: !3, line: 1845, type: !296)
!9198 = !DILocation(line: 1845, column: 6, scope: !9194)
!9199 = !DILocation(line: 1850, column: 15, scope: !9194)
!9200 = !DILocation(line: 1850, column: 20, scope: !9194)
!9201 = !DILocation(line: 1850, column: 37, scope: !9194)
!9202 = !DILocation(line: 1850, column: 43, scope: !9194)
!9203 = !DILocation(line: 1850, column: 14, scope: !9194)
!9204 = !DILocation(line: 1850, column: 8, scope: !9194)
!9205 = !DILocation(line: 1850, column: 6, scope: !9194)
!9206 = !DILocation(line: 1851, column: 6, scope: !9194)
!9207 = !DILocation(line: 1852, column: 9, scope: !9194)
!9208 = !DILocation(line: 1852, column: 15, scope: !9194)
!9209 = !DILocation(line: 1852, column: 20, scope: !9194)
!9210 = !DILocation(line: 1852, column: 37, scope: !9194)
!9211 = !DILocation(line: 1852, column: 43, scope: !9194)
!9212 = !DILocation(line: 1852, column: 14, scope: !9194)
!9213 = !DILocation(line: 1852, column: 2, scope: !9194)
!9214 = !DILocation(line: 1855, column: 2, scope: !9194)
!9215 = !DILocation(line: 1855, column: 7, scope: !9194)
!9216 = !DILocation(line: 1855, column: 24, scope: !9194)
!9217 = !DILocation(line: 1855, column: 27, scope: !9194)
!9218 = !DILocation(line: 1856, column: 2, scope: !9194)
!9219 = !DILocation(line: 1856, column: 7, scope: !9194)
!9220 = !DILocation(line: 1856, column: 25, scope: !9194)
!9221 = !DILocation(line: 1856, column: 28, scope: !9194)
!9222 = !DILocation(line: 1859, column: 15, scope: !9194)
!9223 = !DILocation(line: 1859, column: 20, scope: !9194)
!9224 = !DILocation(line: 1859, column: 37, scope: !9194)
!9225 = !DILocation(line: 1859, column: 43, scope: !9194)
!9226 = !DILocation(line: 1859, column: 14, scope: !9194)
!9227 = !DILocation(line: 1859, column: 8, scope: !9194)
!9228 = !DILocation(line: 1859, column: 6, scope: !9194)
!9229 = !DILocation(line: 1860, column: 6, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9194, file: !3, line: 1860, column: 6)
!9231 = !DILocation(line: 1860, column: 11, scope: !9230)
!9232 = !DILocation(line: 1860, column: 18, scope: !9230)
!9233 = !DILocation(line: 1860, column: 24, scope: !9230)
!9234 = !DILocation(line: 1860, column: 6, scope: !9194)
!9235 = !DILocation(line: 1861, column: 9, scope: !9230)
!9236 = !DILocation(line: 1861, column: 7, scope: !9230)
!9237 = !DILocation(line: 1861, column: 3, scope: !9230)
!9238 = !DILocation(line: 1863, column: 11, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9230, file: !3, line: 1863, column: 11)
!9240 = !DILocation(line: 1863, column: 16, scope: !9239)
!9241 = !DILocation(line: 1863, column: 23, scope: !9239)
!9242 = !DILocation(line: 1863, column: 29, scope: !9239)
!9243 = !DILocation(line: 1863, column: 11, scope: !9230)
!9244 = !DILocation(line: 1864, column: 9, scope: !9239)
!9245 = !DILocation(line: 1864, column: 7, scope: !9239)
!9246 = !DILocation(line: 1864, column: 3, scope: !9239)
!9247 = !DILocation(line: 1866, column: 9, scope: !9194)
!9248 = !DILocation(line: 1866, column: 15, scope: !9194)
!9249 = !DILocation(line: 1866, column: 20, scope: !9194)
!9250 = !DILocation(line: 1866, column: 37, scope: !9194)
!9251 = !DILocation(line: 1866, column: 43, scope: !9194)
!9252 = !DILocation(line: 1866, column: 14, scope: !9194)
!9253 = !DILocation(line: 1866, column: 2, scope: !9194)
!9254 = !DILocation(line: 1869, column: 15, scope: !9194)
!9255 = !DILocation(line: 1869, column: 20, scope: !9194)
!9256 = !DILocation(line: 1869, column: 37, scope: !9194)
!9257 = !DILocation(line: 1869, column: 43, scope: !9194)
!9258 = !DILocation(line: 1869, column: 14, scope: !9194)
!9259 = !DILocation(line: 1869, column: 8, scope: !9194)
!9260 = !DILocation(line: 1869, column: 6, scope: !9194)
!9261 = !DILocation(line: 1870, column: 6, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9194, file: !3, line: 1870, column: 6)
!9263 = !DILocation(line: 1870, column: 11, scope: !9262)
!9264 = !DILocation(line: 1870, column: 18, scope: !9262)
!9265 = !DILocation(line: 1870, column: 24, scope: !9262)
!9266 = !DILocation(line: 1870, column: 6, scope: !9194)
!9267 = !DILocation(line: 1871, column: 9, scope: !9262)
!9268 = !DILocation(line: 1871, column: 7, scope: !9262)
!9269 = !DILocation(line: 1871, column: 3, scope: !9262)
!9270 = !DILocation(line: 1873, column: 11, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 1873, column: 11)
!9272 = !DILocation(line: 1873, column: 16, scope: !9271)
!9273 = !DILocation(line: 1873, column: 23, scope: !9271)
!9274 = !DILocation(line: 1873, column: 29, scope: !9271)
!9275 = !DILocation(line: 1873, column: 11, scope: !9262)
!9276 = !DILocation(line: 1874, column: 9, scope: !9271)
!9277 = !DILocation(line: 1874, column: 7, scope: !9271)
!9278 = !DILocation(line: 1874, column: 3, scope: !9271)
!9279 = !DILocation(line: 1876, column: 9, scope: !9194)
!9280 = !DILocation(line: 1876, column: 15, scope: !9194)
!9281 = !DILocation(line: 1876, column: 20, scope: !9194)
!9282 = !DILocation(line: 1876, column: 37, scope: !9194)
!9283 = !DILocation(line: 1876, column: 43, scope: !9194)
!9284 = !DILocation(line: 1876, column: 14, scope: !9194)
!9285 = !DILocation(line: 1876, column: 2, scope: !9194)
!9286 = !DILocation(line: 1879, column: 15, scope: !9194)
!9287 = !DILocation(line: 1879, column: 20, scope: !9194)
!9288 = !DILocation(line: 1879, column: 38, scope: !9194)
!9289 = !DILocation(line: 1879, column: 44, scope: !9194)
!9290 = !DILocation(line: 1879, column: 14, scope: !9194)
!9291 = !DILocation(line: 1879, column: 8, scope: !9194)
!9292 = !DILocation(line: 1879, column: 6, scope: !9194)
!9293 = !DILocation(line: 1880, column: 6, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9194, file: !3, line: 1880, column: 6)
!9295 = !DILocation(line: 1880, column: 11, scope: !9294)
!9296 = !DILocation(line: 1880, column: 18, scope: !9294)
!9297 = !DILocation(line: 1880, column: 24, scope: !9294)
!9298 = !DILocation(line: 1880, column: 6, scope: !9194)
!9299 = !DILocation(line: 1881, column: 9, scope: !9294)
!9300 = !DILocation(line: 1881, column: 7, scope: !9294)
!9301 = !DILocation(line: 1881, column: 3, scope: !9294)
!9302 = !DILocation(line: 1883, column: 11, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9294, file: !3, line: 1883, column: 11)
!9304 = !DILocation(line: 1883, column: 16, scope: !9303)
!9305 = !DILocation(line: 1883, column: 23, scope: !9303)
!9306 = !DILocation(line: 1883, column: 29, scope: !9303)
!9307 = !DILocation(line: 1883, column: 11, scope: !9294)
!9308 = !DILocation(line: 1884, column: 9, scope: !9303)
!9309 = !DILocation(line: 1884, column: 7, scope: !9303)
!9310 = !DILocation(line: 1884, column: 3, scope: !9303)
!9311 = !DILocation(line: 1886, column: 9, scope: !9194)
!9312 = !DILocation(line: 1886, column: 15, scope: !9194)
!9313 = !DILocation(line: 1886, column: 20, scope: !9194)
!9314 = !DILocation(line: 1886, column: 38, scope: !9194)
!9315 = !DILocation(line: 1886, column: 44, scope: !9194)
!9316 = !DILocation(line: 1886, column: 14, scope: !9194)
!9317 = !DILocation(line: 1886, column: 2, scope: !9194)
!9318 = !DILocation(line: 1889, column: 15, scope: !9194)
!9319 = !DILocation(line: 1889, column: 20, scope: !9194)
!9320 = !DILocation(line: 1889, column: 25, scope: !9194)
!9321 = !DILocation(line: 1889, column: 14, scope: !9194)
!9322 = !DILocation(line: 1889, column: 8, scope: !9194)
!9323 = !DILocation(line: 1889, column: 6, scope: !9194)
!9324 = !DILocation(line: 1890, column: 6, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9194, file: !3, line: 1890, column: 6)
!9326 = !DILocation(line: 1890, column: 11, scope: !9325)
!9327 = !DILocation(line: 1890, column: 18, scope: !9325)
!9328 = !DILocation(line: 1890, column: 24, scope: !9325)
!9329 = !DILocation(line: 1890, column: 6, scope: !9194)
!9330 = !DILocation(line: 1891, column: 9, scope: !9325)
!9331 = !DILocation(line: 1891, column: 7, scope: !9325)
!9332 = !DILocation(line: 1891, column: 3, scope: !9325)
!9333 = !DILocation(line: 1893, column: 11, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9325, file: !3, line: 1893, column: 11)
!9335 = !DILocation(line: 1893, column: 16, scope: !9334)
!9336 = !DILocation(line: 1893, column: 23, scope: !9334)
!9337 = !DILocation(line: 1893, column: 29, scope: !9334)
!9338 = !DILocation(line: 1893, column: 11, scope: !9325)
!9339 = !DILocation(line: 1894, column: 9, scope: !9334)
!9340 = !DILocation(line: 1894, column: 7, scope: !9334)
!9341 = !DILocation(line: 1894, column: 3, scope: !9334)
!9342 = !DILocation(line: 1896, column: 9, scope: !9194)
!9343 = !DILocation(line: 1896, column: 15, scope: !9194)
!9344 = !DILocation(line: 1896, column: 20, scope: !9194)
!9345 = !DILocation(line: 1896, column: 25, scope: !9194)
!9346 = !DILocation(line: 1896, column: 14, scope: !9194)
!9347 = !DILocation(line: 1896, column: 2, scope: !9194)
!9348 = !DILocation(line: 1898, column: 6, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9194, file: !3, line: 1898, column: 6)
!9350 = !DILocation(line: 1898, column: 6, scope: !9194)
!9351 = !DILocation(line: 1899, column: 3, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9349, file: !3, line: 1898, column: 15)
!9353 = !DILocation(line: 1899, column: 8, scope: !9352)
!9354 = !DILocation(line: 1899, column: 26, scope: !9352)
!9355 = !DILocation(line: 1899, column: 30, scope: !9352)
!9356 = !DILocation(line: 1899, column: 37, scope: !9352)
!9357 = !DILocation(line: 1902, column: 10, scope: !9352)
!9358 = !DILocation(line: 1902, column: 15, scope: !9352)
!9359 = !DILocation(line: 1902, column: 33, scope: !9352)
!9360 = !DILocation(line: 1903, column: 5, scope: !9352)
!9361 = !DILocation(line: 1903, column: 10, scope: !9352)
!9362 = !DILocation(line: 1903, column: 28, scope: !9352)
!9363 = !DILocation(line: 1903, column: 34, scope: !9352)
!9364 = !DILocation(line: 1903, column: 4, scope: !9352)
!9365 = !DILocation(line: 1902, column: 3, scope: !9352)
!9366 = !DILocation(line: 1904, column: 10, scope: !9352)
!9367 = !DILocation(line: 1904, column: 15, scope: !9352)
!9368 = !DILocation(line: 1904, column: 33, scope: !9352)
!9369 = !DILocation(line: 1905, column: 5, scope: !9352)
!9370 = !DILocation(line: 1905, column: 10, scope: !9352)
!9371 = !DILocation(line: 1905, column: 28, scope: !9352)
!9372 = !DILocation(line: 1905, column: 34, scope: !9352)
!9373 = !DILocation(line: 1905, column: 4, scope: !9352)
!9374 = !DILocation(line: 1904, column: 3, scope: !9352)
!9375 = !DILocation(line: 1907, column: 7, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9352, file: !3, line: 1907, column: 7)
!9377 = !DILocation(line: 1907, column: 7, scope: !9352)
!9378 = !DILocation(line: 1908, column: 12, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9376, file: !3, line: 1907, column: 34)
!9380 = !DILocation(line: 1909, column: 26, scope: !9379)
!9381 = !DILocation(line: 1909, column: 34, scope: !9379)
!9382 = !DILocation(line: 1909, column: 4, scope: !9379)
!9383 = !DILocation(line: 1910, column: 3, scope: !9379)
!9384 = !DILocation(line: 1912, column: 7, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9352, file: !3, line: 1912, column: 7)
!9386 = !DILocation(line: 1912, column: 7, scope: !9352)
!9387 = !DILocation(line: 1913, column: 36, scope: !9385)
!9388 = !DILocation(line: 1913, column: 44, scope: !9385)
!9389 = !DILocation(line: 1913, column: 4, scope: !9385)
!9390 = !DILocation(line: 1915, column: 16, scope: !9352)
!9391 = !DILocation(line: 1915, column: 21, scope: !9352)
!9392 = !DILocation(line: 1915, column: 27, scope: !9352)
!9393 = !DILocation(line: 1915, column: 15, scope: !9352)
!9394 = !DILocation(line: 1915, column: 9, scope: !9352)
!9395 = !DILocation(line: 1915, column: 7, scope: !9352)
!9396 = !DILocation(line: 1916, column: 7, scope: !9352)
!9397 = !DILocation(line: 1919, column: 7, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9352, file: !3, line: 1919, column: 7)
!9399 = !DILocation(line: 1919, column: 7, scope: !9352)
!9400 = !DILocation(line: 1920, column: 8, scope: !9398)
!9401 = !DILocation(line: 1920, column: 4, scope: !9398)
!9402 = !DILocation(line: 1921, column: 12, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9398, file: !3, line: 1921, column: 12)
!9404 = !DILocation(line: 1921, column: 12, scope: !9398)
!9405 = !DILocation(line: 1922, column: 8, scope: !9403)
!9406 = !DILocation(line: 1922, column: 4, scope: !9403)
!9407 = !DILocation(line: 1923, column: 10, scope: !9352)
!9408 = !DILocation(line: 1923, column: 16, scope: !9352)
!9409 = !DILocation(line: 1923, column: 21, scope: !9352)
!9410 = !DILocation(line: 1923, column: 27, scope: !9352)
!9411 = !DILocation(line: 1923, column: 15, scope: !9352)
!9412 = !DILocation(line: 1923, column: 3, scope: !9352)
!9413 = !DILocation(line: 1924, column: 2, scope: !9352)
!9414 = !DILocation(line: 1927, column: 15, scope: !9194)
!9415 = !DILocation(line: 1927, column: 20, scope: !9194)
!9416 = !DILocation(line: 1927, column: 37, scope: !9194)
!9417 = !DILocation(line: 1927, column: 43, scope: !9194)
!9418 = !DILocation(line: 1927, column: 14, scope: !9194)
!9419 = !DILocation(line: 1927, column: 8, scope: !9194)
!9420 = !DILocation(line: 1927, column: 6, scope: !9194)
!9421 = !DILocation(line: 1928, column: 6, scope: !9194)
!9422 = !DILocation(line: 1929, column: 9, scope: !9194)
!9423 = !DILocation(line: 1929, column: 15, scope: !9194)
!9424 = !DILocation(line: 1929, column: 20, scope: !9194)
!9425 = !DILocation(line: 1929, column: 37, scope: !9194)
!9426 = !DILocation(line: 1929, column: 43, scope: !9194)
!9427 = !DILocation(line: 1929, column: 14, scope: !9194)
!9428 = !DILocation(line: 1929, column: 2, scope: !9194)
!9429 = !DILocation(line: 1930, column: 2, scope: !9194)
!9430 = !DILocation(line: 1930, column: 7, scope: !9194)
!9431 = !DILocation(line: 1930, column: 24, scope: !9194)
!9432 = !DILocation(line: 1930, column: 31, scope: !9194)
!9433 = !DILocation(line: 1931, column: 18, scope: !9194)
!9434 = !DILocation(line: 1931, column: 23, scope: !9194)
!9435 = !DILocation(line: 1931, column: 2, scope: !9194)
!9436 = !DILocation(line: 1934, column: 15, scope: !9194)
!9437 = !DILocation(line: 1934, column: 20, scope: !9194)
!9438 = !DILocation(line: 1934, column: 38, scope: !9194)
!9439 = !DILocation(line: 1934, column: 44, scope: !9194)
!9440 = !DILocation(line: 1934, column: 14, scope: !9194)
!9441 = !DILocation(line: 1934, column: 8, scope: !9194)
!9442 = !DILocation(line: 1934, column: 6, scope: !9194)
!9443 = !DILocation(line: 1935, column: 6, scope: !9194)
!9444 = !DILocation(line: 1936, column: 9, scope: !9194)
!9445 = !DILocation(line: 1936, column: 15, scope: !9194)
!9446 = !DILocation(line: 1936, column: 20, scope: !9194)
!9447 = !DILocation(line: 1936, column: 38, scope: !9194)
!9448 = !DILocation(line: 1936, column: 44, scope: !9194)
!9449 = !DILocation(line: 1936, column: 14, scope: !9194)
!9450 = !DILocation(line: 1936, column: 2, scope: !9194)
!9451 = !DILocation(line: 1937, column: 2, scope: !9194)
!9452 = !DILocation(line: 1937, column: 7, scope: !9194)
!9453 = !DILocation(line: 1937, column: 25, scope: !9194)
!9454 = !DILocation(line: 1937, column: 32, scope: !9194)
!9455 = !DILocation(line: 1938, column: 18, scope: !9194)
!9456 = !DILocation(line: 1938, column: 23, scope: !9194)
!9457 = !DILocation(line: 1938, column: 2, scope: !9194)
!9458 = !DILocation(line: 1939, column: 1, scope: !9194)
!9459 = distinct !DISubprogram(name: "udc_enable_ep0_interrupts", scope: !3, file: !3, line: 244, type: !4658, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!9460 = !DILocalVariable(name: "dev", arg: 1, scope: !9459, file: !3, line: 244, type: !356)
!9461 = !DILocation(line: 244, column: 50, scope: !9459)
!9462 = !DILocalVariable(name: "tmp", scope: !9459, file: !3, line: 246, type: !296)
!9463 = !DILocation(line: 246, column: 6, scope: !9459)
!9464 = !DILocation(line: 251, column: 15, scope: !9459)
!9465 = !DILocation(line: 251, column: 20, scope: !9459)
!9466 = !DILocation(line: 251, column: 26, scope: !9459)
!9467 = !DILocation(line: 251, column: 14, scope: !9459)
!9468 = !DILocation(line: 251, column: 8, scope: !9459)
!9469 = !DILocation(line: 251, column: 6, scope: !9459)
!9470 = !DILocation(line: 253, column: 6, scope: !9459)
!9471 = !DILocation(line: 255, column: 9, scope: !9459)
!9472 = !DILocation(line: 255, column: 15, scope: !9459)
!9473 = !DILocation(line: 255, column: 20, scope: !9459)
!9474 = !DILocation(line: 255, column: 26, scope: !9459)
!9475 = !DILocation(line: 255, column: 14, scope: !9459)
!9476 = !DILocation(line: 255, column: 2, scope: !9459)
!9477 = !DILocation(line: 257, column: 2, scope: !9459)
!9478 = distinct !DISubprogram(name: "usb_disconnect", scope: !3, file: !3, line: 1638, type: !4847, scopeLine: 1639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!9479 = !DILocalVariable(name: "dev", arg: 1, scope: !9478, file: !3, line: 1638, type: !356)
!9480 = !DILocation(line: 1638, column: 40, scope: !9478)
!9481 = !DILocation(line: 1641, column: 7, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 1641, column: 6)
!9483 = !DILocation(line: 1641, column: 12, scope: !9482)
!9484 = !DILocation(line: 1641, column: 6, scope: !9478)
!9485 = !DILocation(line: 1642, column: 3, scope: !9482)
!9486 = !DILocation(line: 1644, column: 2, scope: !9478)
!9487 = !DILocation(line: 1646, column: 2, scope: !9478)
!9488 = !DILocation(line: 1646, column: 7, scope: !9478)
!9489 = !DILocation(line: 1646, column: 17, scope: !9478)
!9490 = !DILocation(line: 1649, column: 29, scope: !9478)
!9491 = !DILocation(line: 1649, column: 2, scope: !9478)
!9492 = !DILocation(line: 1656, column: 2, scope: !9478)
!9493 = !DILocation(line: 1657, column: 1, scope: !9478)
!9494 = distinct !DISubprogram(name: "udc_ep_enable", scope: !3, file: !3, line: 323, type: !195, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!9495 = !DILocation(line: 407, column: 64, scope: !7578, inlinedAt: !9496)
!9496 = distinct !DILocation(line: 446, column: 2, scope: !9494)
!9497 = !DILocation(line: 407, column: 84, scope: !7578, inlinedAt: !9496)
!9498 = !DILocation(line: 327, column: 67, scope: !7586, inlinedAt: !9499)
!9499 = distinct !DILocation(line: 346, column: 2, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9501, file: !3, line: 346, column: 2)
!9501 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 346, column: 2)
!9502 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 346, column: 2)
!9503 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 346, column: 2)
!9504 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 346, column: 2)
!9505 = !DILocalVariable(name: "usbep", arg: 1, scope: !9494, file: !3, line: 323, type: !180)
!9506 = !DILocation(line: 323, column: 30, scope: !9494)
!9507 = !DILocalVariable(name: "desc", arg: 2, scope: !9494, file: !3, line: 323, type: !198)
!9508 = !DILocation(line: 323, column: 75, scope: !9494)
!9509 = !DILocalVariable(name: "ep", scope: !9494, file: !3, line: 325, type: !319)
!9510 = !DILocation(line: 325, column: 18, scope: !9494)
!9511 = !DILocalVariable(name: "dev", scope: !9494, file: !3, line: 326, type: !356)
!9512 = !DILocation(line: 326, column: 15, scope: !9494)
!9513 = !DILocalVariable(name: "tmp", scope: !9494, file: !3, line: 327, type: !296)
!9514 = !DILocation(line: 327, column: 8, scope: !9494)
!9515 = !DILocalVariable(name: "iflags", scope: !9494, file: !3, line: 328, type: !163)
!9516 = !DILocation(line: 328, column: 17, scope: !9494)
!9517 = !DILocalVariable(name: "udc_csr_epix", scope: !9494, file: !3, line: 329, type: !271)
!9518 = !DILocation(line: 329, column: 5, scope: !9494)
!9519 = !DILocalVariable(name: "maxpacket", scope: !9494, file: !3, line: 330, type: !7)
!9520 = !DILocation(line: 330, column: 12, scope: !9494)
!9521 = !DILocation(line: 332, column: 7, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 332, column: 6)
!9523 = !DILocation(line: 333, column: 4, scope: !9522)
!9524 = !DILocation(line: 333, column: 7, scope: !9522)
!9525 = !DILocation(line: 333, column: 14, scope: !9522)
!9526 = !DILocation(line: 333, column: 19, scope: !9522)
!9527 = !DILocation(line: 334, column: 4, scope: !9522)
!9528 = !DILocation(line: 334, column: 8, scope: !9522)
!9529 = !DILocation(line: 335, column: 4, scope: !9522)
!9530 = !DILocation(line: 335, column: 7, scope: !9522)
!9531 = !DILocation(line: 335, column: 13, scope: !9522)
!9532 = !DILocation(line: 335, column: 29, scope: !9522)
!9533 = !DILocation(line: 332, column: 6, scope: !9494)
!9534 = !DILocation(line: 336, column: 3, scope: !9522)
!9535 = !DILocalVariable(name: "__mptr", scope: !9536, file: !3, line: 338, type: !138)
!9536 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 338, column: 7)
!9537 = !DILocation(line: 338, column: 7, scope: !9536)
!9538 = !DILocation(line: 338, column: 7, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 338, column: 7)
!9540 = !DILocation(line: 338, column: 5, scope: !9494)
!9541 = !DILocation(line: 339, column: 8, scope: !9494)
!9542 = !DILocation(line: 339, column: 12, scope: !9494)
!9543 = !DILocation(line: 339, column: 6, scope: !9494)
!9544 = !DILocation(line: 343, column: 7, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 343, column: 6)
!9546 = !DILocation(line: 343, column: 12, scope: !9545)
!9547 = !DILocation(line: 343, column: 19, scope: !9545)
!9548 = !DILocation(line: 343, column: 22, scope: !9545)
!9549 = !DILocation(line: 343, column: 27, scope: !9545)
!9550 = !DILocation(line: 343, column: 34, scope: !9545)
!9551 = !DILocation(line: 343, column: 40, scope: !9545)
!9552 = !DILocation(line: 343, column: 6, scope: !9494)
!9553 = !DILocation(line: 344, column: 3, scope: !9545)
!9554 = !DILocation(line: 346, column: 2, scope: !9494)
!9555 = !DILocation(line: 346, column: 2, scope: !9504)
!9556 = !DILocalVariable(name: "__dummy", scope: !9557, file: !3, line: 346, type: !163)
!9557 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 346, column: 2)
!9558 = !DILocation(line: 346, column: 2, scope: !9557)
!9559 = !DILocalVariable(name: "__dummy2", scope: !9557, file: !3, line: 346, type: !163)
!9560 = !DILocation(line: 346, column: 2, scope: !9503)
!9561 = !DILocation(line: 346, column: 2, scope: !9502)
!9562 = !DILocation(line: 346, column: 2, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 346, column: 2)
!9564 = !DILocalVariable(name: "__dummy", scope: !9565, file: !3, line: 346, type: !163)
!9565 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 346, column: 2)
!9566 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 346, column: 2)
!9567 = !DILocation(line: 346, column: 2, scope: !9565)
!9568 = !DILocalVariable(name: "__dummy2", scope: !9565, file: !3, line: 346, type: !163)
!9569 = !DILocation(line: 346, column: 2, scope: !9566)
!9570 = !DILocation(line: 346, column: 2, scope: !9501)
!9571 = !{i32 -2141488222}
!9572 = !DILocation(line: 346, column: 2, scope: !9500)
!9573 = !DILocation(line: 329, column: 10, scope: !7586, inlinedAt: !9499)
!9574 = !DILocation(line: 329, column: 16, scope: !7586, inlinedAt: !9499)
!9575 = !DILocation(line: 347, column: 16, scope: !9494)
!9576 = !DILocation(line: 347, column: 2, scope: !9494)
!9577 = !DILocation(line: 347, column: 6, scope: !9494)
!9578 = !DILocation(line: 347, column: 9, scope: !9494)
!9579 = !DILocation(line: 347, column: 14, scope: !9494)
!9580 = !DILocation(line: 349, column: 2, scope: !9494)
!9581 = !DILocation(line: 349, column: 6, scope: !9494)
!9582 = !DILocation(line: 349, column: 13, scope: !9494)
!9583 = !DILocation(line: 352, column: 15, scope: !9494)
!9584 = !DILocation(line: 352, column: 20, scope: !9494)
!9585 = !DILocation(line: 352, column: 23, scope: !9494)
!9586 = !DILocation(line: 352, column: 27, scope: !9494)
!9587 = !DILocation(line: 352, column: 32, scope: !9494)
!9588 = !DILocation(line: 352, column: 38, scope: !9494)
!9589 = !DILocation(line: 352, column: 14, scope: !9494)
!9590 = !DILocation(line: 352, column: 8, scope: !9494)
!9591 = !DILocation(line: 352, column: 6, scope: !9494)
!9592 = !DILocation(line: 353, column: 8, scope: !9494)
!9593 = !DILocation(line: 353, column: 6, scope: !9494)
!9594 = !DILocation(line: 354, column: 9, scope: !9494)
!9595 = !DILocation(line: 354, column: 15, scope: !9494)
!9596 = !DILocation(line: 354, column: 20, scope: !9494)
!9597 = !DILocation(line: 354, column: 23, scope: !9494)
!9598 = !DILocation(line: 354, column: 27, scope: !9494)
!9599 = !DILocation(line: 354, column: 32, scope: !9494)
!9600 = !DILocation(line: 354, column: 38, scope: !9494)
!9601 = !DILocation(line: 354, column: 14, scope: !9494)
!9602 = !DILocation(line: 354, column: 2, scope: !9494)
!9603 = !DILocation(line: 357, column: 32, scope: !9494)
!9604 = !DILocation(line: 357, column: 14, scope: !9494)
!9605 = !DILocation(line: 357, column: 12, scope: !9494)
!9606 = !DILocation(line: 358, column: 15, scope: !9494)
!9607 = !DILocation(line: 358, column: 20, scope: !9494)
!9608 = !DILocation(line: 358, column: 23, scope: !9494)
!9609 = !DILocation(line: 358, column: 27, scope: !9494)
!9610 = !DILocation(line: 358, column: 32, scope: !9494)
!9611 = !DILocation(line: 358, column: 38, scope: !9494)
!9612 = !DILocation(line: 358, column: 14, scope: !9494)
!9613 = !DILocation(line: 358, column: 8, scope: !9494)
!9614 = !DILocation(line: 358, column: 6, scope: !9494)
!9615 = !DILocation(line: 359, column: 8, scope: !9494)
!9616 = !DILocation(line: 359, column: 6, scope: !9494)
!9617 = !DILocation(line: 360, column: 21, scope: !9494)
!9618 = !DILocation(line: 360, column: 2, scope: !9494)
!9619 = !DILocation(line: 360, column: 6, scope: !9494)
!9620 = !DILocation(line: 360, column: 9, scope: !9494)
!9621 = !DILocation(line: 360, column: 19, scope: !9494)
!9622 = !DILocation(line: 361, column: 9, scope: !9494)
!9623 = !DILocation(line: 361, column: 15, scope: !9494)
!9624 = !DILocation(line: 361, column: 20, scope: !9494)
!9625 = !DILocation(line: 361, column: 23, scope: !9494)
!9626 = !DILocation(line: 361, column: 27, scope: !9494)
!9627 = !DILocation(line: 361, column: 32, scope: !9494)
!9628 = !DILocation(line: 361, column: 38, scope: !9494)
!9629 = !DILocation(line: 361, column: 14, scope: !9494)
!9630 = !DILocation(line: 361, column: 2, scope: !9494)
!9631 = !DILocation(line: 364, column: 6, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 364, column: 6)
!9633 = !DILocation(line: 364, column: 10, scope: !9632)
!9634 = !DILocation(line: 364, column: 6, scope: !9494)
!9635 = !DILocation(line: 367, column: 18, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9632, file: !3, line: 364, column: 14)
!9637 = !DILocation(line: 367, column: 22, scope: !9636)
!9638 = !DILocation(line: 367, column: 16, scope: !9636)
!9639 = !DILocation(line: 370, column: 16, scope: !9636)
!9640 = !DILocation(line: 370, column: 21, scope: !9636)
!9641 = !DILocation(line: 370, column: 24, scope: !9636)
!9642 = !DILocation(line: 370, column: 28, scope: !9636)
!9643 = !DILocation(line: 370, column: 33, scope: !9636)
!9644 = !DILocation(line: 370, column: 39, scope: !9636)
!9645 = !DILocation(line: 370, column: 15, scope: !9636)
!9646 = !DILocation(line: 370, column: 9, scope: !9636)
!9647 = !DILocation(line: 370, column: 7, scope: !9636)
!9648 = !DILocation(line: 372, column: 9, scope: !9636)
!9649 = !DILocation(line: 372, column: 7, scope: !9636)
!9650 = !DILocation(line: 377, column: 10, scope: !9636)
!9651 = !DILocation(line: 377, column: 16, scope: !9636)
!9652 = !DILocation(line: 377, column: 21, scope: !9636)
!9653 = !DILocation(line: 377, column: 24, scope: !9636)
!9654 = !DILocation(line: 377, column: 28, scope: !9636)
!9655 = !DILocation(line: 377, column: 33, scope: !9636)
!9656 = !DILocation(line: 377, column: 39, scope: !9636)
!9657 = !DILocation(line: 377, column: 15, scope: !9636)
!9658 = !DILocation(line: 377, column: 3, scope: !9636)
!9659 = !DILocation(line: 380, column: 23, scope: !9636)
!9660 = !DILocation(line: 380, column: 3, scope: !9636)
!9661 = !DILocation(line: 383, column: 16, scope: !9636)
!9662 = !DILocation(line: 383, column: 20, scope: !9636)
!9663 = !DILocation(line: 383, column: 26, scope: !9636)
!9664 = !DILocation(line: 383, column: 15, scope: !9636)
!9665 = !DILocation(line: 383, column: 9, scope: !9636)
!9666 = !DILocation(line: 383, column: 7, scope: !9636)
!9667 = !DILocation(line: 384, column: 7, scope: !9636)
!9668 = !DILocation(line: 385, column: 10, scope: !9636)
!9669 = !DILocation(line: 385, column: 16, scope: !9636)
!9670 = !DILocation(line: 385, column: 20, scope: !9636)
!9671 = !DILocation(line: 385, column: 26, scope: !9636)
!9672 = !DILocation(line: 385, column: 15, scope: !9636)
!9673 = !DILocation(line: 385, column: 3, scope: !9636)
!9674 = !DILocation(line: 388, column: 2, scope: !9636)
!9675 = !DILocation(line: 390, column: 18, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9632, file: !3, line: 388, column: 9)
!9677 = !DILocation(line: 390, column: 22, scope: !9676)
!9678 = !DILocation(line: 390, column: 26, scope: !9676)
!9679 = !DILocation(line: 390, column: 16, scope: !9676)
!9680 = !DILocation(line: 393, column: 16, scope: !9676)
!9681 = !DILocation(line: 393, column: 21, scope: !9676)
!9682 = !DILocation(line: 393, column: 26, scope: !9676)
!9683 = !DILocation(line: 393, column: 29, scope: !9676)
!9684 = !DILocation(line: 393, column: 33, scope: !9676)
!9685 = !DILocation(line: 393, column: 37, scope: !9676)
!9686 = !DILocation(line: 393, column: 15, scope: !9676)
!9687 = !DILocation(line: 393, column: 9, scope: !9676)
!9688 = !DILocation(line: 393, column: 7, scope: !9676)
!9689 = !DILocation(line: 394, column: 9, scope: !9676)
!9690 = !DILocation(line: 394, column: 7, scope: !9676)
!9691 = !DILocation(line: 396, column: 10, scope: !9676)
!9692 = !DILocation(line: 396, column: 16, scope: !9676)
!9693 = !DILocation(line: 396, column: 21, scope: !9676)
!9694 = !DILocation(line: 396, column: 26, scope: !9676)
!9695 = !DILocation(line: 396, column: 29, scope: !9676)
!9696 = !DILocation(line: 396, column: 33, scope: !9676)
!9697 = !DILocation(line: 396, column: 37, scope: !9676)
!9698 = !DILocation(line: 396, column: 15, scope: !9676)
!9699 = !DILocation(line: 396, column: 3, scope: !9676)
!9700 = !DILocation(line: 398, column: 7, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9676, file: !3, line: 398, column: 7)
!9702 = !DILocation(line: 398, column: 15, scope: !9701)
!9703 = !DILocation(line: 398, column: 19, scope: !9701)
!9704 = !DILocation(line: 398, column: 23, scope: !9701)
!9705 = !DILocation(line: 398, column: 7, scope: !9676)
!9706 = !DILocation(line: 400, column: 44, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9701, file: !3, line: 398, column: 27)
!9708 = !DILocation(line: 400, column: 24, scope: !9707)
!9709 = !DILocation(line: 400, column: 4, scope: !9707)
!9710 = !DILocation(line: 400, column: 8, scope: !9707)
!9711 = !DILocation(line: 400, column: 22, scope: !9707)
!9712 = !DILocation(line: 401, column: 4, scope: !9707)
!9713 = !DILocation(line: 401, column: 8, scope: !9707)
!9714 = !DILocation(line: 401, column: 21, scope: !9707)
!9715 = !DILocation(line: 402, column: 3, scope: !9707)
!9716 = !DILocation(line: 404, column: 7, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9676, file: !3, line: 404, column: 7)
!9718 = !DILocation(line: 404, column: 11, scope: !9717)
!9719 = !DILocation(line: 404, column: 15, scope: !9717)
!9720 = !DILocation(line: 404, column: 7, scope: !9676)
!9721 = !DILocation(line: 405, column: 4, scope: !9717)
!9722 = !DILocation(line: 405, column: 9, scope: !9717)
!9723 = !DILocation(line: 405, column: 25, scope: !9717)
!9724 = !DILocation(line: 409, column: 15, scope: !9494)
!9725 = !DILocation(line: 409, column: 20, scope: !9494)
!9726 = !DILocation(line: 409, column: 25, scope: !9494)
!9727 = !DILocation(line: 409, column: 28, scope: !9494)
!9728 = !DILocation(line: 409, column: 14, scope: !9494)
!9729 = !DILocation(line: 409, column: 8, scope: !9494)
!9730 = !DILocation(line: 409, column: 6, scope: !9494)
!9731 = !DILocation(line: 411, column: 8, scope: !9494)
!9732 = !DILocation(line: 411, column: 6, scope: !9494)
!9733 = !DILocation(line: 413, column: 8, scope: !9494)
!9734 = !DILocation(line: 413, column: 6, scope: !9494)
!9735 = !DILocation(line: 415, column: 8, scope: !9494)
!9736 = !DILocation(line: 415, column: 6, scope: !9494)
!9737 = !DILocation(line: 417, column: 8, scope: !9494)
!9738 = !DILocation(line: 417, column: 6, scope: !9494)
!9739 = !DILocation(line: 419, column: 8, scope: !9494)
!9740 = !DILocation(line: 419, column: 6, scope: !9494)
!9741 = !DILocation(line: 421, column: 8, scope: !9494)
!9742 = !DILocation(line: 421, column: 6, scope: !9494)
!9743 = !DILocation(line: 423, column: 8, scope: !9494)
!9744 = !DILocation(line: 423, column: 6, scope: !9494)
!9745 = !DILocation(line: 425, column: 9, scope: !9494)
!9746 = !DILocation(line: 425, column: 15, scope: !9494)
!9747 = !DILocation(line: 425, column: 20, scope: !9494)
!9748 = !DILocation(line: 425, column: 25, scope: !9494)
!9749 = !DILocation(line: 425, column: 28, scope: !9494)
!9750 = !DILocation(line: 425, column: 14, scope: !9494)
!9751 = !DILocation(line: 425, column: 2, scope: !9494)
!9752 = !DILocation(line: 428, column: 15, scope: !9494)
!9753 = !DILocation(line: 428, column: 20, scope: !9494)
!9754 = !DILocation(line: 428, column: 26, scope: !9494)
!9755 = !DILocation(line: 428, column: 14, scope: !9494)
!9756 = !DILocation(line: 428, column: 8, scope: !9494)
!9757 = !DILocation(line: 428, column: 6, scope: !9494)
!9758 = !DILocation(line: 429, column: 9, scope: !9494)
!9759 = !DILocation(line: 429, column: 6, scope: !9494)
!9760 = !DILocation(line: 430, column: 9, scope: !9494)
!9761 = !DILocation(line: 430, column: 15, scope: !9494)
!9762 = !DILocation(line: 430, column: 20, scope: !9494)
!9763 = !DILocation(line: 430, column: 26, scope: !9494)
!9764 = !DILocation(line: 430, column: 14, scope: !9494)
!9765 = !DILocation(line: 430, column: 2, scope: !9494)
!9766 = !DILocation(line: 436, column: 7, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 436, column: 6)
!9768 = !DILocation(line: 436, column: 15, scope: !9767)
!9769 = !DILocation(line: 436, column: 18, scope: !9767)
!9770 = !DILocation(line: 436, column: 22, scope: !9767)
!9771 = !DILocation(line: 436, column: 6, scope: !9494)
!9772 = !DILocation(line: 437, column: 16, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9767, file: !3, line: 436, column: 26)
!9774 = !DILocation(line: 437, column: 20, scope: !9773)
!9775 = !DILocation(line: 437, column: 26, scope: !9773)
!9776 = !DILocation(line: 437, column: 15, scope: !9773)
!9777 = !DILocation(line: 437, column: 9, scope: !9773)
!9778 = !DILocation(line: 437, column: 7, scope: !9773)
!9779 = !DILocation(line: 438, column: 7, scope: !9773)
!9780 = !DILocation(line: 439, column: 10, scope: !9773)
!9781 = !DILocation(line: 439, column: 16, scope: !9773)
!9782 = !DILocation(line: 439, column: 20, scope: !9773)
!9783 = !DILocation(line: 439, column: 26, scope: !9773)
!9784 = !DILocation(line: 439, column: 15, scope: !9773)
!9785 = !DILocation(line: 439, column: 3, scope: !9773)
!9786 = !DILocation(line: 440, column: 3, scope: !9773)
!9787 = !DILocation(line: 440, column: 7, scope: !9773)
!9788 = !DILocation(line: 440, column: 14, scope: !9773)
!9789 = !DILocation(line: 441, column: 18, scope: !9773)
!9790 = !DILocation(line: 441, column: 22, scope: !9773)
!9791 = !DILocation(line: 441, column: 26, scope: !9773)
!9792 = !DILocation(line: 441, column: 3, scope: !9773)
!9793 = !DILocation(line: 442, column: 2, scope: !9773)
!9794 = !DILocation(line: 443, column: 8, scope: !9494)
!9795 = !DILocation(line: 443, column: 14, scope: !9494)
!9796 = !DILocation(line: 443, column: 6, scope: !9494)
!9797 = !DILocation(line: 446, column: 26, scope: !9494)
!9798 = !DILocation(line: 446, column: 31, scope: !9494)
!9799 = !DILocation(line: 446, column: 37, scope: !9494)
!9800 = !DILocation(line: 409, column: 2, scope: !7747, inlinedAt: !9496)
!9801 = !DILocation(line: 409, column: 2, scope: !7752, inlinedAt: !9496)
!9802 = !DILocation(line: 409, column: 2, scope: !7753, inlinedAt: !9496)
!9803 = !DILocation(line: 409, column: 2, scope: !7760, inlinedAt: !9496)
!9804 = !DILocation(line: 409, column: 2, scope: !7763, inlinedAt: !9496)
!9805 = !DILocation(line: 447, column: 2, scope: !9494)
!9806 = !DILocation(line: 448, column: 1, scope: !9494)
!9807 = distinct !DISubprogram(name: "udc_ep_disable", scope: !3, file: !3, line: 493, type: !218, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!9808 = !DILocation(line: 407, column: 64, scope: !7578, inlinedAt: !9809)
!9809 = distinct !DILocation(line: 511, column: 2, scope: !9807)
!9810 = !DILocation(line: 407, column: 84, scope: !7578, inlinedAt: !9809)
!9811 = !DILocation(line: 327, column: 67, scope: !7586, inlinedAt: !9812)
!9812 = distinct !DILocation(line: 507, column: 2, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9814, file: !3, line: 507, column: 2)
!9814 = distinct !DILexicalBlock(scope: !9815, file: !3, line: 507, column: 2)
!9815 = distinct !DILexicalBlock(scope: !9816, file: !3, line: 507, column: 2)
!9816 = distinct !DILexicalBlock(scope: !9817, file: !3, line: 507, column: 2)
!9817 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 507, column: 2)
!9818 = !DILocalVariable(name: "usbep", arg: 1, scope: !9807, file: !3, line: 493, type: !180)
!9819 = !DILocation(line: 493, column: 42, scope: !9807)
!9820 = !DILocalVariable(name: "ep", scope: !9807, file: !3, line: 495, type: !319)
!9821 = !DILocation(line: 495, column: 17, scope: !9807)
!9822 = !DILocalVariable(name: "iflags", scope: !9807, file: !3, line: 496, type: !163)
!9823 = !DILocation(line: 496, column: 16, scope: !9807)
!9824 = !DILocation(line: 498, column: 7, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 498, column: 6)
!9826 = !DILocation(line: 498, column: 6, scope: !9807)
!9827 = !DILocation(line: 499, column: 3, scope: !9825)
!9828 = !DILocalVariable(name: "__mptr", scope: !9829, file: !3, line: 501, type: !138)
!9829 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 501, column: 7)
!9830 = !DILocation(line: 501, column: 7, scope: !9829)
!9831 = !DILocation(line: 501, column: 7, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 501, column: 7)
!9833 = !DILocation(line: 501, column: 5, scope: !9807)
!9834 = !DILocation(line: 502, column: 6, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 502, column: 6)
!9836 = !DILocation(line: 502, column: 13, scope: !9835)
!9837 = !DILocation(line: 502, column: 18, scope: !9835)
!9838 = !DILocation(line: 502, column: 32, scope: !9835)
!9839 = !DILocation(line: 502, column: 36, scope: !9835)
!9840 = !DILocation(line: 502, column: 40, scope: !9835)
!9841 = !DILocation(line: 502, column: 43, scope: !9835)
!9842 = !DILocation(line: 502, column: 6, scope: !9807)
!9843 = !DILocation(line: 503, column: 3, scope: !9835)
!9844 = !DILocation(line: 507, column: 2, scope: !9807)
!9845 = !DILocation(line: 507, column: 2, scope: !9817)
!9846 = !DILocalVariable(name: "__dummy", scope: !9847, file: !3, line: 507, type: !163)
!9847 = distinct !DILexicalBlock(scope: !9816, file: !3, line: 507, column: 2)
!9848 = !DILocation(line: 507, column: 2, scope: !9847)
!9849 = !DILocalVariable(name: "__dummy2", scope: !9847, file: !3, line: 507, type: !163)
!9850 = !DILocation(line: 507, column: 2, scope: !9816)
!9851 = !DILocation(line: 507, column: 2, scope: !9815)
!9852 = !DILocation(line: 507, column: 2, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9815, file: !3, line: 507, column: 2)
!9854 = !DILocalVariable(name: "__dummy", scope: !9855, file: !3, line: 507, type: !163)
!9855 = distinct !DILexicalBlock(scope: !9856, file: !3, line: 507, column: 2)
!9856 = distinct !DILexicalBlock(scope: !9853, file: !3, line: 507, column: 2)
!9857 = !DILocation(line: 507, column: 2, scope: !9855)
!9858 = !DILocalVariable(name: "__dummy2", scope: !9855, file: !3, line: 507, type: !163)
!9859 = !DILocation(line: 507, column: 2, scope: !9856)
!9860 = !DILocation(line: 507, column: 2, scope: !9814)
!9861 = !{i32 -2141481297}
!9862 = !DILocation(line: 507, column: 2, scope: !9813)
!9863 = !DILocation(line: 329, column: 10, scope: !7586, inlinedAt: !9812)
!9864 = !DILocation(line: 329, column: 16, scope: !7586, inlinedAt: !9812)
!9865 = !DILocation(line: 508, column: 20, scope: !9807)
!9866 = !DILocation(line: 508, column: 24, scope: !9807)
!9867 = !DILocation(line: 508, column: 29, scope: !9807)
!9868 = !DILocation(line: 508, column: 33, scope: !9807)
!9869 = !DILocation(line: 508, column: 48, scope: !9807)
!9870 = !DILocation(line: 508, column: 2, scope: !9807)
!9871 = !DILocation(line: 509, column: 18, scope: !9807)
!9872 = !DILocation(line: 509, column: 2, scope: !9807)
!9873 = !DILocation(line: 510, column: 10, scope: !9807)
!9874 = !DILocation(line: 510, column: 14, scope: !9807)
!9875 = !DILocation(line: 510, column: 19, scope: !9807)
!9876 = !DILocation(line: 510, column: 25, scope: !9807)
!9877 = !DILocation(line: 510, column: 2, scope: !9807)
!9878 = !DILocation(line: 511, column: 26, scope: !9807)
!9879 = !DILocation(line: 511, column: 30, scope: !9807)
!9880 = !DILocation(line: 511, column: 35, scope: !9807)
!9881 = !DILocation(line: 511, column: 41, scope: !9807)
!9882 = !DILocation(line: 409, column: 2, scope: !7747, inlinedAt: !9809)
!9883 = !DILocation(line: 409, column: 2, scope: !7752, inlinedAt: !9809)
!9884 = !DILocation(line: 409, column: 2, scope: !7753, inlinedAt: !9809)
!9885 = !DILocation(line: 409, column: 2, scope: !7760, inlinedAt: !9809)
!9886 = !DILocation(line: 409, column: 2, scope: !7763, inlinedAt: !9809)
!9887 = !DILocation(line: 513, column: 2, scope: !9807)
!9888 = !DILocation(line: 514, column: 1, scope: !9807)
!9889 = distinct !DISubprogram(name: "udc_alloc_request", scope: !3, file: !3, line: 518, type: !226, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!9890 = !DILocalVariable(name: "usbep", arg: 1, scope: !9889, file: !3, line: 518, type: !180)
!9891 = !DILocation(line: 518, column: 34, scope: !9889)
!9892 = !DILocalVariable(name: "gfp", arg: 2, scope: !9889, file: !3, line: 518, type: !229)
!9893 = !DILocation(line: 518, column: 47, scope: !9889)
!9894 = !DILocalVariable(name: "req", scope: !9889, file: !3, line: 520, type: !139)
!9895 = !DILocation(line: 520, column: 22, scope: !9889)
!9896 = !DILocalVariable(name: "dma_desc", scope: !9889, file: !3, line: 521, type: !292)
!9897 = !DILocation(line: 521, column: 23, scope: !9889)
!9898 = !DILocalVariable(name: "ep", scope: !9889, file: !3, line: 522, type: !319)
!9899 = !DILocation(line: 522, column: 17, scope: !9889)
!9900 = !DILocation(line: 524, column: 7, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 524, column: 6)
!9902 = !DILocation(line: 524, column: 6, scope: !9889)
!9903 = !DILocation(line: 525, column: 3, scope: !9901)
!9904 = !DILocalVariable(name: "__mptr", scope: !9905, file: !3, line: 527, type: !138)
!9905 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 527, column: 7)
!9906 = !DILocation(line: 527, column: 7, scope: !9905)
!9907 = !DILocation(line: 527, column: 7, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9905, file: !3, line: 527, column: 7)
!9909 = !DILocation(line: 527, column: 5, scope: !9889)
!9910 = !DILocation(line: 529, column: 2, scope: !9889)
!9911 = !DILocation(line: 529, column: 2, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 529, column: 2)
!9913 = !DILocation(line: 530, column: 44, scope: !9889)
!9914 = !DILocation(line: 530, column: 8, scope: !9889)
!9915 = !DILocation(line: 530, column: 6, scope: !9889)
!9916 = !DILocation(line: 531, column: 7, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 531, column: 6)
!9918 = !DILocation(line: 531, column: 6, scope: !9889)
!9919 = !DILocation(line: 532, column: 3, scope: !9917)
!9920 = !DILocation(line: 534, column: 2, scope: !9889)
!9921 = !DILocation(line: 534, column: 7, scope: !9889)
!9922 = !DILocation(line: 534, column: 11, scope: !9889)
!9923 = !DILocation(line: 534, column: 15, scope: !9889)
!9924 = !DILocation(line: 535, column: 18, scope: !9889)
!9925 = !DILocation(line: 535, column: 23, scope: !9889)
!9926 = !DILocation(line: 535, column: 2, scope: !9889)
!9927 = !DILocation(line: 537, column: 6, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 537, column: 6)
!9929 = !DILocation(line: 537, column: 10, scope: !9928)
!9930 = !DILocation(line: 537, column: 6, scope: !9889)
!9931 = !DILocation(line: 539, column: 29, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9928, file: !3, line: 537, column: 15)
!9933 = !DILocation(line: 539, column: 33, scope: !9932)
!9934 = !DILocation(line: 539, column: 38, scope: !9932)
!9935 = !DILocation(line: 539, column: 53, scope: !9932)
!9936 = !DILocation(line: 540, column: 8, scope: !9932)
!9937 = !DILocation(line: 540, column: 13, scope: !9932)
!9938 = !DILocation(line: 539, column: 14, scope: !9932)
!9939 = !DILocation(line: 539, column: 12, scope: !9932)
!9940 = !DILocation(line: 541, column: 8, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9932, file: !3, line: 541, column: 7)
!9942 = !DILocation(line: 541, column: 7, scope: !9932)
!9943 = !DILocation(line: 542, column: 10, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 541, column: 18)
!9945 = !DILocation(line: 542, column: 4, scope: !9944)
!9946 = !DILocation(line: 543, column: 4, scope: !9944)
!9947 = !DILocation(line: 546, column: 3, scope: !9932)
!9948 = !DILocation(line: 546, column: 3, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9932, file: !3, line: 546, column: 3)
!9950 = !DILocation(line: 551, column: 22, scope: !9932)
!9951 = !DILocation(line: 551, column: 3, scope: !9932)
!9952 = !DILocation(line: 551, column: 13, scope: !9932)
!9953 = !DILocation(line: 551, column: 20, scope: !9932)
!9954 = !DILocation(line: 554, column: 3, scope: !9932)
!9955 = !DILocation(line: 554, column: 13, scope: !9932)
!9956 = !DILocation(line: 554, column: 20, scope: !9932)
!9957 = !DILocation(line: 555, column: 18, scope: !9932)
!9958 = !DILocation(line: 555, column: 3, scope: !9932)
!9959 = !DILocation(line: 555, column: 8, scope: !9932)
!9960 = !DILocation(line: 555, column: 16, scope: !9932)
!9961 = !DILocation(line: 556, column: 3, scope: !9932)
!9962 = !DILocation(line: 556, column: 8, scope: !9932)
!9963 = !DILocation(line: 556, column: 21, scope: !9932)
!9964 = !DILocation(line: 557, column: 3, scope: !9932)
!9965 = !DILocation(line: 557, column: 8, scope: !9932)
!9966 = !DILocation(line: 557, column: 18, scope: !9932)
!9967 = !DILocation(line: 558, column: 2, scope: !9932)
!9968 = !DILocation(line: 560, column: 10, scope: !9889)
!9969 = !DILocation(line: 560, column: 15, scope: !9889)
!9970 = !DILocation(line: 560, column: 2, scope: !9889)
!9971 = !DILocation(line: 561, column: 1, scope: !9889)
!9972 = distinct !DISubprogram(name: "udc_free_request", scope: !3, file: !3, line: 585, type: !178, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!9973 = !DILocalVariable(name: "usbep", arg: 1, scope: !9972, file: !3, line: 585, type: !180)
!9974 = !DILocation(line: 585, column: 33, scope: !9972)
!9975 = !DILocalVariable(name: "usbreq", arg: 2, scope: !9972, file: !3, line: 585, type: !228)
!9976 = !DILocation(line: 585, column: 60, scope: !9972)
!9977 = !DILocalVariable(name: "ep", scope: !9972, file: !3, line: 587, type: !319)
!9978 = !DILocation(line: 587, column: 17, scope: !9972)
!9979 = !DILocalVariable(name: "req", scope: !9972, file: !3, line: 588, type: !139)
!9980 = !DILocation(line: 588, column: 22, scope: !9972)
!9981 = !DILocation(line: 590, column: 7, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 590, column: 6)
!9983 = !DILocation(line: 590, column: 13, scope: !9982)
!9984 = !DILocation(line: 590, column: 17, scope: !9982)
!9985 = !DILocation(line: 590, column: 6, scope: !9972)
!9986 = !DILocation(line: 591, column: 3, scope: !9982)
!9987 = !DILocalVariable(name: "__mptr", scope: !9988, file: !3, line: 593, type: !138)
!9988 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 593, column: 7)
!9989 = !DILocation(line: 593, column: 7, scope: !9988)
!9990 = !DILocation(line: 593, column: 7, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9988, file: !3, line: 593, column: 7)
!9992 = !DILocation(line: 593, column: 5, scope: !9972)
!9993 = !DILocalVariable(name: "__mptr", scope: !9994, file: !3, line: 594, type: !138)
!9994 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 594, column: 8)
!9995 = !DILocation(line: 594, column: 8, scope: !9994)
!9996 = !DILocation(line: 594, column: 8, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 594, column: 8)
!9998 = !DILocation(line: 594, column: 6, scope: !9972)
!9999 = !DILocation(line: 595, column: 2, scope: !9972)
!10000 = !DILocation(line: 595, column: 2, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 595, column: 2)
!10002 = !DILocation(line: 596, column: 2, scope: !9972)
!10003 = !DILocation(line: 596, column: 2, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 596, column: 2)
!10005 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 596, column: 2)
!10006 = !DILocation(line: 596, column: 2, scope: !10005)
!10007 = !DILocation(line: 596, column: 2, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 596, column: 2)
!10009 = !DILocation(line: 596, column: 2, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10008, file: !3, line: 596, column: 2)
!10011 = !DILocation(line: 596, column: 2, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10008, file: !3, line: 596, column: 2)
!10013 = !{i32 -2141475793, i32 -2141475764, i32 -2141475718, i32 -2141475660, i32 -2141475606, i32 -2141475552, i32 -2141475497, i32 -2141475466}
!10014 = !DILocation(line: 596, column: 2, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 596, column: 2)
!10016 = distinct !DILexicalBlock(scope: !10008, file: !3, line: 596, column: 2)
!10017 = !{i32 -2141475005, i32 -2141474998, i32 -2141474944, i32 -2141474913, i32 -2141474883}
!10018 = !DILocation(line: 596, column: 2, scope: !10016)
!10019 = !DILocation(line: 597, column: 6, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 597, column: 6)
!10021 = !DILocation(line: 597, column: 11, scope: !10020)
!10022 = !DILocation(line: 597, column: 6, scope: !9972)
!10023 = !DILocation(line: 598, column: 3, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10020, file: !3, line: 597, column: 20)
!10025 = !DILocation(line: 598, column: 3, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 598, column: 3)
!10027 = !DILocation(line: 601, column: 7, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 601, column: 7)
!10029 = !DILocation(line: 601, column: 12, scope: !10028)
!10030 = !DILocation(line: 601, column: 22, scope: !10028)
!10031 = !DILocation(line: 601, column: 7, scope: !10024)
!10032 = !DILocation(line: 602, column: 23, scope: !10028)
!10033 = !DILocation(line: 602, column: 27, scope: !10028)
!10034 = !DILocation(line: 602, column: 32, scope: !10028)
!10035 = !DILocation(line: 602, column: 4, scope: !10028)
!10036 = !DILocation(line: 604, column: 17, scope: !10024)
!10037 = !DILocation(line: 604, column: 21, scope: !10024)
!10038 = !DILocation(line: 604, column: 26, scope: !10024)
!10039 = !DILocation(line: 604, column: 41, scope: !10024)
!10040 = !DILocation(line: 604, column: 46, scope: !10024)
!10041 = !DILocation(line: 605, column: 8, scope: !10024)
!10042 = !DILocation(line: 605, column: 13, scope: !10024)
!10043 = !DILocation(line: 604, column: 3, scope: !10024)
!10044 = !DILocation(line: 606, column: 2, scope: !10024)
!10045 = !DILocation(line: 607, column: 8, scope: !9972)
!10046 = !DILocation(line: 607, column: 2, scope: !9972)
!10047 = !DILocation(line: 608, column: 1, scope: !9972)
!10048 = distinct !DISubprogram(name: "udc_queue", scope: !3, file: !3, line: 1052, type: !233, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!10049 = !DILocation(line: 407, column: 64, scope: !7578, inlinedAt: !10050)
!10050 = distinct !DILocation(line: 1234, column: 2, scope: !10048)
!10051 = !DILocation(line: 407, column: 84, scope: !7578, inlinedAt: !10050)
!10052 = !DILocation(line: 327, column: 67, scope: !7586, inlinedAt: !10053)
!10053 = distinct !DILocation(line: 1091, column: 2, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10055, file: !3, line: 1091, column: 2)
!10055 = distinct !DILexicalBlock(scope: !10056, file: !3, line: 1091, column: 2)
!10056 = distinct !DILexicalBlock(scope: !10057, file: !3, line: 1091, column: 2)
!10057 = distinct !DILexicalBlock(scope: !10058, file: !3, line: 1091, column: 2)
!10058 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 1091, column: 2)
!10059 = !DILocalVariable(name: "usbep", arg: 1, scope: !10048, file: !3, line: 1052, type: !180)
!10060 = !DILocation(line: 1052, column: 26, scope: !10048)
!10061 = !DILocalVariable(name: "usbreq", arg: 2, scope: !10048, file: !3, line: 1052, type: !228)
!10062 = !DILocation(line: 1052, column: 53, scope: !10048)
!10063 = !DILocalVariable(name: "gfp", arg: 3, scope: !10048, file: !3, line: 1052, type: !229)
!10064 = !DILocation(line: 1052, column: 67, scope: !10048)
!10065 = !DILocalVariable(name: "retval", scope: !10048, file: !3, line: 1054, type: !197)
!10066 = !DILocation(line: 1054, column: 8, scope: !10048)
!10067 = !DILocalVariable(name: "open_rxfifo", scope: !10048, file: !3, line: 1055, type: !271)
!10068 = !DILocation(line: 1055, column: 7, scope: !10048)
!10069 = !DILocalVariable(name: "iflags", scope: !10048, file: !3, line: 1056, type: !163)
!10070 = !DILocation(line: 1056, column: 17, scope: !10048)
!10071 = !DILocalVariable(name: "ep", scope: !10048, file: !3, line: 1057, type: !319)
!10072 = !DILocation(line: 1057, column: 18, scope: !10048)
!10073 = !DILocalVariable(name: "req", scope: !10048, file: !3, line: 1058, type: !139)
!10074 = !DILocation(line: 1058, column: 22, scope: !10048)
!10075 = !DILocalVariable(name: "dev", scope: !10048, file: !3, line: 1059, type: !356)
!10076 = !DILocation(line: 1059, column: 15, scope: !10048)
!10077 = !DILocalVariable(name: "tmp", scope: !10048, file: !3, line: 1060, type: !296)
!10078 = !DILocation(line: 1060, column: 8, scope: !10048)
!10079 = !DILocalVariable(name: "__mptr", scope: !10080, file: !3, line: 1063, type: !138)
!10080 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 1063, column: 8)
!10081 = !DILocation(line: 1063, column: 8, scope: !10080)
!10082 = !DILocation(line: 1063, column: 8, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10080, file: !3, line: 1063, column: 8)
!10084 = !DILocation(line: 1063, column: 6, scope: !10048)
!10085 = !DILocation(line: 1065, column: 7, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 1065, column: 6)
!10087 = !DILocation(line: 1065, column: 13, scope: !10086)
!10088 = !DILocation(line: 1065, column: 17, scope: !10086)
!10089 = !DILocation(line: 1065, column: 24, scope: !10086)
!10090 = !DILocation(line: 1065, column: 28, scope: !10086)
!10091 = !DILocation(line: 1065, column: 36, scope: !10086)
!10092 = !DILocation(line: 1065, column: 45, scope: !10086)
!10093 = !DILocation(line: 1065, column: 49, scope: !10086)
!10094 = !DILocation(line: 1065, column: 57, scope: !10086)
!10095 = !DILocation(line: 1066, column: 4, scope: !10086)
!10096 = !DILocation(line: 1066, column: 20, scope: !10086)
!10097 = !DILocation(line: 1066, column: 25, scope: !10086)
!10098 = !DILocation(line: 1066, column: 8, scope: !10086)
!10099 = !DILocation(line: 1065, column: 6, scope: !10048)
!10100 = !DILocation(line: 1067, column: 3, scope: !10086)
!10101 = !DILocalVariable(name: "__mptr", scope: !10102, file: !3, line: 1069, type: !138)
!10102 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 1069, column: 7)
!10103 = !DILocation(line: 1069, column: 7, scope: !10102)
!10104 = !DILocation(line: 1069, column: 7, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10102, file: !3, line: 1069, column: 7)
!10106 = !DILocation(line: 1069, column: 5, scope: !10048)
!10107 = !DILocation(line: 1070, column: 7, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 1070, column: 6)
!10109 = !DILocation(line: 1070, column: 11, scope: !10108)
!10110 = !DILocation(line: 1070, column: 14, scope: !10108)
!10111 = !DILocation(line: 1070, column: 19, scope: !10108)
!10112 = !DILocation(line: 1070, column: 23, scope: !10108)
!10113 = !DILocation(line: 1070, column: 27, scope: !10108)
!10114 = !DILocation(line: 1070, column: 31, scope: !10108)
!10115 = !DILocation(line: 1070, column: 36, scope: !10108)
!10116 = !DILocation(line: 1070, column: 39, scope: !10108)
!10117 = !DILocation(line: 1070, column: 43, scope: !10108)
!10118 = !DILocation(line: 1070, column: 47, scope: !10108)
!10119 = !DILocation(line: 1070, column: 6, scope: !10048)
!10120 = !DILocation(line: 1071, column: 3, scope: !10108)
!10121 = !DILocation(line: 1073, column: 2, scope: !10048)
!10122 = !DILocation(line: 1073, column: 2, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 1073, column: 2)
!10124 = !DILocation(line: 1074, column: 8, scope: !10048)
!10125 = !DILocation(line: 1074, column: 12, scope: !10048)
!10126 = !DILocation(line: 1074, column: 6, scope: !10048)
!10127 = !DILocation(line: 1076, column: 7, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 1076, column: 6)
!10129 = !DILocation(line: 1076, column: 12, scope: !10128)
!10130 = !DILocation(line: 1076, column: 19, scope: !10128)
!10131 = !DILocation(line: 1076, column: 22, scope: !10128)
!10132 = !DILocation(line: 1076, column: 27, scope: !10128)
!10133 = !DILocation(line: 1076, column: 34, scope: !10128)
!10134 = !DILocation(line: 1076, column: 40, scope: !10128)
!10135 = !DILocation(line: 1076, column: 6, scope: !10048)
!10136 = !DILocation(line: 1077, column: 3, scope: !10128)
!10137 = !DILocation(line: 1080, column: 6, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 1080, column: 6)
!10139 = !DILocation(line: 1080, column: 10, scope: !10138)
!10140 = !DILocation(line: 1080, column: 6, scope: !10048)
!10141 = !DILocation(line: 1081, column: 3, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10138, file: !3, line: 1080, column: 15)
!10143 = !DILocation(line: 1081, column: 3, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10142, file: !3, line: 1081, column: 3)
!10145 = !DILocation(line: 1082, column: 36, scope: !10142)
!10146 = !DILocation(line: 1082, column: 41, scope: !10142)
!10147 = !DILocation(line: 1082, column: 49, scope: !10142)
!10148 = !DILocation(line: 1082, column: 57, scope: !10142)
!10149 = !DILocation(line: 1082, column: 61, scope: !10142)
!10150 = !DILocation(line: 1082, column: 12, scope: !10142)
!10151 = !DILocation(line: 1082, column: 10, scope: !10142)
!10152 = !DILocation(line: 1083, column: 7, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10142, file: !3, line: 1083, column: 7)
!10154 = !DILocation(line: 1083, column: 7, scope: !10142)
!10155 = !DILocation(line: 1084, column: 11, scope: !10153)
!10156 = !DILocation(line: 1084, column: 4, scope: !10153)
!10157 = !DILocation(line: 1085, column: 2, scope: !10142)
!10158 = !DILocation(line: 1087, column: 2, scope: !10048)
!10159 = !DILocation(line: 1087, column: 2, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 1087, column: 2)
!10161 = !DILocation(line: 1091, column: 2, scope: !10048)
!10162 = !DILocation(line: 1091, column: 2, scope: !10058)
!10163 = !DILocalVariable(name: "__dummy", scope: !10164, file: !3, line: 1091, type: !163)
!10164 = distinct !DILexicalBlock(scope: !10057, file: !3, line: 1091, column: 2)
!10165 = !DILocation(line: 1091, column: 2, scope: !10164)
!10166 = !DILocalVariable(name: "__dummy2", scope: !10164, file: !3, line: 1091, type: !163)
!10167 = !DILocation(line: 1091, column: 2, scope: !10057)
!10168 = !DILocation(line: 1091, column: 2, scope: !10056)
!10169 = !DILocation(line: 1091, column: 2, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10056, file: !3, line: 1091, column: 2)
!10171 = !DILocalVariable(name: "__dummy", scope: !10172, file: !3, line: 1091, type: !163)
!10172 = distinct !DILexicalBlock(scope: !10173, file: !3, line: 1091, column: 2)
!10173 = distinct !DILexicalBlock(scope: !10170, file: !3, line: 1091, column: 2)
!10174 = !DILocation(line: 1091, column: 2, scope: !10172)
!10175 = !DILocalVariable(name: "__dummy2", scope: !10172, file: !3, line: 1091, type: !163)
!10176 = !DILocation(line: 1091, column: 2, scope: !10173)
!10177 = !DILocation(line: 1091, column: 2, scope: !10055)
!10178 = !{i32 -2141464243}
!10179 = !DILocation(line: 1091, column: 2, scope: !10054)
!10180 = !DILocation(line: 329, column: 10, scope: !7586, inlinedAt: !10053)
!10181 = !DILocation(line: 329, column: 16, scope: !7586, inlinedAt: !10053)
!10182 = !DILocation(line: 1092, column: 2, scope: !10048)
!10183 = !DILocation(line: 1092, column: 10, scope: !10048)
!10184 = !DILocation(line: 1092, column: 17, scope: !10048)
!10185 = !DILocation(line: 1093, column: 2, scope: !10048)
!10186 = !DILocation(line: 1093, column: 10, scope: !10048)
!10187 = !DILocation(line: 1093, column: 17, scope: !10048)
!10188 = !DILocation(line: 1094, column: 2, scope: !10048)
!10189 = !DILocation(line: 1094, column: 7, scope: !10048)
!10190 = !DILocation(line: 1094, column: 16, scope: !10048)
!10191 = !DILocation(line: 1097, column: 18, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 1097, column: 6)
!10193 = !DILocation(line: 1097, column: 22, scope: !10192)
!10194 = !DILocation(line: 1097, column: 6, scope: !10192)
!10195 = !DILocation(line: 1097, column: 6, scope: !10048)
!10196 = !DILocation(line: 1099, column: 7, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 1099, column: 7)
!10198 = distinct !DILexicalBlock(scope: !10192, file: !3, line: 1097, column: 30)
!10199 = !DILocation(line: 1099, column: 15, scope: !10197)
!10200 = !DILocation(line: 1099, column: 22, scope: !10197)
!10201 = !DILocation(line: 1099, column: 7, scope: !10198)
!10202 = !DILocation(line: 1101, column: 17, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 1099, column: 28)
!10204 = !DILocation(line: 1101, column: 21, scope: !10203)
!10205 = !DILocation(line: 1101, column: 4, scope: !10203)
!10206 = !DILocation(line: 1102, column: 4, scope: !10203)
!10207 = !DILocation(line: 1102, column: 4, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 1102, column: 4)
!10209 = !DILocation(line: 1107, column: 8, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 1107, column: 8)
!10211 = !DILocation(line: 1107, column: 13, scope: !10210)
!10212 = !DILocation(line: 1107, column: 8, scope: !10203)
!10213 = !DILocation(line: 1108, column: 18, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10210, file: !3, line: 1107, column: 32)
!10215 = !DILocation(line: 1108, column: 23, scope: !10214)
!10216 = !DILocation(line: 1108, column: 29, scope: !10214)
!10217 = !DILocation(line: 1108, column: 17, scope: !10214)
!10218 = !DILocation(line: 1108, column: 11, scope: !10214)
!10219 = !DILocation(line: 1108, column: 9, scope: !10214)
!10220 = !DILocation(line: 1109, column: 9, scope: !10214)
!10221 = !DILocation(line: 1110, column: 12, scope: !10214)
!10222 = !DILocation(line: 1110, column: 18, scope: !10214)
!10223 = !DILocation(line: 1110, column: 23, scope: !10214)
!10224 = !DILocation(line: 1110, column: 29, scope: !10214)
!10225 = !DILocation(line: 1110, column: 17, scope: !10214)
!10226 = !DILocation(line: 1110, column: 5, scope: !10214)
!10227 = !DILocation(line: 1111, column: 5, scope: !10214)
!10228 = !DILocation(line: 1111, column: 10, scope: !10214)
!10229 = !DILocation(line: 1111, column: 28, scope: !10214)
!10230 = !DILocation(line: 1112, column: 4, scope: !10214)
!10231 = !DILocation(line: 1114, column: 8, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 1114, column: 8)
!10233 = !DILocation(line: 1114, column: 13, scope: !10232)
!10234 = !DILocation(line: 1114, column: 8, scope: !10203)
!10235 = !DILocation(line: 1116, column: 18, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10232, file: !3, line: 1114, column: 36)
!10237 = !DILocation(line: 1116, column: 23, scope: !10236)
!10238 = !DILocation(line: 1116, column: 40, scope: !10236)
!10239 = !DILocation(line: 1116, column: 46, scope: !10236)
!10240 = !DILocation(line: 1116, column: 17, scope: !10236)
!10241 = !DILocation(line: 1116, column: 11, scope: !10236)
!10242 = !DILocation(line: 1116, column: 9, scope: !10236)
!10243 = !DILocation(line: 1117, column: 9, scope: !10236)
!10244 = !DILocation(line: 1118, column: 12, scope: !10236)
!10245 = !DILocation(line: 1118, column: 18, scope: !10236)
!10246 = !DILocation(line: 1118, column: 23, scope: !10236)
!10247 = !DILocation(line: 1118, column: 40, scope: !10236)
!10248 = !DILocation(line: 1118, column: 46, scope: !10236)
!10249 = !DILocation(line: 1118, column: 17, scope: !10236)
!10250 = !DILocation(line: 1118, column: 5, scope: !10236)
!10251 = !DILocation(line: 1119, column: 5, scope: !10236)
!10252 = !DILocation(line: 1119, column: 10, scope: !10236)
!10253 = !DILocation(line: 1119, column: 27, scope: !10236)
!10254 = !DILocation(line: 1119, column: 34, scope: !10236)
!10255 = !DILocation(line: 1120, column: 21, scope: !10236)
!10256 = !DILocation(line: 1120, column: 26, scope: !10236)
!10257 = !DILocation(line: 1120, column: 5, scope: !10236)
!10258 = !DILocation(line: 1122, column: 5, scope: !10236)
!10259 = !DILocation(line: 1122, column: 10, scope: !10236)
!10260 = !DILocation(line: 1122, column: 32, scope: !10236)
!10261 = !DILocation(line: 1123, column: 4, scope: !10236)
!10262 = !DILocation(line: 1124, column: 4, scope: !10203)
!10263 = !DILocation(line: 1126, column: 7, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 1126, column: 7)
!10265 = !DILocation(line: 1126, column: 11, scope: !10264)
!10266 = !DILocation(line: 1126, column: 7, scope: !10198)
!10267 = !DILocation(line: 1127, column: 22, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10264, file: !3, line: 1126, column: 16)
!10269 = !DILocation(line: 1127, column: 26, scope: !10268)
!10270 = !DILocation(line: 1127, column: 13, scope: !10268)
!10271 = !DILocation(line: 1127, column: 11, scope: !10268)
!10272 = !DILocation(line: 1128, column: 8, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1128, column: 8)
!10274 = !DILocation(line: 1128, column: 15, scope: !10273)
!10275 = !DILocation(line: 1128, column: 8, scope: !10268)
!10276 = !DILocation(line: 1129, column: 5, scope: !10273)
!10277 = !DILocation(line: 1131, column: 8, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1131, column: 8)
!10279 = !DILocation(line: 1131, column: 12, scope: !10278)
!10280 = !DILocation(line: 1131, column: 8, scope: !10268)
!10281 = !DILocation(line: 1134, column: 6, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10278, file: !3, line: 1131, column: 16)
!10283 = !DILocation(line: 1133, column: 5, scope: !10282)
!10284 = !DILocation(line: 1133, column: 10, scope: !10282)
!10285 = !DILocation(line: 1133, column: 19, scope: !10282)
!10286 = !DILocation(line: 1133, column: 26, scope: !10282)
!10287 = !DILocation(line: 1137, column: 4, scope: !10282)
!10288 = !DILocation(line: 1140, column: 9, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1140, column: 8)
!10290 = !DILocation(line: 1140, column: 13, scope: !10289)
!10291 = !DILocation(line: 1140, column: 8, scope: !10268)
!10292 = !DILocation(line: 1142, column: 9, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 1142, column: 9)
!10294 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 1140, column: 17)
!10295 = !DILocation(line: 1142, column: 9, scope: !10294)
!10296 = !DILocation(line: 1143, column: 14, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10293, file: !3, line: 1142, column: 36)
!10298 = !DILocation(line: 1144, column: 28, scope: !10297)
!10299 = !DILocation(line: 1144, column: 36, scope: !10297)
!10300 = !DILocation(line: 1144, column: 6, scope: !10297)
!10301 = !DILocation(line: 1145, column: 5, scope: !10297)
!10302 = !DILocation(line: 1147, column: 18, scope: !10294)
!10303 = !DILocation(line: 1147, column: 23, scope: !10294)
!10304 = !DILocation(line: 1147, column: 29, scope: !10294)
!10305 = !DILocation(line: 1147, column: 17, scope: !10294)
!10306 = !DILocation(line: 1147, column: 11, scope: !10294)
!10307 = !DILocation(line: 1147, column: 9, scope: !10294)
!10308 = !DILocation(line: 1148, column: 9, scope: !10294)
!10309 = !DILocation(line: 1149, column: 12, scope: !10294)
!10310 = !DILocation(line: 1149, column: 18, scope: !10294)
!10311 = !DILocation(line: 1149, column: 23, scope: !10294)
!10312 = !DILocation(line: 1149, column: 29, scope: !10294)
!10313 = !DILocation(line: 1149, column: 17, scope: !10294)
!10314 = !DILocation(line: 1149, column: 5, scope: !10294)
!10315 = !DILocation(line: 1150, column: 17, scope: !10294)
!10316 = !DILocation(line: 1156, column: 9, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 1156, column: 9)
!10318 = !DILocation(line: 1156, column: 13, scope: !10317)
!10319 = !DILocation(line: 1156, column: 9, scope: !10294)
!10320 = !DILocation(line: 1157, column: 6, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10317, file: !3, line: 1156, column: 27)
!10322 = !DILocation(line: 1157, column: 6, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10321, file: !3, line: 1157, column: 6)
!10324 = !DILocation(line: 1158, column: 13, scope: !10321)
!10325 = !DILocation(line: 1158, column: 17, scope: !10321)
!10326 = !DILocation(line: 1158, column: 32, scope: !10321)
!10327 = !DILocation(line: 1158, column: 6, scope: !10321)
!10328 = !DILocation(line: 1159, column: 7, scope: !10321)
!10329 = !DILocation(line: 1159, column: 12, scope: !10321)
!10330 = !DILocation(line: 1161, column: 5, scope: !10321)
!10331 = !DILocation(line: 1162, column: 4, scope: !10294)
!10332 = !DILocation(line: 1164, column: 11, scope: !10268)
!10333 = !DILocation(line: 1164, column: 16, scope: !10268)
!10334 = !DILocation(line: 1164, column: 26, scope: !10268)
!10335 = !DILocation(line: 1164, column: 30, scope: !10268)
!10336 = !DILocation(line: 1164, column: 36, scope: !10268)
!10337 = !DILocation(line: 1164, column: 25, scope: !10268)
!10338 = !DILocation(line: 1164, column: 4, scope: !10268)
!10339 = !DILocation(line: 1167, column: 8, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1167, column: 8)
!10341 = !DILocation(line: 1167, column: 12, scope: !10340)
!10342 = !DILocation(line: 1167, column: 8, scope: !10268)
!10343 = !DILocation(line: 1168, column: 18, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10340, file: !3, line: 1167, column: 20)
!10345 = !DILocation(line: 1168, column: 22, scope: !10344)
!10346 = !DILocation(line: 1168, column: 28, scope: !10344)
!10347 = !DILocation(line: 1168, column: 17, scope: !10344)
!10348 = !DILocation(line: 1168, column: 11, scope: !10344)
!10349 = !DILocation(line: 1168, column: 9, scope: !10344)
!10350 = !DILocation(line: 1169, column: 9, scope: !10344)
!10351 = !DILocation(line: 1170, column: 12, scope: !10344)
!10352 = !DILocation(line: 1170, column: 18, scope: !10344)
!10353 = !DILocation(line: 1170, column: 22, scope: !10344)
!10354 = !DILocation(line: 1170, column: 28, scope: !10344)
!10355 = !DILocation(line: 1170, column: 17, scope: !10344)
!10356 = !DILocation(line: 1170, column: 5, scope: !10344)
!10357 = !DILocation(line: 1171, column: 5, scope: !10344)
!10358 = !DILocation(line: 1171, column: 9, scope: !10344)
!10359 = !DILocation(line: 1171, column: 16, scope: !10344)
!10360 = !DILocation(line: 1172, column: 20, scope: !10344)
!10361 = !DILocation(line: 1172, column: 24, scope: !10344)
!10362 = !DILocation(line: 1172, column: 28, scope: !10344)
!10363 = !DILocation(line: 1172, column: 5, scope: !10344)
!10364 = !DILocation(line: 1173, column: 4, scope: !10344)
!10365 = !DILocation(line: 1175, column: 8, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1175, column: 8)
!10367 = !DILocation(line: 1175, column: 12, scope: !10366)
!10368 = !DILocation(line: 1175, column: 8, scope: !10268)
!10369 = !DILocation(line: 1177, column: 18, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 1175, column: 16)
!10371 = !DILocation(line: 1177, column: 23, scope: !10370)
!10372 = !DILocation(line: 1177, column: 29, scope: !10370)
!10373 = !DILocation(line: 1177, column: 17, scope: !10370)
!10374 = !DILocation(line: 1177, column: 11, scope: !10370)
!10375 = !DILocation(line: 1177, column: 9, scope: !10370)
!10376 = !DILocation(line: 1178, column: 12, scope: !10370)
!10377 = !DILocation(line: 1178, column: 9, scope: !10370)
!10378 = !DILocation(line: 1179, column: 12, scope: !10370)
!10379 = !DILocation(line: 1179, column: 18, scope: !10370)
!10380 = !DILocation(line: 1179, column: 23, scope: !10370)
!10381 = !DILocation(line: 1179, column: 29, scope: !10370)
!10382 = !DILocation(line: 1179, column: 17, scope: !10370)
!10383 = !DILocation(line: 1179, column: 5, scope: !10370)
!10384 = !DILocation(line: 1180, column: 4, scope: !10370)
!10385 = !DILocation(line: 1181, column: 3, scope: !10268)
!10386 = !DILocation(line: 1181, column: 14, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10264, file: !3, line: 1181, column: 14)
!10388 = !DILocation(line: 1181, column: 18, scope: !10387)
!10389 = !DILocation(line: 1181, column: 14, scope: !10264)
!10390 = !DILocation(line: 1183, column: 18, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10387, file: !3, line: 1181, column: 22)
!10392 = !DILocation(line: 1183, column: 23, scope: !10391)
!10393 = !DILocation(line: 1183, column: 29, scope: !10391)
!10394 = !DILocation(line: 1183, column: 17, scope: !10391)
!10395 = !DILocation(line: 1183, column: 11, scope: !10391)
!10396 = !DILocation(line: 1183, column: 9, scope: !10391)
!10397 = !DILocation(line: 1184, column: 12, scope: !10391)
!10398 = !DILocation(line: 1184, column: 9, scope: !10391)
!10399 = !DILocation(line: 1185, column: 12, scope: !10391)
!10400 = !DILocation(line: 1185, column: 18, scope: !10391)
!10401 = !DILocation(line: 1185, column: 23, scope: !10391)
!10402 = !DILocation(line: 1185, column: 29, scope: !10391)
!10403 = !DILocation(line: 1185, column: 17, scope: !10391)
!10404 = !DILocation(line: 1185, column: 5, scope: !10391)
!10405 = !DILocation(line: 1186, column: 4, scope: !10391)
!10406 = !DILocation(line: 1188, column: 2, scope: !10198)
!10407 = !DILocation(line: 1188, column: 13, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10192, file: !3, line: 1188, column: 13)
!10409 = !DILocation(line: 1188, column: 17, scope: !10408)
!10410 = !DILocation(line: 1188, column: 13, scope: !10192)
!10411 = !DILocation(line: 1194, column: 7, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 1194, column: 7)
!10413 = distinct !DILexicalBlock(scope: !10408, file: !3, line: 1188, column: 22)
!10414 = !DILocation(line: 1194, column: 11, scope: !10412)
!10415 = !DILocation(line: 1194, column: 7, scope: !10413)
!10416 = !DILocation(line: 1195, column: 22, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10412, file: !3, line: 1194, column: 15)
!10418 = !DILocation(line: 1195, column: 26, scope: !10417)
!10419 = !DILocation(line: 1195, column: 13, scope: !10417)
!10420 = !DILocation(line: 1195, column: 11, scope: !10417)
!10421 = !DILocation(line: 1196, column: 8, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10417, file: !3, line: 1196, column: 8)
!10423 = !DILocation(line: 1196, column: 15, scope: !10422)
!10424 = !DILocation(line: 1196, column: 8, scope: !10417)
!10425 = !DILocation(line: 1197, column: 5, scope: !10422)
!10426 = !DILocation(line: 1198, column: 3, scope: !10417)
!10427 = !DILocation(line: 1199, column: 2, scope: !10413)
!10428 = !DILocation(line: 1200, column: 2, scope: !10048)
!10429 = !DILocation(line: 1200, column: 2, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 1200, column: 2)
!10431 = !DILocation(line: 1202, column: 6, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 1202, column: 6)
!10433 = !DILocation(line: 1202, column: 6, scope: !10048)
!10434 = !DILocation(line: 1204, column: 18, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10432, file: !3, line: 1202, column: 11)
!10436 = !DILocation(line: 1204, column: 23, scope: !10435)
!10437 = !DILocation(line: 1204, column: 31, scope: !10435)
!10438 = !DILocation(line: 1204, column: 35, scope: !10435)
!10439 = !DILocation(line: 1204, column: 3, scope: !10435)
!10440 = !DILocation(line: 1207, column: 7, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 1207, column: 7)
!10442 = !DILocation(line: 1207, column: 7, scope: !10435)
!10443 = !DILocation(line: 1209, column: 4, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10441, file: !3, line: 1207, column: 20)
!10445 = !DILocation(line: 1209, column: 9, scope: !10444)
!10446 = !DILocation(line: 1209, column: 19, scope: !10444)
!10447 = !DILocation(line: 1210, column: 16, scope: !10444)
!10448 = !DILocation(line: 1210, column: 4, scope: !10444)
!10449 = !DILocation(line: 1211, column: 8, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 1211, column: 8)
!10451 = !DILocation(line: 1211, column: 12, scope: !10450)
!10452 = !DILocation(line: 1211, column: 16, scope: !10450)
!10453 = !DILocation(line: 1211, column: 8, scope: !10444)
!10454 = !DILocation(line: 1212, column: 5, scope: !10450)
!10455 = !DILocation(line: 1212, column: 10, scope: !10450)
!10456 = !DILocation(line: 1212, column: 25, scope: !10450)
!10457 = !DILocation(line: 1213, column: 3, scope: !10444)
!10458 = !DILocation(line: 1215, column: 8, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 1215, column: 7)
!10460 = !DILocation(line: 1215, column: 12, scope: !10459)
!10461 = !DILocation(line: 1215, column: 7, scope: !10435)
!10462 = !DILocation(line: 1216, column: 9, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10464, file: !3, line: 1216, column: 8)
!10464 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 1215, column: 16)
!10465 = !DILocation(line: 1216, column: 17, scope: !10463)
!10466 = !DILocation(line: 1216, column: 20, scope: !10463)
!10467 = !DILocation(line: 1216, column: 8, scope: !10464)
!10468 = !DILocation(line: 1223, column: 25, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10470, file: !3, line: 1223, column: 9)
!10470 = distinct !DILexicalBlock(scope: !10463, file: !3, line: 1216, column: 40)
!10471 = !DILocation(line: 1223, column: 29, scope: !10469)
!10472 = !DILocation(line: 1223, column: 9, scope: !10469)
!10473 = !DILocation(line: 1223, column: 9, scope: !10470)
!10474 = !DILocation(line: 1225, column: 19, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 1223, column: 35)
!10476 = !DILocation(line: 1225, column: 23, scope: !10475)
!10477 = !DILocation(line: 1225, column: 6, scope: !10475)
!10478 = !DILocation(line: 1226, column: 5, scope: !10475)
!10479 = !DILocation(line: 1227, column: 24, scope: !10470)
!10480 = !DILocation(line: 1229, column: 4, scope: !10470)
!10481 = !DILocation(line: 1230, column: 3, scope: !10464)
!10482 = !DILocation(line: 1231, column: 2, scope: !10435)
!10483 = !DILabel(scope: !10048, name: "finished", file: !3, line: 1233)
!10484 = !DILocation(line: 1233, column: 1, scope: !10048)
!10485 = !DILocation(line: 1234, column: 26, scope: !10048)
!10486 = !DILocation(line: 1234, column: 31, scope: !10048)
!10487 = !DILocation(line: 1234, column: 37, scope: !10048)
!10488 = !DILocation(line: 409, column: 2, scope: !7747, inlinedAt: !10050)
!10489 = !DILocation(line: 409, column: 2, scope: !7752, inlinedAt: !10050)
!10490 = !DILocation(line: 409, column: 2, scope: !7753, inlinedAt: !10050)
!10491 = !DILocation(line: 409, column: 2, scope: !7760, inlinedAt: !10050)
!10492 = !DILocation(line: 409, column: 2, scope: !7763, inlinedAt: !10050)
!10493 = !DILocation(line: 1235, column: 9, scope: !10048)
!10494 = !DILocation(line: 1235, column: 2, scope: !10048)
!10495 = !DILocation(line: 1236, column: 1, scope: !10048)
!10496 = distinct !DISubprogram(name: "udc_dequeue", scope: !3, file: !3, line: 1254, type: !237, scopeLine: 1255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!10497 = !DILocation(line: 407, column: 64, scope: !7578, inlinedAt: !10498)
!10498 = distinct !DILocation(line: 1303, column: 2, scope: !10496)
!10499 = !DILocation(line: 407, column: 84, scope: !7578, inlinedAt: !10498)
!10500 = !DILocation(line: 327, column: 67, scope: !7586, inlinedAt: !10501)
!10501 = distinct !DILocation(line: 1268, column: 2, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 1268, column: 2)
!10503 = distinct !DILexicalBlock(scope: !10504, file: !3, line: 1268, column: 2)
!10504 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 1268, column: 2)
!10505 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 1268, column: 2)
!10506 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 1268, column: 2)
!10507 = !DILocalVariable(name: "usbep", arg: 1, scope: !10496, file: !3, line: 1254, type: !180)
!10508 = !DILocation(line: 1254, column: 39, scope: !10496)
!10509 = !DILocalVariable(name: "usbreq", arg: 2, scope: !10496, file: !3, line: 1254, type: !228)
!10510 = !DILocation(line: 1254, column: 66, scope: !10496)
!10511 = !DILocalVariable(name: "ep", scope: !10496, file: !3, line: 1256, type: !319)
!10512 = !DILocation(line: 1256, column: 18, scope: !10496)
!10513 = !DILocalVariable(name: "req", scope: !10496, file: !3, line: 1257, type: !139)
!10514 = !DILocation(line: 1257, column: 22, scope: !10496)
!10515 = !DILocalVariable(name: "halted", scope: !10496, file: !3, line: 1258, type: !7)
!10516 = !DILocation(line: 1258, column: 12, scope: !10496)
!10517 = !DILocalVariable(name: "iflags", scope: !10496, file: !3, line: 1259, type: !163)
!10518 = !DILocation(line: 1259, column: 17, scope: !10496)
!10519 = !DILocalVariable(name: "__mptr", scope: !10520, file: !3, line: 1261, type: !138)
!10520 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 1261, column: 7)
!10521 = !DILocation(line: 1261, column: 7, scope: !10520)
!10522 = !DILocation(line: 1261, column: 7, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 1261, column: 7)
!10524 = !DILocation(line: 1261, column: 5, scope: !10496)
!10525 = !DILocation(line: 1262, column: 7, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 1262, column: 6)
!10527 = !DILocation(line: 1262, column: 13, scope: !10526)
!10528 = !DILocation(line: 1262, column: 17, scope: !10526)
!10529 = !DILocation(line: 1262, column: 24, scope: !10526)
!10530 = !DILocation(line: 1262, column: 29, scope: !10526)
!10531 = !DILocation(line: 1262, column: 33, scope: !10526)
!10532 = !DILocation(line: 1262, column: 36, scope: !10526)
!10533 = !DILocation(line: 1262, column: 41, scope: !10526)
!10534 = !DILocation(line: 1262, column: 45, scope: !10526)
!10535 = !DILocation(line: 1262, column: 49, scope: !10526)
!10536 = !DILocation(line: 1262, column: 53, scope: !10526)
!10537 = !DILocation(line: 1263, column: 5, scope: !10526)
!10538 = !DILocation(line: 1263, column: 8, scope: !10526)
!10539 = !DILocation(line: 1263, column: 12, scope: !10526)
!10540 = !DILocation(line: 1263, column: 16, scope: !10526)
!10541 = !DILocation(line: 1262, column: 6, scope: !10496)
!10542 = !DILocation(line: 1264, column: 3, scope: !10526)
!10543 = !DILocalVariable(name: "__mptr", scope: !10544, file: !3, line: 1266, type: !138)
!10544 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 1266, column: 8)
!10545 = !DILocation(line: 1266, column: 8, scope: !10544)
!10546 = !DILocation(line: 1266, column: 8, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 1266, column: 8)
!10548 = !DILocation(line: 1266, column: 6, scope: !10496)
!10549 = !DILocation(line: 1268, column: 2, scope: !10496)
!10550 = !DILocation(line: 1268, column: 2, scope: !10506)
!10551 = !DILocalVariable(name: "__dummy", scope: !10552, file: !3, line: 1268, type: !163)
!10552 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 1268, column: 2)
!10553 = !DILocation(line: 1268, column: 2, scope: !10552)
!10554 = !DILocalVariable(name: "__dummy2", scope: !10552, file: !3, line: 1268, type: !163)
!10555 = !DILocation(line: 1268, column: 2, scope: !10505)
!10556 = !DILocation(line: 1268, column: 2, scope: !10504)
!10557 = !DILocation(line: 1268, column: 2, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10504, file: !3, line: 1268, column: 2)
!10559 = !DILocalVariable(name: "__dummy", scope: !10560, file: !3, line: 1268, type: !163)
!10560 = distinct !DILexicalBlock(scope: !10561, file: !3, line: 1268, column: 2)
!10561 = distinct !DILexicalBlock(scope: !10558, file: !3, line: 1268, column: 2)
!10562 = !DILocation(line: 1268, column: 2, scope: !10560)
!10563 = !DILocalVariable(name: "__dummy2", scope: !10560, file: !3, line: 1268, type: !163)
!10564 = !DILocation(line: 1268, column: 2, scope: !10561)
!10565 = !DILocation(line: 1268, column: 2, scope: !10503)
!10566 = !{i32 -2141457156}
!10567 = !DILocation(line: 1268, column: 2, scope: !10502)
!10568 = !DILocation(line: 329, column: 10, scope: !7586, inlinedAt: !10501)
!10569 = !DILocation(line: 329, column: 16, scope: !7586, inlinedAt: !10501)
!10570 = !DILocation(line: 1269, column: 11, scope: !10496)
!10571 = !DILocation(line: 1269, column: 15, scope: !10496)
!10572 = !DILocation(line: 1269, column: 9, scope: !10496)
!10573 = !DILocation(line: 1270, column: 2, scope: !10496)
!10574 = !DILocation(line: 1270, column: 6, scope: !10496)
!10575 = !DILocation(line: 1270, column: 13, scope: !10496)
!10576 = !DILocation(line: 1272, column: 6, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 1272, column: 6)
!10578 = !DILocation(line: 1272, column: 10, scope: !10577)
!10579 = !DILocation(line: 1272, column: 16, scope: !10577)
!10580 = !DILocation(line: 1272, column: 25, scope: !10577)
!10581 = !DILocation(line: 1272, column: 30, scope: !10577)
!10582 = !DILocation(line: 1272, column: 21, scope: !10577)
!10583 = !DILocation(line: 1272, column: 6, scope: !10496)
!10584 = !DILocation(line: 1273, column: 7, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10586, file: !3, line: 1273, column: 7)
!10586 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 1272, column: 37)
!10587 = !DILocation(line: 1273, column: 11, scope: !10585)
!10588 = !DILocation(line: 1273, column: 15, scope: !10585)
!10589 = !DILocation(line: 1273, column: 18, scope: !10585)
!10590 = !DILocation(line: 1273, column: 23, scope: !10585)
!10591 = !DILocation(line: 1273, column: 7, scope: !10586)
!10592 = !DILocation(line: 1274, column: 8, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10594, file: !3, line: 1274, column: 8)
!10594 = distinct !DILexicalBlock(scope: !10585, file: !3, line: 1273, column: 34)
!10595 = !DILocation(line: 1274, column: 12, scope: !10593)
!10596 = !DILocation(line: 1274, column: 8, scope: !10594)
!10597 = !DILocation(line: 1275, column: 5, scope: !10593)
!10598 = !DILocation(line: 1275, column: 9, scope: !10593)
!10599 = !DILocation(line: 1275, column: 25, scope: !10593)
!10600 = !DILocalVariable(name: "tmp", scope: !10601, file: !3, line: 1277, type: !296)
!10601 = distinct !DILexicalBlock(scope: !10593, file: !3, line: 1276, column: 9)
!10602 = !DILocation(line: 1277, column: 9, scope: !10601)
!10603 = !DILocalVariable(name: "dma_sts", scope: !10601, file: !3, line: 1278, type: !296)
!10604 = !DILocation(line: 1278, column: 9, scope: !10601)
!10605 = !DILocation(line: 1280, column: 18, scope: !10601)
!10606 = !DILocation(line: 1280, column: 23, scope: !10601)
!10607 = !DILocation(line: 1280, column: 29, scope: !10601)
!10608 = !DILocation(line: 1280, column: 17, scope: !10601)
!10609 = !DILocation(line: 1280, column: 11, scope: !10601)
!10610 = !DILocation(line: 1280, column: 9, scope: !10601)
!10611 = !DILocation(line: 1281, column: 12, scope: !10601)
!10612 = !DILocation(line: 1281, column: 16, scope: !10601)
!10613 = !DILocation(line: 1282, column: 9, scope: !10601)
!10614 = !DILocation(line: 1282, column: 14, scope: !10601)
!10615 = !DILocation(line: 1282, column: 20, scope: !10601)
!10616 = !DILocation(line: 1282, column: 8, scope: !10601)
!10617 = !DILocation(line: 1281, column: 5, scope: !10601)
!10618 = !DILocation(line: 1287, column: 15, scope: !10601)
!10619 = !DILocation(line: 1287, column: 13, scope: !10601)
!10620 = !DILocation(line: 1289, column: 9, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10601, file: !3, line: 1289, column: 9)
!10622 = !DILocation(line: 1289, column: 17, scope: !10621)
!10623 = !DILocation(line: 1289, column: 9, scope: !10601)
!10624 = !DILocation(line: 1290, column: 6, scope: !10621)
!10625 = !DILocation(line: 1290, column: 10, scope: !10621)
!10626 = !DILocation(line: 1290, column: 26, scope: !10621)
!10627 = !DILocation(line: 1292, column: 25, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 1291, column: 10)
!10629 = !DILocation(line: 1292, column: 29, scope: !10628)
!10630 = !DILocation(line: 1292, column: 6, scope: !10628)
!10631 = !DILocation(line: 1293, column: 13, scope: !10628)
!10632 = !DILocation(line: 1293, column: 17, scope: !10628)
!10633 = !DILocation(line: 1293, column: 32, scope: !10628)
!10634 = !DILocation(line: 1294, column: 8, scope: !10628)
!10635 = !DILocation(line: 1294, column: 12, scope: !10628)
!10636 = !DILocation(line: 1294, column: 18, scope: !10628)
!10637 = !DILocation(line: 1294, column: 7, scope: !10628)
!10638 = !DILocation(line: 1293, column: 6, scope: !10628)
!10639 = !DILocation(line: 1296, column: 12, scope: !10601)
!10640 = !DILocation(line: 1296, column: 18, scope: !10601)
!10641 = !DILocation(line: 1296, column: 23, scope: !10601)
!10642 = !DILocation(line: 1296, column: 29, scope: !10601)
!10643 = !DILocation(line: 1296, column: 17, scope: !10601)
!10644 = !DILocation(line: 1296, column: 5, scope: !10601)
!10645 = !DILocation(line: 1298, column: 3, scope: !10594)
!10646 = !DILocation(line: 1299, column: 2, scope: !10586)
!10647 = !DILocation(line: 1300, column: 15, scope: !10496)
!10648 = !DILocation(line: 1300, column: 19, scope: !10496)
!10649 = !DILocation(line: 1300, column: 2, scope: !10496)
!10650 = !DILocation(line: 1301, column: 15, scope: !10496)
!10651 = !DILocation(line: 1301, column: 2, scope: !10496)
!10652 = !DILocation(line: 1301, column: 6, scope: !10496)
!10653 = !DILocation(line: 1301, column: 13, scope: !10496)
!10654 = !DILocation(line: 1303, column: 26, scope: !10496)
!10655 = !DILocation(line: 1303, column: 30, scope: !10496)
!10656 = !DILocation(line: 1303, column: 35, scope: !10496)
!10657 = !DILocation(line: 1303, column: 41, scope: !10496)
!10658 = !DILocation(line: 409, column: 2, scope: !7747, inlinedAt: !10498)
!10659 = !DILocation(line: 409, column: 2, scope: !7752, inlinedAt: !10498)
!10660 = !DILocation(line: 409, column: 2, scope: !7753, inlinedAt: !10498)
!10661 = !DILocation(line: 409, column: 2, scope: !7760, inlinedAt: !10498)
!10662 = !DILocation(line: 409, column: 2, scope: !7763, inlinedAt: !10498)
!10663 = !DILocation(line: 1304, column: 2, scope: !10496)
!10664 = !DILocation(line: 1305, column: 1, scope: !10496)
!10665 = distinct !DISubprogram(name: "usb_endpoint_maxp", scope: !6, file: !6, line: 647, type: !10666, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!10666 = !DISubroutineType(types: !10667)
!10667 = !{!197, !198}
!10668 = !DILocalVariable(name: "epd", arg: 1, scope: !10665, file: !6, line: 647, type: !198)
!10669 = !DILocation(line: 647, column: 75, scope: !10665)
!10670 = !DILocation(line: 649, column: 9, scope: !10665)
!10671 = !DILocation(line: 649, column: 44, scope: !10665)
!10672 = !DILocation(line: 649, column: 2, scope: !10665)
!10673 = distinct !DISubprogram(name: "udc_set_txfifo_addr", scope: !3, file: !3, line: 283, type: !10674, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!10674 = !DISubroutineType(types: !10675)
!10675 = !{!197, !319}
!10676 = !DILocalVariable(name: "ep", arg: 1, scope: !10673, file: !3, line: 283, type: !319)
!10677 = !DILocation(line: 283, column: 47, scope: !10673)
!10678 = !DILocalVariable(name: "dev", scope: !10673, file: !3, line: 285, type: !356)
!10679 = !DILocation(line: 285, column: 14, scope: !10673)
!10680 = !DILocalVariable(name: "tmp", scope: !10673, file: !3, line: 286, type: !296)
!10681 = !DILocation(line: 286, column: 6, scope: !10673)
!10682 = !DILocalVariable(name: "i", scope: !10673, file: !3, line: 287, type: !197)
!10683 = !DILocation(line: 287, column: 6, scope: !10673)
!10684 = !DILocation(line: 289, column: 7, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 289, column: 6)
!10686 = !DILocation(line: 289, column: 10, scope: !10685)
!10687 = !DILocation(line: 289, column: 15, scope: !10685)
!10688 = !DILocation(line: 289, column: 19, scope: !10685)
!10689 = !DILocation(line: 289, column: 14, scope: !10685)
!10690 = !DILocation(line: 289, column: 6, scope: !10673)
!10691 = !DILocation(line: 290, column: 3, scope: !10685)
!10692 = !DILocation(line: 292, column: 8, scope: !10673)
!10693 = !DILocation(line: 292, column: 12, scope: !10673)
!10694 = !DILocation(line: 292, column: 6, scope: !10673)
!10695 = !DILocation(line: 293, column: 15, scope: !10673)
!10696 = !DILocation(line: 293, column: 20, scope: !10673)
!10697 = !DILocation(line: 293, column: 2, scope: !10673)
!10698 = !DILocation(line: 293, column: 6, scope: !10673)
!10699 = !DILocation(line: 293, column: 13, scope: !10673)
!10700 = !DILocation(line: 296, column: 9, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 296, column: 2)
!10702 = !DILocation(line: 296, column: 7, scope: !10701)
!10703 = !DILocation(line: 296, column: 14, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10701, file: !3, line: 296, column: 2)
!10705 = !DILocation(line: 296, column: 18, scope: !10704)
!10706 = !DILocation(line: 296, column: 22, scope: !10704)
!10707 = !DILocation(line: 296, column: 16, scope: !10704)
!10708 = !DILocation(line: 296, column: 2, scope: !10701)
!10709 = !DILocation(line: 297, column: 7, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10711, file: !3, line: 297, column: 7)
!10711 = distinct !DILexicalBlock(scope: !10704, file: !3, line: 296, column: 32)
!10712 = !DILocation(line: 297, column: 12, scope: !10710)
!10713 = !DILocation(line: 297, column: 15, scope: !10710)
!10714 = !DILocation(line: 297, column: 18, scope: !10710)
!10715 = !DILocation(line: 297, column: 7, scope: !10711)
!10716 = !DILocation(line: 299, column: 17, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 297, column: 24)
!10718 = !DILocation(line: 299, column: 22, scope: !10717)
!10719 = !DILocation(line: 299, column: 25, scope: !10717)
!10720 = !DILocation(line: 299, column: 28, scope: !10717)
!10721 = !DILocation(line: 299, column: 34, scope: !10717)
!10722 = !DILocation(line: 299, column: 16, scope: !10717)
!10723 = !DILocation(line: 299, column: 10, scope: !10717)
!10724 = !DILocation(line: 299, column: 8, scope: !10717)
!10725 = !DILocation(line: 300, column: 10, scope: !10717)
!10726 = !DILocation(line: 300, column: 8, scope: !10717)
!10727 = !DILocation(line: 301, column: 18, scope: !10717)
!10728 = !DILocation(line: 301, column: 4, scope: !10717)
!10729 = !DILocation(line: 301, column: 8, scope: !10717)
!10730 = !DILocation(line: 301, column: 15, scope: !10717)
!10731 = !DILocation(line: 302, column: 3, scope: !10717)
!10732 = !DILocation(line: 303, column: 2, scope: !10711)
!10733 = !DILocation(line: 296, column: 28, scope: !10704)
!10734 = !DILocation(line: 296, column: 2, scope: !10704)
!10735 = distinct !{!10735, !10708, !10736}
!10736 = !DILocation(line: 303, column: 2, scope: !10701)
!10737 = !DILocation(line: 304, column: 2, scope: !10673)
!10738 = !DILocation(line: 305, column: 1, scope: !10673)
!10739 = distinct !DISubprogram(name: "udc_alloc_bna_dummy", scope: !3, file: !3, line: 631, type: !10740, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!10740 = !DISubroutineType(types: !10741)
!10741 = !{!139, !319}
!10742 = !DILocalVariable(name: "ep", arg: 1, scope: !10739, file: !3, line: 631, type: !319)
!10743 = !DILocation(line: 631, column: 63, scope: !10739)
!10744 = !DILocalVariable(name: "req", scope: !10739, file: !3, line: 633, type: !139)
!10745 = !DILocation(line: 633, column: 22, scope: !10739)
!10746 = !DILocalVariable(name: "_req", scope: !10739, file: !3, line: 634, type: !228)
!10747 = !DILocation(line: 634, column: 22, scope: !10739)
!10748 = !DILocation(line: 637, column: 28, scope: !10739)
!10749 = !DILocation(line: 637, column: 32, scope: !10739)
!10750 = !DILocation(line: 637, column: 9, scope: !10739)
!10751 = !DILocation(line: 637, column: 7, scope: !10739)
!10752 = !DILocation(line: 638, column: 6, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10739, file: !3, line: 638, column: 6)
!10754 = !DILocation(line: 638, column: 6, scope: !10739)
!10755 = !DILocalVariable(name: "__mptr", scope: !10756, file: !3, line: 639, type: !138)
!10756 = distinct !DILexicalBlock(scope: !10757, file: !3, line: 639, column: 9)
!10757 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 638, column: 12)
!10758 = !DILocation(line: 639, column: 9, scope: !10756)
!10759 = !DILocation(line: 639, column: 9, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10756, file: !3, line: 639, column: 9)
!10761 = !DILocation(line: 639, column: 7, scope: !10757)
!10762 = !DILocation(line: 640, column: 23, scope: !10757)
!10763 = !DILocation(line: 640, column: 3, scope: !10757)
!10764 = !DILocation(line: 640, column: 7, scope: !10757)
!10765 = !DILocation(line: 640, column: 21, scope: !10757)
!10766 = !DILocation(line: 641, column: 22, scope: !10757)
!10767 = !DILocation(line: 641, column: 3, scope: !10757)
!10768 = !DILocation(line: 642, column: 2, scope: !10757)
!10769 = !DILocation(line: 643, column: 9, scope: !10739)
!10770 = !DILocation(line: 643, column: 2, scope: !10739)
!10771 = distinct !DISubprogram(name: "kzalloc", scope: !126, file: !126, line: 662, type: !10772, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!10772 = !DISubroutineType(types: !10773)
!10773 = !{!138, !569, !229}
!10774 = !DILocalVariable(name: "s", arg: 1, scope: !10775, file: !126, line: 445, type: !1158)
!10775 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !126, file: !126, line: 445, type: !10776, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!10776 = !DISubroutineType(types: !10777)
!10777 = !{!138, !1158, !229, !569}
!10778 = !DILocation(line: 445, column: 72, scope: !10775, inlinedAt: !10779)
!10779 = distinct !DILocation(line: 552, column: 10, scope: !10780, inlinedAt: !10783)
!10780 = distinct !DILexicalBlock(scope: !10781, file: !126, line: 540, column: 34)
!10781 = distinct !DILexicalBlock(scope: !10782, file: !126, line: 540, column: 6)
!10782 = distinct !DISubprogram(name: "kmalloc", scope: !126, file: !126, line: 538, type: !10772, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!10783 = distinct !DILocation(line: 664, column: 9, scope: !10771)
!10784 = !DILocalVariable(name: "flags", arg: 2, scope: !10775, file: !126, line: 446, type: !229)
!10785 = !DILocation(line: 446, column: 9, scope: !10775, inlinedAt: !10779)
!10786 = !DILocalVariable(name: "size", arg: 3, scope: !10775, file: !126, line: 446, type: !569)
!10787 = !DILocation(line: 446, column: 23, scope: !10775, inlinedAt: !10779)
!10788 = !DILocalVariable(name: "ret", scope: !10775, file: !126, line: 448, type: !138)
!10789 = !DILocation(line: 448, column: 8, scope: !10775, inlinedAt: !10779)
!10790 = !DILocalVariable(name: "flags", arg: 1, scope: !10791, file: !126, line: 318, type: !229)
!10791 = distinct !DISubprogram(name: "kmalloc_type", scope: !126, file: !126, line: 318, type: !10792, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!10792 = !DISubroutineType(types: !10793)
!10793 = !{!125, !229}
!10794 = !DILocation(line: 318, column: 67, scope: !10791, inlinedAt: !10795)
!10795 = distinct !DILocation(line: 553, column: 20, scope: !10780, inlinedAt: !10783)
!10796 = !DILocalVariable(name: "size", arg: 1, scope: !10797, file: !126, line: 346, type: !569)
!10797 = distinct !DISubprogram(name: "kmalloc_index", scope: !126, file: !126, line: 346, type: !10798, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!10798 = !DISubroutineType(types: !10799)
!10799 = !{!7, !569}
!10800 = !DILocation(line: 346, column: 58, scope: !10797, inlinedAt: !10801)
!10801 = distinct !DILocation(line: 547, column: 11, scope: !10780, inlinedAt: !10783)
!10802 = !DILocalVariable(name: "size", arg: 1, scope: !10803, file: !126, line: 472, type: !569)
!10803 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !126, file: !126, line: 472, type: !10804, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!10804 = !DISubroutineType(types: !10805)
!10805 = !{!138, !569, !229, !7}
!10806 = !DILocation(line: 472, column: 28, scope: !10803, inlinedAt: !10807)
!10807 = distinct !DILocation(line: 481, column: 9, scope: !10808, inlinedAt: !10809)
!10808 = distinct !DISubprogram(name: "kmalloc_large", scope: !126, file: !126, line: 478, type: !10772, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!10809 = distinct !DILocation(line: 545, column: 11, scope: !10810, inlinedAt: !10783)
!10810 = distinct !DILexicalBlock(scope: !10780, file: !126, line: 544, column: 7)
!10811 = !DILocalVariable(name: "flags", arg: 2, scope: !10803, file: !126, line: 472, type: !229)
!10812 = !DILocation(line: 472, column: 40, scope: !10803, inlinedAt: !10807)
!10813 = !DILocalVariable(name: "order", arg: 3, scope: !10803, file: !126, line: 472, type: !7)
!10814 = !DILocation(line: 472, column: 60, scope: !10803, inlinedAt: !10807)
!10815 = !DILocalVariable(name: "size", arg: 1, scope: !10808, file: !126, line: 478, type: !569)
!10816 = !DILocation(line: 478, column: 51, scope: !10808, inlinedAt: !10809)
!10817 = !DILocalVariable(name: "flags", arg: 2, scope: !10808, file: !126, line: 478, type: !229)
!10818 = !DILocation(line: 478, column: 63, scope: !10808, inlinedAt: !10809)
!10819 = !DILocalVariable(name: "order", scope: !10808, file: !126, line: 480, type: !7)
!10820 = !DILocation(line: 480, column: 15, scope: !10808, inlinedAt: !10809)
!10821 = !DILocalVariable(name: "size", arg: 1, scope: !10782, file: !126, line: 538, type: !569)
!10822 = !DILocation(line: 538, column: 45, scope: !10782, inlinedAt: !10783)
!10823 = !DILocalVariable(name: "flags", arg: 2, scope: !10782, file: !126, line: 538, type: !229)
!10824 = !DILocation(line: 538, column: 57, scope: !10782, inlinedAt: !10783)
!10825 = !DILocalVariable(name: "index", scope: !10780, file: !126, line: 542, type: !7)
!10826 = !DILocation(line: 542, column: 16, scope: !10780, inlinedAt: !10783)
!10827 = !DILocalVariable(name: "size", arg: 1, scope: !10771, file: !126, line: 662, type: !569)
!10828 = !DILocation(line: 662, column: 36, scope: !10771)
!10829 = !DILocalVariable(name: "flags", arg: 2, scope: !10771, file: !126, line: 662, type: !229)
!10830 = !DILocation(line: 662, column: 48, scope: !10771)
!10831 = !DILocation(line: 664, column: 17, scope: !10771)
!10832 = !DILocation(line: 664, column: 23, scope: !10771)
!10833 = !DILocation(line: 664, column: 29, scope: !10771)
!10834 = !DILocation(line: 540, column: 27, scope: !10781, inlinedAt: !10783)
!10835 = !DILocation(line: 540, column: 6, scope: !10781, inlinedAt: !10783)
!10836 = !DILocation(line: 540, column: 6, scope: !10782, inlinedAt: !10783)
!10837 = !DILocation(line: 544, column: 7, scope: !10810, inlinedAt: !10783)
!10838 = !DILocation(line: 544, column: 12, scope: !10810, inlinedAt: !10783)
!10839 = !DILocation(line: 544, column: 7, scope: !10780, inlinedAt: !10783)
!10840 = !DILocation(line: 545, column: 25, scope: !10810, inlinedAt: !10783)
!10841 = !DILocation(line: 545, column: 31, scope: !10810, inlinedAt: !10783)
!10842 = !DILocation(line: 480, column: 33, scope: !10808, inlinedAt: !10809)
!10843 = !DILocation(line: 480, column: 23, scope: !10808, inlinedAt: !10809)
!10844 = !DILocation(line: 481, column: 29, scope: !10808, inlinedAt: !10809)
!10845 = !DILocation(line: 481, column: 35, scope: !10808, inlinedAt: !10809)
!10846 = !DILocation(line: 481, column: 42, scope: !10808, inlinedAt: !10809)
!10847 = !DILocation(line: 474, column: 23, scope: !10803, inlinedAt: !10807)
!10848 = !DILocation(line: 474, column: 29, scope: !10803, inlinedAt: !10807)
!10849 = !DILocation(line: 474, column: 36, scope: !10803, inlinedAt: !10807)
!10850 = !DILocation(line: 474, column: 9, scope: !10803, inlinedAt: !10807)
!10851 = !DILocation(line: 545, column: 4, scope: !10810, inlinedAt: !10783)
!10852 = !DILocation(line: 547, column: 25, scope: !10780, inlinedAt: !10783)
!10853 = !DILocation(line: 348, column: 7, scope: !10854, inlinedAt: !10801)
!10854 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 348, column: 6)
!10855 = !DILocation(line: 348, column: 6, scope: !10797, inlinedAt: !10801)
!10856 = !DILocation(line: 349, column: 3, scope: !10854, inlinedAt: !10801)
!10857 = !DILocation(line: 351, column: 6, scope: !10858, inlinedAt: !10801)
!10858 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 351, column: 6)
!10859 = !DILocation(line: 351, column: 11, scope: !10858, inlinedAt: !10801)
!10860 = !DILocation(line: 351, column: 6, scope: !10797, inlinedAt: !10801)
!10861 = !DILocation(line: 352, column: 3, scope: !10858, inlinedAt: !10801)
!10862 = !DILocation(line: 354, column: 32, scope: !10863, inlinedAt: !10801)
!10863 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 354, column: 6)
!10864 = !DILocation(line: 354, column: 37, scope: !10863, inlinedAt: !10801)
!10865 = !DILocation(line: 354, column: 42, scope: !10863, inlinedAt: !10801)
!10866 = !DILocation(line: 354, column: 45, scope: !10863, inlinedAt: !10801)
!10867 = !DILocation(line: 354, column: 50, scope: !10863, inlinedAt: !10801)
!10868 = !DILocation(line: 354, column: 6, scope: !10797, inlinedAt: !10801)
!10869 = !DILocation(line: 355, column: 3, scope: !10863, inlinedAt: !10801)
!10870 = !DILocation(line: 356, column: 32, scope: !10871, inlinedAt: !10801)
!10871 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 356, column: 6)
!10872 = !DILocation(line: 356, column: 37, scope: !10871, inlinedAt: !10801)
!10873 = !DILocation(line: 356, column: 43, scope: !10871, inlinedAt: !10801)
!10874 = !DILocation(line: 356, column: 46, scope: !10871, inlinedAt: !10801)
!10875 = !DILocation(line: 356, column: 51, scope: !10871, inlinedAt: !10801)
!10876 = !DILocation(line: 356, column: 6, scope: !10797, inlinedAt: !10801)
!10877 = !DILocation(line: 357, column: 3, scope: !10871, inlinedAt: !10801)
!10878 = !DILocation(line: 358, column: 6, scope: !10879, inlinedAt: !10801)
!10879 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 358, column: 6)
!10880 = !DILocation(line: 358, column: 11, scope: !10879, inlinedAt: !10801)
!10881 = !DILocation(line: 358, column: 6, scope: !10797, inlinedAt: !10801)
!10882 = !DILocation(line: 358, column: 26, scope: !10879, inlinedAt: !10801)
!10883 = !DILocation(line: 359, column: 6, scope: !10884, inlinedAt: !10801)
!10884 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 359, column: 6)
!10885 = !DILocation(line: 359, column: 11, scope: !10884, inlinedAt: !10801)
!10886 = !DILocation(line: 359, column: 6, scope: !10797, inlinedAt: !10801)
!10887 = !DILocation(line: 359, column: 26, scope: !10884, inlinedAt: !10801)
!10888 = !DILocation(line: 360, column: 6, scope: !10889, inlinedAt: !10801)
!10889 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 360, column: 6)
!10890 = !DILocation(line: 360, column: 11, scope: !10889, inlinedAt: !10801)
!10891 = !DILocation(line: 360, column: 6, scope: !10797, inlinedAt: !10801)
!10892 = !DILocation(line: 360, column: 26, scope: !10889, inlinedAt: !10801)
!10893 = !DILocation(line: 361, column: 6, scope: !10894, inlinedAt: !10801)
!10894 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 361, column: 6)
!10895 = !DILocation(line: 361, column: 11, scope: !10894, inlinedAt: !10801)
!10896 = !DILocation(line: 361, column: 6, scope: !10797, inlinedAt: !10801)
!10897 = !DILocation(line: 361, column: 26, scope: !10894, inlinedAt: !10801)
!10898 = !DILocation(line: 362, column: 6, scope: !10899, inlinedAt: !10801)
!10899 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 362, column: 6)
!10900 = !DILocation(line: 362, column: 11, scope: !10899, inlinedAt: !10801)
!10901 = !DILocation(line: 362, column: 6, scope: !10797, inlinedAt: !10801)
!10902 = !DILocation(line: 362, column: 26, scope: !10899, inlinedAt: !10801)
!10903 = !DILocation(line: 363, column: 6, scope: !10904, inlinedAt: !10801)
!10904 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 363, column: 6)
!10905 = !DILocation(line: 363, column: 11, scope: !10904, inlinedAt: !10801)
!10906 = !DILocation(line: 363, column: 6, scope: !10797, inlinedAt: !10801)
!10907 = !DILocation(line: 363, column: 26, scope: !10904, inlinedAt: !10801)
!10908 = !DILocation(line: 364, column: 6, scope: !10909, inlinedAt: !10801)
!10909 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 364, column: 6)
!10910 = !DILocation(line: 364, column: 11, scope: !10909, inlinedAt: !10801)
!10911 = !DILocation(line: 364, column: 6, scope: !10797, inlinedAt: !10801)
!10912 = !DILocation(line: 364, column: 26, scope: !10909, inlinedAt: !10801)
!10913 = !DILocation(line: 365, column: 6, scope: !10914, inlinedAt: !10801)
!10914 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 365, column: 6)
!10915 = !DILocation(line: 365, column: 11, scope: !10914, inlinedAt: !10801)
!10916 = !DILocation(line: 365, column: 6, scope: !10797, inlinedAt: !10801)
!10917 = !DILocation(line: 365, column: 26, scope: !10914, inlinedAt: !10801)
!10918 = !DILocation(line: 366, column: 6, scope: !10919, inlinedAt: !10801)
!10919 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 366, column: 6)
!10920 = !DILocation(line: 366, column: 11, scope: !10919, inlinedAt: !10801)
!10921 = !DILocation(line: 366, column: 6, scope: !10797, inlinedAt: !10801)
!10922 = !DILocation(line: 366, column: 26, scope: !10919, inlinedAt: !10801)
!10923 = !DILocation(line: 367, column: 6, scope: !10924, inlinedAt: !10801)
!10924 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 367, column: 6)
!10925 = !DILocation(line: 367, column: 11, scope: !10924, inlinedAt: !10801)
!10926 = !DILocation(line: 367, column: 6, scope: !10797, inlinedAt: !10801)
!10927 = !DILocation(line: 367, column: 26, scope: !10924, inlinedAt: !10801)
!10928 = !DILocation(line: 368, column: 6, scope: !10929, inlinedAt: !10801)
!10929 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 368, column: 6)
!10930 = !DILocation(line: 368, column: 11, scope: !10929, inlinedAt: !10801)
!10931 = !DILocation(line: 368, column: 6, scope: !10797, inlinedAt: !10801)
!10932 = !DILocation(line: 368, column: 26, scope: !10929, inlinedAt: !10801)
!10933 = !DILocation(line: 369, column: 6, scope: !10934, inlinedAt: !10801)
!10934 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 369, column: 6)
!10935 = !DILocation(line: 369, column: 11, scope: !10934, inlinedAt: !10801)
!10936 = !DILocation(line: 369, column: 6, scope: !10797, inlinedAt: !10801)
!10937 = !DILocation(line: 369, column: 26, scope: !10934, inlinedAt: !10801)
!10938 = !DILocation(line: 370, column: 6, scope: !10939, inlinedAt: !10801)
!10939 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 370, column: 6)
!10940 = !DILocation(line: 370, column: 11, scope: !10939, inlinedAt: !10801)
!10941 = !DILocation(line: 370, column: 6, scope: !10797, inlinedAt: !10801)
!10942 = !DILocation(line: 370, column: 26, scope: !10939, inlinedAt: !10801)
!10943 = !DILocation(line: 371, column: 6, scope: !10944, inlinedAt: !10801)
!10944 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 371, column: 6)
!10945 = !DILocation(line: 371, column: 11, scope: !10944, inlinedAt: !10801)
!10946 = !DILocation(line: 371, column: 6, scope: !10797, inlinedAt: !10801)
!10947 = !DILocation(line: 371, column: 26, scope: !10944, inlinedAt: !10801)
!10948 = !DILocation(line: 372, column: 6, scope: !10949, inlinedAt: !10801)
!10949 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 372, column: 6)
!10950 = !DILocation(line: 372, column: 11, scope: !10949, inlinedAt: !10801)
!10951 = !DILocation(line: 372, column: 6, scope: !10797, inlinedAt: !10801)
!10952 = !DILocation(line: 372, column: 26, scope: !10949, inlinedAt: !10801)
!10953 = !DILocation(line: 373, column: 6, scope: !10954, inlinedAt: !10801)
!10954 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 373, column: 6)
!10955 = !DILocation(line: 373, column: 11, scope: !10954, inlinedAt: !10801)
!10956 = !DILocation(line: 373, column: 6, scope: !10797, inlinedAt: !10801)
!10957 = !DILocation(line: 373, column: 26, scope: !10954, inlinedAt: !10801)
!10958 = !DILocation(line: 374, column: 6, scope: !10959, inlinedAt: !10801)
!10959 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 374, column: 6)
!10960 = !DILocation(line: 374, column: 11, scope: !10959, inlinedAt: !10801)
!10961 = !DILocation(line: 374, column: 6, scope: !10797, inlinedAt: !10801)
!10962 = !DILocation(line: 374, column: 26, scope: !10959, inlinedAt: !10801)
!10963 = !DILocation(line: 375, column: 6, scope: !10964, inlinedAt: !10801)
!10964 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 375, column: 6)
!10965 = !DILocation(line: 375, column: 11, scope: !10964, inlinedAt: !10801)
!10966 = !DILocation(line: 375, column: 6, scope: !10797, inlinedAt: !10801)
!10967 = !DILocation(line: 375, column: 27, scope: !10964, inlinedAt: !10801)
!10968 = !DILocation(line: 376, column: 6, scope: !10969, inlinedAt: !10801)
!10969 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 376, column: 6)
!10970 = !DILocation(line: 376, column: 11, scope: !10969, inlinedAt: !10801)
!10971 = !DILocation(line: 376, column: 6, scope: !10797, inlinedAt: !10801)
!10972 = !DILocation(line: 376, column: 32, scope: !10969, inlinedAt: !10801)
!10973 = !DILocation(line: 377, column: 6, scope: !10974, inlinedAt: !10801)
!10974 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 377, column: 6)
!10975 = !DILocation(line: 377, column: 11, scope: !10974, inlinedAt: !10801)
!10976 = !DILocation(line: 377, column: 6, scope: !10797, inlinedAt: !10801)
!10977 = !DILocation(line: 377, column: 32, scope: !10974, inlinedAt: !10801)
!10978 = !DILocation(line: 378, column: 6, scope: !10979, inlinedAt: !10801)
!10979 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 378, column: 6)
!10980 = !DILocation(line: 378, column: 11, scope: !10979, inlinedAt: !10801)
!10981 = !DILocation(line: 378, column: 6, scope: !10797, inlinedAt: !10801)
!10982 = !DILocation(line: 378, column: 32, scope: !10979, inlinedAt: !10801)
!10983 = !DILocation(line: 379, column: 6, scope: !10984, inlinedAt: !10801)
!10984 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 379, column: 6)
!10985 = !DILocation(line: 379, column: 11, scope: !10984, inlinedAt: !10801)
!10986 = !DILocation(line: 379, column: 6, scope: !10797, inlinedAt: !10801)
!10987 = !DILocation(line: 379, column: 33, scope: !10984, inlinedAt: !10801)
!10988 = !DILocation(line: 380, column: 6, scope: !10989, inlinedAt: !10801)
!10989 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 380, column: 6)
!10990 = !DILocation(line: 380, column: 11, scope: !10989, inlinedAt: !10801)
!10991 = !DILocation(line: 380, column: 6, scope: !10797, inlinedAt: !10801)
!10992 = !DILocation(line: 380, column: 33, scope: !10989, inlinedAt: !10801)
!10993 = !DILocation(line: 381, column: 6, scope: !10994, inlinedAt: !10801)
!10994 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 381, column: 6)
!10995 = !DILocation(line: 381, column: 11, scope: !10994, inlinedAt: !10801)
!10996 = !DILocation(line: 381, column: 6, scope: !10797, inlinedAt: !10801)
!10997 = !DILocation(line: 381, column: 33, scope: !10994, inlinedAt: !10801)
!10998 = !DILocation(line: 382, column: 2, scope: !10999, inlinedAt: !10801)
!10999 = distinct !DILexicalBlock(scope: !11000, file: !126, line: 382, column: 2)
!11000 = distinct !DILexicalBlock(scope: !10797, file: !126, line: 382, column: 2)
!11001 = !{i32 -2143198282, i32 -2143198253, i32 -2143198207, i32 -2143198149, i32 -2143198095, i32 -2143198041, i32 -2143197986, i32 -2143197955}
!11002 = !DILocation(line: 382, column: 2, scope: !11003, inlinedAt: !10801)
!11003 = distinct !DILexicalBlock(scope: !11004, file: !126, line: 382, column: 2)
!11004 = distinct !DILexicalBlock(scope: !11000, file: !126, line: 382, column: 2)
!11005 = !{i32 -2143197512, i32 -2143197505, i32 -2143197451, i32 -2143197420, i32 -2143197390}
!11006 = !DILocation(line: 382, column: 2, scope: !11004, inlinedAt: !10801)
!11007 = !DILocation(line: 386, column: 1, scope: !10797, inlinedAt: !10801)
!11008 = !DILocation(line: 547, column: 9, scope: !10780, inlinedAt: !10783)
!11009 = !DILocation(line: 549, column: 8, scope: !11010, inlinedAt: !10783)
!11010 = distinct !DILexicalBlock(scope: !10780, file: !126, line: 549, column: 7)
!11011 = !DILocation(line: 549, column: 7, scope: !10780, inlinedAt: !10783)
!11012 = !DILocation(line: 550, column: 4, scope: !11010, inlinedAt: !10783)
!11013 = !DILocation(line: 553, column: 33, scope: !10780, inlinedAt: !10783)
!11014 = !DILocation(line: 325, column: 6, scope: !11015, inlinedAt: !10795)
!11015 = distinct !DILexicalBlock(scope: !10791, file: !126, line: 325, column: 6)
!11016 = !DILocation(line: 325, column: 6, scope: !10791, inlinedAt: !10795)
!11017 = !DILocation(line: 326, column: 3, scope: !11015, inlinedAt: !10795)
!11018 = !DILocation(line: 332, column: 9, scope: !10791, inlinedAt: !10795)
!11019 = !DILocation(line: 332, column: 15, scope: !10791, inlinedAt: !10795)
!11020 = !DILocation(line: 332, column: 2, scope: !10791, inlinedAt: !10795)
!11021 = !DILocation(line: 336, column: 1, scope: !10791, inlinedAt: !10795)
!11022 = !DILocation(line: 553, column: 5, scope: !10780, inlinedAt: !10783)
!11023 = !DILocation(line: 553, column: 41, scope: !10780, inlinedAt: !10783)
!11024 = !DILocation(line: 554, column: 5, scope: !10780, inlinedAt: !10783)
!11025 = !DILocation(line: 554, column: 12, scope: !10780, inlinedAt: !10783)
!11026 = !DILocation(line: 448, column: 31, scope: !10775, inlinedAt: !10779)
!11027 = !DILocation(line: 448, column: 34, scope: !10775, inlinedAt: !10779)
!11028 = !DILocation(line: 448, column: 14, scope: !10775, inlinedAt: !10779)
!11029 = !DILocation(line: 450, column: 22, scope: !10775, inlinedAt: !10779)
!11030 = !DILocation(line: 450, column: 25, scope: !10775, inlinedAt: !10779)
!11031 = !DILocation(line: 450, column: 30, scope: !10775, inlinedAt: !10779)
!11032 = !DILocation(line: 450, column: 36, scope: !10775, inlinedAt: !10779)
!11033 = !DILocation(line: 450, column: 8, scope: !10775, inlinedAt: !10779)
!11034 = !DILocation(line: 450, column: 6, scope: !10775, inlinedAt: !10779)
!11035 = !DILocation(line: 451, column: 9, scope: !10775, inlinedAt: !10779)
!11036 = !DILocation(line: 552, column: 3, scope: !10780, inlinedAt: !10783)
!11037 = !DILocation(line: 557, column: 19, scope: !10782, inlinedAt: !10783)
!11038 = !DILocation(line: 557, column: 25, scope: !10782, inlinedAt: !10783)
!11039 = !DILocation(line: 557, column: 9, scope: !10782, inlinedAt: !10783)
!11040 = !DILocation(line: 557, column: 2, scope: !10782, inlinedAt: !10783)
!11041 = !DILocation(line: 558, column: 1, scope: !10782, inlinedAt: !10783)
!11042 = !DILocation(line: 664, column: 2, scope: !10771)
!11043 = distinct !DISubprogram(name: "get_order", scope: !11044, file: !11044, line: 29, type: !11045, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11044 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!11045 = !DISubroutineType(types: !11046)
!11046 = !{!197, !163}
!11047 = !DILocalVariable(name: "x", arg: 1, scope: !11048, file: !11049, line: 366, type: !154)
!11048 = distinct !DISubprogram(name: "fls64", scope: !11049, file: !11049, line: 366, type: !11050, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11049 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!11050 = !DISubroutineType(types: !11051)
!11051 = !{!197, !154}
!11052 = !DILocation(line: 366, column: 40, scope: !11048, inlinedAt: !11053)
!11053 = distinct !DILocation(line: 46, column: 9, scope: !11043)
!11054 = !DILocalVariable(name: "bitpos", scope: !11048, file: !11049, line: 368, type: !197)
!11055 = !DILocation(line: 368, column: 6, scope: !11048, inlinedAt: !11053)
!11056 = !DILocalVariable(name: "size", arg: 1, scope: !11043, file: !11044, line: 29, type: !163)
!11057 = !DILocation(line: 29, column: 63, scope: !11043)
!11058 = !DILocation(line: 31, column: 27, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11043, file: !11044, line: 31, column: 6)
!11060 = !DILocation(line: 31, column: 6, scope: !11059)
!11061 = !DILocation(line: 31, column: 6, scope: !11043)
!11062 = !DILocation(line: 32, column: 8, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11064, file: !11044, line: 32, column: 7)
!11064 = distinct !DILexicalBlock(scope: !11059, file: !11044, line: 31, column: 34)
!11065 = !DILocation(line: 32, column: 7, scope: !11064)
!11066 = !DILocation(line: 33, column: 4, scope: !11063)
!11067 = !DILocation(line: 35, column: 7, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11064, file: !11044, line: 35, column: 7)
!11069 = !DILocation(line: 35, column: 12, scope: !11068)
!11070 = !DILocation(line: 35, column: 7, scope: !11064)
!11071 = !DILocation(line: 36, column: 4, scope: !11068)
!11072 = !DILocation(line: 38, column: 10, scope: !11064)
!11073 = !DILocation(line: 38, column: 28, scope: !11064)
!11074 = !DILocation(line: 38, column: 41, scope: !11064)
!11075 = !DILocation(line: 38, column: 3, scope: !11064)
!11076 = !DILocation(line: 41, column: 6, scope: !11043)
!11077 = !DILocation(line: 42, column: 7, scope: !11043)
!11078 = !DILocation(line: 46, column: 15, scope: !11043)
!11079 = !DILocation(line: 374, column: 2, scope: !11048, inlinedAt: !11053)
!11080 = !DILocation(line: 376, column: 14, scope: !11048, inlinedAt: !11053)
!11081 = !{i32 378944}
!11082 = !DILocation(line: 377, column: 9, scope: !11048, inlinedAt: !11053)
!11083 = !DILocation(line: 377, column: 16, scope: !11048, inlinedAt: !11053)
!11084 = !DILocation(line: 46, column: 2, scope: !11043)
!11085 = !DILocation(line: 48, column: 1, scope: !11043)
!11086 = distinct !DISubprogram(name: "__ilog2_u64", scope: !11087, file: !11087, line: 30, type: !11088, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11087 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!11088 = !DISubroutineType(types: !11089)
!11089 = !{!197, !152}
!11090 = !DILocation(line: 366, column: 40, scope: !11048, inlinedAt: !11091)
!11091 = distinct !DILocation(line: 32, column: 9, scope: !11086)
!11092 = !DILocation(line: 368, column: 6, scope: !11048, inlinedAt: !11091)
!11093 = !DILocalVariable(name: "n", arg: 1, scope: !11086, file: !11087, line: 30, type: !152)
!11094 = !DILocation(line: 30, column: 21, scope: !11086)
!11095 = !DILocation(line: 32, column: 15, scope: !11086)
!11096 = !DILocation(line: 374, column: 2, scope: !11048, inlinedAt: !11091)
!11097 = !DILocation(line: 376, column: 14, scope: !11048, inlinedAt: !11091)
!11098 = !DILocation(line: 377, column: 9, scope: !11048, inlinedAt: !11091)
!11099 = !DILocation(line: 377, column: 16, scope: !11048, inlinedAt: !11091)
!11100 = !DILocation(line: 32, column: 18, scope: !11086)
!11101 = !DILocation(line: 32, column: 2, scope: !11086)
!11102 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !11103, file: !11103, line: 137, type: !11104, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11103 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!11104 = !DISubroutineType(types: !11105)
!11105 = !{!138, !1158, !2338, !569, !229}
!11106 = !DILocalVariable(name: "s", arg: 1, scope: !11102, file: !11103, line: 137, type: !1158)
!11107 = !DILocation(line: 137, column: 54, scope: !11102)
!11108 = !DILocalVariable(name: "object", arg: 2, scope: !11102, file: !11103, line: 137, type: !2338)
!11109 = !DILocation(line: 137, column: 69, scope: !11102)
!11110 = !DILocalVariable(name: "size", arg: 3, scope: !11102, file: !11103, line: 138, type: !569)
!11111 = !DILocation(line: 138, column: 12, scope: !11102)
!11112 = !DILocalVariable(name: "flags", arg: 4, scope: !11102, file: !11103, line: 138, type: !229)
!11113 = !DILocation(line: 138, column: 24, scope: !11102)
!11114 = !DILocation(line: 140, column: 17, scope: !11102)
!11115 = !DILocation(line: 140, column: 2, scope: !11102)
!11116 = distinct !DISubprogram(name: "tasklet_schedule", scope: !133, file: !133, line: 681, type: !4631, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11117 = !DILocalVariable(name: "t", arg: 1, scope: !11116, file: !133, line: 681, type: !4618)
!11118 = !DILocation(line: 681, column: 60, scope: !11116)
!11119 = !DILocation(line: 683, column: 46, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11116, file: !133, line: 683, column: 6)
!11121 = !DILocation(line: 683, column: 49, scope: !11120)
!11122 = !DILocation(line: 683, column: 7, scope: !11120)
!11123 = !DILocation(line: 683, column: 6, scope: !11116)
!11124 = !DILocation(line: 684, column: 22, scope: !11120)
!11125 = !DILocation(line: 684, column: 3, scope: !11120)
!11126 = !DILocation(line: 685, column: 1, scope: !11116)
!11127 = distinct !DISubprogram(name: "test_and_set_bit", scope: !11128, file: !11128, line: 68, type: !11129, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11128 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!11129 = !DISubroutineType(types: !11130)
!11130 = !{!262, !558, !11131}
!11131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11132, size: 64)
!11132 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !163)
!11133 = !DILocalVariable(name: "nr", arg: 1, scope: !11134, file: !11049, line: 136, type: !558)
!11134 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !11049, file: !11049, line: 136, type: !11129, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11135 = !DILocation(line: 136, column: 28, scope: !11134, inlinedAt: !11136)
!11136 = distinct !DILocation(line: 71, column: 9, scope: !11127)
!11137 = !DILocalVariable(name: "addr", arg: 2, scope: !11134, file: !11049, line: 136, type: !11131)
!11138 = !DILocation(line: 136, column: 56, scope: !11134, inlinedAt: !11136)
!11139 = !DILocalVariable(name: "c", scope: !11140, file: !11049, line: 138, type: !262)
!11140 = distinct !DILexicalBlock(scope: !11134, file: !11049, line: 138, column: 9)
!11141 = !DILocation(line: 138, column: 9, scope: !11140, inlinedAt: !11136)
!11142 = !DILocalVariable(name: "v", arg: 1, scope: !11143, file: !11144, line: 99, type: !4709)
!11143 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !11144, file: !11144, line: 99, type: !11145, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11144 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!11145 = !DISubroutineType(types: !11146)
!11146 = !{null, !4709, !569}
!11147 = !DILocation(line: 99, column: 79, scope: !11143, inlinedAt: !11148)
!11148 = distinct !DILocation(line: 70, column: 2, scope: !11127)
!11149 = !DILocalVariable(name: "size", arg: 2, scope: !11143, file: !11144, line: 99, type: !569)
!11150 = !DILocation(line: 99, column: 89, scope: !11143, inlinedAt: !11148)
!11151 = !DILocalVariable(name: "nr", arg: 1, scope: !11127, file: !11128, line: 68, type: !558)
!11152 = !DILocation(line: 68, column: 42, scope: !11127)
!11153 = !DILocalVariable(name: "addr", arg: 2, scope: !11127, file: !11128, line: 68, type: !11131)
!11154 = !DILocation(line: 68, column: 70, scope: !11127)
!11155 = !DILocation(line: 70, column: 31, scope: !11127)
!11156 = !DILocation(line: 70, column: 38, scope: !11127)
!11157 = !DILocation(line: 70, column: 36, scope: !11127)
!11158 = !DILocation(line: 101, column: 20, scope: !11143, inlinedAt: !11148)
!11159 = !DILocation(line: 101, column: 23, scope: !11143, inlinedAt: !11148)
!11160 = !DILocation(line: 101, column: 2, scope: !11143, inlinedAt: !11148)
!11161 = !DILocation(line: 102, column: 2, scope: !11143, inlinedAt: !11148)
!11162 = !DILocation(line: 71, column: 31, scope: !11127)
!11163 = !DILocation(line: 71, column: 35, scope: !11127)
!11164 = !{i32 -2147068791, i32 -2147068695}
!11165 = !DILocation(line: 71, column: 2, scope: !11127)
!11166 = distinct !DISubprogram(name: "kasan_check_write", scope: !11167, file: !11167, line: 38, type: !11168, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11167 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11168 = !DISubroutineType(types: !11169)
!11169 = !{!262, !4709, !7}
!11170 = !DILocalVariable(name: "p", arg: 1, scope: !11166, file: !11167, line: 38, type: !4709)
!11171 = !DILocation(line: 38, column: 59, scope: !11166)
!11172 = !DILocalVariable(name: "size", arg: 2, scope: !11166, file: !11167, line: 38, type: !7)
!11173 = !DILocation(line: 38, column: 75, scope: !11166)
!11174 = !DILocation(line: 40, column: 2, scope: !11166)
!11175 = distinct !DISubprogram(name: "kcsan_check_access", scope: !11176, file: !11176, line: 178, type: !11177, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11176 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11177 = !DISubroutineType(types: !11178)
!11178 = !{null, !4709, !569, !197}
!11179 = !DILocalVariable(name: "ptr", arg: 1, scope: !11175, file: !11176, line: 178, type: !4709)
!11180 = !DILocation(line: 178, column: 60, scope: !11175)
!11181 = !DILocalVariable(name: "size", arg: 2, scope: !11175, file: !11176, line: 178, type: !569)
!11182 = !DILocation(line: 178, column: 72, scope: !11175)
!11183 = !DILocalVariable(name: "type", arg: 3, scope: !11175, file: !11176, line: 179, type: !197)
!11184 = !DILocation(line: 179, column: 15, scope: !11175)
!11185 = !DILocation(line: 179, column: 23, scope: !11175)
!11186 = distinct !DISubprogram(name: "udc_tasklet_disconnect", scope: !3, file: !3, line: 1660, type: !4627, scopeLine: 1661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11187 = !DILocation(line: 402, column: 57, scope: !7194, inlinedAt: !11188)
!11188 = distinct !DILocation(line: 1699, column: 2, scope: !11186)
!11189 = !DILocation(line: 352, column: 51, scope: !4762, inlinedAt: !11190)
!11190 = distinct !DILocation(line: 1671, column: 3, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11192, file: !3, line: 1668, column: 19)
!11192 = distinct !DILexicalBlock(scope: !11186, file: !3, line: 1668, column: 6)
!11193 = !DILocation(line: 392, column: 53, scope: !4769, inlinedAt: !11194)
!11194 = distinct !DILocation(line: 1669, column: 3, scope: !11191)
!11195 = !DILocation(line: 377, column: 55, scope: !7198, inlinedAt: !11196)
!11196 = distinct !DILocation(line: 1666, column: 2, scope: !11186)
!11197 = !DILocalVariable(name: "par", arg: 1, scope: !11186, file: !3, line: 1660, type: !163)
!11198 = !DILocation(line: 1660, column: 50, scope: !11186)
!11199 = !DILocalVariable(name: "dev", scope: !11186, file: !3, line: 1662, type: !356)
!11200 = !DILocation(line: 1662, column: 14, scope: !11186)
!11201 = !DILocation(line: 1662, column: 20, scope: !11186)
!11202 = !DILocalVariable(name: "tmp", scope: !11186, file: !3, line: 1663, type: !296)
!11203 = !DILocation(line: 1663, column: 6, scope: !11186)
!11204 = !DILocation(line: 1666, column: 17, scope: !11186)
!11205 = !DILocation(line: 1666, column: 22, scope: !11186)
!11206 = !DILocation(line: 379, column: 2, scope: !7206, inlinedAt: !11196)
!11207 = !DILocation(line: 379, column: 2, scope: !7209, inlinedAt: !11196)
!11208 = !DILocation(line: 379, column: 2, scope: !7212, inlinedAt: !11196)
!11209 = !DILocation(line: 1668, column: 6, scope: !11192)
!11210 = !DILocation(line: 1668, column: 11, scope: !11192)
!11211 = !DILocation(line: 1668, column: 6, scope: !11186)
!11212 = !DILocation(line: 1669, column: 16, scope: !11191)
!11213 = !DILocation(line: 1669, column: 21, scope: !11191)
!11214 = !DILocation(line: 394, column: 2, scope: !4825, inlinedAt: !11194)
!11215 = !DILocation(line: 394, column: 2, scope: !4828, inlinedAt: !11194)
!11216 = !DILocation(line: 1670, column: 3, scope: !11191)
!11217 = !DILocation(line: 1670, column: 8, scope: !11191)
!11218 = !DILocation(line: 1670, column: 16, scope: !11191)
!11219 = !DILocation(line: 1670, column: 28, scope: !11191)
!11220 = !DILocation(line: 1670, column: 33, scope: !11191)
!11221 = !DILocation(line: 1671, column: 14, scope: !11191)
!11222 = !DILocation(line: 1671, column: 19, scope: !11191)
!11223 = !DILocation(line: 354, column: 2, scope: !4837, inlinedAt: !11190)
!11224 = !DILocation(line: 354, column: 2, scope: !4840, inlinedAt: !11190)
!11225 = !DILocation(line: 1674, column: 12, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11191, file: !3, line: 1674, column: 3)
!11227 = !DILocation(line: 1674, column: 8, scope: !11226)
!11228 = !DILocation(line: 1674, column: 17, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11226, file: !3, line: 1674, column: 3)
!11230 = !DILocation(line: 1674, column: 21, scope: !11229)
!11231 = !DILocation(line: 1674, column: 3, scope: !11226)
!11232 = !DILocation(line: 1675, column: 21, scope: !11229)
!11233 = !DILocation(line: 1675, column: 26, scope: !11229)
!11234 = !DILocation(line: 1675, column: 29, scope: !11229)
!11235 = !DILocation(line: 1675, column: 4, scope: !11229)
!11236 = !DILocation(line: 1674, column: 38, scope: !11229)
!11237 = !DILocation(line: 1674, column: 3, scope: !11229)
!11238 = distinct !{!11238, !11231, !11239}
!11239 = !DILocation(line: 1675, column: 33, scope: !11226)
!11240 = !DILocation(line: 1677, column: 2, scope: !11191)
!11241 = !DILocation(line: 1680, column: 10, scope: !11186)
!11242 = !DILocation(line: 1680, column: 15, scope: !11186)
!11243 = !DILocation(line: 1681, column: 5, scope: !11186)
!11244 = !DILocation(line: 1681, column: 10, scope: !11186)
!11245 = !DILocation(line: 1680, column: 2, scope: !11186)
!11246 = !DILocation(line: 1684, column: 7, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11186, file: !3, line: 1684, column: 6)
!11248 = !DILocation(line: 1684, column: 6, scope: !11186)
!11249 = !DILocation(line: 1686, column: 18, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11247, file: !3, line: 1684, column: 27)
!11251 = !DILocation(line: 1686, column: 3, scope: !11250)
!11252 = !DILocation(line: 1687, column: 21, scope: !11250)
!11253 = !DILocation(line: 1688, column: 2, scope: !11250)
!11254 = !DILocation(line: 1691, column: 34, scope: !11186)
!11255 = !DILocation(line: 1691, column: 2, scope: !11186)
!11256 = !DILocation(line: 1693, column: 6, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11186, file: !3, line: 1693, column: 6)
!11258 = !DILocation(line: 1693, column: 6, scope: !11186)
!11259 = !DILocation(line: 1694, column: 16, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11257, file: !3, line: 1693, column: 21)
!11261 = !DILocation(line: 1694, column: 21, scope: !11260)
!11262 = !DILocation(line: 1694, column: 27, scope: !11260)
!11263 = !DILocation(line: 1694, column: 15, scope: !11260)
!11264 = !DILocation(line: 1694, column: 9, scope: !11260)
!11265 = !DILocation(line: 1694, column: 7, scope: !11260)
!11266 = !DILocation(line: 1695, column: 9, scope: !11260)
!11267 = !DILocation(line: 1695, column: 7, scope: !11260)
!11268 = !DILocation(line: 1696, column: 10, scope: !11260)
!11269 = !DILocation(line: 1696, column: 16, scope: !11260)
!11270 = !DILocation(line: 1696, column: 21, scope: !11260)
!11271 = !DILocation(line: 1696, column: 27, scope: !11260)
!11272 = !DILocation(line: 1696, column: 15, scope: !11260)
!11273 = !DILocation(line: 1696, column: 3, scope: !11260)
!11274 = !DILocation(line: 1697, column: 2, scope: !11260)
!11275 = !DILocation(line: 1699, column: 19, scope: !11186)
!11276 = !DILocation(line: 1699, column: 24, scope: !11186)
!11277 = !DILocation(line: 404, column: 2, scope: !7267, inlinedAt: !11188)
!11278 = !DILocation(line: 404, column: 2, scope: !7270, inlinedAt: !11188)
!11279 = !DILocation(line: 404, column: 2, scope: !7273, inlinedAt: !11188)
!11280 = !DILocation(line: 1700, column: 1, scope: !11186)
!11281 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !7919, file: !7919, line: 661, type: !2100, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11282 = !DILocalVariable(name: "__edi", scope: !11283, file: !7919, line: 663, type: !163)
!11283 = distinct !DILexicalBlock(scope: !11281, file: !7919, line: 663, column: 2)
!11284 = !DILocation(line: 663, column: 2, scope: !11283)
!11285 = !DILocalVariable(name: "__esi", scope: !11283, file: !7919, line: 663, type: !163)
!11286 = !DILocalVariable(name: "__edx", scope: !11283, file: !7919, line: 663, type: !163)
!11287 = !DILocalVariable(name: "__ecx", scope: !11283, file: !7919, line: 663, type: !163)
!11288 = !DILocalVariable(name: "__eax", scope: !11283, file: !7919, line: 663, type: !163)
!11289 = !{i32 -2145699337, i32 -2145698607, i32 -2145698373, i32 -2145698322, i32 -2145698294, i32 -2145698269, i32 -2145698585, i32 -2145698572, i32 -2145698134, i32 -2145698015, i32 -2145698480, i32 -2145698453, i32 -2145698425, i32 -2145698395}
!11290 = !DILocation(line: 664, column: 1, scope: !11281)
!11291 = distinct !DISubprogram(name: "udc_get_frame", scope: !3, file: !3, line: 1388, type: !393, scopeLine: 1389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11292 = !DILocalVariable(name: "gadget", arg: 1, scope: !11291, file: !3, line: 1388, type: !395)
!11293 = !DILocation(line: 1388, column: 45, scope: !11291)
!11294 = !DILocation(line: 1390, column: 2, scope: !11291)
!11295 = distinct !DISubprogram(name: "udc_wakeup", scope: !3, file: !3, line: 1414, type: !393, scopeLine: 1415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11296 = !DILocalVariable(name: "gadget", arg: 1, scope: !11295, file: !3, line: 1414, type: !395)
!11297 = !DILocation(line: 1414, column: 42, scope: !11295)
!11298 = !DILocalVariable(name: "dev", scope: !11295, file: !3, line: 1416, type: !356)
!11299 = !DILocation(line: 1416, column: 15, scope: !11295)
!11300 = !DILocation(line: 1418, column: 7, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11295, file: !3, line: 1418, column: 6)
!11302 = !DILocation(line: 1418, column: 6, scope: !11295)
!11303 = !DILocation(line: 1419, column: 3, scope: !11301)
!11304 = !DILocalVariable(name: "__mptr", scope: !11305, file: !3, line: 1420, type: !138)
!11305 = distinct !DILexicalBlock(scope: !11295, file: !3, line: 1420, column: 8)
!11306 = !DILocation(line: 1420, column: 8, scope: !11305)
!11307 = !DILocation(line: 1420, column: 8, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 1420, column: 8)
!11309 = !DILocation(line: 1420, column: 6, scope: !11295)
!11310 = !DILocation(line: 1421, column: 20, scope: !11295)
!11311 = !DILocation(line: 1421, column: 2, scope: !11295)
!11312 = !DILocation(line: 1423, column: 2, scope: !11295)
!11313 = !DILocation(line: 1424, column: 1, scope: !11295)
!11314 = distinct !DISubprogram(name: "amd5536_udc_start", scope: !3, file: !3, line: 1954, type: !424, scopeLine: 1956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11315 = !DILocalVariable(name: "g", arg: 1, scope: !11314, file: !3, line: 1954, type: !395)
!11316 = !DILocation(line: 1954, column: 49, scope: !11314)
!11317 = !DILocalVariable(name: "driver", arg: 2, scope: !11314, file: !3, line: 1955, type: !426)
!11318 = !DILocation(line: 1955, column: 29, scope: !11314)
!11319 = !DILocalVariable(name: "dev", scope: !11314, file: !3, line: 1957, type: !356)
!11320 = !DILocation(line: 1957, column: 14, scope: !11314)
!11321 = !DILocalVariable(name: "__mptr", scope: !11322, file: !3, line: 1957, type: !138)
!11322 = distinct !DILexicalBlock(scope: !11314, file: !3, line: 1957, column: 20)
!11323 = !DILocation(line: 1957, column: 20, scope: !11322)
!11324 = !DILocation(line: 1957, column: 20, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11322, file: !3, line: 1957, column: 20)
!11326 = !DILocalVariable(name: "tmp", scope: !11314, file: !3, line: 1958, type: !296)
!11327 = !DILocation(line: 1958, column: 6, scope: !11314)
!11328 = !DILocation(line: 1960, column: 2, scope: !11314)
!11329 = !DILocation(line: 1960, column: 10, scope: !11314)
!11330 = !DILocation(line: 1960, column: 17, scope: !11314)
!11331 = !DILocation(line: 1960, column: 21, scope: !11314)
!11332 = !DILocation(line: 1961, column: 16, scope: !11314)
!11333 = !DILocation(line: 1961, column: 2, scope: !11314)
!11334 = !DILocation(line: 1961, column: 7, scope: !11314)
!11335 = !DILocation(line: 1961, column: 14, scope: !11314)
!11336 = !DILocation(line: 1967, column: 3, scope: !11314)
!11337 = !DILocation(line: 1967, column: 8, scope: !11314)
!11338 = !DILocation(line: 1967, column: 25, scope: !11314)
!11339 = !DILocation(line: 1967, column: 28, scope: !11314)
!11340 = !DILocation(line: 1966, column: 2, scope: !11314)
!11341 = !DILocation(line: 1966, column: 7, scope: !11314)
!11342 = !DILocation(line: 1966, column: 25, scope: !11314)
!11343 = !DILocation(line: 1966, column: 28, scope: !11314)
!11344 = !DILocation(line: 1966, column: 40, scope: !11314)
!11345 = !DILocation(line: 1970, column: 12, scope: !11314)
!11346 = !DILocation(line: 1970, column: 2, scope: !11314)
!11347 = !DILocation(line: 1973, column: 15, scope: !11314)
!11348 = !DILocation(line: 1973, column: 20, scope: !11314)
!11349 = !DILocation(line: 1973, column: 26, scope: !11314)
!11350 = !DILocation(line: 1973, column: 14, scope: !11314)
!11351 = !DILocation(line: 1973, column: 8, scope: !11314)
!11352 = !DILocation(line: 1973, column: 6, scope: !11314)
!11353 = !DILocation(line: 1974, column: 8, scope: !11314)
!11354 = !DILocation(line: 1974, column: 12, scope: !11314)
!11355 = !DILocation(line: 1974, column: 6, scope: !11314)
!11356 = !DILocation(line: 1975, column: 9, scope: !11314)
!11357 = !DILocation(line: 1975, column: 15, scope: !11314)
!11358 = !DILocation(line: 1975, column: 20, scope: !11314)
!11359 = !DILocation(line: 1975, column: 26, scope: !11314)
!11360 = !DILocation(line: 1975, column: 14, scope: !11314)
!11361 = !DILocation(line: 1975, column: 2, scope: !11314)
!11362 = !DILocation(line: 1977, column: 14, scope: !11314)
!11363 = !DILocation(line: 1977, column: 2, scope: !11314)
!11364 = !DILocation(line: 1979, column: 2, scope: !11314)
!11365 = distinct !DISubprogram(name: "amd5536_udc_stop", scope: !3, file: !3, line: 2000, type: !393, scopeLine: 2001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11366 = !DILocation(line: 407, column: 64, scope: !7578, inlinedAt: !11367)
!11367 = distinct !DILocation(line: 2009, column: 2, scope: !11365)
!11368 = !DILocation(line: 407, column: 84, scope: !7578, inlinedAt: !11367)
!11369 = !DILocation(line: 327, column: 67, scope: !7586, inlinedAt: !11370)
!11370 = distinct !DILocation(line: 2006, column: 2, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11372, file: !3, line: 2006, column: 2)
!11372 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 2006, column: 2)
!11373 = distinct !DILexicalBlock(scope: !11374, file: !3, line: 2006, column: 2)
!11374 = distinct !DILexicalBlock(scope: !11375, file: !3, line: 2006, column: 2)
!11375 = distinct !DILexicalBlock(scope: !11365, file: !3, line: 2006, column: 2)
!11376 = !DILocalVariable(name: "g", arg: 1, scope: !11365, file: !3, line: 2000, type: !395)
!11377 = !DILocation(line: 2000, column: 48, scope: !11365)
!11378 = !DILocalVariable(name: "dev", scope: !11365, file: !3, line: 2002, type: !356)
!11379 = !DILocation(line: 2002, column: 14, scope: !11365)
!11380 = !DILocalVariable(name: "__mptr", scope: !11381, file: !3, line: 2002, type: !138)
!11381 = distinct !DILexicalBlock(scope: !11365, file: !3, line: 2002, column: 20)
!11382 = !DILocation(line: 2002, column: 20, scope: !11381)
!11383 = !DILocation(line: 2002, column: 20, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 2002, column: 20)
!11385 = !DILocalVariable(name: "flags", scope: !11365, file: !3, line: 2003, type: !163)
!11386 = !DILocation(line: 2003, column: 16, scope: !11365)
!11387 = !DILocalVariable(name: "tmp", scope: !11365, file: !3, line: 2004, type: !296)
!11388 = !DILocation(line: 2004, column: 6, scope: !11365)
!11389 = !DILocation(line: 2006, column: 2, scope: !11365)
!11390 = !DILocation(line: 2006, column: 2, scope: !11375)
!11391 = !DILocalVariable(name: "__dummy", scope: !11392, file: !3, line: 2006, type: !163)
!11392 = distinct !DILexicalBlock(scope: !11374, file: !3, line: 2006, column: 2)
!11393 = !DILocation(line: 2006, column: 2, scope: !11392)
!11394 = !DILocalVariable(name: "__dummy2", scope: !11392, file: !3, line: 2006, type: !163)
!11395 = !DILocation(line: 2006, column: 2, scope: !11374)
!11396 = !DILocation(line: 2006, column: 2, scope: !11373)
!11397 = !DILocation(line: 2006, column: 2, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 2006, column: 2)
!11399 = !DILocalVariable(name: "__dummy", scope: !11400, file: !3, line: 2006, type: !163)
!11400 = distinct !DILexicalBlock(scope: !11401, file: !3, line: 2006, column: 2)
!11401 = distinct !DILexicalBlock(scope: !11398, file: !3, line: 2006, column: 2)
!11402 = !DILocation(line: 2006, column: 2, scope: !11400)
!11403 = !DILocalVariable(name: "__dummy2", scope: !11400, file: !3, line: 2006, type: !163)
!11404 = !DILocation(line: 2006, column: 2, scope: !11401)
!11405 = !DILocation(line: 2006, column: 2, scope: !11372)
!11406 = !{i32 -2141439700}
!11407 = !DILocation(line: 2006, column: 2, scope: !11371)
!11408 = !DILocation(line: 329, column: 10, scope: !7586, inlinedAt: !11370)
!11409 = !DILocation(line: 329, column: 16, scope: !7586, inlinedAt: !11370)
!11410 = !DILocation(line: 2007, column: 29, scope: !11365)
!11411 = !DILocation(line: 2007, column: 2, scope: !11365)
!11412 = !DILocation(line: 2008, column: 11, scope: !11365)
!11413 = !DILocation(line: 2008, column: 2, scope: !11365)
!11414 = !DILocation(line: 2009, column: 26, scope: !11365)
!11415 = !DILocation(line: 2009, column: 31, scope: !11365)
!11416 = !DILocation(line: 2009, column: 37, scope: !11365)
!11417 = !DILocation(line: 409, column: 2, scope: !7747, inlinedAt: !11367)
!11418 = !DILocation(line: 409, column: 2, scope: !7752, inlinedAt: !11367)
!11419 = !DILocation(line: 409, column: 2, scope: !7753, inlinedAt: !11367)
!11420 = !DILocation(line: 409, column: 2, scope: !7760, inlinedAt: !11367)
!11421 = !DILocation(line: 409, column: 2, scope: !7763, inlinedAt: !11367)
!11422 = !DILocation(line: 2011, column: 2, scope: !11365)
!11423 = !DILocation(line: 2011, column: 7, scope: !11365)
!11424 = !DILocation(line: 2011, column: 14, scope: !11365)
!11425 = !DILocation(line: 2014, column: 15, scope: !11365)
!11426 = !DILocation(line: 2014, column: 20, scope: !11365)
!11427 = !DILocation(line: 2014, column: 26, scope: !11365)
!11428 = !DILocation(line: 2014, column: 14, scope: !11365)
!11429 = !DILocation(line: 2014, column: 8, scope: !11365)
!11430 = !DILocation(line: 2014, column: 6, scope: !11365)
!11431 = !DILocation(line: 2015, column: 6, scope: !11365)
!11432 = !DILocation(line: 2016, column: 9, scope: !11365)
!11433 = !DILocation(line: 2016, column: 15, scope: !11365)
!11434 = !DILocation(line: 2016, column: 20, scope: !11365)
!11435 = !DILocation(line: 2016, column: 26, scope: !11365)
!11436 = !DILocation(line: 2016, column: 14, scope: !11365)
!11437 = !DILocation(line: 2016, column: 2, scope: !11365)
!11438 = !DILocation(line: 2018, column: 2, scope: !11365)
!11439 = distinct !DISubprogram(name: "udc_remote_wakeup", scope: !3, file: !3, line: 1394, type: !4658, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11440 = !DILocation(line: 407, column: 64, scope: !7578, inlinedAt: !11441)
!11441 = distinct !DILocation(line: 1409, column: 2, scope: !11439)
!11442 = !DILocation(line: 407, column: 84, scope: !7578, inlinedAt: !11441)
!11443 = !DILocation(line: 327, column: 67, scope: !7586, inlinedAt: !11444)
!11444 = distinct !DILocation(line: 1401, column: 2, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11446, file: !3, line: 1401, column: 2)
!11446 = distinct !DILexicalBlock(scope: !11447, file: !3, line: 1401, column: 2)
!11447 = distinct !DILexicalBlock(scope: !11448, file: !3, line: 1401, column: 2)
!11448 = distinct !DILexicalBlock(scope: !11449, file: !3, line: 1401, column: 2)
!11449 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 1401, column: 2)
!11450 = !DILocalVariable(name: "dev", arg: 1, scope: !11439, file: !3, line: 1394, type: !356)
!11451 = !DILocation(line: 1394, column: 42, scope: !11439)
!11452 = !DILocalVariable(name: "flags", scope: !11439, file: !3, line: 1396, type: !163)
!11453 = !DILocation(line: 1396, column: 16, scope: !11439)
!11454 = !DILocalVariable(name: "tmp", scope: !11439, file: !3, line: 1397, type: !296)
!11455 = !DILocation(line: 1397, column: 6, scope: !11439)
!11456 = !DILocation(line: 1401, column: 2, scope: !11439)
!11457 = !DILocation(line: 1401, column: 2, scope: !11449)
!11458 = !DILocalVariable(name: "__dummy", scope: !11459, file: !3, line: 1401, type: !163)
!11459 = distinct !DILexicalBlock(scope: !11448, file: !3, line: 1401, column: 2)
!11460 = !DILocation(line: 1401, column: 2, scope: !11459)
!11461 = !DILocalVariable(name: "__dummy2", scope: !11459, file: !3, line: 1401, type: !163)
!11462 = !DILocation(line: 1401, column: 2, scope: !11448)
!11463 = !DILocation(line: 1401, column: 2, scope: !11447)
!11464 = !DILocation(line: 1401, column: 2, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11447, file: !3, line: 1401, column: 2)
!11466 = !DILocalVariable(name: "__dummy", scope: !11467, file: !3, line: 1401, type: !163)
!11467 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 1401, column: 2)
!11468 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 1401, column: 2)
!11469 = !DILocation(line: 1401, column: 2, scope: !11467)
!11470 = !DILocalVariable(name: "__dummy2", scope: !11467, file: !3, line: 1401, type: !163)
!11471 = !DILocation(line: 1401, column: 2, scope: !11468)
!11472 = !DILocation(line: 1401, column: 2, scope: !11446)
!11473 = !{i32 -2141452433}
!11474 = !DILocation(line: 1401, column: 2, scope: !11445)
!11475 = !DILocation(line: 329, column: 10, scope: !7586, inlinedAt: !11444)
!11476 = !DILocation(line: 329, column: 16, scope: !7586, inlinedAt: !11444)
!11477 = !DILocation(line: 1403, column: 15, scope: !11439)
!11478 = !DILocation(line: 1403, column: 20, scope: !11439)
!11479 = !DILocation(line: 1403, column: 26, scope: !11439)
!11480 = !DILocation(line: 1403, column: 14, scope: !11439)
!11481 = !DILocation(line: 1403, column: 8, scope: !11439)
!11482 = !DILocation(line: 1403, column: 6, scope: !11439)
!11483 = !DILocation(line: 1404, column: 6, scope: !11439)
!11484 = !DILocation(line: 1405, column: 9, scope: !11439)
!11485 = !DILocation(line: 1405, column: 15, scope: !11439)
!11486 = !DILocation(line: 1405, column: 20, scope: !11439)
!11487 = !DILocation(line: 1405, column: 26, scope: !11439)
!11488 = !DILocation(line: 1405, column: 14, scope: !11439)
!11489 = !DILocation(line: 1405, column: 2, scope: !11439)
!11490 = !DILocation(line: 1406, column: 6, scope: !11439)
!11491 = !DILocation(line: 1407, column: 9, scope: !11439)
!11492 = !DILocation(line: 1407, column: 15, scope: !11439)
!11493 = !DILocation(line: 1407, column: 20, scope: !11439)
!11494 = !DILocation(line: 1407, column: 26, scope: !11439)
!11495 = !DILocation(line: 1407, column: 14, scope: !11439)
!11496 = !DILocation(line: 1407, column: 2, scope: !11439)
!11497 = !DILocation(line: 1409, column: 26, scope: !11439)
!11498 = !DILocation(line: 1409, column: 31, scope: !11439)
!11499 = !DILocation(line: 1409, column: 37, scope: !11439)
!11500 = !DILocation(line: 409, column: 2, scope: !7747, inlinedAt: !11441)
!11501 = !DILocation(line: 409, column: 2, scope: !7752, inlinedAt: !11441)
!11502 = !DILocation(line: 409, column: 2, scope: !7753, inlinedAt: !11441)
!11503 = !DILocation(line: 409, column: 2, scope: !7760, inlinedAt: !11441)
!11504 = !DILocation(line: 409, column: 2, scope: !7763, inlinedAt: !11441)
!11505 = !DILocation(line: 1410, column: 2, scope: !11439)
!11506 = distinct !DISubprogram(name: "setup_ep0", scope: !3, file: !3, line: 1942, type: !4658, scopeLine: 1943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11507 = !DILocalVariable(name: "dev", arg: 1, scope: !11506, file: !3, line: 1942, type: !356)
!11508 = !DILocation(line: 1942, column: 34, scope: !11506)
!11509 = !DILocation(line: 1944, column: 29, scope: !11506)
!11510 = !DILocation(line: 1944, column: 2, scope: !11506)
!11511 = !DILocation(line: 1946, column: 28, scope: !11506)
!11512 = !DILocation(line: 1946, column: 2, scope: !11506)
!11513 = !DILocation(line: 1948, column: 34, scope: !11506)
!11514 = !DILocation(line: 1948, column: 2, scope: !11506)
!11515 = !DILocation(line: 1950, column: 2, scope: !11506)
!11516 = distinct !DISubprogram(name: "usb_connect", scope: !3, file: !3, line: 1617, type: !4847, scopeLine: 1618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11517 = !DILocalVariable(name: "dev", arg: 1, scope: !11516, file: !3, line: 1617, type: !356)
!11518 = !DILocation(line: 1617, column: 37, scope: !11516)
!11519 = !DILocation(line: 1620, column: 6, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11516, file: !3, line: 1620, column: 6)
!11521 = !DILocation(line: 1620, column: 11, scope: !11520)
!11522 = !DILocation(line: 1620, column: 6, scope: !11516)
!11523 = !DILocation(line: 1621, column: 3, scope: !11520)
!11524 = !DILocation(line: 1623, column: 2, scope: !11516)
!11525 = !DILocation(line: 1625, column: 2, scope: !11516)
!11526 = !DILocation(line: 1625, column: 7, scope: !11516)
!11527 = !DILocation(line: 1625, column: 17, scope: !11516)
!11528 = !DILocation(line: 1628, column: 17, scope: !11516)
!11529 = !DILocation(line: 1628, column: 2, scope: !11516)
!11530 = !DILocation(line: 1631, column: 34, scope: !11516)
!11531 = !DILocation(line: 1631, column: 2, scope: !11516)
!11532 = !DILocation(line: 1632, column: 1, scope: !11516)
!11533 = distinct !DISubprogram(name: "shutdown", scope: !3, file: !3, line: 1984, type: !11534, scopeLine: 1987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11534 = !DISubroutineType(types: !11535)
!11535 = !{null, !356, !426}
!11536 = !DILocalVariable(name: "dev", arg: 1, scope: !11533, file: !3, line: 1984, type: !356)
!11537 = !DILocation(line: 1984, column: 22, scope: !11533)
!11538 = !DILocalVariable(name: "driver", arg: 2, scope: !11533, file: !3, line: 1984, type: !426)
!11539 = !DILocation(line: 1984, column: 53, scope: !11533)
!11540 = !DILocalVariable(name: "tmp", scope: !11533, file: !3, line: 1988, type: !197)
!11541 = !DILocation(line: 1988, column: 6, scope: !11533)
!11542 = !DILocation(line: 1991, column: 17, scope: !11533)
!11543 = !DILocation(line: 1991, column: 2, scope: !11533)
!11544 = !DILocation(line: 1993, column: 11, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11533, file: !3, line: 1993, column: 2)
!11546 = !DILocation(line: 1993, column: 7, scope: !11545)
!11547 = !DILocation(line: 1993, column: 16, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 1993, column: 2)
!11549 = !DILocation(line: 1993, column: 20, scope: !11548)
!11550 = !DILocation(line: 1993, column: 2, scope: !11545)
!11551 = !DILocation(line: 1994, column: 20, scope: !11548)
!11552 = !DILocation(line: 1994, column: 25, scope: !11548)
!11553 = !DILocation(line: 1994, column: 28, scope: !11548)
!11554 = !DILocation(line: 1994, column: 3, scope: !11548)
!11555 = !DILocation(line: 1993, column: 37, scope: !11548)
!11556 = !DILocation(line: 1993, column: 2, scope: !11548)
!11557 = distinct !{!11557, !11550, !11558}
!11558 = !DILocation(line: 1994, column: 32, scope: !11545)
!11559 = !DILocation(line: 1996, column: 22, scope: !11533)
!11560 = !DILocation(line: 1996, column: 2, scope: !11533)
!11561 = !DILocation(line: 1997, column: 1, scope: !11533)
!11562 = distinct !DISubprogram(name: "udc_handle_halt_state", scope: !3, file: !3, line: 1779, type: !4716, scopeLine: 1780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !497)
!11563 = !DILocalVariable(name: "ep", arg: 1, scope: !11562, file: !3, line: 1779, type: !319)
!11564 = !DILocation(line: 1779, column: 50, scope: !11562)
!11565 = !DILocalVariable(name: "tmp", scope: !11562, file: !3, line: 1781, type: !296)
!11566 = !DILocation(line: 1781, column: 6, scope: !11562)
!11567 = !DILocation(line: 1783, column: 6, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11562, file: !3, line: 1783, column: 6)
!11569 = !DILocation(line: 1783, column: 10, scope: !11568)
!11570 = !DILocation(line: 1783, column: 17, scope: !11568)
!11571 = !DILocation(line: 1783, column: 6, scope: !11562)
!11572 = !DILocation(line: 1784, column: 16, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11568, file: !3, line: 1783, column: 23)
!11574 = !DILocation(line: 1784, column: 20, scope: !11573)
!11575 = !DILocation(line: 1784, column: 26, scope: !11573)
!11576 = !DILocation(line: 1784, column: 15, scope: !11573)
!11577 = !DILocation(line: 1784, column: 9, scope: !11573)
!11578 = !DILocation(line: 1784, column: 7, scope: !11573)
!11579 = !DILocation(line: 1786, column: 9, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11573, file: !3, line: 1786, column: 7)
!11581 = !DILocation(line: 1786, column: 13, scope: !11580)
!11582 = !DILocation(line: 1786, column: 7, scope: !11573)
!11583 = !DILocation(line: 1800, column: 8, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11580, file: !3, line: 1786, column: 38)
!11585 = !DILocation(line: 1801, column: 11, scope: !11584)
!11586 = !DILocation(line: 1801, column: 17, scope: !11584)
!11587 = !DILocation(line: 1801, column: 21, scope: !11584)
!11588 = !DILocation(line: 1801, column: 27, scope: !11584)
!11589 = !DILocation(line: 1801, column: 16, scope: !11584)
!11590 = !DILocation(line: 1801, column: 4, scope: !11584)
!11591 = !DILocation(line: 1802, column: 4, scope: !11584)
!11592 = !DILocation(line: 1802, column: 8, scope: !11584)
!11593 = !DILocation(line: 1802, column: 15, scope: !11584)
!11594 = !DILocation(line: 1803, column: 19, scope: !11584)
!11595 = !DILocation(line: 1803, column: 23, scope: !11584)
!11596 = !DILocation(line: 1803, column: 27, scope: !11584)
!11597 = !DILocation(line: 1803, column: 4, scope: !11584)
!11598 = !DILocation(line: 1804, column: 3, scope: !11584)
!11599 = !DILocation(line: 1805, column: 2, scope: !11573)
!11600 = !DILocation(line: 1806, column: 1, scope: !11562)
