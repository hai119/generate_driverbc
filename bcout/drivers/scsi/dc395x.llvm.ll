; ModuleID = '../bcout/drivers/scsi/dc395x.llvm.bc'
source_filename = "drivers/scsi/dc395x.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_dc395x_driver_init6:\09\09\09"
module asm ".long\09dc395x_driver_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.ParameterData = type { i32, i32, i32, i32, i32 }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.67, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.2 }
%union.anon.2 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.66, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.66 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.64, %struct.list_head, %struct.list_head, %union.anon.65 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.62 }
%union.anon.62 = type { %struct.anon.63 }
%struct.anon.63 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.3, %union.anon.54, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.54 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.55, i32 }
%union.anon.55 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.32, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.32 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.69, %union.anon.70, %union.anon.71, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.74, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type { %struct.anon.68, %struct.delayed_work, [1 x %struct.cpumask], i32, i32, i64, i8*, %struct.request_queue*, %struct.blk_flush_queue*, i8*, %struct.sbitmap, %struct.blk_mq_ctx*, i32, i16, i16, %struct.blk_mq_ctx**, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, %struct.blk_mq_tags*, %struct.blk_mq_tags*, i64, i64, [7 x i64], i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, i64, i64, i64, %struct.list_head, [0 x %struct.srcu_struct] }
%struct.anon.68 = type { %struct.spinlock, %struct.list_head, i64 }
%struct.cpumask = type { [1 x i64] }
%struct.sbitmap = type { i32, i32, i32, %struct.sbitmap_word* }
%struct.sbitmap_word = type { i64, i64, i64, %struct.spinlock }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.blk_mq_tags = type opaque
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%union.anon.69 = type { %struct.hlist_node }
%union.anon.70 = type { %struct.rb_node }
%union.anon.71 = type { %struct.anon.73 }
%struct.anon.73 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.74 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.75, void (i8*)*, i8* }
%union.anon.75 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.76, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.76 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.33, %union.anon.34, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%union.anon.33 = type { %struct.list_head }
%union.anon.34 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*)*, void (%struct.request_queue*)*, i32 (%struct.request*, i1)*, i32 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*)*, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)*, void (%struct.blk_mq_tag_set*, %struct.request*, i32)*, void (%struct.request*)*, void (%struct.request*)*, i1 (%struct.request_queue*)*, i32 (%struct.blk_mq_tag_set*)* }
%struct.blk_mq_queue_data = type { %struct.request*, i8 }
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, %struct.blk_mq_ops*, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, %struct.blk_mq_tags**, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { i32*, i32, i32 }
%struct.sbitmap_queue = type { %struct.sbitmap, i32*, i32, %struct.atomic_t, %struct.sbq_wait_state*, %struct.atomic_t, i8, i32 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.47, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.35 }
%struct.anon.35 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.39 }
%struct.anon.39 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.46, i32, [12 x i8] }
%union.anon.46 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.47 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.48, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.51 }
%union.anon.48 = type { %struct.anon.49 }
%struct.anon.49 = type { i64, i64 }
%union.anon.51 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.64 = type { %struct.list_head }
%union.anon.65 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.56, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.57, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.58, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.61, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.56 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.57 = type { %struct.callback_head }
%union.anon.58 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.61 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.59 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.59 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.31 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.31 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.pci_vpd = type opaque
%union.anon.67 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.scsi_host_template = type { %struct.module*, i8*, i8* (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32, i8*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, void (%struct.Scsi_Host*, i16)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_device*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_target*)*, void (%struct.scsi_target*)*, i32 (%struct.Scsi_Host*, i64)*, void (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32)*, i32 (%struct.Scsi_Host*)*, i1 (%struct.request*)*, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)*, void (%struct.scsi_device*)*, i32 (%struct.seq_file*, %struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*, i8*, i32)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, i32)*, i8*, %struct.proc_dir_entry*, i32, i32, i16, i16, i32, i32, i64, i64, i16, i8, i32, i8, i32, %struct.device_attribute**, %struct.device_attribute**, %struct.attribute_group**, i64, i32, %struct.scsi_host_cmd_pool*, i32 }
%struct.Scsi_Host = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.spinlock*, %struct.mutex, %struct.list_head, %struct.task_struct*, %struct.completion*, %struct.wait_queue_head, %struct.scsi_host_template*, %struct.scsi_transport_template*, %struct.blk_mq_tag_set, %struct.atomic_t, i32, i32, i32, i32, i64, i32, i32, i64, i32, i16, i32, i32, i16, i16, i16, i32, i32, i64, i64, i32, i16, [20 x i8], %struct.workqueue_struct*, %struct.workqueue_struct*, i32, i32, i8, i64, i64, i8, i8, i32, i32, %struct.device, %struct.device, i8*, %struct.device*, [0 x i64] }
%struct.scsi_transport_template = type opaque
%struct.scsi_device = type { %struct.Scsi_Host*, %struct.request_queue*, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, %struct.list_head, i16, i16, i16, i16, i64, i64, i64, i32, i32, i64, i32, i32, i8*, i8, i8, i8, %struct.mutex, i8, i8*, i8*, i8*, i8*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, i8, %struct.scsi_target*, i64, i32, [6 x i8], i8, %struct.atomic_t, [1 x i64], [1 x i64], %struct.list_head, %struct.work_struct, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.device, %struct.device, %struct.execute_work, %struct.work_struct, %struct.scsi_device_handler*, i8*, i64, i8*, i8, %struct.mutex, i32, %struct.task_struct*, [0 x i64] }
%struct.scsi_vpd = type { %struct.callback_head, i32, [0 x i8] }
%struct.scsi_target = type { %struct.scsi_device*, %struct.list_head, %struct.list_head, %struct.device, %struct.kref, i32, i32, i8, %struct.atomic_t, %struct.atomic_t, i32, i32, i8, i32, i8*, [0 x i64] }
%struct.execute_work = type { %struct.work_struct }
%struct.scsi_device_handler = type opaque
%struct.scsi_cmnd = type { %struct.scsi_request, %struct.scsi_device*, %struct.list_head, %struct.delayed_work, %struct.callback_head, i32, i64, i32, i32, i8, i8, i8, i16, i32, i8*, %struct.scsi_data_buffer, %struct.scsi_data_buffer*, i32, i32, %struct.request*, i8*, void (%struct.scsi_cmnd*)*, %struct.scsi_pointer, i8*, i32, i32, i64, i8, i32 }
%struct.scsi_request = type { [16 x i8], i8*, i16, i32, i32, i32, i32, i8* }
%struct.scsi_data_buffer = type { %struct.sg_table, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.scsi_pointer = type { i8*, i32, %struct.scatterlist*, i32, i64, i32, i32, i32, i32, i32 }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.scsi_host_cmd_pool = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.AdapterCtlBlk = type { %struct.Scsi_Host*, i64, i64, %struct.list_head, %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk*, %struct.list_head, %struct.ScsiReqBlk*, %struct.timer_list, %struct.timer_list, i64, i16, i8, i32, i8, i8, i8, i8, i8, i8, i8, [16 x i8], [16 x [32 x %struct.DeviceCtlBlk*]], %struct.pci_dev*, i8, [63 x %struct.ScsiReqBlk], %struct.ScsiReqBlk, %struct.NvRamType }
%struct.DeviceCtlBlk = type { %struct.list_head, %struct.AdapterCtlBlk*, %struct.list_head, %struct.list_head, %struct.ScsiReqBlk*, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.ScsiReqBlk = type { %struct.list_head, %struct.DeviceCtlBlk*, %struct.scsi_cmnd*, %struct.SGentry*, i64, i8, i8, i64, i64, i64, i16, [6 x i8], [6 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.SGentry = type { i32, i32 }
%struct.NvRamType = type { [2 x i8], [2 x i8], i8, [2 x i8], [2 x i8], i8, [16 x %struct.NVRamTarget], i8, i8, i8, i8, i8, i8, i8, i8, [22 x i16], i16 }
%struct.NVRamTarget = type { i8, i8, i8, i8 }
%struct.ScsiInqData = type { i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], [16 x i8], [4 x i8] }

@__param_str_safe = internal constant [12 x i8] c"dc395x.safe\00", align 1, !dbg !0
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 8
@use_safe_settings = internal global i8 0, align 1, !dbg !5795
@__param_safe = internal constant %struct.kernel_param { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__param_str_safe, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 0, i8 -1, i8 0, %union.anon { i8* @use_safe_settings } }, section "__param", align 8, !dbg !5639
@__UNIQUE_ID_safetype296 = internal constant [26 x i8] c"dc395x.parmtype=safe:bool\00", section ".modinfo", align 1, !dbg !5691
@__UNIQUE_ID_safe297 = internal constant [65 x i8] c"dc395x.parm=safe:Use safe and slow settings only. Default: false\00", section ".modinfo", align 1, !dbg !5696
@__param_str_adapter_id = internal constant [18 x i8] c"dc395x.adapter_id\00", align 16, !dbg !5797
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@cfg_data = internal global [6 x %struct.ParameterData] [%struct.ParameterData { i32 -1, i32 0, i32 15, i32 7, i32 7 }, %struct.ParameterData { i32 -1, i32 0, i32 7, i32 1, i32 4 }, %struct.ParameterData { i32 -1, i32 0, i32 63, i32 63, i32 9 }, %struct.ParameterData { i32 -1, i32 0, i32 47, i32 39, i32 15 }, %struct.ParameterData { i32 -1, i32 0, i32 5, i32 3, i32 2 }, %struct.ParameterData { i32 -1, i32 0, i32 180, i32 1, i32 10 }], align 16, !dbg !5802
@__param_adapter_id = internal constant %struct.kernel_param { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__param_str_adapter_id, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast ([6 x %struct.ParameterData]* @cfg_data to i8*) } }, section "__param", align 8, !dbg !5701
@__UNIQUE_ID_adapter_idtype298 = internal constant [31 x i8] c"dc395x.parmtype=adapter_id:int\00", section ".modinfo", align 1, !dbg !5703
@__UNIQUE_ID_adapter_id299 = internal constant [57 x i8] c"dc395x.parm=adapter_id:Adapter SCSI ID. Default 7 (0-15)\00", section ".modinfo", align 1, !dbg !5708
@__param_str_max_speed = internal constant [17 x i8] c"dc395x.max_speed\00", align 16, !dbg !5812
@__param_max_speed = internal constant %struct.kernel_param { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__param_str_max_speed, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* getelementptr (i8, i8* bitcast ([6 x %struct.ParameterData]* @cfg_data to i8*), i64 20) } }, section "__param", align 8, !dbg !5713
@__UNIQUE_ID_max_speedtype300 = internal constant [30 x i8] c"dc395x.parmtype=max_speed:int\00", section ".modinfo", align 1, !dbg !5715
@__UNIQUE_ID_max_speed301 = internal constant [117 x i8] c"dc395x.parm=max_speed:Maximum bus speed. Default 1 (0-7) Speeds: 0=20, 1=13.3, 2=10, 3=8, 4=6.7, 5=5.8, 6=5, 7=4 Mhz\00", section ".modinfo", align 1, !dbg !5720
@__param_str_dev_mode = internal constant [16 x i8] c"dc395x.dev_mode\00", align 16, !dbg !5815
@__param_dev_mode = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_dev_mode, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* getelementptr (i8, i8* bitcast ([6 x %struct.ParameterData]* @cfg_data to i8*), i64 40) } }, section "__param", align 8, !dbg !5725
@__UNIQUE_ID_dev_modetype302 = internal constant [29 x i8] c"dc395x.parmtype=dev_mode:int\00", section ".modinfo", align 1, !dbg !5727
@__UNIQUE_ID_dev_mode303 = internal constant [34 x i8] c"dc395x.parm=dev_mode:Device mode.\00", section ".modinfo", align 1, !dbg !5732
@__param_str_adapter_mode = internal constant [20 x i8] c"dc395x.adapter_mode\00", align 16, !dbg !5818
@__param_adapter_mode = internal constant %struct.kernel_param { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__param_str_adapter_mode, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* getelementptr (i8, i8* bitcast ([6 x %struct.ParameterData]* @cfg_data to i8*), i64 60) } }, section "__param", align 8, !dbg !5737
@__UNIQUE_ID_adapter_modetype304 = internal constant [33 x i8] c"dc395x.parmtype=adapter_mode:int\00", section ".modinfo", align 1, !dbg !5739
@__UNIQUE_ID_adapter_mode305 = internal constant [39 x i8] c"dc395x.parm=adapter_mode:Adapter mode.\00", section ".modinfo", align 1, !dbg !5744
@__param_str_tags = internal constant [12 x i8] c"dc395x.tags\00", align 1, !dbg !5821
@__param_tags = internal constant %struct.kernel_param { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__param_str_tags, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* getelementptr (i8, i8* bitcast ([6 x %struct.ParameterData]* @cfg_data to i8*), i64 80) } }, section "__param", align 8, !dbg !5749
@__UNIQUE_ID_tagstype306 = internal constant [25 x i8] c"dc395x.parmtype=tags:int\00", section ".modinfo", align 1, !dbg !5751
@__UNIQUE_ID_tags307 = internal constant [56 x i8] c"dc395x.parm=tags:Number of tags (1<<x). Default 3 (0-5)\00", section ".modinfo", align 1, !dbg !5756
@__param_str_reset_delay = internal constant [19 x i8] c"dc395x.reset_delay\00", align 16, !dbg !5824
@__param_reset_delay = internal constant %struct.kernel_param { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__param_str_reset_delay, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* getelementptr (i8, i8* bitcast ([6 x %struct.ParameterData]* @cfg_data to i8*), i64 100) } }, section "__param", align 8, !dbg !5761
@__UNIQUE_ID_reset_delaytype308 = internal constant [32 x i8] c"dc395x.parmtype=reset_delay:int\00", section ".modinfo", align 1, !dbg !5763
@__UNIQUE_ID_reset_delay309 = internal constant [66 x i8] c"dc395x.parm=reset_delay:Reset delay in seconds. Default 1 (0-180)\00", section ".modinfo", align 1, !dbg !5766
@__UNIQUE_ID___addressable_dc395x_driver_init357 = internal global i8* bitcast (i32 ()* @dc395x_driver_init to i8*), section ".discard.addressable", align 8, !dbg !5771
@dc395x_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([2 x %struct.pci_device_id], [2 x %struct.pci_device_id]* @dc395x_pci_table, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @dc395x_init_one, void (%struct.pci_dev*)* @dc395x_remove_one, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !5826
@__exitcall_dc395x_driver_exit = internal global void ()* @dc395x_driver_exit, section ".exitcall.exit", align 8, !dbg !5773
@__UNIQUE_ID_author358 = internal constant [53 x i8] c"dc395x.author=C.L. Huang / Erich Chen / Kurt Garloff\00", section ".modinfo", align 1, !dbg !5778
@__UNIQUE_ID_description359 = internal constant [111 x i8] c"dc395x.description=SCSI host adapter driver for Tekram TRM-S1040 based adapters: Tekram DC395 and DC315 series\00", section ".modinfo", align 1, !dbg !5783
@__UNIQUE_ID_file360 = internal constant [32 x i8] c"dc395x.file=drivers/scsi/dc395x\00", section ".modinfo", align 1, !dbg !5788
@__UNIQUE_ID_license361 = internal constant [19 x i8] c"dc395x.license=GPL\00", section ".modinfo", align 1, !dbg !5790
@.str = private unnamed_addr constant [7 x i8] c"dc395x\00", align 1
@dc395x_pci_table = internal global [2 x %struct.pci_device_id] [%struct.pci_device_id { i32 7649, i32 913, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !5828
@.str.1 = private unnamed_addr constant [37 x i8] c"\016dc395x: PCI Enable device failed.\0A\00", align 1
@dc395x_driver_template = internal global %struct.scsi_host_template { %struct.module* null, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8, i32 0, i32 0), i8* (%struct.Scsi_Host*)* null, i32 (%struct.scsi_device*, i32, i8*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* @dc395x_queue_command, void (%struct.Scsi_Host*, i16)* null, i32 (%struct.scsi_cmnd*)* @dc395x_eh_abort, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* @dc395x_eh_bus_reset, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_device*)* @dc395x_slave_alloc, i32 (%struct.scsi_device*)* null, void (%struct.scsi_device*)* @dc395x_slave_destroy, i32 (%struct.scsi_target*)* null, void (%struct.scsi_target*)* null, i32 (%struct.Scsi_Host*, i64)* null, void (%struct.Scsi_Host*)* null, i32 (%struct.scsi_device*, i32)* null, i32 (%struct.Scsi_Host*)* null, i1 (%struct.request*)* null, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)* null, void (%struct.scsi_device*)* null, i32 (%struct.seq_file*, %struct.Scsi_Host*)* @dc395x_show_info, i32 (%struct.Scsi_Host*, i8*, i32)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, i32)* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), %struct.proc_dir_entry* null, i32 63, i32 7, i16 64, i16 0, i32 0, i32 0, i64 4095, i64 0, i16 16, i8 0, i32 0, i8 0, i32 0, %struct.device_attribute** null, %struct.device_attribute** null, %struct.attribute_group** null, i64 0, i32 0, %struct.scsi_host_cmd_pool* null, i32 0 }, align 8, !dbg !5834
@.str.2 = private unnamed_addr constant [34 x i8] c"\016dc395x: scsi_host_alloc failed\0A\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"\016dc395x: adapter init failed\0A\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"\013dc395x: scsi_add_host failed\0A\00", align 1
@banner_display.banner_done = internal global i32 0, align 4, !dbg !5831
@.str.5 = private unnamed_addr constant [17 x i8] c"\016dc395x: %s %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [48 x i8] c"Tekram DC395(U/UW/F), DC315(U) - ASIC TRM-S1040\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"v2.05, 2004/03/08\00", align 1
@.str.8 = private unnamed_addr constant [66 x i8] c"Tekram DC395(U/UW/F), DC315(U) - ASIC TRM-S1040 v2.05, 2004/03/08\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.9 = private unnamed_addr constant [50 x i8] c"\016dc395x: queue_command: Ignore target <%02i-%i>\0A\00", align 1
@.str.10 = private unnamed_addr constant [50 x i8] c"\013dc395x: queue_command: No such device <%02i-%i>\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"drivers/scsi/dc395x.c\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !5836
@.str.12 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.13 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@.str.14 = private unnamed_addr constant [95 x i8] c"\017dc395x: start_scsi: (0x%p) Attempt to start acommand while another command (0x%p) is active.\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.15 = private unnamed_addr constant [11 x i8] c"start_scsi\00", align 1
@.str.16 = private unnamed_addr constant [60 x i8] c"\014dc395x: start_scsi: (0x%p) Out of tags target=<%02i-%i>)\0A\00", align 1
@.str.17 = private unnamed_addr constant [55 x i8] c"\016dc395x: build_wdtr: msgout_buf BUSY (%i: %02x %02x)\0A\00", align 1
@.str.18 = private unnamed_addr constant [55 x i8] c"\016dc395x: build_sdtr: msgout_buf BUSY (%i: %02x %02x)\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"\016dc395x: eh_abort: (0x%p) target=<%02i-%i> cmd=%p\0A\00", align 1
@.str.20 = private unnamed_addr constant [36 x i8] c"\017dc395x: eh_abort: No such device\0A\00", align 1
@.str.21 = private unnamed_addr constant [41 x i8] c"\017dc395x: eh_abort: Command was waiting\0A\00", align 1
@.str.22 = private unnamed_addr constant [41 x i8] c"\017dc395x: eh_abort: Command in progress\0A\00", align 1
@.str.23 = private unnamed_addr constant [39 x i8] c"\017dc395x: eh_abort: Command not found\0A\00", align 1
@.str.24 = private unnamed_addr constant [55 x i8] c"\016dc395x: eh_bus_reset: (0%p) target=<%02i-%i> cmd=%p\0A\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c"eh_bus_reset\00", align 1
@clock_period = internal global [8 x i8] c"\0C\12\19\1F%+2>", align 1, !dbg !5842
@.str.26 = private unnamed_addr constant [32 x i8] c"\016dc395x: doing_srb_done: pids \00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"G:%p(%02i-%i) \00", align 1
@.str.28 = private unnamed_addr constant [69 x i8] c"\017dc395x: How could the ML send cmnds to the Going queue? <%02i-%i>\0A\00", align 1
@.str.29 = private unnamed_addr constant [60 x i8] c"\017dc395x: tag_mask for <%02i-%i> should be empty, is %08x!\0A\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"W:%p<%02i-%i>\00", align 1
@.str.31 = private unnamed_addr constant [49 x i8] c"\017dc395x: ML queued %i cmnds again to <%02i-%i>\0A\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@current_sync_offset = internal global i16 0, align 2, !dbg !5844
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.33 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.34 = private unnamed_addr constant [105 x i8] c"Tekram DC395(U/UW/F), DC315(U) - ASIC TRM-S1040 PCI SCSI Host Adapter\0A Driver Version v2.05, 2004/03/08\0A\00", align 1
@.str.35 = private unnamed_addr constant [18 x i8] c"SCSI Host Nr %i, \00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"DC395U/UW/F DC315/U %s\0A\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"Wide\00", align 1
@.str.38 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.39 = private unnamed_addr constant [23 x i8] c"io_port_base 0x%04lx, \00", align 1
@.str.40 = private unnamed_addr constant [19 x i8] c"irq_level 0x%04x, \00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c" SelTimeout %ims\0A\00", align 1
@.str.42 = private unnamed_addr constant [24 x i8] c"MaxID %i, MaxLUN %llu, \00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"AdapterID %i\0A\00", align 1
@.str.44 = private unnamed_addr constant [15 x i8] c"tag_max_num %i\00", align 1
@.str.45 = private unnamed_addr constant [19 x i8] c", FilterCfg 0x%02x\00", align 1
@.str.46 = private unnamed_addr constant [18 x i8] c", DelayReset %is\0A\00", align 1
@.str.47 = private unnamed_addr constant [16 x i8] c"Nr of DCBs: %i\0A\00", align 1
@.str.48 = private unnamed_addr constant [28 x i8] c"Map of attached LUNs: %8ph\0A\00", align 1
@.str.49 = private unnamed_addr constant [28 x i8] c"                      %8ph\0A\00", align 1
@.str.50 = private unnamed_addr constant [78 x i8] c"Un ID LUN Prty Sync Wide DsCn SndS TagQ nego_period SyncFreq SyncOffs MaxCmd\0A\00", align 1
@.str.51 = private unnamed_addr constant [17 x i8] c"%02i %02i  %02i \00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c" Yes \00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c" No  \00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"  %03i ns \00", align 1
@.str.55 = private unnamed_addr constant [11 x i8] c" (%03i ns)\00", align 1
@.str.56 = private unnamed_addr constant [23 x i8] c"   %2i.%1i M     %02i \00", align 1
@.str.57 = private unnamed_addr constant [18 x i8] c"                 \00", align 1
@.str.58 = private unnamed_addr constant [11 x i8] c"     %02i\0A\00", align 1
@.str.59 = private unnamed_addr constant [29 x i8] c"Waiting queue timer running\0A\00", align 1
@.str.60 = private unnamed_addr constant [28 x i8] c"DCB (%02i-%i): Waiting: %i:\00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c" %p\00", align 1
@.str.62 = private unnamed_addr constant [29 x i8] c"\0ADCB (%02i-%i): Going  : %i:\00", align 1
@ioport_resource = external dso_local global %struct.resource, align 8
@.str.63 = private unnamed_addr constant [45 x i8] c"\013dc395x: Failed to reserve IO region 0x%lx\0A\00", align 1
@.str.64 = private unnamed_addr constant [34 x i8] c"\016dc395x: Failed to register IRQ\0A\00", align 1
@.str.65 = private unnamed_addr constant [50 x i8] c"\017dc395x: Memory allocation for SG tables failed\0A\00", align 1
@.str.66 = private unnamed_addr constant [46 x i8] c"\016dc395x: Interrupt from DMA engine: 0x%02x!\0A\00", align 1
@.str.67 = private unnamed_addr constant [57 x i8] c"\016dc395x: Ignoring DMA error (probably a bad thing) ...\0A\00", align 1
@.str.68 = private unnamed_addr constant [41 x i8] c"\017dc395x: COP after COP completed? %04x\0A\00", align 1
@.str.69 = private unnamed_addr constant [46 x i8] c"\016dc395x: Host does not support target mode!\0A\00", align 1
@.str.70 = private unnamed_addr constant [55 x i8] c"\017dc395x: Oops: BusService (%04x %02x) w/o ActiveDCB!\0A\00", align 1
@dc395x_scsi_phase0 = internal global [8 x i8*] [i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @data_out_phase0 to i8*), i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @data_in_phase0 to i8*), i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @command_phase0 to i8*), i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @status_phase0 to i8*), i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @nop0 to i8*), i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @nop0 to i8*), i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @msgout_phase0 to i8*), i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @msgin_phase0 to i8*)], align 16, !dbg !5846
@dc395x_scsi_phase1 = internal global [8 x i8*] [i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @data_out_phase1 to i8*), i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @data_in_phase1 to i8*), i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @command_phase1 to i8*), i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @status_phase1 to i8*), i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @nop1 to i8*), i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @nop1 to i8*), i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @msgout_phase1 to i8*), i8* bitcast (void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* @msgin_phase1 to i8*)], align 16, !dbg !5849
@.str.71 = private unnamed_addr constant [38 x i8] c"\013dc395x: disconnect: No such device\0A\00", align 1
@.str.72 = private unnamed_addr constant [13 x i8] c"disconnectEx\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"disconnect\00", align 1
@.str.74 = private unnamed_addr constant [56 x i8] c"\013dc395x: disconnect: Unexpected reselection <%02i-%i>\0A\00", align 1
@.str.75 = private unnamed_addr constant [38 x i8] c"\013dc395x: disconnect: SRB_ABORT_SENT\0A\00", align 1
@.str.76 = private unnamed_addr constant [41 x i8] c"\017dc395x: disconnect: (0x%p) Unexpected\0A\00", align 1
@.str.77 = private unnamed_addr constant [54 x i8] c"\016dc395x: QUEUE_FULL for dev <%02i-%i> with %i cmnds\0A\00", align 1
@.str.78 = private unnamed_addr constant [55 x i8] c"\013dc395x: srb_done: ERROR! Completed cmd with tmp_srb\0A\00", align 1
@.str.79 = private unnamed_addr constant [50 x i8] c"\017dc395x: request_sense: (0x%p) failed <%02i-%i>\0A\00", align 1
@.str.80 = private unnamed_addr constant [9 x i8] c"reselect\00", align 1
@.str.81 = private unnamed_addr constant [64 x i8] c"\017dc395x: reselect: Arb lost Resel won, but active_srb == NULL\0A\00", align 1
@.str.82 = private unnamed_addr constant [51 x i8] c"\017dc395x: reselect: Expects identify msg. Got %i!\0A\00", align 1
@.str.83 = private unnamed_addr constant [56 x i8] c"\013dc395x: reselect: From non existent device <%02i-%i>\0A\00", align 1
@.str.84 = private unnamed_addr constant [68 x i8] c"\017dc395x: reselect: in spite of forbidden disconnection? <%02i-%i>\0A\00", align 1
@.str.85 = private unnamed_addr constant [53 x i8] c"\017dc395x: reselect: w/o disconnected cmds <%02i-%i>\0A\00", align 1
@.str.86 = private unnamed_addr constant [37 x i8] c"\016dc395x: scsi_reset_detect: acb=%p\0A\00", align 1
@.str.87 = private unnamed_addr constant [18 x i8] c"scsi_reset_detect\00", align 1
@.str.88 = private unnamed_addr constant [52 x i8] c"\016dc395x: data_out_phase0: Discard 1 byte (0x%02x)\0A\00", align 1
@.str.89 = private unnamed_addr constant [55 x i8] c"\016dc395x: data_out_phase0: Work around chip bug (%i)?\0A\00", align 1
@.str.90 = private unnamed_addr constant [11 x i8] c"cleanup/in\00", align 1
@.str.91 = private unnamed_addr constant [12 x i8] c"cleanup/out\00", align 1
@.str.92 = private unnamed_addr constant [47 x i8] c"\016dc395x: data_in_phase0: (0x%p) Parity Error\0A\00", align 1
@.str.93 = private unnamed_addr constant [64 x i8] c"\017dc395x: msgin_qtag: tag_mask=0x%08x does not reserve tag %i!\0A\00", align 1
@.str.94 = private unnamed_addr constant [46 x i8] c"\017dc395x: msgin_qtag: Unknown tag %i - abort\0A\00", align 1
@.str.95 = private unnamed_addr constant [56 x i8] c"\017dc395x: msgin_set_async: No sync transfers <%02i-%i>\0A\00", align 1
@.str.96 = private unnamed_addr constant [61 x i8] c"\016dc395x: msgin_set_sync: Increase sync nego period to %ins\0A\00", align 1
@.str.97 = private unnamed_addr constant [65 x i8] c"\016dc395x: Target %02i: %s Sync: %ins Offset %i (%02i.%01i MB/s)\0A\00", align 1
@.str.98 = private unnamed_addr constant [7 x i8] c"Wide16\00", align 1
@.str.99 = private unnamed_addr constant [44 x i8] c"\017dc395x: msgin_set_sync: answer w/%ins %i\0A\00", align 1
@.str.100 = private unnamed_addr constant [54 x i8] c"\017dc395x: msgin_set_wide: Wide nego initiated <%02i>\0A\00", align 1
@.str.101 = private unnamed_addr constant [42 x i8] c"\016dc395x: msgin_reject: 0x%02x <%02i-%i>\0A\00", align 1
@.str.102 = private unnamed_addr constant [16 x i8] c"data_out_phase1\00", align 1
@.str.103 = private unnamed_addr constant [44 x i8] c"\013dc395x: data_io_transfer: Using tmp_srb!\0A\00", align 1
@.str.104 = private unnamed_addr constant [59 x i8] c"\017dc395x: data_io_transfer: Xfer pending! Expect trouble!\0A\00", align 1
@.str.105 = private unnamed_addr constant [38 x i8] c"\016dc395x: dump: srb=%p cmd=%p OOOPS!\0A\00", align 1
@.str.106 = private unnamed_addr constant [53 x i8] c"\016dc395x: dump: srb=%p cmd=%p cmnd=0x%02x <%02i-%i>\0A\00", align 1
@.str.107 = private unnamed_addr constant [35 x i8] c"  sglist=%p cnt=%i idx=%i len=%zu\0A\00", align 1
@.str.108 = private unnamed_addr constant [53 x i8] c"  state=0x%04x status=0x%02x phase=0x%02x (%sconn.)\0A\00", align 1
@.str.109 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str.110 = private unnamed_addr constant [199 x i8] c"\016dc395x: dump: SCSI{status=0x%04x fifocnt=0x%02x signals=0x%02x irqstat=0x%02x sync=0x%02x target=0x%02x rselid=0x%02x ctr=0x%08x irqen=0x%02x config=0x%04x config2=0x%02x cmd=0x%02x selto=0x%02x}\0A\00", align 1
@.str.111 = private unnamed_addr constant [144 x i8] c"\016dc395x: dump: DMA{cmd=0x%04x fifocnt=0x%02x fstat=0x%02x irqstat=0x%02x irqen=0x%02x cfg=0x%04x tctr=0x%08x ctctr=0x%08x addr=0x%08x:0x%08x}\0A\00", align 1
@.str.112 = private unnamed_addr constant [79 x i8] c"\016dc395x: dump: gen{gctrl=0x%02x gstat=0x%02x gtmr=0x%02x} pci{status=0x%04x}\0A\00", align 1
@.str.113 = private unnamed_addr constant [15 x i8] c"command_phase1\00", align 1
@.str.114 = private unnamed_addr constant [14 x i8] c"msgout_phase1\00", align 1
@.str.115 = private unnamed_addr constant [50 x i8] c"\017dc395x: msgout_phase1: (0x%p) Phase unexpected\0A\00", align 1
@.str.116 = private unnamed_addr constant [13 x i8] c"msgin_phase1\00", align 1
@.str.117 = private unnamed_addr constant [68 x i8] c"\014dc395x: EEProm checksum error: using default values and options.\0A\00", align 1
@.str.118 = private unnamed_addr constant [32 x i8] c"\016dc395x: Using safe settings.\0A\00", align 1
@eeprom_index_to_delay_map = internal global [8 x i8] c"\01\03\05\0A\10\1E<x", align 1, !dbg !5851
@.str.119 = private unnamed_addr constant [82 x i8] c"\016dc395x: Used settings: AdapterID=%02i, Speed=%i(%02i.%01iMHz), dev_mode=0x%02x\0A\00", align 1
@clock_speed = internal global [8 x i16] [i16 200, i16 133, i16 100, i16 80, i16 67, i16 58, i16 50, i16 40], align 16, !dbg !5853
@.str.120 = private unnamed_addr constant [74 x i8] c"\016dc395x:                AdaptMode=0x%02x, Tags=%i(%02i), DelayReset=%is\0A\00", align 1
@.str.121 = private unnamed_addr constant [25 x i8] c"\016dc395x: %sConnectors: \00", align 1
@.str.122 = private unnamed_addr constant [8 x i8] c"(Wide) \00", align 1
@.str.123 = private unnamed_addr constant [7 x i8] c"ext%s \00", align 1
@.str.124 = private unnamed_addr constant [3 x i8] c"68\00", align 1
@.str.125 = private unnamed_addr constant [3 x i8] c"50\00", align 1
@.str.126 = private unnamed_addr constant [9 x i8] c"int68%s \00", align 1
@.str.127 = private unnamed_addr constant [5 x i8] c"(50)\00", align 1
@.str.128 = private unnamed_addr constant [7 x i8] c"int50 \00", align 1
@.str.129 = private unnamed_addr constant [17 x i8] c" Oops! (All 3?) \00", align 1
@.str.130 = private unnamed_addr constant [15 x i8] c" Termination: \00", align 1
@.str.131 = private unnamed_addr constant [10 x i8] c"Disabled\0A\00", align 1
@.str.132 = private unnamed_addr constant [6 x i8] c"Auto \00", align 1
@.str.133 = private unnamed_addr constant [5 x i8] c"Low \00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"High \00", align 1
@.str.135 = private unnamed_addr constant [50 x i8] c"\017dc395x: No space for tmsrb SG table reserved?!\0A\00", align 1
@.str.136 = private unnamed_addr constant [45 x i8] c"\016dc395x: Performing initial SCSI bus reset\0A\00", align 1
@llvm.used = appending global [28 x i8*] [i8* bitcast (%struct.kernel_param* @__param_safe to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__UNIQUE_ID_safetype296, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__UNIQUE_ID_safe297, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_adapter_id to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_adapter_idtype298, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__UNIQUE_ID_adapter_id299, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_max_speed to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__UNIQUE_ID_max_speedtype300, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @__UNIQUE_ID_max_speed301, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_dev_mode to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_dev_modetype302, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__UNIQUE_ID_dev_mode303, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_adapter_mode to i8*), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_adapter_modetype304, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_adapter_mode305, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_tags to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__UNIQUE_ID_tagstype306, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__UNIQUE_ID_tags307, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_reset_delay to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_reset_delaytype308, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__UNIQUE_ID_reset_delay309, i32 0, i32 0), i8* bitcast (i8** @__UNIQUE_ID___addressable_dc395x_driver_init357 to i8*), i8* bitcast (void ()* @dc395x_driver_exit to i8*), i8* bitcast (void ()** @__exitcall_dc395x_driver_exit to i8*), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__UNIQUE_ID_author358, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @__UNIQUE_ID_description359, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_file360, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__UNIQUE_ID_license361, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @dc395x_driver_init() #0 section ".init.text" !dbg !5862 {
entry:
  %call = call i32 @__pci_register_driver(%struct.pci_driver* @dc395x_driver, %struct.module* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #11, !dbg !5865
  ret i32 %call, !dbg !5865
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @dc395x_driver_exit() #0 section ".exit.text" !dbg !5866 {
entry:
  call void @pci_unregister_driver(%struct.pci_driver* @dc395x_driver) #11, !dbg !5867
  ret void, !dbg !5867
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #1

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dc395x_init_one(%struct.pci_dev* %dev, %struct.pci_device_id* %id) #2 !dbg !5868 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %id.addr = alloca %struct.pci_device_id*, align 8
  %scsi_host = alloca %struct.Scsi_Host*, align 8
  %acb = alloca %struct.AdapterCtlBlk*, align 8
  %io_port_base = alloca i64, align 8
  %io_port_len = alloca i32, align 4
  %irq = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5869, metadata !DIExpression()), !dbg !5870
  store %struct.pci_device_id* %id, %struct.pci_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %id.addr, metadata !5871, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %scsi_host, metadata !5873, metadata !DIExpression()), !dbg !5874
  store %struct.Scsi_Host* null, %struct.Scsi_Host** %scsi_host, align 8, !dbg !5874
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb, metadata !5875, metadata !DIExpression()), !dbg !5876
  store %struct.AdapterCtlBlk* null, %struct.AdapterCtlBlk** %acb, align 8, !dbg !5876
  call void @llvm.dbg.declare(metadata i64* %io_port_base, metadata !5877, metadata !DIExpression()), !dbg !5878
  call void @llvm.dbg.declare(metadata i32* %io_port_len, metadata !5879, metadata !DIExpression()), !dbg !5880
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !5881, metadata !DIExpression()), !dbg !5882
  br label %do.body, !dbg !5883

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5884

do.end:                                           ; preds = %do.body
  call void @banner_display() #11, !dbg !5886
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5887
  %call = call i32 @pci_enable_device(%struct.pci_dev* %0) #11, !dbg !5889
  %tobool = icmp ne i32 %call, 0, !dbg !5889
  br i1 %tobool, label %if.then, label %if.end, !dbg !5890

if.then:                                          ; preds = %do.end
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !5891
  store i32 -19, i32* %retval, align 4, !dbg !5893
  br label %return, !dbg !5893

if.end:                                           ; preds = %do.end
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5894
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 44, !dbg !5894
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !5894
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !5894
  %2 = load i64, i64* %start, align 8, !dbg !5894
  %and = and i64 %2, -4, !dbg !5895
  store i64 %and, i64* %io_port_base, align 8, !dbg !5896
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5897
  %resource2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 44, !dbg !5897
  %arrayidx3 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource2, i64 0, i64 0, !dbg !5897
  %start4 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx3, i32 0, i32 0, !dbg !5897
  %4 = load i64, i64* %start4, align 8, !dbg !5897
  %cmp = icmp eq i64 %4, 0, !dbg !5897
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !5897

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5897
  %resource5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 44, !dbg !5897
  %arrayidx6 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource5, i64 0, i64 0, !dbg !5897
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx6, i32 0, i32 1, !dbg !5897
  %6 = load i64, i64* %end, align 8, !dbg !5897
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5897
  %resource7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 44, !dbg !5897
  %arrayidx8 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource7, i64 0, i64 0, !dbg !5897
  %start9 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx8, i32 0, i32 0, !dbg !5897
  %8 = load i64, i64* %start9, align 8, !dbg !5897
  %cmp10 = icmp eq i64 %6, %8, !dbg !5897
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !5897

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !5897

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5897
  %resource11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 44, !dbg !5897
  %arrayidx12 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource11, i64 0, i64 0, !dbg !5897
  %end13 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx12, i32 0, i32 1, !dbg !5897
  %10 = load i64, i64* %end13, align 8, !dbg !5897
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5897
  %resource14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 44, !dbg !5897
  %arrayidx15 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource14, i64 0, i64 0, !dbg !5897
  %start16 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx15, i32 0, i32 0, !dbg !5897
  %12 = load i64, i64* %start16, align 8, !dbg !5897
  %sub = sub i64 %10, %12, !dbg !5897
  %add = add i64 %sub, 1, !dbg !5897
  br label %cond.end, !dbg !5897

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !5897
  %conv = trunc i64 %cond to i32, !dbg !5897
  store i32 %conv, i32* %io_port_len, align 4, !dbg !5898
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5899
  %irq17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 43, !dbg !5900
  %14 = load i32, i32* %irq17, align 4, !dbg !5900
  store i32 %14, i32* %irq, align 4, !dbg !5901
  br label %do.body18, !dbg !5902

do.body18:                                        ; preds = %cond.end
  br label %do.end19, !dbg !5903

do.end19:                                         ; preds = %do.body18
  %call20 = call %struct.Scsi_Host* @scsi_host_alloc(%struct.scsi_host_template* @dc395x_driver_template, i32 11096) #11, !dbg !5905
  store %struct.Scsi_Host* %call20, %struct.Scsi_Host** %scsi_host, align 8, !dbg !5906
  %15 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !5907
  %tobool21 = icmp ne %struct.Scsi_Host* %15, null, !dbg !5907
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !5909

if.then22:                                        ; preds = %do.end19
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0)) #12, !dbg !5910
  br label %fail, !dbg !5912

if.end24:                                         ; preds = %do.end19
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !5913
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %16, i32 0, i32 51, !dbg !5914
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !5913
  %17 = bitcast i64* %arraydecay to %struct.AdapterCtlBlk*, !dbg !5915
  store %struct.AdapterCtlBlk* %17, %struct.AdapterCtlBlk** %acb, align 8, !dbg !5916
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !5917
  %19 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !5918
  %scsi_host25 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %19, i32 0, i32 0, !dbg !5919
  store %struct.Scsi_Host* %18, %struct.Scsi_Host** %scsi_host25, align 8, !dbg !5920
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5921
  %21 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !5922
  %dev26 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %21, i32 0, i32 23, !dbg !5923
  store %struct.pci_dev* %20, %struct.pci_dev** %dev26, align 8, !dbg !5924
  %22 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !5925
  %23 = load i64, i64* %io_port_base, align 8, !dbg !5927
  %24 = load i32, i32* %io_port_len, align 4, !dbg !5928
  %25 = load i32, i32* %irq, align 4, !dbg !5929
  %call27 = call i32 @adapter_init(%struct.AdapterCtlBlk* %22, i64 %23, i32 %24, i32 %25) #11, !dbg !5930
  %tobool28 = icmp ne i32 %call27, 0, !dbg !5930
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !5931

if.then29:                                        ; preds = %if.end24
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0)) #12, !dbg !5932
  br label %fail, !dbg !5934

if.end31:                                         ; preds = %if.end24
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5935
  call void @pci_set_master(%struct.pci_dev* %26) #11, !dbg !5936
  %27 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !5937
  %28 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5939
  %dev32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 41, !dbg !5940
  %call33 = call i32 @scsi_add_host(%struct.Scsi_Host* %27, %struct.device* %dev32) #11, !dbg !5941
  %tobool34 = icmp ne i32 %call33, 0, !dbg !5941
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !5942

if.then35:                                        ; preds = %if.end31
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !5943
  br label %fail, !dbg !5945

if.end37:                                         ; preds = %if.end31
  %29 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5946
  %30 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !5947
  %31 = bitcast %struct.Scsi_Host* %30 to i8*, !dbg !5947
  call void @pci_set_drvdata(%struct.pci_dev* %29, i8* %31) #11, !dbg !5948
  %32 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !5949
  call void @scsi_scan_host(%struct.Scsi_Host* %32) #11, !dbg !5950
  store i32 0, i32* %retval, align 4, !dbg !5951
  br label %return, !dbg !5951

fail:                                             ; preds = %if.then35, %if.then29, %if.then22
  call void @llvm.dbg.label(metadata !5952), !dbg !5953
  %33 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !5954
  %cmp38 = icmp ne %struct.AdapterCtlBlk* %33, null, !dbg !5956
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !5957

if.then40:                                        ; preds = %fail
  %34 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !5958
  call void @adapter_uninit(%struct.AdapterCtlBlk* %34) #11, !dbg !5959
  br label %if.end41, !dbg !5959

if.end41:                                         ; preds = %if.then40, %fail
  %35 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !5960
  %cmp42 = icmp ne %struct.Scsi_Host* %35, null, !dbg !5962
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !5963

if.then44:                                        ; preds = %if.end41
  %36 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !5964
  call void @scsi_host_put(%struct.Scsi_Host* %36) #11, !dbg !5965
  br label %if.end45, !dbg !5965

if.end45:                                         ; preds = %if.then44, %if.end41
  %37 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5966
  call void @pci_disable_device(%struct.pci_dev* %37) #11, !dbg !5967
  store i32 -19, i32* %retval, align 4, !dbg !5968
  br label %return, !dbg !5968

return:                                           ; preds = %if.end45, %if.end37, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !5969
  ret i32 %38, !dbg !5969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dc395x_remove_one(%struct.pci_dev* %dev) #2 !dbg !5970 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %scsi_host = alloca %struct.Scsi_Host*, align 8
  %acb = alloca %struct.AdapterCtlBlk*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5971, metadata !DIExpression()), !dbg !5972
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %scsi_host, metadata !5973, metadata !DIExpression()), !dbg !5974
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5975
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #11, !dbg !5976
  %1 = bitcast i8* %call to %struct.Scsi_Host*, !dbg !5976
  store %struct.Scsi_Host* %1, %struct.Scsi_Host** %scsi_host, align 8, !dbg !5974
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb, metadata !5977, metadata !DIExpression()), !dbg !5978
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !5979
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 51, !dbg !5980
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !5981
  %3 = bitcast i64* %arraydecay to %struct.AdapterCtlBlk*, !dbg !5982
  store %struct.AdapterCtlBlk* %3, %struct.AdapterCtlBlk** %acb, align 8, !dbg !5978
  br label %do.body, !dbg !5983

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5984

do.end:                                           ; preds = %do.body
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !5986
  call void @scsi_remove_host(%struct.Scsi_Host* %4) #11, !dbg !5987
  %5 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !5988
  call void @adapter_uninit(%struct.AdapterCtlBlk* %5) #11, !dbg !5989
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5990
  call void @pci_disable_device(%struct.pci_dev* %6) #11, !dbg !5991
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !5992
  call void @scsi_host_put(%struct.Scsi_Host* %7) #11, !dbg !5993
  ret void, !dbg !5994
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @banner_display() #2 !dbg !5833 {
entry:
  %0 = load i32, i32* @banner_display.banner_done, align 4, !dbg !5995
  %tobool = icmp ne i32 %0, 0, !dbg !5995
  br i1 %tobool, label %if.end, label %if.then, !dbg !5997

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0)) #12, !dbg !5998
  store i32 1, i32* @banner_display.banner_done, align 4, !dbg !6000
  br label %if.end, !dbg !6001

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6002
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #1

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local %struct.Scsi_Host* @scsi_host_alloc(%struct.scsi_host_template*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @adapter_init(%struct.AdapterCtlBlk* %acb, i64 %io_port, i32 %io_port_len, i32 %irq) #2 !dbg !6003 {
entry:
  %retval = alloca i32, align 4
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %io_port.addr = alloca i64, align 8
  %io_port_len.addr = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !6006, metadata !DIExpression()), !dbg !6007
  store i64 %io_port, i64* %io_port.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %io_port.addr, metadata !6008, metadata !DIExpression()), !dbg !6009
  store i32 %io_port_len, i32* %io_port_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %io_port_len.addr, metadata !6010, metadata !DIExpression()), !dbg !6011
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6012, metadata !DIExpression()), !dbg !6013
  %0 = load i64, i64* %io_port.addr, align 8, !dbg !6014
  %1 = load i32, i32* %io_port_len.addr, align 4, !dbg !6014
  %conv = zext i32 %1 to i64, !dbg !6014
  %call = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %0, i64 %conv, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 0) #11, !dbg !6014
  %tobool = icmp ne %struct.resource* %call, null, !dbg !6014
  br i1 %tobool, label %if.end, label %if.then, !dbg !6016

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %io_port.addr, align 8, !dbg !6017
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.63, i64 0, i64 0), i64 %2) #12, !dbg !6017
  br label %failed, !dbg !6019

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %io_port.addr, align 8, !dbg !6020
  %4 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6021
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %4, i32 0, i32 1, !dbg !6022
  store i64 %3, i64* %io_port_base, align 8, !dbg !6023
  %5 = load i32, i32* %io_port_len.addr, align 4, !dbg !6024
  %conv2 = zext i32 %5 to i64, !dbg !6024
  %6 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6025
  %io_port_len3 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %6, i32 0, i32 2, !dbg !6026
  store i64 %conv2, i64* %io_port_len3, align 8, !dbg !6027
  %7 = load i32, i32* %irq.addr, align 4, !dbg !6028
  %8 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6030
  %9 = bitcast %struct.AdapterCtlBlk* %8 to i8*, !dbg !6030
  %call4 = call i32 @request_irq(i32 %7, i32 (i32, i8*)* @dc395x_interrupt, i64 128, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* %9) #11, !dbg !6031
  %tobool5 = icmp ne i32 %call4, 0, !dbg !6031
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !6032

if.then6:                                         ; preds = %if.end
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.64, i64 0, i64 0)) #12, !dbg !6033
  br label %failed, !dbg !6035

if.end8:                                          ; preds = %if.end
  %10 = load i32, i32* %irq.addr, align 4, !dbg !6036
  %11 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6037
  %irq_level = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %11, i32 0, i32 13, !dbg !6038
  store i32 %10, i32* %irq_level, align 4, !dbg !6039
  %12 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6040
  %eeprom = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %12, i32 0, i32 27, !dbg !6041
  %13 = load i64, i64* %io_port.addr, align 8, !dbg !6042
  call void @check_eeprom(%struct.NvRamType* %eeprom, i64 %13) #11, !dbg !6043
  %14 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6044
  %eeprom9 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %14, i32 0, i32 27, !dbg !6045
  call void @print_eeprom_settings(%struct.NvRamType* %eeprom9) #11, !dbg !6046
  %15 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6047
  call void @adapter_init_params(%struct.AdapterCtlBlk* %15) #11, !dbg !6048
  %16 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6049
  call void @adapter_print_config(%struct.AdapterCtlBlk* %16) #11, !dbg !6050
  %17 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6051
  %call10 = call i32 @adapter_sg_tables_alloc(%struct.AdapterCtlBlk* %17) #11, !dbg !6053
  %tobool11 = icmp ne i32 %call10, 0, !dbg !6053
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !6054

if.then12:                                        ; preds = %if.end8
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !6055
  br label %failed, !dbg !6057

if.end14:                                         ; preds = %if.end8
  %18 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6058
  %scsi_host = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %18, i32 0, i32 0, !dbg !6059
  %19 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !6059
  call void @adapter_init_scsi_host(%struct.Scsi_Host* %19) #11, !dbg !6060
  %20 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6061
  call void @adapter_init_chip(%struct.AdapterCtlBlk* %20) #11, !dbg !6062
  %21 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6063
  call void @set_basic_config(%struct.AdapterCtlBlk* %21) #11, !dbg !6064
  br label %do.body, !dbg !6065

do.body:                                          ; preds = %if.end14
  br label %do.end, !dbg !6066

do.end:                                           ; preds = %do.body
  store i32 0, i32* %retval, align 4, !dbg !6068
  br label %return, !dbg !6068

failed:                                           ; preds = %if.then12, %if.then6, %if.then
  call void @llvm.dbg.label(metadata !6069), !dbg !6070
  %22 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6071
  %irq_level15 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %22, i32 0, i32 13, !dbg !6073
  %23 = load i32, i32* %irq_level15, align 4, !dbg !6073
  %tobool16 = icmp ne i32 %23, 0, !dbg !6071
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !6074

if.then17:                                        ; preds = %failed
  %24 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6075
  %irq_level18 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %24, i32 0, i32 13, !dbg !6076
  %25 = load i32, i32* %irq_level18, align 4, !dbg !6076
  %26 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6077
  %27 = bitcast %struct.AdapterCtlBlk* %26 to i8*, !dbg !6077
  %call19 = call i8* @free_irq(i32 %25, i8* %27) #11, !dbg !6078
  br label %if.end20, !dbg !6078

if.end20:                                         ; preds = %if.then17, %failed
  %28 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6079
  %io_port_base21 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %28, i32 0, i32 1, !dbg !6081
  %29 = load i64, i64* %io_port_base21, align 8, !dbg !6081
  %tobool22 = icmp ne i64 %29, 0, !dbg !6079
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !6082

if.then23:                                        ; preds = %if.end20
  %30 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6083
  %io_port_base24 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %30, i32 0, i32 1, !dbg !6083
  %31 = load i64, i64* %io_port_base24, align 8, !dbg !6083
  %32 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6083
  %io_port_len25 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %32, i32 0, i32 2, !dbg !6083
  %33 = load i64, i64* %io_port_len25, align 8, !dbg !6083
  call void @__release_region(%struct.resource* @ioport_resource, i64 %31, i64 %33) #11, !dbg !6083
  br label %if.end26, !dbg !6083

if.end26:                                         ; preds = %if.then23, %if.end20
  %34 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6084
  call void @adapter_sg_tables_free(%struct.AdapterCtlBlk* %34) #11, !dbg !6085
  store i32 1, i32* %retval, align 4, !dbg !6086
  br label %return, !dbg !6086

return:                                           ; preds = %if.end26, %do.end
  %35 = load i32, i32* %retval, align 4, !dbg !6087
  ret i32 %35, !dbg !6087
}

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_add_host(%struct.Scsi_Host* %host, %struct.device* %dev) #2 !dbg !6088 {
entry:
  %host.addr = alloca %struct.Scsi_Host*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !6091, metadata !DIExpression()), !dbg !6092
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6093, metadata !DIExpression()), !dbg !6094
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !6095
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6096
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6097
  %call = call i32 @scsi_add_host_with_dma(%struct.Scsi_Host* %0, %struct.device* %1, %struct.device* %2) #11, !dbg !6098
  ret i32 %call, !dbg !6099
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #2 !dbg !6100 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6103, metadata !DIExpression()), !dbg !6104
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6105, metadata !DIExpression()), !dbg !6106
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6107
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !6108
  %1 = load i8*, i8** %data.addr, align 8, !dbg !6109
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #11, !dbg !6110
  ret void, !dbg !6111
}

; Function Attrs: noredzone
declare dso_local void @scsi_scan_host(%struct.Scsi_Host*) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @adapter_uninit(%struct.AdapterCtlBlk* %acb) #2 !dbg !6112 {
entry:
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !6115, metadata !DIExpression()), !dbg !6120
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6122, metadata !DIExpression()), !dbg !6123
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6124, metadata !DIExpression()), !dbg !6129
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !6136, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6138, metadata !DIExpression()), !dbg !6139
  br label %do.body, !dbg !6140

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6141

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6142, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6145, metadata !DIExpression()), !dbg !6144
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6144
  %conv = zext i1 %cmp to i32, !dbg !6144
  store i32 1, i32* %tmp, align 4, !dbg !6144
  %0 = load i32, i32* %tmp, align 4, !dbg !6144
  br label %do.body2, !dbg !6146

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6147

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6148

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6150, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6154, metadata !DIExpression()), !dbg !6153
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6153
  %conv8 = zext i1 %cmp7 to i32, !dbg !6153
  store i32 1, i32* %tmp9, align 4, !dbg !6153
  %1 = load i32, i32* %tmp9, align 4, !dbg !6153
  %call = call i64 @arch_local_irq_save() #11, !dbg !6155
  store i64 %call, i64* %flags, align 8, !dbg !6155
  br label %do.end, !dbg !6155

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6148

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6147

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6156, !srcloc !6157
  br label %do.body12, !dbg !6156

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6158
  %scsi_host = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 0, !dbg !6158
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !6158
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 4, !dbg !6158
  %4 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !6158
  store %struct.spinlock* %4, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6159
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !6160
  %rlock.i = bitcast %union.anon.2* %6 to %struct.raw_spinlock*, !dbg !6160
  br label %do.end14, !dbg !6158

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6156

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6147

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6146

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6141

do.end18:                                         ; preds = %do.end17
  %7 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6161
  %waiting_timer = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %7, i32 0, i32 8, !dbg !6163
  %call19 = call i32 @timer_pending(%struct.timer_list* %waiting_timer) #11, !dbg !6164
  %tobool = icmp ne i32 %call19, 0, !dbg !6164
  br i1 %tobool, label %if.then, label %if.end, !dbg !6165

if.then:                                          ; preds = %do.end18
  %8 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6166
  %waiting_timer20 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %8, i32 0, i32 8, !dbg !6167
  %call21 = call i32 @del_timer(%struct.timer_list* %waiting_timer20) #11, !dbg !6168
  br label %if.end, !dbg !6168

if.end:                                           ; preds = %if.then, %do.end18
  %9 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6169
  %selto_timer = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %9, i32 0, i32 9, !dbg !6171
  %call22 = call i32 @timer_pending(%struct.timer_list* %selto_timer) #11, !dbg !6172
  %tobool23 = icmp ne i32 %call22, 0, !dbg !6172
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !6173

if.then24:                                        ; preds = %if.end
  %10 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6174
  %selto_timer25 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %10, i32 0, i32 9, !dbg !6175
  %call26 = call i32 @del_timer(%struct.timer_list* %selto_timer25) #11, !dbg !6176
  br label %if.end27, !dbg !6176

if.end27:                                         ; preds = %if.then24, %if.end
  %11 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6177
  call void @adapter_uninit_chip(%struct.AdapterCtlBlk* %11) #11, !dbg !6178
  %12 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6179
  call void @adapter_remove_and_free_all_devices(%struct.AdapterCtlBlk* %12) #11, !dbg !6180
  %13 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6181
  %scsi_host28 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %13, i32 0, i32 0, !dbg !6181
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host28, align 8, !dbg !6181
  %host_lock29 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %14, i32 0, i32 4, !dbg !6181
  %15 = load %struct.spinlock*, %struct.spinlock** %host_lock29, align 8, !dbg !6181
  %16 = load i64, i64* %flags, align 8, !dbg !6181
  store %struct.spinlock* %15, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !216, metadata !6182, metadata !DIExpression()) #6, !dbg !6185
  call void @llvm.dbg.declare(metadata !216, metadata !6186, metadata !DIExpression()) #6, !dbg !6185
  store i32 1, i32* %tmp.i, align 4, !dbg !6185
  %17 = load i32, i32* %tmp.i, align 4, !dbg !6185
  call void @llvm.dbg.declare(metadata !216, metadata !6187, metadata !DIExpression()) #6, !dbg !6192
  call void @llvm.dbg.declare(metadata !216, metadata !6193, metadata !DIExpression()) #6, !dbg !6192
  store i32 1, i32* %tmp8.i, align 4, !dbg !6192
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !6192
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !6194
  call void @arch_local_irq_restore(i64 %19) #13, !dbg !6194
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6195, !srcloc !6197
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !6198
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !6198
  %rlock.i40 = bitcast %union.anon.2* %21 to %struct.raw_spinlock*, !dbg !6198
  %22 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6200
  %irq_level = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %22, i32 0, i32 13, !dbg !6202
  %23 = load i32, i32* %irq_level, align 4, !dbg !6202
  %tobool30 = icmp ne i32 %23, 0, !dbg !6200
  br i1 %tobool30, label %if.then31, label %if.end34, !dbg !6203

if.then31:                                        ; preds = %if.end27
  %24 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6204
  %irq_level32 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %24, i32 0, i32 13, !dbg !6205
  %25 = load i32, i32* %irq_level32, align 4, !dbg !6205
  %26 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6206
  %27 = bitcast %struct.AdapterCtlBlk* %26 to i8*, !dbg !6206
  %call33 = call i8* @free_irq(i32 %25, i8* %27) #11, !dbg !6207
  br label %if.end34, !dbg !6207

if.end34:                                         ; preds = %if.then31, %if.end27
  %28 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6208
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %28, i32 0, i32 1, !dbg !6210
  %29 = load i64, i64* %io_port_base, align 8, !dbg !6210
  %tobool35 = icmp ne i64 %29, 0, !dbg !6208
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !6211

if.then36:                                        ; preds = %if.end34
  %30 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6212
  %io_port_base37 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %30, i32 0, i32 1, !dbg !6212
  %31 = load i64, i64* %io_port_base37, align 8, !dbg !6212
  %32 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6212
  %io_port_len = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %32, i32 0, i32 2, !dbg !6212
  %33 = load i64, i64* %io_port_len, align 8, !dbg !6212
  call void @__release_region(%struct.resource* @ioport_resource, i64 %31, i64 %33) #11, !dbg !6212
  br label %if.end38, !dbg !6212

if.end38:                                         ; preds = %if.then36, %if.end34
  %34 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6213
  call void @adapter_sg_tables_free(%struct.AdapterCtlBlk* %34) #11, !dbg !6214
  ret void, !dbg !6215
}

; Function Attrs: noredzone
declare dso_local void @scsi_host_put(%struct.Scsi_Host*) #1

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dc395x_queue_command(%struct.Scsi_Host* %shost, %struct.scsi_cmnd* %cmd) #2 !dbg !6216 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !6115, metadata !DIExpression()), !dbg !6217
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6122, metadata !DIExpression()), !dbg !6219
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6124, metadata !DIExpression()), !dbg !6220
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %irq_flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !6227, metadata !DIExpression()), !dbg !6228
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6229, metadata !DIExpression()), !dbg !6228
  call void @llvm.dbg.declare(metadata i64* %irq_flags, metadata !6230, metadata !DIExpression()), !dbg !6228
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6231, metadata !DIExpression()), !dbg !6228
  br label %do.body, !dbg !6228

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6232

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6233, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6236, metadata !DIExpression()), !dbg !6235
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6235
  %conv = zext i1 %cmp to i32, !dbg !6235
  store i32 1, i32* %tmp, align 4, !dbg !6235
  %0 = load i32, i32* %tmp, align 4, !dbg !6235
  br label %do.body2, !dbg !6237

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6238

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6239

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6241, metadata !DIExpression()), !dbg !6244
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6245, metadata !DIExpression()), !dbg !6244
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6244
  %conv8 = zext i1 %cmp7 to i32, !dbg !6244
  store i32 1, i32* %tmp9, align 4, !dbg !6244
  %1 = load i32, i32* %tmp9, align 4, !dbg !6244
  %call = call i64 @arch_local_irq_save() #11, !dbg !6246
  store i64 %call, i64* %irq_flags, align 8, !dbg !6246
  br label %do.end, !dbg !6246

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6239

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6238

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6247, !srcloc !6248
  br label %do.body12, !dbg !6247

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6249
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 4, !dbg !6249
  %3 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !6249
  store %struct.spinlock* %3, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6250
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !6251
  %rlock.i = bitcast %union.anon.2* %5 to %struct.raw_spinlock*, !dbg !6251
  br label %do.end14, !dbg !6249

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6247

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6238

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6237

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6232

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6228
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6228
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 21, !dbg !6228
  %8 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !6228
  %call19 = call i32 @dc395x_queue_command_lck(%struct.scsi_cmnd* %6, void (%struct.scsi_cmnd*)* %8) #11, !dbg !6228
  store i32 %call19, i32* %rc, align 4, !dbg !6228
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !6228
  %host_lock20 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 4, !dbg !6228
  %10 = load %struct.spinlock*, %struct.spinlock** %host_lock20, align 8, !dbg !6228
  %11 = load i64, i64* %irq_flags, align 8, !dbg !6228
  store %struct.spinlock* %10, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !216, metadata !6182, metadata !DIExpression()) #6, !dbg !6252
  call void @llvm.dbg.declare(metadata !216, metadata !6186, metadata !DIExpression()) #6, !dbg !6252
  store i32 1, i32* %tmp.i, align 4, !dbg !6252
  %12 = load i32, i32* %tmp.i, align 4, !dbg !6252
  call void @llvm.dbg.declare(metadata !216, metadata !6187, metadata !DIExpression()) #6, !dbg !6253
  call void @llvm.dbg.declare(metadata !216, metadata !6193, metadata !DIExpression()) #6, !dbg !6253
  store i32 1, i32* %tmp8.i, align 4, !dbg !6253
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !6253
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !6254
  call void @arch_local_irq_restore(i64 %14) #13, !dbg !6254
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6255, !srcloc !6197
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !6256
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !6256
  %rlock.i22 = bitcast %union.anon.2* %16 to %struct.raw_spinlock*, !dbg !6256
  %17 = load i32, i32* %rc, align 4, !dbg !6228
  ret i32 %17, !dbg !6228
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dc395x_eh_abort(%struct.scsi_cmnd* %cmd) #2 !dbg !6257 {
entry:
  %retval = alloca i32, align 4
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %acb = alloca %struct.AdapterCtlBlk*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %srb = alloca %struct.ScsiReqBlk*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6258, metadata !DIExpression()), !dbg !6259
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb, metadata !6260, metadata !DIExpression()), !dbg !6261
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6262
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !6263
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !6263
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !6264
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6264
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 51, !dbg !6265
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !6262
  %3 = bitcast i64* %arraydecay to %struct.AdapterCtlBlk*, !dbg !6266
  store %struct.AdapterCtlBlk* %3, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6261
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !6267, metadata !DIExpression()), !dbg !6268
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb, metadata !6269, metadata !DIExpression()), !dbg !6270
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6271
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6271
  %device1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 1, !dbg !6271
  %6 = load %struct.scsi_device*, %struct.scsi_device** %device1, align 8, !dbg !6271
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 16, !dbg !6271
  %7 = load i32, i32* %id, align 8, !dbg !6271
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6271
  %device2 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %8, i32 0, i32 1, !dbg !6271
  %9 = load %struct.scsi_device*, %struct.scsi_device** %device2, align 8, !dbg !6271
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %9, i32 0, i32 18, !dbg !6271
  %10 = load i64, i64* %lun, align 8, !dbg !6271
  %conv = trunc i64 %10 to i8, !dbg !6271
  %conv3 = zext i8 %conv to i32, !dbg !6271
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6271
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i64 0, i64 0), %struct.scsi_cmnd* %4, i32 %7, i32 %conv3, %struct.scsi_cmnd* %11) #12, !dbg !6271
  %12 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6272
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6273
  %device4 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %13, i32 0, i32 1, !dbg !6274
  %14 = load %struct.scsi_device*, %struct.scsi_device** %device4, align 8, !dbg !6274
  %id5 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %14, i32 0, i32 16, !dbg !6275
  %15 = load i32, i32* %id5, align 8, !dbg !6275
  %conv6 = trunc i32 %15 to i8, !dbg !6273
  %16 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6276
  %device7 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %16, i32 0, i32 1, !dbg !6277
  %17 = load %struct.scsi_device*, %struct.scsi_device** %device7, align 8, !dbg !6277
  %lun8 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %17, i32 0, i32 18, !dbg !6278
  %18 = load i64, i64* %lun8, align 8, !dbg !6278
  %conv9 = trunc i64 %18 to i8, !dbg !6276
  %call10 = call %struct.DeviceCtlBlk* @find_dcb(%struct.AdapterCtlBlk* %12, i8 zeroext %conv6, i8 zeroext %conv9) #11, !dbg !6279
  store %struct.DeviceCtlBlk* %call10, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6280
  %19 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6281
  %tobool = icmp ne %struct.DeviceCtlBlk* %19, null, !dbg !6281
  br i1 %tobool, label %if.end, label %if.then, !dbg !6283

if.then:                                          ; preds = %entry
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.20, i64 0, i64 0)) #12, !dbg !6284
  store i32 8195, i32* %retval, align 4, !dbg !6286
  br label %return, !dbg !6286

if.end:                                           ; preds = %entry
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6287
  %21 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6288
  %srb_waiting_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %21, i32 0, i32 3, !dbg !6289
  %call12 = call %struct.ScsiReqBlk* @find_cmd(%struct.scsi_cmnd* %20, %struct.list_head* %srb_waiting_list) #11, !dbg !6290
  store %struct.ScsiReqBlk* %call12, %struct.ScsiReqBlk** %srb, align 8, !dbg !6291
  %22 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6292
  %tobool13 = icmp ne %struct.ScsiReqBlk* %22, null, !dbg !6292
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !6294

if.then14:                                        ; preds = %if.end
  %23 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6295
  %list = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %23, i32 0, i32 0, !dbg !6297
  call void @list_del(%struct.list_head* %list) #11, !dbg !6298
  %24 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6299
  %25 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6300
  call void @pci_unmap_srb_sense(%struct.AdapterCtlBlk* %24, %struct.ScsiReqBlk* %25) #11, !dbg !6301
  %26 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6302
  %27 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6303
  call void @pci_unmap_srb(%struct.AdapterCtlBlk* %26, %struct.ScsiReqBlk* %27) #11, !dbg !6304
  %28 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6305
  %29 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6306
  call void @free_tag(%struct.DeviceCtlBlk* %28, %struct.ScsiReqBlk* %29) #11, !dbg !6307
  %30 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6308
  %list15 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %30, i32 0, i32 0, !dbg !6309
  %31 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6310
  %srb_free_list = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %31, i32 0, i32 6, !dbg !6311
  call void @list_add_tail(%struct.list_head* %list15, %struct.list_head* %srb_free_list) #11, !dbg !6312
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.21, i64 0, i64 0)) #12, !dbg !6313
  %32 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6314
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %32, i32 0, i32 24, !dbg !6315
  store i32 327680, i32* %result, align 8, !dbg !6316
  store i32 8194, i32* %retval, align 4, !dbg !6317
  br label %return, !dbg !6317

if.end17:                                         ; preds = %if.end
  %33 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6318
  %34 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6319
  %srb_going_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %34, i32 0, i32 2, !dbg !6320
  %call18 = call %struct.ScsiReqBlk* @find_cmd(%struct.scsi_cmnd* %33, %struct.list_head* %srb_going_list) #11, !dbg !6321
  store %struct.ScsiReqBlk* %call18, %struct.ScsiReqBlk** %srb, align 8, !dbg !6322
  %35 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6323
  %tobool19 = icmp ne %struct.ScsiReqBlk* %35, null, !dbg !6323
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !6325

if.then20:                                        ; preds = %if.end17
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #12, !dbg !6326
  br label %if.end23, !dbg !6328

if.else:                                          ; preds = %if.end17
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0)) #12, !dbg !6329
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then20
  store i32 8195, i32* %retval, align 4, !dbg !6331
  br label %return, !dbg !6331

return:                                           ; preds = %if.end23, %if.then14, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !6332
  ret i32 %36, !dbg !6332
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dc395x_eh_bus_reset(%struct.scsi_cmnd* %cmd) #2 !dbg !6333 {
entry:
  %lock.addr.i4 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i4, metadata !6334, metadata !DIExpression()), !dbg !6338
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6340, metadata !DIExpression()), !dbg !6342
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %rc = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6344, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6346, metadata !DIExpression()), !dbg !6347
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6348
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !6349
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !6349
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !6350
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6350
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 4, !dbg !6351
  %3 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !6351
  store %struct.spinlock* %3, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !6352
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6355, !srcloc !6357
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6358
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !6358
  %rlock.i = bitcast %union.anon.2* %5 to %struct.raw_spinlock*, !dbg !6358
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6360
  %call = call i32 @__dc395x_eh_bus_reset(%struct.scsi_cmnd* %6) #11, !dbg !6361
  store i32 %call, i32* %rc, align 4, !dbg !6362
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6363
  %device1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 1, !dbg !6364
  %8 = load %struct.scsi_device*, %struct.scsi_device** %device1, align 8, !dbg !6364
  %host2 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 0, !dbg !6365
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host2, align 8, !dbg !6365
  %host_lock3 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 4, !dbg !6366
  %10 = load %struct.spinlock*, %struct.spinlock** %host_lock3, align 8, !dbg !6366
  store %struct.spinlock* %10, %struct.spinlock** %lock.addr.i4, align 8
  call void @arch_local_irq_enable() #13, !dbg !6367
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6370, !srcloc !6372
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i4, align 8, !dbg !6373
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !6373
  %rlock.i5 = bitcast %union.anon.2* %12 to %struct.raw_spinlock*, !dbg !6373
  %13 = load i32, i32* %rc, align 4, !dbg !6375
  ret i32 %13, !dbg !6376
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dc395x_slave_alloc(%struct.scsi_device* %scsi_device) #2 !dbg !6377 {
entry:
  %retval = alloca i32, align 4
  %scsi_device.addr = alloca %struct.scsi_device*, align 8
  %acb = alloca %struct.AdapterCtlBlk*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.scsi_device* %scsi_device, %struct.scsi_device** %scsi_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %scsi_device.addr, metadata !6378, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb, metadata !6380, metadata !DIExpression()), !dbg !6381
  %0 = load %struct.scsi_device*, %struct.scsi_device** %scsi_device.addr, align 8, !dbg !6382
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !6383
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6383
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %1, i32 0, i32 51, !dbg !6384
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !6382
  %2 = bitcast i64* %arraydecay to %struct.AdapterCtlBlk*, !dbg !6385
  store %struct.AdapterCtlBlk* %2, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6381
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !6386, metadata !DIExpression()), !dbg !6387
  %3 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6388
  %4 = load %struct.scsi_device*, %struct.scsi_device** %scsi_device.addr, align 8, !dbg !6389
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 16, !dbg !6390
  %5 = load i32, i32* %id, align 8, !dbg !6390
  %conv = trunc i32 %5 to i8, !dbg !6389
  %6 = load %struct.scsi_device*, %struct.scsi_device** %scsi_device.addr, align 8, !dbg !6391
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 18, !dbg !6392
  %7 = load i64, i64* %lun, align 8, !dbg !6392
  %conv1 = trunc i64 %7 to i8, !dbg !6391
  %call = call %struct.DeviceCtlBlk* @device_alloc(%struct.AdapterCtlBlk* %3, i8 zeroext %conv, i8 zeroext %conv1) #11, !dbg !6393
  store %struct.DeviceCtlBlk* %call, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6394
  %8 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6395
  %tobool = icmp ne %struct.DeviceCtlBlk* %8, null, !dbg !6395
  br i1 %tobool, label %if.end, label %if.then, !dbg !6397

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !6398
  br label %return, !dbg !6398

if.end:                                           ; preds = %entry
  %9 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6399
  %10 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6400
  call void @adapter_add_device(%struct.AdapterCtlBlk* %9, %struct.DeviceCtlBlk* %10) #11, !dbg !6401
  store i32 0, i32* %retval, align 4, !dbg !6402
  br label %return, !dbg !6402

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !6403
  ret i32 %11, !dbg !6403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dc395x_slave_destroy(%struct.scsi_device* %scsi_device) #2 !dbg !6404 {
entry:
  %scsi_device.addr = alloca %struct.scsi_device*, align 8
  %acb = alloca %struct.AdapterCtlBlk*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.scsi_device* %scsi_device, %struct.scsi_device** %scsi_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %scsi_device.addr, metadata !6405, metadata !DIExpression()), !dbg !6406
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb, metadata !6407, metadata !DIExpression()), !dbg !6408
  %0 = load %struct.scsi_device*, %struct.scsi_device** %scsi_device.addr, align 8, !dbg !6409
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !6410
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6410
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %1, i32 0, i32 51, !dbg !6411
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !6409
  %2 = bitcast i64* %arraydecay to %struct.AdapterCtlBlk*, !dbg !6412
  store %struct.AdapterCtlBlk* %2, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6408
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !6413, metadata !DIExpression()), !dbg !6414
  %3 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6415
  %4 = load %struct.scsi_device*, %struct.scsi_device** %scsi_device.addr, align 8, !dbg !6416
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %4, i32 0, i32 16, !dbg !6417
  %5 = load i32, i32* %id, align 8, !dbg !6417
  %conv = trunc i32 %5 to i8, !dbg !6416
  %6 = load %struct.scsi_device*, %struct.scsi_device** %scsi_device.addr, align 8, !dbg !6418
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 18, !dbg !6419
  %7 = load i64, i64* %lun, align 8, !dbg !6419
  %conv1 = trunc i64 %7 to i8, !dbg !6418
  %call = call %struct.DeviceCtlBlk* @find_dcb(%struct.AdapterCtlBlk* %3, i8 zeroext %conv, i8 zeroext %conv1) #11, !dbg !6420
  store %struct.DeviceCtlBlk* %call, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6414
  %8 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6421
  %tobool = icmp ne %struct.DeviceCtlBlk* %8, null, !dbg !6421
  br i1 %tobool, label %if.then, label %if.end, !dbg !6423

if.then:                                          ; preds = %entry
  %9 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6424
  %10 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6425
  call void @adapter_remove_and_free_device(%struct.AdapterCtlBlk* %9, %struct.DeviceCtlBlk* %10) #11, !dbg !6426
  br label %if.end, !dbg !6426

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6427
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dc395x_show_info(%struct.seq_file* %m, %struct.Scsi_Host* %host) #2 !dbg !6428 {
entry:
  %lock.addr.i212 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i212, metadata !6115, metadata !DIExpression()), !dbg !6429
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6122, metadata !DIExpression()), !dbg !6431
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6124, metadata !DIExpression()), !dbg !6432
  %m.addr = alloca %struct.seq_file*, align 8
  %host.addr = alloca %struct.Scsi_Host*, align 8
  %acb = alloca %struct.AdapterCtlBlk*, align 8
  %spd = alloca i32, align 4
  %spd1 = alloca i32, align 4
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %flags = alloca i64, align 8
  %dev = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp33 = alloca %struct.DeviceCtlBlk*, align 8
  %nego_period = alloca i32, align 4
  %__mptr100 = alloca i8*, align 8
  %tmp105 = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr112 = alloca i8*, align 8
  %tmp117 = alloca %struct.DeviceCtlBlk*, align 8
  %srb = alloca %struct.ScsiReqBlk*, align 8
  %__mptr136 = alloca i8*, align 8
  %tmp141 = alloca %struct.ScsiReqBlk*, align 8
  %__mptr151 = alloca i8*, align 8
  %tmp156 = alloca %struct.ScsiReqBlk*, align 8
  %__mptr169 = alloca i8*, align 8
  %tmp174 = alloca %struct.ScsiReqBlk*, align 8
  %__mptr185 = alloca i8*, align 8
  %tmp190 = alloca %struct.ScsiReqBlk*, align 8
  %__mptr202 = alloca i8*, align 8
  %tmp207 = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !6439, metadata !DIExpression()), !dbg !6440
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !6441, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb, metadata !6443, metadata !DIExpression()), !dbg !6444
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !6445
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 51, !dbg !6446
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !6445
  %1 = bitcast i64* %arraydecay to %struct.AdapterCtlBlk*, !dbg !6447
  store %struct.AdapterCtlBlk* %1, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6444
  call void @llvm.dbg.declare(metadata i32* %spd, metadata !6448, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.declare(metadata i32* %spd1, metadata !6450, metadata !DIExpression()), !dbg !6451
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !6452, metadata !DIExpression()), !dbg !6453
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6454, metadata !DIExpression()), !dbg !6455
  call void @llvm.dbg.declare(metadata i32* %dev, metadata !6456, metadata !DIExpression()), !dbg !6457
  %2 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6458
  call void @seq_puts(%struct.seq_file* %2, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.34, i64 0, i64 0)) #11, !dbg !6459
  br label %do.body, !dbg !6460

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6461

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6462, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6465, metadata !DIExpression()), !dbg !6464
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6464
  %conv = zext i1 %cmp to i32, !dbg !6464
  store i32 1, i32* %tmp, align 4, !dbg !6464
  %3 = load i32, i32* %tmp, align 4, !dbg !6464
  br label %do.body2, !dbg !6466

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6467

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6468

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6470, metadata !DIExpression()), !dbg !6473
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6474, metadata !DIExpression()), !dbg !6473
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6473
  %conv8 = zext i1 %cmp7 to i32, !dbg !6473
  store i32 1, i32* %tmp9, align 4, !dbg !6473
  %4 = load i32, i32* %tmp9, align 4, !dbg !6473
  %call = call i64 @arch_local_irq_save() #11, !dbg !6475
  store i64 %call, i64* %flags, align 8, !dbg !6475
  br label %do.end, !dbg !6475

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6468

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6467

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6476, !srcloc !6477
  br label %do.body12, !dbg !6476

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6478
  %scsi_host = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %5, i32 0, i32 0, !dbg !6478
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !6478
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %6, i32 0, i32 4, !dbg !6478
  %7 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !6478
  store %struct.spinlock* %7, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6479
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !6480
  %rlock.i = bitcast %union.anon.2* %9 to %struct.raw_spinlock*, !dbg !6480
  br label %do.end14, !dbg !6478

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6476

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6467

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6466

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6461

do.end18:                                         ; preds = %do.end17
  %10 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6481
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !6482
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %11, i32 0, i32 16, !dbg !6483
  %12 = load i32, i32* %host_no, align 4, !dbg !6483
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i64 0, i64 0), i32 %12) #11, !dbg !6484
  %13 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6485
  %14 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6486
  %config = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %14, i32 0, i32 17, !dbg !6487
  %15 = load i8, i8* %config, align 1, !dbg !6487
  %conv19 = zext i8 %15 to i32, !dbg !6486
  %and = and i32 %conv19, 32, !dbg !6488
  %tobool = icmp ne i32 %and, 0, !dbg !6489
  %16 = zext i1 %tobool to i64, !dbg !6489
  %cond = select i1 %tobool, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38, i64 0, i64 0), !dbg !6489
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %13, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i64 0, i64 0), i8* %cond) #11, !dbg !6490
  %17 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6491
  %18 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6492
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %18, i32 0, i32 1, !dbg !6493
  %19 = load i64, i64* %io_port_base, align 8, !dbg !6493
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %17, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0), i64 %19) #11, !dbg !6494
  %20 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6495
  %21 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6496
  %irq_level = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %21, i32 0, i32 13, !dbg !6497
  %22 = load i32, i32* %irq_level, align 4, !dbg !6497
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %20, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40, i64 0, i64 0), i32 %22) #11, !dbg !6498
  %23 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6499
  %24 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6500
  %sel_timeout = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %24, i32 0, i32 12, !dbg !6501
  %25 = load i8, i8* %sel_timeout, align 2, !dbg !6501
  %conv20 = zext i8 %25 to i32, !dbg !6500
  %mul = mul i32 1638, %conv20, !dbg !6502
  %div = sdiv i32 %mul, 1000, !dbg !6503
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %23, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0), i32 %div) #11, !dbg !6504
  %26 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6505
  %27 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !6506
  %max_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %27, i32 0, i32 20, !dbg !6507
  %28 = load i32, i32* %max_id, align 4, !dbg !6507
  %29 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !6508
  %max_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %29, i32 0, i32 21, !dbg !6509
  %30 = load i64, i64* %max_lun, align 8, !dbg !6509
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %26, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.42, i64 0, i64 0), i32 %28, i64 %30) #11, !dbg !6510
  %31 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6511
  %32 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !6512
  %this_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %32, i32 0, i32 24, !dbg !6513
  %33 = load i32, i32* %this_id, align 8, !dbg !6513
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %31, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i64 0, i64 0), i32 %33) #11, !dbg !6514
  %34 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6515
  %35 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6516
  %tag_max_num = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %35, i32 0, i32 14, !dbg !6517
  %36 = load i8, i8* %tag_max_num, align 8, !dbg !6517
  %conv21 = zext i8 %36 to i32, !dbg !6516
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %34, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i64 0, i64 0), i32 %conv21) #11, !dbg !6518
  %37 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6519
  %38 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6520
  %io_port_base22 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %38, i32 0, i32 1, !dbg !6520
  %39 = load i64, i64* %io_port_base22, align 8, !dbg !6520
  %add = add i64 %39, 142, !dbg !6520
  %conv23 = trunc i64 %add to i32, !dbg !6520
  %call24 = call zeroext i8 @inb(i32 %conv23) #11, !dbg !6520
  %conv25 = zext i8 %call24 to i32, !dbg !6520
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %37, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i64 0, i64 0), i32 %conv25) #11, !dbg !6521
  %40 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6522
  %41 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6523
  %eeprom = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %41, i32 0, i32 27, !dbg !6524
  %delay_time = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %eeprom, i32 0, i32 9, !dbg !6525
  %42 = load i8, i8* %delay_time, align 4, !dbg !6525
  %conv26 = zext i8 %42 to i32, !dbg !6523
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %40, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.46, i64 0, i64 0), i32 %conv26) #11, !dbg !6526
  %43 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6527
  %44 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6528
  %dcb_list = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %44, i32 0, i32 3, !dbg !6529
  %call27 = call i32 @list_size(%struct.list_head* %dcb_list) #11, !dbg !6530
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %43, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.47, i64 0, i64 0), i32 %call27) #11, !dbg !6531
  %45 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6532
  %46 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6533
  %dcb_map = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %46, i32 0, i32 21, !dbg !6534
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %dcb_map, i64 0, i64 0, !dbg !6533
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %45, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i64 0, i64 0), i8* %arrayidx) #11, !dbg !6535
  %47 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6536
  %48 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6537
  %dcb_map28 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %48, i32 0, i32 21, !dbg !6538
  %arrayidx29 = getelementptr [16 x i8], [16 x i8]* %dcb_map28, i64 0, i64 8, !dbg !6537
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %47, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0), i8* %arrayidx29) #11, !dbg !6539
  %49 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6540
  call void @seq_puts(%struct.seq_file* %49, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.50, i64 0, i64 0)) #11, !dbg !6541
  store i32 0, i32* %dev, align 4, !dbg !6542
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6543, metadata !DIExpression()), !dbg !6546
  %50 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6546
  %dcb_list30 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %50, i32 0, i32 3, !dbg !6546
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %dcb_list30, i32 0, i32 0, !dbg !6546
  %51 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6546
  %52 = bitcast %struct.list_head* %51 to i8*, !dbg !6546
  store i8* %52, i8** %__mptr, align 8, !dbg !6546
  br label %do.body31, !dbg !6546

do.body31:                                        ; preds = %do.end18
  br label %do.end32, !dbg !6547

do.end32:                                         ; preds = %do.body31
  %53 = load i8*, i8** %__mptr, align 8, !dbg !6546
  %add.ptr = getelementptr i8, i8* %53, i64 0, !dbg !6546
  %54 = bitcast i8* %add.ptr to %struct.DeviceCtlBlk*, !dbg !6546
  store %struct.DeviceCtlBlk* %54, %struct.DeviceCtlBlk** %tmp33, align 8, !dbg !6547
  %55 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp33, align 8, !dbg !6546
  store %struct.DeviceCtlBlk* %55, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6549
  br label %for.cond, !dbg !6549

for.cond:                                         ; preds = %do.end104, %do.end32
  %56 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6550
  %list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %56, i32 0, i32 0, !dbg !6550
  %57 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6550
  %dcb_list34 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %57, i32 0, i32 3, !dbg !6550
  %cmp35 = icmp eq %struct.list_head* %list, %dcb_list34, !dbg !6550
  %lnot = xor i1 %cmp35, true, !dbg !6550
  br i1 %lnot, label %for.body, label %for.end, !dbg !6549

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %nego_period, metadata !6552, metadata !DIExpression()), !dbg !6554
  %58 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6555
  %59 = load i32, i32* %dev, align 4, !dbg !6556
  %60 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6557
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %60, i32 0, i32 7, !dbg !6558
  %61 = load i8, i8* %target_id, align 2, !dbg !6558
  %conv37 = zext i8 %61 to i32, !dbg !6557
  %62 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6559
  %target_lun = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %62, i32 0, i32 8, !dbg !6560
  %63 = load i8, i8* %target_lun, align 1, !dbg !6560
  %conv38 = zext i8 %63 to i32, !dbg !6559
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %58, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.51, i64 0, i64 0), i32 %59, i32 %conv37, i32 %conv38) #11, !dbg !6561
  %64 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6562
  %dev_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %64, i32 0, i32 10, !dbg !6562
  %65 = load i8, i8* %dev_mode, align 1, !dbg !6562
  %conv39 = zext i8 %65 to i32, !dbg !6562
  %and40 = and i32 %conv39, 1, !dbg !6562
  %tobool41 = icmp ne i32 %and40, 0, !dbg !6562
  br i1 %tobool41, label %if.then, label %if.else, !dbg !6564

if.then:                                          ; preds = %for.body
  %66 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6562
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %66, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0)) #11, !dbg !6562
  br label %if.end, !dbg !6562

if.else:                                          ; preds = %for.body
  %67 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6562
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %67, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0)) #11, !dbg !6562
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %68 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6565
  %sync_offset = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %68, i32 0, i32 15, !dbg !6565
  %69 = load i8, i8* %sync_offset, align 2, !dbg !6565
  %tobool42 = icmp ne i8 %69, 0, !dbg !6565
  br i1 %tobool42, label %if.then43, label %if.else44, !dbg !6567

if.then43:                                        ; preds = %if.end
  %70 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6565
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %70, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0)) #11, !dbg !6565
  br label %if.end45, !dbg !6565

if.else44:                                        ; preds = %if.end
  %71 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6565
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0)) #11, !dbg !6565
  br label %if.end45

if.end45:                                         ; preds = %if.else44, %if.then43
  %72 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6568
  %sync_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %72, i32 0, i32 14, !dbg !6568
  %73 = load i8, i8* %sync_period, align 1, !dbg !6568
  %conv46 = zext i8 %73 to i32, !dbg !6568
  %and47 = and i32 %conv46, 16, !dbg !6568
  %tobool48 = icmp ne i32 %and47, 0, !dbg !6568
  br i1 %tobool48, label %if.then49, label %if.else50, !dbg !6570

if.then49:                                        ; preds = %if.end45
  %74 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6568
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %74, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0)) #11, !dbg !6568
  br label %if.end51, !dbg !6568

if.else50:                                        ; preds = %if.end45
  %75 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6568
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %75, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0)) #11, !dbg !6568
  br label %if.end51

if.end51:                                         ; preds = %if.else50, %if.then49
  %76 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6571
  %dev_mode52 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %76, i32 0, i32 10, !dbg !6571
  %77 = load i8, i8* %dev_mode52, align 1, !dbg !6571
  %conv53 = zext i8 %77 to i32, !dbg !6571
  %and54 = and i32 %conv53, 4, !dbg !6571
  %tobool55 = icmp ne i32 %and54, 0, !dbg !6571
  br i1 %tobool55, label %if.then56, label %if.else57, !dbg !6573

if.then56:                                        ; preds = %if.end51
  %78 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6571
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %78, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0)) #11, !dbg !6571
  br label %if.end58, !dbg !6571

if.else57:                                        ; preds = %if.end51
  %79 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6571
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %79, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0)) #11, !dbg !6571
  br label %if.end58

if.end58:                                         ; preds = %if.else57, %if.then56
  %80 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6574
  %dev_mode59 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %80, i32 0, i32 10, !dbg !6574
  %81 = load i8, i8* %dev_mode59, align 1, !dbg !6574
  %conv60 = zext i8 %81 to i32, !dbg !6574
  %and61 = and i32 %conv60, 8, !dbg !6574
  %tobool62 = icmp ne i32 %and61, 0, !dbg !6574
  br i1 %tobool62, label %if.then63, label %if.else64, !dbg !6576

if.then63:                                        ; preds = %if.end58
  %82 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6574
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %82, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0)) #11, !dbg !6574
  br label %if.end65, !dbg !6574

if.else64:                                        ; preds = %if.end58
  %83 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6574
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %83, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0)) #11, !dbg !6574
  br label %if.end65

if.end65:                                         ; preds = %if.else64, %if.then63
  %84 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6577
  %sync_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %84, i32 0, i32 12, !dbg !6577
  %85 = load i8, i8* %sync_mode, align 1, !dbg !6577
  %conv66 = zext i8 %85 to i32, !dbg !6577
  %and67 = and i32 %conv66, 32, !dbg !6577
  %tobool68 = icmp ne i32 %and67, 0, !dbg !6577
  br i1 %tobool68, label %if.then69, label %if.else70, !dbg !6579

if.then69:                                        ; preds = %if.end65
  %86 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6577
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %86, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0)) #11, !dbg !6577
  br label %if.end71, !dbg !6577

if.else70:                                        ; preds = %if.end65
  %87 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6577
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %87, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0)) #11, !dbg !6577
  br label %if.end71

if.end71:                                         ; preds = %if.else70, %if.then69
  %88 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6580
  %sync_period72 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %88, i32 0, i32 14, !dbg !6581
  %89 = load i8, i8* %sync_period72, align 1, !dbg !6581
  %conv73 = zext i8 %89 to i32, !dbg !6580
  %and74 = and i32 %conv73, 7, !dbg !6582
  %idxprom = sext i32 %and74 to i64, !dbg !6583
  %arrayidx75 = getelementptr [8 x i8], [8 x i8]* @clock_period, i64 0, i64 %idxprom, !dbg !6583
  %90 = load i8, i8* %arrayidx75, align 1, !dbg !6583
  %conv76 = zext i8 %90 to i32, !dbg !6583
  %shl = shl i32 %conv76, 2, !dbg !6584
  store i32 %shl, i32* %nego_period, align 4, !dbg !6585
  %91 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6586
  %sync_offset77 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %91, i32 0, i32 15, !dbg !6588
  %92 = load i8, i8* %sync_offset77, align 2, !dbg !6588
  %tobool78 = icmp ne i8 %92, 0, !dbg !6586
  br i1 %tobool78, label %if.then79, label %if.else80, !dbg !6589

if.then79:                                        ; preds = %if.end71
  %93 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6590
  %94 = load i32, i32* %nego_period, align 4, !dbg !6591
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %93, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0), i32 %94) #11, !dbg !6592
  br label %if.end83, !dbg !6592

if.else80:                                        ; preds = %if.end71
  %95 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6593
  %96 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6594
  %min_nego_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %96, i32 0, i32 13, !dbg !6595
  %97 = load i8, i8* %min_nego_period, align 4, !dbg !6595
  %conv81 = zext i8 %97 to i32, !dbg !6594
  %shl82 = shl i32 %conv81, 2, !dbg !6596
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %95, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i64 0, i64 0), i32 %shl82) #11, !dbg !6597
  br label %if.end83

if.end83:                                         ; preds = %if.else80, %if.then79
  %98 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6598
  %sync_offset84 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %98, i32 0, i32 15, !dbg !6600
  %99 = load i8, i8* %sync_offset84, align 2, !dbg !6600
  %conv85 = zext i8 %99 to i32, !dbg !6598
  %and86 = and i32 %conv85, 15, !dbg !6601
  %tobool87 = icmp ne i32 %and86, 0, !dbg !6601
  br i1 %tobool87, label %if.then88, label %if.else97, !dbg !6602

if.then88:                                        ; preds = %if.end83
  %100 = load i32, i32* %nego_period, align 4, !dbg !6603
  %div89 = sdiv i32 1000, %100, !dbg !6605
  store i32 %div89, i32* %spd, align 4, !dbg !6606
  %101 = load i32, i32* %nego_period, align 4, !dbg !6607
  %rem = srem i32 1000, %101, !dbg !6608
  store i32 %rem, i32* %spd1, align 4, !dbg !6609
  %102 = load i32, i32* %spd1, align 4, !dbg !6610
  %mul90 = mul i32 %102, 10, !dbg !6611
  %103 = load i32, i32* %nego_period, align 4, !dbg !6612
  %div91 = sdiv i32 %103, 2, !dbg !6613
  %add92 = add i32 %mul90, %div91, !dbg !6614
  %104 = load i32, i32* %nego_period, align 4, !dbg !6615
  %div93 = sdiv i32 %add92, %104, !dbg !6616
  store i32 %div93, i32* %spd1, align 4, !dbg !6617
  %105 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6618
  %106 = load i32, i32* %spd, align 4, !dbg !6619
  %107 = load i32, i32* %spd1, align 4, !dbg !6620
  %108 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6621
  %sync_offset94 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %108, i32 0, i32 15, !dbg !6622
  %109 = load i8, i8* %sync_offset94, align 2, !dbg !6622
  %conv95 = zext i8 %109 to i32, !dbg !6621
  %and96 = and i32 %conv95, 15, !dbg !6623
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %105, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.56, i64 0, i64 0), i32 %106, i32 %107, i32 %and96) #11, !dbg !6624
  br label %if.end98, !dbg !6625

if.else97:                                        ; preds = %if.end83
  %110 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6626
  call void @seq_puts(%struct.seq_file* %110, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.57, i64 0, i64 0)) #11, !dbg !6627
  br label %if.end98

if.end98:                                         ; preds = %if.else97, %if.then88
  %111 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6628
  %112 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6629
  %max_command = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %112, i32 0, i32 6, !dbg !6630
  %113 = load i16, i16* %max_command, align 4, !dbg !6630
  %conv99 = zext i16 %113 to i32, !dbg !6629
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %111, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), i32 %conv99) #11, !dbg !6631
  %114 = load i32, i32* %dev, align 4, !dbg !6632
  %inc = add i32 %114, 1, !dbg !6632
  store i32 %inc, i32* %dev, align 4, !dbg !6632
  br label %for.inc, !dbg !6633

for.inc:                                          ; preds = %if.end98
  call void @llvm.dbg.declare(metadata i8** %__mptr100, metadata !6634, metadata !DIExpression()), !dbg !6636
  %115 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6636
  %list101 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %115, i32 0, i32 0, !dbg !6636
  %next102 = getelementptr inbounds %struct.list_head, %struct.list_head* %list101, i32 0, i32 0, !dbg !6636
  %116 = load %struct.list_head*, %struct.list_head** %next102, align 8, !dbg !6636
  %117 = bitcast %struct.list_head* %116 to i8*, !dbg !6636
  store i8* %117, i8** %__mptr100, align 8, !dbg !6636
  br label %do.body103, !dbg !6636

do.body103:                                       ; preds = %for.inc
  br label %do.end104, !dbg !6637

do.end104:                                        ; preds = %do.body103
  %118 = load i8*, i8** %__mptr100, align 8, !dbg !6636
  %add.ptr106 = getelementptr i8, i8* %118, i64 0, !dbg !6636
  %119 = bitcast i8* %add.ptr106 to %struct.DeviceCtlBlk*, !dbg !6636
  store %struct.DeviceCtlBlk* %119, %struct.DeviceCtlBlk** %tmp105, align 8, !dbg !6637
  %120 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp105, align 8, !dbg !6636
  store %struct.DeviceCtlBlk* %120, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6550
  br label %for.cond, !dbg !6550, !llvm.loop !6639

for.end:                                          ; preds = %for.cond
  %121 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6641
  %waiting_timer = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %121, i32 0, i32 8, !dbg !6643
  %call107 = call i32 @timer_pending(%struct.timer_list* %waiting_timer) #11, !dbg !6644
  %tobool108 = icmp ne i32 %call107, 0, !dbg !6644
  br i1 %tobool108, label %if.then109, label %if.else110, !dbg !6645

if.then109:                                       ; preds = %for.end
  %122 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6646
  call void @seq_puts(%struct.seq_file* %122, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.59, i64 0, i64 0)) #11, !dbg !6647
  br label %if.end111, !dbg !6647

if.else110:                                       ; preds = %for.end
  %123 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6648
  call void @seq_putc(%struct.seq_file* %123, i8 signext 10) #11, !dbg !6649
  br label %if.end111

if.end111:                                        ; preds = %if.else110, %if.then109
  call void @llvm.dbg.declare(metadata i8** %__mptr112, metadata !6650, metadata !DIExpression()), !dbg !6653
  %124 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6653
  %dcb_list113 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %124, i32 0, i32 3, !dbg !6653
  %next114 = getelementptr inbounds %struct.list_head, %struct.list_head* %dcb_list113, i32 0, i32 0, !dbg !6653
  %125 = load %struct.list_head*, %struct.list_head** %next114, align 8, !dbg !6653
  %126 = bitcast %struct.list_head* %125 to i8*, !dbg !6653
  store i8* %126, i8** %__mptr112, align 8, !dbg !6653
  br label %do.body115, !dbg !6653

do.body115:                                       ; preds = %if.end111
  br label %do.end116, !dbg !6654

do.end116:                                        ; preds = %do.body115
  %127 = load i8*, i8** %__mptr112, align 8, !dbg !6653
  %add.ptr118 = getelementptr i8, i8* %127, i64 0, !dbg !6653
  %128 = bitcast i8* %add.ptr118 to %struct.DeviceCtlBlk*, !dbg !6653
  store %struct.DeviceCtlBlk* %128, %struct.DeviceCtlBlk** %tmp117, align 8, !dbg !6654
  %129 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp117, align 8, !dbg !6653
  store %struct.DeviceCtlBlk* %129, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6656
  br label %for.cond119, !dbg !6656

for.cond119:                                      ; preds = %do.end206, %do.end116
  %130 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6657
  %list120 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %130, i32 0, i32 0, !dbg !6657
  %131 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6657
  %dcb_list121 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %131, i32 0, i32 3, !dbg !6657
  %cmp122 = icmp eq %struct.list_head* %list120, %dcb_list121, !dbg !6657
  %lnot124 = xor i1 %cmp122, true, !dbg !6657
  br i1 %lnot124, label %for.body125, label %for.end209, !dbg !6656

for.body125:                                      ; preds = %for.cond119
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb, metadata !6659, metadata !DIExpression()), !dbg !6661
  %132 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6662
  %srb_waiting_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %132, i32 0, i32 3, !dbg !6664
  %call126 = call i32 @list_empty(%struct.list_head* %srb_waiting_list) #11, !dbg !6665
  %tobool127 = icmp ne i32 %call126, 0, !dbg !6665
  br i1 %tobool127, label %if.end135, label %if.then128, !dbg !6666

if.then128:                                       ; preds = %for.body125
  %133 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6667
  %134 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6668
  %target_id129 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %134, i32 0, i32 7, !dbg !6669
  %135 = load i8, i8* %target_id129, align 2, !dbg !6669
  %conv130 = zext i8 %135 to i32, !dbg !6668
  %136 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6670
  %target_lun131 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %136, i32 0, i32 8, !dbg !6671
  %137 = load i8, i8* %target_lun131, align 1, !dbg !6671
  %conv132 = zext i8 %137 to i32, !dbg !6670
  %138 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6672
  %srb_waiting_list133 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %138, i32 0, i32 3, !dbg !6673
  %call134 = call i32 @list_size(%struct.list_head* %srb_waiting_list133) #11, !dbg !6674
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %133, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.60, i64 0, i64 0), i32 %conv130, i32 %conv132, i32 %call134) #11, !dbg !6675
  br label %if.end135, !dbg !6675

if.end135:                                        ; preds = %if.then128, %for.body125
  call void @llvm.dbg.declare(metadata i8** %__mptr136, metadata !6676, metadata !DIExpression()), !dbg !6679
  %139 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6679
  %srb_waiting_list137 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %139, i32 0, i32 3, !dbg !6679
  %next138 = getelementptr inbounds %struct.list_head, %struct.list_head* %srb_waiting_list137, i32 0, i32 0, !dbg !6679
  %140 = load %struct.list_head*, %struct.list_head** %next138, align 8, !dbg !6679
  %141 = bitcast %struct.list_head* %140 to i8*, !dbg !6679
  store i8* %141, i8** %__mptr136, align 8, !dbg !6679
  br label %do.body139, !dbg !6679

do.body139:                                       ; preds = %if.end135
  br label %do.end140, !dbg !6680

do.end140:                                        ; preds = %do.body139
  %142 = load i8*, i8** %__mptr136, align 8, !dbg !6679
  %add.ptr142 = getelementptr i8, i8* %142, i64 0, !dbg !6679
  %143 = bitcast i8* %add.ptr142 to %struct.ScsiReqBlk*, !dbg !6679
  store %struct.ScsiReqBlk* %143, %struct.ScsiReqBlk** %tmp141, align 8, !dbg !6680
  %144 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp141, align 8, !dbg !6679
  store %struct.ScsiReqBlk* %144, %struct.ScsiReqBlk** %srb, align 8, !dbg !6682
  br label %for.cond143, !dbg !6682

for.cond143:                                      ; preds = %do.end155, %do.end140
  %145 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6683
  %list144 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %145, i32 0, i32 0, !dbg !6683
  %146 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6683
  %srb_waiting_list145 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %146, i32 0, i32 3, !dbg !6683
  %cmp146 = icmp eq %struct.list_head* %list144, %srb_waiting_list145, !dbg !6683
  %lnot148 = xor i1 %cmp146, true, !dbg !6683
  br i1 %lnot148, label %for.body149, label %for.end158, !dbg !6682

for.body149:                                      ; preds = %for.cond143
  %147 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6685
  %148 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6686
  %cmd = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %148, i32 0, i32 2, !dbg !6687
  %149 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !6687
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %147, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i64 0, i64 0), %struct.scsi_cmnd* %149) #11, !dbg !6688
  br label %for.inc150, !dbg !6688

for.inc150:                                       ; preds = %for.body149
  call void @llvm.dbg.declare(metadata i8** %__mptr151, metadata !6689, metadata !DIExpression()), !dbg !6691
  %150 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6691
  %list152 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %150, i32 0, i32 0, !dbg !6691
  %next153 = getelementptr inbounds %struct.list_head, %struct.list_head* %list152, i32 0, i32 0, !dbg !6691
  %151 = load %struct.list_head*, %struct.list_head** %next153, align 8, !dbg !6691
  %152 = bitcast %struct.list_head* %151 to i8*, !dbg !6691
  store i8* %152, i8** %__mptr151, align 8, !dbg !6691
  br label %do.body154, !dbg !6691

do.body154:                                       ; preds = %for.inc150
  br label %do.end155, !dbg !6692

do.end155:                                        ; preds = %do.body154
  %153 = load i8*, i8** %__mptr151, align 8, !dbg !6691
  %add.ptr157 = getelementptr i8, i8* %153, i64 0, !dbg !6691
  %154 = bitcast i8* %add.ptr157 to %struct.ScsiReqBlk*, !dbg !6691
  store %struct.ScsiReqBlk* %154, %struct.ScsiReqBlk** %tmp156, align 8, !dbg !6692
  %155 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp156, align 8, !dbg !6691
  store %struct.ScsiReqBlk* %155, %struct.ScsiReqBlk** %srb, align 8, !dbg !6683
  br label %for.cond143, !dbg !6683, !llvm.loop !6694

for.end158:                                       ; preds = %for.cond143
  %156 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6696
  %srb_going_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %156, i32 0, i32 2, !dbg !6698
  %call159 = call i32 @list_empty(%struct.list_head* %srb_going_list) #11, !dbg !6699
  %tobool160 = icmp ne i32 %call159, 0, !dbg !6699
  br i1 %tobool160, label %if.end168, label %if.then161, !dbg !6700

if.then161:                                       ; preds = %for.end158
  %157 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6701
  %158 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6702
  %target_id162 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %158, i32 0, i32 7, !dbg !6703
  %159 = load i8, i8* %target_id162, align 2, !dbg !6703
  %conv163 = zext i8 %159 to i32, !dbg !6702
  %160 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6704
  %target_lun164 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %160, i32 0, i32 8, !dbg !6705
  %161 = load i8, i8* %target_lun164, align 1, !dbg !6705
  %conv165 = zext i8 %161 to i32, !dbg !6704
  %162 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6706
  %srb_going_list166 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %162, i32 0, i32 2, !dbg !6707
  %call167 = call i32 @list_size(%struct.list_head* %srb_going_list166) #11, !dbg !6708
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %157, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i64 0, i64 0), i32 %conv163, i32 %conv165, i32 %call167) #11, !dbg !6709
  br label %if.end168, !dbg !6709

if.end168:                                        ; preds = %if.then161, %for.end158
  call void @llvm.dbg.declare(metadata i8** %__mptr169, metadata !6710, metadata !DIExpression()), !dbg !6713
  %163 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6713
  %srb_going_list170 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %163, i32 0, i32 2, !dbg !6713
  %next171 = getelementptr inbounds %struct.list_head, %struct.list_head* %srb_going_list170, i32 0, i32 0, !dbg !6713
  %164 = load %struct.list_head*, %struct.list_head** %next171, align 8, !dbg !6713
  %165 = bitcast %struct.list_head* %164 to i8*, !dbg !6713
  store i8* %165, i8** %__mptr169, align 8, !dbg !6713
  br label %do.body172, !dbg !6713

do.body172:                                       ; preds = %if.end168
  br label %do.end173, !dbg !6714

do.end173:                                        ; preds = %do.body172
  %166 = load i8*, i8** %__mptr169, align 8, !dbg !6713
  %add.ptr175 = getelementptr i8, i8* %166, i64 0, !dbg !6713
  %167 = bitcast i8* %add.ptr175 to %struct.ScsiReqBlk*, !dbg !6713
  store %struct.ScsiReqBlk* %167, %struct.ScsiReqBlk** %tmp174, align 8, !dbg !6714
  %168 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp174, align 8, !dbg !6713
  store %struct.ScsiReqBlk* %168, %struct.ScsiReqBlk** %srb, align 8, !dbg !6716
  br label %for.cond176, !dbg !6716

for.cond176:                                      ; preds = %do.end189, %do.end173
  %169 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6717
  %list177 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %169, i32 0, i32 0, !dbg !6717
  %170 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6717
  %srb_going_list178 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %170, i32 0, i32 2, !dbg !6717
  %cmp179 = icmp eq %struct.list_head* %list177, %srb_going_list178, !dbg !6717
  %lnot181 = xor i1 %cmp179, true, !dbg !6717
  br i1 %lnot181, label %for.body182, label %for.end192, !dbg !6716

for.body182:                                      ; preds = %for.cond176
  %171 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6719
  %172 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6720
  %cmd183 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %172, i32 0, i32 2, !dbg !6721
  %173 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd183, align 8, !dbg !6721
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %171, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i64 0, i64 0), %struct.scsi_cmnd* %173) #11, !dbg !6722
  br label %for.inc184, !dbg !6722

for.inc184:                                       ; preds = %for.body182
  call void @llvm.dbg.declare(metadata i8** %__mptr185, metadata !6723, metadata !DIExpression()), !dbg !6725
  %174 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6725
  %list186 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %174, i32 0, i32 0, !dbg !6725
  %next187 = getelementptr inbounds %struct.list_head, %struct.list_head* %list186, i32 0, i32 0, !dbg !6725
  %175 = load %struct.list_head*, %struct.list_head** %next187, align 8, !dbg !6725
  %176 = bitcast %struct.list_head* %175 to i8*, !dbg !6725
  store i8* %176, i8** %__mptr185, align 8, !dbg !6725
  br label %do.body188, !dbg !6725

do.body188:                                       ; preds = %for.inc184
  br label %do.end189, !dbg !6726

do.end189:                                        ; preds = %do.body188
  %177 = load i8*, i8** %__mptr185, align 8, !dbg !6725
  %add.ptr191 = getelementptr i8, i8* %177, i64 0, !dbg !6725
  %178 = bitcast i8* %add.ptr191 to %struct.ScsiReqBlk*, !dbg !6725
  store %struct.ScsiReqBlk* %178, %struct.ScsiReqBlk** %tmp190, align 8, !dbg !6726
  %179 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp190, align 8, !dbg !6725
  store %struct.ScsiReqBlk* %179, %struct.ScsiReqBlk** %srb, align 8, !dbg !6717
  br label %for.cond176, !dbg !6717, !llvm.loop !6728

for.end192:                                       ; preds = %for.cond176
  %180 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6730
  %srb_waiting_list193 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %180, i32 0, i32 3, !dbg !6732
  %call194 = call i32 @list_empty(%struct.list_head* %srb_waiting_list193) #11, !dbg !6733
  %tobool195 = icmp ne i32 %call194, 0, !dbg !6733
  br i1 %tobool195, label %lor.lhs.false, label %if.then199, !dbg !6734

lor.lhs.false:                                    ; preds = %for.end192
  %181 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6735
  %srb_going_list196 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %181, i32 0, i32 2, !dbg !6736
  %call197 = call i32 @list_empty(%struct.list_head* %srb_going_list196) #11, !dbg !6737
  %tobool198 = icmp ne i32 %call197, 0, !dbg !6737
  br i1 %tobool198, label %if.end200, label %if.then199, !dbg !6738

if.then199:                                       ; preds = %lor.lhs.false, %for.end192
  %182 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6739
  call void @seq_putc(%struct.seq_file* %182, i8 signext 10) #11, !dbg !6740
  br label %if.end200, !dbg !6740

if.end200:                                        ; preds = %if.then199, %lor.lhs.false
  br label %for.inc201, !dbg !6741

for.inc201:                                       ; preds = %if.end200
  call void @llvm.dbg.declare(metadata i8** %__mptr202, metadata !6742, metadata !DIExpression()), !dbg !6744
  %183 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6744
  %list203 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %183, i32 0, i32 0, !dbg !6744
  %next204 = getelementptr inbounds %struct.list_head, %struct.list_head* %list203, i32 0, i32 0, !dbg !6744
  %184 = load %struct.list_head*, %struct.list_head** %next204, align 8, !dbg !6744
  %185 = bitcast %struct.list_head* %184 to i8*, !dbg !6744
  store i8* %185, i8** %__mptr202, align 8, !dbg !6744
  br label %do.body205, !dbg !6744

do.body205:                                       ; preds = %for.inc201
  br label %do.end206, !dbg !6745

do.end206:                                        ; preds = %do.body205
  %186 = load i8*, i8** %__mptr202, align 8, !dbg !6744
  %add.ptr208 = getelementptr i8, i8* %186, i64 0, !dbg !6744
  %187 = bitcast i8* %add.ptr208 to %struct.DeviceCtlBlk*, !dbg !6744
  store %struct.DeviceCtlBlk* %187, %struct.DeviceCtlBlk** %tmp207, align 8, !dbg !6745
  %188 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp207, align 8, !dbg !6744
  store %struct.DeviceCtlBlk* %188, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6657
  br label %for.cond119, !dbg !6657, !llvm.loop !6747

for.end209:                                       ; preds = %for.cond119
  %189 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6749
  %scsi_host210 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %189, i32 0, i32 0, !dbg !6749
  %190 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host210, align 8, !dbg !6749
  %host_lock211 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %190, i32 0, i32 4, !dbg !6749
  %191 = load %struct.spinlock*, %struct.spinlock** %host_lock211, align 8, !dbg !6749
  %192 = load i64, i64* %flags, align 8, !dbg !6749
  store %struct.spinlock* %191, %struct.spinlock** %lock.addr.i212, align 8
  store i64 %192, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !216, metadata !6182, metadata !DIExpression()) #6, !dbg !6750
  call void @llvm.dbg.declare(metadata !216, metadata !6186, metadata !DIExpression()) #6, !dbg !6750
  store i32 1, i32* %tmp.i, align 4, !dbg !6750
  %193 = load i32, i32* %tmp.i, align 4, !dbg !6750
  call void @llvm.dbg.declare(metadata !216, metadata !6187, metadata !DIExpression()) #6, !dbg !6751
  call void @llvm.dbg.declare(metadata !216, metadata !6193, metadata !DIExpression()) #6, !dbg !6751
  store i32 1, i32* %tmp8.i, align 4, !dbg !6751
  %194 = load i32, i32* %tmp8.i, align 4, !dbg !6751
  %195 = load i64, i64* %flags.addr.i, align 8, !dbg !6752
  call void @arch_local_irq_restore(i64 %195) #13, !dbg !6752
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6753, !srcloc !6197
  %196 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i212, align 8, !dbg !6754
  %197 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %196, i32 0, i32 0, !dbg !6754
  %rlock.i213 = bitcast %union.anon.2* %197 to %struct.raw_spinlock*, !dbg !6754
  ret i32 0, !dbg !6755
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !6756 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !6760, metadata !DIExpression()), !dbg !6761
  %call = call i64 @arch_local_save_flags() #11, !dbg !6762
  store i64 %call, i64* %f, align 8, !dbg !6763
  call void @arch_local_irq_disable() #11, !dbg !6764
  %0 = load i64, i64* %f, align 8, !dbg !6765
  ret i64 %0, !dbg !6766
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dc395x_queue_command_lck(%struct.scsi_cmnd* %cmd, void (%struct.scsi_cmnd*)* %done) #2 !dbg !6767 {
entry:
  %retval = alloca i32, align 4
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %done.addr = alloca void (%struct.scsi_cmnd*)*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %srb = alloca %struct.ScsiReqBlk*, align 8
  %acb = alloca %struct.AdapterCtlBlk*, align 8
  %head__ = alloca %struct.list_head*, align 8
  %pos__ = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %tmp41 = alloca %struct.ScsiReqBlk*, align 8
  %__mptr = alloca i8*, align 8
  %tmp46 = alloca %struct.ScsiReqBlk*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6770, metadata !DIExpression()), !dbg !6771
  store void (%struct.scsi_cmnd*)* %done, void (%struct.scsi_cmnd*)** %done.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.scsi_cmnd*)** %done.addr, metadata !6772, metadata !DIExpression()), !dbg !6773
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !6774, metadata !DIExpression()), !dbg !6775
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb, metadata !6776, metadata !DIExpression()), !dbg !6777
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb, metadata !6778, metadata !DIExpression()), !dbg !6779
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6780
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !6781
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !6781
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !6782
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6782
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 51, !dbg !6783
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !6780
  %3 = bitcast i64* %arraydecay to %struct.AdapterCtlBlk*, !dbg !6784
  store %struct.AdapterCtlBlk* %3, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6779
  br label %do.body, !dbg !6785

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6786

do.end:                                           ; preds = %do.body
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6788
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 24, !dbg !6789
  store i32 262144, i32* %result, align 8, !dbg !6790
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6791
  %device1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 1, !dbg !6793
  %6 = load %struct.scsi_device*, %struct.scsi_device** %device1, align 8, !dbg !6793
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 16, !dbg !6794
  %7 = load i32, i32* %id, align 8, !dbg !6794
  %8 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6795
  %scsi_host = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %8, i32 0, i32 0, !dbg !6796
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !6796
  %max_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 20, !dbg !6797
  %10 = load i32, i32* %max_id, align 4, !dbg !6797
  %cmp = icmp uge i32 %7, %10, !dbg !6798
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6799

lor.lhs.false:                                    ; preds = %do.end
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6800
  %device2 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %11, i32 0, i32 1, !dbg !6801
  %12 = load %struct.scsi_device*, %struct.scsi_device** %device2, align 8, !dbg !6801
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %12, i32 0, i32 18, !dbg !6802
  %13 = load i64, i64* %lun, align 8, !dbg !6802
  %14 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6803
  %scsi_host3 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %14, i32 0, i32 0, !dbg !6804
  %15 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host3, align 8, !dbg !6804
  %max_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %15, i32 0, i32 21, !dbg !6805
  %16 = load i64, i64* %max_lun, align 8, !dbg !6805
  %cmp4 = icmp uge i64 %13, %16, !dbg !6806
  br i1 %cmp4, label %if.then, label %lor.lhs.false5, !dbg !6807

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %17 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6808
  %device6 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %17, i32 0, i32 1, !dbg !6809
  %18 = load %struct.scsi_device*, %struct.scsi_device** %device6, align 8, !dbg !6809
  %lun7 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %18, i32 0, i32 18, !dbg !6810
  %19 = load i64, i64* %lun7, align 8, !dbg !6810
  %cmp8 = icmp ugt i64 %19, 31, !dbg !6811
  br i1 %cmp8, label %if.then, label %if.end, !dbg !6812

if.then:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %do.end
  br label %complete, !dbg !6813

if.end:                                           ; preds = %lor.lhs.false5
  %20 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6815
  %dcb_map = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %20, i32 0, i32 21, !dbg !6817
  %21 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6818
  %device9 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %21, i32 0, i32 1, !dbg !6819
  %22 = load %struct.scsi_device*, %struct.scsi_device** %device9, align 8, !dbg !6819
  %id10 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %22, i32 0, i32 16, !dbg !6820
  %23 = load i32, i32* %id10, align 8, !dbg !6820
  %idxprom = zext i32 %23 to i64, !dbg !6815
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %dcb_map, i64 0, i64 %idxprom, !dbg !6815
  %24 = load i8, i8* %arrayidx, align 1, !dbg !6815
  %conv = zext i8 %24 to i32, !dbg !6815
  %25 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6821
  %device11 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %25, i32 0, i32 1, !dbg !6822
  %26 = load %struct.scsi_device*, %struct.scsi_device** %device11, align 8, !dbg !6822
  %lun12 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %26, i32 0, i32 18, !dbg !6823
  %27 = load i64, i64* %lun12, align 8, !dbg !6823
  %sh_prom = trunc i64 %27 to i32, !dbg !6824
  %shl = shl i32 1, %sh_prom, !dbg !6824
  %and = and i32 %conv, %shl, !dbg !6825
  %tobool = icmp ne i32 %and, 0, !dbg !6825
  br i1 %tobool, label %if.end20, label %if.then13, !dbg !6826

if.then13:                                        ; preds = %if.end
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6827
  %device14 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %28, i32 0, i32 1, !dbg !6827
  %29 = load %struct.scsi_device*, %struct.scsi_device** %device14, align 8, !dbg !6827
  %id15 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %29, i32 0, i32 16, !dbg !6827
  %30 = load i32, i32* %id15, align 8, !dbg !6827
  %31 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6827
  %device16 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %31, i32 0, i32 1, !dbg !6827
  %32 = load %struct.scsi_device*, %struct.scsi_device** %device16, align 8, !dbg !6827
  %lun17 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %32, i32 0, i32 18, !dbg !6827
  %33 = load i64, i64* %lun17, align 8, !dbg !6827
  %conv18 = trunc i64 %33 to i8, !dbg !6827
  %conv19 = zext i8 %conv18 to i32, !dbg !6827
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.9, i64 0, i64 0), i32 %30, i32 %conv19) #12, !dbg !6827
  br label %complete, !dbg !6829

if.end20:                                         ; preds = %if.end
  %34 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6830
  %35 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6831
  %device21 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %35, i32 0, i32 1, !dbg !6832
  %36 = load %struct.scsi_device*, %struct.scsi_device** %device21, align 8, !dbg !6832
  %id22 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %36, i32 0, i32 16, !dbg !6833
  %37 = load i32, i32* %id22, align 8, !dbg !6833
  %conv23 = trunc i32 %37 to i8, !dbg !6831
  %38 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6834
  %device24 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %38, i32 0, i32 1, !dbg !6835
  %39 = load %struct.scsi_device*, %struct.scsi_device** %device24, align 8, !dbg !6835
  %lun25 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %39, i32 0, i32 18, !dbg !6836
  %40 = load i64, i64* %lun25, align 8, !dbg !6836
  %conv26 = trunc i64 %40 to i8, !dbg !6834
  %call27 = call %struct.DeviceCtlBlk* @find_dcb(%struct.AdapterCtlBlk* %34, i8 zeroext %conv23, i8 zeroext %conv26) #11, !dbg !6837
  store %struct.DeviceCtlBlk* %call27, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6838
  %41 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6839
  %tobool28 = icmp ne %struct.DeviceCtlBlk* %41, null, !dbg !6839
  br i1 %tobool28, label %if.end37, label %if.then29, !dbg !6841

if.then29:                                        ; preds = %if.end20
  %42 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6842
  %device30 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %42, i32 0, i32 1, !dbg !6842
  %43 = load %struct.scsi_device*, %struct.scsi_device** %device30, align 8, !dbg !6842
  %id31 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %43, i32 0, i32 16, !dbg !6842
  %44 = load i32, i32* %id31, align 8, !dbg !6842
  %45 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6842
  %device32 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %45, i32 0, i32 1, !dbg !6842
  %46 = load %struct.scsi_device*, %struct.scsi_device** %device32, align 8, !dbg !6842
  %lun33 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %46, i32 0, i32 18, !dbg !6842
  %47 = load i64, i64* %lun33, align 8, !dbg !6842
  %conv34 = trunc i64 %47 to i8, !dbg !6842
  %conv35 = zext i8 %conv34 to i32, !dbg !6842
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.10, i64 0, i64 0), i32 %44, i32 %conv35) #12, !dbg !6842
  br label %complete, !dbg !6844

if.end37:                                         ; preds = %if.end20
  %48 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %done.addr, align 8, !dbg !6845
  %49 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6846
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %49, i32 0, i32 21, !dbg !6847
  store void (%struct.scsi_cmnd*)* %48, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !6848
  %50 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6849
  %result38 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %50, i32 0, i32 24, !dbg !6850
  store i32 0, i32* %result38, align 8, !dbg !6851
  call void @llvm.dbg.declare(metadata %struct.list_head** %head__, metadata !6852, metadata !DIExpression()), !dbg !6854
  %51 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6854
  %srb_free_list = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %51, i32 0, i32 6, !dbg !6854
  store %struct.list_head* %srb_free_list, %struct.list_head** %head__, align 8, !dbg !6854
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos__, metadata !6855, metadata !DIExpression()), !dbg !6854
  br label %do.body39, !dbg !6856

do.body39:                                        ; preds = %if.end37
  br label %do.end40, !dbg !6858

do.end40:                                         ; preds = %do.body39
  %52 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !6856
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %52, i32 0, i32 0, !dbg !6856
  %53 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6856
  store %struct.list_head* %53, %struct.list_head** %tmp, align 8, !dbg !6858
  %54 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !6856
  store %struct.list_head* %54, %struct.list_head** %pos__, align 8, !dbg !6854
  %55 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !6854
  %56 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !6854
  %cmp42 = icmp ne %struct.list_head* %55, %56, !dbg !6854
  br i1 %cmp42, label %cond.true, label %cond.false, !dbg !6854

cond.true:                                        ; preds = %do.end40
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6860, metadata !DIExpression()), !dbg !6862
  %57 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !6862
  %58 = bitcast %struct.list_head* %57 to i8*, !dbg !6862
  store i8* %58, i8** %__mptr, align 8, !dbg !6862
  br label %do.body44, !dbg !6862

do.body44:                                        ; preds = %cond.true
  br label %do.end45, !dbg !6863

do.end45:                                         ; preds = %do.body44
  %59 = load i8*, i8** %__mptr, align 8, !dbg !6862
  %add.ptr = getelementptr i8, i8* %59, i64 0, !dbg !6862
  %60 = bitcast i8* %add.ptr to %struct.ScsiReqBlk*, !dbg !6862
  store %struct.ScsiReqBlk* %60, %struct.ScsiReqBlk** %tmp46, align 8, !dbg !6863
  %61 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp46, align 8, !dbg !6862
  br label %cond.end, !dbg !6854

cond.false:                                       ; preds = %do.end40
  br label %cond.end, !dbg !6854

cond.end:                                         ; preds = %cond.false, %do.end45
  %cond = phi %struct.ScsiReqBlk* [ %61, %do.end45 ], [ null, %cond.false ], !dbg !6854
  store %struct.ScsiReqBlk* %cond, %struct.ScsiReqBlk** %tmp41, align 8, !dbg !6854
  %62 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp41, align 8, !dbg !6854
  store %struct.ScsiReqBlk* %62, %struct.ScsiReqBlk** %srb, align 8, !dbg !6865
  %63 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6866
  %tobool47 = icmp ne %struct.ScsiReqBlk* %63, null, !dbg !6866
  br i1 %tobool47, label %if.end51, label %if.then48, !dbg !6868

if.then48:                                        ; preds = %cond.end
  br label %do.body49, !dbg !6869

do.body49:                                        ; preds = %if.then48
  br label %do.end50, !dbg !6871

do.end50:                                         ; preds = %do.body49
  store i32 1, i32* %retval, align 4, !dbg !6873
  br label %return, !dbg !6873

if.end51:                                         ; preds = %cond.end
  %64 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6874
  %list = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %64, i32 0, i32 0, !dbg !6875
  call void @list_del(%struct.list_head* %list) #11, !dbg !6876
  %65 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6877
  %66 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6878
  %67 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6879
  call void @build_srb(%struct.scsi_cmnd* %65, %struct.DeviceCtlBlk* %66, %struct.ScsiReqBlk* %67) #11, !dbg !6880
  %68 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6881
  %srb_waiting_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %68, i32 0, i32 3, !dbg !6883
  %call52 = call i32 @list_empty(%struct.list_head* %srb_waiting_list) #11, !dbg !6884
  %tobool53 = icmp ne i32 %call52, 0, !dbg !6884
  br i1 %tobool53, label %if.else, label %if.then54, !dbg !6885

if.then54:                                        ; preds = %if.end51
  %69 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6886
  %list55 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %69, i32 0, i32 0, !dbg !6888
  %70 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !6889
  %srb_waiting_list56 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %70, i32 0, i32 3, !dbg !6890
  call void @list_add_tail(%struct.list_head* %list55, %struct.list_head* %srb_waiting_list56) #11, !dbg !6891
  %71 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6892
  call void @waiting_process_next(%struct.AdapterCtlBlk* %71) #11, !dbg !6893
  br label %if.end57, !dbg !6894

if.else:                                          ; preds = %if.end51
  %72 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !6895
  %73 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !6897
  call void @send_srb(%struct.AdapterCtlBlk* %72, %struct.ScsiReqBlk* %73) #11, !dbg !6898
  br label %if.end57

if.end57:                                         ; preds = %if.else, %if.then54
  br label %do.body58, !dbg !6899

do.body58:                                        ; preds = %if.end57
  br label %do.end59, !dbg !6900

do.end59:                                         ; preds = %do.body58
  store i32 0, i32* %retval, align 4, !dbg !6902
  br label %return, !dbg !6902

complete:                                         ; preds = %if.then29, %if.then13, %if.then
  call void @llvm.dbg.label(metadata !6903), !dbg !6904
  %74 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %done.addr, align 8, !dbg !6905
  %75 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6906
  call void %74(%struct.scsi_cmnd* %75) #11, !dbg !6905
  store i32 0, i32* %retval, align 4, !dbg !6907
  br label %return, !dbg !6907

return:                                           ; preds = %complete, %do.end59, %do.end50
  %76 = load i32, i32* %retval, align 4, !dbg !6908
  ret i32 %76, !dbg !6908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !6909 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !6910, metadata !DIExpression()), !dbg !6912
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6913, metadata !DIExpression()), !dbg !6912
  %0 = load i64, i64* %__edi, align 8, !dbg !6912
  store i64 %0, i64* %__edi, align 8, !dbg !6912
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6914, metadata !DIExpression()), !dbg !6912
  %1 = load i64, i64* %__esi, align 8, !dbg !6912
  store i64 %1, i64* %__esi, align 8, !dbg !6912
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6915, metadata !DIExpression()), !dbg !6912
  %2 = load i64, i64* %__edx, align 8, !dbg !6912
  store i64 %2, i64* %__edx, align 8, !dbg !6912
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6916, metadata !DIExpression()), !dbg !6912
  %3 = load i64, i64* %__ecx, align 8, !dbg !6912
  store i64 %3, i64* %__ecx, align 8, !dbg !6912
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6917, metadata !DIExpression()), !dbg !6912
  %4 = load i64, i64* %__eax, align 8, !dbg !6912
  store i64 %4, i64* %__eax, align 8, !dbg !6912
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !6912
  %6 = call i64 @llvm.read_register.i64(metadata !5856), !dbg !6918
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #6, !dbg !6918, !srcloc !6921
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6918
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6918
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6918
  call void @llvm.write_register.i64(metadata !5856, i64 %asmresult1), !dbg !6918
  %8 = load i64, i64* %__eax, align 8, !dbg !6918
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !6922, metadata !DIExpression()), !dbg !6924
  store i64 -1, i64* %__mask, align 8, !dbg !6924
  %9 = load i64, i64* %__mask, align 8, !dbg !6924
  store i64 %9, i64* %tmp, align 8, !dbg !6924
  %10 = load i64, i64* %tmp, align 8, !dbg !6924
  %and = and i64 %8, %10, !dbg !6918
  store i64 %and, i64* %__ret, align 8, !dbg !6918
  %11 = load i64, i64* %__ret, align 8, !dbg !6912
  store i64 %11, i64* %tmp2, align 8, !dbg !6925
  %12 = load i64, i64* %tmp2, align 8, !dbg !6912
  ret i64 %12, !dbg !6926
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !6927 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6928, metadata !DIExpression()), !dbg !6930
  %0 = load i64, i64* %__edi, align 8, !dbg !6930
  store i64 %0, i64* %__edi, align 8, !dbg !6930
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6931, metadata !DIExpression()), !dbg !6930
  %1 = load i64, i64* %__esi, align 8, !dbg !6930
  store i64 %1, i64* %__esi, align 8, !dbg !6930
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6932, metadata !DIExpression()), !dbg !6930
  %2 = load i64, i64* %__edx, align 8, !dbg !6930
  store i64 %2, i64* %__edx, align 8, !dbg !6930
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6933, metadata !DIExpression()), !dbg !6930
  %3 = load i64, i64* %__ecx, align 8, !dbg !6930
  store i64 %3, i64* %__ecx, align 8, !dbg !6930
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6934, metadata !DIExpression()), !dbg !6930
  %4 = load i64, i64* %__eax, align 8, !dbg !6930
  store i64 %4, i64* %__eax, align 8, !dbg !6930
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !6930
  %6 = call i64 @llvm.read_register.i64(metadata !5856), !dbg !6930
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #6, !dbg !6930, !srcloc !6935
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6930
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6930
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6930
  call void @llvm.write_register.i64(metadata !5856, i64 %asmresult1), !dbg !6930
  ret void, !dbg !6936
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #5

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.DeviceCtlBlk* @find_dcb(%struct.AdapterCtlBlk* %acb, i8 zeroext %id, i8 zeroext %lun) #2 !dbg !6937 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %id.addr = alloca i8, align 1
  %lun.addr = alloca i8, align 1
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !6940, metadata !DIExpression()), !dbg !6941
  store i8 %id, i8* %id.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %id.addr, metadata !6942, metadata !DIExpression()), !dbg !6943
  store i8 %lun, i8* %lun.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lun.addr, metadata !6944, metadata !DIExpression()), !dbg !6945
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !6946
  %children = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 22, !dbg !6947
  %1 = load i8, i8* %id.addr, align 1, !dbg !6948
  %idxprom = zext i8 %1 to i64, !dbg !6946
  %arrayidx = getelementptr [16 x [32 x %struct.DeviceCtlBlk*]], [16 x [32 x %struct.DeviceCtlBlk*]]* %children, i64 0, i64 %idxprom, !dbg !6946
  %2 = load i8, i8* %lun.addr, align 1, !dbg !6949
  %idxprom1 = zext i8 %2 to i64, !dbg !6946
  %arrayidx2 = getelementptr [32 x %struct.DeviceCtlBlk*], [32 x %struct.DeviceCtlBlk*]* %arrayidx, i64 0, i64 %idxprom1, !dbg !6946
  %3 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %arrayidx2, align 8, !dbg !6946
  ret %struct.DeviceCtlBlk* %3, !dbg !6950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #2 !dbg !6951 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6955, metadata !DIExpression()), !dbg !6956
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6957
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !6958
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6959
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !6960
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !6961
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6962
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !6963
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !6964
  ret void, !dbg !6965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @build_srb(%struct.scsi_cmnd* %cmd, %struct.DeviceCtlBlk* %dcb, %struct.ScsiReqBlk* %srb) #2 !dbg !6966 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %nseg = alloca i32, align 4
  %dir = alloca i32, align 4
  %i = alloca i32, align 4
  %reqlen = alloca i32, align 4
  %sg = alloca %struct.scatterlist*, align 8
  %sgp = alloca %struct.SGentry*, align 8
  %busaddr = alloca i32, align 4
  %seglen = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !6969, metadata !DIExpression()), !dbg !6970
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !6971, metadata !DIExpression()), !dbg !6972
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !6973, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.declare(metadata i32* %nseg, metadata !6975, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !6977, metadata !DIExpression()), !dbg !6978
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6979
  %sc_data_direction = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 13, !dbg !6980
  %1 = load i32, i32* %sc_data_direction, align 8, !dbg !6980
  store i32 %1, i32* %dir, align 4, !dbg !6978
  br label %do.body, !dbg !6981

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6982

do.end:                                           ; preds = %do.body
  %2 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !6984
  %3 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !6985
  %dcb1 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %3, i32 0, i32 1, !dbg !6986
  store %struct.DeviceCtlBlk* %2, %struct.DeviceCtlBlk** %dcb1, align 8, !dbg !6987
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !6988
  %5 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !6989
  %cmd2 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %5, i32 0, i32 2, !dbg !6990
  store %struct.scsi_cmnd* %4, %struct.scsi_cmnd** %cmd2, align 8, !dbg !6991
  %6 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !6992
  %sg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %6, i32 0, i32 5, !dbg !6993
  store i8 0, i8* %sg_count, align 8, !dbg !6994
  %7 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !6995
  %total_xfer_length = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %7, i32 0, i32 7, !dbg !6996
  store i64 0, i64* %total_xfer_length, align 8, !dbg !6997
  %8 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !6998
  %sg_bus_addr = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %8, i32 0, i32 4, !dbg !6999
  store i64 0, i64* %sg_bus_addr, align 8, !dbg !7000
  %9 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7001
  %sg_index = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %9, i32 0, i32 6, !dbg !7002
  store i8 0, i8* %sg_index, align 1, !dbg !7003
  %10 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7004
  %adapter_status = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %10, i32 0, i32 13, !dbg !7005
  store i8 0, i8* %adapter_status, align 2, !dbg !7006
  %11 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7007
  %target_status = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %11, i32 0, i32 14, !dbg !7008
  store i8 0, i8* %target_status, align 1, !dbg !7009
  %12 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7010
  %msg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %12, i32 0, i32 15, !dbg !7011
  store i8 0, i8* %msg_count, align 8, !dbg !7012
  %13 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7013
  %status = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %13, i32 0, i32 18, !dbg !7014
  store i8 0, i8* %status, align 1, !dbg !7015
  %14 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7016
  %flag = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %14, i32 0, i32 20, !dbg !7017
  store i8 0, i8* %flag, align 1, !dbg !7018
  %15 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7019
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %15, i32 0, i32 10, !dbg !7020
  store i16 0, i16* %state, align 8, !dbg !7021
  %16 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7022
  %retry_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %16, i32 0, i32 19, !dbg !7023
  store i8 0, i8* %retry_count, align 4, !dbg !7024
  %17 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7025
  %tag_number = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %17, i32 0, i32 17, !dbg !7026
  store i8 -1, i8* %tag_number, align 2, !dbg !7027
  %18 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7028
  %scsi_phase = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %18, i32 0, i32 21, !dbg !7029
  store i8 5, i8* %scsi_phase, align 2, !dbg !7030
  %19 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7031
  %end_message = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %19, i32 0, i32 16, !dbg !7032
  store i8 0, i8* %end_message, align 1, !dbg !7033
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7034
  %call = call i32 @scsi_dma_map(%struct.scsi_cmnd* %20) #11, !dbg !7035
  store i32 %call, i32* %nseg, align 4, !dbg !7036
  br label %do.body3, !dbg !7037

do.body3:                                         ; preds = %do.end
  %21 = load i32, i32* %nseg, align 4, !dbg !7038
  %cmp = icmp slt i32 %21, 0, !dbg !7038
  %lnot = xor i1 %cmp, true, !dbg !7038
  %lnot4 = xor i1 %lnot, true, !dbg !7038
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !7038
  %conv = sext i32 %lnot.ext to i64, !dbg !7038
  %tobool = icmp ne i64 %conv, 0, !dbg !7038
  br i1 %tobool, label %if.then, label %if.end, !dbg !7041

if.then:                                          ; preds = %do.body3
  br label %do.body5, !dbg !7038

do.body5:                                         ; preds = %if.then
  br label %do.body6, !dbg !7042

do.body6:                                         ; preds = %do.body5
  br label %do.end7, !dbg !7044

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !7042

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0), i32 903, i32 0, i64 12) #6, !dbg !7046, !srcloc !7048
  br label %do.end9, !dbg !7046

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !7042

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 321) #6, !dbg !7049, !srcloc !7052
  unreachable, !dbg !7053

do.end11:                                         ; No predecessors!
  br label %do.end12, !dbg !7042

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !7042

if.end:                                           ; preds = %do.end12, %do.body3
  br label %do.end13, !dbg !7041

do.end13:                                         ; preds = %if.end
  %22 = load i32, i32* %dir, align 4, !dbg !7054
  %cmp14 = icmp eq i32 %22, 3, !dbg !7056
  br i1 %cmp14, label %if.then17, label %lor.lhs.false, !dbg !7057

lor.lhs.false:                                    ; preds = %do.end13
  %23 = load i32, i32* %nseg, align 4, !dbg !7058
  %tobool16 = icmp ne i32 %23, 0, !dbg !7058
  br i1 %tobool16, label %if.else, label %if.then17, !dbg !7059

if.then17:                                        ; preds = %lor.lhs.false, %do.end13
  br label %do.body18, !dbg !7060

do.body18:                                        ; preds = %if.then17
  br label %do.end19, !dbg !7062

do.end19:                                         ; preds = %do.body18
  br label %if.end70, !dbg !7064

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7065, metadata !DIExpression()), !dbg !7067
  call void @llvm.dbg.declare(metadata i32* %reqlen, metadata !7068, metadata !DIExpression()), !dbg !7069
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7070
  %call20 = call i32 @scsi_bufflen(%struct.scsi_cmnd* %24) #11, !dbg !7071
  store i32 %call20, i32* %reqlen, align 4, !dbg !7069
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !7072, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.declare(metadata %struct.SGentry** %sgp, metadata !7074, metadata !DIExpression()), !dbg !7075
  %25 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7076
  %segment_x = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %25, i32 0, i32 3, !dbg !7077
  %26 = load %struct.SGentry*, %struct.SGentry** %segment_x, align 8, !dbg !7077
  store %struct.SGentry* %26, %struct.SGentry** %sgp, align 8, !dbg !7075
  %27 = load i32, i32* %nseg, align 4, !dbg !7078
  %conv21 = trunc i32 %27 to i8, !dbg !7078
  %28 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7079
  %sg_count22 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %28, i32 0, i32 5, !dbg !7080
  store i8 %conv21, i8* %sg_count22, align 8, !dbg !7081
  br label %do.body23, !dbg !7082

do.body23:                                        ; preds = %if.else
  br label %do.end24, !dbg !7083

do.end24:                                         ; preds = %do.body23
  store i32 0, i32* %i, align 4, !dbg !7085
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7085
  %call25 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %29) #11, !dbg !7085
  store %struct.scatterlist* %call25, %struct.scatterlist** %sg, align 8, !dbg !7085
  br label %for.cond, !dbg !7085

for.cond:                                         ; preds = %for.inc, %do.end24
  %30 = load i32, i32* %i, align 4, !dbg !7087
  %31 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7087
  %sg_count26 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %31, i32 0, i32 5, !dbg !7087
  %32 = load i8, i8* %sg_count26, align 8, !dbg !7087
  %conv27 = zext i8 %32 to i32, !dbg !7087
  %cmp28 = icmp slt i32 %30, %conv27, !dbg !7087
  br i1 %cmp28, label %for.body, label %for.end, !dbg !7085

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %busaddr, metadata !7089, metadata !DIExpression()), !dbg !7091
  %33 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !7092
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %33, i32 0, i32 3, !dbg !7092
  %34 = load i64, i64* %dma_address, align 8, !dbg !7092
  %conv30 = trunc i64 %34 to i32, !dbg !7093
  store i32 %conv30, i32* %busaddr, align 4, !dbg !7091
  call void @llvm.dbg.declare(metadata i32* %seglen, metadata !7094, metadata !DIExpression()), !dbg !7095
  %35 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !7096
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %35, i32 0, i32 2, !dbg !7097
  %36 = load i32, i32* %length, align 4, !dbg !7097
  store i32 %36, i32* %seglen, align 4, !dbg !7095
  %37 = load i32, i32* %busaddr, align 4, !dbg !7098
  %38 = load %struct.SGentry*, %struct.SGentry** %sgp, align 8, !dbg !7099
  %39 = load i32, i32* %i, align 4, !dbg !7100
  %idxprom = sext i32 %39 to i64, !dbg !7099
  %arrayidx = getelementptr %struct.SGentry, %struct.SGentry* %38, i64 %idxprom, !dbg !7099
  %address = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx, i32 0, i32 0, !dbg !7101
  store i32 %37, i32* %address, align 4, !dbg !7102
  %40 = load i32, i32* %seglen, align 4, !dbg !7103
  %41 = load %struct.SGentry*, %struct.SGentry** %sgp, align 8, !dbg !7104
  %42 = load i32, i32* %i, align 4, !dbg !7105
  %idxprom31 = sext i32 %42 to i64, !dbg !7104
  %arrayidx32 = getelementptr %struct.SGentry, %struct.SGentry* %41, i64 %idxprom31, !dbg !7104
  %length33 = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx32, i32 0, i32 1, !dbg !7106
  store i32 %40, i32* %length33, align 4, !dbg !7107
  %43 = load i32, i32* %seglen, align 4, !dbg !7108
  %conv34 = zext i32 %43 to i64, !dbg !7108
  %44 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7109
  %total_xfer_length35 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %44, i32 0, i32 7, !dbg !7110
  %45 = load i64, i64* %total_xfer_length35, align 8, !dbg !7111
  %add = add i64 %45, %conv34, !dbg !7111
  store i64 %add, i64* %total_xfer_length35, align 8, !dbg !7111
  br label %for.inc, !dbg !7112

for.inc:                                          ; preds = %for.body
  %46 = load i32, i32* %i, align 4, !dbg !7087
  %inc = add i32 %46, 1, !dbg !7087
  store i32 %inc, i32* %i, align 4, !dbg !7087
  %47 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !7087
  %call36 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %47) #11, !dbg !7087
  store %struct.scatterlist* %call36, %struct.scatterlist** %sg, align 8, !dbg !7087
  br label %for.cond, !dbg !7087, !llvm.loop !7113

for.end:                                          ; preds = %for.cond
  %48 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7115
  %sg_count37 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %48, i32 0, i32 5, !dbg !7116
  %49 = load i8, i8* %sg_count37, align 8, !dbg !7116
  %conv38 = zext i8 %49 to i32, !dbg !7115
  %sub = sub i32 %conv38, 1, !dbg !7117
  %50 = load %struct.SGentry*, %struct.SGentry** %sgp, align 8, !dbg !7118
  %idx.ext = sext i32 %sub to i64, !dbg !7118
  %add.ptr = getelementptr %struct.SGentry, %struct.SGentry* %50, i64 %idx.ext, !dbg !7118
  store %struct.SGentry* %add.ptr, %struct.SGentry** %sgp, align 8, !dbg !7118
  %51 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7119
  %total_xfer_length39 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %51, i32 0, i32 7, !dbg !7121
  %52 = load i64, i64* %total_xfer_length39, align 8, !dbg !7121
  %53 = load i32, i32* %reqlen, align 4, !dbg !7122
  %conv40 = zext i32 %53 to i64, !dbg !7122
  %cmp41 = icmp ugt i64 %52, %conv40, !dbg !7123
  br i1 %cmp41, label %if.then43, label %if.end53, !dbg !7124

if.then43:                                        ; preds = %for.end
  %54 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7125
  %total_xfer_length44 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %54, i32 0, i32 7, !dbg !7127
  %55 = load i64, i64* %total_xfer_length44, align 8, !dbg !7127
  %56 = load i32, i32* %reqlen, align 4, !dbg !7128
  %conv45 = zext i32 %56 to i64, !dbg !7128
  %sub46 = sub i64 %55, %conv45, !dbg !7129
  %57 = load %struct.SGentry*, %struct.SGentry** %sgp, align 8, !dbg !7130
  %length47 = getelementptr inbounds %struct.SGentry, %struct.SGentry* %57, i32 0, i32 1, !dbg !7131
  %58 = load i32, i32* %length47, align 4, !dbg !7132
  %conv48 = zext i32 %58 to i64, !dbg !7132
  %sub49 = sub i64 %conv48, %sub46, !dbg !7132
  %conv50 = trunc i64 %sub49 to i32, !dbg !7132
  store i32 %conv50, i32* %length47, align 4, !dbg !7132
  %59 = load i32, i32* %reqlen, align 4, !dbg !7133
  %conv51 = zext i32 %59 to i64, !dbg !7133
  %60 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7134
  %total_xfer_length52 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %60, i32 0, i32 7, !dbg !7135
  store i64 %conv51, i64* %total_xfer_length52, align 8, !dbg !7136
  br label %if.end53, !dbg !7137

if.end53:                                         ; preds = %if.then43, %for.end
  %61 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7138
  %sync_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %61, i32 0, i32 14, !dbg !7140
  %62 = load i8, i8* %sync_period, align 1, !dbg !7140
  %conv54 = zext i8 %62 to i32, !dbg !7138
  %and = and i32 %conv54, 16, !dbg !7141
  %tobool55 = icmp ne i32 %and, 0, !dbg !7141
  br i1 %tobool55, label %land.lhs.true, label %if.end63, !dbg !7142

land.lhs.true:                                    ; preds = %if.end53
  %63 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7143
  %total_xfer_length56 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %63, i32 0, i32 7, !dbg !7144
  %64 = load i64, i64* %total_xfer_length56, align 8, !dbg !7144
  %rem = urem i64 %64, 2, !dbg !7145
  %tobool57 = icmp ne i64 %rem, 0, !dbg !7145
  br i1 %tobool57, label %if.then58, label %if.end63, !dbg !7146

if.then58:                                        ; preds = %land.lhs.true
  %65 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7147
  %total_xfer_length59 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %65, i32 0, i32 7, !dbg !7149
  %66 = load i64, i64* %total_xfer_length59, align 8, !dbg !7150
  %inc60 = add i64 %66, 1, !dbg !7150
  store i64 %inc60, i64* %total_xfer_length59, align 8, !dbg !7150
  %67 = load %struct.SGentry*, %struct.SGentry** %sgp, align 8, !dbg !7151
  %length61 = getelementptr inbounds %struct.SGentry, %struct.SGentry* %67, i32 0, i32 1, !dbg !7152
  %68 = load i32, i32* %length61, align 4, !dbg !7153
  %inc62 = add i32 %68, 1, !dbg !7153
  store i32 %inc62, i32* %length61, align 4, !dbg !7153
  br label %if.end63, !dbg !7154

if.end63:                                         ; preds = %if.then58, %land.lhs.true, %if.end53
  %69 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7155
  %acb = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %69, i32 0, i32 1, !dbg !7155
  %70 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !7155
  %dev = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %70, i32 0, i32 23, !dbg !7155
  %71 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7155
  %dev64 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %71, i32 0, i32 41, !dbg !7155
  %72 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7155
  %segment_x65 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %72, i32 0, i32 3, !dbg !7155
  %73 = load %struct.SGentry*, %struct.SGentry** %segment_x65, align 8, !dbg !7155
  %74 = bitcast %struct.SGentry* %73 to i8*, !dbg !7155
  %call66 = call i64 @dma_map_single_attrs(%struct.device* %dev64, i8* %74, i64 512, i32 1, i64 0) #11, !dbg !7155
  %75 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7156
  %sg_bus_addr67 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %75, i32 0, i32 4, !dbg !7157
  store i64 %call66, i64* %sg_bus_addr67, align 8, !dbg !7158
  br label %do.body68, !dbg !7159

do.body68:                                        ; preds = %if.end63
  br label %do.end69, !dbg !7160

do.end69:                                         ; preds = %do.body68
  br label %if.end70

if.end70:                                         ; preds = %do.end69, %do.end19
  %76 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7162
  %total_xfer_length71 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %76, i32 0, i32 7, !dbg !7163
  %77 = load i64, i64* %total_xfer_length71, align 8, !dbg !7163
  %78 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7164
  %request_length = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %78, i32 0, i32 8, !dbg !7165
  store i64 %77, i64* %request_length, align 8, !dbg !7166
  ret void, !dbg !7167
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #2 !dbg !7168 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7173, metadata !DIExpression()), !dbg !7174
  br label %do.body, !dbg !7175

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7177

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7175
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !7175
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7175
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !7177
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !7175
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7179
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !7180
  %conv = zext i1 %cmp to i32, !dbg !7180
  ret i32 %conv, !dbg !7181
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #2 !dbg !7182 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7185, metadata !DIExpression()), !dbg !7186
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7187, metadata !DIExpression()), !dbg !7188
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7189
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7190
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7191
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7191
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7192
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !7193
  ret void, !dbg !7194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @waiting_process_next(%struct.AdapterCtlBlk* %acb) #2 !dbg !7195 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %start = alloca %struct.DeviceCtlBlk*, align 8
  %pos = alloca %struct.DeviceCtlBlk*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %srb = alloca %struct.ScsiReqBlk*, align 8
  %dcb_list_head = alloca %struct.list_head*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp21 = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr25 = alloca i8*, align 8
  %tmp29 = alloca %struct.DeviceCtlBlk*, align 8
  %waiting_list_head = alloca %struct.list_head*, align 8
  %__mptr46 = alloca i8*, align 8
  %tmp50 = alloca %struct.ScsiReqBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !7196, metadata !DIExpression()), !dbg !7197
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %start, metadata !7198, metadata !DIExpression()), !dbg !7199
  store %struct.DeviceCtlBlk* null, %struct.DeviceCtlBlk** %start, align 8, !dbg !7199
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %pos, metadata !7200, metadata !DIExpression()), !dbg !7201
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !7202, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb, metadata !7204, metadata !DIExpression()), !dbg !7205
  call void @llvm.dbg.declare(metadata %struct.list_head** %dcb_list_head, metadata !7206, metadata !DIExpression()), !dbg !7207
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7208
  %dcb_list = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 3, !dbg !7209
  store %struct.list_head* %dcb_list, %struct.list_head** %dcb_list_head, align 8, !dbg !7207
  %1 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7210
  %active_dcb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %1, i32 0, i32 5, !dbg !7212
  %2 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %active_dcb, align 8, !dbg !7212
  %tobool = icmp ne %struct.DeviceCtlBlk* %2, null, !dbg !7210
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7213

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7214
  %acb_flag = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %3, i32 0, i32 15, !dbg !7215
  %4 = load i8, i8* %acb_flag, align 1, !dbg !7215
  %conv = zext i8 %4 to i32, !dbg !7214
  %and = and i32 %conv, 7, !dbg !7216
  %tobool1 = icmp ne i32 %and, 0, !dbg !7216
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7217

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %do.end62, !dbg !7218

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7219
  %waiting_timer = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %5, i32 0, i32 8, !dbg !7221
  %call = call i32 @timer_pending(%struct.timer_list* %waiting_timer) #11, !dbg !7222
  %tobool2 = icmp ne i32 %call, 0, !dbg !7222
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !7223

if.then3:                                         ; preds = %if.end
  %6 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7224
  %waiting_timer4 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %6, i32 0, i32 8, !dbg !7225
  %call5 = call i32 @del_timer(%struct.timer_list* %waiting_timer4) #11, !dbg !7226
  br label %if.end6, !dbg !7226

if.end6:                                          ; preds = %if.then3, %if.end
  %7 = load %struct.list_head*, %struct.list_head** %dcb_list_head, align 8, !dbg !7227
  %call7 = call i32 @list_empty(%struct.list_head* %7) #11, !dbg !7229
  %tobool8 = icmp ne i32 %call7, 0, !dbg !7229
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !7230

if.then9:                                         ; preds = %if.end6
  br label %do.end62, !dbg !7231

if.end10:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7232, metadata !DIExpression()), !dbg !7235
  %8 = load %struct.list_head*, %struct.list_head** %dcb_list_head, align 8, !dbg !7235
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 0, !dbg !7235
  %9 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7235
  %10 = bitcast %struct.list_head* %9 to i8*, !dbg !7235
  store i8* %10, i8** %__mptr, align 8, !dbg !7235
  br label %do.body, !dbg !7235

do.body:                                          ; preds = %if.end10
  br label %do.end, !dbg !7236

do.end:                                           ; preds = %do.body
  %11 = load i8*, i8** %__mptr, align 8, !dbg !7235
  %add.ptr = getelementptr i8, i8* %11, i64 0, !dbg !7235
  %12 = bitcast i8* %add.ptr to %struct.DeviceCtlBlk*, !dbg !7235
  store %struct.DeviceCtlBlk* %12, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !7236
  %13 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !7235
  store %struct.DeviceCtlBlk* %13, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !7238
  br label %for.cond, !dbg !7238

for.cond:                                         ; preds = %do.end20, %do.end
  %14 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !7239
  %list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %14, i32 0, i32 0, !dbg !7239
  %15 = load %struct.list_head*, %struct.list_head** %dcb_list_head, align 8, !dbg !7239
  %cmp = icmp eq %struct.list_head* %list, %15, !dbg !7239
  %lnot = xor i1 %cmp, true, !dbg !7239
  br i1 %lnot, label %for.body, label %for.end, !dbg !7238

for.body:                                         ; preds = %for.cond
  %16 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !7241
  %17 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7243
  %dcb_run_robin = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %17, i32 0, i32 4, !dbg !7244
  %18 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb_run_robin, align 8, !dbg !7244
  %cmp12 = icmp eq %struct.DeviceCtlBlk* %16, %18, !dbg !7245
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !7246

if.then14:                                        ; preds = %for.body
  %19 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !7247
  store %struct.DeviceCtlBlk* %19, %struct.DeviceCtlBlk** %start, align 8, !dbg !7249
  br label %for.end, !dbg !7250

if.end15:                                         ; preds = %for.body
  br label %for.inc, !dbg !7244

for.inc:                                          ; preds = %if.end15
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !7251, metadata !DIExpression()), !dbg !7253
  %20 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !7253
  %list17 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %20, i32 0, i32 0, !dbg !7253
  %next18 = getelementptr inbounds %struct.list_head, %struct.list_head* %list17, i32 0, i32 0, !dbg !7253
  %21 = load %struct.list_head*, %struct.list_head** %next18, align 8, !dbg !7253
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !7253
  store i8* %22, i8** %__mptr16, align 8, !dbg !7253
  br label %do.body19, !dbg !7253

do.body19:                                        ; preds = %for.inc
  br label %do.end20, !dbg !7254

do.end20:                                         ; preds = %do.body19
  %23 = load i8*, i8** %__mptr16, align 8, !dbg !7253
  %add.ptr22 = getelementptr i8, i8* %23, i64 0, !dbg !7253
  %24 = bitcast i8* %add.ptr22 to %struct.DeviceCtlBlk*, !dbg !7253
  store %struct.DeviceCtlBlk* %24, %struct.DeviceCtlBlk** %tmp21, align 8, !dbg !7254
  %25 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp21, align 8, !dbg !7253
  store %struct.DeviceCtlBlk* %25, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !7239
  br label %for.cond, !dbg !7239, !llvm.loop !7256

for.end:                                          ; preds = %if.then14, %for.cond
  %26 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %start, align 8, !dbg !7258
  %tobool23 = icmp ne %struct.DeviceCtlBlk* %26, null, !dbg !7258
  br i1 %tobool23, label %if.end32, label %if.then24, !dbg !7260

if.then24:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !7261, metadata !DIExpression()), !dbg !7264
  %27 = load %struct.list_head*, %struct.list_head** %dcb_list_head, align 8, !dbg !7264
  %next26 = getelementptr inbounds %struct.list_head, %struct.list_head* %27, i32 0, i32 0, !dbg !7264
  %28 = load %struct.list_head*, %struct.list_head** %next26, align 8, !dbg !7264
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !7264
  store i8* %29, i8** %__mptr25, align 8, !dbg !7264
  br label %do.body27, !dbg !7264

do.body27:                                        ; preds = %if.then24
  br label %do.end28, !dbg !7265

do.end28:                                         ; preds = %do.body27
  %30 = load i8*, i8** %__mptr25, align 8, !dbg !7264
  %add.ptr30 = getelementptr i8, i8* %30, i64 0, !dbg !7264
  %31 = bitcast i8* %add.ptr30 to %struct.DeviceCtlBlk*, !dbg !7264
  store %struct.DeviceCtlBlk* %31, %struct.DeviceCtlBlk** %tmp29, align 8, !dbg !7265
  %32 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp29, align 8, !dbg !7264
  store %struct.DeviceCtlBlk* %32, %struct.DeviceCtlBlk** %start, align 8, !dbg !7267
  %33 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %start, align 8, !dbg !7268
  %34 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7269
  %dcb_run_robin31 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %34, i32 0, i32 4, !dbg !7270
  store %struct.DeviceCtlBlk* %33, %struct.DeviceCtlBlk** %dcb_run_robin31, align 8, !dbg !7271
  br label %if.end32, !dbg !7272

if.end32:                                         ; preds = %do.end28, %for.end
  %35 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %start, align 8, !dbg !7273
  store %struct.DeviceCtlBlk* %35, %struct.DeviceCtlBlk** %pos, align 8, !dbg !7274
  br label %do.body33, !dbg !7275

do.body33:                                        ; preds = %do.cond, %if.end32
  call void @llvm.dbg.declare(metadata %struct.list_head** %waiting_list_head, metadata !7276, metadata !DIExpression()), !dbg !7278
  %36 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %pos, align 8, !dbg !7279
  %srb_waiting_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %36, i32 0, i32 3, !dbg !7280
  store %struct.list_head* %srb_waiting_list, %struct.list_head** %waiting_list_head, align 8, !dbg !7278
  %37 = load %struct.list_head*, %struct.list_head** %dcb_list_head, align 8, !dbg !7281
  %38 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7282
  %dcb_run_robin34 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %38, i32 0, i32 4, !dbg !7283
  %39 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb_run_robin34, align 8, !dbg !7283
  %call35 = call %struct.DeviceCtlBlk* @dcb_get_next(%struct.list_head* %37, %struct.DeviceCtlBlk* %39) #11, !dbg !7284
  %40 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7285
  %dcb_run_robin36 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %40, i32 0, i32 4, !dbg !7286
  store %struct.DeviceCtlBlk* %call35, %struct.DeviceCtlBlk** %dcb_run_robin36, align 8, !dbg !7287
  %41 = load %struct.list_head*, %struct.list_head** %waiting_list_head, align 8, !dbg !7288
  %call37 = call i32 @list_empty(%struct.list_head* %41) #11, !dbg !7290
  %tobool38 = icmp ne i32 %call37, 0, !dbg !7290
  br i1 %tobool38, label %if.then44, label %lor.lhs.false39, !dbg !7291

lor.lhs.false39:                                  ; preds = %do.body33
  %42 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %pos, align 8, !dbg !7292
  %max_command = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %42, i32 0, i32 6, !dbg !7293
  %43 = load i16, i16* %max_command, align 4, !dbg !7293
  %conv40 = zext i16 %43 to i32, !dbg !7292
  %44 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %pos, align 8, !dbg !7294
  %srb_going_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %44, i32 0, i32 2, !dbg !7295
  %call41 = call i32 @list_size(%struct.list_head* %srb_going_list) #11, !dbg !7296
  %cmp42 = icmp ule i32 %conv40, %call41, !dbg !7297
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !7298

if.then44:                                        ; preds = %lor.lhs.false39, %do.body33
  %45 = load %struct.list_head*, %struct.list_head** %dcb_list_head, align 8, !dbg !7299
  %46 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %pos, align 8, !dbg !7301
  %call45 = call %struct.DeviceCtlBlk* @dcb_get_next(%struct.list_head* %45, %struct.DeviceCtlBlk* %46) #11, !dbg !7302
  store %struct.DeviceCtlBlk* %call45, %struct.DeviceCtlBlk** %pos, align 8, !dbg !7303
  br label %if.end59, !dbg !7304

if.else:                                          ; preds = %lor.lhs.false39
  call void @llvm.dbg.declare(metadata i8** %__mptr46, metadata !7305, metadata !DIExpression()), !dbg !7308
  %47 = load %struct.list_head*, %struct.list_head** %waiting_list_head, align 8, !dbg !7308
  %next47 = getelementptr inbounds %struct.list_head, %struct.list_head* %47, i32 0, i32 0, !dbg !7308
  %48 = load %struct.list_head*, %struct.list_head** %next47, align 8, !dbg !7308
  %49 = bitcast %struct.list_head* %48 to i8*, !dbg !7308
  store i8* %49, i8** %__mptr46, align 8, !dbg !7308
  br label %do.body48, !dbg !7308

do.body48:                                        ; preds = %if.else
  br label %do.end49, !dbg !7309

do.end49:                                         ; preds = %do.body48
  %50 = load i8*, i8** %__mptr46, align 8, !dbg !7308
  %add.ptr51 = getelementptr i8, i8* %50, i64 0, !dbg !7308
  %51 = bitcast i8* %add.ptr51 to %struct.ScsiReqBlk*, !dbg !7308
  store %struct.ScsiReqBlk* %51, %struct.ScsiReqBlk** %tmp50, align 8, !dbg !7309
  %52 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp50, align 8, !dbg !7308
  store %struct.ScsiReqBlk* %52, %struct.ScsiReqBlk** %srb, align 8, !dbg !7311
  %53 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7312
  %54 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %pos, align 8, !dbg !7314
  %55 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !7315
  %call52 = call zeroext i8 @start_scsi(%struct.AdapterCtlBlk* %53, %struct.DeviceCtlBlk* %54, %struct.ScsiReqBlk* %55) #11, !dbg !7316
  %tobool53 = icmp ne i8 %call52, 0, !dbg !7316
  br i1 %tobool53, label %if.else57, label %if.then54, !dbg !7317

if.then54:                                        ; preds = %do.end49
  %56 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !7318
  %list55 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %56, i32 0, i32 0, !dbg !7319
  %57 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %pos, align 8, !dbg !7320
  %srb_going_list56 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %57, i32 0, i32 2, !dbg !7321
  call void @list_move(%struct.list_head* %list55, %struct.list_head* %srb_going_list56) #11, !dbg !7322
  br label %if.end58, !dbg !7322

if.else57:                                        ; preds = %do.end49
  %58 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7323
  call void @waiting_set_timer(%struct.AdapterCtlBlk* %58, i64 5) #11, !dbg !7324
  br label %if.end58

if.end58:                                         ; preds = %if.else57, %if.then54
  br label %do.end62, !dbg !7325

if.end59:                                         ; preds = %if.then44
  br label %do.cond, !dbg !7326

do.cond:                                          ; preds = %if.end59
  %59 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %pos, align 8, !dbg !7327
  %60 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %start, align 8, !dbg !7328
  %cmp60 = icmp ne %struct.DeviceCtlBlk* %59, %60, !dbg !7329
  br i1 %cmp60, label %do.body33, label %do.end62, !dbg !7326, !llvm.loop !7330

do.end62:                                         ; preds = %if.then, %if.then9, %do.cond, %if.end58
  ret void, !dbg !7332
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @send_srb(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb) #2 !dbg !7333 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !7336, metadata !DIExpression()), !dbg !7337
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !7338, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !7340, metadata !DIExpression()), !dbg !7341
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7342
  %dcb1 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 1, !dbg !7343
  %1 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb1, align 8, !dbg !7343
  store %struct.DeviceCtlBlk* %1, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !7341
  %2 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !7344
  %max_command = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %2, i32 0, i32 6, !dbg !7346
  %3 = load i16, i16* %max_command, align 4, !dbg !7346
  %conv = zext i16 %3 to i32, !dbg !7344
  %4 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !7347
  %srb_going_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %4, i32 0, i32 2, !dbg !7348
  %call = call i32 @list_size(%struct.list_head* %srb_going_list) #11, !dbg !7349
  %cmp = icmp ule i32 %conv, %call, !dbg !7350
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7351

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7352
  %active_dcb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %5, i32 0, i32 5, !dbg !7353
  %6 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %active_dcb, align 8, !dbg !7353
  %tobool = icmp ne %struct.DeviceCtlBlk* %6, null, !dbg !7352
  br i1 %tobool, label %if.then, label %lor.lhs.false3, !dbg !7354

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %7 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7355
  %acb_flag = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %7, i32 0, i32 15, !dbg !7356
  %8 = load i8, i8* %acb_flag, align 1, !dbg !7356
  %conv4 = zext i8 %8 to i32, !dbg !7355
  %and = and i32 %conv4, 7, !dbg !7357
  %tobool5 = icmp ne i32 %and, 0, !dbg !7357
  br i1 %tobool5, label %if.then, label %if.end, !dbg !7358

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %9 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7359
  %list = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %9, i32 0, i32 0, !dbg !7361
  %10 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !7362
  %srb_waiting_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %10, i32 0, i32 3, !dbg !7363
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %srb_waiting_list) #11, !dbg !7364
  %11 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7365
  call void @waiting_process_next(%struct.AdapterCtlBlk* %11) #11, !dbg !7366
  br label %if.end13, !dbg !7367

if.end:                                           ; preds = %lor.lhs.false3
  %12 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7368
  %13 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !7370
  %14 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7371
  %call6 = call zeroext i8 @start_scsi(%struct.AdapterCtlBlk* %12, %struct.DeviceCtlBlk* %13, %struct.ScsiReqBlk* %14) #11, !dbg !7372
  %tobool7 = icmp ne i8 %call6, 0, !dbg !7372
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !7373

if.then8:                                         ; preds = %if.end
  %15 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7374
  %list9 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %15, i32 0, i32 0, !dbg !7376
  %16 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !7377
  %srb_going_list10 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %16, i32 0, i32 2, !dbg !7378
  call void @list_add_tail(%struct.list_head* %list9, %struct.list_head* %srb_going_list10) #11, !dbg !7379
  br label %if.end13, !dbg !7380

if.else:                                          ; preds = %if.end
  %17 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7381
  %list11 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %17, i32 0, i32 0, !dbg !7383
  %18 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !7384
  %srb_waiting_list12 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %18, i32 0, i32 3, !dbg !7385
  call void @list_add(%struct.list_head* %list11, %struct.list_head* %srb_waiting_list12) #11, !dbg !7386
  %19 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7387
  call void @waiting_set_timer(%struct.AdapterCtlBlk* %19, i64 5) #11, !dbg !7388
  br label %if.end13

if.end13:                                         ; preds = %if.then, %if.else, %if.then8
  ret void, !dbg !7389
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #2 !dbg !7390 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7391, metadata !DIExpression()), !dbg !7392
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7393
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !7395
  br i1 %call, label %if.end, label %if.then, !dbg !7396

if.then:                                          ; preds = %entry
  br label %return, !dbg !7397

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7398
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7399
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7399
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7400
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7401
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7401
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !7402
  br label %return, !dbg !7403

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #2 !dbg !7404 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7407, metadata !DIExpression()), !dbg !7408
  ret i1 true, !dbg !7409
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !7410 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7411, metadata !DIExpression()), !dbg !7412
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7413, metadata !DIExpression()), !dbg !7414
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7415
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7416
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7417
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !7418
  br label %do.body, !dbg !7419

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !7420

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !7422

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !7420

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7424
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7424
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7424
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !7424
  br label %do.end5, !dbg !7424

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !7420

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !7426
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_dma_map(%struct.scsi_cmnd*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_bufflen(%struct.scsi_cmnd* %cmd) #2 !dbg !7427 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !7430, metadata !DIExpression()), !dbg !7431
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7432
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !7433
  %length = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 1, !dbg !7434
  %1 = load i32, i32* %length, align 8, !dbg !7434
  ret i32 %1, !dbg !7435
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %cmd) #2 !dbg !7436 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !7439, metadata !DIExpression()), !dbg !7440
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !7441
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !7442
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !7443
  %sgl = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 0, !dbg !7444
  %1 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !7444
  ret %struct.scatterlist* %1, !dbg !7445
}

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !5838 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7446, metadata !DIExpression()), !dbg !7447
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7448, metadata !DIExpression()), !dbg !7449
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7450, metadata !DIExpression()), !dbg !7451
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !7452, metadata !DIExpression()), !dbg !7453
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !7454, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !7456, metadata !DIExpression()), !dbg !7459
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7459
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #11, !dbg !7459
  %lnot = xor i1 %call, true, !dbg !7459
  %lnot1 = xor i1 %lnot, true, !dbg !7459
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7459
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !7459
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !7460
  %tobool = icmp ne i32 %1, 0, !dbg !7460
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7460

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !7460
  %tobool2 = trunc i8 %2 to i1, !dbg !7460
  %lnot3 = xor i1 %tobool2, true, !dbg !7460
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !7462
  %lnot5 = xor i1 %3, true, !dbg !7460
  %lnot7 = xor i1 %lnot5, true, !dbg !7460
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !7460
  %conv = sext i32 %lnot.ext8 to i64, !dbg !7460
  %tobool9 = icmp ne i64 %conv, 0, !dbg !7460
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !7459

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !7463
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7465, metadata !DIExpression()), !dbg !7467
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !7467
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !7468
  %tobool10 = icmp ne i32 %4, 0, !dbg !7468
  %lnot11 = xor i1 %tobool10, true, !dbg !7468
  %lnot13 = xor i1 %lnot11, true, !dbg !7468
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !7468
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !7468
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !7468
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !7467

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !7468

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !7470

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !7472

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7470
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #11, !dbg !7470
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7470
  %call20 = call i8* @dev_name(%struct.device* %6) #11, !dbg !7470
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %call19, i8* %call20) #11, !dbg !7470
  br label %do.body21, !dbg !7470

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !7474

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !7476

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !7474

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 276, i32 2313, i64 12) #6, !dbg !7478, !srcloc !7480
  br label %do.end25, !dbg !7478

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 285) #6, !dbg !7481, !srcloc !7483
  br label %do.body26, !dbg !7474

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !7484

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !7474

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !7470

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !7486

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !7470

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !7470

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !7467
  %tobool32 = icmp ne i32 %7, 0, !dbg !7467
  %lnot33 = xor i1 %tobool32, true, !dbg !7467
  %lnot35 = xor i1 %lnot33, true, !dbg !7467
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !7467
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !7467
  store i64 %conv37, i64* %tmp, align 8, !dbg !7468
  %8 = load i64, i64* %tmp, align 8, !dbg !7467
  br label %if.end38, !dbg !7463

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !7459
  %tobool40 = icmp ne i32 %9, 0, !dbg !7459
  %lnot41 = xor i1 %tobool40, true, !dbg !7459
  %lnot43 = xor i1 %lnot41, true, !dbg !7459
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !7459
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !7459
  store i64 %conv45, i64* %tmp39, align 8, !dbg !7460
  %10 = load i64, i64* %tmp39, align 8, !dbg !7459
  %tobool46 = icmp ne i64 %10, 0, !dbg !7488
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !7489

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !7490
  br label %return, !dbg !7490

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7491
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !7492
  %13 = load i64, i64* %size.addr, align 8, !dbg !7493
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #11, !dbg !7494
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7495
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !7496
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !7496
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !7496
  %18 = ptrtoint i8* %17 to i64, !dbg !7496
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #11, !dbg !7496
  %shr = lshr i64 %call49, 12, !dbg !7496
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !7496
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !7497
  %20 = ptrtoint i8* %19 to i64, !dbg !7497
  %and = and i64 %20, 4095, !dbg !7497
  %21 = load i64, i64* %size.addr, align 8, !dbg !7498
  %22 = load i32, i32* %dir.addr, align 4, !dbg !7499
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !7500
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #11, !dbg !7501
  store i64 %call50, i64* %retval, align 8, !dbg !7502
  br label %return, !dbg !7502

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !7503
  ret i64 %24, !dbg !7503
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #1

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #2 !dbg !7504 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7507, metadata !DIExpression()), !dbg !7508
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7509
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !7511
  %1 = load i8*, i8** %init_name, align 8, !dbg !7511
  %tobool = icmp ne i8* %1, null, !dbg !7509
  br i1 %tobool, label %if.then, label %if.end, !dbg !7512

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7513
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !7514
  %3 = load i8*, i8** %init_name1, align 8, !dbg !7514
  store i8* %3, i8** %retval, align 8, !dbg !7515
  br label %return, !dbg !7515

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7516
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !7517
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !7518
  store i8* %call, i8** %retval, align 8, !dbg !7519
  br label %return, !dbg !7519

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !7520
  ret i8* %5, !dbg !7520
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #2 !dbg !7521 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7524, metadata !DIExpression()), !dbg !7525
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !7526, metadata !DIExpression()), !dbg !7527
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !7528, metadata !DIExpression()), !dbg !7529
  ret void, !dbg !7530
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #2 !dbg !7531 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !7535, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.declare(metadata i64* %y, metadata !7537, metadata !DIExpression()), !dbg !7538
  %0 = load i64, i64* %x.addr, align 8, !dbg !7539
  %sub = sub i64 %0, -2147483648, !dbg !7540
  store i64 %sub, i64* %y, align 8, !dbg !7538
  %1 = load i64, i64* %y, align 8, !dbg !7541
  %2 = load i64, i64* %x.addr, align 8, !dbg !7542
  %3 = load i64, i64* %y, align 8, !dbg !7543
  %cmp = icmp ugt i64 %2, %3, !dbg !7544
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7545

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !7546
  br label %cond.end, !dbg !7545

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !7547
  %sub1 = sub i64 -2147483648, %5, !dbg !7548
  br label %cond.end, !dbg !7545

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !7545
  %add = add i64 %1, %cond, !dbg !7549
  store i64 %add, i64* %x.addr, align 8, !dbg !7550
  %6 = load i64, i64* %x.addr, align 8, !dbg !7551
  ret i64 %6, !dbg !7552
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #2 !dbg !7553 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !7558, metadata !DIExpression()), !dbg !7559
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !7560
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !7561
  %1 = load i8*, i8** %name, align 8, !dbg !7561
  ret i8* %1, !dbg !7562
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !7563 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7566, metadata !DIExpression()), !dbg !7567
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7568, metadata !DIExpression()), !dbg !7569
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7570, metadata !DIExpression()), !dbg !7571
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7572
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7574
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7575
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !7576
  br i1 %call, label %if.end, label %if.then, !dbg !7577

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !7578

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7579
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7580
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !7581
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !7582
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7583
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7584
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !7585
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !7586
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7587
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7588
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !7589
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !7590
  br label %do.body, !dbg !7591

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !7592

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !7594

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !7592

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7596
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7596
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !7596
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !7596
  br label %do.end7, !dbg !7596

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !7592

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !7598
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !7599 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7602, metadata !DIExpression()), !dbg !7603
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7604, metadata !DIExpression()), !dbg !7605
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7606, metadata !DIExpression()), !dbg !7607
  ret i1 true, !dbg !7608
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @timer_pending(%struct.timer_list* %timer) #2 !dbg !7609 {
entry:
  %timer.addr = alloca %struct.timer_list*, align 8
  store %struct.timer_list* %timer, %struct.timer_list** %timer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %timer.addr, metadata !7614, metadata !DIExpression()), !dbg !7615
  %0 = load %struct.timer_list*, %struct.timer_list** %timer.addr, align 8, !dbg !7616
  %entry1 = getelementptr inbounds %struct.timer_list, %struct.timer_list* %0, i32 0, i32 0, !dbg !7617
  %call = call i32 @hlist_unhashed_lockless(%struct.hlist_node* %entry1) #11, !dbg !7618
  %tobool = icmp ne i32 %call, 0, !dbg !7619
  %lnot = xor i1 %tobool, true, !dbg !7619
  %lnot.ext = zext i1 %lnot to i32, !dbg !7619
  ret i32 %lnot.ext, !dbg !7620
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.DeviceCtlBlk* @dcb_get_next(%struct.list_head* %head, %struct.DeviceCtlBlk* %pos) #2 !dbg !7621 {
entry:
  %retval = alloca %struct.DeviceCtlBlk*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  %pos.addr = alloca %struct.DeviceCtlBlk*, align 8
  %use_next = alloca i32, align 4
  %next = alloca %struct.DeviceCtlBlk*, align 8
  %i = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr8 = alloca i8*, align 8
  %tmp13 = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp21 = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr29 = alloca i8*, align 8
  %tmp34 = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7624, metadata !DIExpression()), !dbg !7625
  store %struct.DeviceCtlBlk* %pos, %struct.DeviceCtlBlk** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %pos.addr, metadata !7626, metadata !DIExpression()), !dbg !7627
  call void @llvm.dbg.declare(metadata i32* %use_next, metadata !7628, metadata !DIExpression()), !dbg !7629
  store i32 0, i32* %use_next, align 4, !dbg !7629
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %next, metadata !7630, metadata !DIExpression()), !dbg !7631
  store %struct.DeviceCtlBlk* null, %struct.DeviceCtlBlk** %next, align 8, !dbg !7631
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %i, metadata !7632, metadata !DIExpression()), !dbg !7633
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7634
  %call = call i32 @list_empty(%struct.list_head* %0) #11, !dbg !7636
  %tobool = icmp ne i32 %call, 0, !dbg !7636
  br i1 %tobool, label %if.then, label %if.end, !dbg !7637

if.then:                                          ; preds = %entry
  store %struct.DeviceCtlBlk* null, %struct.DeviceCtlBlk** %retval, align 8, !dbg !7638
  br label %return, !dbg !7638

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7639, metadata !DIExpression()), !dbg !7642
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7642
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !7642
  %2 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !7642
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !7642
  store i8* %3, i8** %__mptr, align 8, !dbg !7642
  br label %do.body, !dbg !7642

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !7643

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !7642
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !7642
  %5 = bitcast i8* %add.ptr to %struct.DeviceCtlBlk*, !dbg !7642
  store %struct.DeviceCtlBlk* %5, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !7643
  %6 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !7642
  store %struct.DeviceCtlBlk* %6, %struct.DeviceCtlBlk** %i, align 8, !dbg !7645
  br label %for.cond, !dbg !7645

for.cond:                                         ; preds = %do.end12, %do.end
  %7 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !7646
  %list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %7, i32 0, i32 0, !dbg !7646
  %8 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7646
  %cmp = icmp eq %struct.list_head* %list, %8, !dbg !7646
  %lnot = xor i1 %cmp, true, !dbg !7646
  br i1 %lnot, label %for.body, label %for.end, !dbg !7645

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %use_next, align 4, !dbg !7648
  %tobool2 = icmp ne i32 %9, 0, !dbg !7648
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !7650

if.then3:                                         ; preds = %for.body
  %10 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !7651
  store %struct.DeviceCtlBlk* %10, %struct.DeviceCtlBlk** %next, align 8, !dbg !7653
  br label %for.end, !dbg !7654

if.else:                                          ; preds = %for.body
  %11 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !7655
  %12 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %pos.addr, align 8, !dbg !7657
  %cmp4 = icmp eq %struct.DeviceCtlBlk* %11, %12, !dbg !7658
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !7659

if.then5:                                         ; preds = %if.else
  store i32 1, i32* %use_next, align 4, !dbg !7660
  br label %if.end6, !dbg !7662

if.end6:                                          ; preds = %if.then5, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !7648

for.inc:                                          ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i8** %__mptr8, metadata !7663, metadata !DIExpression()), !dbg !7665
  %13 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !7665
  %list9 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %13, i32 0, i32 0, !dbg !7665
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %list9, i32 0, i32 0, !dbg !7665
  %14 = load %struct.list_head*, %struct.list_head** %next10, align 8, !dbg !7665
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !7665
  store i8* %15, i8** %__mptr8, align 8, !dbg !7665
  br label %do.body11, !dbg !7665

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !7666

do.end12:                                         ; preds = %do.body11
  %16 = load i8*, i8** %__mptr8, align 8, !dbg !7665
  %add.ptr14 = getelementptr i8, i8* %16, i64 0, !dbg !7665
  %17 = bitcast i8* %add.ptr14 to %struct.DeviceCtlBlk*, !dbg !7665
  store %struct.DeviceCtlBlk* %17, %struct.DeviceCtlBlk** %tmp13, align 8, !dbg !7666
  %18 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp13, align 8, !dbg !7665
  store %struct.DeviceCtlBlk* %18, %struct.DeviceCtlBlk** %i, align 8, !dbg !7646
  br label %for.cond, !dbg !7646, !llvm.loop !7668

for.end:                                          ; preds = %if.then3, %for.cond
  %19 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %next, align 8, !dbg !7670
  %tobool15 = icmp ne %struct.DeviceCtlBlk* %19, null, !dbg !7670
  br i1 %tobool15, label %if.end37, label %if.then16, !dbg !7672

if.then16:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !7673, metadata !DIExpression()), !dbg !7676
  %20 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7676
  %next18 = getelementptr inbounds %struct.list_head, %struct.list_head* %20, i32 0, i32 0, !dbg !7676
  %21 = load %struct.list_head*, %struct.list_head** %next18, align 8, !dbg !7676
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !7676
  store i8* %22, i8** %__mptr17, align 8, !dbg !7676
  br label %do.body19, !dbg !7676

do.body19:                                        ; preds = %if.then16
  br label %do.end20, !dbg !7677

do.end20:                                         ; preds = %do.body19
  %23 = load i8*, i8** %__mptr17, align 8, !dbg !7676
  %add.ptr22 = getelementptr i8, i8* %23, i64 0, !dbg !7676
  %24 = bitcast i8* %add.ptr22 to %struct.DeviceCtlBlk*, !dbg !7676
  store %struct.DeviceCtlBlk* %24, %struct.DeviceCtlBlk** %tmp21, align 8, !dbg !7677
  %25 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp21, align 8, !dbg !7676
  store %struct.DeviceCtlBlk* %25, %struct.DeviceCtlBlk** %i, align 8, !dbg !7679
  br label %for.cond23, !dbg !7679

for.cond23:                                       ; preds = %do.end33, %do.end20
  %26 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !7680
  %list24 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %26, i32 0, i32 0, !dbg !7680
  %27 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7680
  %cmp25 = icmp eq %struct.list_head* %list24, %27, !dbg !7680
  %lnot26 = xor i1 %cmp25, true, !dbg !7680
  br i1 %lnot26, label %for.body27, label %for.end36, !dbg !7679

for.body27:                                       ; preds = %for.cond23
  %28 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !7682
  store %struct.DeviceCtlBlk* %28, %struct.DeviceCtlBlk** %next, align 8, !dbg !7684
  br label %for.end36, !dbg !7685

for.inc28:                                        ; No predecessors!
  call void @llvm.dbg.declare(metadata i8** %__mptr29, metadata !7686, metadata !DIExpression()), !dbg !7688
  %29 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !7688
  %list30 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %29, i32 0, i32 0, !dbg !7688
  %next31 = getelementptr inbounds %struct.list_head, %struct.list_head* %list30, i32 0, i32 0, !dbg !7688
  %30 = load %struct.list_head*, %struct.list_head** %next31, align 8, !dbg !7688
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !7688
  store i8* %31, i8** %__mptr29, align 8, !dbg !7688
  br label %do.body32, !dbg !7688

do.body32:                                        ; preds = %for.inc28
  br label %do.end33, !dbg !7689

do.end33:                                         ; preds = %do.body32
  %32 = load i8*, i8** %__mptr29, align 8, !dbg !7688
  %add.ptr35 = getelementptr i8, i8* %32, i64 0, !dbg !7688
  %33 = bitcast i8* %add.ptr35 to %struct.DeviceCtlBlk*, !dbg !7688
  store %struct.DeviceCtlBlk* %33, %struct.DeviceCtlBlk** %tmp34, align 8, !dbg !7689
  %34 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp34, align 8, !dbg !7688
  store %struct.DeviceCtlBlk* %34, %struct.DeviceCtlBlk** %i, align 8, !dbg !7680
  br label %for.cond23, !dbg !7680, !llvm.loop !7691

for.end36:                                        ; preds = %for.body27, %for.cond23
  br label %if.end37, !dbg !7692

if.end37:                                         ; preds = %for.end36, %for.end
  %35 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %next, align 8, !dbg !7693
  store %struct.DeviceCtlBlk* %35, %struct.DeviceCtlBlk** %retval, align 8, !dbg !7694
  br label %return, !dbg !7694

return:                                           ; preds = %if.end37, %if.then
  %36 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %retval, align 8, !dbg !7695
  ret %struct.DeviceCtlBlk* %36, !dbg !7695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_size(%struct.list_head* %head) #2 !dbg !7696 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %count = alloca i32, align 4
  %pos = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7699, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7701, metadata !DIExpression()), !dbg !7702
  store i32 0, i32* %count, align 4, !dbg !7702
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos, metadata !7703, metadata !DIExpression()), !dbg !7704
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7705
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !7705
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7705
  store %struct.list_head* %1, %struct.list_head** %pos, align 8, !dbg !7705
  br label %for.cond, !dbg !7705

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !7707
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7707
  %cmp = icmp ne %struct.list_head* %2, %3, !dbg !7707
  br i1 %cmp, label %for.body, label %for.end, !dbg !7705

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %count, align 4, !dbg !7709
  %inc = add i32 %4, 1, !dbg !7709
  store i32 %inc, i32* %count, align 4, !dbg !7709
  br label %for.inc, !dbg !7710

for.inc:                                          ; preds = %for.body
  %5 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !7707
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %5, i32 0, i32 0, !dbg !7707
  %6 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !7707
  store %struct.list_head* %6, %struct.list_head** %pos, align 8, !dbg !7707
  br label %for.cond, !dbg !7707, !llvm.loop !7711

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %count, align 4, !dbg !7713
  ret i32 %7, !dbg !7714
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @start_scsi(%struct.AdapterCtlBlk* %acb, %struct.DeviceCtlBlk* %dcb, %struct.ScsiReqBlk* %srb) #2 !dbg !7715 {
entry:
  %retval = alloca i8, align 1
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %s_stat2 = alloca i16, align 2
  %return_code = alloca i16, align 2
  %s_stat = alloca i8, align 1
  %scsicommand = alloca i8, align 1
  %i = alloca i8, align 1
  %identify_message = alloca i8, align 1
  %ptr = alloca i8*, align 8
  %tag_mask = alloca i32, align 4
  %tag_number141 = alloca i8, align 1
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !7718, metadata !DIExpression()), !dbg !7719
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !7720, metadata !DIExpression()), !dbg !7721
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !7722, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.declare(metadata i16* %s_stat2, metadata !7724, metadata !DIExpression()), !dbg !7725
  call void @llvm.dbg.declare(metadata i16* %return_code, metadata !7726, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.declare(metadata i8* %s_stat, metadata !7728, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.declare(metadata i8* %scsicommand, metadata !7730, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.declare(metadata i8* %i, metadata !7732, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.declare(metadata i8* %identify_message, metadata !7734, metadata !DIExpression()), !dbg !7735
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !7736, metadata !DIExpression()), !dbg !7737
  br label %do.body, !dbg !7738

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7739

do.end:                                           ; preds = %do.body
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7741
  %tag_number = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 17, !dbg !7742
  store i8 -1, i8* %tag_number, align 2, !dbg !7743
  %1 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7744
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %1, i32 0, i32 1, !dbg !7744
  %2 = load i64, i64* %io_port_base, align 8, !dbg !7744
  %add = add i64 %2, 131, !dbg !7744
  %conv = trunc i64 %add to i32, !dbg !7744
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !7744
  store i8 %call, i8* %s_stat, align 1, !dbg !7745
  store i16 0, i16* %s_stat2, align 2, !dbg !7746
  %3 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7747
  %io_port_base1 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %3, i32 0, i32 1, !dbg !7747
  %4 = load i64, i64* %io_port_base1, align 8, !dbg !7747
  %add2 = add i64 %4, 128, !dbg !7747
  %conv3 = trunc i64 %add2 to i32, !dbg !7747
  %call4 = call zeroext i16 @inw(i32 %conv3) #11, !dbg !7747
  store i16 %call4, i16* %s_stat2, align 2, !dbg !7748
  %5 = load i8, i8* %s_stat, align 1, !dbg !7749
  %conv5 = zext i8 %5 to i32, !dbg !7749
  %and = and i32 %conv5, 32, !dbg !7751
  %tobool = icmp ne i32 %and, 0, !dbg !7751
  br i1 %tobool, label %if.then, label %if.end, !dbg !7752

if.then:                                          ; preds = %do.end
  br label %do.body6, !dbg !7753

do.body6:                                         ; preds = %if.then
  br label %do.end7, !dbg !7755

do.end7:                                          ; preds = %do.body6
  store i8 1, i8* %retval, align 1, !dbg !7757
  br label %return, !dbg !7757

if.end:                                           ; preds = %do.end
  %6 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7758
  %active_dcb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %6, i32 0, i32 5, !dbg !7760
  %7 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %active_dcb, align 8, !dbg !7760
  %tobool8 = icmp ne %struct.DeviceCtlBlk* %7, null, !dbg !7758
  br i1 %tobool8, label %if.then9, label %if.end16, !dbg !7761

if.then9:                                         ; preds = %if.end
  %8 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7762
  %cmd = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %8, i32 0, i32 2, !dbg !7762
  %9 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !7762
  %10 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7762
  %active_dcb10 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %10, i32 0, i32 5, !dbg !7762
  %11 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %active_dcb10, align 8, !dbg !7762
  %active_srb = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %11, i32 0, i32 4, !dbg !7762
  %12 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %active_srb, align 8, !dbg !7762
  %tobool11 = icmp ne %struct.ScsiReqBlk* %12, null, !dbg !7762
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !7762

cond.true:                                        ; preds = %if.then9
  %13 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7762
  %active_dcb12 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %13, i32 0, i32 5, !dbg !7762
  %14 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %active_dcb12, align 8, !dbg !7762
  %active_srb13 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %14, i32 0, i32 4, !dbg !7762
  %15 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %active_srb13, align 8, !dbg !7762
  %cmd14 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %15, i32 0, i32 2, !dbg !7762
  %16 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd14, align 8, !dbg !7762
  br label %cond.end, !dbg !7762

cond.false:                                       ; preds = %if.then9
  br label %cond.end, !dbg !7762

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.scsi_cmnd* [ %16, %cond.true ], [ null, %cond.false ], !dbg !7762
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.14, i64 0, i64 0), %struct.scsi_cmnd* %9, %struct.scsi_cmnd* %cond) #12, !dbg !7762
  store i8 1, i8* %retval, align 1, !dbg !7764
  br label %return, !dbg !7764

if.end16:                                         ; preds = %if.end
  %17 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7765
  %io_port_base17 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %17, i32 0, i32 1, !dbg !7765
  %18 = load i64, i64* %io_port_base17, align 8, !dbg !7765
  %add18 = add i64 %18, 128, !dbg !7765
  %conv19 = trunc i64 %add18 to i32, !dbg !7765
  %call20 = call zeroext i16 @inw(i32 %conv19) #11, !dbg !7765
  %conv21 = zext i16 %call20 to i32, !dbg !7765
  %and22 = and i32 %conv21, 128, !dbg !7767
  %tobool23 = icmp ne i32 %and22, 0, !dbg !7767
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !7768

if.then24:                                        ; preds = %if.end16
  br label %do.body25, !dbg !7769

do.body25:                                        ; preds = %if.then24
  br label %do.end26, !dbg !7771

do.end26:                                         ; preds = %do.body25
  store i8 1, i8* %retval, align 1, !dbg !7773
  br label %return, !dbg !7773

if.end27:                                         ; preds = %if.end16
  %19 = load volatile i64, i64* @jiffies, align 8, !dbg !7774
  %20 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7774
  %last_reset = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %20, i32 0, i32 10, !dbg !7774
  %21 = load i64, i64* %last_reset, align 8, !dbg !7774
  %sub = sub i64 %21, 125, !dbg !7774
  %sub28 = sub i64 %19, %sub, !dbg !7774
  %cmp = icmp slt i64 %sub28, 0, !dbg !7774
  br i1 %cmp, label %if.then30, label %if.end33, !dbg !7776

if.then30:                                        ; preds = %if.end27
  br label %do.body31, !dbg !7777

do.body31:                                        ; preds = %if.then30
  br label %do.end32, !dbg !7779

do.end32:                                         ; preds = %do.body31
  store i8 1, i8* %retval, align 1, !dbg !7781
  br label %return, !dbg !7781

if.end33:                                         ; preds = %if.end27
  %22 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7782
  call void @clear_fifo(%struct.AdapterCtlBlk* %22, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0)) #11, !dbg !7783
  %23 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7784
  %scsi_host = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %23, i32 0, i32 0, !dbg !7784
  %24 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !7784
  %this_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %24, i32 0, i32 24, !dbg !7784
  %25 = load i32, i32* %this_id, align 8, !dbg !7784
  %conv34 = trunc i32 %25 to i8, !dbg !7784
  %26 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7784
  %io_port_base35 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %26, i32 0, i32 1, !dbg !7784
  %27 = load i64, i64* %io_port_base35, align 8, !dbg !7784
  %add36 = add i64 %27, 135, !dbg !7784
  %conv37 = trunc i64 %add36 to i32, !dbg !7784
  call void @outb(i8 zeroext %conv34, i32 %conv37) #11, !dbg !7784
  %28 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7785
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %28, i32 0, i32 7, !dbg !7785
  %29 = load i8, i8* %target_id, align 2, !dbg !7785
  %30 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7785
  %io_port_base38 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %30, i32 0, i32 1, !dbg !7785
  %31 = load i64, i64* %io_port_base38, align 8, !dbg !7785
  %add39 = add i64 %31, 134, !dbg !7785
  %conv40 = trunc i64 %add39 to i32, !dbg !7785
  call void @outb(i8 zeroext %29, i32 %conv40) #11, !dbg !7785
  %32 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7786
  %sync_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %32, i32 0, i32 14, !dbg !7786
  %33 = load i8, i8* %sync_period, align 1, !dbg !7786
  %34 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7786
  %io_port_base41 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %34, i32 0, i32 1, !dbg !7786
  %35 = load i64, i64* %io_port_base41, align 8, !dbg !7786
  %add42 = add i64 %35, 133, !dbg !7786
  %conv43 = trunc i64 %add42 to i32, !dbg !7786
  call void @outb(i8 zeroext %33, i32 %conv43) #11, !dbg !7786
  %36 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7787
  %sync_offset = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %36, i32 0, i32 15, !dbg !7787
  %37 = load i8, i8* %sync_offset, align 2, !dbg !7787
  %38 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7787
  %io_port_base44 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %38, i32 0, i32 1, !dbg !7787
  %39 = load i64, i64* %io_port_base44, align 8, !dbg !7787
  %add45 = add i64 %39, 132, !dbg !7787
  %conv46 = trunc i64 %add45 to i32, !dbg !7787
  call void @outb(i8 zeroext %37, i32 %conv46) #11, !dbg !7787
  %40 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7788
  %scsi_phase = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %40, i32 0, i32 21, !dbg !7789
  store i8 5, i8* %scsi_phase, align 2, !dbg !7790
  %41 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7791
  %identify_msg = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %41, i32 0, i32 9, !dbg !7792
  %42 = load i8, i8* %identify_msg, align 8, !dbg !7792
  store i8 %42, i8* %identify_message, align 1, !dbg !7793
  %43 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7794
  %flag = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %43, i32 0, i32 20, !dbg !7796
  %44 = load i8, i8* %flag, align 1, !dbg !7796
  %conv47 = zext i8 %44 to i32, !dbg !7794
  %and48 = and i32 %conv47, 1, !dbg !7797
  %tobool49 = icmp ne i32 %and48, 0, !dbg !7797
  br i1 %tobool49, label %if.then50, label %if.end54, !dbg !7798

if.then50:                                        ; preds = %if.end33
  %45 = load i8, i8* %identify_message, align 1, !dbg !7799
  %conv51 = zext i8 %45 to i32, !dbg !7799
  %and52 = and i32 %conv51, 191, !dbg !7799
  %conv53 = trunc i32 %and52 to i8, !dbg !7799
  store i8 %conv53, i8* %identify_message, align 1, !dbg !7799
  br label %if.end54, !dbg !7800

if.end54:                                         ; preds = %if.then50, %if.end33
  %46 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7801
  %cmd55 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %46, i32 0, i32 2, !dbg !7803
  %47 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd55, align 8, !dbg !7803
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %47, i32 0, i32 14, !dbg !7804
  %48 = load i8*, i8** %cmnd, align 8, !dbg !7804
  %arrayidx = getelementptr i8, i8* %48, i64 0, !dbg !7801
  %49 = load i8, i8* %arrayidx, align 1, !dbg !7801
  %conv56 = zext i8 %49 to i32, !dbg !7801
  %cmp57 = icmp eq i32 %conv56, 18, !dbg !7805
  br i1 %cmp57, label %land.lhs.true, label %lor.lhs.false, !dbg !7806

lor.lhs.false:                                    ; preds = %if.end54
  %50 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7807
  %cmd59 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %50, i32 0, i32 2, !dbg !7808
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd59, align 8, !dbg !7808
  %cmnd60 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %51, i32 0, i32 14, !dbg !7809
  %52 = load i8*, i8** %cmnd60, align 8, !dbg !7809
  %arrayidx61 = getelementptr i8, i8* %52, i64 0, !dbg !7807
  %53 = load i8, i8* %arrayidx61, align 1, !dbg !7807
  %conv62 = zext i8 %53 to i32, !dbg !7807
  %cmp63 = icmp eq i32 %conv62, 3, !dbg !7810
  br i1 %cmp63, label %land.lhs.true, label %lor.lhs.false65, !dbg !7811

lor.lhs.false65:                                  ; preds = %lor.lhs.false
  %54 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7812
  %flag66 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %54, i32 0, i32 20, !dbg !7813
  %55 = load i8, i8* %flag66, align 1, !dbg !7813
  %conv67 = zext i8 %55 to i32, !dbg !7812
  %and68 = and i32 %conv67, 1, !dbg !7814
  %tobool69 = icmp ne i32 %and68, 0, !dbg !7814
  br i1 %tobool69, label %land.lhs.true, label %if.end127, !dbg !7815

land.lhs.true:                                    ; preds = %lor.lhs.false65, %lor.lhs.false, %if.end54
  %56 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7816
  %sync_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %56, i32 0, i32 12, !dbg !7817
  %57 = load i8, i8* %sync_mode, align 1, !dbg !7817
  %conv70 = zext i8 %57 to i32, !dbg !7816
  %and71 = and i32 %conv70, 4, !dbg !7818
  %tobool72 = icmp ne i32 %and71, 0, !dbg !7818
  br i1 %tobool72, label %land.lhs.true73, label %lor.lhs.false78, !dbg !7819

land.lhs.true73:                                  ; preds = %land.lhs.true
  %58 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7820
  %sync_mode74 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %58, i32 0, i32 12, !dbg !7821
  %59 = load i8, i8* %sync_mode74, align 1, !dbg !7821
  %conv75 = zext i8 %59 to i32, !dbg !7820
  %and76 = and i32 %conv75, 8, !dbg !7822
  %tobool77 = icmp ne i32 %and76, 0, !dbg !7822
  br i1 %tobool77, label %lor.lhs.false78, label %land.lhs.true88, !dbg !7823

lor.lhs.false78:                                  ; preds = %land.lhs.true73, %land.lhs.true
  %60 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7824
  %sync_mode79 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %60, i32 0, i32 12, !dbg !7825
  %61 = load i8, i8* %sync_mode79, align 1, !dbg !7825
  %conv80 = zext i8 %61 to i32, !dbg !7824
  %and81 = and i32 %conv80, 1, !dbg !7826
  %tobool82 = icmp ne i32 %and81, 0, !dbg !7826
  br i1 %tobool82, label %land.lhs.true83, label %if.end127, !dbg !7827

land.lhs.true83:                                  ; preds = %lor.lhs.false78
  %62 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7828
  %sync_mode84 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %62, i32 0, i32 12, !dbg !7829
  %63 = load i8, i8* %sync_mode84, align 1, !dbg !7829
  %conv85 = zext i8 %63 to i32, !dbg !7828
  %and86 = and i32 %conv85, 2, !dbg !7830
  %tobool87 = icmp ne i32 %and86, 0, !dbg !7830
  br i1 %tobool87, label %if.end127, label %land.lhs.true88, !dbg !7831

land.lhs.true88:                                  ; preds = %land.lhs.true83, %land.lhs.true73
  %64 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7832
  %target_lun = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %64, i32 0, i32 8, !dbg !7833
  %65 = load i8, i8* %target_lun, align 1, !dbg !7833
  %conv89 = zext i8 %65 to i32, !dbg !7832
  %cmp90 = icmp eq i32 %conv89, 0, !dbg !7834
  br i1 %cmp90, label %if.then92, label %if.end127, !dbg !7835

if.then92:                                        ; preds = %land.lhs.true88
  %66 = load i8, i8* %identify_message, align 1, !dbg !7836
  %67 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7838
  %msgout_buf = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %67, i32 0, i32 12, !dbg !7839
  %arrayidx93 = getelementptr [6 x i8], [6 x i8]* %msgout_buf, i64 0, i64 0, !dbg !7838
  store i8 %66, i8* %arrayidx93, align 8, !dbg !7840
  %68 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7841
  %msg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %68, i32 0, i32 15, !dbg !7842
  store i8 1, i8* %msg_count, align 8, !dbg !7843
  store i8 -72, i8* %scsicommand, align 1, !dbg !7844
  %69 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7845
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %69, i32 0, i32 10, !dbg !7846
  store i16 4, i16* %state, align 8, !dbg !7847
  %70 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7848
  %sync_mode94 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %70, i32 0, i32 12, !dbg !7850
  %71 = load i8, i8* %sync_mode94, align 1, !dbg !7850
  %conv95 = zext i8 %71 to i32, !dbg !7848
  %and96 = and i32 %conv95, 4, !dbg !7851
  %tobool97 = icmp ne i32 %and96, 0, !dbg !7851
  br i1 %tobool97, label %land.lhs.true98, label %if.end103, !dbg !7852

land.lhs.true98:                                  ; preds = %if.then92
  %72 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7853
  %inquiry7 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %72, i32 0, i32 11, !dbg !7854
  %73 = load i8, i8* %inquiry7, align 2, !dbg !7854
  %conv99 = zext i8 %73 to i32, !dbg !7853
  %and100 = and i32 %conv99, 32, !dbg !7855
  %tobool101 = icmp ne i32 %and100, 0, !dbg !7855
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !7856

if.then102:                                       ; preds = %land.lhs.true98
  %74 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7857
  %75 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7859
  %76 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7860
  call void @build_wdtr(%struct.AdapterCtlBlk* %74, %struct.DeviceCtlBlk* %75, %struct.ScsiReqBlk* %76) #11, !dbg !7861
  br label %no_cmd, !dbg !7862

if.end103:                                        ; preds = %land.lhs.true98, %if.then92
  %77 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7863
  %sync_mode104 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %77, i32 0, i32 12, !dbg !7865
  %78 = load i8, i8* %sync_mode104, align 1, !dbg !7865
  %conv105 = zext i8 %78 to i32, !dbg !7863
  %and106 = and i32 %conv105, 1, !dbg !7866
  %tobool107 = icmp ne i32 %and106, 0, !dbg !7866
  br i1 %tobool107, label %land.lhs.true108, label %if.end114, !dbg !7867

land.lhs.true108:                                 ; preds = %if.end103
  %79 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7868
  %inquiry7109 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %79, i32 0, i32 11, !dbg !7869
  %80 = load i8, i8* %inquiry7109, align 2, !dbg !7869
  %conv110 = zext i8 %80 to i32, !dbg !7868
  %and111 = and i32 %conv110, 16, !dbg !7870
  %tobool112 = icmp ne i32 %and111, 0, !dbg !7870
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !7871

if.then113:                                       ; preds = %land.lhs.true108
  %81 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7872
  %82 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7874
  %83 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7875
  call void @build_sdtr(%struct.AdapterCtlBlk* %81, %struct.DeviceCtlBlk* %82, %struct.ScsiReqBlk* %83) #11, !dbg !7876
  br label %no_cmd, !dbg !7877

if.end114:                                        ; preds = %land.lhs.true108, %if.end103
  %84 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7878
  %sync_mode115 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %84, i32 0, i32 12, !dbg !7880
  %85 = load i8, i8* %sync_mode115, align 1, !dbg !7880
  %conv116 = zext i8 %85 to i32, !dbg !7878
  %and117 = and i32 %conv116, 4, !dbg !7881
  %tobool118 = icmp ne i32 %and117, 0, !dbg !7881
  br i1 %tobool118, label %land.lhs.true119, label %if.end125, !dbg !7882

land.lhs.true119:                                 ; preds = %if.end114
  %86 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7883
  %inquiry7120 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %86, i32 0, i32 11, !dbg !7884
  %87 = load i8, i8* %inquiry7120, align 2, !dbg !7884
  %conv121 = zext i8 %87 to i32, !dbg !7883
  %and122 = and i32 %conv121, 32, !dbg !7885
  %tobool123 = icmp ne i32 %and122, 0, !dbg !7885
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !7886

if.then124:                                       ; preds = %land.lhs.true119
  %88 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7887
  %89 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7889
  %90 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7890
  call void @build_wdtr(%struct.AdapterCtlBlk* %88, %struct.DeviceCtlBlk* %89, %struct.ScsiReqBlk* %90) #11, !dbg !7891
  br label %no_cmd, !dbg !7892

if.end125:                                        ; preds = %land.lhs.true119, %if.end114
  %91 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7893
  %msg_count126 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %91, i32 0, i32 15, !dbg !7894
  store i8 0, i8* %msg_count126, align 8, !dbg !7895
  br label %if.end127, !dbg !7896

if.end127:                                        ; preds = %if.end125, %land.lhs.true88, %land.lhs.true83, %lor.lhs.false78, %lor.lhs.false65
  %92 = load i8, i8* %identify_message, align 1, !dbg !7897
  %93 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7897
  %io_port_base128 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %93, i32 0, i32 1, !dbg !7897
  %94 = load i64, i64* %io_port_base128, align 8, !dbg !7897
  %add129 = add i64 %94, 152, !dbg !7897
  %conv130 = trunc i64 %add129 to i32, !dbg !7897
  call void @outb(i8 zeroext %92, i32 %conv130) #11, !dbg !7897
  store i8 96, i8* %scsicommand, align 1, !dbg !7898
  %95 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7899
  %state131 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %95, i32 0, i32 10, !dbg !7900
  store i16 64, i16* %state131, align 8, !dbg !7901
  %96 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7902
  %sync_mode132 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %96, i32 0, i32 12, !dbg !7904
  %97 = load i8, i8* %sync_mode132, align 1, !dbg !7904
  %conv133 = zext i8 %97 to i32, !dbg !7902
  %and134 = and i32 %conv133, 32, !dbg !7905
  %tobool135 = icmp ne i32 %and134, 0, !dbg !7905
  br i1 %tobool135, label %land.lhs.true136, label %if.end176, !dbg !7906

land.lhs.true136:                                 ; preds = %if.end127
  %98 = load i8, i8* %identify_message, align 1, !dbg !7907
  %conv137 = zext i8 %98 to i32, !dbg !7907
  %and138 = and i32 %conv137, 192, !dbg !7908
  %tobool139 = icmp ne i32 %and138, 0, !dbg !7908
  br i1 %tobool139, label %if.then140, label %if.end176, !dbg !7909

if.then140:                                       ; preds = %land.lhs.true136
  call void @llvm.dbg.declare(metadata i32* %tag_mask, metadata !7910, metadata !DIExpression()), !dbg !7912
  store i32 1, i32* %tag_mask, align 4, !dbg !7912
  call void @llvm.dbg.declare(metadata i8* %tag_number141, metadata !7913, metadata !DIExpression()), !dbg !7914
  store i8 0, i8* %tag_number141, align 1, !dbg !7914
  br label %while.cond, !dbg !7915

while.cond:                                       ; preds = %while.body, %if.then140
  %99 = load i32, i32* %tag_mask, align 4, !dbg !7916
  %100 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7917
  %tag_mask142 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %100, i32 0, i32 5, !dbg !7918
  %101 = load i32, i32* %tag_mask142, align 8, !dbg !7918
  %and143 = and i32 %99, %101, !dbg !7919
  %tobool144 = icmp ne i32 %and143, 0, !dbg !7919
  br i1 %tobool144, label %land.rhs, label %land.end, !dbg !7920

land.rhs:                                         ; preds = %while.cond
  %102 = load i8, i8* %tag_number141, align 1, !dbg !7921
  %conv145 = zext i8 %102 to i32, !dbg !7921
  %103 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7922
  %max_command = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %103, i32 0, i32 6, !dbg !7923
  %104 = load i16, i16* %max_command, align 4, !dbg !7923
  %conv146 = zext i16 %104 to i32, !dbg !7922
  %cmp147 = icmp slt i32 %conv145, %conv146, !dbg !7924
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %105 = phi i1 [ false, %while.cond ], [ %cmp147, %land.rhs ], !dbg !7925
  br i1 %105, label %while.body, label %while.end, !dbg !7915

while.body:                                       ; preds = %land.end
  %106 = load i32, i32* %tag_mask, align 4, !dbg !7926
  %shl = shl i32 %106, 1, !dbg !7928
  store i32 %shl, i32* %tag_mask, align 4, !dbg !7929
  %107 = load i8, i8* %tag_number141, align 1, !dbg !7930
  %inc = add i8 %107, 1, !dbg !7930
  store i8 %inc, i8* %tag_number141, align 1, !dbg !7930
  br label %while.cond, !dbg !7915, !llvm.loop !7931

while.end:                                        ; preds = %land.end
  %108 = load i8, i8* %tag_number141, align 1, !dbg !7933
  %conv149 = zext i8 %108 to i32, !dbg !7933
  %109 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7935
  %max_command150 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %109, i32 0, i32 6, !dbg !7936
  %110 = load i16, i16* %max_command150, align 4, !dbg !7936
  %conv151 = zext i16 %110 to i32, !dbg !7935
  %cmp152 = icmp sge i32 %conv149, %conv151, !dbg !7937
  br i1 %cmp152, label %if.then154, label %if.end166, !dbg !7938

if.then154:                                       ; preds = %while.end
  %111 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7939
  %cmd155 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %111, i32 0, i32 2, !dbg !7939
  %112 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd155, align 8, !dbg !7939
  %113 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7939
  %cmd156 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %113, i32 0, i32 2, !dbg !7939
  %114 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd156, align 8, !dbg !7939
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %114, i32 0, i32 1, !dbg !7939
  %115 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !7939
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %115, i32 0, i32 16, !dbg !7939
  %116 = load i32, i32* %id, align 8, !dbg !7939
  %117 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7939
  %cmd157 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %117, i32 0, i32 2, !dbg !7939
  %118 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd157, align 8, !dbg !7939
  %device158 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %118, i32 0, i32 1, !dbg !7939
  %119 = load %struct.scsi_device*, %struct.scsi_device** %device158, align 8, !dbg !7939
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %119, i32 0, i32 18, !dbg !7939
  %120 = load i64, i64* %lun, align 8, !dbg !7939
  %conv159 = trunc i64 %120 to i8, !dbg !7939
  %conv160 = zext i8 %conv159 to i32, !dbg !7939
  %call161 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.16, i64 0, i64 0), %struct.scsi_cmnd* %112, i32 %116, i32 %conv160) #12, !dbg !7939
  %121 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7941
  %state162 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %121, i32 0, i32 10, !dbg !7942
  store i16 2, i16* %state162, align 8, !dbg !7943
  %122 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7944
  %io_port_base163 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %122, i32 0, i32 1, !dbg !7944
  %123 = load i64, i64* %io_port_base163, align 8, !dbg !7944
  %add164 = add i64 %123, 128, !dbg !7944
  %conv165 = trunc i64 %add164 to i32, !dbg !7944
  call void @outw(i16 zeroext 1, i32 %conv165) #11, !dbg !7944
  store i8 1, i8* %retval, align 1, !dbg !7945
  br label %return, !dbg !7945

if.end166:                                        ; preds = %while.end
  %124 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7946
  %io_port_base167 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %124, i32 0, i32 1, !dbg !7946
  %125 = load i64, i64* %io_port_base167, align 8, !dbg !7946
  %add168 = add i64 %125, 152, !dbg !7946
  %conv169 = trunc i64 %add168 to i32, !dbg !7946
  call void @outb(i8 zeroext 32, i32 %conv169) #11, !dbg !7946
  %126 = load i8, i8* %tag_number141, align 1, !dbg !7947
  %127 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7947
  %io_port_base170 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %127, i32 0, i32 1, !dbg !7947
  %128 = load i64, i64* %io_port_base170, align 8, !dbg !7947
  %add171 = add i64 %128, 152, !dbg !7947
  %conv172 = trunc i64 %add171 to i32, !dbg !7947
  call void @outb(i8 zeroext %126, i32 %conv172) #11, !dbg !7947
  %129 = load i32, i32* %tag_mask, align 4, !dbg !7948
  %130 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7949
  %tag_mask173 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %130, i32 0, i32 5, !dbg !7950
  %131 = load i32, i32* %tag_mask173, align 8, !dbg !7951
  %or = or i32 %131, %129, !dbg !7951
  store i32 %or, i32* %tag_mask173, align 8, !dbg !7951
  %132 = load i8, i8* %tag_number141, align 1, !dbg !7952
  %133 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7953
  %tag_number174 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %133, i32 0, i32 17, !dbg !7954
  store i8 %132, i8* %tag_number174, align 2, !dbg !7955
  store i8 100, i8* %scsicommand, align 1, !dbg !7956
  %134 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7957
  %state175 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %134, i32 0, i32 10, !dbg !7958
  store i16 64, i16* %state175, align 8, !dbg !7959
  br label %if.end176, !dbg !7960

if.end176:                                        ; preds = %if.end166, %land.lhs.true136, %if.end127
  br label %do.body177, !dbg !7961

do.body177:                                       ; preds = %if.end176
  br label %do.end178, !dbg !7962

do.end178:                                        ; preds = %do.body177
  %135 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7964
  %flag179 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %135, i32 0, i32 20, !dbg !7966
  %136 = load i8, i8* %flag179, align 1, !dbg !7966
  %conv180 = zext i8 %136 to i32, !dbg !7964
  %and181 = and i32 %conv180, 1, !dbg !7967
  %tobool182 = icmp ne i32 %and181, 0, !dbg !7967
  br i1 %tobool182, label %if.then183, label %if.else, !dbg !7968

if.then183:                                       ; preds = %do.end178
  %137 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7969
  %io_port_base184 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %137, i32 0, i32 1, !dbg !7969
  %138 = load i64, i64* %io_port_base184, align 8, !dbg !7969
  %add185 = add i64 %138, 152, !dbg !7969
  %conv186 = trunc i64 %add185 to i32, !dbg !7969
  call void @outb(i8 zeroext 3, i32 %conv186) #11, !dbg !7969
  %139 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !7971
  %target_lun187 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %139, i32 0, i32 8, !dbg !7971
  %140 = load i8, i8* %target_lun187, align 1, !dbg !7971
  %conv188 = zext i8 %140 to i32, !dbg !7971
  %shl189 = shl i32 %conv188, 5, !dbg !7971
  %conv190 = trunc i32 %shl189 to i8, !dbg !7971
  %141 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7971
  %io_port_base191 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %141, i32 0, i32 1, !dbg !7971
  %142 = load i64, i64* %io_port_base191, align 8, !dbg !7971
  %add192 = add i64 %142, 152, !dbg !7971
  %conv193 = trunc i64 %add192 to i32, !dbg !7971
  call void @outb(i8 zeroext %conv190, i32 %conv193) #11, !dbg !7971
  %143 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7972
  %io_port_base194 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %143, i32 0, i32 1, !dbg !7972
  %144 = load i64, i64* %io_port_base194, align 8, !dbg !7972
  %add195 = add i64 %144, 152, !dbg !7972
  %conv196 = trunc i64 %add195 to i32, !dbg !7972
  call void @outb(i8 zeroext 0, i32 %conv196) #11, !dbg !7972
  %145 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7973
  %io_port_base197 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %145, i32 0, i32 1, !dbg !7973
  %146 = load i64, i64* %io_port_base197, align 8, !dbg !7973
  %add198 = add i64 %146, 152, !dbg !7973
  %conv199 = trunc i64 %add198 to i32, !dbg !7973
  call void @outb(i8 zeroext 0, i32 %conv199) #11, !dbg !7973
  %147 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7974
  %io_port_base200 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %147, i32 0, i32 1, !dbg !7974
  %148 = load i64, i64* %io_port_base200, align 8, !dbg !7974
  %add201 = add i64 %148, 152, !dbg !7974
  %conv202 = trunc i64 %add201 to i32, !dbg !7974
  call void @outb(i8 zeroext 96, i32 %conv202) #11, !dbg !7974
  %149 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7975
  %io_port_base203 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %149, i32 0, i32 1, !dbg !7975
  %150 = load i64, i64* %io_port_base203, align 8, !dbg !7975
  %add204 = add i64 %150, 152, !dbg !7975
  %conv205 = trunc i64 %add204 to i32, !dbg !7975
  call void @outb(i8 zeroext 0, i32 %conv205) #11, !dbg !7975
  br label %if.end217, !dbg !7976

if.else:                                          ; preds = %do.end178
  %151 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7977
  %cmd206 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %151, i32 0, i32 2, !dbg !7979
  %152 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd206, align 8, !dbg !7979
  %cmnd207 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %152, i32 0, i32 14, !dbg !7980
  %153 = load i8*, i8** %cmnd207, align 8, !dbg !7980
  store i8* %153, i8** %ptr, align 8, !dbg !7981
  store i8 0, i8* %i, align 1, !dbg !7982
  br label %for.cond, !dbg !7984

for.cond:                                         ; preds = %for.inc, %if.else
  %154 = load i8, i8* %i, align 1, !dbg !7985
  %conv208 = zext i8 %154 to i32, !dbg !7985
  %155 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !7987
  %cmd209 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %155, i32 0, i32 2, !dbg !7988
  %156 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd209, align 8, !dbg !7988
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %156, i32 0, i32 12, !dbg !7989
  %157 = load i16, i16* %cmd_len, align 4, !dbg !7989
  %conv210 = zext i16 %157 to i32, !dbg !7987
  %cmp211 = icmp slt i32 %conv208, %conv210, !dbg !7990
  br i1 %cmp211, label %for.body, label %for.end, !dbg !7991

for.body:                                         ; preds = %for.cond
  %158 = load i8*, i8** %ptr, align 8, !dbg !7992
  %incdec.ptr = getelementptr i8, i8* %158, i32 1, !dbg !7992
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !7992
  %159 = load i8, i8* %158, align 1, !dbg !7992
  %160 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !7992
  %io_port_base213 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %160, i32 0, i32 1, !dbg !7992
  %161 = load i64, i64* %io_port_base213, align 8, !dbg !7992
  %add214 = add i64 %161, 152, !dbg !7992
  %conv215 = trunc i64 %add214 to i32, !dbg !7992
  call void @outb(i8 zeroext %159, i32 %conv215) #11, !dbg !7992
  br label %for.inc, !dbg !7992

for.inc:                                          ; preds = %for.body
  %162 = load i8, i8* %i, align 1, !dbg !7993
  %inc216 = add i8 %162, 1, !dbg !7993
  store i8 %inc216, i8* %i, align 1, !dbg !7993
  br label %for.cond, !dbg !7994, !llvm.loop !7995

for.end:                                          ; preds = %for.cond
  br label %if.end217

if.end217:                                        ; preds = %for.end, %if.then183
  br label %no_cmd, !dbg !7997

no_cmd:                                           ; preds = %if.end217, %if.then124, %if.then113, %if.then102
  call void @llvm.dbg.label(metadata !7998), !dbg !7999
  %163 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8000
  %io_port_base218 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %163, i32 0, i32 1, !dbg !8000
  %164 = load i64, i64* %io_port_base218, align 8, !dbg !8000
  %add219 = add i64 %164, 128, !dbg !8000
  %conv220 = trunc i64 %add219 to i32, !dbg !8000
  call void @outw(i16 zeroext 3, i32 %conv220) #11, !dbg !8000
  %165 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8001
  %io_port_base221 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %165, i32 0, i32 1, !dbg !8001
  %166 = load i64, i64* %io_port_base221, align 8, !dbg !8001
  %add222 = add i64 %166, 128, !dbg !8001
  %conv223 = trunc i64 %add222 to i32, !dbg !8001
  %call224 = call zeroext i16 @inw(i32 %conv223) #11, !dbg !8001
  %conv225 = zext i16 %call224 to i32, !dbg !8001
  %and226 = and i32 %conv225, 128, !dbg !8003
  %tobool227 = icmp ne i32 %and226, 0, !dbg !8003
  br i1 %tobool227, label %if.then228, label %if.else233, !dbg !8004

if.then228:                                       ; preds = %no_cmd
  br label %do.body229, !dbg !8005

do.body229:                                       ; preds = %if.then228
  br label %do.end230, !dbg !8007

do.end230:                                        ; preds = %do.body229
  %167 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8009
  %state231 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %167, i32 0, i32 10, !dbg !8010
  store i16 2, i16* %state231, align 8, !dbg !8011
  %168 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !8012
  %169 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8013
  call void @free_tag(%struct.DeviceCtlBlk* %168, %struct.ScsiReqBlk* %169) #11, !dbg !8014
  %170 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8015
  %msg_count232 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %170, i32 0, i32 15, !dbg !8016
  store i8 0, i8* %msg_count232, align 8, !dbg !8017
  store i16 1, i16* %return_code, align 2, !dbg !8018
  br label %if.end243, !dbg !8019

if.else233:                                       ; preds = %no_cmd
  %171 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8020
  %scsi_phase234 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %171, i32 0, i32 21, !dbg !8022
  store i8 5, i8* %scsi_phase234, align 2, !dbg !8023
  %172 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8024
  %173 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !8025
  %active_srb235 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %173, i32 0, i32 4, !dbg !8026
  store %struct.ScsiReqBlk* %172, %struct.ScsiReqBlk** %active_srb235, align 8, !dbg !8027
  %174 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !8028
  %175 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8029
  %active_dcb236 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %175, i32 0, i32 5, !dbg !8030
  store %struct.DeviceCtlBlk* %174, %struct.DeviceCtlBlk** %active_dcb236, align 8, !dbg !8031
  store i16 0, i16* %return_code, align 2, !dbg !8032
  %176 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8033
  %io_port_base237 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %176, i32 0, i32 1, !dbg !8033
  %177 = load i64, i64* %io_port_base237, align 8, !dbg !8033
  %add238 = add i64 %177, 128, !dbg !8033
  %conv239 = trunc i64 %add238 to i32, !dbg !8033
  call void @outw(i16 zeroext 3, i32 %conv239) #11, !dbg !8033
  %178 = load i8, i8* %scsicommand, align 1, !dbg !8034
  %179 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8034
  %io_port_base240 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %179, i32 0, i32 1, !dbg !8034
  %180 = load i64, i64* %io_port_base240, align 8, !dbg !8034
  %add241 = add i64 %180, 144, !dbg !8034
  %conv242 = trunc i64 %add241 to i32, !dbg !8034
  call void @outb(i8 zeroext %178, i32 %conv242) #11, !dbg !8034
  br label %if.end243

if.end243:                                        ; preds = %if.else233, %do.end230
  %181 = load i16, i16* %return_code, align 2, !dbg !8035
  %conv244 = trunc i16 %181 to i8, !dbg !8035
  store i8 %conv244, i8* %retval, align 1, !dbg !8036
  br label %return, !dbg !8036

return:                                           ; preds = %if.end243, %if.then154, %do.end32, %do.end26, %cond.end, %do.end7
  %182 = load i8, i8* %retval, align 1, !dbg !8037
  ret i8 %182, !dbg !8037
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_move(%struct.list_head* %list, %struct.list_head* %head) #2 !dbg !8038 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !8039, metadata !DIExpression()), !dbg !8040
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8041, metadata !DIExpression()), !dbg !8042
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8043
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !8044
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8045
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8046
  call void @list_add(%struct.list_head* %1, %struct.list_head* %2) #11, !dbg !8047
  ret void, !dbg !8048
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @waiting_set_timer(%struct.AdapterCtlBlk* %acb, i64 %to) #2 !dbg !8049 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %to.addr = alloca i64, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !8052, metadata !DIExpression()), !dbg !8053
  store i64 %to, i64* %to.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %to.addr, metadata !8054, metadata !DIExpression()), !dbg !8055
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8056
  %waiting_timer = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 8, !dbg !8058
  %call = call i32 @timer_pending(%struct.timer_list* %waiting_timer) #11, !dbg !8059
  %tobool = icmp ne i32 %call, 0, !dbg !8059
  br i1 %tobool, label %if.then, label %if.end, !dbg !8060

if.then:                                          ; preds = %entry
  br label %return, !dbg !8061

if.end:                                           ; preds = %entry
  %1 = load volatile i64, i64* @jiffies, align 8, !dbg !8062
  %2 = load i64, i64* %to.addr, align 8, !dbg !8062
  %add = add i64 %1, %2, !dbg !8062
  %3 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8062
  %last_reset = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %3, i32 0, i32 10, !dbg !8062
  %4 = load i64, i64* %last_reset, align 8, !dbg !8062
  %sub = sub i64 %4, 125, !dbg !8062
  %sub1 = sub i64 %add, %sub, !dbg !8062
  %cmp = icmp slt i64 %sub1, 0, !dbg !8062
  br i1 %cmp, label %if.then2, label %if.else, !dbg !8064

if.then2:                                         ; preds = %if.end
  %5 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8065
  %last_reset3 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %5, i32 0, i32 10, !dbg !8066
  %6 = load i64, i64* %last_reset3, align 8, !dbg !8066
  %sub4 = sub i64 %6, 125, !dbg !8067
  %add5 = add i64 %sub4, 1, !dbg !8068
  %7 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8069
  %waiting_timer6 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %7, i32 0, i32 8, !dbg !8070
  %expires = getelementptr inbounds %struct.timer_list, %struct.timer_list* %waiting_timer6, i32 0, i32 1, !dbg !8071
  store i64 %add5, i64* %expires, align 8, !dbg !8072
  br label %if.end11, !dbg !8069

if.else:                                          ; preds = %if.end
  %8 = load volatile i64, i64* @jiffies, align 8, !dbg !8073
  %9 = load i64, i64* %to.addr, align 8, !dbg !8074
  %add7 = add i64 %8, %9, !dbg !8075
  %add8 = add i64 %add7, 1, !dbg !8076
  %10 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8077
  %waiting_timer9 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %10, i32 0, i32 8, !dbg !8078
  %expires10 = getelementptr inbounds %struct.timer_list, %struct.timer_list* %waiting_timer9, i32 0, i32 1, !dbg !8079
  store i64 %add8, i64* %expires10, align 8, !dbg !8080
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then2
  %11 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8081
  %waiting_timer12 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %11, i32 0, i32 8, !dbg !8082
  call void @add_timer(%struct.timer_list* %waiting_timer12) #11, !dbg !8083
  br label %return, !dbg !8084

return:                                           ; preds = %if.end11, %if.then
  ret void, !dbg !8084
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hlist_unhashed_lockless(%struct.hlist_node* %h) #2 !dbg !8085 {
entry:
  %h.addr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.hlist_node**, align 8
  store %struct.hlist_node* %h, %struct.hlist_node** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %h.addr, metadata !8090, metadata !DIExpression()), !dbg !8091
  br label %do.body, !dbg !8092

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8094

do.end:                                           ; preds = %do.body
  %0 = load %struct.hlist_node*, %struct.hlist_node** %h.addr, align 8, !dbg !8092
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %0, i32 0, i32 1, !dbg !8092
  %1 = load volatile %struct.hlist_node**, %struct.hlist_node*** %pprev, align 8, !dbg !8092
  store %struct.hlist_node** %1, %struct.hlist_node*** %tmp, align 8, !dbg !8094
  %2 = load %struct.hlist_node**, %struct.hlist_node*** %tmp, align 8, !dbg !8092
  %tobool = icmp ne %struct.hlist_node** %2, null, !dbg !8096
  %lnot = xor i1 %tobool, true, !dbg !8096
  %lnot.ext = zext i1 %lnot to i32, !dbg !8096
  ret i32 %lnot.ext, !dbg !8097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb(i32 %port) #2 !dbg !8098 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !8102, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.declare(metadata i8* %value, metadata !8104, metadata !DIExpression()), !dbg !8103
  %0 = load i32, i32* %port.addr, align 4, !dbg !8103
  %1 = call i8 asm sideeffect "inb ${1:w}, ${0:b}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #6, !dbg !8103, !srcloc !8105
  store i8 %1, i8* %value, align 1, !dbg !8103
  %2 = load i8, i8* %value, align 1, !dbg !8103
  ret i8 %2, !dbg !8103
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @inw(i32 %port) #2 !dbg !8106 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i16, align 2
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !8109, metadata !DIExpression()), !dbg !8110
  call void @llvm.dbg.declare(metadata i16* %value, metadata !8111, metadata !DIExpression()), !dbg !8110
  %0 = load i32, i32* %port.addr, align 4, !dbg !8110
  %1 = call i16 asm sideeffect "inw ${1:w}, ${0:w}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #6, !dbg !8110, !srcloc !8112
  store i16 %1, i16* %value, align 2, !dbg !8110
  %2 = load i16, i16* %value, align 2, !dbg !8110
  ret i16 %2, !dbg !8110
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_fifo(%struct.AdapterCtlBlk* %acb, i8* %txt) #2 !dbg !8113 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %txt.addr = alloca i8*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !8116, metadata !DIExpression()), !dbg !8117
  store i8* %txt, i8** %txt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %txt.addr, metadata !8118, metadata !DIExpression()), !dbg !8119
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8120
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 1, !dbg !8120
  %1 = load i64, i64* %io_port_base, align 8, !dbg !8120
  %add = add i64 %1, 128, !dbg !8120
  %conv = trunc i64 %add to i32, !dbg !8120
  call void @outw(i16 zeroext 4, i32 %conv) #11, !dbg !8120
  ret void, !dbg !8121
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb(i8 zeroext %value, i32 %port) #2 !dbg !8122 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !8125, metadata !DIExpression()), !dbg !8126
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !8127, metadata !DIExpression()), !dbg !8126
  %0 = load i8, i8* %value.addr, align 1, !dbg !8126
  %1 = load i32, i32* %port.addr, align 4, !dbg !8126
  call void asm sideeffect "outb ${0:b}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i8 %0, i32 %1) #6, !dbg !8126, !srcloc !8128
  ret void, !dbg !8126
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @build_wdtr(%struct.AdapterCtlBlk* %acb, %struct.DeviceCtlBlk* %dcb, %struct.ScsiReqBlk* %srb) #2 !dbg !8129 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %wide = alloca i8, align 1
  %ptr = alloca i8*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !8132, metadata !DIExpression()), !dbg !8133
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !8134, metadata !DIExpression()), !dbg !8135
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !8136, metadata !DIExpression()), !dbg !8137
  call void @llvm.dbg.declare(metadata i8* %wide, metadata !8138, metadata !DIExpression()), !dbg !8139
  %0 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !8140
  %dev_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %0, i32 0, i32 10, !dbg !8141
  %1 = load i8, i8* %dev_mode, align 1, !dbg !8141
  %conv = zext i8 %1 to i32, !dbg !8140
  %and = and i32 %conv, 32, !dbg !8142
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8143
  %config = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 17, !dbg !8144
  %3 = load i8, i8* %config, align 1, !dbg !8144
  %conv1 = zext i8 %3 to i32, !dbg !8143
  %and2 = and i32 %conv1, 32, !dbg !8145
  %and3 = and i32 %and, %and2, !dbg !8146
  %tobool = icmp ne i32 %and3, 0, !dbg !8147
  %4 = zext i1 %tobool to i64, !dbg !8147
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !8147
  %conv4 = trunc i32 %cond to i8, !dbg !8147
  store i8 %conv4, i8* %wide, align 1, !dbg !8139
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !8148, metadata !DIExpression()), !dbg !8149
  %5 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8150
  %msgout_buf = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %5, i32 0, i32 12, !dbg !8151
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %msgout_buf, i64 0, i64 0, !dbg !8150
  %6 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8152
  %msg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %6, i32 0, i32 15, !dbg !8153
  %7 = load i8, i8* %msg_count, align 8, !dbg !8153
  %conv5 = zext i8 %7 to i32, !dbg !8152
  %idx.ext = sext i32 %conv5 to i64, !dbg !8154
  %add.ptr = getelementptr i8, i8* %arraydecay, i64 %idx.ext, !dbg !8154
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !8149
  %8 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8155
  %msg_count6 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %8, i32 0, i32 15, !dbg !8157
  %9 = load i8, i8* %msg_count6, align 8, !dbg !8157
  %conv7 = zext i8 %9 to i32, !dbg !8155
  %cmp = icmp sgt i32 %conv7, 1, !dbg !8158
  br i1 %cmp, label %if.then, label %if.end, !dbg !8159

if.then:                                          ; preds = %entry
  %10 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8160
  %msg_count9 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %10, i32 0, i32 15, !dbg !8160
  %11 = load i8, i8* %msg_count9, align 8, !dbg !8160
  %conv10 = zext i8 %11 to i32, !dbg !8160
  %12 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8160
  %msgout_buf11 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %12, i32 0, i32 12, !dbg !8160
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %msgout_buf11, i64 0, i64 0, !dbg !8160
  %13 = load i8, i8* %arrayidx, align 8, !dbg !8160
  %conv12 = zext i8 %13 to i32, !dbg !8160
  %14 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8160
  %msgout_buf13 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %14, i32 0, i32 12, !dbg !8160
  %arrayidx14 = getelementptr [6 x i8], [6 x i8]* %msgout_buf13, i64 0, i64 1, !dbg !8160
  %15 = load i8, i8* %arrayidx14, align 1, !dbg !8160
  %conv15 = zext i8 %15 to i32, !dbg !8160
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.17, i64 0, i64 0), i32 %conv10, i32 %conv12, i32 %conv15) #12, !dbg !8160
  br label %return, !dbg !8162

if.end:                                           ; preds = %entry
  %16 = load i8*, i8** %ptr, align 8, !dbg !8163
  %incdec.ptr = getelementptr i8, i8* %16, i32 1, !dbg !8163
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !8163
  store i8 1, i8* %16, align 1, !dbg !8164
  %17 = load i8*, i8** %ptr, align 8, !dbg !8165
  %incdec.ptr16 = getelementptr i8, i8* %17, i32 1, !dbg !8165
  store i8* %incdec.ptr16, i8** %ptr, align 8, !dbg !8165
  store i8 2, i8* %17, align 1, !dbg !8166
  %18 = load i8*, i8** %ptr, align 8, !dbg !8167
  %incdec.ptr17 = getelementptr i8, i8* %18, i32 1, !dbg !8167
  store i8* %incdec.ptr17, i8** %ptr, align 8, !dbg !8167
  store i8 3, i8* %18, align 1, !dbg !8168
  %19 = load i8, i8* %wide, align 1, !dbg !8169
  %20 = load i8*, i8** %ptr, align 8, !dbg !8170
  %incdec.ptr18 = getelementptr i8, i8* %20, i32 1, !dbg !8170
  store i8* %incdec.ptr18, i8** %ptr, align 8, !dbg !8170
  store i8 %19, i8* %20, align 1, !dbg !8171
  %21 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8172
  %msg_count19 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %21, i32 0, i32 15, !dbg !8173
  %22 = load i8, i8* %msg_count19, align 8, !dbg !8174
  %conv20 = zext i8 %22 to i32, !dbg !8174
  %add = add i32 %conv20, 4, !dbg !8174
  %conv21 = trunc i32 %add to i8, !dbg !8174
  store i8 %conv21, i8* %msg_count19, align 8, !dbg !8174
  %23 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8175
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %23, i32 0, i32 10, !dbg !8176
  %24 = load i16, i16* %state, align 8, !dbg !8177
  %conv22 = zext i16 %24 to i32, !dbg !8177
  %or = or i32 %conv22, 16384, !dbg !8177
  %conv23 = trunc i32 %or to i16, !dbg !8177
  store i16 %conv23, i16* %state, align 8, !dbg !8177
  br label %return, !dbg !8178

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8178
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @build_sdtr(%struct.AdapterCtlBlk* %acb, %struct.DeviceCtlBlk* %dcb, %struct.ScsiReqBlk* %srb) #2 !dbg !8179 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %ptr = alloca i8*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !8180, metadata !DIExpression()), !dbg !8181
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !8182, metadata !DIExpression()), !dbg !8183
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !8184, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !8186, metadata !DIExpression()), !dbg !8187
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8188
  %msgout_buf = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 12, !dbg !8189
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %msgout_buf, i64 0, i64 0, !dbg !8188
  %1 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8190
  %msg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %1, i32 0, i32 15, !dbg !8191
  %2 = load i8, i8* %msg_count, align 8, !dbg !8191
  %conv = zext i8 %2 to i32, !dbg !8190
  %idx.ext = sext i32 %conv to i64, !dbg !8192
  %add.ptr = getelementptr i8, i8* %arraydecay, i64 %idx.ext, !dbg !8192
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !8187
  %3 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8193
  %msg_count1 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %3, i32 0, i32 15, !dbg !8195
  %4 = load i8, i8* %msg_count1, align 8, !dbg !8195
  %conv2 = zext i8 %4 to i32, !dbg !8193
  %cmp = icmp sgt i32 %conv2, 1, !dbg !8196
  br i1 %cmp, label %if.then, label %if.end, !dbg !8197

if.then:                                          ; preds = %entry
  %5 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8198
  %msg_count4 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %5, i32 0, i32 15, !dbg !8198
  %6 = load i8, i8* %msg_count4, align 8, !dbg !8198
  %conv5 = zext i8 %6 to i32, !dbg !8198
  %7 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8198
  %msgout_buf6 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %7, i32 0, i32 12, !dbg !8198
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %msgout_buf6, i64 0, i64 0, !dbg !8198
  %8 = load i8, i8* %arrayidx, align 8, !dbg !8198
  %conv7 = zext i8 %8 to i32, !dbg !8198
  %9 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8198
  %msgout_buf8 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %9, i32 0, i32 12, !dbg !8198
  %arrayidx9 = getelementptr [6 x i8], [6 x i8]* %msgout_buf8, i64 0, i64 1, !dbg !8198
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !8198
  %conv10 = zext i8 %10 to i32, !dbg !8198
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 %conv5, i32 %conv7, i32 %conv10) #12, !dbg !8198
  br label %return, !dbg !8200

if.end:                                           ; preds = %entry
  %11 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !8201
  %dev_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %11, i32 0, i32 10, !dbg !8203
  %12 = load i8, i8* %dev_mode, align 1, !dbg !8203
  %conv11 = zext i8 %12 to i32, !dbg !8201
  %and = and i32 %conv11, 2, !dbg !8204
  %tobool = icmp ne i32 %and, 0, !dbg !8204
  br i1 %tobool, label %if.else, label %if.then12, !dbg !8205

if.then12:                                        ; preds = %if.end
  %13 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !8206
  %sync_offset = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %13, i32 0, i32 15, !dbg !8208
  store i8 0, i8* %sync_offset, align 2, !dbg !8209
  %14 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !8210
  %min_nego_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %14, i32 0, i32 13, !dbg !8211
  store i8 50, i8* %min_nego_period, align 4, !dbg !8212
  br label %if.end20, !dbg !8213

if.else:                                          ; preds = %if.end
  %15 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !8214
  %sync_offset13 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %15, i32 0, i32 15, !dbg !8216
  %16 = load i8, i8* %sync_offset13, align 2, !dbg !8216
  %conv14 = zext i8 %16 to i32, !dbg !8214
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !8217
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !8218

if.then17:                                        ; preds = %if.else
  %17 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !8219
  %sync_offset18 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %17, i32 0, i32 15, !dbg !8220
  store i8 15, i8* %sync_offset18, align 2, !dbg !8221
  br label %if.end19, !dbg !8219

if.end19:                                         ; preds = %if.then17, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then12
  %18 = load i8*, i8** %ptr, align 8, !dbg !8222
  %incdec.ptr = getelementptr i8, i8* %18, i32 1, !dbg !8222
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !8222
  store i8 1, i8* %18, align 1, !dbg !8223
  %19 = load i8*, i8** %ptr, align 8, !dbg !8224
  %incdec.ptr21 = getelementptr i8, i8* %19, i32 1, !dbg !8224
  store i8* %incdec.ptr21, i8** %ptr, align 8, !dbg !8224
  store i8 3, i8* %19, align 1, !dbg !8225
  %20 = load i8*, i8** %ptr, align 8, !dbg !8226
  %incdec.ptr22 = getelementptr i8, i8* %20, i32 1, !dbg !8226
  store i8* %incdec.ptr22, i8** %ptr, align 8, !dbg !8226
  store i8 1, i8* %20, align 1, !dbg !8227
  %21 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !8228
  %min_nego_period23 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %21, i32 0, i32 13, !dbg !8229
  %22 = load i8, i8* %min_nego_period23, align 4, !dbg !8229
  %23 = load i8*, i8** %ptr, align 8, !dbg !8230
  %incdec.ptr24 = getelementptr i8, i8* %23, i32 1, !dbg !8230
  store i8* %incdec.ptr24, i8** %ptr, align 8, !dbg !8230
  store i8 %22, i8* %23, align 1, !dbg !8231
  %24 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !8232
  %sync_offset25 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %24, i32 0, i32 15, !dbg !8233
  %25 = load i8, i8* %sync_offset25, align 2, !dbg !8233
  %26 = load i8*, i8** %ptr, align 8, !dbg !8234
  %incdec.ptr26 = getelementptr i8, i8* %26, i32 1, !dbg !8234
  store i8* %incdec.ptr26, i8** %ptr, align 8, !dbg !8234
  store i8 %25, i8* %26, align 1, !dbg !8235
  %27 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8236
  %msg_count27 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %27, i32 0, i32 15, !dbg !8237
  %28 = load i8, i8* %msg_count27, align 8, !dbg !8238
  %conv28 = zext i8 %28 to i32, !dbg !8238
  %add = add i32 %conv28, 5, !dbg !8238
  %conv29 = trunc i32 %add to i8, !dbg !8238
  store i8 %conv29, i8* %msg_count27, align 8, !dbg !8238
  %29 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8239
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %29, i32 0, i32 10, !dbg !8240
  %30 = load i16, i16* %state, align 8, !dbg !8241
  %conv30 = zext i16 %30 to i32, !dbg !8241
  %or = or i32 %conv30, 8192, !dbg !8241
  %conv31 = trunc i32 %or to i16, !dbg !8241
  store i16 %conv31, i16* %state, align 8, !dbg !8241
  br label %return, !dbg !8242

return:                                           ; preds = %if.end20, %if.then
  ret void, !dbg !8242
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outw(i16 zeroext %value, i32 %port) #2 !dbg !8243 {
entry:
  %value.addr = alloca i16, align 2
  %port.addr = alloca i32, align 4
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !8246, metadata !DIExpression()), !dbg !8247
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !8248, metadata !DIExpression()), !dbg !8247
  %0 = load i16, i16* %value.addr, align 2, !dbg !8247
  %1 = load i32, i32* %port.addr, align 4, !dbg !8247
  call void asm sideeffect "outw ${0:w}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i16 %0, i32 %1) #6, !dbg !8247, !srcloc !8249
  ret void, !dbg !8247
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_tag(%struct.DeviceCtlBlk* %dcb, %struct.ScsiReqBlk* %srb) #2 !dbg !8250 {
entry:
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !8253, metadata !DIExpression()), !dbg !8254
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !8255, metadata !DIExpression()), !dbg !8256
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8257
  %tag_number = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 17, !dbg !8259
  %1 = load i8, i8* %tag_number, align 2, !dbg !8259
  %conv = zext i8 %1 to i32, !dbg !8257
  %cmp = icmp slt i32 %conv, 255, !dbg !8260
  br i1 %cmp, label %if.then, label %if.end, !dbg !8261

if.then:                                          ; preds = %entry
  %2 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8262
  %tag_number2 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %2, i32 0, i32 17, !dbg !8264
  %3 = load i8, i8* %tag_number2, align 2, !dbg !8264
  %conv3 = zext i8 %3 to i32, !dbg !8262
  %shl = shl i32 1, %conv3, !dbg !8265
  %neg = xor i32 %shl, -1, !dbg !8266
  %4 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !8267
  %tag_mask = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %4, i32 0, i32 5, !dbg !8268
  %5 = load i32, i32* %tag_mask, align 8, !dbg !8269
  %and = and i32 %5, %neg, !dbg !8269
  store i32 %and, i32* %tag_mask, align 8, !dbg !8269
  %6 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8270
  %tag_number4 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %6, i32 0, i32 17, !dbg !8271
  store i8 -1, i8* %tag_number4, align 2, !dbg !8272
  br label %if.end, !dbg !8273

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8274
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #2 !dbg !8275 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8276, metadata !DIExpression()), !dbg !8277
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8278, metadata !DIExpression()), !dbg !8279
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8280
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8281
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8282
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !8283
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8283
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !8284
  ret void, !dbg !8285
}

; Function Attrs: noredzone
declare dso_local void @add_timer(%struct.timer_list*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !8286 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !8289, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8291, metadata !DIExpression()), !dbg !8293
  %0 = load i64, i64* %__edi, align 8, !dbg !8293
  store i64 %0, i64* %__edi, align 8, !dbg !8293
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8294, metadata !DIExpression()), !dbg !8293
  %1 = load i64, i64* %__esi, align 8, !dbg !8293
  store i64 %1, i64* %__esi, align 8, !dbg !8293
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8295, metadata !DIExpression()), !dbg !8293
  %2 = load i64, i64* %__edx, align 8, !dbg !8293
  store i64 %2, i64* %__edx, align 8, !dbg !8293
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8296, metadata !DIExpression()), !dbg !8293
  %3 = load i64, i64* %__ecx, align 8, !dbg !8293
  store i64 %3, i64* %__ecx, align 8, !dbg !8293
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8297, metadata !DIExpression()), !dbg !8293
  %4 = load i64, i64* %__eax, align 8, !dbg !8293
  store i64 %4, i64* %__eax, align 8, !dbg !8293
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !8293
  %6 = call i64 @llvm.read_register.i64(metadata !5856), !dbg !8293
  %7 = load i64, i64* %f.addr, align 8, !dbg !8293
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #6, !dbg !8293, !srcloc !8298
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !8293
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !8293
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8293
  call void @llvm.write_register.i64(metadata !5856, i64 %asmresult1), !dbg !8293
  ret void, !dbg !8299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ScsiReqBlk* @find_cmd(%struct.scsi_cmnd* %cmd, %struct.list_head* %head) #2 !dbg !8300 {
entry:
  %retval = alloca %struct.ScsiReqBlk*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  %i = alloca %struct.ScsiReqBlk*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ScsiReqBlk*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.ScsiReqBlk*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !8303, metadata !DIExpression()), !dbg !8304
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8305, metadata !DIExpression()), !dbg !8306
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %i, metadata !8307, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8309, metadata !DIExpression()), !dbg !8312
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8312
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !8312
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8312
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !8312
  store i8* %2, i8** %__mptr, align 8, !dbg !8312
  br label %do.body, !dbg !8312

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8313

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !8312
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !8312
  %4 = bitcast i8* %add.ptr to %struct.ScsiReqBlk*, !dbg !8312
  store %struct.ScsiReqBlk* %4, %struct.ScsiReqBlk** %tmp, align 8, !dbg !8313
  %5 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp, align 8, !dbg !8312
  store %struct.ScsiReqBlk* %5, %struct.ScsiReqBlk** %i, align 8, !dbg !8315
  br label %for.cond, !dbg !8315

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %i, align 8, !dbg !8316
  %list = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %6, i32 0, i32 0, !dbg !8316
  %7 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8316
  %cmp = icmp eq %struct.list_head* %list, %7, !dbg !8316
  %lnot = xor i1 %cmp, true, !dbg !8316
  br i1 %lnot, label %for.body, label %for.end, !dbg !8315

for.body:                                         ; preds = %for.cond
  %8 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %i, align 8, !dbg !8318
  %cmd1 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %8, i32 0, i32 2, !dbg !8320
  %9 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd1, align 8, !dbg !8320
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8321
  %cmp2 = icmp eq %struct.scsi_cmnd* %9, %10, !dbg !8322
  br i1 %cmp2, label %if.then, label %if.end, !dbg !8323

if.then:                                          ; preds = %for.body
  %11 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %i, align 8, !dbg !8324
  store %struct.ScsiReqBlk* %11, %struct.ScsiReqBlk** %retval, align 8, !dbg !8325
  br label %return, !dbg !8325

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8321

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !8326, metadata !DIExpression()), !dbg !8328
  %12 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %i, align 8, !dbg !8328
  %list4 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %12, i32 0, i32 0, !dbg !8328
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !8328
  %13 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !8328
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !8328
  store i8* %14, i8** %__mptr3, align 8, !dbg !8328
  br label %do.body6, !dbg !8328

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !8329

do.end7:                                          ; preds = %do.body6
  %15 = load i8*, i8** %__mptr3, align 8, !dbg !8328
  %add.ptr9 = getelementptr i8, i8* %15, i64 0, !dbg !8328
  %16 = bitcast i8* %add.ptr9 to %struct.ScsiReqBlk*, !dbg !8328
  store %struct.ScsiReqBlk* %16, %struct.ScsiReqBlk** %tmp8, align 8, !dbg !8329
  %17 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp8, align 8, !dbg !8328
  store %struct.ScsiReqBlk* %17, %struct.ScsiReqBlk** %i, align 8, !dbg !8316
  br label %for.cond, !dbg !8316, !llvm.loop !8331

for.end:                                          ; preds = %for.cond
  store %struct.ScsiReqBlk* null, %struct.ScsiReqBlk** %retval, align 8, !dbg !8333
  br label %return, !dbg !8333

return:                                           ; preds = %for.end, %if.then
  %18 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %retval, align 8, !dbg !8334
  ret %struct.ScsiReqBlk* %18, !dbg !8334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_unmap_srb_sense(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb) #2 !dbg !8335 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !8336, metadata !DIExpression()), !dbg !8337
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !8338, metadata !DIExpression()), !dbg !8339
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8340
  %flag = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 20, !dbg !8342
  %1 = load i8, i8* %flag, align 1, !dbg !8342
  %conv = zext i8 %1 to i32, !dbg !8340
  %and = and i32 %conv, 1, !dbg !8343
  %tobool = icmp ne i32 %and, 0, !dbg !8343
  br i1 %tobool, label %if.end, label %if.then, !dbg !8344

if.then:                                          ; preds = %entry
  br label %return, !dbg !8345

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !8346

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !8347

do.end:                                           ; preds = %do.body
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8349
  %dev = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 23, !dbg !8349
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8349
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !8349
  %4 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8349
  %segment_x = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %4, i32 0, i32 3, !dbg !8349
  %5 = load %struct.SGentry*, %struct.SGentry** %segment_x, align 8, !dbg !8349
  %arrayidx = getelementptr %struct.SGentry, %struct.SGentry* %5, i64 0, !dbg !8349
  %address = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx, i32 0, i32 0, !dbg !8349
  %6 = load i32, i32* %address, align 4, !dbg !8349
  %conv2 = zext i32 %6 to i64, !dbg !8349
  %7 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8349
  %segment_x3 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %7, i32 0, i32 3, !dbg !8349
  %8 = load %struct.SGentry*, %struct.SGentry** %segment_x3, align 8, !dbg !8349
  %arrayidx4 = getelementptr %struct.SGentry, %struct.SGentry* %8, i64 0, !dbg !8349
  %length = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx4, i32 0, i32 1, !dbg !8349
  %9 = load i32, i32* %length, align 4, !dbg !8349
  %conv5 = zext i32 %9 to i64, !dbg !8349
  call void @dma_unmap_single_attrs(%struct.device* %dev1, i64 %conv2, i64 %conv5, i32 2, i64 0) #11, !dbg !8349
  %10 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8350
  %xferred = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %10, i32 0, i32 9, !dbg !8351
  %11 = load i64, i64* %xferred, align 8, !dbg !8351
  %12 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8352
  %total_xfer_length = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %12, i32 0, i32 7, !dbg !8353
  store i64 %11, i64* %total_xfer_length, align 8, !dbg !8354
  %13 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8355
  %segment_x6 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %13, i32 0, i32 3, !dbg !8356
  %14 = load %struct.SGentry*, %struct.SGentry** %segment_x6, align 8, !dbg !8356
  %arrayidx7 = getelementptr %struct.SGentry, %struct.SGentry* %14, i64 63, !dbg !8355
  %address8 = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx7, i32 0, i32 0, !dbg !8357
  %15 = load i32, i32* %address8, align 4, !dbg !8357
  %16 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8358
  %segment_x9 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %16, i32 0, i32 3, !dbg !8359
  %17 = load %struct.SGentry*, %struct.SGentry** %segment_x9, align 8, !dbg !8359
  %arrayidx10 = getelementptr %struct.SGentry, %struct.SGentry* %17, i64 0, !dbg !8358
  %address11 = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx10, i32 0, i32 0, !dbg !8360
  store i32 %15, i32* %address11, align 4, !dbg !8361
  %18 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8362
  %segment_x12 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %18, i32 0, i32 3, !dbg !8363
  %19 = load %struct.SGentry*, %struct.SGentry** %segment_x12, align 8, !dbg !8363
  %arrayidx13 = getelementptr %struct.SGentry, %struct.SGentry* %19, i64 63, !dbg !8362
  %length14 = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx13, i32 0, i32 1, !dbg !8364
  %20 = load i32, i32* %length14, align 4, !dbg !8364
  %21 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8365
  %segment_x15 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %21, i32 0, i32 3, !dbg !8366
  %22 = load %struct.SGentry*, %struct.SGentry** %segment_x15, align 8, !dbg !8366
  %arrayidx16 = getelementptr %struct.SGentry, %struct.SGentry* %22, i64 0, !dbg !8365
  %length17 = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx16, i32 0, i32 1, !dbg !8367
  store i32 %20, i32* %length17, align 4, !dbg !8368
  br label %return, !dbg !8369

return:                                           ; preds = %do.end, %if.then
  ret void, !dbg !8369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_unmap_srb(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb) #2 !dbg !8370 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %dir = alloca i32, align 4
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !8371, metadata !DIExpression()), !dbg !8372
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !8373, metadata !DIExpression()), !dbg !8374
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !8375, metadata !DIExpression()), !dbg !8376
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8377
  %cmd1 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 2, !dbg !8378
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd1, align 8, !dbg !8378
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !8376
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !8379, metadata !DIExpression()), !dbg !8380
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !8381
  %sc_data_direction = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 13, !dbg !8382
  %3 = load i32, i32* %sc_data_direction, align 8, !dbg !8382
  store i32 %3, i32* %dir, align 4, !dbg !8380
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !8383
  %call = call i32 @scsi_sg_count(%struct.scsi_cmnd* %4) #11, !dbg !8385
  %tobool = icmp ne i32 %call, 0, !dbg !8385
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8386

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* %dir, align 4, !dbg !8387
  %cmp = icmp ne i32 %5, 3, !dbg !8388
  br i1 %cmp, label %if.then, label %if.end, !dbg !8389

if.then:                                          ; preds = %land.lhs.true
  br label %do.body, !dbg !8390

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !8392

do.end:                                           ; preds = %do.body
  %6 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8394
  %dev = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %6, i32 0, i32 23, !dbg !8394
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8394
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !8394
  %8 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !8394
  %sg_bus_addr = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %8, i32 0, i32 4, !dbg !8394
  %9 = load i64, i64* %sg_bus_addr, align 8, !dbg !8394
  call void @dma_unmap_single_attrs(%struct.device* %dev2, i64 %9, i64 512, i32 1, i64 0) #11, !dbg !8394
  br label %do.body3, !dbg !8395

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !8396

do.end4:                                          ; preds = %do.body3
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !8398
  call void @scsi_dma_unmap(%struct.scsi_cmnd* %10) #11, !dbg !8399
  br label %if.end, !dbg !8400

if.end:                                           ; preds = %do.end4, %land.lhs.true, %entry
  ret void, !dbg !8401
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !8402 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8405, metadata !DIExpression()), !dbg !8406
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !8407, metadata !DIExpression()), !dbg !8408
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8409, metadata !DIExpression()), !dbg !8410
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !8411, metadata !DIExpression()), !dbg !8412
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !8413, metadata !DIExpression()), !dbg !8414
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8415
  %1 = load i64, i64* %addr.addr, align 8, !dbg !8416
  %2 = load i64, i64* %size.addr, align 8, !dbg !8417
  %3 = load i32, i32* %dir.addr, align 4, !dbg !8418
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !8419
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #11, !dbg !8420
  ret void, !dbg !8421
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_sg_count(%struct.scsi_cmnd* %cmd) #2 !dbg !8422 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !8423, metadata !DIExpression()), !dbg !8424
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8425
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !8426
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !8427
  %nents = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 1, !dbg !8428
  %1 = load i32, i32* %nents, align 8, !dbg !8428
  ret i32 %1, !dbg !8429
}

; Function Attrs: noredzone
declare dso_local void @scsi_dma_unmap(%struct.scsi_cmnd*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__dc395x_eh_bus_reset(%struct.scsi_cmnd* %cmd) #2 !dbg !8430 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %acb = alloca %struct.AdapterCtlBlk*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !8431, metadata !DIExpression()), !dbg !8432
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb, metadata !8433, metadata !DIExpression()), !dbg !8434
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8435
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !8436
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !8436
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !8437
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !8437
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 51, !dbg !8438
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !8435
  %3 = bitcast i64* %arraydecay to %struct.AdapterCtlBlk*, !dbg !8439
  store %struct.AdapterCtlBlk* %3, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8434
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8440
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8440
  %device1 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 1, !dbg !8440
  %6 = load %struct.scsi_device*, %struct.scsi_device** %device1, align 8, !dbg !8440
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %6, i32 0, i32 16, !dbg !8440
  %7 = load i32, i32* %id, align 8, !dbg !8440
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8440
  %device2 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %8, i32 0, i32 1, !dbg !8440
  %9 = load %struct.scsi_device*, %struct.scsi_device** %device2, align 8, !dbg !8440
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %9, i32 0, i32 18, !dbg !8440
  %10 = load i64, i64* %lun, align 8, !dbg !8440
  %conv = trunc i64 %10 to i8, !dbg !8440
  %conv3 = zext i8 %conv to i32, !dbg !8440
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8440
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), %struct.scsi_cmnd* %4, i32 %7, i32 %conv3, %struct.scsi_cmnd* %11) #12, !dbg !8440
  %12 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8441
  %waiting_timer = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %12, i32 0, i32 8, !dbg !8443
  %call4 = call i32 @timer_pending(%struct.timer_list* %waiting_timer) #11, !dbg !8444
  %tobool = icmp ne i32 %call4, 0, !dbg !8444
  br i1 %tobool, label %if.then, label %if.end, !dbg !8445

if.then:                                          ; preds = %entry
  %13 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8446
  %waiting_timer5 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %13, i32 0, i32 8, !dbg !8447
  %call6 = call i32 @del_timer(%struct.timer_list* %waiting_timer5) #11, !dbg !8448
  br label %if.end, !dbg !8448

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8449
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %14, i32 0, i32 1, !dbg !8449
  %15 = load i64, i64* %io_port_base, align 8, !dbg !8449
  %add = add i64 %15, 164, !dbg !8449
  %conv7 = trunc i64 %add to i32, !dbg !8449
  call void @outb(i8 zeroext 0, i32 %conv7) #11, !dbg !8449
  %16 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8450
  %io_port_base8 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %16, i32 0, i32 1, !dbg !8450
  %17 = load i64, i64* %io_port_base8, align 8, !dbg !8450
  %add9 = add i64 %17, 140, !dbg !8450
  %conv10 = trunc i64 %add9 to i32, !dbg !8450
  call void @outb(i8 zeroext 0, i32 %conv10) #11, !dbg !8450
  %18 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8451
  %io_port_base11 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %18, i32 0, i32 1, !dbg !8451
  %19 = load i64, i64* %io_port_base11, align 8, !dbg !8451
  %add12 = add i64 %19, 128, !dbg !8451
  %conv13 = trunc i64 %add12 to i32, !dbg !8451
  call void @outb(i8 zeroext 16, i32 %conv13) #11, !dbg !8451
  %20 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8452
  %io_port_base14 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %20, i32 0, i32 1, !dbg !8452
  %21 = load i64, i64* %io_port_base14, align 8, !dbg !8452
  %add15 = add i64 %21, 161, !dbg !8452
  %conv16 = trunc i64 %add15 to i32, !dbg !8452
  call void @outb(i8 zeroext 16, i32 %conv16) #11, !dbg !8452
  %22 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8453
  call void @reset_scsi_bus(%struct.AdapterCtlBlk* %22) #11, !dbg !8454
  call void @__const_udelay(i64 2147500) #11, !dbg !8455
  %23 = load volatile i64, i64* @jiffies, align 8, !dbg !8460
  %add17 = add i64 %23, 375, !dbg !8461
  %24 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8462
  %eeprom = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %24, i32 0, i32 27, !dbg !8463
  %delay_time = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %eeprom, i32 0, i32 9, !dbg !8464
  %25 = load i8, i8* %delay_time, align 4, !dbg !8464
  %conv18 = zext i8 %25 to i32, !dbg !8462
  %mul = mul i32 250, %conv18, !dbg !8465
  %conv19 = sext i32 %mul to i64, !dbg !8466
  %add20 = add i64 %add17, %conv19, !dbg !8467
  %26 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8468
  %last_reset = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %26, i32 0, i32 10, !dbg !8469
  store i64 %add20, i64* %last_reset, align 8, !dbg !8470
  %27 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8471
  %io_port_base21 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %27, i32 0, i32 1, !dbg !8471
  %28 = load i64, i64* %io_port_base21, align 8, !dbg !8471
  %add22 = add i64 %28, 161, !dbg !8471
  %conv23 = trunc i64 %add22 to i32, !dbg !8471
  call void @outb(i8 zeroext 2, i32 %conv23) #11, !dbg !8471
  %29 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8472
  call void @clear_fifo(%struct.AdapterCtlBlk* %29, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i64 0, i64 0)) #11, !dbg !8473
  %30 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8474
  %io_port_base24 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %30, i32 0, i32 1, !dbg !8474
  %31 = load i64, i64* %io_port_base24, align 8, !dbg !8474
  %add25 = add i64 %31, 132, !dbg !8474
  %conv26 = trunc i64 %add25 to i32, !dbg !8474
  %call27 = call zeroext i8 @inb(i32 %conv26) #11, !dbg !8474
  %32 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8475
  call void @set_basic_config(%struct.AdapterCtlBlk* %32) #11, !dbg !8476
  %33 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8477
  call void @reset_dev_param(%struct.AdapterCtlBlk* %33) #11, !dbg !8478
  %34 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8479
  %35 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8480
  call void @doing_srb_done(%struct.AdapterCtlBlk* %34, i8 zeroext 8, %struct.scsi_cmnd* %35, i8 zeroext 0) #11, !dbg !8481
  %36 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8482
  %active_dcb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %36, i32 0, i32 5, !dbg !8483
  store %struct.DeviceCtlBlk* null, %struct.DeviceCtlBlk** %active_dcb, align 8, !dbg !8484
  %37 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8485
  %acb_flag = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %37, i32 0, i32 15, !dbg !8486
  store i8 0, i8* %acb_flag, align 1, !dbg !8487
  %38 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !8488
  call void @waiting_process_next(%struct.AdapterCtlBlk* %38) #11, !dbg !8489
  ret i32 8194, !dbg !8490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reset_scsi_bus(%struct.AdapterCtlBlk* %acb) #2 !dbg !8491 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !8492, metadata !DIExpression()), !dbg !8493
  br label %do.body, !dbg !8494

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8495

do.end:                                           ; preds = %do.body
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8497
  %acb_flag = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 15, !dbg !8498
  %1 = load i8, i8* %acb_flag, align 1, !dbg !8499
  %conv = zext i8 %1 to i32, !dbg !8499
  %or = or i32 %conv, 1, !dbg !8499
  %conv1 = trunc i32 %or to i8, !dbg !8499
  store i8 %conv1, i8* %acb_flag, align 1, !dbg !8499
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8500
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 1, !dbg !8500
  %3 = load i64, i64* %io_port_base, align 8, !dbg !8500
  %add = add i64 %3, 128, !dbg !8500
  %conv2 = trunc i64 %add to i32, !dbg !8500
  call void @outw(i16 zeroext 8, i32 %conv2) #11, !dbg !8500
  br label %while.cond, !dbg !8501

while.cond:                                       ; preds = %while.body, %do.end
  %4 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8502
  %io_port_base3 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %4, i32 0, i32 1, !dbg !8502
  %5 = load i64, i64* %io_port_base3, align 8, !dbg !8502
  %add4 = add i64 %5, 132, !dbg !8502
  %conv5 = trunc i64 %add4 to i32, !dbg !8502
  %call = call zeroext i8 @inb(i32 %conv5) #11, !dbg !8502
  %conv6 = zext i8 %call to i32, !dbg !8502
  %and = and i32 %conv6, 4, !dbg !8503
  %tobool = icmp ne i32 %and, 0, !dbg !8504
  %lnot = xor i1 %tobool, true, !dbg !8504
  br i1 %lnot, label %while.body, label %while.end, !dbg !8501

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !8501, !llvm.loop !8505

while.end:                                        ; preds = %while.cond
  ret void, !dbg !8507
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_basic_config(%struct.AdapterCtlBlk* %acb) #2 !dbg !8508 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %bval = alloca i8, align 1
  %wval = alloca i16, align 2
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !8509, metadata !DIExpression()), !dbg !8510
  call void @llvm.dbg.declare(metadata i8* %bval, metadata !8511, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.declare(metadata i16* %wval, metadata !8513, metadata !DIExpression()), !dbg !8514
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8515
  %sel_timeout = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 12, !dbg !8515
  %1 = load i8, i8* %sel_timeout, align 2, !dbg !8515
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8515
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 1, !dbg !8515
  %3 = load i64, i64* %io_port_base, align 8, !dbg !8515
  %add = add i64 %3, 145, !dbg !8515
  %conv = trunc i64 %add to i32, !dbg !8515
  call void @outb(i8 zeroext %1, i32 %conv) #11, !dbg !8515
  %4 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8516
  %config = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %4, i32 0, i32 17, !dbg !8518
  %5 = load i8, i8* %config, align 1, !dbg !8518
  %conv1 = zext i8 %5 to i32, !dbg !8516
  %and = and i32 %conv1, 8, !dbg !8519
  %tobool = icmp ne i32 %and, 0, !dbg !8519
  br i1 %tobool, label %if.then, label %if.else, !dbg !8520

if.then:                                          ; preds = %entry
  store i8 113, i8* %bval, align 1, !dbg !8521
  br label %if.end, !dbg !8522

if.else:                                          ; preds = %entry
  store i8 97, i8* %bval, align 1, !dbg !8523
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i8, i8* %bval, align 1, !dbg !8524
  %7 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8524
  %io_port_base2 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %7, i32 0, i32 1, !dbg !8524
  %8 = load i64, i64* %io_port_base2, align 8, !dbg !8524
  %add3 = add i64 %8, 141, !dbg !8524
  %conv4 = trunc i64 %add3 to i32, !dbg !8524
  call void @outb(i8 zeroext %6, i32 %conv4) #11, !dbg !8524
  %9 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8525
  %io_port_base5 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %9, i32 0, i32 1, !dbg !8525
  %10 = load i64, i64* %io_port_base5, align 8, !dbg !8525
  %add6 = add i64 %10, 142, !dbg !8525
  %conv7 = trunc i64 %add6 to i32, !dbg !8525
  call void @outb(i8 zeroext 3, i32 %conv7) #11, !dbg !8525
  %11 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8526
  %scsi_host = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %11, i32 0, i32 0, !dbg !8526
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !8526
  %this_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %12, i32 0, i32 24, !dbg !8526
  %13 = load i32, i32* %this_id, align 8, !dbg !8526
  %conv8 = trunc i32 %13 to i8, !dbg !8526
  %14 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8526
  %io_port_base9 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %14, i32 0, i32 1, !dbg !8526
  %15 = load i64, i64* %io_port_base9, align 8, !dbg !8526
  %add10 = add i64 %15, 135, !dbg !8526
  %conv11 = trunc i64 %add10 to i32, !dbg !8526
  call void @outb(i8 zeroext %conv8, i32 %conv11) #11, !dbg !8526
  %16 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8527
  %io_port_base12 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %16, i32 0, i32 1, !dbg !8527
  %17 = load i64, i64* %io_port_base12, align 8, !dbg !8527
  %add13 = add i64 %17, 132, !dbg !8527
  %conv14 = trunc i64 %add13 to i32, !dbg !8527
  call void @outb(i8 zeroext 0, i32 %conv14) #11, !dbg !8527
  %18 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8528
  %io_port_base15 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %18, i32 0, i32 1, !dbg !8528
  %19 = load i64, i64* %io_port_base15, align 8, !dbg !8528
  %add16 = add i64 %19, 212, !dbg !8528
  %conv17 = trunc i64 %add16 to i32, !dbg !8528
  %call = call zeroext i16 @inw(i32 %conv17) #11, !dbg !8528
  %conv18 = zext i16 %call to i32, !dbg !8528
  %and19 = and i32 %conv18, 127, !dbg !8529
  %conv20 = trunc i32 %and19 to i16, !dbg !8528
  store i16 %conv20, i16* %wval, align 2, !dbg !8530
  %20 = load i16, i16* %wval, align 2, !dbg !8531
  %21 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8531
  %io_port_base21 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %21, i32 0, i32 1, !dbg !8531
  %22 = load i64, i64* %io_port_base21, align 8, !dbg !8531
  %add22 = add i64 %22, 212, !dbg !8531
  %conv23 = trunc i64 %add22 to i32, !dbg !8531
  call void @outw(i16 zeroext %20, i32 %conv23) #11, !dbg !8531
  %23 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8532
  %io_port_base24 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %23, i32 0, i32 1, !dbg !8532
  %24 = load i64, i64* %io_port_base24, align 8, !dbg !8532
  %add25 = add i64 %24, 166, !dbg !8532
  %conv26 = trunc i64 %add25 to i32, !dbg !8532
  %call27 = call zeroext i16 @inw(i32 %conv26) #11, !dbg !8532
  %conv28 = zext i16 %call27 to i32, !dbg !8532
  %and29 = and i32 %conv28, -769, !dbg !8533
  %conv30 = trunc i32 %and29 to i16, !dbg !8532
  store i16 %conv30, i16* %wval, align 2, !dbg !8534
  %25 = load i16, i16* %wval, align 2, !dbg !8535
  %conv31 = zext i16 %25 to i32, !dbg !8535
  %or = or i32 %conv31, 33280, !dbg !8535
  %conv32 = trunc i32 %or to i16, !dbg !8535
  store i16 %conv32, i16* %wval, align 2, !dbg !8535
  %26 = load i16, i16* %wval, align 2, !dbg !8536
  %27 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8536
  %io_port_base33 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %27, i32 0, i32 1, !dbg !8536
  %28 = load i64, i64* %io_port_base33, align 8, !dbg !8536
  %add34 = add i64 %28, 166, !dbg !8536
  %conv35 = trunc i64 %add34 to i32, !dbg !8536
  call void @outw(i16 zeroext %26, i32 %conv35) #11, !dbg !8536
  %29 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8537
  %io_port_base36 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %29, i32 0, i32 1, !dbg !8537
  %30 = load i64, i64* %io_port_base36, align 8, !dbg !8537
  %add37 = add i64 %30, 132, !dbg !8537
  %conv38 = trunc i64 %add37 to i32, !dbg !8537
  %call39 = call zeroext i8 @inb(i32 %conv38) #11, !dbg !8537
  %31 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8538
  %io_port_base40 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %31, i32 0, i32 1, !dbg !8538
  %32 = load i64, i64* %io_port_base40, align 8, !dbg !8538
  %add41 = add i64 %32, 140, !dbg !8538
  %conv42 = trunc i64 %add41 to i32, !dbg !8538
  call void @outb(i8 zeroext 127, i32 %conv42) #11, !dbg !8538
  %33 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8539
  %io_port_base43 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %33, i32 0, i32 1, !dbg !8539
  %34 = load i64, i64* %io_port_base43, align 8, !dbg !8539
  %add44 = add i64 %34, 164, !dbg !8539
  %conv45 = trunc i64 %add44 to i32, !dbg !8539
  call void @outb(i8 zeroext 9, i32 %conv45) #11, !dbg !8539
  ret void, !dbg !8540
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reset_dev_param(%struct.AdapterCtlBlk* %acb) #2 !dbg !8541 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %eeprom = alloca %struct.NvRamType*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.DeviceCtlBlk*, align 8
  %period_index = alloca i8, align 1
  %__mptr25 = alloca i8*, align 8
  %tmp30 = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !8542, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !8544, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.declare(metadata %struct.NvRamType** %eeprom, metadata !8546, metadata !DIExpression()), !dbg !8548
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8549
  %eeprom1 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 27, !dbg !8550
  store %struct.NvRamType* %eeprom1, %struct.NvRamType** %eeprom, align 8, !dbg !8548
  br label %do.body, !dbg !8551

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8552

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8554, metadata !DIExpression()), !dbg !8557
  %1 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8557
  %dcb_list = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %1, i32 0, i32 3, !dbg !8557
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %dcb_list, i32 0, i32 0, !dbg !8557
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8557
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !8557
  store i8* %3, i8** %__mptr, align 8, !dbg !8557
  br label %do.body2, !dbg !8557

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !8558

do.end3:                                          ; preds = %do.body2
  %4 = load i8*, i8** %__mptr, align 8, !dbg !8557
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !8557
  %5 = bitcast i8* %add.ptr to %struct.DeviceCtlBlk*, !dbg !8557
  store %struct.DeviceCtlBlk* %5, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !8558
  %6 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !8557
  store %struct.DeviceCtlBlk* %6, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8560
  br label %for.cond, !dbg !8560

for.cond:                                         ; preds = %do.end29, %do.end3
  %7 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8561
  %list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %7, i32 0, i32 0, !dbg !8561
  %8 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8561
  %dcb_list4 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %8, i32 0, i32 3, !dbg !8561
  %cmp = icmp eq %struct.list_head* %list, %dcb_list4, !dbg !8561
  %lnot = xor i1 %cmp, true, !dbg !8561
  br i1 %lnot, label %for.body, label %for.end, !dbg !8560

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %period_index, metadata !8563, metadata !DIExpression()), !dbg !8565
  %9 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8566
  %sync_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %9, i32 0, i32 12, !dbg !8567
  %10 = load i8, i8* %sync_mode, align 1, !dbg !8568
  %conv = zext i8 %10 to i32, !dbg !8568
  %and = and i32 %conv, -11, !dbg !8568
  %conv5 = trunc i32 %and to i8, !dbg !8568
  store i8 %conv5, i8* %sync_mode, align 1, !dbg !8568
  %11 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8569
  %sync_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %11, i32 0, i32 14, !dbg !8570
  store i8 0, i8* %sync_period, align 1, !dbg !8571
  %12 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8572
  %sync_offset = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %12, i32 0, i32 15, !dbg !8573
  store i8 0, i8* %sync_offset, align 2, !dbg !8574
  %13 = load %struct.NvRamType*, %struct.NvRamType** %eeprom, align 8, !dbg !8575
  %target = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %13, i32 0, i32 6, !dbg !8576
  %14 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8577
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %14, i32 0, i32 7, !dbg !8578
  %15 = load i8, i8* %target_id, align 2, !dbg !8578
  %idxprom = zext i8 %15 to i64, !dbg !8575
  %arrayidx = getelementptr [16 x %struct.NVRamTarget], [16 x %struct.NVRamTarget]* %target, i64 0, i64 %idxprom, !dbg !8575
  %cfg0 = getelementptr inbounds %struct.NVRamTarget, %struct.NVRamTarget* %arrayidx, i32 0, i32 0, !dbg !8579
  %16 = load i8, i8* %cfg0, align 2, !dbg !8579
  %17 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8580
  %dev_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %17, i32 0, i32 10, !dbg !8581
  store i8 %16, i8* %dev_mode, align 1, !dbg !8582
  %18 = load %struct.NvRamType*, %struct.NvRamType** %eeprom, align 8, !dbg !8583
  %target6 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %18, i32 0, i32 6, !dbg !8584
  %19 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8585
  %target_id7 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %19, i32 0, i32 7, !dbg !8586
  %20 = load i8, i8* %target_id7, align 2, !dbg !8586
  %idxprom8 = zext i8 %20 to i64, !dbg !8583
  %arrayidx9 = getelementptr [16 x %struct.NVRamTarget], [16 x %struct.NVRamTarget]* %target6, i64 0, i64 %idxprom8, !dbg !8583
  %period = getelementptr inbounds %struct.NVRamTarget, %struct.NVRamTarget* %arrayidx9, i32 0, i32 1, !dbg !8587
  %21 = load i8, i8* %period, align 1, !dbg !8587
  %conv10 = zext i8 %21 to i32, !dbg !8583
  %and11 = and i32 %conv10, 7, !dbg !8588
  %conv12 = trunc i32 %and11 to i8, !dbg !8583
  store i8 %conv12, i8* %period_index, align 1, !dbg !8589
  %22 = load i8, i8* %period_index, align 1, !dbg !8590
  %idxprom13 = zext i8 %22 to i64, !dbg !8591
  %arrayidx14 = getelementptr [8 x i8], [8 x i8]* @clock_period, i64 0, i64 %idxprom13, !dbg !8591
  %23 = load i8, i8* %arrayidx14, align 1, !dbg !8591
  %24 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8592
  %min_nego_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %24, i32 0, i32 13, !dbg !8593
  store i8 %23, i8* %min_nego_period, align 4, !dbg !8594
  %25 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8595
  %dev_mode15 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %25, i32 0, i32 10, !dbg !8597
  %26 = load i8, i8* %dev_mode15, align 1, !dbg !8597
  %conv16 = zext i8 %26 to i32, !dbg !8595
  %and17 = and i32 %conv16, 32, !dbg !8598
  %tobool = icmp ne i32 %and17, 0, !dbg !8598
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8599

lor.lhs.false:                                    ; preds = %for.body
  %27 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8600
  %config = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %27, i32 0, i32 17, !dbg !8601
  %28 = load i8, i8* %config, align 1, !dbg !8601
  %conv18 = zext i8 %28 to i32, !dbg !8600
  %and19 = and i32 %conv18, 32, !dbg !8602
  %tobool20 = icmp ne i32 %and19, 0, !dbg !8602
  br i1 %tobool20, label %if.end, label %if.then, !dbg !8603

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %29 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8604
  %sync_mode21 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %29, i32 0, i32 12, !dbg !8605
  %30 = load i8, i8* %sync_mode21, align 1, !dbg !8606
  %conv22 = zext i8 %30 to i32, !dbg !8606
  %and23 = and i32 %conv22, -5, !dbg !8606
  %conv24 = trunc i32 %and23 to i8, !dbg !8606
  store i8 %conv24, i8* %sync_mode21, align 1, !dbg !8606
  br label %if.end, !dbg !8604

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !8607

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !8608, metadata !DIExpression()), !dbg !8610
  %31 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8610
  %list26 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %31, i32 0, i32 0, !dbg !8610
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %list26, i32 0, i32 0, !dbg !8610
  %32 = load %struct.list_head*, %struct.list_head** %next27, align 8, !dbg !8610
  %33 = bitcast %struct.list_head* %32 to i8*, !dbg !8610
  store i8* %33, i8** %__mptr25, align 8, !dbg !8610
  br label %do.body28, !dbg !8610

do.body28:                                        ; preds = %for.inc
  br label %do.end29, !dbg !8611

do.end29:                                         ; preds = %do.body28
  %34 = load i8*, i8** %__mptr25, align 8, !dbg !8610
  %add.ptr31 = getelementptr i8, i8* %34, i64 0, !dbg !8610
  %35 = bitcast i8* %add.ptr31 to %struct.DeviceCtlBlk*, !dbg !8610
  store %struct.DeviceCtlBlk* %35, %struct.DeviceCtlBlk** %tmp30, align 8, !dbg !8611
  %36 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp30, align 8, !dbg !8610
  store %struct.DeviceCtlBlk* %36, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8561
  br label %for.cond, !dbg !8561, !llvm.loop !8613

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8615
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @doing_srb_done(%struct.AdapterCtlBlk* %acb, i8 zeroext %did_flag, %struct.scsi_cmnd* %cmd, i8 zeroext %force) #2 !dbg !8616 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %did_flag.addr = alloca i8, align 1
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %force.addr = alloca i8, align 1
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.DeviceCtlBlk*, align 8
  %srb = alloca %struct.ScsiReqBlk*, align 8
  %tmp2 = alloca %struct.ScsiReqBlk*, align 8
  %p = alloca %struct.scsi_cmnd*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp7 = alloca %struct.ScsiReqBlk*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp14 = alloca %struct.ScsiReqBlk*, align 8
  %dir = alloca i32, align 4
  %result = alloca i32, align 4
  %__mptr30 = alloca i8*, align 8
  %tmp35 = alloca %struct.ScsiReqBlk*, align 8
  %__mptr54 = alloca i8*, align 8
  %tmp58 = alloca %struct.ScsiReqBlk*, align 8
  %__mptr60 = alloca i8*, align 8
  %tmp65 = alloca %struct.ScsiReqBlk*, align 8
  %result74 = alloca i32, align 4
  %__mptr94 = alloca i8*, align 8
  %tmp99 = alloca %struct.ScsiReqBlk*, align 8
  %__mptr117 = alloca i8*, align 8
  %tmp122 = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !8619, metadata !DIExpression()), !dbg !8620
  store i8 %did_flag, i8* %did_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %did_flag.addr, metadata !8621, metadata !DIExpression()), !dbg !8622
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !8623, metadata !DIExpression()), !dbg !8624
  store i8 %force, i8* %force.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !8625, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !8627, metadata !DIExpression()), !dbg !8628
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0)) #12, !dbg !8629
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8630, metadata !DIExpression()), !dbg !8633
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8633
  %dcb_list = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 3, !dbg !8633
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %dcb_list, i32 0, i32 0, !dbg !8633
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8633
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !8633
  store i8* %2, i8** %__mptr, align 8, !dbg !8633
  br label %do.body, !dbg !8633

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8634

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !8633
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !8633
  %4 = bitcast i8* %add.ptr to %struct.DeviceCtlBlk*, !dbg !8633
  store %struct.DeviceCtlBlk* %4, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !8634
  %5 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !8633
  store %struct.DeviceCtlBlk* %5, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8636
  br label %for.cond, !dbg !8636

for.cond:                                         ; preds = %do.end121, %do.end
  %6 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8637
  %list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %6, i32 0, i32 0, !dbg !8637
  %7 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8637
  %dcb_list1 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %7, i32 0, i32 3, !dbg !8637
  %cmp = icmp eq %struct.list_head* %list, %dcb_list1, !dbg !8637
  %lnot = xor i1 %cmp, true, !dbg !8637
  br i1 %lnot, label %for.body, label %for.end124, !dbg !8636

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb, metadata !8639, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %tmp2, metadata !8642, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %p, metadata !8644, metadata !DIExpression()), !dbg !8645
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !8646, metadata !DIExpression()), !dbg !8649
  %8 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8649
  %srb_going_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %8, i32 0, i32 2, !dbg !8649
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %srb_going_list, i32 0, i32 0, !dbg !8649
  %9 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !8649
  %10 = bitcast %struct.list_head* %9 to i8*, !dbg !8649
  store i8* %10, i8** %__mptr3, align 8, !dbg !8649
  br label %do.body5, !dbg !8649

do.body5:                                         ; preds = %for.body
  br label %do.end6, !dbg !8650

do.end6:                                          ; preds = %do.body5
  %11 = load i8*, i8** %__mptr3, align 8, !dbg !8649
  %add.ptr8 = getelementptr i8, i8* %11, i64 0, !dbg !8649
  %12 = bitcast i8* %add.ptr8 to %struct.ScsiReqBlk*, !dbg !8649
  store %struct.ScsiReqBlk* %12, %struct.ScsiReqBlk** %tmp7, align 8, !dbg !8650
  %13 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp7, align 8, !dbg !8649
  store %struct.ScsiReqBlk* %13, %struct.ScsiReqBlk** %srb, align 8, !dbg !8652
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !8653, metadata !DIExpression()), !dbg !8655
  %14 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !8655
  %list10 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %14, i32 0, i32 0, !dbg !8655
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %list10, i32 0, i32 0, !dbg !8655
  %15 = load %struct.list_head*, %struct.list_head** %next11, align 8, !dbg !8655
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !8655
  store i8* %16, i8** %__mptr9, align 8, !dbg !8655
  br label %do.body12, !dbg !8655

do.body12:                                        ; preds = %do.end6
  br label %do.end13, !dbg !8656

do.end13:                                         ; preds = %do.body12
  %17 = load i8*, i8** %__mptr9, align 8, !dbg !8655
  %add.ptr15 = getelementptr i8, i8* %17, i64 0, !dbg !8655
  %18 = bitcast i8* %add.ptr15 to %struct.ScsiReqBlk*, !dbg !8655
  store %struct.ScsiReqBlk* %18, %struct.ScsiReqBlk** %tmp14, align 8, !dbg !8656
  %19 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp14, align 8, !dbg !8655
  store %struct.ScsiReqBlk* %19, %struct.ScsiReqBlk** %tmp2, align 8, !dbg !8652
  br label %for.cond16, !dbg !8652

for.cond16:                                       ; preds = %do.end34, %do.end13
  %20 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !8658
  %list17 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %20, i32 0, i32 0, !dbg !8658
  %21 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8658
  %srb_going_list18 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %21, i32 0, i32 2, !dbg !8658
  %cmp19 = icmp eq %struct.list_head* %list17, %srb_going_list18, !dbg !8658
  %lnot20 = xor i1 %cmp19, true, !dbg !8658
  br i1 %lnot20, label %for.body21, label %for.end, !dbg !8652

for.body21:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !8660, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.declare(metadata i32* %result, metadata !8663, metadata !DIExpression()), !dbg !8664
  %22 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !8665
  %cmd22 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %22, i32 0, i32 2, !dbg !8666
  %23 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd22, align 8, !dbg !8666
  store %struct.scsi_cmnd* %23, %struct.scsi_cmnd** %p, align 8, !dbg !8667
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !8668
  %sc_data_direction = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %24, i32 0, i32 13, !dbg !8669
  %25 = load i32, i32* %sc_data_direction, align 8, !dbg !8669
  store i32 %25, i32* %dir, align 4, !dbg !8670
  %26 = load i8, i8* %did_flag.addr, align 1, !dbg !8671
  %conv = zext i8 %26 to i32, !dbg !8671
  %shl = shl i32 %conv, 16, !dbg !8671
  %or = or i32 0, %shl, !dbg !8671
  store i32 %or, i32* %result, align 4, !dbg !8672
  %27 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !8673
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !8674
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %28, i32 0, i32 1, !dbg !8675
  %29 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !8675
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %29, i32 0, i32 16, !dbg !8676
  %30 = load i32, i32* %id, align 8, !dbg !8676
  %31 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !8677
  %device23 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %31, i32 0, i32 1, !dbg !8678
  %32 = load %struct.scsi_device*, %struct.scsi_device** %device23, align 8, !dbg !8678
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %32, i32 0, i32 18, !dbg !8679
  %33 = load i64, i64* %lun, align 8, !dbg !8679
  %conv24 = trunc i64 %33 to i8, !dbg !8680
  %conv25 = zext i8 %conv24 to i32, !dbg !8680
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0), %struct.scsi_cmnd* %27, i32 %30, i32 %conv25) #12, !dbg !8681
  %34 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !8682
  %list27 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %34, i32 0, i32 0, !dbg !8683
  call void @list_del(%struct.list_head* %list27) #11, !dbg !8684
  %35 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8685
  %36 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !8686
  call void @free_tag(%struct.DeviceCtlBlk* %35, %struct.ScsiReqBlk* %36) #11, !dbg !8687
  %37 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !8688
  %list28 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %37, i32 0, i32 0, !dbg !8689
  %38 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8690
  %srb_free_list = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %38, i32 0, i32 6, !dbg !8691
  call void @list_add_tail(%struct.list_head* %list28, %struct.list_head* %srb_free_list) #11, !dbg !8692
  %39 = load i32, i32* %result, align 4, !dbg !8693
  %40 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !8694
  %result29 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %40, i32 0, i32 24, !dbg !8695
  store i32 %39, i32* %result29, align 8, !dbg !8696
  %41 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8697
  %42 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !8698
  call void @pci_unmap_srb_sense(%struct.AdapterCtlBlk* %41, %struct.ScsiReqBlk* %42) #11, !dbg !8699
  %43 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8700
  %44 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !8701
  call void @pci_unmap_srb(%struct.AdapterCtlBlk* %43, %struct.ScsiReqBlk* %44) #11, !dbg !8702
  %45 = load i8, i8* %force.addr, align 1, !dbg !8703
  %tobool = icmp ne i8 %45, 0, !dbg !8703
  br i1 %tobool, label %if.then, label %if.end, !dbg !8705

if.then:                                          ; preds = %for.body21
  %46 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !8706
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %46, i32 0, i32 21, !dbg !8708
  %47 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !8708
  %48 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !8709
  call void %47(%struct.scsi_cmnd* %48) #11, !dbg !8706
  br label %if.end, !dbg !8710

if.end:                                           ; preds = %if.then, %for.body21
  br label %for.inc, !dbg !8711

for.inc:                                          ; preds = %if.end
  %49 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp2, align 8, !dbg !8658
  store %struct.ScsiReqBlk* %49, %struct.ScsiReqBlk** %srb, align 8, !dbg !8658
  call void @llvm.dbg.declare(metadata i8** %__mptr30, metadata !8712, metadata !DIExpression()), !dbg !8714
  %50 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp2, align 8, !dbg !8714
  %list31 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %50, i32 0, i32 0, !dbg !8714
  %next32 = getelementptr inbounds %struct.list_head, %struct.list_head* %list31, i32 0, i32 0, !dbg !8714
  %51 = load %struct.list_head*, %struct.list_head** %next32, align 8, !dbg !8714
  %52 = bitcast %struct.list_head* %51 to i8*, !dbg !8714
  store i8* %52, i8** %__mptr30, align 8, !dbg !8714
  br label %do.body33, !dbg !8714

do.body33:                                        ; preds = %for.inc
  br label %do.end34, !dbg !8715

do.end34:                                         ; preds = %do.body33
  %53 = load i8*, i8** %__mptr30, align 8, !dbg !8714
  %add.ptr36 = getelementptr i8, i8* %53, i64 0, !dbg !8714
  %54 = bitcast i8* %add.ptr36 to %struct.ScsiReqBlk*, !dbg !8714
  store %struct.ScsiReqBlk* %54, %struct.ScsiReqBlk** %tmp35, align 8, !dbg !8715
  %55 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp35, align 8, !dbg !8714
  store %struct.ScsiReqBlk* %55, %struct.ScsiReqBlk** %tmp2, align 8, !dbg !8658
  br label %for.cond16, !dbg !8658, !llvm.loop !8717

for.end:                                          ; preds = %for.cond16
  %56 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8719
  %srb_going_list37 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %56, i32 0, i32 2, !dbg !8721
  %call38 = call i32 @list_empty(%struct.list_head* %srb_going_list37) #11, !dbg !8722
  %tobool39 = icmp ne i32 %call38, 0, !dbg !8722
  br i1 %tobool39, label %if.end44, label %if.then40, !dbg !8723

if.then40:                                        ; preds = %for.end
  %57 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8724
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %57, i32 0, i32 7, !dbg !8724
  %58 = load i8, i8* %target_id, align 2, !dbg !8724
  %conv41 = zext i8 %58 to i32, !dbg !8724
  %59 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8724
  %target_lun = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %59, i32 0, i32 8, !dbg !8724
  %60 = load i8, i8* %target_lun, align 1, !dbg !8724
  %conv42 = zext i8 %60 to i32, !dbg !8724
  %call43 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.28, i64 0, i64 0), i32 %conv41, i32 %conv42) #12, !dbg !8724
  br label %if.end44, !dbg !8724

if.end44:                                         ; preds = %if.then40, %for.end
  %61 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8725
  %tag_mask = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %61, i32 0, i32 5, !dbg !8727
  %62 = load i32, i32* %tag_mask, align 8, !dbg !8727
  %tobool45 = icmp ne i32 %62, 0, !dbg !8725
  br i1 %tobool45, label %if.then46, label %if.end53, !dbg !8728

if.then46:                                        ; preds = %if.end44
  %63 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8729
  %target_id47 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %63, i32 0, i32 7, !dbg !8729
  %64 = load i8, i8* %target_id47, align 2, !dbg !8729
  %conv48 = zext i8 %64 to i32, !dbg !8729
  %65 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8729
  %target_lun49 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %65, i32 0, i32 8, !dbg !8729
  %66 = load i8, i8* %target_lun49, align 1, !dbg !8729
  %conv50 = zext i8 %66 to i32, !dbg !8729
  %67 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8729
  %tag_mask51 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %67, i32 0, i32 5, !dbg !8729
  %68 = load i32, i32* %tag_mask51, align 8, !dbg !8729
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.29, i64 0, i64 0), i32 %conv48, i32 %conv50, i32 %68) #12, !dbg !8729
  br label %if.end53, !dbg !8729

if.end53:                                         ; preds = %if.then46, %if.end44
  call void @llvm.dbg.declare(metadata i8** %__mptr54, metadata !8730, metadata !DIExpression()), !dbg !8733
  %69 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8733
  %srb_waiting_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %69, i32 0, i32 3, !dbg !8733
  %next55 = getelementptr inbounds %struct.list_head, %struct.list_head* %srb_waiting_list, i32 0, i32 0, !dbg !8733
  %70 = load %struct.list_head*, %struct.list_head** %next55, align 8, !dbg !8733
  %71 = bitcast %struct.list_head* %70 to i8*, !dbg !8733
  store i8* %71, i8** %__mptr54, align 8, !dbg !8733
  br label %do.body56, !dbg !8733

do.body56:                                        ; preds = %if.end53
  br label %do.end57, !dbg !8734

do.end57:                                         ; preds = %do.body56
  %72 = load i8*, i8** %__mptr54, align 8, !dbg !8733
  %add.ptr59 = getelementptr i8, i8* %72, i64 0, !dbg !8733
  %73 = bitcast i8* %add.ptr59 to %struct.ScsiReqBlk*, !dbg !8733
  store %struct.ScsiReqBlk* %73, %struct.ScsiReqBlk** %tmp58, align 8, !dbg !8734
  %74 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp58, align 8, !dbg !8733
  store %struct.ScsiReqBlk* %74, %struct.ScsiReqBlk** %srb, align 8, !dbg !8736
  call void @llvm.dbg.declare(metadata i8** %__mptr60, metadata !8737, metadata !DIExpression()), !dbg !8739
  %75 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !8739
  %list61 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %75, i32 0, i32 0, !dbg !8739
  %next62 = getelementptr inbounds %struct.list_head, %struct.list_head* %list61, i32 0, i32 0, !dbg !8739
  %76 = load %struct.list_head*, %struct.list_head** %next62, align 8, !dbg !8739
  %77 = bitcast %struct.list_head* %76 to i8*, !dbg !8739
  store i8* %77, i8** %__mptr60, align 8, !dbg !8739
  br label %do.body63, !dbg !8739

do.body63:                                        ; preds = %do.end57
  br label %do.end64, !dbg !8740

do.end64:                                         ; preds = %do.body63
  %78 = load i8*, i8** %__mptr60, align 8, !dbg !8739
  %add.ptr66 = getelementptr i8, i8* %78, i64 0, !dbg !8739
  %79 = bitcast i8* %add.ptr66 to %struct.ScsiReqBlk*, !dbg !8739
  store %struct.ScsiReqBlk* %79, %struct.ScsiReqBlk** %tmp65, align 8, !dbg !8740
  %80 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp65, align 8, !dbg !8739
  store %struct.ScsiReqBlk* %80, %struct.ScsiReqBlk** %tmp2, align 8, !dbg !8736
  br label %for.cond67, !dbg !8736

for.cond67:                                       ; preds = %do.end98, %do.end64
  %81 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !8742
  %list68 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %81, i32 0, i32 0, !dbg !8742
  %82 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8742
  %srb_waiting_list69 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %82, i32 0, i32 3, !dbg !8742
  %cmp70 = icmp eq %struct.list_head* %list68, %srb_waiting_list69, !dbg !8742
  %lnot72 = xor i1 %cmp70, true, !dbg !8742
  br i1 %lnot72, label %for.body73, label %for.end101, !dbg !8736

for.body73:                                       ; preds = %for.cond67
  call void @llvm.dbg.declare(metadata i32* %result74, metadata !8744, metadata !DIExpression()), !dbg !8746
  %83 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !8747
  %cmd75 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %83, i32 0, i32 2, !dbg !8748
  %84 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd75, align 8, !dbg !8748
  store %struct.scsi_cmnd* %84, %struct.scsi_cmnd** %p, align 8, !dbg !8749
  %85 = load i8, i8* %did_flag.addr, align 1, !dbg !8750
  %conv76 = zext i8 %85 to i32, !dbg !8750
  %shl77 = shl i32 %conv76, 16, !dbg !8750
  %or78 = or i32 0, %shl77, !dbg !8750
  store i32 %or78, i32* %result74, align 4, !dbg !8751
  %86 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !8752
  %87 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !8753
  %device79 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %87, i32 0, i32 1, !dbg !8754
  %88 = load %struct.scsi_device*, %struct.scsi_device** %device79, align 8, !dbg !8754
  %id80 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %88, i32 0, i32 16, !dbg !8755
  %89 = load i32, i32* %id80, align 8, !dbg !8755
  %90 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !8756
  %device81 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %90, i32 0, i32 1, !dbg !8757
  %91 = load %struct.scsi_device*, %struct.scsi_device** %device81, align 8, !dbg !8757
  %lun82 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %91, i32 0, i32 18, !dbg !8758
  %92 = load i64, i64* %lun82, align 8, !dbg !8758
  %conv83 = trunc i64 %92 to i8, !dbg !8759
  %conv84 = zext i8 %conv83 to i32, !dbg !8759
  %call85 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i64 0, i64 0), %struct.scsi_cmnd* %86, i32 %89, i32 %conv84) #12, !dbg !8760
  %93 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !8761
  %list86 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %93, i32 0, i32 0, !dbg !8762
  %94 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8763
  %srb_free_list87 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %94, i32 0, i32 6, !dbg !8764
  call void @list_move_tail(%struct.list_head* %list86, %struct.list_head* %srb_free_list87) #11, !dbg !8765
  %95 = load i32, i32* %result74, align 4, !dbg !8766
  %96 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %p, align 8, !dbg !8767
  %result88 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %96, i32 0, i32 24, !dbg !8768
  store i32 %95, i32* %result88, align 8, !dbg !8769
  %97 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8770
  %98 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !8771
  call void @pci_unmap_srb_sense(%struct.AdapterCtlBlk* %97, %struct.ScsiReqBlk* %98) #11, !dbg !8772
  %99 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8773
  %100 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !8774
  call void @pci_unmap_srb(%struct.AdapterCtlBlk* %99, %struct.ScsiReqBlk* %100) #11, !dbg !8775
  %101 = load i8, i8* %force.addr, align 1, !dbg !8776
  %tobool89 = icmp ne i8 %101, 0, !dbg !8776
  br i1 %tobool89, label %if.then90, label %if.end92, !dbg !8778

if.then90:                                        ; preds = %for.body73
  %102 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8779
  %scsi_done91 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %102, i32 0, i32 21, !dbg !8781
  %103 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done91, align 8, !dbg !8781
  %104 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8782
  call void %103(%struct.scsi_cmnd* %104) #11, !dbg !8779
  br label %if.end92, !dbg !8783

if.end92:                                         ; preds = %if.then90, %for.body73
  br label %for.inc93, !dbg !8784

for.inc93:                                        ; preds = %if.end92
  %105 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp2, align 8, !dbg !8742
  store %struct.ScsiReqBlk* %105, %struct.ScsiReqBlk** %srb, align 8, !dbg !8742
  call void @llvm.dbg.declare(metadata i8** %__mptr94, metadata !8785, metadata !DIExpression()), !dbg !8787
  %106 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp2, align 8, !dbg !8787
  %list95 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %106, i32 0, i32 0, !dbg !8787
  %next96 = getelementptr inbounds %struct.list_head, %struct.list_head* %list95, i32 0, i32 0, !dbg !8787
  %107 = load %struct.list_head*, %struct.list_head** %next96, align 8, !dbg !8787
  %108 = bitcast %struct.list_head* %107 to i8*, !dbg !8787
  store i8* %108, i8** %__mptr94, align 8, !dbg !8787
  br label %do.body97, !dbg !8787

do.body97:                                        ; preds = %for.inc93
  br label %do.end98, !dbg !8788

do.end98:                                         ; preds = %do.body97
  %109 = load i8*, i8** %__mptr94, align 8, !dbg !8787
  %add.ptr100 = getelementptr i8, i8* %109, i64 0, !dbg !8787
  %110 = bitcast i8* %add.ptr100 to %struct.ScsiReqBlk*, !dbg !8787
  store %struct.ScsiReqBlk* %110, %struct.ScsiReqBlk** %tmp99, align 8, !dbg !8788
  %111 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp99, align 8, !dbg !8787
  store %struct.ScsiReqBlk* %111, %struct.ScsiReqBlk** %tmp2, align 8, !dbg !8742
  br label %for.cond67, !dbg !8742, !llvm.loop !8790

for.end101:                                       ; preds = %for.cond67
  %112 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8792
  %srb_waiting_list102 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %112, i32 0, i32 3, !dbg !8794
  %call103 = call i32 @list_empty(%struct.list_head* %srb_waiting_list102) #11, !dbg !8795
  %tobool104 = icmp ne i32 %call103, 0, !dbg !8795
  br i1 %tobool104, label %if.end113, label %if.then105, !dbg !8796

if.then105:                                       ; preds = %for.end101
  %113 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8797
  %srb_waiting_list106 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %113, i32 0, i32 3, !dbg !8797
  %call107 = call i32 @list_size(%struct.list_head* %srb_waiting_list106) #11, !dbg !8797
  %114 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8797
  %target_id108 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %114, i32 0, i32 7, !dbg !8797
  %115 = load i8, i8* %target_id108, align 2, !dbg !8797
  %conv109 = zext i8 %115 to i32, !dbg !8797
  %116 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8797
  %target_lun110 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %116, i32 0, i32 8, !dbg !8797
  %117 = load i8, i8* %target_lun110, align 1, !dbg !8797
  %conv111 = zext i8 %117 to i32, !dbg !8797
  %call112 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.31, i64 0, i64 0), i32 %call107, i32 %conv109, i32 %conv111) #12, !dbg !8797
  br label %if.end113, !dbg !8797

if.end113:                                        ; preds = %if.then105, %for.end101
  %118 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8798
  %flag = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %118, i32 0, i32 16, !dbg !8799
  %119 = load i8, i8* %flag, align 1, !dbg !8800
  %conv114 = zext i8 %119 to i32, !dbg !8800
  %and = and i32 %conv114, -2, !dbg !8800
  %conv115 = trunc i32 %and to i8, !dbg !8800
  store i8 %conv115, i8* %flag, align 1, !dbg !8800
  br label %for.inc116, !dbg !8801

for.inc116:                                       ; preds = %if.end113
  call void @llvm.dbg.declare(metadata i8** %__mptr117, metadata !8802, metadata !DIExpression()), !dbg !8804
  %120 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8804
  %list118 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %120, i32 0, i32 0, !dbg !8804
  %next119 = getelementptr inbounds %struct.list_head, %struct.list_head* %list118, i32 0, i32 0, !dbg !8804
  %121 = load %struct.list_head*, %struct.list_head** %next119, align 8, !dbg !8804
  %122 = bitcast %struct.list_head* %121 to i8*, !dbg !8804
  store i8* %122, i8** %__mptr117, align 8, !dbg !8804
  br label %do.body120, !dbg !8804

do.body120:                                       ; preds = %for.inc116
  br label %do.end121, !dbg !8805

do.end121:                                        ; preds = %do.body120
  %123 = load i8*, i8** %__mptr117, align 8, !dbg !8804
  %add.ptr123 = getelementptr i8, i8* %123, i64 0, !dbg !8804
  %124 = bitcast i8* %add.ptr123 to %struct.DeviceCtlBlk*, !dbg !8804
  store %struct.DeviceCtlBlk* %124, %struct.DeviceCtlBlk** %tmp122, align 8, !dbg !8805
  %125 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp122, align 8, !dbg !8804
  store %struct.DeviceCtlBlk* %125, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !8637
  br label %for.cond, !dbg !8637, !llvm.loop !8807

for.end124:                                       ; preds = %for.cond
  %call125 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12, !dbg !8809
  ret void, !dbg !8810
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_move_tail(%struct.list_head* %list, %struct.list_head* %head) #2 !dbg !8811 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !8812, metadata !DIExpression()), !dbg !8813
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8814, metadata !DIExpression()), !dbg !8815
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8816
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !8817
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8818
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8819
  call void @list_add_tail(%struct.list_head* %1, %struct.list_head* %2) #11, !dbg !8820
  ret void, !dbg !8821
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #2 !dbg !8822 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8823, metadata !DIExpression()), !dbg !8825
  %0 = load i64, i64* %__edi, align 8, !dbg !8825
  store i64 %0, i64* %__edi, align 8, !dbg !8825
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8826, metadata !DIExpression()), !dbg !8825
  %1 = load i64, i64* %__esi, align 8, !dbg !8825
  store i64 %1, i64* %__esi, align 8, !dbg !8825
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8827, metadata !DIExpression()), !dbg !8825
  %2 = load i64, i64* %__edx, align 8, !dbg !8825
  store i64 %2, i64* %__edx, align 8, !dbg !8825
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8828, metadata !DIExpression()), !dbg !8825
  %3 = load i64, i64* %__ecx, align 8, !dbg !8825
  store i64 %3, i64* %__ecx, align 8, !dbg !8825
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8829, metadata !DIExpression()), !dbg !8825
  %4 = load i64, i64* %__eax, align 8, !dbg !8825
  store i64 %4, i64* %__eax, align 8, !dbg !8825
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !8825
  %6 = call i64 @llvm.read_register.i64(metadata !5856), !dbg !8825
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #6, !dbg !8825, !srcloc !8830
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8825
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8825
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8825
  call void @llvm.write_register.i64(metadata !5856, i64 %asmresult1), !dbg !8825
  ret void, !dbg !8831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.DeviceCtlBlk* @device_alloc(%struct.AdapterCtlBlk* %acb, i8 zeroext %target, i8 zeroext %lun) #2 !dbg !8832 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8833, metadata !DIExpression()), !dbg !8837
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8845, metadata !DIExpression()), !dbg !8846
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8847, metadata !DIExpression()), !dbg !8848
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8849, metadata !DIExpression()), !dbg !8850
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8851, metadata !DIExpression()), !dbg !8855
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8857, metadata !DIExpression()), !dbg !8861
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8863, metadata !DIExpression()), !dbg !8867
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8872, metadata !DIExpression()), !dbg !8873
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8874, metadata !DIExpression()), !dbg !8875
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8876, metadata !DIExpression()), !dbg !8877
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8878, metadata !DIExpression()), !dbg !8879
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8880, metadata !DIExpression()), !dbg !8881
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8882, metadata !DIExpression()), !dbg !8883
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8884, metadata !DIExpression()), !dbg !8885
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8886, metadata !DIExpression()), !dbg !8887
  %retval = alloca %struct.DeviceCtlBlk*, align 8
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %target.addr = alloca i8, align 1
  %lun.addr = alloca i8, align 1
  %eeprom = alloca %struct.NvRamType*, align 8
  %period_index = alloca i8, align 1
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %p = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr63 = alloca i8*, align 8
  %tmp68 = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !8888, metadata !DIExpression()), !dbg !8889
  store i8 %target, i8* %target.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %target.addr, metadata !8890, metadata !DIExpression()), !dbg !8891
  store i8 %lun, i8* %lun.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lun.addr, metadata !8892, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.declare(metadata %struct.NvRamType** %eeprom, metadata !8894, metadata !DIExpression()), !dbg !8895
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !8896
  %eeprom1 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 27, !dbg !8897
  store %struct.NvRamType* %eeprom1, %struct.NvRamType** %eeprom, align 8, !dbg !8895
  call void @llvm.dbg.declare(metadata i8* %period_index, metadata !8898, metadata !DIExpression()), !dbg !8899
  %1 = load %struct.NvRamType*, %struct.NvRamType** %eeprom, align 8, !dbg !8900
  %target2 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %1, i32 0, i32 6, !dbg !8901
  %2 = load i8, i8* %target.addr, align 1, !dbg !8902
  %idxprom = zext i8 %2 to i64, !dbg !8900
  %arrayidx = getelementptr [16 x %struct.NVRamTarget], [16 x %struct.NVRamTarget]* %target2, i64 0, i64 %idxprom, !dbg !8900
  %period = getelementptr inbounds %struct.NVRamTarget, %struct.NVRamTarget* %arrayidx, i32 0, i32 1, !dbg !8903
  %3 = load i8, i8* %period, align 1, !dbg !8903
  %conv = zext i8 %3 to i32, !dbg !8900
  %and = and i32 %conv, 7, !dbg !8904
  %conv3 = trunc i32 %and to i8, !dbg !8900
  store i8 %conv3, i8* %period_index, align 1, !dbg !8899
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !8905, metadata !DIExpression()), !dbg !8906
  store i64 88, i64* %size.addr.i, align 8
  store i32 2592, i32* %flags.addr.i, align 4
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8907
  %5 = call i1 @llvm.is.constant.i64(i64 %4) #6, !dbg !8908
  br i1 %5, label %if.then.i, label %if.end9.i, !dbg !8909

if.then.i:                                        ; preds = %entry
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8910
  %cmp.i = icmp ugt i64 %6, 8192, !dbg !8911
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8912

if.then1.i:                                       ; preds = %if.then.i
  %7 = load i64, i64* %size.addr.i, align 8, !dbg !8913
  %8 = load i32, i32* %flags.addr.i, align 4, !dbg !8914
  store i64 %7, i64* %size.addr.i.i, align 8
  store i32 %8, i32* %flags.addr.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !8915
  %call.i.i = call i32 @get_order(i64 %9) #14, !dbg !8916
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8881
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !8917
  %11 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8918
  %12 = load i32, i32* %order.i.i, align 4, !dbg !8919
  store i64 %10, i64* %size.addr.i.i.i, align 8
  store i32 %11, i32* %flags.addr.i.i.i, align 4
  store i32 %12, i32* %order.addr.i.i.i, align 4
  %13 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8920
  %14 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8921
  %15 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8922
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %13, i32 %14, i32 %15) #13, !dbg !8923
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8923
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8923
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8923
  call void @llvm.assume(i1 %maskcond.i.i.i) #6, !dbg !8923
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8924
  br label %kmalloc.exit, !dbg !8924

if.end.i:                                         ; preds = %if.then.i
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !8925
  store i64 %16, i64* %size.addr.i11.i, align 8
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8926
  %tobool.i.i = icmp ne i64 %17, 0, !dbg !8926
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8928

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8929
  br label %kmalloc_index.exit.i, !dbg !8929

if.end.i.i:                                       ; preds = %if.end.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8930
  %cmp.i.i = icmp ule i64 %18, 8, !dbg !8932
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8933

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8934
  br label %kmalloc_index.exit.i, !dbg !8934

if.end2.i.i:                                      ; preds = %if.end.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8935
  %cmp3.i.i = icmp ugt i64 %19, 64, !dbg !8937
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8938

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8939
  %cmp4.i.i = icmp ule i64 %20, 96, !dbg !8940
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8941

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8942
  br label %kmalloc_index.exit.i, !dbg !8942

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8943
  %cmp7.i.i = icmp ugt i64 %21, 128, !dbg !8945
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8946

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8947
  %cmp9.i.i = icmp ule i64 %22, 192, !dbg !8948
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8949

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8950
  br label %kmalloc_index.exit.i, !dbg !8950

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8951
  %cmp12.i.i = icmp ule i64 %23, 8, !dbg !8953
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8954

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8955
  br label %kmalloc_index.exit.i, !dbg !8955

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8956
  %cmp15.i.i = icmp ule i64 %24, 16, !dbg !8958
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8959

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8960
  br label %kmalloc_index.exit.i, !dbg !8960

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8961
  %cmp18.i.i = icmp ule i64 %25, 32, !dbg !8963
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8964

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8965
  br label %kmalloc_index.exit.i, !dbg !8965

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8966
  %cmp21.i.i = icmp ule i64 %26, 64, !dbg !8968
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8969

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8970
  br label %kmalloc_index.exit.i, !dbg !8970

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8971
  %cmp24.i.i = icmp ule i64 %27, 128, !dbg !8973
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8974

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8975
  br label %kmalloc_index.exit.i, !dbg !8975

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8976
  %cmp27.i.i = icmp ule i64 %28, 256, !dbg !8978
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8979

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8980
  br label %kmalloc_index.exit.i, !dbg !8980

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8981
  %cmp30.i.i = icmp ule i64 %29, 512, !dbg !8983
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8984

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8985
  br label %kmalloc_index.exit.i, !dbg !8985

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8986
  %cmp33.i.i = icmp ule i64 %30, 1024, !dbg !8988
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8989

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8990
  br label %kmalloc_index.exit.i, !dbg !8990

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8991
  %cmp36.i.i = icmp ule i64 %31, 2048, !dbg !8993
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8994

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8995
  br label %kmalloc_index.exit.i, !dbg !8995

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8996
  %cmp39.i.i = icmp ule i64 %32, 4096, !dbg !8998
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8999

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9000
  br label %kmalloc_index.exit.i, !dbg !9000

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9001
  %cmp42.i.i = icmp ule i64 %33, 8192, !dbg !9003
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9004

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9005
  br label %kmalloc_index.exit.i, !dbg !9005

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9006
  %cmp45.i.i = icmp ule i64 %34, 16384, !dbg !9008
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9009

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9010
  br label %kmalloc_index.exit.i, !dbg !9010

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9011
  %cmp48.i.i = icmp ule i64 %35, 32768, !dbg !9013
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9014

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9015
  br label %kmalloc_index.exit.i, !dbg !9015

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9016
  %cmp51.i.i = icmp ule i64 %36, 65536, !dbg !9018
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9019

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9020
  br label %kmalloc_index.exit.i, !dbg !9020

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9021
  %cmp54.i.i = icmp ule i64 %37, 131072, !dbg !9023
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9024

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9025
  br label %kmalloc_index.exit.i, !dbg !9025

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9026
  %cmp57.i.i = icmp ule i64 %38, 262144, !dbg !9028
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9029

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9030
  br label %kmalloc_index.exit.i, !dbg !9030

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9031
  %cmp60.i.i = icmp ule i64 %39, 524288, !dbg !9033
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9034

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9035
  br label %kmalloc_index.exit.i, !dbg !9035

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9036
  %cmp63.i.i = icmp ule i64 %40, 1048576, !dbg !9038
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9039

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9040
  br label %kmalloc_index.exit.i, !dbg !9040

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9041
  %cmp66.i.i = icmp ule i64 %41, 2097152, !dbg !9043
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9044

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9045
  br label %kmalloc_index.exit.i, !dbg !9045

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9046
  %cmp69.i.i = icmp ule i64 %42, 4194304, !dbg !9048
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9049

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9050
  br label %kmalloc_index.exit.i, !dbg !9050

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9051
  %cmp72.i.i = icmp ule i64 %43, 8388608, !dbg !9053
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9054

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9055
  br label %kmalloc_index.exit.i, !dbg !9055

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9056
  %cmp75.i.i = icmp ule i64 %44, 16777216, !dbg !9058
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9059

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9060
  br label %kmalloc_index.exit.i, !dbg !9060

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9061
  %cmp78.i.i = icmp ule i64 %45, 33554432, !dbg !9063
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9064

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9065
  br label %kmalloc_index.exit.i, !dbg !9065

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9066
  %cmp81.i.i = icmp ule i64 %46, 67108864, !dbg !9068
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9069

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9070
  br label %kmalloc_index.exit.i, !dbg !9070

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.33, i64 0, i64 0), i32 382, i32 0, i64 12) #6, !dbg !9071, !srcloc !9074
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 159) #6, !dbg !9075, !srcloc !9078
  unreachable, !dbg !9079

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %47 = load i32, i32* %retval.i.i, align 4, !dbg !9080
  store i32 %47, i32* %index.i, align 4, !dbg !9081
  %48 = load i32, i32* %index.i, align 4, !dbg !9082
  %tobool.i = icmp ne i32 %48, 0, !dbg !9082
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9084

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9085
  br label %kmalloc.exit, !dbg !9085

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %49 = load i32, i32* %flags.addr.i, align 4, !dbg !9086
  store i32 %49, i32* %flags.addr.i13.i, align 4
  %50 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9087
  %and.i.i = and i32 %50, 17, !dbg !9087
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9087
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9087
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9087
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9087
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9089

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9090
  br label %kmalloc_type.exit.i, !dbg !9090

if.end.i16.i:                                     ; preds = %if.end4.i
  %51 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9091
  %and2.i.i = and i32 %51, 1, !dbg !9092
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9091
  %52 = zext i1 %tobool3.i.i to i64, !dbg !9091
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9091
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9093
  br label %kmalloc_type.exit.i, !dbg !9093

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %53 = load i32, i32* %retval.i12.i, align 4, !dbg !9094
  %idxprom.i = zext i32 %53 to i64, !dbg !9095
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9095
  %54 = load i32, i32* %index.i, align 4, !dbg !9096
  %idxprom6.i = zext i32 %54 to i64, !dbg !9095
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9095
  %55 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9095
  %56 = load i32, i32* %flags.addr.i, align 4, !dbg !9097
  %57 = load i64, i64* %size.addr.i, align 8, !dbg !9098
  store %struct.kmem_cache* %55, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %56, i32* %flags.addr.i17.i, align 4
  store i64 %57, i64* %size.addr.i18.i, align 8
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9099
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9100
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %58, i32 %59) #13, !dbg !9101
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9101
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9101
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9101
  call void @llvm.assume(i1 %maskcond.i.i) #6, !dbg !9101
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8850
  %60 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9102
  %61 = load i8*, i8** %ret.i.i, align 8, !dbg !9103
  %62 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9104
  %63 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9105
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %60, i8* %61, i64 %62, i32 %63) #13, !dbg !9106
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9107
  %64 = load i8*, i8** %ret.i.i, align 8, !dbg !9108
  store i8* %64, i8** %retval.i, align 8, !dbg !9109
  br label %kmalloc.exit, !dbg !9109

if.end9.i:                                        ; preds = %entry
  %65 = load i64, i64* %size.addr.i, align 8, !dbg !9110
  %66 = load i32, i32* %flags.addr.i, align 4, !dbg !9111
  %call10.i = call noalias i8* @__kmalloc(i64 %65, i32 %66) #13, !dbg !9112
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9112
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9112
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9112
  call void @llvm.assume(i1 %maskcond.i) #6, !dbg !9112
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9113
  br label %kmalloc.exit, !dbg !9113

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %67 = load i8*, i8** %retval.i, align 8, !dbg !9114
  %68 = bitcast i8* %67 to %struct.DeviceCtlBlk*, !dbg !9115
  store %struct.DeviceCtlBlk* %68, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9116
  br label %do.body, !dbg !9117

do.body:                                          ; preds = %kmalloc.exit
  br label %do.end, !dbg !9118

do.end:                                           ; preds = %do.body
  %69 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9120
  %tobool = icmp ne %struct.DeviceCtlBlk* %69, null, !dbg !9120
  br i1 %tobool, label %if.end, label %if.then, !dbg !9122

if.then:                                          ; preds = %do.end
  store %struct.DeviceCtlBlk* null, %struct.DeviceCtlBlk** %retval, align 8, !dbg !9123
  br label %return, !dbg !9123

if.end:                                           ; preds = %do.end
  %70 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9124
  %acb4 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %70, i32 0, i32 1, !dbg !9125
  store %struct.AdapterCtlBlk* null, %struct.AdapterCtlBlk** %acb4, align 8, !dbg !9126
  %71 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9127
  %srb_going_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %71, i32 0, i32 2, !dbg !9128
  call void @INIT_LIST_HEAD(%struct.list_head* %srb_going_list) #11, !dbg !9129
  %72 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9130
  %srb_waiting_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %72, i32 0, i32 3, !dbg !9131
  call void @INIT_LIST_HEAD(%struct.list_head* %srb_waiting_list) #11, !dbg !9132
  %73 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9133
  %active_srb = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %73, i32 0, i32 4, !dbg !9134
  store %struct.ScsiReqBlk* null, %struct.ScsiReqBlk** %active_srb, align 8, !dbg !9135
  %74 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9136
  %tag_mask = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %74, i32 0, i32 5, !dbg !9137
  store i32 0, i32* %tag_mask, align 8, !dbg !9138
  %75 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9139
  %max_command = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %75, i32 0, i32 6, !dbg !9140
  store i16 1, i16* %max_command, align 4, !dbg !9141
  %76 = load i8, i8* %target.addr, align 1, !dbg !9142
  %77 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9143
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %77, i32 0, i32 7, !dbg !9144
  store i8 %76, i8* %target_id, align 2, !dbg !9145
  %78 = load i8, i8* %lun.addr, align 1, !dbg !9146
  %79 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9147
  %target_lun = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %79, i32 0, i32 8, !dbg !9148
  store i8 %78, i8* %target_lun, align 1, !dbg !9149
  %80 = load %struct.NvRamType*, %struct.NvRamType** %eeprom, align 8, !dbg !9150
  %target5 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %80, i32 0, i32 6, !dbg !9151
  %81 = load i8, i8* %target.addr, align 1, !dbg !9152
  %idxprom6 = zext i8 %81 to i64, !dbg !9150
  %arrayidx7 = getelementptr [16 x %struct.NVRamTarget], [16 x %struct.NVRamTarget]* %target5, i64 0, i64 %idxprom6, !dbg !9150
  %cfg0 = getelementptr inbounds %struct.NVRamTarget, %struct.NVRamTarget* %arrayidx7, i32 0, i32 0, !dbg !9153
  %82 = load i8, i8* %cfg0, align 2, !dbg !9153
  %83 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9154
  %dev_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %83, i32 0, i32 10, !dbg !9155
  store i8 %82, i8* %dev_mode, align 1, !dbg !9156
  %84 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9157
  %dev_mode8 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %84, i32 0, i32 10, !dbg !9157
  %85 = load i8, i8* %dev_mode8, align 1, !dbg !9157
  %conv9 = zext i8 %85 to i32, !dbg !9157
  %and10 = and i32 %conv9, 4, !dbg !9157
  %tobool11 = icmp ne i32 %and10, 0, !dbg !9157
  %86 = zext i1 %tobool11 to i64, !dbg !9157
  %cond = select i1 %tobool11, i32 64, i32 0, !dbg !9157
  %or = or i32 128, %cond, !dbg !9157
  %87 = load i8, i8* %lun.addr, align 1, !dbg !9157
  %conv12 = zext i8 %87 to i32, !dbg !9157
  %and13 = and i32 %conv12, 7, !dbg !9157
  %or14 = or i32 %or, %and13, !dbg !9157
  %conv15 = trunc i32 %or14 to i8, !dbg !9157
  %88 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9158
  %identify_msg = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %88, i32 0, i32 9, !dbg !9159
  store i8 %conv15, i8* %identify_msg, align 8, !dbg !9160
  %89 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9161
  %inquiry7 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %89, i32 0, i32 11, !dbg !9162
  store i8 0, i8* %inquiry7, align 2, !dbg !9163
  %90 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9164
  %sync_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %90, i32 0, i32 12, !dbg !9165
  store i8 0, i8* %sync_mode, align 1, !dbg !9166
  %91 = load i8, i8* %period_index, align 1, !dbg !9167
  %idxprom16 = zext i8 %91 to i64, !dbg !9168
  %arrayidx17 = getelementptr [8 x i8], [8 x i8]* @clock_period, i64 0, i64 %idxprom16, !dbg !9168
  %92 = load i8, i8* %arrayidx17, align 1, !dbg !9168
  %93 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9169
  %min_nego_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %93, i32 0, i32 13, !dbg !9170
  store i8 %92, i8* %min_nego_period, align 4, !dbg !9171
  %94 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9172
  %sync_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %94, i32 0, i32 14, !dbg !9173
  store i8 0, i8* %sync_period, align 1, !dbg !9174
  %95 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9175
  %sync_offset = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %95, i32 0, i32 15, !dbg !9176
  store i8 0, i8* %sync_offset, align 2, !dbg !9177
  %96 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9178
  %flag = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %96, i32 0, i32 16, !dbg !9179
  store i8 0, i8* %flag, align 1, !dbg !9180
  %97 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9181
  %dev_mode18 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %97, i32 0, i32 10, !dbg !9183
  %98 = load i8, i8* %dev_mode18, align 1, !dbg !9183
  %conv19 = zext i8 %98 to i32, !dbg !9181
  %and20 = and i32 %conv19, 32, !dbg !9184
  %tobool21 = icmp ne i32 %and20, 0, !dbg !9184
  br i1 %tobool21, label %land.lhs.true, label %if.end30, !dbg !9185

land.lhs.true:                                    ; preds = %if.end
  %99 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9186
  %config = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %99, i32 0, i32 17, !dbg !9187
  %100 = load i8, i8* %config, align 1, !dbg !9187
  %conv22 = zext i8 %100 to i32, !dbg !9186
  %and23 = and i32 %conv22, 32, !dbg !9188
  %tobool24 = icmp ne i32 %and23, 0, !dbg !9188
  br i1 %tobool24, label %if.then25, label %if.end30, !dbg !9189

if.then25:                                        ; preds = %land.lhs.true
  %101 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9190
  %sync_mode26 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %101, i32 0, i32 12, !dbg !9191
  %102 = load i8, i8* %sync_mode26, align 1, !dbg !9192
  %conv27 = zext i8 %102 to i32, !dbg !9192
  %or28 = or i32 %conv27, 4, !dbg !9192
  %conv29 = trunc i32 %or28 to i8, !dbg !9192
  store i8 %conv29, i8* %sync_mode26, align 1, !dbg !9192
  br label %if.end30, !dbg !9190

if.end30:                                         ; preds = %if.then25, %land.lhs.true, %if.end
  %103 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9193
  %dev_mode31 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %103, i32 0, i32 10, !dbg !9195
  %104 = load i8, i8* %dev_mode31, align 1, !dbg !9195
  %conv32 = zext i8 %104 to i32, !dbg !9193
  %and33 = and i32 %conv32, 2, !dbg !9196
  %tobool34 = icmp ne i32 %and33, 0, !dbg !9196
  br i1 %tobool34, label %if.then35, label %if.end45, !dbg !9197

if.then35:                                        ; preds = %if.end30
  %105 = load i8, i8* %lun.addr, align 1, !dbg !9198
  %tobool36 = icmp ne i8 %105, 0, !dbg !9200
  br i1 %tobool36, label %lor.lhs.false, label %if.then39, !dbg !9201

lor.lhs.false:                                    ; preds = %if.then35
  %106 = load i16, i16* @current_sync_offset, align 2, !dbg !9202
  %conv37 = zext i16 %106 to i32, !dbg !9202
  %tobool38 = icmp ne i32 %conv37, 0, !dbg !9202
  br i1 %tobool38, label %if.then39, label %if.end44, !dbg !9203

if.then39:                                        ; preds = %lor.lhs.false, %if.then35
  %107 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9204
  %sync_mode40 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %107, i32 0, i32 12, !dbg !9205
  %108 = load i8, i8* %sync_mode40, align 1, !dbg !9206
  %conv41 = zext i8 %108 to i32, !dbg !9206
  %or42 = or i32 %conv41, 1, !dbg !9206
  %conv43 = trunc i32 %or42 to i8, !dbg !9206
  store i8 %conv43, i8* %sync_mode40, align 1, !dbg !9206
  br label %if.end44, !dbg !9204

if.end44:                                         ; preds = %if.then39, %lor.lhs.false
  br label %if.end45, !dbg !9202

if.end45:                                         ; preds = %if.end44, %if.end30
  %109 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9207
  %target_lun46 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %109, i32 0, i32 8, !dbg !9209
  %110 = load i8, i8* %target_lun46, align 1, !dbg !9209
  %conv47 = zext i8 %110 to i32, !dbg !9207
  %cmp = icmp ne i32 %conv47, 0, !dbg !9210
  br i1 %cmp, label %if.then49, label %if.end82, !dbg !9211

if.then49:                                        ; preds = %if.end45
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %p, metadata !9212, metadata !DIExpression()), !dbg !9214
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9215, metadata !DIExpression()), !dbg !9218
  %111 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9218
  %dcb_list = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %111, i32 0, i32 3, !dbg !9218
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %dcb_list, i32 0, i32 0, !dbg !9218
  %112 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9218
  %113 = bitcast %struct.list_head* %112 to i8*, !dbg !9218
  store i8* %113, i8** %__mptr, align 8, !dbg !9218
  br label %do.body50, !dbg !9218

do.body50:                                        ; preds = %if.then49
  br label %do.end51, !dbg !9219

do.end51:                                         ; preds = %do.body50
  %114 = load i8*, i8** %__mptr, align 8, !dbg !9218
  %add.ptr = getelementptr i8, i8* %114, i64 0, !dbg !9218
  %115 = bitcast i8* %add.ptr to %struct.DeviceCtlBlk*, !dbg !9218
  store %struct.DeviceCtlBlk* %115, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !9219
  %116 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !9218
  store %struct.DeviceCtlBlk* %116, %struct.DeviceCtlBlk** %p, align 8, !dbg !9221
  br label %for.cond, !dbg !9221

for.cond:                                         ; preds = %do.end67, %do.end51
  %117 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %p, align 8, !dbg !9222
  %list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %117, i32 0, i32 0, !dbg !9222
  %118 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9222
  %dcb_list52 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %118, i32 0, i32 3, !dbg !9222
  %cmp53 = icmp eq %struct.list_head* %list, %dcb_list52, !dbg !9222
  %lnot = xor i1 %cmp53, true, !dbg !9222
  br i1 %lnot, label %for.body, label %for.end, !dbg !9221

for.body:                                         ; preds = %for.cond
  %119 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %p, align 8, !dbg !9224
  %target_id55 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %119, i32 0, i32 7, !dbg !9226
  %120 = load i8, i8* %target_id55, align 2, !dbg !9226
  %conv56 = zext i8 %120 to i32, !dbg !9224
  %121 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9227
  %target_id57 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %121, i32 0, i32 7, !dbg !9228
  %122 = load i8, i8* %target_id57, align 2, !dbg !9228
  %conv58 = zext i8 %122 to i32, !dbg !9227
  %cmp59 = icmp eq i32 %conv56, %conv58, !dbg !9229
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !9230

if.then61:                                        ; preds = %for.body
  br label %for.end, !dbg !9231

if.end62:                                         ; preds = %for.body
  br label %for.inc, !dbg !9228

for.inc:                                          ; preds = %if.end62
  call void @llvm.dbg.declare(metadata i8** %__mptr63, metadata !9232, metadata !DIExpression()), !dbg !9234
  %123 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %p, align 8, !dbg !9234
  %list64 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %123, i32 0, i32 0, !dbg !9234
  %next65 = getelementptr inbounds %struct.list_head, %struct.list_head* %list64, i32 0, i32 0, !dbg !9234
  %124 = load %struct.list_head*, %struct.list_head** %next65, align 8, !dbg !9234
  %125 = bitcast %struct.list_head* %124 to i8*, !dbg !9234
  store i8* %125, i8** %__mptr63, align 8, !dbg !9234
  br label %do.body66, !dbg !9234

do.body66:                                        ; preds = %for.inc
  br label %do.end67, !dbg !9235

do.end67:                                         ; preds = %do.body66
  %126 = load i8*, i8** %__mptr63, align 8, !dbg !9234
  %add.ptr69 = getelementptr i8, i8* %126, i64 0, !dbg !9234
  %127 = bitcast i8* %add.ptr69 to %struct.DeviceCtlBlk*, !dbg !9234
  store %struct.DeviceCtlBlk* %127, %struct.DeviceCtlBlk** %tmp68, align 8, !dbg !9235
  %128 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp68, align 8, !dbg !9234
  store %struct.DeviceCtlBlk* %128, %struct.DeviceCtlBlk** %p, align 8, !dbg !9222
  br label %for.cond, !dbg !9222, !llvm.loop !9237

for.end:                                          ; preds = %if.then61, %for.cond
  br label %do.body70, !dbg !9239

do.body70:                                        ; preds = %for.end
  br label %do.end71, !dbg !9240

do.end71:                                         ; preds = %do.body70
  %129 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %p, align 8, !dbg !9242
  %sync_mode72 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %129, i32 0, i32 12, !dbg !9243
  %130 = load i8, i8* %sync_mode72, align 1, !dbg !9243
  %131 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9244
  %sync_mode73 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %131, i32 0, i32 12, !dbg !9245
  store i8 %130, i8* %sync_mode73, align 1, !dbg !9246
  %132 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %p, align 8, !dbg !9247
  %sync_period74 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %132, i32 0, i32 14, !dbg !9248
  %133 = load i8, i8* %sync_period74, align 1, !dbg !9248
  %134 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9249
  %sync_period75 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %134, i32 0, i32 14, !dbg !9250
  store i8 %133, i8* %sync_period75, align 1, !dbg !9251
  %135 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %p, align 8, !dbg !9252
  %min_nego_period76 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %135, i32 0, i32 13, !dbg !9253
  %136 = load i8, i8* %min_nego_period76, align 4, !dbg !9253
  %137 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9254
  %min_nego_period77 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %137, i32 0, i32 13, !dbg !9255
  store i8 %136, i8* %min_nego_period77, align 4, !dbg !9256
  %138 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %p, align 8, !dbg !9257
  %sync_offset78 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %138, i32 0, i32 15, !dbg !9258
  %139 = load i8, i8* %sync_offset78, align 2, !dbg !9258
  %140 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9259
  %sync_offset79 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %140, i32 0, i32 15, !dbg !9260
  store i8 %139, i8* %sync_offset79, align 2, !dbg !9261
  %141 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %p, align 8, !dbg !9262
  %inquiry780 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %141, i32 0, i32 11, !dbg !9263
  %142 = load i8, i8* %inquiry780, align 2, !dbg !9263
  %143 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9264
  %inquiry781 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %143, i32 0, i32 11, !dbg !9265
  store i8 %142, i8* %inquiry781, align 2, !dbg !9266
  br label %if.end82, !dbg !9267

if.end82:                                         ; preds = %do.end71, %if.end45
  %144 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !9268
  store %struct.DeviceCtlBlk* %144, %struct.DeviceCtlBlk** %retval, align 8, !dbg !9269
  br label %return, !dbg !9269

return:                                           ; preds = %if.end82, %if.then
  %145 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %retval, align 8, !dbg !9270
  ret %struct.DeviceCtlBlk* %145, !dbg !9270
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @adapter_add_device(%struct.AdapterCtlBlk* %acb, %struct.DeviceCtlBlk* %dcb) #2 !dbg !9271 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !9274, metadata !DIExpression()), !dbg !9275
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !9276, metadata !DIExpression()), !dbg !9277
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9278
  %1 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9279
  %acb1 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %1, i32 0, i32 1, !dbg !9280
  store %struct.AdapterCtlBlk* %0, %struct.AdapterCtlBlk** %acb1, align 8, !dbg !9281
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9282
  %dcb_list = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 3, !dbg !9284
  %call = call i32 @list_empty(%struct.list_head* %dcb_list) #11, !dbg !9285
  %tobool = icmp ne i32 %call, 0, !dbg !9285
  br i1 %tobool, label %if.then, label %if.end, !dbg !9286

if.then:                                          ; preds = %entry
  %3 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9287
  %4 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9288
  %dcb_run_robin = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %4, i32 0, i32 4, !dbg !9289
  store %struct.DeviceCtlBlk* %3, %struct.DeviceCtlBlk** %dcb_run_robin, align 8, !dbg !9290
  br label %if.end, !dbg !9288

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9291
  %list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %5, i32 0, i32 0, !dbg !9292
  %6 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9293
  %dcb_list2 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %6, i32 0, i32 3, !dbg !9294
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %dcb_list2) #11, !dbg !9295
  %7 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9296
  %target_lun = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %7, i32 0, i32 8, !dbg !9297
  %8 = load i8, i8* %target_lun, align 1, !dbg !9297
  %conv = zext i8 %8 to i32, !dbg !9296
  %shl = shl i32 1, %conv, !dbg !9298
  %9 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9299
  %dcb_map = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %9, i32 0, i32 21, !dbg !9300
  %10 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9301
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %10, i32 0, i32 7, !dbg !9302
  %11 = load i8, i8* %target_id, align 2, !dbg !9302
  %idxprom = zext i8 %11 to i64, !dbg !9299
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %dcb_map, i64 0, i64 %idxprom, !dbg !9299
  %12 = load i8, i8* %arrayidx, align 1, !dbg !9303
  %conv3 = zext i8 %12 to i32, !dbg !9303
  %or = or i32 %conv3, %shl, !dbg !9303
  %conv4 = trunc i32 %or to i8, !dbg !9303
  store i8 %conv4, i8* %arrayidx, align 1, !dbg !9303
  %13 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9304
  %14 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9305
  %children = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %14, i32 0, i32 22, !dbg !9306
  %15 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9307
  %target_id5 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %15, i32 0, i32 7, !dbg !9308
  %16 = load i8, i8* %target_id5, align 2, !dbg !9308
  %idxprom6 = zext i8 %16 to i64, !dbg !9305
  %arrayidx7 = getelementptr [16 x [32 x %struct.DeviceCtlBlk*]], [16 x [32 x %struct.DeviceCtlBlk*]]* %children, i64 0, i64 %idxprom6, !dbg !9305
  %17 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9309
  %target_lun8 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %17, i32 0, i32 8, !dbg !9310
  %18 = load i8, i8* %target_lun8, align 1, !dbg !9310
  %idxprom9 = zext i8 %18 to i64, !dbg !9305
  %arrayidx10 = getelementptr [32 x %struct.DeviceCtlBlk*], [32 x %struct.DeviceCtlBlk*]* %arrayidx7, i64 0, i64 %idxprom9, !dbg !9305
  store %struct.DeviceCtlBlk* %13, %struct.DeviceCtlBlk** %arrayidx10, align 8, !dbg !9311
  ret void, !dbg !9312
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #2 !dbg !9313 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !9314, metadata !DIExpression()), !dbg !9315
  br label %do.body, !dbg !9316

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9317

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !9319

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !9317

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9321
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9321
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !9321
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !9321
  br label %do.end3, !dbg !9321

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !9317

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9323
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9324
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !9325
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !9326
  ret void, !dbg !9327
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #7

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #8

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #9 !dbg !9328 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9332, metadata !DIExpression()), !dbg !9337
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9339, metadata !DIExpression()), !dbg !9340
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9341, metadata !DIExpression()), !dbg !9342
  %0 = load i64, i64* %size.addr, align 8, !dbg !9343
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !9345
  br i1 %1, label %if.then, label %if.end447, !dbg !9346

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !9347
  %tobool = icmp ne i64 %2, 0, !dbg !9347
  br i1 %tobool, label %if.end, label %if.then1, !dbg !9350

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !9351
  br label %return, !dbg !9351

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !9352
  %cmp = icmp ult i64 %3, 4096, !dbg !9354
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9355

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9356
  br label %return, !dbg !9356

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub = sub i64 %4, 1, !dbg !9357
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !9357
  br i1 %5, label %cond.true, label %cond.false442, !dbg !9357

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub4 = sub i64 %6, 1, !dbg !9357
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !9357
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !9357

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub6 = sub i64 %8, 1, !dbg !9357
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !9357
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !9357

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !9357

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub9 = sub i64 %9, 1, !dbg !9357
  %and = and i64 %sub9, -9223372036854775808, !dbg !9357
  %tobool10 = icmp ne i64 %and, 0, !dbg !9357
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !9357

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !9357

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub13 = sub i64 %10, 1, !dbg !9357
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !9357
  %tobool15 = icmp ne i64 %and14, 0, !dbg !9357
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !9357

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !9357

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub18 = sub i64 %11, 1, !dbg !9357
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !9357
  %tobool20 = icmp ne i64 %and19, 0, !dbg !9357
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !9357

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !9357

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub23 = sub i64 %12, 1, !dbg !9357
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !9357
  %tobool25 = icmp ne i64 %and24, 0, !dbg !9357
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !9357

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !9357

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub28 = sub i64 %13, 1, !dbg !9357
  %and29 = and i64 %sub28, 576460752303423488, !dbg !9357
  %tobool30 = icmp ne i64 %and29, 0, !dbg !9357
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !9357

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !9357

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub33 = sub i64 %14, 1, !dbg !9357
  %and34 = and i64 %sub33, 288230376151711744, !dbg !9357
  %tobool35 = icmp ne i64 %and34, 0, !dbg !9357
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !9357

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !9357

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub38 = sub i64 %15, 1, !dbg !9357
  %and39 = and i64 %sub38, 144115188075855872, !dbg !9357
  %tobool40 = icmp ne i64 %and39, 0, !dbg !9357
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !9357

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !9357

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub43 = sub i64 %16, 1, !dbg !9357
  %and44 = and i64 %sub43, 72057594037927936, !dbg !9357
  %tobool45 = icmp ne i64 %and44, 0, !dbg !9357
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !9357

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !9357

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub48 = sub i64 %17, 1, !dbg !9357
  %and49 = and i64 %sub48, 36028797018963968, !dbg !9357
  %tobool50 = icmp ne i64 %and49, 0, !dbg !9357
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !9357

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !9357

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub53 = sub i64 %18, 1, !dbg !9357
  %and54 = and i64 %sub53, 18014398509481984, !dbg !9357
  %tobool55 = icmp ne i64 %and54, 0, !dbg !9357
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !9357

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !9357

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub58 = sub i64 %19, 1, !dbg !9357
  %and59 = and i64 %sub58, 9007199254740992, !dbg !9357
  %tobool60 = icmp ne i64 %and59, 0, !dbg !9357
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !9357

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !9357

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub63 = sub i64 %20, 1, !dbg !9357
  %and64 = and i64 %sub63, 4503599627370496, !dbg !9357
  %tobool65 = icmp ne i64 %and64, 0, !dbg !9357
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !9357

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !9357

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub68 = sub i64 %21, 1, !dbg !9357
  %and69 = and i64 %sub68, 2251799813685248, !dbg !9357
  %tobool70 = icmp ne i64 %and69, 0, !dbg !9357
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !9357

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !9357

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub73 = sub i64 %22, 1, !dbg !9357
  %and74 = and i64 %sub73, 1125899906842624, !dbg !9357
  %tobool75 = icmp ne i64 %and74, 0, !dbg !9357
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !9357

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !9357

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub78 = sub i64 %23, 1, !dbg !9357
  %and79 = and i64 %sub78, 562949953421312, !dbg !9357
  %tobool80 = icmp ne i64 %and79, 0, !dbg !9357
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !9357

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !9357

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub83 = sub i64 %24, 1, !dbg !9357
  %and84 = and i64 %sub83, 281474976710656, !dbg !9357
  %tobool85 = icmp ne i64 %and84, 0, !dbg !9357
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !9357

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !9357

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub88 = sub i64 %25, 1, !dbg !9357
  %and89 = and i64 %sub88, 140737488355328, !dbg !9357
  %tobool90 = icmp ne i64 %and89, 0, !dbg !9357
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !9357

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !9357

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub93 = sub i64 %26, 1, !dbg !9357
  %and94 = and i64 %sub93, 70368744177664, !dbg !9357
  %tobool95 = icmp ne i64 %and94, 0, !dbg !9357
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !9357

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !9357

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub98 = sub i64 %27, 1, !dbg !9357
  %and99 = and i64 %sub98, 35184372088832, !dbg !9357
  %tobool100 = icmp ne i64 %and99, 0, !dbg !9357
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !9357

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !9357

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub103 = sub i64 %28, 1, !dbg !9357
  %and104 = and i64 %sub103, 17592186044416, !dbg !9357
  %tobool105 = icmp ne i64 %and104, 0, !dbg !9357
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !9357

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !9357

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub108 = sub i64 %29, 1, !dbg !9357
  %and109 = and i64 %sub108, 8796093022208, !dbg !9357
  %tobool110 = icmp ne i64 %and109, 0, !dbg !9357
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !9357

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !9357

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub113 = sub i64 %30, 1, !dbg !9357
  %and114 = and i64 %sub113, 4398046511104, !dbg !9357
  %tobool115 = icmp ne i64 %and114, 0, !dbg !9357
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !9357

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !9357

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub118 = sub i64 %31, 1, !dbg !9357
  %and119 = and i64 %sub118, 2199023255552, !dbg !9357
  %tobool120 = icmp ne i64 %and119, 0, !dbg !9357
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !9357

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !9357

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub123 = sub i64 %32, 1, !dbg !9357
  %and124 = and i64 %sub123, 1099511627776, !dbg !9357
  %tobool125 = icmp ne i64 %and124, 0, !dbg !9357
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !9357

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !9357

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub128 = sub i64 %33, 1, !dbg !9357
  %and129 = and i64 %sub128, 549755813888, !dbg !9357
  %tobool130 = icmp ne i64 %and129, 0, !dbg !9357
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !9357

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !9357

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub133 = sub i64 %34, 1, !dbg !9357
  %and134 = and i64 %sub133, 274877906944, !dbg !9357
  %tobool135 = icmp ne i64 %and134, 0, !dbg !9357
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !9357

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !9357

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub138 = sub i64 %35, 1, !dbg !9357
  %and139 = and i64 %sub138, 137438953472, !dbg !9357
  %tobool140 = icmp ne i64 %and139, 0, !dbg !9357
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !9357

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !9357

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub143 = sub i64 %36, 1, !dbg !9357
  %and144 = and i64 %sub143, 68719476736, !dbg !9357
  %tobool145 = icmp ne i64 %and144, 0, !dbg !9357
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !9357

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !9357

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub148 = sub i64 %37, 1, !dbg !9357
  %and149 = and i64 %sub148, 34359738368, !dbg !9357
  %tobool150 = icmp ne i64 %and149, 0, !dbg !9357
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !9357

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !9357

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub153 = sub i64 %38, 1, !dbg !9357
  %and154 = and i64 %sub153, 17179869184, !dbg !9357
  %tobool155 = icmp ne i64 %and154, 0, !dbg !9357
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !9357

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !9357

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub158 = sub i64 %39, 1, !dbg !9357
  %and159 = and i64 %sub158, 8589934592, !dbg !9357
  %tobool160 = icmp ne i64 %and159, 0, !dbg !9357
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !9357

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !9357

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub163 = sub i64 %40, 1, !dbg !9357
  %and164 = and i64 %sub163, 4294967296, !dbg !9357
  %tobool165 = icmp ne i64 %and164, 0, !dbg !9357
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !9357

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !9357

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub168 = sub i64 %41, 1, !dbg !9357
  %and169 = and i64 %sub168, 2147483648, !dbg !9357
  %tobool170 = icmp ne i64 %and169, 0, !dbg !9357
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !9357

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !9357

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub173 = sub i64 %42, 1, !dbg !9357
  %and174 = and i64 %sub173, 1073741824, !dbg !9357
  %tobool175 = icmp ne i64 %and174, 0, !dbg !9357
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !9357

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !9357

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub178 = sub i64 %43, 1, !dbg !9357
  %and179 = and i64 %sub178, 536870912, !dbg !9357
  %tobool180 = icmp ne i64 %and179, 0, !dbg !9357
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !9357

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !9357

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub183 = sub i64 %44, 1, !dbg !9357
  %and184 = and i64 %sub183, 268435456, !dbg !9357
  %tobool185 = icmp ne i64 %and184, 0, !dbg !9357
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !9357

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !9357

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub188 = sub i64 %45, 1, !dbg !9357
  %and189 = and i64 %sub188, 134217728, !dbg !9357
  %tobool190 = icmp ne i64 %and189, 0, !dbg !9357
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !9357

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !9357

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub193 = sub i64 %46, 1, !dbg !9357
  %and194 = and i64 %sub193, 67108864, !dbg !9357
  %tobool195 = icmp ne i64 %and194, 0, !dbg !9357
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !9357

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !9357

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub198 = sub i64 %47, 1, !dbg !9357
  %and199 = and i64 %sub198, 33554432, !dbg !9357
  %tobool200 = icmp ne i64 %and199, 0, !dbg !9357
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !9357

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !9357

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub203 = sub i64 %48, 1, !dbg !9357
  %and204 = and i64 %sub203, 16777216, !dbg !9357
  %tobool205 = icmp ne i64 %and204, 0, !dbg !9357
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !9357

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !9357

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub208 = sub i64 %49, 1, !dbg !9357
  %and209 = and i64 %sub208, 8388608, !dbg !9357
  %tobool210 = icmp ne i64 %and209, 0, !dbg !9357
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !9357

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !9357

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub213 = sub i64 %50, 1, !dbg !9357
  %and214 = and i64 %sub213, 4194304, !dbg !9357
  %tobool215 = icmp ne i64 %and214, 0, !dbg !9357
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !9357

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !9357

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub218 = sub i64 %51, 1, !dbg !9357
  %and219 = and i64 %sub218, 2097152, !dbg !9357
  %tobool220 = icmp ne i64 %and219, 0, !dbg !9357
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !9357

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !9357

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub223 = sub i64 %52, 1, !dbg !9357
  %and224 = and i64 %sub223, 1048576, !dbg !9357
  %tobool225 = icmp ne i64 %and224, 0, !dbg !9357
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !9357

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !9357

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub228 = sub i64 %53, 1, !dbg !9357
  %and229 = and i64 %sub228, 524288, !dbg !9357
  %tobool230 = icmp ne i64 %and229, 0, !dbg !9357
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !9357

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !9357

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub233 = sub i64 %54, 1, !dbg !9357
  %and234 = and i64 %sub233, 262144, !dbg !9357
  %tobool235 = icmp ne i64 %and234, 0, !dbg !9357
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !9357

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !9357

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub238 = sub i64 %55, 1, !dbg !9357
  %and239 = and i64 %sub238, 131072, !dbg !9357
  %tobool240 = icmp ne i64 %and239, 0, !dbg !9357
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !9357

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !9357

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub243 = sub i64 %56, 1, !dbg !9357
  %and244 = and i64 %sub243, 65536, !dbg !9357
  %tobool245 = icmp ne i64 %and244, 0, !dbg !9357
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !9357

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !9357

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub248 = sub i64 %57, 1, !dbg !9357
  %and249 = and i64 %sub248, 32768, !dbg !9357
  %tobool250 = icmp ne i64 %and249, 0, !dbg !9357
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !9357

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !9357

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub253 = sub i64 %58, 1, !dbg !9357
  %and254 = and i64 %sub253, 16384, !dbg !9357
  %tobool255 = icmp ne i64 %and254, 0, !dbg !9357
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !9357

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !9357

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub258 = sub i64 %59, 1, !dbg !9357
  %and259 = and i64 %sub258, 8192, !dbg !9357
  %tobool260 = icmp ne i64 %and259, 0, !dbg !9357
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !9357

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !9357

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub263 = sub i64 %60, 1, !dbg !9357
  %and264 = and i64 %sub263, 4096, !dbg !9357
  %tobool265 = icmp ne i64 %and264, 0, !dbg !9357
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !9357

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !9357

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub268 = sub i64 %61, 1, !dbg !9357
  %and269 = and i64 %sub268, 2048, !dbg !9357
  %tobool270 = icmp ne i64 %and269, 0, !dbg !9357
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !9357

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !9357

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub273 = sub i64 %62, 1, !dbg !9357
  %and274 = and i64 %sub273, 1024, !dbg !9357
  %tobool275 = icmp ne i64 %and274, 0, !dbg !9357
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !9357

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !9357

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub278 = sub i64 %63, 1, !dbg !9357
  %and279 = and i64 %sub278, 512, !dbg !9357
  %tobool280 = icmp ne i64 %and279, 0, !dbg !9357
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !9357

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !9357

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub283 = sub i64 %64, 1, !dbg !9357
  %and284 = and i64 %sub283, 256, !dbg !9357
  %tobool285 = icmp ne i64 %and284, 0, !dbg !9357
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !9357

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !9357

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub288 = sub i64 %65, 1, !dbg !9357
  %and289 = and i64 %sub288, 128, !dbg !9357
  %tobool290 = icmp ne i64 %and289, 0, !dbg !9357
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !9357

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !9357

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub293 = sub i64 %66, 1, !dbg !9357
  %and294 = and i64 %sub293, 64, !dbg !9357
  %tobool295 = icmp ne i64 %and294, 0, !dbg !9357
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !9357

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !9357

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub298 = sub i64 %67, 1, !dbg !9357
  %and299 = and i64 %sub298, 32, !dbg !9357
  %tobool300 = icmp ne i64 %and299, 0, !dbg !9357
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !9357

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !9357

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub303 = sub i64 %68, 1, !dbg !9357
  %and304 = and i64 %sub303, 16, !dbg !9357
  %tobool305 = icmp ne i64 %and304, 0, !dbg !9357
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !9357

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !9357

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub308 = sub i64 %69, 1, !dbg !9357
  %and309 = and i64 %sub308, 8, !dbg !9357
  %tobool310 = icmp ne i64 %and309, 0, !dbg !9357
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !9357

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !9357

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub313 = sub i64 %70, 1, !dbg !9357
  %and314 = and i64 %sub313, 4, !dbg !9357
  %tobool315 = icmp ne i64 %and314, 0, !dbg !9357
  %71 = zext i1 %tobool315 to i64, !dbg !9357
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !9357
  br label %cond.end, !dbg !9357

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !9357
  br label %cond.end317, !dbg !9357

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !9357
  br label %cond.end319, !dbg !9357

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !9357
  br label %cond.end321, !dbg !9357

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !9357
  br label %cond.end323, !dbg !9357

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !9357
  br label %cond.end325, !dbg !9357

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !9357
  br label %cond.end327, !dbg !9357

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !9357
  br label %cond.end329, !dbg !9357

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !9357
  br label %cond.end331, !dbg !9357

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !9357
  br label %cond.end333, !dbg !9357

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !9357
  br label %cond.end335, !dbg !9357

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !9357
  br label %cond.end337, !dbg !9357

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !9357
  br label %cond.end339, !dbg !9357

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !9357
  br label %cond.end341, !dbg !9357

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !9357
  br label %cond.end343, !dbg !9357

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !9357
  br label %cond.end345, !dbg !9357

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !9357
  br label %cond.end347, !dbg !9357

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !9357
  br label %cond.end349, !dbg !9357

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !9357
  br label %cond.end351, !dbg !9357

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !9357
  br label %cond.end353, !dbg !9357

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !9357
  br label %cond.end355, !dbg !9357

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !9357
  br label %cond.end357, !dbg !9357

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !9357
  br label %cond.end359, !dbg !9357

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !9357
  br label %cond.end361, !dbg !9357

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !9357
  br label %cond.end363, !dbg !9357

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !9357
  br label %cond.end365, !dbg !9357

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !9357
  br label %cond.end367, !dbg !9357

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !9357
  br label %cond.end369, !dbg !9357

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !9357
  br label %cond.end371, !dbg !9357

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !9357
  br label %cond.end373, !dbg !9357

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !9357
  br label %cond.end375, !dbg !9357

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !9357
  br label %cond.end377, !dbg !9357

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !9357
  br label %cond.end379, !dbg !9357

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !9357
  br label %cond.end381, !dbg !9357

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !9357
  br label %cond.end383, !dbg !9357

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !9357
  br label %cond.end385, !dbg !9357

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !9357
  br label %cond.end387, !dbg !9357

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !9357
  br label %cond.end389, !dbg !9357

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !9357
  br label %cond.end391, !dbg !9357

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !9357
  br label %cond.end393, !dbg !9357

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !9357
  br label %cond.end395, !dbg !9357

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !9357
  br label %cond.end397, !dbg !9357

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !9357
  br label %cond.end399, !dbg !9357

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !9357
  br label %cond.end401, !dbg !9357

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !9357
  br label %cond.end403, !dbg !9357

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !9357
  br label %cond.end405, !dbg !9357

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !9357
  br label %cond.end407, !dbg !9357

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !9357
  br label %cond.end409, !dbg !9357

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !9357
  br label %cond.end411, !dbg !9357

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !9357
  br label %cond.end413, !dbg !9357

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !9357
  br label %cond.end415, !dbg !9357

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !9357
  br label %cond.end417, !dbg !9357

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !9357
  br label %cond.end419, !dbg !9357

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !9357
  br label %cond.end421, !dbg !9357

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !9357
  br label %cond.end423, !dbg !9357

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !9357
  br label %cond.end425, !dbg !9357

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !9357
  br label %cond.end427, !dbg !9357

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !9357
  br label %cond.end429, !dbg !9357

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !9357
  br label %cond.end431, !dbg !9357

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !9357
  br label %cond.end433, !dbg !9357

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !9357
  br label %cond.end435, !dbg !9357

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !9357
  br label %cond.end437, !dbg !9357

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !9357
  br label %cond.end440, !dbg !9357

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !9357

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !9357
  br label %cond.end444, !dbg !9357

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !9357
  %sub443 = sub i64 %72, 1, !dbg !9357
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !9357
  br label %cond.end444, !dbg !9357

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !9357
  %sub446 = sub i32 %cond445, 12, !dbg !9358
  %add = add i32 %sub446, 1, !dbg !9359
  store i32 %add, i32* %retval, align 4, !dbg !9360
  br label %return, !dbg !9360

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !9361
  %dec = add i64 %73, -1, !dbg !9361
  store i64 %dec, i64* %size.addr, align 8, !dbg !9361
  %74 = load i64, i64* %size.addr, align 8, !dbg !9362
  %shr = lshr i64 %74, 12, !dbg !9362
  store i64 %shr, i64* %size.addr, align 8, !dbg !9362
  %75 = load i64, i64* %size.addr, align 8, !dbg !9363
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9340
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !9364
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !9365
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #5, !dbg !9364, !srcloc !9366
  store i32 %78, i32* %bitpos.i, align 4, !dbg !9364
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !9367
  %add.i = add i32 %79, 1, !dbg !9368
  store i32 %add.i, i32* %retval, align 4, !dbg !9369
  br label %return, !dbg !9369

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !9370
  ret i32 %80, !dbg !9370
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #9 !dbg !9371 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9332, metadata !DIExpression()), !dbg !9375
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9339, metadata !DIExpression()), !dbg !9377
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9378, metadata !DIExpression()), !dbg !9379
  %0 = load i64, i64* %n.addr, align 8, !dbg !9380
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9377
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !9381
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !9382
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #5, !dbg !9381, !srcloc !9366
  store i32 %3, i32* %bitpos.i, align 4, !dbg !9381
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !9383
  %add.i = add i32 %4, 1, !dbg !9384
  %sub = sub i32 %add.i, 1, !dbg !9385
  ret i32 %sub, !dbg !9386
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !9387 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !9391, metadata !DIExpression()), !dbg !9392
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !9393, metadata !DIExpression()), !dbg !9394
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9395, metadata !DIExpression()), !dbg !9396
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9397, metadata !DIExpression()), !dbg !9398
  %0 = load i8*, i8** %object.addr, align 8, !dbg !9399
  ret i8* %0, !dbg !9400
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @adapter_remove_and_free_device(%struct.AdapterCtlBlk* %acb, %struct.DeviceCtlBlk* %dcb) #2 !dbg !9401 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !9402, metadata !DIExpression()), !dbg !9403
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !9404, metadata !DIExpression()), !dbg !9405
  %0 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9406
  %srb_going_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %0, i32 0, i32 2, !dbg !9408
  %call = call i32 @list_size(%struct.list_head* %srb_going_list) #11, !dbg !9409
  %cmp = icmp ugt i32 %call, 1, !dbg !9410
  br i1 %cmp, label %if.then, label %if.end, !dbg !9411

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9412

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !9414

do.end:                                           ; preds = %do.body
  br label %return, !dbg !9416

if.end:                                           ; preds = %entry
  %1 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9417
  %2 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9418
  call void @adapter_remove_device(%struct.AdapterCtlBlk* %1, %struct.DeviceCtlBlk* %2) #11, !dbg !9419
  %3 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9420
  %4 = bitcast %struct.DeviceCtlBlk* %3 to i8*, !dbg !9420
  call void @kfree(i8* %4) #11, !dbg !9421
  br label %return, !dbg !9422

return:                                           ; preds = %if.end, %do.end
  ret void, !dbg !9422
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @adapter_remove_device(%struct.AdapterCtlBlk* %acb, %struct.DeviceCtlBlk* %dcb) #2 !dbg !9423 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  %i = alloca %struct.DeviceCtlBlk*, align 8
  %tmp = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr = alloca i8*, align 8
  %tmp9 = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp14 = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr23 = alloca i8*, align 8
  %tmp28 = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !9424, metadata !DIExpression()), !dbg !9425
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !9426, metadata !DIExpression()), !dbg !9427
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %i, metadata !9428, metadata !DIExpression()), !dbg !9429
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %tmp, metadata !9430, metadata !DIExpression()), !dbg !9431
  br label %do.body, !dbg !9432

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9433

do.end:                                           ; preds = %do.body
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9435
  %active_dcb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 5, !dbg !9437
  %1 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %active_dcb, align 8, !dbg !9437
  %2 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9438
  %cmp = icmp eq %struct.DeviceCtlBlk* %1, %2, !dbg !9439
  br i1 %cmp, label %if.then, label %if.end, !dbg !9440

if.then:                                          ; preds = %do.end
  %3 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9441
  %active_dcb1 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %3, i32 0, i32 5, !dbg !9442
  store %struct.DeviceCtlBlk* null, %struct.DeviceCtlBlk** %active_dcb1, align 8, !dbg !9443
  br label %if.end, !dbg !9441

if.end:                                           ; preds = %if.then, %do.end
  %4 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9444
  %dcb_run_robin = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %4, i32 0, i32 4, !dbg !9446
  %5 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb_run_robin, align 8, !dbg !9446
  %6 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9447
  %cmp2 = icmp eq %struct.DeviceCtlBlk* %5, %6, !dbg !9448
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !9449

if.then3:                                         ; preds = %if.end
  %7 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9450
  %dcb_list = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %7, i32 0, i32 3, !dbg !9451
  %8 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9452
  %call = call %struct.DeviceCtlBlk* @dcb_get_next(%struct.list_head* %dcb_list, %struct.DeviceCtlBlk* %8) #11, !dbg !9453
  %9 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9454
  %dcb_run_robin4 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %9, i32 0, i32 4, !dbg !9455
  store %struct.DeviceCtlBlk* %call, %struct.DeviceCtlBlk** %dcb_run_robin4, align 8, !dbg !9456
  br label %if.end5, !dbg !9454

if.end5:                                          ; preds = %if.then3, %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9457, metadata !DIExpression()), !dbg !9460
  %10 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9460
  %dcb_list6 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %10, i32 0, i32 3, !dbg !9460
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %dcb_list6, i32 0, i32 0, !dbg !9460
  %11 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9460
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !9460
  store i8* %12, i8** %__mptr, align 8, !dbg !9460
  br label %do.body7, !dbg !9460

do.body7:                                         ; preds = %if.end5
  br label %do.end8, !dbg !9461

do.end8:                                          ; preds = %do.body7
  %13 = load i8*, i8** %__mptr, align 8, !dbg !9460
  %add.ptr = getelementptr i8, i8* %13, i64 0, !dbg !9460
  %14 = bitcast i8* %add.ptr to %struct.DeviceCtlBlk*, !dbg !9460
  store %struct.DeviceCtlBlk* %14, %struct.DeviceCtlBlk** %tmp9, align 8, !dbg !9461
  %15 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp9, align 8, !dbg !9460
  store %struct.DeviceCtlBlk* %15, %struct.DeviceCtlBlk** %i, align 8, !dbg !9463
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !9464, metadata !DIExpression()), !dbg !9466
  %16 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !9466
  %list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %16, i32 0, i32 0, !dbg !9466
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !9466
  %17 = load %struct.list_head*, %struct.list_head** %next11, align 8, !dbg !9466
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !9466
  store i8* %18, i8** %__mptr10, align 8, !dbg !9466
  br label %do.body12, !dbg !9466

do.body12:                                        ; preds = %do.end8
  br label %do.end13, !dbg !9467

do.end13:                                         ; preds = %do.body12
  %19 = load i8*, i8** %__mptr10, align 8, !dbg !9466
  %add.ptr15 = getelementptr i8, i8* %19, i64 0, !dbg !9466
  %20 = bitcast i8* %add.ptr15 to %struct.DeviceCtlBlk*, !dbg !9466
  store %struct.DeviceCtlBlk* %20, %struct.DeviceCtlBlk** %tmp14, align 8, !dbg !9467
  %21 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp14, align 8, !dbg !9466
  store %struct.DeviceCtlBlk* %21, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !9463
  br label %for.cond, !dbg !9463

for.cond:                                         ; preds = %do.end27, %do.end13
  %22 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !9469
  %list16 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %22, i32 0, i32 0, !dbg !9469
  %23 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9469
  %dcb_list17 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %23, i32 0, i32 3, !dbg !9469
  %cmp18 = icmp eq %struct.list_head* %list16, %dcb_list17, !dbg !9469
  %lnot = xor i1 %cmp18, true, !dbg !9469
  br i1 %lnot, label %for.body, label %for.end, !dbg !9463

for.body:                                         ; preds = %for.cond
  %24 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9471
  %25 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !9473
  %cmp19 = icmp eq %struct.DeviceCtlBlk* %24, %25, !dbg !9474
  br i1 %cmp19, label %if.then20, label %if.end22, !dbg !9475

if.then20:                                        ; preds = %for.body
  %26 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !9476
  %list21 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %26, i32 0, i32 0, !dbg !9478
  call void @list_del(%struct.list_head* %list21) #11, !dbg !9479
  br label %for.end, !dbg !9480

if.end22:                                         ; preds = %for.body
  br label %for.inc, !dbg !9473

for.inc:                                          ; preds = %if.end22
  %27 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !9469
  store %struct.DeviceCtlBlk* %27, %struct.DeviceCtlBlk** %i, align 8, !dbg !9469
  call void @llvm.dbg.declare(metadata i8** %__mptr23, metadata !9481, metadata !DIExpression()), !dbg !9483
  %28 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !9483
  %list24 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %28, i32 0, i32 0, !dbg !9483
  %next25 = getelementptr inbounds %struct.list_head, %struct.list_head* %list24, i32 0, i32 0, !dbg !9483
  %29 = load %struct.list_head*, %struct.list_head** %next25, align 8, !dbg !9483
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !9483
  store i8* %30, i8** %__mptr23, align 8, !dbg !9483
  br label %do.body26, !dbg !9483

do.body26:                                        ; preds = %for.inc
  br label %do.end27, !dbg !9484

do.end27:                                         ; preds = %do.body26
  %31 = load i8*, i8** %__mptr23, align 8, !dbg !9483
  %add.ptr29 = getelementptr i8, i8* %31, i64 0, !dbg !9483
  %32 = bitcast i8* %add.ptr29 to %struct.DeviceCtlBlk*, !dbg !9483
  store %struct.DeviceCtlBlk* %32, %struct.DeviceCtlBlk** %tmp28, align 8, !dbg !9484
  %33 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp28, align 8, !dbg !9483
  store %struct.DeviceCtlBlk* %33, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !9469
  br label %for.cond, !dbg !9469, !llvm.loop !9486

for.end:                                          ; preds = %if.then20, %for.cond
  %34 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9488
  %target_lun = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %34, i32 0, i32 8, !dbg !9489
  %35 = load i8, i8* %target_lun, align 1, !dbg !9489
  %conv = zext i8 %35 to i32, !dbg !9488
  %shl = shl i32 1, %conv, !dbg !9490
  %neg = xor i32 %shl, -1, !dbg !9491
  %36 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9492
  %dcb_map = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %36, i32 0, i32 21, !dbg !9493
  %37 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9494
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %37, i32 0, i32 7, !dbg !9495
  %38 = load i8, i8* %target_id, align 2, !dbg !9495
  %idxprom = zext i8 %38 to i64, !dbg !9492
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %dcb_map, i64 0, i64 %idxprom, !dbg !9492
  %39 = load i8, i8* %arrayidx, align 1, !dbg !9496
  %conv30 = zext i8 %39 to i32, !dbg !9496
  %and = and i32 %conv30, %neg, !dbg !9496
  %conv31 = trunc i32 %and to i8, !dbg !9496
  store i8 %conv31, i8* %arrayidx, align 1, !dbg !9496
  %40 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9497
  %children = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %40, i32 0, i32 22, !dbg !9498
  %41 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9499
  %target_id32 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %41, i32 0, i32 7, !dbg !9500
  %42 = load i8, i8* %target_id32, align 2, !dbg !9500
  %idxprom33 = zext i8 %42 to i64, !dbg !9497
  %arrayidx34 = getelementptr [16 x [32 x %struct.DeviceCtlBlk*]], [16 x [32 x %struct.DeviceCtlBlk*]]* %children, i64 0, i64 %idxprom33, !dbg !9497
  %43 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9501
  %target_lun35 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %43, i32 0, i32 8, !dbg !9502
  %44 = load i8, i8* %target_lun35, align 1, !dbg !9502
  %idxprom36 = zext i8 %44 to i64, !dbg !9497
  %arrayidx37 = getelementptr [32 x %struct.DeviceCtlBlk*], [32 x %struct.DeviceCtlBlk*]* %arrayidx34, i64 0, i64 %idxprom36, !dbg !9497
  store %struct.DeviceCtlBlk* null, %struct.DeviceCtlBlk** %arrayidx37, align 8, !dbg !9503
  %45 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !9504
  %acb38 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %45, i32 0, i32 1, !dbg !9505
  store %struct.AdapterCtlBlk* null, %struct.AdapterCtlBlk** %acb38, align 8, !dbg !9506
  ret void, !dbg !9507
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: noredzone
declare dso_local void @seq_puts(%struct.seq_file*, i8*) #1

; Function Attrs: noredzone
declare dso_local void @seq_printf(%struct.seq_file*, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local void @seq_putc(%struct.seq_file*, i8 signext) #1

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #2 !dbg !9508 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9516, metadata !DIExpression()), !dbg !9517
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !9518, metadata !DIExpression()), !dbg !9519
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !9520, metadata !DIExpression()), !dbg !9521
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9522, metadata !DIExpression()), !dbg !9523
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !9524, metadata !DIExpression()), !dbg !9525
  %0 = load i32, i32* %irq.addr, align 4, !dbg !9526
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !9527
  %2 = load i64, i64* %flags.addr, align 8, !dbg !9528
  %3 = load i8*, i8** %name.addr, align 8, !dbg !9529
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !9530
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #11, !dbg !9531
  ret i32 %call, !dbg !9532
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dc395x_interrupt(i32 %irq, i8* %dev_id) #2 !dbg !9533 {
entry:
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %acb = alloca %struct.AdapterCtlBlk*, align 8
  %scsi_status = alloca i16, align 2
  %dma_status = alloca i8, align 1
  %handled = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9534, metadata !DIExpression()), !dbg !9535
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !9536, metadata !DIExpression()), !dbg !9537
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb, metadata !9538, metadata !DIExpression()), !dbg !9539
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !9540
  %1 = bitcast i8* %0 to %struct.AdapterCtlBlk*, !dbg !9540
  store %struct.AdapterCtlBlk* %1, %struct.AdapterCtlBlk** %acb, align 8, !dbg !9539
  call void @llvm.dbg.declare(metadata i16* %scsi_status, metadata !9541, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.declare(metadata i8* %dma_status, metadata !9543, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.declare(metadata i32* %handled, metadata !9545, metadata !DIExpression()), !dbg !9546
  store i32 0, i32* %handled, align 4, !dbg !9546
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !9547
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 1, !dbg !9547
  %3 = load i64, i64* %io_port_base, align 8, !dbg !9547
  %add = add i64 %3, 128, !dbg !9547
  %conv = trunc i64 %add to i32, !dbg !9547
  %call = call zeroext i16 @inw(i32 %conv) #11, !dbg !9547
  store i16 %call, i16* %scsi_status, align 2, !dbg !9548
  %4 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !9549
  %io_port_base1 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %4, i32 0, i32 1, !dbg !9549
  %5 = load i64, i64* %io_port_base1, align 8, !dbg !9549
  %add2 = add i64 %5, 163, !dbg !9549
  %conv3 = trunc i64 %add2 to i32, !dbg !9549
  %call4 = call zeroext i8 @inb(i32 %conv3) #11, !dbg !9549
  store i8 %call4, i8* %dma_status, align 1, !dbg !9550
  %6 = load i16, i16* %scsi_status, align 2, !dbg !9551
  %conv5 = zext i16 %6 to i32, !dbg !9551
  %and = and i32 %conv5, 128, !dbg !9553
  %tobool = icmp ne i32 %and, 0, !dbg !9553
  br i1 %tobool, label %if.then, label %if.else, !dbg !9554

if.then:                                          ; preds = %entry
  %7 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !9555
  %8 = load i16, i16* %scsi_status, align 2, !dbg !9557
  call void @dc395x_handle_interrupt(%struct.AdapterCtlBlk* %7, i16 zeroext %8) #11, !dbg !9558
  store i32 1, i32* %handled, align 4, !dbg !9559
  br label %if.end13, !dbg !9560

if.else:                                          ; preds = %entry
  %9 = load i8, i8* %dma_status, align 1, !dbg !9561
  %conv6 = zext i8 %9 to i32, !dbg !9561
  %and7 = and i32 %conv6, 32, !dbg !9563
  %tobool8 = icmp ne i32 %and7, 0, !dbg !9563
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !9564

if.then9:                                         ; preds = %if.else
  %10 = load i8, i8* %dma_status, align 1, !dbg !9565
  %conv10 = zext i8 %10 to i32, !dbg !9565
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.66, i64 0, i64 0), i32 %conv10) #12, !dbg !9565
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.67, i64 0, i64 0)) #12, !dbg !9567
  store %struct.AdapterCtlBlk* null, %struct.AdapterCtlBlk** %acb, align 8, !dbg !9568
  store i32 1, i32* %handled, align 4, !dbg !9569
  br label %if.end, !dbg !9570

if.end:                                           ; preds = %if.then9, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  %11 = load i32, i32* %handled, align 4, !dbg !9571
  ret i32 %11, !dbg !9572
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_eeprom(%struct.NvRamType* %eeprom, i64 %io_port) #2 !dbg !9573 {
entry:
  %eeprom.addr = alloca %struct.NvRamType*, align 8
  %io_port.addr = alloca i64, align 8
  %w_eeprom = alloca i16*, align 8
  %w_addr = alloca i16, align 2
  %cksum = alloca i16, align 2
  %d_addr = alloca i32, align 4
  %d_eeprom = alloca i32*, align 8
  store %struct.NvRamType* %eeprom, %struct.NvRamType** %eeprom.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NvRamType** %eeprom.addr, metadata !9576, metadata !DIExpression()), !dbg !9577
  store i64 %io_port, i64* %io_port.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %io_port.addr, metadata !9578, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.declare(metadata i16** %w_eeprom, metadata !9580, metadata !DIExpression()), !dbg !9581
  %0 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9582
  %1 = bitcast %struct.NvRamType* %0 to i16*, !dbg !9583
  store i16* %1, i16** %w_eeprom, align 8, !dbg !9581
  call void @llvm.dbg.declare(metadata i16* %w_addr, metadata !9584, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.declare(metadata i16* %cksum, metadata !9586, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.declare(metadata i32* %d_addr, metadata !9588, metadata !DIExpression()), !dbg !9589
  call void @llvm.dbg.declare(metadata i32** %d_eeprom, metadata !9590, metadata !DIExpression()), !dbg !9591
  %2 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9592
  %3 = load i64, i64* %io_port.addr, align 8, !dbg !9593
  call void @trms1040_read_all(%struct.NvRamType* %2, i64 %3) #11, !dbg !9594
  store i16 0, i16* %cksum, align 2, !dbg !9595
  store i16 0, i16* %w_addr, align 2, !dbg !9596
  %4 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9598
  %5 = bitcast %struct.NvRamType* %4 to i16*, !dbg !9599
  store i16* %5, i16** %w_eeprom, align 8, !dbg !9600
  br label %for.cond, !dbg !9601

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i16, i16* %w_addr, align 2, !dbg !9602
  %conv = zext i16 %6 to i32, !dbg !9602
  %cmp = icmp slt i32 %conv, 64, !dbg !9604
  br i1 %cmp, label %for.body, label %for.end, !dbg !9605

for.body:                                         ; preds = %for.cond
  %7 = load i16*, i16** %w_eeprom, align 8, !dbg !9606
  %8 = load i16, i16* %7, align 2, !dbg !9607
  %conv2 = zext i16 %8 to i32, !dbg !9607
  %9 = load i16, i16* %cksum, align 2, !dbg !9608
  %conv3 = zext i16 %9 to i32, !dbg !9608
  %add = add i32 %conv3, %conv2, !dbg !9608
  %conv4 = trunc i32 %add to i16, !dbg !9608
  store i16 %conv4, i16* %cksum, align 2, !dbg !9608
  br label %for.inc, !dbg !9609

for.inc:                                          ; preds = %for.body
  %10 = load i16, i16* %w_addr, align 2, !dbg !9610
  %inc = add i16 %10, 1, !dbg !9610
  store i16 %inc, i16* %w_addr, align 2, !dbg !9610
  %11 = load i16*, i16** %w_eeprom, align 8, !dbg !9611
  %incdec.ptr = getelementptr i16, i16* %11, i32 1, !dbg !9611
  store i16* %incdec.ptr, i16** %w_eeprom, align 8, !dbg !9611
  br label %for.cond, !dbg !9612, !llvm.loop !9613

for.end:                                          ; preds = %for.cond
  %12 = load i16, i16* %cksum, align 2, !dbg !9615
  %conv5 = zext i16 %12 to i32, !dbg !9615
  %cmp6 = icmp ne i32 %conv5, 4660, !dbg !9617
  br i1 %cmp6, label %if.then, label %if.else, !dbg !9618

if.then:                                          ; preds = %for.end
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.117, i64 0, i64 0)) #12, !dbg !9619
  %13 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9621
  %sub_vendor_id = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %13, i32 0, i32 0, !dbg !9622
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %sub_vendor_id, i64 0, i64 0, !dbg !9621
  store i8 -31, i8* %arrayidx, align 2, !dbg !9623
  %14 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9624
  %sub_vendor_id8 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %14, i32 0, i32 0, !dbg !9625
  %arrayidx9 = getelementptr [2 x i8], [2 x i8]* %sub_vendor_id8, i64 0, i64 1, !dbg !9624
  store i8 29, i8* %arrayidx9, align 1, !dbg !9626
  %15 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9627
  %sub_sys_id = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %15, i32 0, i32 1, !dbg !9628
  %arrayidx10 = getelementptr [2 x i8], [2 x i8]* %sub_sys_id, i64 0, i64 0, !dbg !9627
  store i8 -111, i8* %arrayidx10, align 2, !dbg !9629
  %16 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9630
  %sub_sys_id11 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %16, i32 0, i32 1, !dbg !9631
  %arrayidx12 = getelementptr [2 x i8], [2 x i8]* %sub_sys_id11, i64 0, i64 1, !dbg !9630
  store i8 3, i8* %arrayidx12, align 1, !dbg !9632
  %17 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9633
  %sub_class = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %17, i32 0, i32 2, !dbg !9634
  store i8 0, i8* %sub_class, align 2, !dbg !9635
  %18 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9636
  %vendor_id = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %18, i32 0, i32 3, !dbg !9637
  %arrayidx13 = getelementptr [2 x i8], [2 x i8]* %vendor_id, i64 0, i64 0, !dbg !9636
  store i8 -31, i8* %arrayidx13, align 1, !dbg !9638
  %19 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9639
  %vendor_id14 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %19, i32 0, i32 3, !dbg !9640
  %arrayidx15 = getelementptr [2 x i8], [2 x i8]* %vendor_id14, i64 0, i64 1, !dbg !9639
  store i8 29, i8* %arrayidx15, align 1, !dbg !9641
  %20 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9642
  %device_id = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %20, i32 0, i32 4, !dbg !9643
  %arrayidx16 = getelementptr [2 x i8], [2 x i8]* %device_id, i64 0, i64 0, !dbg !9642
  store i8 -111, i8* %arrayidx16, align 1, !dbg !9644
  %21 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9645
  %device_id17 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %21, i32 0, i32 4, !dbg !9646
  %arrayidx18 = getelementptr [2 x i8], [2 x i8]* %device_id17, i64 0, i64 1, !dbg !9645
  store i8 3, i8* %arrayidx18, align 1, !dbg !9647
  %22 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9648
  %reserved = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %22, i32 0, i32 5, !dbg !9649
  store i8 0, i8* %reserved, align 1, !dbg !9650
  store i32 0, i32* %d_addr, align 4, !dbg !9651
  %23 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9653
  %target = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %23, i32 0, i32 6, !dbg !9654
  %arraydecay = getelementptr inbounds [16 x %struct.NVRamTarget], [16 x %struct.NVRamTarget]* %target, i64 0, i64 0, !dbg !9653
  %24 = bitcast %struct.NVRamTarget* %arraydecay to i32*, !dbg !9655
  store i32* %24, i32** %d_eeprom, align 8, !dbg !9656
  br label %for.cond19, !dbg !9657

for.cond19:                                       ; preds = %for.inc23, %if.then
  %25 = load i32, i32* %d_addr, align 4, !dbg !9658
  %cmp20 = icmp ult i32 %25, 16, !dbg !9660
  br i1 %cmp20, label %for.body22, label %for.end26, !dbg !9661

for.body22:                                       ; preds = %for.cond19
  %26 = load i32*, i32** %d_eeprom, align 8, !dbg !9662
  store i32 119, i32* %26, align 4, !dbg !9663
  br label %for.inc23, !dbg !9664

for.inc23:                                        ; preds = %for.body22
  %27 = load i32, i32* %d_addr, align 4, !dbg !9665
  %inc24 = add i32 %27, 1, !dbg !9665
  store i32 %inc24, i32* %d_addr, align 4, !dbg !9665
  %28 = load i32*, i32** %d_eeprom, align 8, !dbg !9666
  %incdec.ptr25 = getelementptr i32, i32* %28, i32 1, !dbg !9666
  store i32* %incdec.ptr25, i32** %d_eeprom, align 8, !dbg !9666
  br label %for.cond19, !dbg !9667, !llvm.loop !9668

for.end26:                                        ; preds = %for.cond19
  %29 = load i32*, i32** %d_eeprom, align 8, !dbg !9670
  %incdec.ptr27 = getelementptr i32, i32* %29, i32 1, !dbg !9670
  store i32* %incdec.ptr27, i32** %d_eeprom, align 8, !dbg !9670
  store i32 67112711, i32* %29, align 4, !dbg !9671
  %30 = load i32*, i32** %d_eeprom, align 8, !dbg !9672
  %incdec.ptr28 = getelementptr i32, i32* %30, i32 1, !dbg !9672
  store i32* %incdec.ptr28, i32** %d_eeprom, align 8, !dbg !9672
  store i32 21, i32* %30, align 4, !dbg !9673
  store i32 0, i32* %d_addr, align 4, !dbg !9674
  br label %for.cond29, !dbg !9676

for.cond29:                                       ; preds = %for.inc33, %for.end26
  %31 = load i32, i32* %d_addr, align 4, !dbg !9677
  %cmp30 = icmp ult i32 %31, 12, !dbg !9679
  br i1 %cmp30, label %for.body32, label %for.end36, !dbg !9680

for.body32:                                       ; preds = %for.cond29
  %32 = load i32*, i32** %d_eeprom, align 8, !dbg !9681
  store i32 0, i32* %32, align 4, !dbg !9682
  br label %for.inc33, !dbg !9683

for.inc33:                                        ; preds = %for.body32
  %33 = load i32, i32* %d_addr, align 4, !dbg !9684
  %inc34 = add i32 %33, 1, !dbg !9684
  store i32 %inc34, i32* %d_addr, align 4, !dbg !9684
  %34 = load i32*, i32** %d_eeprom, align 8, !dbg !9685
  %incdec.ptr35 = getelementptr i32, i32* %34, i32 1, !dbg !9685
  store i32* %incdec.ptr35, i32** %d_eeprom, align 8, !dbg !9685
  br label %for.cond29, !dbg !9686, !llvm.loop !9687

for.end36:                                        ; preds = %for.cond29
  call void @set_safe_settings() #11, !dbg !9689
  call void @fix_settings() #11, !dbg !9690
  %35 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9691
  call void @eeprom_override(%struct.NvRamType* %35) #11, !dbg !9692
  %36 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9693
  %cksum37 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %36, i32 0, i32 16, !dbg !9694
  store i16 0, i16* %cksum37, align 2, !dbg !9695
  store i16 0, i16* %w_addr, align 2, !dbg !9696
  store i16 0, i16* %cksum, align 2, !dbg !9698
  %37 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9699
  %38 = bitcast %struct.NvRamType* %37 to i16*, !dbg !9700
  store i16* %38, i16** %w_eeprom, align 8, !dbg !9701
  br label %for.cond38, !dbg !9702

for.cond38:                                       ; preds = %for.inc47, %for.end36
  %39 = load i16, i16* %w_addr, align 2, !dbg !9703
  %conv39 = zext i16 %39 to i32, !dbg !9703
  %cmp40 = icmp slt i32 %conv39, 63, !dbg !9705
  br i1 %cmp40, label %for.body42, label %for.end50, !dbg !9706

for.body42:                                       ; preds = %for.cond38
  %40 = load i16*, i16** %w_eeprom, align 8, !dbg !9707
  %41 = load i16, i16* %40, align 2, !dbg !9708
  %conv43 = zext i16 %41 to i32, !dbg !9708
  %42 = load i16, i16* %cksum, align 2, !dbg !9709
  %conv44 = zext i16 %42 to i32, !dbg !9709
  %add45 = add i32 %conv44, %conv43, !dbg !9709
  %conv46 = trunc i32 %add45 to i16, !dbg !9709
  store i16 %conv46, i16* %cksum, align 2, !dbg !9709
  br label %for.inc47, !dbg !9710

for.inc47:                                        ; preds = %for.body42
  %43 = load i16, i16* %w_addr, align 2, !dbg !9711
  %inc48 = add i16 %43, 1, !dbg !9711
  store i16 %inc48, i16* %w_addr, align 2, !dbg !9711
  %44 = load i16*, i16** %w_eeprom, align 8, !dbg !9712
  %incdec.ptr49 = getelementptr i16, i16* %44, i32 1, !dbg !9712
  store i16* %incdec.ptr49, i16** %w_eeprom, align 8, !dbg !9712
  br label %for.cond38, !dbg !9713, !llvm.loop !9714

for.end50:                                        ; preds = %for.cond38
  %45 = load i16, i16* %cksum, align 2, !dbg !9716
  %conv51 = zext i16 %45 to i32, !dbg !9716
  %sub = sub i32 4660, %conv51, !dbg !9717
  %conv52 = trunc i32 %sub to i16, !dbg !9718
  %46 = load i16*, i16** %w_eeprom, align 8, !dbg !9719
  store i16 %conv52, i16* %46, align 2, !dbg !9720
  %47 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9721
  %48 = load i64, i64* %io_port.addr, align 8, !dbg !9722
  call void @trms1040_write_all(%struct.NvRamType* %47, i64 %48) #11, !dbg !9723
  %49 = load i32, i32* getelementptr inbounds ([6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 5, i32 0), align 4, !dbg !9724
  %conv53 = trunc i32 %49 to i8, !dbg !9725
  %50 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9726
  %delay_time = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %50, i32 0, i32 9, !dbg !9727
  store i8 %conv53, i8* %delay_time, align 2, !dbg !9728
  br label %if.end, !dbg !9729

if.else:                                          ; preds = %for.end
  call void @set_safe_settings() #11, !dbg !9730
  %51 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9732
  call void @eeprom_index_to_delay(%struct.NvRamType* %51) #11, !dbg !9733
  %52 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9734
  call void @eeprom_override(%struct.NvRamType* %52) #11, !dbg !9735
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end50
  ret void, !dbg !9736
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @print_eeprom_settings(%struct.NvRamType* %eeprom) #2 !dbg !9737 {
entry:
  %eeprom.addr = alloca %struct.NvRamType*, align 8
  store %struct.NvRamType* %eeprom, %struct.NvRamType** %eeprom.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NvRamType** %eeprom.addr, metadata !9740, metadata !DIExpression()), !dbg !9741
  %0 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9742
  %scsi_id = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %0, i32 0, i32 7, !dbg !9742
  %1 = load i8, i8* %scsi_id, align 2, !dbg !9742
  %conv = zext i8 %1 to i32, !dbg !9742
  %2 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9742
  %target = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %2, i32 0, i32 6, !dbg !9742
  %arrayidx = getelementptr [16 x %struct.NVRamTarget], [16 x %struct.NVRamTarget]* %target, i64 0, i64 0, !dbg !9742
  %period = getelementptr inbounds %struct.NVRamTarget, %struct.NVRamTarget* %arrayidx, i32 0, i32 1, !dbg !9742
  %3 = load i8, i8* %period, align 1, !dbg !9742
  %conv1 = zext i8 %3 to i32, !dbg !9742
  %4 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9742
  %target2 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %4, i32 0, i32 6, !dbg !9742
  %arrayidx3 = getelementptr [16 x %struct.NVRamTarget], [16 x %struct.NVRamTarget]* %target2, i64 0, i64 0, !dbg !9742
  %period4 = getelementptr inbounds %struct.NVRamTarget, %struct.NVRamTarget* %arrayidx3, i32 0, i32 1, !dbg !9742
  %5 = load i8, i8* %period4, align 1, !dbg !9742
  %idxprom = zext i8 %5 to i64, !dbg !9742
  %arrayidx5 = getelementptr [8 x i16], [8 x i16]* @clock_speed, i64 0, i64 %idxprom, !dbg !9742
  %6 = load i16, i16* %arrayidx5, align 2, !dbg !9742
  %conv6 = zext i16 %6 to i32, !dbg !9742
  %div = sdiv i32 %conv6, 10, !dbg !9742
  %7 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9742
  %target7 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %7, i32 0, i32 6, !dbg !9742
  %arrayidx8 = getelementptr [16 x %struct.NVRamTarget], [16 x %struct.NVRamTarget]* %target7, i64 0, i64 0, !dbg !9742
  %period9 = getelementptr inbounds %struct.NVRamTarget, %struct.NVRamTarget* %arrayidx8, i32 0, i32 1, !dbg !9742
  %8 = load i8, i8* %period9, align 1, !dbg !9742
  %idxprom10 = zext i8 %8 to i64, !dbg !9742
  %arrayidx11 = getelementptr [8 x i16], [8 x i16]* @clock_speed, i64 0, i64 %idxprom10, !dbg !9742
  %9 = load i16, i16* %arrayidx11, align 2, !dbg !9742
  %conv12 = zext i16 %9 to i32, !dbg !9742
  %rem = srem i32 %conv12, 10, !dbg !9742
  %10 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9742
  %target13 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %10, i32 0, i32 6, !dbg !9742
  %arrayidx14 = getelementptr [16 x %struct.NVRamTarget], [16 x %struct.NVRamTarget]* %target13, i64 0, i64 0, !dbg !9742
  %cfg0 = getelementptr inbounds %struct.NVRamTarget, %struct.NVRamTarget* %arrayidx14, i32 0, i32 0, !dbg !9742
  %11 = load i8, i8* %cfg0, align 2, !dbg !9742
  %conv15 = zext i8 %11 to i32, !dbg !9742
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.119, i64 0, i64 0), i32 %conv, i32 %conv1, i32 %div, i32 %rem, i32 %conv15) #12, !dbg !9742
  %12 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9743
  %channel_cfg = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %12, i32 0, i32 8, !dbg !9743
  %13 = load i8, i8* %channel_cfg, align 1, !dbg !9743
  %conv16 = zext i8 %13 to i32, !dbg !9743
  %14 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9743
  %max_tag = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %14, i32 0, i32 10, !dbg !9743
  %15 = load i8, i8* %max_tag, align 1, !dbg !9743
  %conv17 = zext i8 %15 to i32, !dbg !9743
  %16 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9743
  %max_tag18 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %16, i32 0, i32 10, !dbg !9743
  %17 = load i8, i8* %max_tag18, align 1, !dbg !9743
  %conv19 = zext i8 %17 to i32, !dbg !9743
  %shl = shl i32 1, %conv19, !dbg !9743
  %18 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !9743
  %delay_time = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %18, i32 0, i32 9, !dbg !9743
  %19 = load i8, i8* %delay_time, align 2, !dbg !9743
  %conv20 = zext i8 %19 to i32, !dbg !9743
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.120, i64 0, i64 0), i32 %conv16, i32 %conv17, i32 %shl, i32 %conv20) #12, !dbg !9743
  ret void, !dbg !9744
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @adapter_init_params(%struct.AdapterCtlBlk* %acb) #2 !dbg !9745 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %eeprom = alloca %struct.NvRamType*, align 8
  %i = alloca i32, align 4
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !9746, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.declare(metadata %struct.NvRamType** %eeprom, metadata !9748, metadata !DIExpression()), !dbg !9749
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9750
  %eeprom1 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 27, !dbg !9751
  store %struct.NvRamType* %eeprom1, %struct.NvRamType** %eeprom, align 8, !dbg !9749
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9752, metadata !DIExpression()), !dbg !9753
  %1 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9754
  %dcb_list = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %1, i32 0, i32 3, !dbg !9755
  call void @INIT_LIST_HEAD(%struct.list_head* %dcb_list) #11, !dbg !9756
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9757
  %dcb_run_robin = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 4, !dbg !9758
  store %struct.DeviceCtlBlk* null, %struct.DeviceCtlBlk** %dcb_run_robin, align 8, !dbg !9759
  %3 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9760
  %active_dcb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %3, i32 0, i32 5, !dbg !9761
  store %struct.DeviceCtlBlk* null, %struct.DeviceCtlBlk** %active_dcb, align 8, !dbg !9762
  %4 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9763
  %srb_free_list = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %4, i32 0, i32 6, !dbg !9764
  call void @INIT_LIST_HEAD(%struct.list_head* %srb_free_list) #11, !dbg !9765
  %5 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9766
  %srb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %5, i32 0, i32 26, !dbg !9767
  %6 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9768
  %tmp_srb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %6, i32 0, i32 7, !dbg !9769
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %tmp_srb, align 8, !dbg !9770
  %7 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9771
  %waiting_timer = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %7, i32 0, i32 8, !dbg !9771
  call void @init_timer_key(%struct.timer_list* %waiting_timer, void (%struct.timer_list*)* @waiting_timeout, i32 0, i8* null, %struct.lock_class_key* null) #11, !dbg !9771
  %8 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9772
  %selto_timer = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %8, i32 0, i32 9, !dbg !9772
  call void @init_timer_key(%struct.timer_list* %selto_timer, void (%struct.timer_list*)* null, i32 0, i8* null, %struct.lock_class_key* null) #11, !dbg !9772
  %9 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9773
  %srb_count = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %9, i32 0, i32 11, !dbg !9774
  store i16 63, i16* %srb_count, align 8, !dbg !9775
  %10 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9776
  %sel_timeout = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %10, i32 0, i32 12, !dbg !9777
  store i8 -103, i8* %sel_timeout, align 2, !dbg !9778
  %11 = load %struct.NvRamType*, %struct.NvRamType** %eeprom, align 8, !dbg !9779
  %max_tag = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %11, i32 0, i32 10, !dbg !9780
  %12 = load i8, i8* %max_tag, align 1, !dbg !9780
  %conv = zext i8 %12 to i32, !dbg !9779
  %shl = shl i32 1, %conv, !dbg !9781
  %conv2 = trunc i32 %shl to i8, !dbg !9782
  %13 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9783
  %tag_max_num = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %13, i32 0, i32 14, !dbg !9784
  store i8 %conv2, i8* %tag_max_num, align 8, !dbg !9785
  %14 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9786
  %tag_max_num3 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %14, i32 0, i32 14, !dbg !9788
  %15 = load i8, i8* %tag_max_num3, align 8, !dbg !9788
  %conv4 = zext i8 %15 to i32, !dbg !9786
  %cmp = icmp sgt i32 %conv4, 30, !dbg !9789
  br i1 %cmp, label %if.then, label %if.end, !dbg !9790

if.then:                                          ; preds = %entry
  %16 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9791
  %tag_max_num6 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %16, i32 0, i32 14, !dbg !9792
  store i8 30, i8* %tag_max_num6, align 8, !dbg !9793
  br label %if.end, !dbg !9791

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9794
  %acb_flag = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %17, i32 0, i32 15, !dbg !9795
  store i8 0, i8* %acb_flag, align 1, !dbg !9796
  %18 = load %struct.NvRamType*, %struct.NvRamType** %eeprom, align 8, !dbg !9797
  %channel_cfg = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %18, i32 0, i32 8, !dbg !9798
  %19 = load i8, i8* %channel_cfg, align 1, !dbg !9798
  %20 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9799
  %gmode2 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %20, i32 0, i32 16, !dbg !9800
  store i8 %19, i8* %gmode2, align 2, !dbg !9801
  %21 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9802
  %config = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %21, i32 0, i32 17, !dbg !9803
  store i8 0, i8* %config, align 1, !dbg !9804
  %22 = load %struct.NvRamType*, %struct.NvRamType** %eeprom, align 8, !dbg !9805
  %channel_cfg7 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %22, i32 0, i32 8, !dbg !9807
  %23 = load i8, i8* %channel_cfg7, align 1, !dbg !9807
  %conv8 = zext i8 %23 to i32, !dbg !9805
  %and = and i32 %conv8, 32, !dbg !9808
  %tobool = icmp ne i32 %and, 0, !dbg !9808
  br i1 %tobool, label %if.then9, label %if.end10, !dbg !9809

if.then9:                                         ; preds = %if.end
  %24 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9810
  %lun_chk = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %24, i32 0, i32 18, !dbg !9811
  store i8 1, i8* %lun_chk, align 4, !dbg !9812
  br label %if.end10, !dbg !9810

if.end10:                                         ; preds = %if.then9, %if.end
  %25 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9813
  %scan_devices = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %25, i32 0, i32 19, !dbg !9814
  store i8 1, i8* %scan_devices, align 1, !dbg !9815
  %26 = load %struct.NvRamType*, %struct.NvRamType** %eeprom, align 8, !dbg !9816
  %scsi_id = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %26, i32 0, i32 7, !dbg !9817
  %27 = load i8, i8* %scsi_id, align 2, !dbg !9817
  %conv11 = zext i8 %27 to i32, !dbg !9816
  %28 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9818
  %scsi_host = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %28, i32 0, i32 0, !dbg !9819
  %29 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !9819
  %this_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %29, i32 0, i32 24, !dbg !9820
  store i32 %conv11, i32* %this_id, align 8, !dbg !9821
  %30 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9822
  %scsi_host12 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %30, i32 0, i32 0, !dbg !9823
  %31 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host12, align 8, !dbg !9823
  %this_id13 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %31, i32 0, i32 24, !dbg !9824
  %32 = load i32, i32* %this_id13, align 8, !dbg !9824
  %shl14 = shl i32 1, %32, !dbg !9825
  %conv15 = trunc i32 %shl14 to i8, !dbg !9826
  %33 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9827
  %hostid_bit = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %33, i32 0, i32 20, !dbg !9828
  store i8 %conv15, i8* %hostid_bit, align 2, !dbg !9829
  store i32 0, i32* %i, align 4, !dbg !9830
  br label %for.cond, !dbg !9832

for.cond:                                         ; preds = %for.inc, %if.end10
  %34 = load i32, i32* %i, align 4, !dbg !9833
  %cmp16 = icmp slt i32 %34, 16, !dbg !9835
  br i1 %cmp16, label %for.body, label %for.end, !dbg !9836

for.body:                                         ; preds = %for.cond
  %35 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9837
  %dcb_map = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %35, i32 0, i32 21, !dbg !9838
  %36 = load i32, i32* %i, align 4, !dbg !9839
  %idxprom = sext i32 %36 to i64, !dbg !9837
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %dcb_map, i64 0, i64 %idxprom, !dbg !9837
  store i8 0, i8* %arrayidx, align 1, !dbg !9840
  br label %for.inc, !dbg !9837

for.inc:                                          ; preds = %for.body
  %37 = load i32, i32* %i, align 4, !dbg !9841
  %inc = add i32 %37, 1, !dbg !9841
  store i32 %inc, i32* %i, align 4, !dbg !9841
  br label %for.cond, !dbg !9842, !llvm.loop !9843

for.end:                                          ; preds = %for.cond
  %38 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9845
  %msg_len = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %38, i32 0, i32 24, !dbg !9846
  store i8 0, i8* %msg_len, align 8, !dbg !9847
  store i32 0, i32* %i, align 4, !dbg !9848
  br label %for.cond18, !dbg !9850

for.cond18:                                       ; preds = %for.inc27, %for.end
  %39 = load i32, i32* %i, align 4, !dbg !9851
  %40 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9853
  %srb_count19 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %40, i32 0, i32 11, !dbg !9854
  %41 = load i16, i16* %srb_count19, align 8, !dbg !9854
  %conv20 = zext i16 %41 to i32, !dbg !9853
  %sub = sub i32 %conv20, 1, !dbg !9855
  %cmp21 = icmp slt i32 %39, %sub, !dbg !9856
  br i1 %cmp21, label %for.body23, label %for.end29, !dbg !9857

for.body23:                                       ; preds = %for.cond18
  %42 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9858
  %srb_array = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %42, i32 0, i32 25, !dbg !9859
  %43 = load i32, i32* %i, align 4, !dbg !9860
  %idxprom24 = sext i32 %43 to i64, !dbg !9858
  %arrayidx25 = getelementptr [63 x %struct.ScsiReqBlk], [63 x %struct.ScsiReqBlk]* %srb_array, i64 0, i64 %idxprom24, !dbg !9858
  %list = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %arrayidx25, i32 0, i32 0, !dbg !9861
  %44 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9862
  %srb_free_list26 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %44, i32 0, i32 6, !dbg !9863
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %srb_free_list26) #11, !dbg !9864
  br label %for.inc27, !dbg !9864

for.inc27:                                        ; preds = %for.body23
  %45 = load i32, i32* %i, align 4, !dbg !9865
  %inc28 = add i32 %45, 1, !dbg !9865
  store i32 %inc28, i32* %i, align 4, !dbg !9865
  br label %for.cond18, !dbg !9866, !llvm.loop !9867

for.end29:                                        ; preds = %for.cond18
  ret void, !dbg !9869
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @adapter_print_config(%struct.AdapterCtlBlk* %acb) #2 !dbg !9870 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %bval = alloca i8, align 1
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !9871, metadata !DIExpression()), !dbg !9872
  call void @llvm.dbg.declare(metadata i8* %bval, metadata !9873, metadata !DIExpression()), !dbg !9874
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9875
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 1, !dbg !9875
  %1 = load i64, i64* %io_port_base, align 8, !dbg !9875
  %add = add i64 %1, 213, !dbg !9875
  %conv = trunc i64 %add to i32, !dbg !9875
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !9875
  store i8 %call, i8* %bval, align 1, !dbg !9876
  %2 = load i8, i8* %bval, align 1, !dbg !9877
  %conv1 = zext i8 %2 to i32, !dbg !9877
  %and = and i32 %conv1, 2, !dbg !9877
  %tobool = icmp ne i32 %and, 0, !dbg !9877
  %3 = zext i1 %tobool to i64, !dbg !9877
  %cond = select i1 %tobool, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38, i64 0, i64 0), !dbg !9877
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.121, i64 0, i64 0), i8* %cond) #12, !dbg !9877
  %4 = load i8, i8* %bval, align 1, !dbg !9878
  %conv3 = zext i8 %4 to i32, !dbg !9878
  %and4 = and i32 %conv3, 16, !dbg !9880
  %tobool5 = icmp ne i32 %and4, 0, !dbg !9880
  br i1 %tobool5, label %if.end, label %if.then, !dbg !9881

if.then:                                          ; preds = %entry
  %5 = load i8, i8* %bval, align 1, !dbg !9882
  %conv6 = zext i8 %5 to i32, !dbg !9882
  %and7 = and i32 %conv6, 64, !dbg !9883
  %tobool8 = icmp ne i32 %and7, 0, !dbg !9884
  %lnot = xor i1 %tobool8, true, !dbg !9884
  %6 = zext i1 %lnot to i64, !dbg !9884
  %cond9 = select i1 %lnot, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0), !dbg !9884
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.123, i64 0, i64 0), i8* %cond9) #12, !dbg !9885
  br label %if.end, !dbg !9885

if.end:                                           ; preds = %if.then, %entry
  %7 = load i8, i8* %bval, align 1, !dbg !9886
  %conv11 = zext i8 %7 to i32, !dbg !9886
  %and12 = and i32 %conv11, 8, !dbg !9888
  %tobool13 = icmp ne i32 %and12, 0, !dbg !9888
  br i1 %tobool13, label %if.end21, label %if.then14, !dbg !9889

if.then14:                                        ; preds = %if.end
  %8 = load i8, i8* %bval, align 1, !dbg !9890
  %conv15 = zext i8 %8 to i32, !dbg !9890
  %and16 = and i32 %conv15, 32, !dbg !9891
  %tobool17 = icmp ne i32 %and16, 0, !dbg !9892
  %lnot18 = xor i1 %tobool17, true, !dbg !9892
  %9 = zext i1 %lnot18 to i64, !dbg !9892
  %cond19 = select i1 %lnot18, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.127, i64 0, i64 0), !dbg !9892
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.126, i64 0, i64 0), i8* %cond19) #12, !dbg !9893
  br label %if.end21, !dbg !9893

if.end21:                                         ; preds = %if.then14, %if.end
  %10 = load i8, i8* %bval, align 1, !dbg !9894
  %conv22 = zext i8 %10 to i32, !dbg !9894
  %and23 = and i32 %conv22, 4, !dbg !9896
  %tobool24 = icmp ne i32 %and23, 0, !dbg !9896
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !9897

if.then25:                                        ; preds = %if.end21
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.128, i64 0, i64 0)) #12, !dbg !9898
  br label %if.end27, !dbg !9898

if.end27:                                         ; preds = %if.then25, %if.end21
  %11 = load i8, i8* %bval, align 1, !dbg !9899
  %conv28 = zext i8 %11 to i32, !dbg !9899
  %and29 = and i32 %conv28, 28, !dbg !9901
  %cmp = icmp eq i32 %and29, 0, !dbg !9902
  br i1 %cmp, label %if.then31, label %if.end33, !dbg !9903

if.then31:                                        ; preds = %if.end27
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.129, i64 0, i64 0)) #12, !dbg !9904
  br label %if.end33, !dbg !9904

if.end33:                                         ; preds = %if.then31, %if.end27
  %12 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9905
  %io_port_base34 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %12, i32 0, i32 1, !dbg !9905
  %13 = load i64, i64* %io_port_base34, align 8, !dbg !9905
  %add35 = add i64 %13, 212, !dbg !9905
  %conv36 = trunc i64 %add35 to i32, !dbg !9905
  %call37 = call zeroext i8 @inb(i32 %conv36) #11, !dbg !9905
  store i8 %call37, i8* %bval, align 1, !dbg !9906
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.130, i64 0, i64 0)) #12, !dbg !9907
  %14 = load i8, i8* %bval, align 1, !dbg !9908
  %conv39 = zext i8 %14 to i32, !dbg !9908
  %and40 = and i32 %conv39, 8, !dbg !9910
  %tobool41 = icmp ne i32 %and40, 0, !dbg !9910
  br i1 %tobool41, label %if.then42, label %if.else, !dbg !9911

if.then42:                                        ; preds = %if.end33
  %call43 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.131, i64 0, i64 0)) #12, !dbg !9912
  br label %if.end63, !dbg !9912

if.else:                                          ; preds = %if.end33
  %15 = load i8, i8* %bval, align 1, !dbg !9913
  %conv44 = zext i8 %15 to i32, !dbg !9913
  %and45 = and i32 %conv44, 4, !dbg !9916
  %tobool46 = icmp ne i32 %and45, 0, !dbg !9916
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !9917

if.then47:                                        ; preds = %if.else
  %call48 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i64 0, i64 0)) #12, !dbg !9918
  br label %if.end49, !dbg !9918

if.end49:                                         ; preds = %if.then47, %if.else
  %16 = load i8, i8* %bval, align 1, !dbg !9919
  %conv50 = zext i8 %16 to i32, !dbg !9919
  %and51 = and i32 %conv50, 2, !dbg !9921
  %tobool52 = icmp ne i32 %and51, 0, !dbg !9921
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !9922

if.then53:                                        ; preds = %if.end49
  %call54 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i64 0, i64 0)) #12, !dbg !9923
  br label %if.end55, !dbg !9923

if.end55:                                         ; preds = %if.then53, %if.end49
  %17 = load i8, i8* %bval, align 1, !dbg !9924
  %conv56 = zext i8 %17 to i32, !dbg !9924
  %and57 = and i32 %conv56, 1, !dbg !9926
  %tobool58 = icmp ne i32 %and57, 0, !dbg !9926
  br i1 %tobool58, label %if.then59, label %if.end61, !dbg !9927

if.then59:                                        ; preds = %if.end55
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i64 0, i64 0)) #12, !dbg !9928
  br label %if.end61, !dbg !9928

if.end61:                                         ; preds = %if.then59, %if.end55
  %call62 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #12, !dbg !9929
  br label %if.end63

if.end63:                                         ; preds = %if.end61, %if.then42
  ret void, !dbg !9930
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @adapter_sg_tables_alloc(%struct.AdapterCtlBlk* %acb) #2 !dbg !9931 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8833, metadata !DIExpression()), !dbg !9934
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8845, metadata !DIExpression()), !dbg !9938
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8847, metadata !DIExpression()), !dbg !9939
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8849, metadata !DIExpression()), !dbg !9940
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8851, metadata !DIExpression()), !dbg !9941
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8857, metadata !DIExpression()), !dbg !9943
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8863, metadata !DIExpression()), !dbg !9945
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8872, metadata !DIExpression()), !dbg !9948
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8874, metadata !DIExpression()), !dbg !9949
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8876, metadata !DIExpression()), !dbg !9950
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8878, metadata !DIExpression()), !dbg !9951
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8880, metadata !DIExpression()), !dbg !9952
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8882, metadata !DIExpression()), !dbg !9953
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8884, metadata !DIExpression()), !dbg !9954
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8886, metadata !DIExpression()), !dbg !9955
  %retval = alloca i32, align 4
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %mem_needed = alloca i32, align 4
  %pages = alloca i32, align 4
  %srbs_per_page = alloca i32, align 4
  %srb_idx = alloca i32, align 4
  %i = alloca i32, align 4
  %ptr = alloca %struct.SGentry*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !9956, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.declare(metadata i32* %mem_needed, metadata !9958, metadata !DIExpression()), !dbg !9959
  store i32 32768, i32* %mem_needed, align 4, !dbg !9959
  call void @llvm.dbg.declare(metadata i32* %pages, metadata !9960, metadata !DIExpression()), !dbg !9961
  store i32 8, i32* %pages, align 4, !dbg !9961
  call void @llvm.dbg.declare(metadata i32* %srbs_per_page, metadata !9962, metadata !DIExpression()), !dbg !9963
  store i32 8, i32* %srbs_per_page, align 4, !dbg !9963
  call void @llvm.dbg.declare(metadata i32* %srb_idx, metadata !9964, metadata !DIExpression()), !dbg !9965
  store i32 0, i32* %srb_idx, align 4, !dbg !9965
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9966, metadata !DIExpression()), !dbg !9967
  store i32 0, i32* %i, align 4, !dbg !9967
  call void @llvm.dbg.declare(metadata %struct.SGentry** %ptr, metadata !9968, metadata !DIExpression()), !dbg !9969
  store i32 0, i32* %i, align 4, !dbg !9970
  br label %for.cond, !dbg !9972

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9973
  %cmp = icmp ult i32 %0, 63, !dbg !9975
  br i1 %cmp, label %for.body, label %for.end, !dbg !9976

for.body:                                         ; preds = %for.cond
  %1 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !9977
  %srb_array = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %1, i32 0, i32 25, !dbg !9978
  %2 = load i32, i32* %i, align 4, !dbg !9979
  %idxprom = zext i32 %2 to i64, !dbg !9977
  %arrayidx = getelementptr [63 x %struct.ScsiReqBlk], [63 x %struct.ScsiReqBlk]* %srb_array, i64 0, i64 %idxprom, !dbg !9977
  %segment_x = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %arrayidx, i32 0, i32 3, !dbg !9980
  store %struct.SGentry* null, %struct.SGentry** %segment_x, align 8, !dbg !9981
  br label %for.inc, !dbg !9977

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !9982
  %inc = add i32 %3, 1, !dbg !9982
  store i32 %inc, i32* %i, align 4, !dbg !9982
  br label %for.cond, !dbg !9983, !llvm.loop !9984

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !9986

do.body:                                          ; preds = %for.end
  br label %do.end, !dbg !9987

do.end:                                           ; preds = %do.body
  br label %while.cond, !dbg !9989

while.cond:                                       ; preds = %while.end, %do.end
  %4 = load i32, i32* %pages, align 4, !dbg !9990
  %dec = add i32 %4, -1, !dbg !9990
  store i32 %dec, i32* %pages, align 4, !dbg !9990
  %tobool = icmp ne i32 %4, 0, !dbg !9989
  br i1 %tobool, label %while.body, label %while.end14, !dbg !9989

while.body:                                       ; preds = %while.cond
  store i64 4096, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !9991
  %6 = call i1 @llvm.is.constant.i64(i64 %5) #6, !dbg !9992
  br i1 %6, label %if.then.i, label %if.end9.i, !dbg !9993

if.then.i:                                        ; preds = %while.body
  %7 = load i64, i64* %size.addr.i, align 8, !dbg !9994
  %cmp.i = icmp ugt i64 %7, 8192, !dbg !9995
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9996

if.then1.i:                                       ; preds = %if.then.i
  %8 = load i64, i64* %size.addr.i, align 8, !dbg !9997
  %9 = load i32, i32* %flags.addr.i, align 4, !dbg !9998
  store i64 %8, i64* %size.addr.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i, align 4
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !9999
  %call.i.i = call i32 @get_order(i64 %10) #14, !dbg !10000
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9952
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !10001
  %12 = load i32, i32* %flags.addr.i.i, align 4, !dbg !10002
  %13 = load i32, i32* %order.i.i, align 4, !dbg !10003
  store i64 %11, i64* %size.addr.i.i.i, align 8
  store i32 %12, i32* %flags.addr.i.i.i, align 4
  store i32 %13, i32* %order.addr.i.i.i, align 4
  %14 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !10004
  %15 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !10005
  %16 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !10006
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %14, i32 %15, i32 %16) #13, !dbg !10007
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !10007
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !10007
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !10007
  call void @llvm.assume(i1 %maskcond.i.i.i) #6, !dbg !10007
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !10008
  br label %kmalloc.exit, !dbg !10008

if.end.i:                                         ; preds = %if.then.i
  %17 = load i64, i64* %size.addr.i, align 8, !dbg !10009
  store i64 %17, i64* %size.addr.i11.i, align 8
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10010
  %tobool.i.i = icmp ne i64 %18, 0, !dbg !10010
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !10011

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !10012
  br label %kmalloc_index.exit.i, !dbg !10012

if.end.i.i:                                       ; preds = %if.end.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10013
  %cmp.i.i = icmp ule i64 %19, 8, !dbg !10014
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !10015

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10016
  br label %kmalloc_index.exit.i, !dbg !10016

if.end2.i.i:                                      ; preds = %if.end.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10017
  %cmp3.i.i = icmp ugt i64 %20, 64, !dbg !10018
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !10019

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10020
  %cmp4.i.i = icmp ule i64 %21, 96, !dbg !10021
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !10022

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !10023
  br label %kmalloc_index.exit.i, !dbg !10023

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10024
  %cmp7.i.i = icmp ugt i64 %22, 128, !dbg !10025
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !10026

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10027
  %cmp9.i.i = icmp ule i64 %23, 192, !dbg !10028
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !10029

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !10030
  br label %kmalloc_index.exit.i, !dbg !10030

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10031
  %cmp12.i.i = icmp ule i64 %24, 8, !dbg !10032
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !10033

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10034
  br label %kmalloc_index.exit.i, !dbg !10034

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10035
  %cmp15.i.i = icmp ule i64 %25, 16, !dbg !10036
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !10037

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !10038
  br label %kmalloc_index.exit.i, !dbg !10038

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10039
  %cmp18.i.i = icmp ule i64 %26, 32, !dbg !10040
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !10041

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !10042
  br label %kmalloc_index.exit.i, !dbg !10042

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10043
  %cmp21.i.i = icmp ule i64 %27, 64, !dbg !10044
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !10045

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !10046
  br label %kmalloc_index.exit.i, !dbg !10046

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10047
  %cmp24.i.i = icmp ule i64 %28, 128, !dbg !10048
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !10049

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !10050
  br label %kmalloc_index.exit.i, !dbg !10050

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10051
  %cmp27.i.i = icmp ule i64 %29, 256, !dbg !10052
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !10053

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !10054
  br label %kmalloc_index.exit.i, !dbg !10054

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10055
  %cmp30.i.i = icmp ule i64 %30, 512, !dbg !10056
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !10057

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !10058
  br label %kmalloc_index.exit.i, !dbg !10058

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10059
  %cmp33.i.i = icmp ule i64 %31, 1024, !dbg !10060
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !10061

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !10062
  br label %kmalloc_index.exit.i, !dbg !10062

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10063
  %cmp36.i.i = icmp ule i64 %32, 2048, !dbg !10064
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !10065

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !10066
  br label %kmalloc_index.exit.i, !dbg !10066

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10067
  %cmp39.i.i = icmp ule i64 %33, 4096, !dbg !10068
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !10069

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !10070
  br label %kmalloc_index.exit.i, !dbg !10070

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10071
  %cmp42.i.i = icmp ule i64 %34, 8192, !dbg !10072
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !10073

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !10074
  br label %kmalloc_index.exit.i, !dbg !10074

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10075
  %cmp45.i.i = icmp ule i64 %35, 16384, !dbg !10076
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !10077

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !10078
  br label %kmalloc_index.exit.i, !dbg !10078

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10079
  %cmp48.i.i = icmp ule i64 %36, 32768, !dbg !10080
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !10081

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !10082
  br label %kmalloc_index.exit.i, !dbg !10082

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10083
  %cmp51.i.i = icmp ule i64 %37, 65536, !dbg !10084
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !10085

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !10086
  br label %kmalloc_index.exit.i, !dbg !10086

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10087
  %cmp54.i.i = icmp ule i64 %38, 131072, !dbg !10088
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !10089

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !10090
  br label %kmalloc_index.exit.i, !dbg !10090

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10091
  %cmp57.i.i = icmp ule i64 %39, 262144, !dbg !10092
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !10093

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !10094
  br label %kmalloc_index.exit.i, !dbg !10094

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10095
  %cmp60.i.i = icmp ule i64 %40, 524288, !dbg !10096
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !10097

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !10098
  br label %kmalloc_index.exit.i, !dbg !10098

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10099
  %cmp63.i.i = icmp ule i64 %41, 1048576, !dbg !10100
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !10101

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !10102
  br label %kmalloc_index.exit.i, !dbg !10102

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10103
  %cmp66.i.i = icmp ule i64 %42, 2097152, !dbg !10104
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !10105

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !10106
  br label %kmalloc_index.exit.i, !dbg !10106

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10107
  %cmp69.i.i = icmp ule i64 %43, 4194304, !dbg !10108
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !10109

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !10110
  br label %kmalloc_index.exit.i, !dbg !10110

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10111
  %cmp72.i.i = icmp ule i64 %44, 8388608, !dbg !10112
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !10113

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !10114
  br label %kmalloc_index.exit.i, !dbg !10114

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10115
  %cmp75.i.i = icmp ule i64 %45, 16777216, !dbg !10116
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !10117

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !10118
  br label %kmalloc_index.exit.i, !dbg !10118

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10119
  %cmp78.i.i = icmp ule i64 %46, 33554432, !dbg !10120
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !10121

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !10122
  br label %kmalloc_index.exit.i, !dbg !10122

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10123
  %cmp81.i.i = icmp ule i64 %47, 67108864, !dbg !10124
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !10125

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !10126
  br label %kmalloc_index.exit.i, !dbg !10126

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.33, i64 0, i64 0), i32 382, i32 0, i64 12) #6, !dbg !10127, !srcloc !9074
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 159) #6, !dbg !10128, !srcloc !9078
  unreachable, !dbg !10129

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %48 = load i32, i32* %retval.i.i, align 4, !dbg !10130
  store i32 %48, i32* %index.i, align 4, !dbg !10131
  %49 = load i32, i32* %index.i, align 4, !dbg !10132
  %tobool.i = icmp ne i32 %49, 0, !dbg !10132
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !10133

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !10134
  br label %kmalloc.exit, !dbg !10134

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %50 = load i32, i32* %flags.addr.i, align 4, !dbg !10135
  store i32 %50, i32* %flags.addr.i13.i, align 4
  %51 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10136
  %and.i.i = and i32 %51, 17, !dbg !10136
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !10136
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !10136
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !10136
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10136
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !10137

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !10138
  br label %kmalloc_type.exit.i, !dbg !10138

if.end.i16.i:                                     ; preds = %if.end4.i
  %52 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10139
  %and2.i.i = and i32 %52, 1, !dbg !10140
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !10139
  %53 = zext i1 %tobool3.i.i to i64, !dbg !10139
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !10139
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !10141
  br label %kmalloc_type.exit.i, !dbg !10141

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %54 = load i32, i32* %retval.i12.i, align 4, !dbg !10142
  %idxprom.i = zext i32 %54 to i64, !dbg !10143
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !10143
  %55 = load i32, i32* %index.i, align 4, !dbg !10144
  %idxprom6.i = zext i32 %55 to i64, !dbg !10143
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !10143
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !10143
  %57 = load i32, i32* %flags.addr.i, align 4, !dbg !10145
  %58 = load i64, i64* %size.addr.i, align 8, !dbg !10146
  store %struct.kmem_cache* %56, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %57, i32* %flags.addr.i17.i, align 4
  store i64 %58, i64* %size.addr.i18.i, align 8
  %59 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10147
  %60 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10148
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %59, i32 %60) #13, !dbg !10149
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !10149
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !10149
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !10149
  call void @llvm.assume(i1 %maskcond.i.i) #6, !dbg !10149
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !9940
  %61 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10150
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !10151
  %63 = load i64, i64* %size.addr.i18.i, align 8, !dbg !10152
  %64 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10153
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %61, i8* %62, i64 %63, i32 %64) #13, !dbg !10154
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !10155
  %65 = load i8*, i8** %ret.i.i, align 8, !dbg !10156
  store i8* %65, i8** %retval.i, align 8, !dbg !10157
  br label %kmalloc.exit, !dbg !10157

if.end9.i:                                        ; preds = %while.body
  %66 = load i64, i64* %size.addr.i, align 8, !dbg !10158
  %67 = load i32, i32* %flags.addr.i, align 4, !dbg !10159
  %call10.i = call noalias i8* @__kmalloc(i64 %66, i32 %67) #13, !dbg !10160
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !10160
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !10160
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !10160
  call void @llvm.assume(i1 %maskcond.i) #6, !dbg !10160
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !10161
  br label %kmalloc.exit, !dbg !10161

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %68 = load i8*, i8** %retval.i, align 8, !dbg !10162
  %69 = bitcast i8* %68 to %struct.SGentry*, !dbg !10163
  store %struct.SGentry* %69, %struct.SGentry** %ptr, align 8, !dbg !10164
  %70 = load %struct.SGentry*, %struct.SGentry** %ptr, align 8, !dbg !10165
  %tobool1 = icmp ne %struct.SGentry* %70, null, !dbg !10165
  br i1 %tobool1, label %if.end, label %if.then, !dbg !10167

if.then:                                          ; preds = %kmalloc.exit
  %71 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10168
  call void @adapter_sg_tables_free(%struct.AdapterCtlBlk* %71) #11, !dbg !10170
  store i32 1, i32* %retval, align 4, !dbg !10171
  br label %return, !dbg !10171

if.end:                                           ; preds = %kmalloc.exit
  br label %do.body2, !dbg !10172

do.body2:                                         ; preds = %if.end
  br label %do.end3, !dbg !10173

do.end3:                                          ; preds = %do.body2
  store i32 0, i32* %i, align 4, !dbg !10175
  br label %while.cond4, !dbg !10176

while.cond4:                                      ; preds = %while.body7, %do.end3
  %72 = load i32, i32* %i, align 4, !dbg !10177
  %cmp5 = icmp ult i32 %72, 8, !dbg !10178
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !10179

land.rhs:                                         ; preds = %while.cond4
  %73 = load i32, i32* %srb_idx, align 4, !dbg !10180
  %cmp6 = icmp slt i32 %73, 63, !dbg !10181
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond4
  %74 = phi i1 [ false, %while.cond4 ], [ %cmp6, %land.rhs ], !dbg !10182
  br i1 %74, label %while.body7, label %while.end, !dbg !10176

while.body7:                                      ; preds = %land.end
  %75 = load %struct.SGentry*, %struct.SGentry** %ptr, align 8, !dbg !10183
  %76 = load i32, i32* %i, align 4, !dbg !10184
  %inc8 = add i32 %76, 1, !dbg !10184
  store i32 %inc8, i32* %i, align 4, !dbg !10184
  %mul = mul i32 %76, 64, !dbg !10185
  %idx.ext = zext i32 %mul to i64, !dbg !10186
  %add.ptr = getelementptr %struct.SGentry, %struct.SGentry* %75, i64 %idx.ext, !dbg !10186
  %77 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10187
  %srb_array9 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %77, i32 0, i32 25, !dbg !10188
  %78 = load i32, i32* %srb_idx, align 4, !dbg !10189
  %inc10 = add i32 %78, 1, !dbg !10189
  store i32 %inc10, i32* %srb_idx, align 4, !dbg !10189
  %idxprom11 = sext i32 %78 to i64, !dbg !10187
  %arrayidx12 = getelementptr [63 x %struct.ScsiReqBlk], [63 x %struct.ScsiReqBlk]* %srb_array9, i64 0, i64 %idxprom11, !dbg !10187
  %segment_x13 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %arrayidx12, i32 0, i32 3, !dbg !10190
  store %struct.SGentry* %add.ptr, %struct.SGentry** %segment_x13, align 8, !dbg !10191
  br label %while.cond4, !dbg !10176, !llvm.loop !10192

while.end:                                        ; preds = %land.end
  br label %while.cond, !dbg !9989, !llvm.loop !10194

while.end14:                                      ; preds = %while.cond
  %79 = load i32, i32* %i, align 4, !dbg !10196
  %cmp15 = icmp ult i32 %79, 8, !dbg !10198
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !10199

if.then16:                                        ; preds = %while.end14
  %80 = load %struct.SGentry*, %struct.SGentry** %ptr, align 8, !dbg !10200
  %81 = load i32, i32* %i, align 4, !dbg !10201
  %mul17 = mul i32 %81, 64, !dbg !10202
  %idx.ext18 = zext i32 %mul17 to i64, !dbg !10203
  %add.ptr19 = getelementptr %struct.SGentry, %struct.SGentry* %80, i64 %idx.ext18, !dbg !10203
  %82 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10204
  %srb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %82, i32 0, i32 26, !dbg !10205
  %segment_x20 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %srb, i32 0, i32 3, !dbg !10206
  store %struct.SGentry* %add.ptr19, %struct.SGentry** %segment_x20, align 8, !dbg !10207
  br label %if.end22, !dbg !10204

if.else:                                          ; preds = %while.end14
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.135, i64 0, i64 0)) #12, !dbg !10208
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then16
  store i32 0, i32* %retval, align 4, !dbg !10209
  br label %return, !dbg !10209

return:                                           ; preds = %if.end22, %if.then
  %83 = load i32, i32* %retval, align 4, !dbg !10210
  ret i32 %83, !dbg !10210
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @adapter_init_scsi_host(%struct.Scsi_Host* %host) #2 !dbg !10211 {
entry:
  %host.addr = alloca %struct.Scsi_Host*, align 8
  %acb = alloca %struct.AdapterCtlBlk*, align 8
  %eeprom = alloca %struct.NvRamType*, align 8
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !10212, metadata !DIExpression()), !dbg !10213
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb, metadata !10214, metadata !DIExpression()), !dbg !10215
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !10216
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 51, !dbg !10217
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !10216
  %1 = bitcast i64* %arraydecay to %struct.AdapterCtlBlk*, !dbg !10218
  store %struct.AdapterCtlBlk* %1, %struct.AdapterCtlBlk** %acb, align 8, !dbg !10215
  call void @llvm.dbg.declare(metadata %struct.NvRamType** %eeprom, metadata !10219, metadata !DIExpression()), !dbg !10220
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !10221
  %eeprom1 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 27, !dbg !10222
  store %struct.NvRamType* %eeprom1, %struct.NvRamType** %eeprom, align 8, !dbg !10220
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !10223
  %max_cmd_len = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 23, !dbg !10224
  store i16 24, i16* %max_cmd_len, align 4, !dbg !10225
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !10226
  %can_queue = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 25, !dbg !10227
  store i32 32, i32* %can_queue, align 4, !dbg !10228
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !10229
  %cmd_per_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %5, i32 0, i32 26, !dbg !10230
  store i16 16, i16* %cmd_per_lun, align 8, !dbg !10231
  %6 = load %struct.NvRamType*, %struct.NvRamType** %eeprom, align 8, !dbg !10232
  %scsi_id = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %6, i32 0, i32 7, !dbg !10233
  %7 = load i8, i8* %scsi_id, align 2, !dbg !10233
  %conv = zext i8 %7 to i32, !dbg !10234
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !10235
  %this_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 24, !dbg !10236
  store i32 %conv, i32* %this_id, align 8, !dbg !10237
  %9 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !10238
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %9, i32 0, i32 1, !dbg !10239
  %10 = load i64, i64* %io_port_base, align 8, !dbg !10239
  %11 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !10240
  %io_port = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %11, i32 0, i32 42, !dbg !10241
  store i64 %10, i64* %io_port, align 8, !dbg !10242
  %12 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !10243
  %io_port_len = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %12, i32 0, i32 2, !dbg !10244
  %13 = load i64, i64* %io_port_len, align 8, !dbg !10244
  %conv2 = trunc i64 %13 to i8, !dbg !10243
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !10245
  %n_io_port = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %14, i32 0, i32 43, !dbg !10246
  store i8 %conv2, i8* %n_io_port, align 8, !dbg !10247
  %15 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !10248
  %dma_channel = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %15, i32 0, i32 44, !dbg !10249
  store i8 -1, i8* %dma_channel, align 1, !dbg !10250
  %16 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !10251
  %io_port_base3 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %16, i32 0, i32 1, !dbg !10252
  %17 = load i64, i64* %io_port_base3, align 8, !dbg !10252
  %conv4 = trunc i64 %17 to i32, !dbg !10251
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !10253
  %unique_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %18, i32 0, i32 22, !dbg !10254
  store i32 %conv4, i32* %unique_id, align 8, !dbg !10255
  %19 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !10256
  %irq_level = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %19, i32 0, i32 13, !dbg !10257
  %20 = load i32, i32* %irq_level, align 4, !dbg !10257
  %21 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !10258
  %irq = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %21, i32 0, i32 45, !dbg !10259
  store i32 %20, i32* %irq, align 4, !dbg !10260
  %22 = load volatile i64, i64* @jiffies, align 8, !dbg !10261
  %23 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !10262
  %last_reset = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %23, i32 0, i32 10, !dbg !10263
  store i64 %22, i64* %last_reset, align 8, !dbg !10264
  %24 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !10265
  %max_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %24, i32 0, i32 20, !dbg !10266
  store i32 16, i32* %max_id, align 4, !dbg !10267
  %25 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !10268
  %max_id5 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %25, i32 0, i32 20, !dbg !10270
  %26 = load i32, i32* %max_id5, align 4, !dbg !10270
  %sub = sub i32 %26, 1, !dbg !10271
  %27 = load %struct.NvRamType*, %struct.NvRamType** %eeprom, align 8, !dbg !10272
  %scsi_id6 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %27, i32 0, i32 7, !dbg !10273
  %28 = load i8, i8* %scsi_id6, align 2, !dbg !10273
  %conv7 = zext i8 %28 to i32, !dbg !10272
  %cmp = icmp eq i32 %sub, %conv7, !dbg !10274
  br i1 %cmp, label %if.then, label %if.end, !dbg !10275

if.then:                                          ; preds = %entry
  %29 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !10276
  %max_id9 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %29, i32 0, i32 20, !dbg !10277
  %30 = load i32, i32* %max_id9, align 4, !dbg !10278
  %dec = add i32 %30, -1, !dbg !10278
  store i32 %dec, i32* %max_id9, align 4, !dbg !10278
  br label %if.end, !dbg !10276

if.end:                                           ; preds = %if.then, %entry
  %31 = load %struct.NvRamType*, %struct.NvRamType** %eeprom, align 8, !dbg !10279
  %channel_cfg = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %31, i32 0, i32 8, !dbg !10281
  %32 = load i8, i8* %channel_cfg, align 1, !dbg !10281
  %conv10 = zext i8 %32 to i32, !dbg !10279
  %and = and i32 %conv10, 32, !dbg !10282
  %tobool = icmp ne i32 %and, 0, !dbg !10282
  br i1 %tobool, label %if.then11, label %if.else, !dbg !10283

if.then11:                                        ; preds = %if.end
  %33 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !10284
  %max_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %33, i32 0, i32 21, !dbg !10285
  store i64 8, i64* %max_lun, align 8, !dbg !10286
  br label %if.end13, !dbg !10284

if.else:                                          ; preds = %if.end
  %34 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !10287
  %max_lun12 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %34, i32 0, i32 21, !dbg !10288
  store i64 1, i64* %max_lun12, align 8, !dbg !10289
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then11
  ret void, !dbg !10290
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @adapter_init_chip(%struct.AdapterCtlBlk* %acb) #2 !dbg !10291 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %eeprom = alloca %struct.NvRamType*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !10292, metadata !DIExpression()), !dbg !10293
  call void @llvm.dbg.declare(metadata %struct.NvRamType** %eeprom, metadata !10294, metadata !DIExpression()), !dbg !10295
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10296
  %eeprom1 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 27, !dbg !10297
  store %struct.NvRamType* %eeprom1, %struct.NvRamType** %eeprom, align 8, !dbg !10295
  %1 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10298
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %1, i32 0, i32 1, !dbg !10298
  %2 = load i64, i64* %io_port_base, align 8, !dbg !10298
  %add = add i64 %2, 164, !dbg !10298
  %conv = trunc i64 %add to i32, !dbg !10298
  call void @outb(i8 zeroext 0, i32 %conv) #11, !dbg !10298
  %3 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10299
  %io_port_base2 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %3, i32 0, i32 1, !dbg !10299
  %4 = load i64, i64* %io_port_base2, align 8, !dbg !10299
  %add3 = add i64 %4, 140, !dbg !10299
  %conv4 = trunc i64 %add3 to i32, !dbg !10299
  call void @outb(i8 zeroext 0, i32 %conv4) #11, !dbg !10299
  %5 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10300
  %io_port_base5 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %5, i32 0, i32 1, !dbg !10300
  %6 = load i64, i64* %io_port_base5, align 8, !dbg !10300
  %add6 = add i64 %6, 128, !dbg !10300
  %conv7 = trunc i64 %add6 to i32, !dbg !10300
  call void @outw(i16 zeroext 16, i32 %conv7) #11, !dbg !10300
  %7 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10301
  %io_port_base8 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %7, i32 0, i32 1, !dbg !10301
  %8 = load i64, i64* %io_port_base8, align 8, !dbg !10301
  %add9 = add i64 %8, 161, !dbg !10301
  %conv10 = trunc i64 %add9 to i32, !dbg !10301
  call void @outb(i8 zeroext 16, i32 %conv10) #11, !dbg !10301
  call void @__const_udelay(i64 85900) #11, !dbg !10302
  %9 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10307
  %config = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %9, i32 0, i32 17, !dbg !10308
  store i8 12, i8* %config, align 1, !dbg !10309
  %10 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10310
  %io_port_base11 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %10, i32 0, i32 1, !dbg !10310
  %11 = load i64, i64* %io_port_base11, align 8, !dbg !10310
  %add12 = add i64 %11, 213, !dbg !10310
  %conv13 = trunc i64 %add12 to i32, !dbg !10310
  %call = call zeroext i8 @inb(i32 %conv13) #11, !dbg !10310
  %conv14 = zext i8 %call to i32, !dbg !10310
  %and = and i32 %conv14, 2, !dbg !10312
  %tobool = icmp ne i32 %and, 0, !dbg !10312
  br i1 %tobool, label %if.then, label %if.end, !dbg !10313

if.then:                                          ; preds = %entry
  %12 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10314
  %config15 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %12, i32 0, i32 17, !dbg !10315
  %13 = load i8, i8* %config15, align 1, !dbg !10316
  %conv16 = zext i8 %13 to i32, !dbg !10316
  %or = or i32 %conv16, 32, !dbg !10316
  %conv17 = trunc i32 %or to i8, !dbg !10316
  store i8 %conv17, i8* %config15, align 1, !dbg !10316
  br label %if.end, !dbg !10314

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.NvRamType*, %struct.NvRamType** %eeprom, align 8, !dbg !10317
  %channel_cfg = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %14, i32 0, i32 8, !dbg !10319
  %15 = load i8, i8* %channel_cfg, align 1, !dbg !10319
  %conv18 = zext i8 %15 to i32, !dbg !10317
  %and19 = and i32 %conv18, 4, !dbg !10320
  %tobool20 = icmp ne i32 %and19, 0, !dbg !10320
  br i1 %tobool20, label %if.then21, label %if.end26, !dbg !10321

if.then21:                                        ; preds = %if.end
  %16 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10322
  %config22 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %16, i32 0, i32 17, !dbg !10323
  %17 = load i8, i8* %config22, align 1, !dbg !10324
  %conv23 = zext i8 %17 to i32, !dbg !10324
  %or24 = or i32 %conv23, 16, !dbg !10324
  %conv25 = trunc i32 %or24 to i8, !dbg !10324
  store i8 %conv25, i8* %config22, align 1, !dbg !10324
  br label %if.end26, !dbg !10322

if.end26:                                         ; preds = %if.then21, %if.end
  %18 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10325
  %config27 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %18, i32 0, i32 17, !dbg !10327
  %19 = load i8, i8* %config27, align 1, !dbg !10327
  %conv28 = zext i8 %19 to i32, !dbg !10325
  %and29 = and i32 %conv28, 16, !dbg !10328
  %tobool30 = icmp ne i32 %and29, 0, !dbg !10328
  br i1 %tobool30, label %if.then31, label %if.end41, !dbg !10329

if.then31:                                        ; preds = %if.end26
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.136, i64 0, i64 0)) #12, !dbg !10330
  %20 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10332
  %io_port_base33 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %20, i32 0, i32 1, !dbg !10332
  %21 = load i64, i64* %io_port_base33, align 8, !dbg !10332
  %add34 = add i64 %21, 128, !dbg !10332
  %conv35 = trunc i64 %add34 to i32, !dbg !10332
  call void @outb(i8 zeroext 8, i32 %conv35) #11, !dbg !10332
  call void @__const_udelay(i64 2147500) #11, !dbg !10333
  %22 = load volatile i64, i64* @jiffies, align 8, !dbg !10338
  %add36 = add i64 %22, 125, !dbg !10339
  %23 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10340
  %eeprom37 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %23, i32 0, i32 27, !dbg !10341
  %delay_time = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %eeprom37, i32 0, i32 9, !dbg !10342
  %24 = load i8, i8* %delay_time, align 4, !dbg !10342
  %conv38 = zext i8 %24 to i32, !dbg !10340
  %mul = mul i32 250, %conv38, !dbg !10343
  %conv39 = sext i32 %mul to i64, !dbg !10344
  %add40 = add i64 %add36, %conv39, !dbg !10345
  %25 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10346
  %last_reset = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %25, i32 0, i32 10, !dbg !10347
  store i64 %add40, i64* %last_reset, align 8, !dbg !10348
  br label %if.end41, !dbg !10349

if.end41:                                         ; preds = %if.then31, %if.end26
  ret void, !dbg !10350
}

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #1

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @adapter_sg_tables_free(%struct.AdapterCtlBlk* %acb) #2 !dbg !10351 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %i = alloca i32, align 4
  %srbs_per_page = alloca i32, align 4
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !10352, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10354, metadata !DIExpression()), !dbg !10355
  call void @llvm.dbg.declare(metadata i32* %srbs_per_page, metadata !10356, metadata !DIExpression()), !dbg !10357
  store i32 8, i32* %srbs_per_page, align 4, !dbg !10357
  store i32 0, i32* %i, align 4, !dbg !10358
  br label %for.cond, !dbg !10360

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10361
  %cmp = icmp slt i32 %0, 63, !dbg !10363
  br i1 %cmp, label %for.body, label %for.end, !dbg !10364

for.body:                                         ; preds = %for.cond
  %1 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10365
  %srb_array = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %1, i32 0, i32 25, !dbg !10366
  %2 = load i32, i32* %i, align 4, !dbg !10367
  %idxprom = sext i32 %2 to i64, !dbg !10365
  %arrayidx = getelementptr [63 x %struct.ScsiReqBlk], [63 x %struct.ScsiReqBlk]* %srb_array, i64 0, i64 %idxprom, !dbg !10365
  %segment_x = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %arrayidx, i32 0, i32 3, !dbg !10368
  %3 = load %struct.SGentry*, %struct.SGentry** %segment_x, align 8, !dbg !10368
  %4 = bitcast %struct.SGentry* %3 to i8*, !dbg !10365
  call void @kfree(i8* %4) #11, !dbg !10369
  br label %for.inc, !dbg !10369

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !10370
  %add = add i32 %5, 8, !dbg !10370
  store i32 %add, i32* %i, align 4, !dbg !10370
  br label %for.cond, !dbg !10371, !llvm.loop !10372

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10374
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dc395x_handle_interrupt(%struct.AdapterCtlBlk* %acb, i16 zeroext %scsi_status) #2 !dbg !10375 {
entry:
  %lock.addr.i82 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i82, metadata !6115, metadata !DIExpression()), !dbg !10378
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6122, metadata !DIExpression()), !dbg !10380
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6124, metadata !DIExpression()), !dbg !10381
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %scsi_status.addr = alloca i16, align 2
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %srb = alloca %struct.ScsiReqBlk*, align 8
  %phase = alloca i16, align 2
  %scsi_intstatus = alloca i8, align 1
  %flags = alloca i64, align 8
  %dc395x_statev = alloca void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !10388, metadata !DIExpression()), !dbg !10389
  store i16 %scsi_status, i16* %scsi_status.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %scsi_status.addr, metadata !10390, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !10392, metadata !DIExpression()), !dbg !10393
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb, metadata !10394, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.declare(metadata i16* %phase, metadata !10396, metadata !DIExpression()), !dbg !10397
  call void @llvm.dbg.declare(metadata i8* %scsi_intstatus, metadata !10398, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10400, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.declare(metadata void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)** %dc395x_statev, metadata !10402, metadata !DIExpression()), !dbg !10406
  br label %do.body, !dbg !10407

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10408

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10409, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10412, metadata !DIExpression()), !dbg !10411
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10411
  %conv = zext i1 %cmp to i32, !dbg !10411
  store i32 1, i32* %tmp, align 4, !dbg !10411
  %0 = load i32, i32* %tmp, align 4, !dbg !10411
  br label %do.body2, !dbg !10413

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10414

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10415

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10417, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10421, metadata !DIExpression()), !dbg !10420
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10420
  %conv8 = zext i1 %cmp7 to i32, !dbg !10420
  store i32 1, i32* %tmp9, align 4, !dbg !10420
  %1 = load i32, i32* %tmp9, align 4, !dbg !10420
  %call = call i64 @arch_local_irq_save() #11, !dbg !10422
  store i64 %call, i64* %flags, align 8, !dbg !10422
  br label %do.end, !dbg !10422

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !10415

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !10414

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10423, !srcloc !10424
  br label %do.body12, !dbg !10423

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10425
  %scsi_host = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 0, !dbg !10425
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !10425
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 4, !dbg !10425
  %4 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !10425
  store %struct.spinlock* %4, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10426
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !10427
  %rlock.i = bitcast %union.anon.2* %6 to %struct.raw_spinlock*, !dbg !10427
  br label %do.end14, !dbg !10425

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !10423

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !10414

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10413

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10408

do.end18:                                         ; preds = %do.end17
  %7 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10428
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %7, i32 0, i32 1, !dbg !10428
  %8 = load i64, i64* %io_port_base, align 8, !dbg !10428
  %add = add i64 %8, 132, !dbg !10428
  %conv19 = trunc i64 %add to i32, !dbg !10428
  %call20 = call zeroext i8 @inb(i32 %conv19) #11, !dbg !10428
  store i8 %call20, i8* %scsi_intstatus, align 1, !dbg !10429
  %9 = load i16, i16* %scsi_status.addr, align 2, !dbg !10430
  %conv21 = zext i16 %9 to i32, !dbg !10430
  %and = and i32 %conv21, 8199, !dbg !10432
  %cmp22 = icmp eq i32 %and, 8194, !dbg !10433
  br i1 %cmp22, label %if.then, label %if.end, !dbg !10434

if.then:                                          ; preds = %do.end18
  %10 = load i16, i16* %scsi_status.addr, align 2, !dbg !10435
  %conv24 = zext i16 %10 to i32, !dbg !10435
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.68, i64 0, i64 0), i32 %conv24) #12, !dbg !10435
  br label %if.end, !dbg !10435

if.end:                                           ; preds = %if.then, %do.end18
  %11 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10436
  %selto_timer = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %11, i32 0, i32 9, !dbg !10438
  %call26 = call i32 @timer_pending(%struct.timer_list* %selto_timer) #11, !dbg !10439
  %tobool = icmp ne i32 %call26, 0, !dbg !10439
  br i1 %tobool, label %if.then27, label %if.end30, !dbg !10440

if.then27:                                        ; preds = %if.end
  %12 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10441
  %selto_timer28 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %12, i32 0, i32 9, !dbg !10442
  %call29 = call i32 @del_timer(%struct.timer_list* %selto_timer28) #11, !dbg !10443
  br label %if.end30, !dbg !10443

if.end30:                                         ; preds = %if.then27, %if.end
  %13 = load i8, i8* %scsi_intstatus, align 1, !dbg !10444
  %conv31 = zext i8 %13 to i32, !dbg !10444
  %and32 = and i32 %conv31, 48, !dbg !10446
  %tobool33 = icmp ne i32 %and32, 0, !dbg !10446
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !10447

if.then34:                                        ; preds = %if.end30
  %14 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10448
  call void @disconnect(%struct.AdapterCtlBlk* %14) #11, !dbg !10450
  br label %out_unlock, !dbg !10451

if.end35:                                         ; preds = %if.end30
  %15 = load i8, i8* %scsi_intstatus, align 1, !dbg !10452
  %conv36 = zext i8 %15 to i32, !dbg !10452
  %and37 = and i32 %conv36, 8, !dbg !10454
  %tobool38 = icmp ne i32 %and37, 0, !dbg !10454
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !10455

if.then39:                                        ; preds = %if.end35
  %16 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10456
  call void @reselect(%struct.AdapterCtlBlk* %16) #11, !dbg !10458
  br label %out_unlock, !dbg !10459

if.end40:                                         ; preds = %if.end35
  %17 = load i8, i8* %scsi_intstatus, align 1, !dbg !10460
  %conv41 = zext i8 %17 to i32, !dbg !10460
  %and42 = and i32 %conv41, 64, !dbg !10462
  %tobool43 = icmp ne i32 %and42, 0, !dbg !10462
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !10463

if.then44:                                        ; preds = %if.end40
  %call45 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.69, i64 0, i64 0)) #12, !dbg !10464
  br label %out_unlock, !dbg !10466

if.end46:                                         ; preds = %if.end40
  %18 = load i8, i8* %scsi_intstatus, align 1, !dbg !10467
  %conv47 = zext i8 %18 to i32, !dbg !10467
  %and48 = and i32 %conv47, 4, !dbg !10469
  %tobool49 = icmp ne i32 %and48, 0, !dbg !10469
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !10470

if.then50:                                        ; preds = %if.end46
  %19 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10471
  call void @scsi_reset_detect(%struct.AdapterCtlBlk* %19) #11, !dbg !10473
  br label %out_unlock, !dbg !10474

if.end51:                                         ; preds = %if.end46
  %20 = load i8, i8* %scsi_intstatus, align 1, !dbg !10475
  %conv52 = zext i8 %20 to i32, !dbg !10475
  %and53 = and i32 %conv52, 3, !dbg !10477
  %tobool54 = icmp ne i32 %and53, 0, !dbg !10477
  br i1 %tobool54, label %if.then55, label %if.end79, !dbg !10478

if.then55:                                        ; preds = %if.end51
  %21 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10479
  %active_dcb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %21, i32 0, i32 5, !dbg !10481
  %22 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %active_dcb, align 8, !dbg !10481
  store %struct.DeviceCtlBlk* %22, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10482
  %23 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10483
  %tobool56 = icmp ne %struct.DeviceCtlBlk* %23, null, !dbg !10483
  br i1 %tobool56, label %if.end61, label %if.then57, !dbg !10485

if.then57:                                        ; preds = %if.then55
  %24 = load i16, i16* %scsi_status.addr, align 2, !dbg !10486
  %conv58 = zext i16 %24 to i32, !dbg !10486
  %25 = load i8, i8* %scsi_intstatus, align 1, !dbg !10486
  %conv59 = zext i8 %25 to i32, !dbg !10486
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.70, i64 0, i64 0), i32 %conv58, i32 %conv59) #12, !dbg !10486
  br label %out_unlock, !dbg !10488

if.end61:                                         ; preds = %if.then55
  %26 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10489
  %active_srb = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %26, i32 0, i32 4, !dbg !10490
  %27 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %active_srb, align 8, !dbg !10490
  store %struct.ScsiReqBlk* %27, %struct.ScsiReqBlk** %srb, align 8, !dbg !10491
  %28 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10492
  %flag = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %28, i32 0, i32 16, !dbg !10494
  %29 = load i8, i8* %flag, align 1, !dbg !10494
  %conv62 = zext i8 %29 to i32, !dbg !10492
  %and63 = and i32 %conv62, 1, !dbg !10495
  %tobool64 = icmp ne i32 %and63, 0, !dbg !10495
  br i1 %tobool64, label %if.then65, label %if.end68, !dbg !10496

if.then65:                                        ; preds = %if.end61
  br label %do.body66, !dbg !10497

do.body66:                                        ; preds = %if.then65
  br label %do.end67, !dbg !10499

do.end67:                                         ; preds = %do.body66
  %30 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10501
  %31 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10502
  call void @enable_msgout_abort(%struct.AdapterCtlBlk* %30, %struct.ScsiReqBlk* %31) #11, !dbg !10503
  br label %if.end68, !dbg !10504

if.end68:                                         ; preds = %do.end67, %if.end61
  %32 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10505
  %scsi_phase = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %32, i32 0, i32 21, !dbg !10506
  %33 = load i8, i8* %scsi_phase, align 2, !dbg !10506
  %conv69 = zext i8 %33 to i16, !dbg !10507
  store i16 %conv69, i16* %phase, align 2, !dbg !10508
  %34 = load i16, i16* %phase, align 2, !dbg !10509
  %idxprom = zext i16 %34 to i64, !dbg !10510
  %arrayidx = getelementptr [8 x i8*], [8 x i8*]* @dc395x_scsi_phase0, i64 0, i64 %idxprom, !dbg !10510
  %35 = load i8*, i8** %arrayidx, align 8, !dbg !10510
  %36 = bitcast i8* %35 to void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)*, !dbg !10510
  store void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* %36, void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)** %dc395x_statev, align 8, !dbg !10511
  %37 = load void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)*, void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)** %dc395x_statev, align 8, !dbg !10512
  %38 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10513
  %39 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10514
  call void %37(%struct.AdapterCtlBlk* %38, %struct.ScsiReqBlk* %39, i16* %scsi_status.addr) #11, !dbg !10512
  %40 = load i16, i16* %scsi_status.addr, align 2, !dbg !10515
  %conv70 = zext i16 %40 to i32, !dbg !10515
  %and71 = and i32 %conv70, 7, !dbg !10516
  %conv72 = trunc i32 %and71 to i8, !dbg !10515
  %41 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10517
  %scsi_phase73 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %41, i32 0, i32 21, !dbg !10518
  store i8 %conv72, i8* %scsi_phase73, align 2, !dbg !10519
  %42 = load i16, i16* %scsi_status.addr, align 2, !dbg !10520
  %conv74 = zext i16 %42 to i32, !dbg !10521
  %and75 = and i32 %conv74, 7, !dbg !10522
  %conv76 = trunc i32 %and75 to i16, !dbg !10521
  store i16 %conv76, i16* %phase, align 2, !dbg !10523
  %43 = load i16, i16* %phase, align 2, !dbg !10524
  %idxprom77 = zext i16 %43 to i64, !dbg !10525
  %arrayidx78 = getelementptr [8 x i8*], [8 x i8*]* @dc395x_scsi_phase1, i64 0, i64 %idxprom77, !dbg !10525
  %44 = load i8*, i8** %arrayidx78, align 8, !dbg !10525
  %45 = bitcast i8* %44 to void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)*, !dbg !10525
  store void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)* %45, void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)** %dc395x_statev, align 8, !dbg !10526
  %46 = load void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)*, void (%struct.AdapterCtlBlk*, %struct.ScsiReqBlk*, i16*)** %dc395x_statev, align 8, !dbg !10527
  %47 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10528
  %48 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10529
  call void %46(%struct.AdapterCtlBlk* %47, %struct.ScsiReqBlk* %48, i16* %scsi_status.addr) #11, !dbg !10527
  br label %if.end79, !dbg !10530

if.end79:                                         ; preds = %if.end68, %if.end51
  br label %out_unlock, !dbg !10531

out_unlock:                                       ; preds = %if.end79, %if.then57, %if.then50, %if.then44, %if.then39, %if.then34
  call void @llvm.dbg.label(metadata !10532), !dbg !10533
  %49 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10534
  %scsi_host80 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %49, i32 0, i32 0, !dbg !10534
  %50 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host80, align 8, !dbg !10534
  %host_lock81 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %50, i32 0, i32 4, !dbg !10534
  %51 = load %struct.spinlock*, %struct.spinlock** %host_lock81, align 8, !dbg !10534
  %52 = load i64, i64* %flags, align 8, !dbg !10534
  store %struct.spinlock* %51, %struct.spinlock** %lock.addr.i82, align 8
  store i64 %52, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !216, metadata !6182, metadata !DIExpression()) #6, !dbg !10535
  call void @llvm.dbg.declare(metadata !216, metadata !6186, metadata !DIExpression()) #6, !dbg !10535
  store i32 1, i32* %tmp.i, align 4, !dbg !10535
  %53 = load i32, i32* %tmp.i, align 4, !dbg !10535
  call void @llvm.dbg.declare(metadata !216, metadata !6187, metadata !DIExpression()) #6, !dbg !10536
  call void @llvm.dbg.declare(metadata !216, metadata !6193, metadata !DIExpression()) #6, !dbg !10536
  store i32 1, i32* %tmp8.i, align 4, !dbg !10536
  %54 = load i32, i32* %tmp8.i, align 4, !dbg !10536
  %55 = load i64, i64* %flags.addr.i, align 8, !dbg !10537
  call void @arch_local_irq_restore(i64 %55) #13, !dbg !10537
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10538, !srcloc !6197
  %56 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i82, align 8, !dbg !10539
  %57 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %56, i32 0, i32 0, !dbg !10539
  %rlock.i83 = bitcast %union.anon.2* %57 to %struct.raw_spinlock*, !dbg !10539
  ret void, !dbg !10540
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @disconnect(%struct.AdapterCtlBlk* %acb) #2 !dbg !10541 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %srb = alloca %struct.ScsiReqBlk*, align 8
  %bval = alloca i8, align 1
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !10542, metadata !DIExpression()), !dbg !10543
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !10544, metadata !DIExpression()), !dbg !10545
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10546
  %active_dcb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 5, !dbg !10547
  %1 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %active_dcb, align 8, !dbg !10547
  store %struct.DeviceCtlBlk* %1, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10545
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb, metadata !10548, metadata !DIExpression()), !dbg !10549
  %2 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10550
  %tobool = icmp ne %struct.DeviceCtlBlk* %2, null, !dbg !10550
  br i1 %tobool, label %if.end, label %if.then, !dbg !10552

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.71, i64 0, i64 0)) #12, !dbg !10553
  call void @__const_udelay(i64 2147500) #11, !dbg !10555
  %3 = load volatile i64, i64* @jiffies, align 8, !dbg !10560
  %add = add i64 %3, 125, !dbg !10561
  %4 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10562
  %eeprom = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %4, i32 0, i32 27, !dbg !10563
  %delay_time = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %eeprom, i32 0, i32 9, !dbg !10564
  %5 = load i8, i8* %delay_time, align 4, !dbg !10564
  %conv = zext i8 %5 to i32, !dbg !10562
  %mul = mul i32 250, %conv, !dbg !10565
  %conv1 = sext i32 %mul to i64, !dbg !10566
  %add2 = add i64 %add, %conv1, !dbg !10567
  %6 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10568
  %last_reset = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %6, i32 0, i32 10, !dbg !10569
  store i64 %add2, i64* %last_reset, align 8, !dbg !10570
  %7 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10571
  call void @clear_fifo(%struct.AdapterCtlBlk* %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72, i64 0, i64 0)) #11, !dbg !10572
  %8 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10573
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %8, i32 0, i32 1, !dbg !10573
  %9 = load i64, i64* %io_port_base, align 8, !dbg !10573
  %add3 = add i64 %9, 128, !dbg !10573
  %conv4 = trunc i64 %add3 to i32, !dbg !10573
  call void @outw(i16 zeroext 1, i32 %conv4) #11, !dbg !10573
  br label %if.end94, !dbg !10574

if.end:                                           ; preds = %entry
  %10 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10575
  %active_srb = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %10, i32 0, i32 4, !dbg !10576
  %11 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %active_srb, align 8, !dbg !10576
  store %struct.ScsiReqBlk* %11, %struct.ScsiReqBlk** %srb, align 8, !dbg !10577
  %12 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10578
  %active_dcb5 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %12, i32 0, i32 5, !dbg !10579
  store %struct.DeviceCtlBlk* null, %struct.DeviceCtlBlk** %active_dcb5, align 8, !dbg !10580
  br label %do.body, !dbg !10581

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !10582

do.end:                                           ; preds = %do.body
  %13 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10584
  %scsi_phase = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %13, i32 0, i32 21, !dbg !10585
  store i8 5, i8* %scsi_phase, align 2, !dbg !10586
  %14 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10587
  call void @clear_fifo(%struct.AdapterCtlBlk* %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.73, i64 0, i64 0)) #11, !dbg !10588
  %15 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10589
  %io_port_base6 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %15, i32 0, i32 1, !dbg !10589
  %16 = load i64, i64* %io_port_base6, align 8, !dbg !10589
  %add7 = add i64 %16, 128, !dbg !10589
  %conv8 = trunc i64 %add7 to i32, !dbg !10589
  call void @outw(i16 zeroext 1, i32 %conv8) #11, !dbg !10589
  %17 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10590
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %17, i32 0, i32 10, !dbg !10592
  %18 = load i16, i16* %state, align 8, !dbg !10592
  %conv9 = zext i16 %18 to i32, !dbg !10590
  %and = and i32 %conv9, 32768, !dbg !10593
  %tobool10 = icmp ne i32 %and, 0, !dbg !10593
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !10594

if.then11:                                        ; preds = %do.end
  %19 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10595
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %19, i32 0, i32 7, !dbg !10595
  %20 = load i8, i8* %target_id, align 2, !dbg !10595
  %conv12 = zext i8 %20 to i32, !dbg !10595
  %21 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10595
  %target_lun = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %21, i32 0, i32 8, !dbg !10595
  %22 = load i8, i8* %target_lun, align 1, !dbg !10595
  %conv13 = zext i8 %22 to i32, !dbg !10595
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.74, i64 0, i64 0), i32 %conv12, i32 %conv13) #12, !dbg !10595
  %23 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10597
  %state15 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %23, i32 0, i32 10, !dbg !10598
  store i16 0, i16* %state15, align 8, !dbg !10599
  %24 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10600
  call void @waiting_process_next(%struct.AdapterCtlBlk* %24) #11, !dbg !10601
  br label %if.end94, !dbg !10602

if.else:                                          ; preds = %do.end
  %25 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10603
  %state16 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %25, i32 0, i32 10, !dbg !10605
  %26 = load i16, i16* %state16, align 8, !dbg !10605
  %conv17 = zext i16 %26 to i32, !dbg !10603
  %and18 = and i32 %conv17, 4096, !dbg !10606
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10606
  br i1 %tobool19, label %if.then20, label %if.else28, !dbg !10607

if.then20:                                        ; preds = %if.else
  %27 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10608
  %flag = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %27, i32 0, i32 16, !dbg !10610
  %28 = load i8, i8* %flag, align 1, !dbg !10611
  %conv21 = zext i8 %28 to i32, !dbg !10611
  %and22 = and i32 %conv21, -2, !dbg !10611
  %conv23 = trunc i32 %and22 to i8, !dbg !10611
  store i8 %conv23, i8* %flag, align 1, !dbg !10611
  %29 = load volatile i64, i64* @jiffies, align 8, !dbg !10612
  %add24 = add i64 %29, 125, !dbg !10613
  %add25 = add i64 %add24, 1, !dbg !10614
  %30 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10615
  %last_reset26 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %30, i32 0, i32 10, !dbg !10616
  store i64 %add25, i64* %last_reset26, align 8, !dbg !10617
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.75, i64 0, i64 0)) #12, !dbg !10618
  %31 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10619
  %32 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10620
  %cmd = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %32, i32 0, i32 2, !dbg !10621
  %33 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10621
  call void @doing_srb_done(%struct.AdapterCtlBlk* %31, i8 zeroext 5, %struct.scsi_cmnd* %33, i8 zeroext 1) #11, !dbg !10622
  %34 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10623
  call void @waiting_process_next(%struct.AdapterCtlBlk* %34) #11, !dbg !10624
  br label %if.end93, !dbg !10625

if.else28:                                        ; preds = %if.else
  %35 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10626
  %state29 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %35, i32 0, i32 10, !dbg !10629
  %36 = load i16, i16* %state29, align 8, !dbg !10629
  %conv30 = zext i16 %36 to i32, !dbg !10626
  %and31 = and i32 %conv30, 68, !dbg !10630
  %tobool32 = icmp ne i32 %and31, 0, !dbg !10630
  br i1 %tobool32, label %if.then37, label %lor.lhs.false, !dbg !10631

lor.lhs.false:                                    ; preds = %if.else28
  %37 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10632
  %state33 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %37, i32 0, i32 10, !dbg !10633
  %38 = load i16, i16* %state33, align 8, !dbg !10633
  %conv34 = zext i16 %38 to i32, !dbg !10632
  %and35 = and i32 %conv34, 2176, !dbg !10634
  %tobool36 = icmp ne i32 %and35, 0, !dbg !10634
  br i1 %tobool36, label %if.else64, label %if.then37, !dbg !10635

if.then37:                                        ; preds = %lor.lhs.false, %if.else28
  %39 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10636
  %state38 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %39, i32 0, i32 10, !dbg !10639
  %40 = load i16, i16* %state38, align 8, !dbg !10639
  %conv39 = zext i16 %40 to i32, !dbg !10636
  %cmp = icmp ne i32 %conv39, 64, !dbg !10640
  br i1 %cmp, label %land.lhs.true, label %if.else49, !dbg !10641

land.lhs.true:                                    ; preds = %if.then37
  %41 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10642
  %state41 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %41, i32 0, i32 10, !dbg !10643
  %42 = load i16, i16* %state41, align 8, !dbg !10643
  %conv42 = zext i16 %42 to i32, !dbg !10642
  %cmp43 = icmp ne i32 %conv42, 4, !dbg !10644
  br i1 %cmp43, label %if.then45, label %if.else49, !dbg !10645

if.then45:                                        ; preds = %land.lhs.true
  %43 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10646
  %state46 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %43, i32 0, i32 10, !dbg !10648
  store i16 2, i16* %state46, align 8, !dbg !10649
  %44 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10650
  %cmd47 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %44, i32 0, i32 2, !dbg !10650
  %45 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd47, align 8, !dbg !10650
  %call48 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.76, i64 0, i64 0), %struct.scsi_cmnd* %45) #12, !dbg !10650
  %46 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10651
  %target_status = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %46, i32 0, i32 14, !dbg !10652
  store i8 -1, i8* %target_status, align 1, !dbg !10653
  br label %disc1, !dbg !10654

if.else49:                                        ; preds = %land.lhs.true, %if.then37
  br label %do.body50, !dbg !10655

do.body50:                                        ; preds = %if.else49
  br label %do.end51, !dbg !10657

do.end51:                                         ; preds = %do.body50
  %47 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10659
  %retry_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %47, i32 0, i32 19, !dbg !10661
  %48 = load i8, i8* %retry_count, align 4, !dbg !10662
  %inc = add i8 %48, 1, !dbg !10662
  store i8 %inc, i8* %retry_count, align 4, !dbg !10662
  %conv52 = zext i8 %48 to i32, !dbg !10659
  %cmp53 = icmp sgt i32 %conv52, 3, !dbg !10663
  br i1 %cmp53, label %if.then58, label %lor.lhs.false55, !dbg !10664

lor.lhs.false55:                                  ; preds = %do.end51
  %49 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10665
  %scan_devices = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %49, i32 0, i32 19, !dbg !10666
  %50 = load i8, i8* %scan_devices, align 1, !dbg !10666
  %conv56 = zext i8 %50 to i32, !dbg !10665
  %tobool57 = icmp ne i32 %conv56, 0, !dbg !10665
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !10667

if.then58:                                        ; preds = %lor.lhs.false55, %do.end51
  %51 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10668
  %target_status59 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %51, i32 0, i32 14, !dbg !10670
  store i8 -1, i8* %target_status59, align 1, !dbg !10671
  br label %disc1, !dbg !10672

if.end60:                                         ; preds = %lor.lhs.false55
  %52 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10673
  %53 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10674
  call void @free_tag(%struct.DeviceCtlBlk* %52, %struct.ScsiReqBlk* %53) #11, !dbg !10675
  %54 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10676
  %list = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %54, i32 0, i32 0, !dbg !10677
  %55 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10678
  %srb_waiting_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %55, i32 0, i32 3, !dbg !10679
  call void @list_move(%struct.list_head* %list, %struct.list_head* %srb_waiting_list) #11, !dbg !10680
  br label %do.body61, !dbg !10681

do.body61:                                        ; preds = %if.end60
  br label %do.end62, !dbg !10682

do.end62:                                         ; preds = %do.body61
  %56 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10684
  call void @waiting_set_timer(%struct.AdapterCtlBlk* %56, i64 12) #11, !dbg !10685
  br label %if.end63

if.end63:                                         ; preds = %do.end62
  br label %if.end92, !dbg !10686

if.else64:                                        ; preds = %lor.lhs.false
  %57 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10687
  %state65 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %57, i32 0, i32 10, !dbg !10689
  %58 = load i16, i16* %state65, align 8, !dbg !10689
  %conv66 = zext i16 %58 to i32, !dbg !10687
  %and67 = and i32 %conv66, 128, !dbg !10690
  %tobool68 = icmp ne i32 %and67, 0, !dbg !10690
  br i1 %tobool68, label %if.then69, label %if.else82, !dbg !10691

if.then69:                                        ; preds = %if.else64
  call void @llvm.dbg.declare(metadata i8* %bval, metadata !10692, metadata !DIExpression()), !dbg !10694
  %59 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10695
  %io_port_base70 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %59, i32 0, i32 1, !dbg !10695
  %60 = load i64, i64* %io_port_base70, align 8, !dbg !10695
  %add71 = add i64 %60, 131, !dbg !10695
  %conv72 = trunc i64 %add71 to i32, !dbg !10695
  %call73 = call zeroext i8 @inb(i32 %conv72) #11, !dbg !10695
  store i8 %call73, i8* %bval, align 1, !dbg !10694
  %61 = load i8, i8* %bval, align 1, !dbg !10696
  %conv74 = zext i8 %61 to i32, !dbg !10696
  %and75 = and i32 %conv74, 64, !dbg !10698
  %tobool76 = icmp ne i32 %and75, 0, !dbg !10698
  br i1 %tobool76, label %if.then77, label %if.else80, !dbg !10699

if.then77:                                        ; preds = %if.then69
  br label %do.body78, !dbg !10700

do.body78:                                        ; preds = %if.then77
  br label %do.end79, !dbg !10702

do.end79:                                         ; preds = %do.body78
  br label %if.end81, !dbg !10704

if.else80:                                        ; preds = %if.then69
  %62 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10705
  call void @waiting_process_next(%struct.AdapterCtlBlk* %62) #11, !dbg !10706
  br label %if.end81

if.end81:                                         ; preds = %if.else80, %do.end79
  br label %if.end91, !dbg !10707

if.else82:                                        ; preds = %if.else64
  %63 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10708
  %state83 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %63, i32 0, i32 10, !dbg !10710
  %64 = load i16, i16* %state83, align 8, !dbg !10710
  %conv84 = zext i16 %64 to i32, !dbg !10708
  %and85 = and i32 %conv84, 2048, !dbg !10711
  %tobool86 = icmp ne i32 %and85, 0, !dbg !10711
  br i1 %tobool86, label %if.then87, label %if.end90, !dbg !10712

if.then87:                                        ; preds = %if.else82
  br label %disc1, !dbg !10713

disc1:                                            ; preds = %if.then87, %if.then58, %if.then45
  call void @llvm.dbg.label(metadata !10714), !dbg !10716
  %65 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10717
  %66 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10718
  call void @free_tag(%struct.DeviceCtlBlk* %65, %struct.ScsiReqBlk* %66) #11, !dbg !10719
  %67 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10720
  %active_srb88 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %67, i32 0, i32 4, !dbg !10721
  store %struct.ScsiReqBlk* null, %struct.ScsiReqBlk** %active_srb88, align 8, !dbg !10722
  %68 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10723
  %state89 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %68, i32 0, i32 10, !dbg !10724
  store i16 0, i16* %state89, align 8, !dbg !10725
  %69 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10726
  %70 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10727
  %71 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10728
  call void @srb_done(%struct.AdapterCtlBlk* %69, %struct.DeviceCtlBlk* %70, %struct.ScsiReqBlk* %71) #11, !dbg !10729
  br label %if.end90, !dbg !10730

if.end90:                                         ; preds = %disc1, %if.else82
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.end81
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.end63
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then20
  br label %if.end94

if.end94:                                         ; preds = %if.then, %if.end93, %if.then11
  ret void, !dbg !10731
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reselect(%struct.AdapterCtlBlk* %acb) #2 !dbg !10732 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %srb = alloca %struct.ScsiReqBlk*, align 8
  %rsel_tar_lun_id = alloca i16, align 2
  %id = alloca i8, align 1
  %lun = alloca i8, align 1
  %arblostflag = alloca i8, align 1
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !10733, metadata !DIExpression()), !dbg !10734
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !10735, metadata !DIExpression()), !dbg !10736
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10737
  %active_dcb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 5, !dbg !10738
  %1 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %active_dcb, align 8, !dbg !10738
  store %struct.DeviceCtlBlk* %1, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10736
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb, metadata !10739, metadata !DIExpression()), !dbg !10740
  store %struct.ScsiReqBlk* null, %struct.ScsiReqBlk** %srb, align 8, !dbg !10740
  call void @llvm.dbg.declare(metadata i16* %rsel_tar_lun_id, metadata !10741, metadata !DIExpression()), !dbg !10742
  call void @llvm.dbg.declare(metadata i8* %id, metadata !10743, metadata !DIExpression()), !dbg !10744
  call void @llvm.dbg.declare(metadata i8* %lun, metadata !10745, metadata !DIExpression()), !dbg !10746
  call void @llvm.dbg.declare(metadata i8* %arblostflag, metadata !10747, metadata !DIExpression()), !dbg !10748
  store i8 0, i8* %arblostflag, align 1, !dbg !10748
  br label %do.body, !dbg !10749

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10750

do.end:                                           ; preds = %do.body
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10752
  call void @clear_fifo(%struct.AdapterCtlBlk* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.80, i64 0, i64 0)) #11, !dbg !10753
  %3 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10754
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %3, i32 0, i32 1, !dbg !10754
  %4 = load i64, i64* %io_port_base, align 8, !dbg !10754
  %add = add i64 %4, 134, !dbg !10754
  %conv = trunc i64 %add to i32, !dbg !10754
  %call = call zeroext i16 @inw(i32 %conv) #11, !dbg !10754
  store i16 %call, i16* %rsel_tar_lun_id, align 2, !dbg !10755
  %5 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10756
  %tobool = icmp ne %struct.DeviceCtlBlk* %5, null, !dbg !10756
  br i1 %tobool, label %if.then, label %if.end12, !dbg !10758

if.then:                                          ; preds = %do.end
  %6 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10759
  %active_srb = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %6, i32 0, i32 4, !dbg !10761
  %7 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %active_srb, align 8, !dbg !10761
  store %struct.ScsiReqBlk* %7, %struct.ScsiReqBlk** %srb, align 8, !dbg !10762
  %8 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10763
  %tobool1 = icmp ne %struct.ScsiReqBlk* %8, null, !dbg !10763
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !10765

if.then2:                                         ; preds = %if.then
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.81, i64 0, i64 0)) #12, !dbg !10766
  %9 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10768
  %io_port_base4 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %9, i32 0, i32 1, !dbg !10768
  %10 = load i64, i64* %io_port_base4, align 8, !dbg !10768
  %add5 = add i64 %10, 128, !dbg !10768
  %conv6 = trunc i64 %add5 to i32, !dbg !10768
  call void @outw(i16 zeroext 2, i32 %conv6) #11, !dbg !10768
  br label %return, !dbg !10769

if.end:                                           ; preds = %if.then
  %11 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10770
  %scan_devices = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %11, i32 0, i32 19, !dbg !10772
  %12 = load i8, i8* %scan_devices, align 1, !dbg !10772
  %tobool7 = icmp ne i8 %12, 0, !dbg !10770
  br i1 %tobool7, label %if.end11, label %if.then8, !dbg !10773

if.then8:                                         ; preds = %if.end
  br label %do.body9, !dbg !10774

do.body9:                                         ; preds = %if.then8
  br label %do.end10, !dbg !10776

do.end10:                                         ; preds = %do.body9
  store i8 1, i8* %arblostflag, align 1, !dbg !10778
  %13 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10779
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %13, i32 0, i32 10, !dbg !10780
  store i16 2, i16* %state, align 8, !dbg !10781
  %14 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10782
  %15 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10783
  call void @free_tag(%struct.DeviceCtlBlk* %14, %struct.ScsiReqBlk* %15) #11, !dbg !10784
  %16 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10785
  %list = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %16, i32 0, i32 0, !dbg !10786
  %17 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10787
  %srb_waiting_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %17, i32 0, i32 3, !dbg !10788
  call void @list_move(%struct.list_head* %list, %struct.list_head* %srb_waiting_list) #11, !dbg !10789
  %18 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10790
  call void @waiting_set_timer(%struct.AdapterCtlBlk* %18, i64 12) #11, !dbg !10791
  br label %if.end11, !dbg !10792

if.end11:                                         ; preds = %do.end10, %if.end
  br label %if.end12, !dbg !10793

if.end12:                                         ; preds = %if.end11, %do.end
  %19 = load i16, i16* %rsel_tar_lun_id, align 2, !dbg !10794
  %conv13 = zext i16 %19 to i32, !dbg !10794
  %and = and i32 %conv13, 32768, !dbg !10796
  %tobool14 = icmp ne i32 %and, 0, !dbg !10796
  br i1 %tobool14, label %if.end18, label %if.then15, !dbg !10797

if.then15:                                        ; preds = %if.end12
  %20 = load i16, i16* %rsel_tar_lun_id, align 2, !dbg !10798
  %conv16 = zext i16 %20 to i32, !dbg !10798
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.82, i64 0, i64 0), i32 %conv16) #12, !dbg !10798
  br label %if.end18, !dbg !10798

if.end18:                                         ; preds = %if.then15, %if.end12
  %21 = load i16, i16* %rsel_tar_lun_id, align 2, !dbg !10799
  %conv19 = zext i16 %21 to i32, !dbg !10799
  %and20 = and i32 %conv19, 255, !dbg !10800
  %conv21 = trunc i32 %and20 to i8, !dbg !10799
  store i8 %conv21, i8* %id, align 1, !dbg !10801
  %22 = load i16, i16* %rsel_tar_lun_id, align 2, !dbg !10802
  %conv22 = zext i16 %22 to i32, !dbg !10802
  %shr = ashr i32 %conv22, 8, !dbg !10803
  %and23 = and i32 %shr, 7, !dbg !10804
  %conv24 = trunc i32 %and23 to i8, !dbg !10805
  store i8 %conv24, i8* %lun, align 1, !dbg !10806
  %23 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10807
  %24 = load i8, i8* %id, align 1, !dbg !10808
  %25 = load i8, i8* %lun, align 1, !dbg !10809
  %call25 = call %struct.DeviceCtlBlk* @find_dcb(%struct.AdapterCtlBlk* %23, i8 zeroext %24, i8 zeroext %25) #11, !dbg !10810
  store %struct.DeviceCtlBlk* %call25, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10811
  %26 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10812
  %tobool26 = icmp ne %struct.DeviceCtlBlk* %26, null, !dbg !10812
  br i1 %tobool26, label %if.end34, label %if.then27, !dbg !10814

if.then27:                                        ; preds = %if.end18
  %27 = load i8, i8* %id, align 1, !dbg !10815
  %conv28 = zext i8 %27 to i32, !dbg !10815
  %28 = load i8, i8* %lun, align 1, !dbg !10815
  %conv29 = zext i8 %28 to i32, !dbg !10815
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.83, i64 0, i64 0), i32 %conv28, i32 %conv29) #12, !dbg !10815
  %29 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10817
  %io_port_base31 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %29, i32 0, i32 1, !dbg !10817
  %30 = load i64, i64* %io_port_base31, align 8, !dbg !10817
  %add32 = add i64 %30, 128, !dbg !10817
  %conv33 = trunc i64 %add32 to i32, !dbg !10817
  call void @outw(i16 zeroext 2, i32 %conv33) #11, !dbg !10817
  br label %return, !dbg !10818

if.end34:                                         ; preds = %if.end18
  %31 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10819
  %32 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10820
  %active_dcb35 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %32, i32 0, i32 5, !dbg !10821
  store %struct.DeviceCtlBlk* %31, %struct.DeviceCtlBlk** %active_dcb35, align 8, !dbg !10822
  %33 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10823
  %dev_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %33, i32 0, i32 10, !dbg !10825
  %34 = load i8, i8* %dev_mode, align 1, !dbg !10825
  %conv36 = zext i8 %34 to i32, !dbg !10823
  %and37 = and i32 %conv36, 4, !dbg !10826
  %tobool38 = icmp ne i32 %and37, 0, !dbg !10826
  br i1 %tobool38, label %if.end43, label %if.then39, !dbg !10827

if.then39:                                        ; preds = %if.end34
  %35 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10828
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %35, i32 0, i32 7, !dbg !10828
  %36 = load i8, i8* %target_id, align 2, !dbg !10828
  %conv40 = zext i8 %36 to i32, !dbg !10828
  %37 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10828
  %target_lun = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %37, i32 0, i32 8, !dbg !10828
  %38 = load i8, i8* %target_lun, align 1, !dbg !10828
  %conv41 = zext i8 %38 to i32, !dbg !10828
  %call42 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.84, i64 0, i64 0), i32 %conv40, i32 %conv41) #12, !dbg !10828
  br label %if.end43, !dbg !10828

if.end43:                                         ; preds = %if.then39, %if.end34
  %39 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10829
  %sync_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %39, i32 0, i32 12, !dbg !10831
  %40 = load i8, i8* %sync_mode, align 1, !dbg !10831
  %conv44 = zext i8 %40 to i32, !dbg !10829
  %and45 = and i32 %conv44, 32, !dbg !10832
  %tobool46 = icmp ne i32 %and45, 0, !dbg !10832
  br i1 %tobool46, label %if.then47, label %if.else, !dbg !10833

if.then47:                                        ; preds = %if.end43
  %41 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10834
  %tmp_srb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %41, i32 0, i32 7, !dbg !10836
  %42 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp_srb, align 8, !dbg !10836
  store %struct.ScsiReqBlk* %42, %struct.ScsiReqBlk** %srb, align 8, !dbg !10837
  %43 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10838
  %44 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10839
  %active_srb48 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %44, i32 0, i32 4, !dbg !10840
  store %struct.ScsiReqBlk* %43, %struct.ScsiReqBlk** %active_srb48, align 8, !dbg !10841
  br label %if.end73, !dbg !10842

if.else:                                          ; preds = %if.end43
  %45 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10843
  %active_srb49 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %45, i32 0, i32 4, !dbg !10845
  %46 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %active_srb49, align 8, !dbg !10845
  store %struct.ScsiReqBlk* %46, %struct.ScsiReqBlk** %srb, align 8, !dbg !10846
  %47 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10847
  %tobool50 = icmp ne %struct.ScsiReqBlk* %47, null, !dbg !10847
  br i1 %tobool50, label %lor.lhs.false, label %if.then55, !dbg !10849

lor.lhs.false:                                    ; preds = %if.else
  %48 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10850
  %state51 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %48, i32 0, i32 10, !dbg !10851
  %49 = load i16, i16* %state51, align 8, !dbg !10851
  %conv52 = zext i16 %49 to i32, !dbg !10850
  %and53 = and i32 %conv52, 128, !dbg !10852
  %tobool54 = icmp ne i32 %and53, 0, !dbg !10852
  br i1 %tobool54, label %if.else64, label %if.then55, !dbg !10853

if.then55:                                        ; preds = %lor.lhs.false, %if.else
  %50 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10854
  %target_id56 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %50, i32 0, i32 7, !dbg !10854
  %51 = load i8, i8* %target_id56, align 2, !dbg !10854
  %conv57 = zext i8 %51 to i32, !dbg !10854
  %52 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10854
  %target_lun58 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %52, i32 0, i32 8, !dbg !10854
  %53 = load i8, i8* %target_lun58, align 1, !dbg !10854
  %conv59 = zext i8 %53 to i32, !dbg !10854
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.85, i64 0, i64 0), i32 %conv57, i32 %conv59) #12, !dbg !10854
  %54 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10856
  %tmp_srb61 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %54, i32 0, i32 7, !dbg !10857
  %55 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp_srb61, align 8, !dbg !10857
  store %struct.ScsiReqBlk* %55, %struct.ScsiReqBlk** %srb, align 8, !dbg !10858
  %56 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10859
  %state62 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %56, i32 0, i32 10, !dbg !10860
  store i16 -32768, i16* %state62, align 8, !dbg !10861
  %57 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10862
  %58 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10863
  %active_srb63 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %58, i32 0, i32 4, !dbg !10864
  store %struct.ScsiReqBlk* %57, %struct.ScsiReqBlk** %active_srb63, align 8, !dbg !10865
  %59 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10866
  %60 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10867
  call void @enable_msgout_abort(%struct.AdapterCtlBlk* %59, %struct.ScsiReqBlk* %60) #11, !dbg !10868
  br label %if.end72, !dbg !10869

if.else64:                                        ; preds = %lor.lhs.false
  %61 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10870
  %flag = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %61, i32 0, i32 16, !dbg !10873
  %62 = load i8, i8* %flag, align 1, !dbg !10873
  %conv65 = zext i8 %62 to i32, !dbg !10870
  %and66 = and i32 %conv65, 1, !dbg !10874
  %tobool67 = icmp ne i32 %and66, 0, !dbg !10874
  br i1 %tobool67, label %if.then68, label %if.else69, !dbg !10875

if.then68:                                        ; preds = %if.else64
  %63 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10876
  %64 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10878
  call void @enable_msgout_abort(%struct.AdapterCtlBlk* %63, %struct.ScsiReqBlk* %64) #11, !dbg !10879
  br label %if.end71, !dbg !10880

if.else69:                                        ; preds = %if.else64
  %65 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10881
  %state70 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %65, i32 0, i32 10, !dbg !10882
  store i16 256, i16* %state70, align 8, !dbg !10883
  br label %if.end71

if.end71:                                         ; preds = %if.else69, %if.then68
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then55
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then47
  %66 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !10884
  %scsi_phase = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %66, i32 0, i32 21, !dbg !10885
  store i8 5, i8* %scsi_phase, align 2, !dbg !10886
  br label %do.body74, !dbg !10887

do.body74:                                        ; preds = %if.end73
  br label %do.end75, !dbg !10888

do.end75:                                         ; preds = %do.body74
  %67 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10890
  %scsi_host = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %67, i32 0, i32 0, !dbg !10890
  %68 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !10890
  %this_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %68, i32 0, i32 24, !dbg !10890
  %69 = load i32, i32* %this_id, align 8, !dbg !10890
  %conv76 = trunc i32 %69 to i8, !dbg !10890
  %70 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10890
  %io_port_base77 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %70, i32 0, i32 1, !dbg !10890
  %71 = load i64, i64* %io_port_base77, align 8, !dbg !10890
  %add78 = add i64 %71, 135, !dbg !10890
  %conv79 = trunc i64 %add78 to i32, !dbg !10890
  call void @outb(i8 zeroext %conv76, i32 %conv79) #11, !dbg !10890
  %72 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10891
  %target_id80 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %72, i32 0, i32 7, !dbg !10891
  %73 = load i8, i8* %target_id80, align 2, !dbg !10891
  %74 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10891
  %io_port_base81 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %74, i32 0, i32 1, !dbg !10891
  %75 = load i64, i64* %io_port_base81, align 8, !dbg !10891
  %add82 = add i64 %75, 134, !dbg !10891
  %conv83 = trunc i64 %add82 to i32, !dbg !10891
  call void @outb(i8 zeroext %73, i32 %conv83) #11, !dbg !10891
  %76 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10892
  %sync_offset = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %76, i32 0, i32 15, !dbg !10892
  %77 = load i8, i8* %sync_offset, align 2, !dbg !10892
  %78 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10892
  %io_port_base84 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %78, i32 0, i32 1, !dbg !10892
  %79 = load i64, i64* %io_port_base84, align 8, !dbg !10892
  %add85 = add i64 %79, 132, !dbg !10892
  %conv86 = trunc i64 %add85 to i32, !dbg !10892
  call void @outb(i8 zeroext %77, i32 %conv86) #11, !dbg !10892
  %80 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !10893
  %sync_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %80, i32 0, i32 14, !dbg !10893
  %81 = load i8, i8* %sync_period, align 1, !dbg !10893
  %82 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10893
  %io_port_base87 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %82, i32 0, i32 1, !dbg !10893
  %83 = load i64, i64* %io_port_base87, align 8, !dbg !10893
  %add88 = add i64 %83, 133, !dbg !10893
  %conv89 = trunc i64 %add88 to i32, !dbg !10893
  call void @outb(i8 zeroext %81, i32 %conv89) #11, !dbg !10893
  %84 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10894
  %io_port_base90 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %84, i32 0, i32 1, !dbg !10894
  %85 = load i64, i64* %io_port_base90, align 8, !dbg !10894
  %add91 = add i64 %85, 128, !dbg !10894
  %conv92 = trunc i64 %add91 to i32, !dbg !10894
  call void @outw(i16 zeroext 2, i32 %conv92) #11, !dbg !10894
  %86 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10895
  %io_port_base93 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %86, i32 0, i32 1, !dbg !10895
  %87 = load i64, i64* %io_port_base93, align 8, !dbg !10895
  %add94 = add i64 %87, 144, !dbg !10895
  %conv95 = trunc i64 %add94 to i32, !dbg !10895
  call void @outb(i8 zeroext -40, i32 %conv95) #11, !dbg !10895
  br label %return, !dbg !10896

return:                                           ; preds = %do.end75, %if.then27, %if.then2
  ret void, !dbg !10896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_reset_detect(%struct.AdapterCtlBlk* %acb) #2 !dbg !10897 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !10898, metadata !DIExpression()), !dbg !10899
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10900
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.86, i64 0, i64 0), %struct.AdapterCtlBlk* %0) #12, !dbg !10900
  %1 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10901
  %waiting_timer = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %1, i32 0, i32 8, !dbg !10903
  %call1 = call i32 @timer_pending(%struct.timer_list* %waiting_timer) #11, !dbg !10904
  %tobool = icmp ne i32 %call1, 0, !dbg !10904
  br i1 %tobool, label %if.then, label %if.end, !dbg !10905

if.then:                                          ; preds = %entry
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10906
  %waiting_timer2 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 8, !dbg !10907
  %call3 = call i32 @del_timer(%struct.timer_list* %waiting_timer2) #11, !dbg !10908
  br label %if.end, !dbg !10908

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10909
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %3, i32 0, i32 1, !dbg !10909
  %4 = load i64, i64* %io_port_base, align 8, !dbg !10909
  %add = add i64 %4, 128, !dbg !10909
  %conv = trunc i64 %add to i32, !dbg !10909
  call void @outb(i8 zeroext 16, i32 %conv) #11, !dbg !10909
  %5 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10910
  %io_port_base4 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %5, i32 0, i32 1, !dbg !10910
  %6 = load i64, i64* %io_port_base4, align 8, !dbg !10910
  %add5 = add i64 %6, 161, !dbg !10910
  %conv6 = trunc i64 %add5 to i32, !dbg !10910
  call void @outb(i8 zeroext 16, i32 %conv6) #11, !dbg !10910
  call void @__const_udelay(i64 2147500) #11, !dbg !10911
  %7 = load volatile i64, i64* @jiffies, align 8, !dbg !10916
  %add7 = add i64 %7, 625, !dbg !10917
  %8 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10918
  %eeprom = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %8, i32 0, i32 27, !dbg !10919
  %delay_time = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %eeprom, i32 0, i32 9, !dbg !10920
  %9 = load i8, i8* %delay_time, align 4, !dbg !10920
  %conv8 = zext i8 %9 to i32, !dbg !10918
  %mul = mul i32 250, %conv8, !dbg !10921
  %conv9 = sext i32 %mul to i64, !dbg !10922
  %add10 = add i64 %add7, %conv9, !dbg !10923
  %10 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10924
  %last_reset = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %10, i32 0, i32 10, !dbg !10925
  store i64 %add10, i64* %last_reset, align 8, !dbg !10926
  %11 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10927
  call void @clear_fifo(%struct.AdapterCtlBlk* %11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.87, i64 0, i64 0)) #11, !dbg !10928
  %12 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10929
  call void @set_basic_config(%struct.AdapterCtlBlk* %12) #11, !dbg !10930
  %13 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10931
  %acb_flag = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %13, i32 0, i32 15, !dbg !10933
  %14 = load i8, i8* %acb_flag, align 1, !dbg !10933
  %conv11 = zext i8 %14 to i32, !dbg !10931
  %and = and i32 %conv11, 1, !dbg !10934
  %tobool12 = icmp ne i32 %and, 0, !dbg !10934
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !10935

if.then13:                                        ; preds = %if.end
  %15 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10936
  %acb_flag14 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %15, i32 0, i32 15, !dbg !10938
  %16 = load i8, i8* %acb_flag14, align 1, !dbg !10939
  %conv15 = zext i8 %16 to i32, !dbg !10939
  %or = or i32 %conv15, 4, !dbg !10939
  %conv16 = trunc i32 %or to i8, !dbg !10939
  store i8 %conv16, i8* %acb_flag14, align 1, !dbg !10939
  br label %if.end22, !dbg !10940

if.else:                                          ; preds = %if.end
  %17 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10941
  %acb_flag17 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %17, i32 0, i32 15, !dbg !10943
  %18 = load i8, i8* %acb_flag17, align 1, !dbg !10944
  %conv18 = zext i8 %18 to i32, !dbg !10944
  %or19 = or i32 %conv18, 2, !dbg !10944
  %conv20 = trunc i32 %or19 to i8, !dbg !10944
  store i8 %conv20, i8* %acb_flag17, align 1, !dbg !10944
  %19 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10945
  call void @reset_dev_param(%struct.AdapterCtlBlk* %19) #11, !dbg !10946
  %20 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10947
  call void @doing_srb_done(%struct.AdapterCtlBlk* %20, i8 zeroext 8, %struct.scsi_cmnd* null, i8 zeroext 1) #11, !dbg !10948
  %21 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10949
  %active_dcb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %21, i32 0, i32 5, !dbg !10950
  store %struct.DeviceCtlBlk* null, %struct.DeviceCtlBlk** %active_dcb, align 8, !dbg !10951
  %22 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10952
  %acb_flag21 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %22, i32 0, i32 15, !dbg !10953
  store i8 0, i8* %acb_flag21, align 1, !dbg !10954
  %23 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10955
  call void @waiting_process_next(%struct.AdapterCtlBlk* %23) #11, !dbg !10956
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then13
  ret void, !dbg !10957
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @enable_msgout_abort(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb) #2 !dbg !10958 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !10959, metadata !DIExpression()), !dbg !10960
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !10961, metadata !DIExpression()), !dbg !10962
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !10963
  %msgout_buf = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 12, !dbg !10964
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %msgout_buf, i64 0, i64 0, !dbg !10963
  store i8 6, i8* %arrayidx, align 8, !dbg !10965
  %1 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !10966
  %msg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %1, i32 0, i32 15, !dbg !10967
  store i8 1, i8* %msg_count, align 8, !dbg !10968
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !10969
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 1, !dbg !10969
  %3 = load i64, i64* %io_port_base, align 8, !dbg !10969
  %add = add i64 %3, 128, !dbg !10969
  %conv = trunc i64 %add to i32, !dbg !10969
  call void @outw(i16 zeroext 512, i32 %conv) #11, !dbg !10969
  %4 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !10969
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %4, i32 0, i32 10, !dbg !10969
  %5 = load i16, i16* %state, align 8, !dbg !10969
  %conv1 = zext i16 %5 to i32, !dbg !10969
  %or = or i32 %conv1, 4, !dbg !10969
  %conv2 = trunc i32 %or to i16, !dbg !10969
  store i16 %conv2, i16* %state, align 8, !dbg !10969
  %6 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !10970
  %state3 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %6, i32 0, i32 10, !dbg !10971
  %7 = load i16, i16* %state3, align 8, !dbg !10972
  %conv4 = zext i16 %7 to i32, !dbg !10972
  %and = and i32 %conv4, -9, !dbg !10972
  %conv5 = trunc i32 %and to i16, !dbg !10972
  store i16 %conv5, i16* %state3, align 8, !dbg !10972
  %8 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !10973
  %state6 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %8, i32 0, i32 10, !dbg !10974
  %9 = load i16, i16* %state6, align 8, !dbg !10975
  %conv7 = zext i16 %9 to i32, !dbg !10975
  %or8 = or i32 %conv7, 4, !dbg !10975
  %conv9 = trunc i32 %or8 to i16, !dbg !10975
  store i16 %conv9, i16* %state6, align 8, !dbg !10975
  ret void, !dbg !10976
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @srb_done(%struct.AdapterCtlBlk* %acb, %struct.DeviceCtlBlk* %dcb, %struct.ScsiReqBlk* %srb) #2 !dbg !10977 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %tempcnt = alloca i8, align 1
  %status = alloca i8, align 1
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %dir = alloca i32, align 4
  %ckc_only = alloca i32, align 4
  %base = alloca i8*, align 8
  %ptr = alloca %struct.ScsiInqData*, align 8
  %flags = alloca i64, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %offset = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy190 = alloca i64, align 8
  %__dummy2191 = alloca i64, align 8
  %tmp194 = alloca i32, align 4
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !10978, metadata !DIExpression()), !dbg !10979
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !10980, metadata !DIExpression()), !dbg !10981
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !10982, metadata !DIExpression()), !dbg !10983
  call void @llvm.dbg.declare(metadata i8* %tempcnt, metadata !10984, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.declare(metadata i8* %status, metadata !10986, metadata !DIExpression()), !dbg !10987
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !10988, metadata !DIExpression()), !dbg !10989
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !10990
  %cmd1 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 2, !dbg !10991
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd1, align 8, !dbg !10991
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !10989
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !10992, metadata !DIExpression()), !dbg !10993
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10994
  %sc_data_direction = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 13, !dbg !10995
  %3 = load i32, i32* %sc_data_direction, align 8, !dbg !10995
  store i32 %3, i32* %dir, align 4, !dbg !10993
  call void @llvm.dbg.declare(metadata i32* %ckc_only, metadata !10996, metadata !DIExpression()), !dbg !10997
  store i32 1, i32* %ckc_only, align 4, !dbg !10997
  br label %do.body, !dbg !10998

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10999

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !11001

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !11002

do.end3:                                          ; preds = %do.body2
  %4 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11004
  %target_status = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %4, i32 0, i32 14, !dbg !11005
  %5 = load i8, i8* %target_status, align 1, !dbg !11005
  store i8 %5, i8* %status, align 1, !dbg !11006
  %6 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11007
  %flag = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %6, i32 0, i32 20, !dbg !11009
  %7 = load i8, i8* %flag, align 1, !dbg !11009
  %conv = zext i8 %7 to i32, !dbg !11007
  %and = and i32 %conv, 1, !dbg !11010
  %tobool = icmp ne i32 %and, 0, !dbg !11010
  br i1 %tobool, label %if.then, label %if.end32, !dbg !11011

if.then:                                          ; preds = %do.end3
  br label %do.body4, !dbg !11012

do.body4:                                         ; preds = %if.then
  br label %do.end5, !dbg !11014

do.end5:                                          ; preds = %do.body4
  %8 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11016
  %9 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11017
  call void @pci_unmap_srb_sense(%struct.AdapterCtlBlk* %8, %struct.ScsiReqBlk* %9) #11, !dbg !11018
  %10 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11019
  %flag6 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %10, i32 0, i32 20, !dbg !11020
  %11 = load i8, i8* %flag6, align 1, !dbg !11021
  %conv7 = zext i8 %11 to i32, !dbg !11021
  %and8 = and i32 %conv7, -2, !dbg !11021
  %conv9 = trunc i32 %and8 to i8, !dbg !11021
  store i8 %conv9, i8* %flag6, align 1, !dbg !11021
  %12 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11022
  %adapter_status = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %12, i32 0, i32 13, !dbg !11023
  store i8 0, i8* %adapter_status, align 2, !dbg !11024
  %13 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11025
  %target_status10 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %13, i32 0, i32 14, !dbg !11026
  store i8 2, i8* %target_status10, align 1, !dbg !11027
  %14 = load i8, i8* %status, align 1, !dbg !11028
  %conv11 = zext i8 %14 to i32, !dbg !11028
  %cmp = icmp eq i32 %conv11, 2, !dbg !11030
  br i1 %cmp, label %if.then13, label %if.end, !dbg !11031

if.then13:                                        ; preds = %do.end5
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11032
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %15, i32 0, i32 24, !dbg !11034
  store i32 262144, i32* %result, align 8, !dbg !11035
  br label %ckc_e, !dbg !11036

if.end:                                           ; preds = %do.end5
  br label %do.body14, !dbg !11037

do.body14:                                        ; preds = %if.end
  br label %do.end15, !dbg !11038

do.end15:                                         ; preds = %do.body14
  %16 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11040
  %total_xfer_length = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %16, i32 0, i32 7, !dbg !11042
  %17 = load i64, i64* %total_xfer_length, align 8, !dbg !11042
  %tobool16 = icmp ne i64 %17, 0, !dbg !11040
  br i1 %tobool16, label %land.lhs.true, label %if.else, !dbg !11043

land.lhs.true:                                    ; preds = %do.end15
  %18 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11044
  %total_xfer_length17 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %18, i32 0, i32 7, !dbg !11045
  %19 = load i64, i64* %total_xfer_length17, align 8, !dbg !11045
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11046
  %underflow = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %20, i32 0, i32 17, !dbg !11047
  %21 = load i32, i32* %underflow, align 8, !dbg !11047
  %conv18 = zext i32 %21 to i64, !dbg !11046
  %cmp19 = icmp uge i64 %19, %conv18, !dbg !11048
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !11049

if.then21:                                        ; preds = %land.lhs.true
  %22 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11050
  %end_message = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %22, i32 0, i32 16, !dbg !11050
  %23 = load i8, i8* %end_message, align 1, !dbg !11050
  %conv22 = zext i8 %23 to i32, !dbg !11050
  %shl = shl i32 %conv22, 8, !dbg !11050
  %or = or i32 134217728, %shl, !dbg !11050
  %or23 = or i32 %or, 2, !dbg !11050
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11051
  %result24 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %24, i32 0, i32 24, !dbg !11052
  store i32 %or23, i32* %result24, align 8, !dbg !11053
  br label %if.end31, !dbg !11051

if.else:                                          ; preds = %land.lhs.true, %do.end15
  %25 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11054
  %end_message25 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %25, i32 0, i32 16, !dbg !11054
  %26 = load i8, i8* %end_message25, align 1, !dbg !11054
  %conv26 = zext i8 %26 to i32, !dbg !11054
  %shl27 = shl i32 %conv26, 8, !dbg !11054
  %or28 = or i32 134217728, %shl27, !dbg !11054
  %or29 = or i32 %or28, 2, !dbg !11054
  %27 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11055
  %result30 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %27, i32 0, i32 24, !dbg !11056
  store i32 %or29, i32* %result30, align 8, !dbg !11057
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then21
  br label %ckc_e, !dbg !11058

if.end32:                                         ; preds = %do.end3
  %28 = load i8, i8* %status, align 1, !dbg !11059
  %tobool33 = icmp ne i8 %28, 0, !dbg !11059
  br i1 %tobool33, label %if.then34, label %if.else89, !dbg !11061

if.then34:                                        ; preds = %if.end32
  %29 = load i8, i8* %status, align 1, !dbg !11062
  %conv35 = zext i8 %29 to i32, !dbg !11062
  %shr = ashr i32 %conv35, 1, !dbg !11062
  %and36 = and i32 %shr, 127, !dbg !11062
  %cmp37 = icmp eq i32 %and36, 1, !dbg !11065
  br i1 %cmp37, label %if.then39, label %if.else40, !dbg !11066

if.then39:                                        ; preds = %if.then34
  %30 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11067
  %31 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11069
  %32 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11070
  call void @request_sense(%struct.AdapterCtlBlk* %30, %struct.DeviceCtlBlk* %31, %struct.ScsiReqBlk* %32) #11, !dbg !11071
  br label %return, !dbg !11072

if.else40:                                        ; preds = %if.then34
  %33 = load i8, i8* %status, align 1, !dbg !11073
  %conv41 = zext i8 %33 to i32, !dbg !11073
  %shr42 = ashr i32 %conv41, 1, !dbg !11073
  %and43 = and i32 %shr42, 127, !dbg !11073
  %cmp44 = icmp eq i32 %and43, 20, !dbg !11075
  br i1 %cmp44, label %if.then46, label %if.else60, !dbg !11076

if.then46:                                        ; preds = %if.else40
  %34 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11077
  %srb_going_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %34, i32 0, i32 2, !dbg !11079
  %call = call i32 @list_size(%struct.list_head* %srb_going_list) #11, !dbg !11080
  %conv47 = trunc i32 %call to i8, !dbg !11081
  store i8 %conv47, i8* %tempcnt, align 1, !dbg !11082
  %35 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11083
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %35, i32 0, i32 7, !dbg !11083
  %36 = load i8, i8* %target_id, align 2, !dbg !11083
  %conv48 = zext i8 %36 to i32, !dbg !11083
  %37 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11083
  %target_lun = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %37, i32 0, i32 8, !dbg !11083
  %38 = load i8, i8* %target_lun, align 1, !dbg !11083
  %conv49 = zext i8 %38 to i32, !dbg !11083
  %39 = load i8, i8* %tempcnt, align 1, !dbg !11083
  %conv50 = zext i8 %39 to i32, !dbg !11083
  %call51 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.77, i64 0, i64 0), i32 %conv48, i32 %conv49, i32 %conv50) #12, !dbg !11083
  %40 = load i8, i8* %tempcnt, align 1, !dbg !11084
  %conv52 = zext i8 %40 to i32, !dbg !11084
  %cmp53 = icmp sgt i32 %conv52, 1, !dbg !11086
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !11087

if.then55:                                        ; preds = %if.then46
  %41 = load i8, i8* %tempcnt, align 1, !dbg !11088
  %dec = add i8 %41, -1, !dbg !11088
  store i8 %dec, i8* %tempcnt, align 1, !dbg !11088
  br label %if.end56, !dbg !11089

if.end56:                                         ; preds = %if.then55, %if.then46
  %42 = load i8, i8* %tempcnt, align 1, !dbg !11090
  %conv57 = zext i8 %42 to i16, !dbg !11090
  %43 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11091
  %max_command = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %43, i32 0, i32 6, !dbg !11092
  store i16 %conv57, i16* %max_command, align 4, !dbg !11093
  %44 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11094
  %45 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11095
  call void @free_tag(%struct.DeviceCtlBlk* %44, %struct.ScsiReqBlk* %45) #11, !dbg !11096
  %46 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11097
  %list = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %46, i32 0, i32 0, !dbg !11098
  %47 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11099
  %srb_waiting_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %47, i32 0, i32 3, !dbg !11100
  call void @list_move(%struct.list_head* %list, %struct.list_head* %srb_waiting_list) #11, !dbg !11101
  %48 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11102
  call void @waiting_set_timer(%struct.AdapterCtlBlk* %48, i64 12) #11, !dbg !11103
  %49 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11104
  %adapter_status58 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %49, i32 0, i32 13, !dbg !11105
  store i8 0, i8* %adapter_status58, align 2, !dbg !11106
  %50 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11107
  %target_status59 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %50, i32 0, i32 14, !dbg !11108
  store i8 0, i8* %target_status59, align 1, !dbg !11109
  br label %return, !dbg !11110

if.else60:                                        ; preds = %if.else40
  %51 = load i8, i8* %status, align 1, !dbg !11111
  %conv61 = zext i8 %51 to i32, !dbg !11111
  %cmp62 = icmp eq i32 %conv61, 255, !dbg !11113
  br i1 %cmp62, label %if.then64, label %if.else68, !dbg !11114

if.then64:                                        ; preds = %if.else60
  %52 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11115
  %adapter_status65 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %52, i32 0, i32 13, !dbg !11117
  store i8 17, i8* %adapter_status65, align 2, !dbg !11118
  %53 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11119
  %target_status66 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %53, i32 0, i32 14, !dbg !11120
  store i8 0, i8* %target_status66, align 1, !dbg !11121
  %54 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11122
  %result67 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %54, i32 0, i32 24, !dbg !11123
  store i32 65536, i32* %result67, align 8, !dbg !11124
  br label %if.end86, !dbg !11125

if.else68:                                        ; preds = %if.else60
  %55 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11126
  %adapter_status69 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %55, i32 0, i32 13, !dbg !11128
  store i8 0, i8* %adapter_status69, align 2, !dbg !11129
  %56 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11130
  %result70 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %56, i32 0, i32 24, !dbg !11130
  %57 = load i32, i32* %result70, align 8, !dbg !11130
  %and71 = and i32 %57, -16711681, !dbg !11130
  store i32 %and71, i32* %result70, align 8, !dbg !11130
  %58 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11130
  %result72 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %58, i32 0, i32 24, !dbg !11130
  %59 = load i32, i32* %result72, align 8, !dbg !11130
  %or73 = or i32 %59, 458752, !dbg !11130
  store i32 %or73, i32* %result72, align 8, !dbg !11130
  %60 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11132
  %result74 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %60, i32 0, i32 24, !dbg !11132
  %61 = load i32, i32* %result74, align 8, !dbg !11132
  %and75 = and i32 %61, -65281, !dbg !11132
  store i32 %and75, i32* %result74, align 8, !dbg !11132
  %62 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11132
  %end_message76 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %62, i32 0, i32 16, !dbg !11132
  %63 = load i8, i8* %end_message76, align 1, !dbg !11132
  %conv77 = zext i8 %63 to i32, !dbg !11132
  %shl78 = shl i32 %conv77, 8, !dbg !11132
  %64 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11132
  %result79 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %64, i32 0, i32 24, !dbg !11132
  %65 = load i32, i32* %result79, align 8, !dbg !11132
  %or80 = or i32 %65, %shl78, !dbg !11132
  store i32 %or80, i32* %result79, align 8, !dbg !11132
  %66 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11134
  %result81 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %66, i32 0, i32 24, !dbg !11134
  %67 = load i32, i32* %result81, align 8, !dbg !11134
  %and82 = and i32 %67, -256, !dbg !11134
  store i32 %and82, i32* %result81, align 8, !dbg !11134
  %68 = load i8, i8* %status, align 1, !dbg !11134
  %conv83 = zext i8 %68 to i32, !dbg !11134
  %69 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11134
  %result84 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %69, i32 0, i32 24, !dbg !11134
  %70 = load i32, i32* %result84, align 8, !dbg !11134
  %or85 = or i32 %70, %conv83, !dbg !11134
  store i32 %or85, i32* %result84, align 8, !dbg !11134
  br label %if.end86

if.end86:                                         ; preds = %if.else68, %if.then64
  br label %if.end87

if.end87:                                         ; preds = %if.end86
  br label %if.end88

if.end88:                                         ; preds = %if.end87
  br label %if.end131, !dbg !11136

if.else89:                                        ; preds = %if.end32
  %71 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11137
  %adapter_status90 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %71, i32 0, i32 13, !dbg !11139
  %72 = load i8, i8* %adapter_status90, align 2, !dbg !11139
  store i8 %72, i8* %status, align 1, !dbg !11140
  %73 = load i8, i8* %status, align 1, !dbg !11141
  %conv91 = zext i8 %73 to i32, !dbg !11141
  %and92 = and i32 %conv91, 18, !dbg !11143
  %tobool93 = icmp ne i32 %and92, 0, !dbg !11143
  br i1 %tobool93, label %if.then94, label %if.else106, !dbg !11144

if.then94:                                        ; preds = %if.else89
  %74 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11145
  %target_status95 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %74, i32 0, i32 14, !dbg !11147
  store i8 0, i8* %target_status95, align 1, !dbg !11148
  %75 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11149
  %result96 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %75, i32 0, i32 24, !dbg !11149
  %76 = load i32, i32* %result96, align 8, !dbg !11149
  %and97 = and i32 %76, -16711681, !dbg !11149
  store i32 %and97, i32* %result96, align 8, !dbg !11149
  %77 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11149
  %result98 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %77, i32 0, i32 24, !dbg !11149
  %78 = load i32, i32* %result98, align 8, !dbg !11149
  store i32 %78, i32* %result98, align 8, !dbg !11149
  %79 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11151
  %result99 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %79, i32 0, i32 24, !dbg !11151
  %80 = load i32, i32* %result99, align 8, !dbg !11151
  %and100 = and i32 %80, -65281, !dbg !11151
  store i32 %and100, i32* %result99, align 8, !dbg !11151
  %81 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11151
  %end_message101 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %81, i32 0, i32 16, !dbg !11151
  %82 = load i8, i8* %end_message101, align 1, !dbg !11151
  %conv102 = zext i8 %82 to i32, !dbg !11151
  %shl103 = shl i32 %conv102, 8, !dbg !11151
  %83 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11151
  %result104 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %83, i32 0, i32 24, !dbg !11151
  %84 = load i32, i32* %result104, align 8, !dbg !11151
  %or105 = or i32 %84, %shl103, !dbg !11151
  store i32 %or105, i32* %result104, align 8, !dbg !11151
  br label %if.end130, !dbg !11153

if.else106:                                       ; preds = %if.else89
  %85 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11154
  %status107 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %85, i32 0, i32 18, !dbg !11156
  %86 = load i8, i8* %status107, align 1, !dbg !11156
  %conv108 = zext i8 %86 to i32, !dbg !11154
  %and109 = and i32 %conv108, 16, !dbg !11157
  %tobool110 = icmp ne i32 %and109, 0, !dbg !11157
  br i1 %tobool110, label %if.then111, label %if.else123, !dbg !11158

if.then111:                                       ; preds = %if.else106
  %87 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11159
  %result112 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %87, i32 0, i32 24, !dbg !11159
  %88 = load i32, i32* %result112, align 8, !dbg !11159
  %and113 = and i32 %88, -16711681, !dbg !11159
  store i32 %and113, i32* %result112, align 8, !dbg !11159
  %89 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11159
  %result114 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %89, i32 0, i32 24, !dbg !11159
  %90 = load i32, i32* %result114, align 8, !dbg !11159
  %or115 = or i32 %90, 393216, !dbg !11159
  store i32 %or115, i32* %result114, align 8, !dbg !11159
  %91 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11162
  %result116 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %91, i32 0, i32 24, !dbg !11162
  %92 = load i32, i32* %result116, align 8, !dbg !11162
  %and117 = and i32 %92, -65281, !dbg !11162
  store i32 %and117, i32* %result116, align 8, !dbg !11162
  %93 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11162
  %end_message118 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %93, i32 0, i32 16, !dbg !11162
  %94 = load i8, i8* %end_message118, align 1, !dbg !11162
  %conv119 = zext i8 %94 to i32, !dbg !11162
  %shl120 = shl i32 %conv119, 8, !dbg !11162
  %95 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11162
  %result121 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %95, i32 0, i32 24, !dbg !11162
  %96 = load i32, i32* %result121, align 8, !dbg !11162
  %or122 = or i32 %96, %shl120, !dbg !11162
  store i32 %or122, i32* %result121, align 8, !dbg !11162
  br label %if.end129, !dbg !11164

if.else123:                                       ; preds = %if.else106
  %97 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11165
  %adapter_status124 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %97, i32 0, i32 13, !dbg !11167
  store i8 0, i8* %adapter_status124, align 2, !dbg !11168
  %98 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11169
  %target_status125 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %98, i32 0, i32 14, !dbg !11170
  store i8 0, i8* %target_status125, align 1, !dbg !11171
  %99 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11172
  %result126 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %99, i32 0, i32 24, !dbg !11172
  %100 = load i32, i32* %result126, align 8, !dbg !11172
  %and127 = and i32 %100, -16711681, !dbg !11172
  store i32 %and127, i32* %result126, align 8, !dbg !11172
  %101 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11172
  %result128 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %101, i32 0, i32 24, !dbg !11172
  %102 = load i32, i32* %result128, align 8, !dbg !11172
  store i32 %102, i32* %result128, align 8, !dbg !11172
  br label %if.end129

if.end129:                                        ; preds = %if.else123, %if.then111
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.then94
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.end88
  store i32 0, i32* %ckc_only, align 4, !dbg !11174
  br label %ckc_e, !dbg !11175

ckc_e:                                            ; preds = %if.end131, %if.end31, %if.then13
  call void @llvm.dbg.label(metadata !11176), !dbg !11177
  %103 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11178
  %104 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11179
  call void @pci_unmap_srb(%struct.AdapterCtlBlk* %103, %struct.ScsiReqBlk* %104) #11, !dbg !11180
  %105 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11181
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %105, i32 0, i32 14, !dbg !11183
  %106 = load i8*, i8** %cmnd, align 8, !dbg !11183
  %arrayidx = getelementptr i8, i8* %106, i64 0, !dbg !11181
  %107 = load i8, i8* %arrayidx, align 1, !dbg !11181
  %conv132 = zext i8 %107 to i32, !dbg !11181
  %cmp133 = icmp eq i32 %conv132, 18, !dbg !11184
  br i1 %cmp133, label %if.then135, label %if.end197, !dbg !11185

if.then135:                                       ; preds = %ckc_e
  call void @llvm.dbg.declare(metadata i8** %base, metadata !11186, metadata !DIExpression()), !dbg !11188
  store i8* null, i8** %base, align 8, !dbg !11188
  call void @llvm.dbg.declare(metadata %struct.ScsiInqData** %ptr, metadata !11189, metadata !DIExpression()), !dbg !11190
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11191, metadata !DIExpression()), !dbg !11192
  store i64 0, i64* %flags, align 8, !dbg !11192
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !11193, metadata !DIExpression()), !dbg !11194
  %108 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11195
  %call136 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %108) #11, !dbg !11196
  store %struct.scatterlist* %call136, %struct.scatterlist** %sg, align 8, !dbg !11194
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !11197, metadata !DIExpression()), !dbg !11198
  store i64 0, i64* %offset, align 8, !dbg !11198
  call void @llvm.dbg.declare(metadata i64* %len, metadata !11199, metadata !DIExpression()), !dbg !11200
  store i64 36, i64* %len, align 8, !dbg !11200
  br label %do.body137, !dbg !11201

do.body137:                                       ; preds = %if.then135
  br label %do.body138, !dbg !11202

do.body138:                                       ; preds = %do.body137
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11204, metadata !DIExpression()), !dbg !11207
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11208, metadata !DIExpression()), !dbg !11207
  %cmp139 = icmp eq i64* %__dummy, %__dummy2, !dbg !11207
  %conv140 = zext i1 %cmp139 to i32, !dbg !11207
  store i32 1, i32* %tmp, align 4, !dbg !11207
  %109 = load i32, i32* %tmp, align 4, !dbg !11207
  %call141 = call i64 @arch_local_irq_save() #11, !dbg !11209
  store i64 %call141, i64* %flags, align 8, !dbg !11209
  br label %do.end142, !dbg !11209

do.end142:                                        ; preds = %do.body138
  br label %do.end143, !dbg !11202

do.end143:                                        ; preds = %do.end142
  %110 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !11210
  %111 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11211
  %call144 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %111) #11, !dbg !11212
  %call145 = call i8* @scsi_kmap_atomic_sg(%struct.scatterlist* %110, i32 %call144, i64* %offset, i64* %len) #11, !dbg !11213
  store i8* %call145, i8** %base, align 8, !dbg !11214
  %112 = load i8*, i8** %base, align 8, !dbg !11215
  %113 = load i64, i64* %offset, align 8, !dbg !11216
  %add.ptr = getelementptr i8, i8* %112, i64 %113, !dbg !11217
  %114 = bitcast i8* %add.ptr to %struct.ScsiInqData*, !dbg !11218
  store %struct.ScsiInqData* %114, %struct.ScsiInqData** %ptr, align 8, !dbg !11219
  %115 = load i32, i32* %ckc_only, align 4, !dbg !11220
  %tobool146 = icmp ne i32 %115, 0, !dbg !11220
  br i1 %tobool146, label %if.end173, label %land.lhs.true147, !dbg !11222

land.lhs.true147:                                 ; preds = %do.end143
  %116 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11223
  %result148 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %116, i32 0, i32 24, !dbg !11224
  %117 = load i32, i32* %result148, align 8, !dbg !11224
  %and149 = and i32 %117, 16711680, !dbg !11225
  %cmp150 = icmp eq i32 %and149, 0, !dbg !11226
  br i1 %cmp150, label %land.lhs.true152, label %if.end173, !dbg !11227

land.lhs.true152:                                 ; preds = %land.lhs.true147
  %118 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11228
  %cmnd153 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %118, i32 0, i32 14, !dbg !11229
  %119 = load i8*, i8** %cmnd153, align 8, !dbg !11229
  %arrayidx154 = getelementptr i8, i8* %119, i64 2, !dbg !11228
  %120 = load i8, i8* %arrayidx154, align 1, !dbg !11228
  %conv155 = zext i8 %120 to i32, !dbg !11228
  %cmp156 = icmp eq i32 %conv155, 0, !dbg !11230
  br i1 %cmp156, label %land.lhs.true158, label %if.end173, !dbg !11231

land.lhs.true158:                                 ; preds = %land.lhs.true152
  %121 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11232
  %call159 = call i32 @scsi_bufflen(%struct.scsi_cmnd* %121) #11, !dbg !11233
  %cmp160 = icmp uge i32 %call159, 8, !dbg !11234
  br i1 %cmp160, label %land.lhs.true162, label %if.end173, !dbg !11235

land.lhs.true162:                                 ; preds = %land.lhs.true158
  %122 = load i32, i32* %dir, align 4, !dbg !11236
  %cmp163 = icmp ne i32 %122, 3, !dbg !11237
  br i1 %cmp163, label %land.lhs.true165, label %if.end173, !dbg !11238

land.lhs.true165:                                 ; preds = %land.lhs.true162
  %123 = load %struct.ScsiInqData*, %struct.ScsiInqData** %ptr, align 8, !dbg !11239
  %tobool166 = icmp ne %struct.ScsiInqData* %123, null, !dbg !11239
  br i1 %tobool166, label %land.lhs.true167, label %if.end173, !dbg !11240

land.lhs.true167:                                 ; preds = %land.lhs.true165
  %124 = load %struct.ScsiInqData*, %struct.ScsiInqData** %ptr, align 8, !dbg !11241
  %Vers = getelementptr inbounds %struct.ScsiInqData, %struct.ScsiInqData* %124, i32 0, i32 2, !dbg !11242
  %125 = load i8, i8* %Vers, align 1, !dbg !11242
  %conv168 = zext i8 %125 to i32, !dbg !11241
  %and169 = and i32 %conv168, 7, !dbg !11243
  %cmp170 = icmp sge i32 %and169, 2, !dbg !11244
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !11245

if.then172:                                       ; preds = %land.lhs.true167
  %126 = load %struct.ScsiInqData*, %struct.ScsiInqData** %ptr, align 8, !dbg !11246
  %Flags = getelementptr inbounds %struct.ScsiInqData, %struct.ScsiInqData* %126, i32 0, i32 7, !dbg !11247
  %127 = load i8, i8* %Flags, align 1, !dbg !11247
  %128 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11248
  %inquiry7 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %128, i32 0, i32 11, !dbg !11249
  store i8 %127, i8* %inquiry7, align 2, !dbg !11250
  br label %if.end173, !dbg !11248

if.end173:                                        ; preds = %if.then172, %land.lhs.true167, %land.lhs.true165, %land.lhs.true162, %land.lhs.true158, %land.lhs.true152, %land.lhs.true147, %do.end143
  %129 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11251
  %result174 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %129, i32 0, i32 24, !dbg !11253
  %130 = load i32, i32* %result174, align 8, !dbg !11253
  %cmp175 = icmp eq i32 %130, 0, !dbg !11254
  br i1 %cmp175, label %if.then182, label %lor.lhs.false, !dbg !11255

lor.lhs.false:                                    ; preds = %if.end173
  %131 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11256
  %result177 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %131, i32 0, i32 24, !dbg !11256
  %132 = load i32, i32* %result177, align 8, !dbg !11256
  %shr178 = ashr i32 %132, 1, !dbg !11256
  %and179 = and i32 %shr178, 127, !dbg !11256
  %cmp180 = icmp eq i32 %and179, 1, !dbg !11257
  br i1 %cmp180, label %if.then182, label %if.end187, !dbg !11258

if.then182:                                       ; preds = %lor.lhs.false, %if.end173
  %133 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11259
  %init_tcq_flag = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %133, i32 0, i32 18, !dbg !11262
  %134 = load i8, i8* %init_tcq_flag, align 1, !dbg !11262
  %tobool183 = icmp ne i8 %134, 0, !dbg !11259
  br i1 %tobool183, label %if.end186, label %if.then184, !dbg !11263

if.then184:                                       ; preds = %if.then182
  %135 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11264
  %136 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11266
  %137 = load %struct.ScsiInqData*, %struct.ScsiInqData** %ptr, align 8, !dbg !11267
  call void @add_dev(%struct.AdapterCtlBlk* %135, %struct.DeviceCtlBlk* %136, %struct.ScsiInqData* %137) #11, !dbg !11268
  %138 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11269
  %init_tcq_flag185 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %138, i32 0, i32 18, !dbg !11270
  store i8 1, i8* %init_tcq_flag185, align 1, !dbg !11271
  br label %if.end186, !dbg !11272

if.end186:                                        ; preds = %if.then184, %if.then182
  br label %if.end187, !dbg !11273

if.end187:                                        ; preds = %if.end186, %lor.lhs.false
  %139 = load i8*, i8** %base, align 8, !dbg !11274
  call void @scsi_kunmap_atomic_sg(i8* %139) #11, !dbg !11275
  br label %do.body188, !dbg !11276

do.body188:                                       ; preds = %if.end187
  br label %do.body189, !dbg !11277

do.body189:                                       ; preds = %do.body188
  call void @llvm.dbg.declare(metadata i64* %__dummy190, metadata !11279, metadata !DIExpression()), !dbg !11282
  call void @llvm.dbg.declare(metadata i64* %__dummy2191, metadata !11283, metadata !DIExpression()), !dbg !11282
  %cmp192 = icmp eq i64* %__dummy190, %__dummy2191, !dbg !11282
  %conv193 = zext i1 %cmp192 to i32, !dbg !11282
  store i32 1, i32* %tmp194, align 4, !dbg !11282
  %140 = load i32, i32* %tmp194, align 4, !dbg !11282
  %141 = load i64, i64* %flags, align 8, !dbg !11284
  call void @arch_local_irq_restore(i64 %141) #11, !dbg !11284
  br label %do.end195, !dbg !11284

do.end195:                                        ; preds = %do.body189
  br label %do.end196, !dbg !11277

do.end196:                                        ; preds = %do.end195
  br label %if.end197, !dbg !11285

if.end197:                                        ; preds = %do.end196, %ckc_e
  %142 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11286
  %143 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11287
  %total_xfer_length198 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %143, i32 0, i32 7, !dbg !11288
  %144 = load i64, i64* %total_xfer_length198, align 8, !dbg !11288
  %conv199 = trunc i64 %144 to i32, !dbg !11287
  call void @scsi_set_resid(%struct.scsi_cmnd* %142, i32 %conv199) #11, !dbg !11289
  %145 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11290
  %total_xfer_length200 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %145, i32 0, i32 7, !dbg !11291
  %146 = load i64, i64* %total_xfer_length200, align 8, !dbg !11291
  %conv201 = trunc i64 %146 to i32, !dbg !11290
  %147 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11292
  %SCp = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %147, i32 0, i32 22, !dbg !11293
  %this_residual = getelementptr inbounds %struct.scsi_pointer, %struct.scsi_pointer* %SCp, i32 0, i32 1, !dbg !11294
  store i32 %conv201, i32* %this_residual, align 8, !dbg !11295
  %148 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11296
  %SCp202 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %148, i32 0, i32 22, !dbg !11297
  %buffers_residual = getelementptr inbounds %struct.scsi_pointer, %struct.scsi_pointer* %SCp202, i32 0, i32 3, !dbg !11298
  store i32 0, i32* %buffers_residual, align 8, !dbg !11299
  %149 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11300
  %150 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11302
  %tmp_srb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %150, i32 0, i32 7, !dbg !11303
  %151 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp_srb, align 8, !dbg !11303
  %cmp203 = icmp ne %struct.ScsiReqBlk* %149, %151, !dbg !11304
  br i1 %cmp203, label %if.then205, label %if.else209, !dbg !11305

if.then205:                                       ; preds = %if.end197
  br label %do.body206, !dbg !11306

do.body206:                                       ; preds = %if.then205
  br label %do.end207, !dbg !11308

do.end207:                                        ; preds = %do.body206
  %152 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11310
  %list208 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %152, i32 0, i32 0, !dbg !11311
  %153 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11312
  %srb_free_list = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %153, i32 0, i32 6, !dbg !11313
  call void @list_move_tail(%struct.list_head* %list208, %struct.list_head* %srb_free_list) #11, !dbg !11314
  br label %if.end211, !dbg !11315

if.else209:                                       ; preds = %if.end197
  %call210 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.78, i64 0, i64 0)) #12, !dbg !11316
  br label %if.end211

if.end211:                                        ; preds = %if.else209, %do.end207
  %154 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11318
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %154, i32 0, i32 21, !dbg !11319
  %155 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !11319
  %156 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11320
  call void %155(%struct.scsi_cmnd* %156) #11, !dbg !11318
  %157 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11321
  call void @waiting_process_next(%struct.AdapterCtlBlk* %157) #11, !dbg !11322
  br label %return, !dbg !11323

return:                                           ; preds = %if.end211, %if.end56, %if.then39
  ret void, !dbg !11323
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @request_sense(%struct.AdapterCtlBlk* %acb, %struct.DeviceCtlBlk* %dcb, %struct.ScsiReqBlk* %srb) #2 !dbg !11324 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !11325, metadata !DIExpression()), !dbg !11326
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !11327, metadata !DIExpression()), !dbg !11328
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !11329, metadata !DIExpression()), !dbg !11330
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !11331, metadata !DIExpression()), !dbg !11332
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11333
  %cmd1 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 2, !dbg !11334
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd1, align 8, !dbg !11334
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !11332
  br label %do.body, !dbg !11335

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11336

do.end:                                           ; preds = %do.body
  %2 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11338
  %flag = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %2, i32 0, i32 20, !dbg !11339
  %3 = load i8, i8* %flag, align 1, !dbg !11340
  %conv = zext i8 %3 to i32, !dbg !11340
  %or = or i32 %conv, 1, !dbg !11340
  %conv2 = trunc i32 %or to i8, !dbg !11340
  store i8 %conv2, i8* %flag, align 1, !dbg !11340
  %4 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11341
  %adapter_status = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %4, i32 0, i32 13, !dbg !11342
  store i8 0, i8* %adapter_status, align 2, !dbg !11343
  %5 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11344
  %target_status = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %5, i32 0, i32 14, !dbg !11345
  store i8 0, i8* %target_status, align 1, !dbg !11346
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11347
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %6, i32 0, i32 20, !dbg !11348
  %7 = load i8*, i8** %sense_buffer, align 8, !dbg !11348
  call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 96, i1 false), !dbg !11349
  %8 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11350
  %segment_x = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %8, i32 0, i32 3, !dbg !11351
  %9 = load %struct.SGentry*, %struct.SGentry** %segment_x, align 8, !dbg !11351
  %arrayidx = getelementptr %struct.SGentry, %struct.SGentry* %9, i64 0, !dbg !11350
  %address = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx, i32 0, i32 0, !dbg !11352
  %10 = load i32, i32* %address, align 4, !dbg !11352
  %11 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11353
  %segment_x3 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %11, i32 0, i32 3, !dbg !11354
  %12 = load %struct.SGentry*, %struct.SGentry** %segment_x3, align 8, !dbg !11354
  %arrayidx4 = getelementptr %struct.SGentry, %struct.SGentry* %12, i64 63, !dbg !11353
  %address5 = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx4, i32 0, i32 0, !dbg !11355
  store i32 %10, i32* %address5, align 4, !dbg !11356
  %13 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11357
  %segment_x6 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %13, i32 0, i32 3, !dbg !11358
  %14 = load %struct.SGentry*, %struct.SGentry** %segment_x6, align 8, !dbg !11358
  %arrayidx7 = getelementptr %struct.SGentry, %struct.SGentry* %14, i64 0, !dbg !11357
  %length = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx7, i32 0, i32 1, !dbg !11359
  %15 = load i32, i32* %length, align 4, !dbg !11359
  %16 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11360
  %segment_x8 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %16, i32 0, i32 3, !dbg !11361
  %17 = load %struct.SGentry*, %struct.SGentry** %segment_x8, align 8, !dbg !11361
  %arrayidx9 = getelementptr %struct.SGentry, %struct.SGentry* %17, i64 63, !dbg !11360
  %length10 = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx9, i32 0, i32 1, !dbg !11362
  store i32 %15, i32* %length10, align 4, !dbg !11363
  %18 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11364
  %total_xfer_length = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %18, i32 0, i32 7, !dbg !11365
  %19 = load i64, i64* %total_xfer_length, align 8, !dbg !11365
  %20 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11366
  %xferred = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %20, i32 0, i32 9, !dbg !11367
  store i64 %19, i64* %xferred, align 8, !dbg !11368
  %21 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11369
  %total_xfer_length11 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %21, i32 0, i32 7, !dbg !11370
  store i64 96, i64* %total_xfer_length11, align 8, !dbg !11371
  %22 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11372
  %segment_x12 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %22, i32 0, i32 3, !dbg !11373
  %23 = load %struct.SGentry*, %struct.SGentry** %segment_x12, align 8, !dbg !11373
  %arrayidx13 = getelementptr %struct.SGentry, %struct.SGentry* %23, i64 0, !dbg !11372
  %length14 = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx13, i32 0, i32 1, !dbg !11374
  store i32 96, i32* %length14, align 4, !dbg !11375
  %24 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11376
  %dev = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %24, i32 0, i32 23, !dbg !11376
  %25 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !11376
  %dev15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !11376
  %26 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11376
  %sense_buffer16 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %26, i32 0, i32 20, !dbg !11376
  %27 = load i8*, i8** %sense_buffer16, align 8, !dbg !11376
  %call = call i64 @dma_map_single_attrs(%struct.device* %dev15, i8* %27, i64 96, i32 2, i64 0) #11, !dbg !11376
  %conv17 = trunc i64 %call to i32, !dbg !11376
  %28 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11377
  %segment_x18 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %28, i32 0, i32 3, !dbg !11378
  %29 = load %struct.SGentry*, %struct.SGentry** %segment_x18, align 8, !dbg !11378
  %arrayidx19 = getelementptr %struct.SGentry, %struct.SGentry* %29, i64 0, !dbg !11377
  %address20 = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx19, i32 0, i32 0, !dbg !11379
  store i32 %conv17, i32* %address20, align 4, !dbg !11380
  br label %do.body21, !dbg !11381

do.body21:                                        ; preds = %do.end
  br label %do.end22, !dbg !11382

do.end22:                                         ; preds = %do.body21
  %30 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11384
  %sg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %30, i32 0, i32 5, !dbg !11385
  store i8 1, i8* %sg_count, align 8, !dbg !11386
  %31 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11387
  %sg_index = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %31, i32 0, i32 6, !dbg !11388
  store i8 0, i8* %sg_index, align 1, !dbg !11389
  %32 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11390
  %33 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11392
  %34 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11393
  %call23 = call zeroext i8 @start_scsi(%struct.AdapterCtlBlk* %32, %struct.DeviceCtlBlk* %33, %struct.ScsiReqBlk* %34) #11, !dbg !11394
  %tobool = icmp ne i8 %call23, 0, !dbg !11394
  br i1 %tobool, label %if.then, label %if.end, !dbg !11395

if.then:                                          ; preds = %do.end22
  %35 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11396
  %cmd24 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %35, i32 0, i32 2, !dbg !11396
  %36 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd24, align 8, !dbg !11396
  %37 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11396
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %37, i32 0, i32 7, !dbg !11396
  %38 = load i8, i8* %target_id, align 2, !dbg !11396
  %conv25 = zext i8 %38 to i32, !dbg !11396
  %39 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11396
  %target_lun = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %39, i32 0, i32 8, !dbg !11396
  %40 = load i8, i8* %target_lun, align 1, !dbg !11396
  %conv26 = zext i8 %40 to i32, !dbg !11396
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.79, i64 0, i64 0), %struct.scsi_cmnd* %36, i32 %conv25, i32 %conv26) #12, !dbg !11396
  %41 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11398
  %list = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %41, i32 0, i32 0, !dbg !11399
  %42 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11400
  %srb_waiting_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %42, i32 0, i32 3, !dbg !11401
  call void @list_move(%struct.list_head* %list, %struct.list_head* %srb_waiting_list) #11, !dbg !11402
  %43 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11403
  call void @waiting_set_timer(%struct.AdapterCtlBlk* %43, i64 2) #11, !dbg !11404
  br label %if.end, !dbg !11405

if.end:                                           ; preds = %if.then, %do.end22
  ret void, !dbg !11406
}

; Function Attrs: noredzone
declare dso_local i8* @scsi_kmap_atomic_sg(%struct.scatterlist*, i32, i64*, i64*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @add_dev(%struct.AdapterCtlBlk* %acb, %struct.DeviceCtlBlk* %dcb, %struct.ScsiInqData* %ptr) #2 !dbg !11407 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  %ptr.addr = alloca %struct.ScsiInqData*, align 8
  %bval1 = alloca i8, align 1
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !11410, metadata !DIExpression()), !dbg !11411
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !11412, metadata !DIExpression()), !dbg !11413
  store %struct.ScsiInqData* %ptr, %struct.ScsiInqData** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiInqData** %ptr.addr, metadata !11414, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.declare(metadata i8* %bval1, metadata !11416, metadata !DIExpression()), !dbg !11417
  %0 = load %struct.ScsiInqData*, %struct.ScsiInqData** %ptr.addr, align 8, !dbg !11418
  %DevType = getelementptr inbounds %struct.ScsiInqData, %struct.ScsiInqData* %0, i32 0, i32 0, !dbg !11419
  %1 = load i8, i8* %DevType, align 1, !dbg !11419
  %conv = zext i8 %1 to i32, !dbg !11418
  %and = and i32 %conv, 31, !dbg !11420
  %conv1 = trunc i32 %and to i8, !dbg !11418
  store i8 %conv1, i8* %bval1, align 1, !dbg !11417
  %2 = load i8, i8* %bval1, align 1, !dbg !11421
  %3 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11422
  %dev_type = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %3, i32 0, i32 17, !dbg !11423
  store i8 %2, i8* %dev_type, align 8, !dbg !11424
  %4 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11425
  %5 = load %struct.ScsiInqData*, %struct.ScsiInqData** %ptr.addr, align 8, !dbg !11426
  call void @disc_tagq_set(%struct.DeviceCtlBlk* %4, %struct.ScsiInqData* %5) #11, !dbg !11427
  ret void, !dbg !11428
}

; Function Attrs: noredzone
declare dso_local void @scsi_kunmap_atomic_sg(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scsi_set_resid(%struct.scsi_cmnd* %cmd, i32 %resid) #2 !dbg !11429 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %resid.addr = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !11432, metadata !DIExpression()), !dbg !11433
  store i32 %resid, i32* %resid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %resid.addr, metadata !11434, metadata !DIExpression()), !dbg !11435
  %0 = load i32, i32* %resid.addr, align 4, !dbg !11436
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !11437
  %req = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %1, i32 0, i32 0, !dbg !11438
  %resid_len = getelementptr inbounds %struct.scsi_request, %struct.scsi_request* %req, i32 0, i32 5, !dbg !11439
  store i32 %0, i32* %resid_len, align 4, !dbg !11440
  ret void, !dbg !11441
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @disc_tagq_set(%struct.DeviceCtlBlk* %dcb, %struct.ScsiInqData* %ptr) #2 !dbg !11442 {
entry:
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  %ptr.addr = alloca %struct.ScsiInqData*, align 8
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !11445, metadata !DIExpression()), !dbg !11446
  store %struct.ScsiInqData* %ptr, %struct.ScsiInqData** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiInqData** %ptr.addr, metadata !11447, metadata !DIExpression()), !dbg !11448
  %0 = load %struct.ScsiInqData*, %struct.ScsiInqData** %ptr.addr, align 8, !dbg !11449
  %Vers = getelementptr inbounds %struct.ScsiInqData, %struct.ScsiInqData* %0, i32 0, i32 2, !dbg !11451
  %1 = load i8, i8* %Vers, align 1, !dbg !11451
  %conv = zext i8 %1 to i32, !dbg !11449
  %and = and i32 %conv, 7, !dbg !11452
  %cmp = icmp sge i32 %and, 2, !dbg !11453
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11454

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ScsiInqData*, %struct.ScsiInqData** %ptr.addr, align 8, !dbg !11455
  %RDF = getelementptr inbounds %struct.ScsiInqData, %struct.ScsiInqData* %2, i32 0, i32 3, !dbg !11456
  %3 = load i8, i8* %RDF, align 1, !dbg !11456
  %conv2 = zext i8 %3 to i32, !dbg !11455
  %and3 = and i32 %conv2, 15, !dbg !11457
  %cmp4 = icmp eq i32 %and3, 2, !dbg !11458
  br i1 %cmp4, label %if.then, label %if.end24, !dbg !11459

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.ScsiInqData*, %struct.ScsiInqData** %ptr.addr, align 8, !dbg !11460
  %Flags = getelementptr inbounds %struct.ScsiInqData, %struct.ScsiInqData* %4, i32 0, i32 7, !dbg !11463
  %5 = load i8, i8* %Flags, align 1, !dbg !11463
  %conv6 = zext i8 %5 to i32, !dbg !11460
  %and7 = and i32 %conv6, 2, !dbg !11464
  %tobool = icmp ne i32 %and7, 0, !dbg !11464
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !11465

land.lhs.true:                                    ; preds = %if.then
  %6 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11466
  %dev_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %6, i32 0, i32 10, !dbg !11467
  %7 = load i8, i8* %dev_mode, align 1, !dbg !11467
  %conv8 = zext i8 %7 to i32, !dbg !11466
  %and9 = and i32 %conv8, 16, !dbg !11468
  %tobool10 = icmp ne i32 %and9, 0, !dbg !11468
  br i1 %tobool10, label %land.lhs.true11, label %if.else, !dbg !11469

land.lhs.true11:                                  ; preds = %land.lhs.true
  %8 = load %struct.ScsiInqData*, %struct.ScsiInqData** %ptr.addr, align 8, !dbg !11470
  %9 = bitcast %struct.ScsiInqData* %8 to i8*, !dbg !11471
  %add.ptr = getelementptr i8, i8* %9, i64 8, !dbg !11472
  %call = call zeroext i8 @tagq_blacklist(i8* %add.ptr) #11, !dbg !11473
  %tobool12 = icmp ne i8 %call, 0, !dbg !11473
  br i1 %tobool12, label %if.else, label %if.then13, !dbg !11474

if.then13:                                        ; preds = %land.lhs.true11
  %10 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11475
  %max_command = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %10, i32 0, i32 6, !dbg !11478
  %11 = load i16, i16* %max_command, align 4, !dbg !11478
  %conv14 = zext i16 %11 to i32, !dbg !11475
  %cmp15 = icmp eq i32 %conv14, 1, !dbg !11479
  br i1 %cmp15, label %if.then17, label %if.end, !dbg !11480

if.then17:                                        ; preds = %if.then13
  %12 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11481
  %acb = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %12, i32 0, i32 1, !dbg !11482
  %13 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !11482
  %tag_max_num = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %13, i32 0, i32 14, !dbg !11483
  %14 = load i8, i8* %tag_max_num, align 8, !dbg !11483
  %conv18 = zext i8 %14 to i16, !dbg !11481
  %15 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11484
  %max_command19 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %15, i32 0, i32 6, !dbg !11485
  store i16 %conv18, i16* %max_command19, align 4, !dbg !11486
  br label %if.end, !dbg !11484

if.end:                                           ; preds = %if.then17, %if.then13
  %16 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11487
  %sync_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %16, i32 0, i32 12, !dbg !11488
  %17 = load i8, i8* %sync_mode, align 1, !dbg !11489
  %conv20 = zext i8 %17 to i32, !dbg !11489
  %or = or i32 %conv20, 32, !dbg !11489
  %conv21 = trunc i32 %or to i8, !dbg !11489
  store i8 %conv21, i8* %sync_mode, align 1, !dbg !11489
  br label %if.end23, !dbg !11490

if.else:                                          ; preds = %land.lhs.true11, %land.lhs.true, %if.then
  %18 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !11491
  %max_command22 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %18, i32 0, i32 6, !dbg !11492
  store i16 1, i16* %max_command22, align 4, !dbg !11493
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.end
  br label %if.end24, !dbg !11494

if.end24:                                         ; preds = %if.end23, %lor.lhs.false
  ret void, !dbg !11495
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @tagq_blacklist(i8* %name) #2 !dbg !11496 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !11499, metadata !DIExpression()), !dbg !11500
  ret i8 0, !dbg !11501
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @data_out_phase0(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb, i16* %pscsi_status) #2 !dbg !11502 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %pscsi_status.addr = alloca i16*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %scsi_status = alloca i16, align 2
  %d_left_counter = alloca i32, align 4
  %oldxferred = alloca i64, align 8
  %diff = alloca i32, align 4
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !11503, metadata !DIExpression()), !dbg !11504
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !11505, metadata !DIExpression()), !dbg !11506
  store i16* %pscsi_status, i16** %pscsi_status.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pscsi_status.addr, metadata !11507, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !11509, metadata !DIExpression()), !dbg !11510
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11511
  %dcb1 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 1, !dbg !11512
  %1 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb1, align 8, !dbg !11512
  store %struct.DeviceCtlBlk* %1, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !11510
  call void @llvm.dbg.declare(metadata i16* %scsi_status, metadata !11513, metadata !DIExpression()), !dbg !11514
  %2 = load i16*, i16** %pscsi_status.addr, align 8, !dbg !11515
  %3 = load i16, i16* %2, align 2, !dbg !11516
  store i16 %3, i16* %scsi_status, align 2, !dbg !11514
  call void @llvm.dbg.declare(metadata i32* %d_left_counter, metadata !11517, metadata !DIExpression()), !dbg !11518
  store i32 0, i32* %d_left_counter, align 4, !dbg !11518
  br label %do.body, !dbg !11519

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11520

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !11522

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !11523

do.end3:                                          ; preds = %do.body2
  %4 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11525
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %4, i32 0, i32 1, !dbg !11525
  %5 = load i64, i64* %io_port_base, align 8, !dbg !11525
  %add = add i64 %5, 161, !dbg !11525
  %conv = trunc i64 %add to i32, !dbg !11525
  call void @outb(i8 zeroext 10, i32 %conv) #11, !dbg !11525
  %6 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11526
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %6, i32 0, i32 10, !dbg !11528
  %7 = load i16, i16* %state, align 8, !dbg !11528
  %conv4 = zext i16 %7 to i32, !dbg !11526
  %and = and i32 %conv4, 512, !dbg !11529
  %tobool = icmp ne i32 %and, 0, !dbg !11529
  br i1 %tobool, label %if.end78, label %if.then, !dbg !11530

if.then:                                          ; preds = %do.end3
  %8 = load i16, i16* %scsi_status, align 2, !dbg !11531
  %conv5 = zext i16 %8 to i32, !dbg !11531
  %and6 = and i32 %conv5, 8, !dbg !11534
  %tobool7 = icmp ne i32 %and6, 0, !dbg !11534
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !11535

if.then8:                                         ; preds = %if.then
  %9 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11536
  %status = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %9, i32 0, i32 18, !dbg !11537
  %10 = load i8, i8* %status, align 1, !dbg !11538
  %conv9 = zext i8 %10 to i32, !dbg !11538
  %or = or i32 %conv9, 16, !dbg !11538
  %conv10 = trunc i32 %or to i8, !dbg !11538
  store i8 %conv10, i8* %status, align 1, !dbg !11538
  br label %if.end, !dbg !11536

if.end:                                           ; preds = %if.then8, %if.then
  %11 = load i16, i16* %scsi_status, align 2, !dbg !11539
  %conv11 = zext i16 %11 to i32, !dbg !11539
  %and12 = and i32 %conv11, 2048, !dbg !11541
  %tobool13 = icmp ne i32 %and12, 0, !dbg !11541
  br i1 %tobool13, label %if.end27, label %if.then14, !dbg !11542

if.then14:                                        ; preds = %if.end
  %12 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11543
  %io_port_base15 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %12, i32 0, i32 1, !dbg !11543
  %13 = load i64, i64* %io_port_base15, align 8, !dbg !11543
  %add16 = add i64 %13, 130, !dbg !11543
  %conv17 = trunc i64 %add16 to i32, !dbg !11543
  %call = call zeroext i8 @inb(i32 %conv17) #11, !dbg !11543
  %conv18 = zext i8 %call to i32, !dbg !11543
  %and19 = and i32 %conv18, 31, !dbg !11545
  store i32 %and19, i32* %d_left_counter, align 4, !dbg !11546
  %14 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !11547
  %sync_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %14, i32 0, i32 14, !dbg !11549
  %15 = load i8, i8* %sync_period, align 1, !dbg !11549
  %conv20 = zext i8 %15 to i32, !dbg !11547
  %and21 = and i32 %conv20, 16, !dbg !11550
  %tobool22 = icmp ne i32 %and21, 0, !dbg !11550
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !11551

if.then23:                                        ; preds = %if.then14
  %16 = load i32, i32* %d_left_counter, align 4, !dbg !11552
  %shl = shl i32 %16, 1, !dbg !11552
  store i32 %shl, i32* %d_left_counter, align 4, !dbg !11552
  br label %if.end24, !dbg !11553

if.end24:                                         ; preds = %if.then23, %if.then14
  br label %do.body25, !dbg !11554

do.body25:                                        ; preds = %if.end24
  br label %do.end26, !dbg !11555

do.end26:                                         ; preds = %do.body25
  br label %if.end27, !dbg !11557

if.end27:                                         ; preds = %do.end26, %if.end
  %17 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11558
  %total_xfer_length = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %17, i32 0, i32 7, !dbg !11560
  %18 = load i64, i64* %total_xfer_length, align 8, !dbg !11560
  %cmp = icmp ugt i64 %18, 4, !dbg !11561
  br i1 %cmp, label %if.then29, label %if.end35, !dbg !11562

if.then29:                                        ; preds = %if.end27
  %19 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11563
  %io_port_base30 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %19, i32 0, i32 1, !dbg !11563
  %20 = load i64, i64* %io_port_base30, align 8, !dbg !11563
  %add31 = add i64 %20, 136, !dbg !11563
  %conv32 = trunc i64 %add31 to i32, !dbg !11563
  %call33 = call i32 @inl(i32 %conv32) #11, !dbg !11563
  %21 = load i32, i32* %d_left_counter, align 4, !dbg !11564
  %add34 = add i32 %21, %call33, !dbg !11564
  store i32 %add34, i32* %d_left_counter, align 4, !dbg !11564
  br label %if.end35, !dbg !11565

if.end35:                                         ; preds = %if.then29, %if.end27
  %22 = load i32, i32* %d_left_counter, align 4, !dbg !11566
  %cmp36 = icmp eq i32 %22, 1, !dbg !11568
  br i1 %cmp36, label %land.lhs.true, label %if.end48, !dbg !11569

land.lhs.true:                                    ; preds = %if.end35
  %23 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !11570
  %sync_period38 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %23, i32 0, i32 14, !dbg !11571
  %24 = load i8, i8* %sync_period38, align 1, !dbg !11571
  %conv39 = zext i8 %24 to i32, !dbg !11570
  %and40 = and i32 %conv39, 16, !dbg !11572
  %tobool41 = icmp ne i32 %and40, 0, !dbg !11572
  br i1 %tobool41, label %land.lhs.true42, label %if.end48, !dbg !11573

land.lhs.true42:                                  ; preds = %land.lhs.true
  %25 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11574
  %cmd = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %25, i32 0, i32 2, !dbg !11575
  %26 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11575
  %call43 = call i32 @scsi_bufflen(%struct.scsi_cmnd* %26) #11, !dbg !11576
  %rem = urem i32 %call43, 2, !dbg !11577
  %tobool44 = icmp ne i32 %rem, 0, !dbg !11577
  br i1 %tobool44, label %if.then45, label %if.end48, !dbg !11578

if.then45:                                        ; preds = %land.lhs.true42
  store i32 0, i32* %d_left_counter, align 4, !dbg !11579
  %27 = load i16, i16* %scsi_status, align 2, !dbg !11581
  %conv46 = zext i16 %27 to i32, !dbg !11581
  %call47 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.88, i64 0, i64 0), i32 %conv46) #12, !dbg !11581
  br label %if.end48, !dbg !11582

if.end48:                                         ; preds = %if.then45, %land.lhs.true42, %land.lhs.true, %if.end35
  %28 = load i32, i32* %d_left_counter, align 4, !dbg !11583
  %cmp49 = icmp eq i32 %28, 0, !dbg !11585
  br i1 %cmp49, label %if.then51, label %if.else, !dbg !11586

if.then51:                                        ; preds = %if.end48
  %29 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11587
  %total_xfer_length52 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %29, i32 0, i32 7, !dbg !11589
  store i64 0, i64* %total_xfer_length52, align 8, !dbg !11590
  br label %if.end77, !dbg !11591

if.else:                                          ; preds = %if.end48
  call void @llvm.dbg.declare(metadata i64* %oldxferred, metadata !11592, metadata !DIExpression()), !dbg !11594
  %30 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11595
  %total_xfer_length53 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %30, i32 0, i32 7, !dbg !11596
  %31 = load i64, i64* %total_xfer_length53, align 8, !dbg !11596
  %32 = load i32, i32* %d_left_counter, align 4, !dbg !11597
  %conv54 = zext i32 %32 to i64, !dbg !11597
  %sub = sub i64 %31, %conv54, !dbg !11598
  store i64 %sub, i64* %oldxferred, align 8, !dbg !11594
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !11599, metadata !DIExpression()), !dbg !11601
  %33 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !11602
  %sync_period55 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %33, i32 0, i32 14, !dbg !11603
  %34 = load i8, i8* %sync_period55, align 1, !dbg !11603
  %conv56 = zext i8 %34 to i32, !dbg !11602
  %and57 = and i32 %conv56, 16, !dbg !11604
  %tobool58 = icmp ne i32 %and57, 0, !dbg !11605
  %35 = zext i1 %tobool58 to i64, !dbg !11605
  %cond = select i1 %tobool58, i32 2, i32 1, !dbg !11605
  store i32 %cond, i32* %diff, align 4, !dbg !11601
  %36 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11606
  %37 = load i32, i32* %d_left_counter, align 4, !dbg !11607
  call void @sg_update_list(%struct.ScsiReqBlk* %36, i32 %37) #11, !dbg !11608
  %38 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11609
  %segment_x = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %38, i32 0, i32 3, !dbg !11611
  %39 = load %struct.SGentry*, %struct.SGentry** %segment_x, align 8, !dbg !11611
  %40 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11612
  %sg_index = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %40, i32 0, i32 6, !dbg !11613
  %41 = load i8, i8* %sg_index, align 1, !dbg !11613
  %idxprom = zext i8 %41 to i64, !dbg !11609
  %arrayidx = getelementptr %struct.SGentry, %struct.SGentry* %39, i64 %idxprom, !dbg !11609
  %length = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx, i32 0, i32 1, !dbg !11614
  %42 = load i32, i32* %length, align 4, !dbg !11614
  %43 = load i32, i32* %diff, align 4, !dbg !11615
  %cmp59 = icmp eq i32 %42, %43, !dbg !11616
  br i1 %cmp59, label %land.lhs.true61, label %lor.lhs.false, !dbg !11617

land.lhs.true61:                                  ; preds = %if.else
  %44 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11618
  %cmd62 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %44, i32 0, i32 2, !dbg !11619
  %45 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd62, align 8, !dbg !11619
  %call63 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %45) #11, !dbg !11620
  %tobool64 = icmp ne i32 %call63, 0, !dbg !11620
  br i1 %tobool64, label %if.then70, label %lor.lhs.false, !dbg !11621

lor.lhs.false:                                    ; preds = %land.lhs.true61, %if.else
  %46 = load i64, i64* %oldxferred, align 8, !dbg !11622
  %and65 = and i64 %46, 4095, !dbg !11623
  %47 = load i32, i32* %diff, align 4, !dbg !11624
  %conv66 = sext i32 %47 to i64, !dbg !11624
  %sub67 = sub i64 4096, %conv66, !dbg !11625
  %cmp68 = icmp eq i64 %and65, %sub67, !dbg !11626
  br i1 %cmp68, label %if.then70, label %if.end76, !dbg !11627

if.then70:                                        ; preds = %lor.lhs.false, %land.lhs.true61
  %48 = load i32, i32* %diff, align 4, !dbg !11628
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.89, i64 0, i64 0), i32 %48) #12, !dbg !11628
  %49 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11630
  %total_xfer_length72 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %49, i32 0, i32 7, !dbg !11631
  %50 = load i64, i64* %total_xfer_length72, align 8, !dbg !11631
  %51 = load i32, i32* %diff, align 4, !dbg !11632
  %conv73 = sext i32 %51 to i64, !dbg !11632
  %sub74 = sub i64 %50, %conv73, !dbg !11633
  %conv75 = trunc i64 %sub74 to i32, !dbg !11630
  store i32 %conv75, i32* %d_left_counter, align 4, !dbg !11634
  %52 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11635
  %53 = load i32, i32* %d_left_counter, align 4, !dbg !11636
  call void @sg_update_list(%struct.ScsiReqBlk* %52, i32 %53) #11, !dbg !11637
  br label %if.end76, !dbg !11638

if.end76:                                         ; preds = %if.then70, %lor.lhs.false
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then51
  br label %if.end78, !dbg !11639

if.end78:                                         ; preds = %if.end77, %do.end3
  %54 = load i16*, i16** %pscsi_status.addr, align 8, !dbg !11640
  %55 = load i16, i16* %54, align 2, !dbg !11642
  %conv79 = zext i16 %55 to i32, !dbg !11642
  %and80 = and i32 %conv79, 7, !dbg !11643
  %cmp81 = icmp ne i32 %and80, 0, !dbg !11644
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !11645

if.then83:                                        ; preds = %if.end78
  %56 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11646
  %57 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11648
  call void @cleanup_after_transfer(%struct.AdapterCtlBlk* %56, %struct.ScsiReqBlk* %57) #11, !dbg !11649
  br label %if.end84, !dbg !11650

if.end84:                                         ; preds = %if.then83, %if.end78
  ret void, !dbg !11651
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @data_in_phase0(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb, i16* %pscsi_status) #2 !dbg !11652 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %pscsi_status.addr = alloca i16*, align 8
  %scsi_status = alloca i16, align 2
  %d_left_counter = alloca i32, align 4
  %sc = alloca i32, align 4
  %fc = alloca i32, align 4
  %left_io = alloca i64, align 8
  %virt = alloca i8*, align 8
  %base = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %offset = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %byte = alloca i8, align 1
  %__ret_warn_on = alloca i32, align 4
  %tmp104 = alloca i64, align 8
  %byte124 = alloca i8, align 1
  %__dummy139 = alloca i64, align 8
  %__dummy2140 = alloca i64, align 8
  %tmp143 = alloca i32, align 4
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !11653, metadata !DIExpression()), !dbg !11654
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !11655, metadata !DIExpression()), !dbg !11656
  store i16* %pscsi_status, i16** %pscsi_status.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pscsi_status.addr, metadata !11657, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.declare(metadata i16* %scsi_status, metadata !11659, metadata !DIExpression()), !dbg !11660
  %0 = load i16*, i16** %pscsi_status.addr, align 8, !dbg !11661
  %1 = load i16, i16* %0, align 2, !dbg !11662
  store i16 %1, i16* %scsi_status, align 2, !dbg !11660
  br label %do.body, !dbg !11663

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11664

do.end:                                           ; preds = %do.body
  %2 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11666
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %2, i32 0, i32 10, !dbg !11668
  %3 = load i16, i16* %state, align 8, !dbg !11668
  %conv = zext i16 %3 to i32, !dbg !11666
  %and = and i32 %conv, 512, !dbg !11669
  %tobool = icmp ne i32 %and, 0, !dbg !11669
  br i1 %tobool, label %if.end157, label %if.then, !dbg !11670

if.then:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %d_left_counter, metadata !11671, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.declare(metadata i32* %sc, metadata !11674, metadata !DIExpression()), !dbg !11675
  call void @llvm.dbg.declare(metadata i32* %fc, metadata !11676, metadata !DIExpression()), !dbg !11677
  %4 = load i16, i16* %scsi_status, align 2, !dbg !11678
  %conv1 = zext i16 %4 to i32, !dbg !11678
  %and2 = and i32 %conv1, 8, !dbg !11680
  %tobool3 = icmp ne i32 %and2, 0, !dbg !11680
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !11681

if.then4:                                         ; preds = %if.then
  %5 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11682
  %cmd = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %5, i32 0, i32 2, !dbg !11682
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11682
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.92, i64 0, i64 0), %struct.scsi_cmnd* %6) #12, !dbg !11682
  %7 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11684
  %status = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %7, i32 0, i32 18, !dbg !11685
  %8 = load i8, i8* %status, align 1, !dbg !11686
  %conv5 = zext i8 %8 to i32, !dbg !11686
  %or = or i32 %conv5, 16, !dbg !11686
  %conv6 = trunc i32 %or to i8, !dbg !11686
  store i8 %conv6, i8* %status, align 1, !dbg !11686
  br label %if.end, !dbg !11687

if.end:                                           ; preds = %if.then4, %if.then
  %9 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11688
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %9, i32 0, i32 1, !dbg !11688
  %10 = load i64, i64* %io_port_base, align 8, !dbg !11688
  %add = add i64 %10, 162, !dbg !11688
  %conv7 = trunc i64 %add to i32, !dbg !11688
  %call8 = call zeroext i8 @inb(i32 %conv7) #11, !dbg !11688
  %conv9 = zext i8 %call8 to i32, !dbg !11688
  %and10 = and i32 %conv9, 128, !dbg !11690
  %tobool11 = icmp ne i32 %and10, 0, !dbg !11690
  br i1 %tobool11, label %if.end15, label %if.then12, !dbg !11691

if.then12:                                        ; preds = %if.end
  br label %do.body13, !dbg !11692

do.body13:                                        ; preds = %if.then12
  br label %do.end14, !dbg !11694

do.end14:                                         ; preds = %do.body13
  br label %if.end15, !dbg !11696

if.end15:                                         ; preds = %do.end14, %if.end
  %11 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11697
  %io_port_base16 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %11, i32 0, i32 1, !dbg !11697
  %12 = load i64, i64* %io_port_base16, align 8, !dbg !11697
  %add17 = add i64 %12, 136, !dbg !11697
  %conv18 = trunc i64 %add17 to i32, !dbg !11697
  %call19 = call i32 @inl(i32 %conv18) #11, !dbg !11697
  store i32 %call19, i32* %sc, align 4, !dbg !11698
  %13 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11699
  %io_port_base20 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %13, i32 0, i32 1, !dbg !11699
  %14 = load i64, i64* %io_port_base20, align 8, !dbg !11699
  %add21 = add i64 %14, 130, !dbg !11699
  %conv22 = trunc i64 %add21 to i32, !dbg !11699
  %call23 = call zeroext i8 @inb(i32 %conv22) #11, !dbg !11699
  %conv24 = zext i8 %call23 to i32, !dbg !11699
  store i32 %conv24, i32* %fc, align 4, !dbg !11700
  %15 = load i32, i32* %sc, align 4, !dbg !11701
  %16 = load i32, i32* %fc, align 4, !dbg !11702
  %and25 = and i32 %16, 31, !dbg !11703
  %17 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11704
  %dcb = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %17, i32 0, i32 1, !dbg !11705
  %18 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !11705
  %sync_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %18, i32 0, i32 14, !dbg !11706
  %19 = load i8, i8* %sync_period, align 1, !dbg !11706
  %conv26 = zext i8 %19 to i32, !dbg !11704
  %and27 = and i32 %conv26, 16, !dbg !11707
  %tobool28 = icmp ne i32 %and27, 0, !dbg !11708
  %20 = zext i1 %tobool28 to i64, !dbg !11708
  %cond = select i1 %tobool28, i32 1, i32 0, !dbg !11708
  %shl = shl i32 %and25, %cond, !dbg !11709
  %add29 = add i32 %15, %shl, !dbg !11710
  store i32 %add29, i32* %d_left_counter, align 4, !dbg !11711
  br label %do.body30, !dbg !11712

do.body30:                                        ; preds = %if.end15
  br label %do.end31, !dbg !11713

do.end31:                                         ; preds = %do.body30
  %21 = load i32, i32* %d_left_counter, align 4, !dbg !11715
  %tobool32 = icmp ne i32 %21, 0, !dbg !11715
  br i1 %tobool32, label %land.lhs.true, label %if.end147, !dbg !11717

land.lhs.true:                                    ; preds = %do.end31
  %22 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11718
  %total_xfer_length = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %22, i32 0, i32 7, !dbg !11719
  %23 = load i64, i64* %total_xfer_length, align 8, !dbg !11719
  %cmp = icmp ule i64 %23, 4, !dbg !11720
  br i1 %cmp, label %if.then34, label %if.end147, !dbg !11721

if.then34:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %left_io, metadata !11722, metadata !DIExpression()), !dbg !11724
  %24 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11725
  %total_xfer_length35 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %24, i32 0, i32 7, !dbg !11726
  %25 = load i64, i64* %total_xfer_length35, align 8, !dbg !11726
  store i64 %25, i64* %left_io, align 8, !dbg !11724
  br label %do.body36, !dbg !11727

do.body36:                                        ; preds = %if.then34
  br label %do.end37, !dbg !11728

do.end37:                                         ; preds = %do.body36
  %26 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11730
  %dcb38 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %26, i32 0, i32 1, !dbg !11732
  %27 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb38, align 8, !dbg !11732
  %sync_period39 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %27, i32 0, i32 14, !dbg !11733
  %28 = load i8, i8* %sync_period39, align 1, !dbg !11733
  %conv40 = zext i8 %28 to i32, !dbg !11730
  %and41 = and i32 %conv40, 16, !dbg !11734
  %tobool42 = icmp ne i32 %and41, 0, !dbg !11734
  br i1 %tobool42, label %if.then43, label %if.end47, !dbg !11735

if.then43:                                        ; preds = %do.end37
  %29 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11736
  %io_port_base44 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %29, i32 0, i32 1, !dbg !11736
  %30 = load i64, i64* %io_port_base44, align 8, !dbg !11736
  %add45 = add i64 %30, 143, !dbg !11736
  %conv46 = trunc i64 %add45 to i32, !dbg !11736
  call void @outb(i8 zeroext 2, i32 %conv46) #11, !dbg !11736
  br label %if.end47, !dbg !11736

if.end47:                                         ; preds = %if.then43, %do.end37
  br label %while.cond, !dbg !11737

while.cond:                                       ; preds = %do.end145, %if.end47
  %31 = load i64, i64* %left_io, align 8, !dbg !11738
  %tobool48 = icmp ne i64 %31, 0, !dbg !11737
  br i1 %tobool48, label %while.body, label %while.end146, !dbg !11737

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %virt, metadata !11739, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.declare(metadata i8** %base, metadata !11742, metadata !DIExpression()), !dbg !11743
  store i8* null, i8** %base, align 8, !dbg !11743
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11744, metadata !DIExpression()), !dbg !11745
  store i64 0, i64* %flags, align 8, !dbg !11745
  call void @llvm.dbg.declare(metadata i64* %len, metadata !11746, metadata !DIExpression()), !dbg !11747
  %32 = load i64, i64* %left_io, align 8, !dbg !11748
  store i64 %32, i64* %len, align 8, !dbg !11747
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !11749, metadata !DIExpression()), !dbg !11750
  %33 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11751
  %request_length = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %33, i32 0, i32 8, !dbg !11752
  %34 = load i64, i64* %request_length, align 8, !dbg !11752
  %35 = load i64, i64* %left_io, align 8, !dbg !11753
  %sub = sub i64 %34, %35, !dbg !11754
  store i64 %sub, i64* %offset, align 8, !dbg !11750
  br label %do.body49, !dbg !11755

do.body49:                                        ; preds = %while.body
  br label %do.body50, !dbg !11756

do.body50:                                        ; preds = %do.body49
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11758, metadata !DIExpression()), !dbg !11761
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11762, metadata !DIExpression()), !dbg !11761
  %cmp51 = icmp eq i64* %__dummy, %__dummy2, !dbg !11761
  %conv52 = zext i1 %cmp51 to i32, !dbg !11761
  store i32 1, i32* %tmp, align 4, !dbg !11761
  %36 = load i32, i32* %tmp, align 4, !dbg !11761
  %call53 = call i64 @arch_local_irq_save() #11, !dbg !11763
  store i64 %call53, i64* %flags, align 8, !dbg !11763
  br label %do.end54, !dbg !11763

do.end54:                                         ; preds = %do.body50
  br label %do.end55, !dbg !11756

do.end55:                                         ; preds = %do.end54
  %37 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11764
  %cmd56 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %37, i32 0, i32 2, !dbg !11765
  %38 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd56, align 8, !dbg !11765
  %call57 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %38) #11, !dbg !11766
  %39 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11767
  %sg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %39, i32 0, i32 5, !dbg !11768
  %40 = load i8, i8* %sg_count, align 8, !dbg !11768
  %conv58 = zext i8 %40 to i32, !dbg !11767
  %call59 = call i8* @scsi_kmap_atomic_sg(%struct.scatterlist* %call57, i32 %conv58, i64* %offset, i64* %len) #11, !dbg !11769
  store i8* %call59, i8** %base, align 8, !dbg !11770
  %41 = load i8*, i8** %base, align 8, !dbg !11771
  %42 = load i64, i64* %offset, align 8, !dbg !11772
  %add.ptr = getelementptr i8, i8* %41, i64 %42, !dbg !11773
  store i8* %add.ptr, i8** %virt, align 8, !dbg !11774
  %43 = load i64, i64* %len, align 8, !dbg !11775
  %44 = load i64, i64* %left_io, align 8, !dbg !11776
  %sub60 = sub i64 %44, %43, !dbg !11776
  store i64 %sub60, i64* %left_io, align 8, !dbg !11776
  br label %while.cond61, !dbg !11777

while.cond61:                                     ; preds = %if.end77, %do.end55
  %45 = load i64, i64* %len, align 8, !dbg !11778
  %tobool62 = icmp ne i64 %45, 0, !dbg !11777
  br i1 %tobool62, label %while.body63, label %while.end, !dbg !11777

while.body63:                                     ; preds = %while.cond61
  call void @llvm.dbg.declare(metadata i8* %byte, metadata !11779, metadata !DIExpression()), !dbg !11781
  %46 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11782
  %io_port_base64 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %46, i32 0, i32 1, !dbg !11782
  %47 = load i64, i64* %io_port_base64, align 8, !dbg !11782
  %add65 = add i64 %47, 152, !dbg !11782
  %conv66 = trunc i64 %add65 to i32, !dbg !11782
  %call67 = call zeroext i8 @inb(i32 %conv66) #11, !dbg !11782
  store i8 %call67, i8* %byte, align 1, !dbg !11783
  %48 = load i8, i8* %byte, align 1, !dbg !11784
  %49 = load i8*, i8** %virt, align 8, !dbg !11785
  %incdec.ptr = getelementptr i8, i8* %49, i32 1, !dbg !11785
  store i8* %incdec.ptr, i8** %virt, align 8, !dbg !11785
  store i8 %48, i8* %49, align 1, !dbg !11786
  %50 = load i32, i32* %d_left_counter, align 4, !dbg !11787
  %dec = add i32 %50, -1, !dbg !11787
  store i32 %dec, i32* %d_left_counter, align 4, !dbg !11787
  %51 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11788
  call void @sg_subtract_one(%struct.ScsiReqBlk* %51) #11, !dbg !11789
  %52 = load i64, i64* %len, align 8, !dbg !11790
  %dec68 = add i64 %52, -1, !dbg !11790
  store i64 %dec68, i64* %len, align 8, !dbg !11790
  %53 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11791
  %io_port_base69 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %53, i32 0, i32 1, !dbg !11791
  %54 = load i64, i64* %io_port_base69, align 8, !dbg !11791
  %add70 = add i64 %54, 130, !dbg !11791
  %conv71 = trunc i64 %add70 to i32, !dbg !11791
  %call72 = call zeroext i8 @inb(i32 %conv71) #11, !dbg !11791
  %conv73 = zext i8 %call72 to i32, !dbg !11791
  store i32 %conv73, i32* %fc, align 4, !dbg !11792
  %55 = load i32, i32* %fc, align 4, !dbg !11793
  %cmp74 = icmp eq i32 %55, 64, !dbg !11795
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !11796

if.then76:                                        ; preds = %while.body63
  store i64 0, i64* %left_io, align 8, !dbg !11797
  br label %while.end, !dbg !11799

if.end77:                                         ; preds = %while.body63
  br label %while.cond61, !dbg !11777, !llvm.loop !11800

while.end:                                        ; preds = %if.then76, %while.cond61
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11802, metadata !DIExpression()), !dbg !11804
  %56 = load i32, i32* %fc, align 4, !dbg !11804
  %cmp78 = icmp ne i32 %56, 64, !dbg !11804
  %conv79 = zext i1 %cmp78 to i32, !dbg !11804
  %57 = load i32, i32* %d_left_counter, align 4, !dbg !11804
  %tobool80 = icmp ne i32 %57, 0, !dbg !11804
  %lnot = xor i1 %tobool80, true, !dbg !11804
  %lnot.ext = zext i1 %lnot to i32, !dbg !11804
  %cmp81 = icmp eq i32 %conv79, %lnot.ext, !dbg !11804
  %lnot83 = xor i1 %cmp81, true, !dbg !11804
  %lnot85 = xor i1 %lnot83, true, !dbg !11804
  %lnot.ext86 = zext i1 %lnot85 to i32, !dbg !11804
  store i32 %lnot.ext86, i32* %__ret_warn_on, align 4, !dbg !11804
  %58 = load i32, i32* %__ret_warn_on, align 4, !dbg !11805
  %tobool87 = icmp ne i32 %58, 0, !dbg !11805
  %lnot88 = xor i1 %tobool87, true, !dbg !11805
  %lnot90 = xor i1 %lnot88, true, !dbg !11805
  %lnot.ext91 = zext i1 %lnot90 to i32, !dbg !11805
  %conv92 = sext i32 %lnot.ext91 to i64, !dbg !11805
  %tobool93 = icmp ne i64 %conv92, 0, !dbg !11805
  br i1 %tobool93, label %if.then94, label %if.end103, !dbg !11804

if.then94:                                        ; preds = %while.end
  br label %do.body95, !dbg !11805

do.body95:                                        ; preds = %if.then94
  br label %do.body96, !dbg !11807

do.body96:                                        ; preds = %do.body95
  br label %do.end97, !dbg !11809

do.end97:                                         ; preds = %do.body96
  br label %do.body98, !dbg !11807

do.body98:                                        ; preds = %do.end97
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0), i32 2175, i32 2305, i64 12) #6, !dbg !11811, !srcloc !11813
  br label %do.end99, !dbg !11811

do.end99:                                         ; preds = %do.body98
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 326) #6, !dbg !11814, !srcloc !11816
  br label %do.body100, !dbg !11807

do.body100:                                       ; preds = %do.end99
  br label %do.end101, !dbg !11817

do.end101:                                        ; preds = %do.body100
  br label %do.end102, !dbg !11807

do.end102:                                        ; preds = %do.end101
  br label %if.end103, !dbg !11807

if.end103:                                        ; preds = %do.end102, %while.end
  %59 = load i32, i32* %__ret_warn_on, align 4, !dbg !11804
  %tobool105 = icmp ne i32 %59, 0, !dbg !11804
  %lnot106 = xor i1 %tobool105, true, !dbg !11804
  %lnot108 = xor i1 %lnot106, true, !dbg !11804
  %lnot.ext109 = zext i1 %lnot108 to i32, !dbg !11804
  %conv110 = sext i32 %lnot.ext109 to i64, !dbg !11804
  store i64 %conv110, i64* %tmp104, align 8, !dbg !11805
  %60 = load i64, i64* %tmp104, align 8, !dbg !11804
  %61 = load i32, i32* %fc, align 4, !dbg !11819
  %cmp111 = icmp eq i32 %61, 64, !dbg !11821
  br i1 %cmp111, label %land.lhs.true113, label %if.end136, !dbg !11822

land.lhs.true113:                                 ; preds = %if.end103
  %62 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11823
  %dcb114 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %62, i32 0, i32 1, !dbg !11824
  %63 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb114, align 8, !dbg !11824
  %sync_period115 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %63, i32 0, i32 14, !dbg !11825
  %64 = load i8, i8* %sync_period115, align 1, !dbg !11825
  %conv116 = zext i8 %64 to i32, !dbg !11823
  %and117 = and i32 %conv116, 16, !dbg !11826
  %tobool118 = icmp ne i32 %and117, 0, !dbg !11826
  br i1 %tobool118, label %if.then119, label %if.end136, !dbg !11827

if.then119:                                       ; preds = %land.lhs.true113
  %65 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11828
  %total_xfer_length120 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %65, i32 0, i32 7, !dbg !11831
  %66 = load i64, i64* %total_xfer_length120, align 8, !dbg !11831
  %cmp121 = icmp ugt i64 %66, 0, !dbg !11832
  br i1 %cmp121, label %if.then123, label %if.end132, !dbg !11833

if.then123:                                       ; preds = %if.then119
  call void @llvm.dbg.declare(metadata i8* %byte124, metadata !11834, metadata !DIExpression()), !dbg !11836
  %67 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11837
  %io_port_base125 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %67, i32 0, i32 1, !dbg !11837
  %68 = load i64, i64* %io_port_base125, align 8, !dbg !11837
  %add126 = add i64 %68, 152, !dbg !11837
  %conv127 = trunc i64 %add126 to i32, !dbg !11837
  %call128 = call zeroext i8 @inb(i32 %conv127) #11, !dbg !11837
  store i8 %call128, i8* %byte124, align 1, !dbg !11836
  %69 = load i8, i8* %byte124, align 1, !dbg !11838
  %70 = load i8*, i8** %virt, align 8, !dbg !11839
  %incdec.ptr129 = getelementptr i8, i8* %70, i32 1, !dbg !11839
  store i8* %incdec.ptr129, i8** %virt, align 8, !dbg !11839
  store i8 %69, i8* %70, align 1, !dbg !11840
  %71 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11841
  %total_xfer_length130 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %71, i32 0, i32 7, !dbg !11842
  %72 = load i64, i64* %total_xfer_length130, align 8, !dbg !11843
  %dec131 = add i64 %72, -1, !dbg !11843
  store i64 %dec131, i64* %total_xfer_length130, align 8, !dbg !11843
  br label %if.end132, !dbg !11844

if.end132:                                        ; preds = %if.then123, %if.then119
  %73 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11845
  %io_port_base133 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %73, i32 0, i32 1, !dbg !11845
  %74 = load i64, i64* %io_port_base133, align 8, !dbg !11845
  %add134 = add i64 %74, 143, !dbg !11845
  %conv135 = trunc i64 %add134 to i32, !dbg !11845
  call void @outb(i8 zeroext 0, i32 %conv135) #11, !dbg !11845
  br label %if.end136, !dbg !11846

if.end136:                                        ; preds = %if.end132, %land.lhs.true113, %if.end103
  %75 = load i8*, i8** %base, align 8, !dbg !11847
  call void @scsi_kunmap_atomic_sg(i8* %75) #11, !dbg !11848
  br label %do.body137, !dbg !11849

do.body137:                                       ; preds = %if.end136
  br label %do.body138, !dbg !11850

do.body138:                                       ; preds = %do.body137
  call void @llvm.dbg.declare(metadata i64* %__dummy139, metadata !11852, metadata !DIExpression()), !dbg !11855
  call void @llvm.dbg.declare(metadata i64* %__dummy2140, metadata !11856, metadata !DIExpression()), !dbg !11855
  %cmp141 = icmp eq i64* %__dummy139, %__dummy2140, !dbg !11855
  %conv142 = zext i1 %cmp141 to i32, !dbg !11855
  store i32 1, i32* %tmp143, align 4, !dbg !11855
  %76 = load i32, i32* %tmp143, align 4, !dbg !11855
  %77 = load i64, i64* %flags, align 8, !dbg !11857
  call void @arch_local_irq_restore(i64 %77) #11, !dbg !11857
  br label %do.end144, !dbg !11857

do.end144:                                        ; preds = %do.body138
  br label %do.end145, !dbg !11850

do.end145:                                        ; preds = %do.end144
  br label %while.cond, !dbg !11737, !llvm.loop !11858

while.end146:                                     ; preds = %while.cond
  br label %if.end147, !dbg !11860

if.end147:                                        ; preds = %while.end146, %land.lhs.true, %do.end31
  %78 = load i32, i32* %d_left_counter, align 4, !dbg !11861
  %cmp148 = icmp eq i32 %78, 0, !dbg !11863
  br i1 %cmp148, label %if.then153, label %lor.lhs.false, !dbg !11864

lor.lhs.false:                                    ; preds = %if.end147
  %79 = load i16, i16* %scsi_status, align 2, !dbg !11865
  %conv150 = zext i16 %79 to i32, !dbg !11865
  %and151 = and i32 %conv150, 256, !dbg !11866
  %tobool152 = icmp ne i32 %and151, 0, !dbg !11866
  br i1 %tobool152, label %if.then153, label %if.else, !dbg !11867

if.then153:                                       ; preds = %lor.lhs.false, %if.end147
  %80 = load i32, i32* %d_left_counter, align 4, !dbg !11868
  %conv154 = zext i32 %80 to i64, !dbg !11868
  %81 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11870
  %total_xfer_length155 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %81, i32 0, i32 7, !dbg !11871
  store i64 %conv154, i64* %total_xfer_length155, align 8, !dbg !11872
  br label %if.end156, !dbg !11873

if.else:                                          ; preds = %lor.lhs.false
  %82 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11874
  %83 = load i32, i32* %d_left_counter, align 4, !dbg !11876
  call void @sg_update_list(%struct.ScsiReqBlk* %82, i32 %83) #11, !dbg !11877
  br label %if.end156

if.end156:                                        ; preds = %if.else, %if.then153
  br label %if.end157, !dbg !11878

if.end157:                                        ; preds = %if.end156, %do.end
  %84 = load i16*, i16** %pscsi_status.addr, align 8, !dbg !11879
  %85 = load i16, i16* %84, align 2, !dbg !11881
  %conv158 = zext i16 %85 to i32, !dbg !11881
  %and159 = and i32 %conv158, 7, !dbg !11882
  %cmp160 = icmp ne i32 %and159, 1, !dbg !11883
  br i1 %cmp160, label %if.then162, label %if.end163, !dbg !11884

if.then162:                                       ; preds = %if.end157
  %86 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11885
  %87 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11887
  call void @cleanup_after_transfer(%struct.AdapterCtlBlk* %86, %struct.ScsiReqBlk* %87) #11, !dbg !11888
  br label %if.end163, !dbg !11889

if.end163:                                        ; preds = %if.then162, %if.end157
  ret void, !dbg !11890
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @command_phase0(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb, i16* %pscsi_status) #2 !dbg !11891 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %pscsi_status.addr = alloca i16*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !11892, metadata !DIExpression()), !dbg !11893
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !11894, metadata !DIExpression()), !dbg !11895
  store i16* %pscsi_status, i16** %pscsi_status.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pscsi_status.addr, metadata !11896, metadata !DIExpression()), !dbg !11897
  br label %do.body, !dbg !11898

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11899

do.end:                                           ; preds = %do.body
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11901
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 1, !dbg !11901
  %1 = load i64, i64* %io_port_base, align 8, !dbg !11901
  %add = add i64 %1, 128, !dbg !11901
  %conv = trunc i64 %add to i32, !dbg !11901
  call void @outw(i16 zeroext 2, i32 %conv) #11, !dbg !11901
  ret void, !dbg !11902
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @status_phase0(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb, i16* %pscsi_status) #2 !dbg !11903 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %pscsi_status.addr = alloca i16*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !11904, metadata !DIExpression()), !dbg !11905
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !11906, metadata !DIExpression()), !dbg !11907
  store i16* %pscsi_status, i16** %pscsi_status.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pscsi_status.addr, metadata !11908, metadata !DIExpression()), !dbg !11909
  br label %do.body, !dbg !11910

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11911

do.end:                                           ; preds = %do.body
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11913
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 1, !dbg !11913
  %1 = load i64, i64* %io_port_base, align 8, !dbg !11913
  %add = add i64 %1, 152, !dbg !11913
  %conv = trunc i64 %add to i32, !dbg !11913
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !11913
  %2 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11914
  %target_status = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %2, i32 0, i32 14, !dbg !11915
  store i8 %call, i8* %target_status, align 1, !dbg !11916
  %3 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11917
  %io_port_base1 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %3, i32 0, i32 1, !dbg !11917
  %4 = load i64, i64* %io_port_base1, align 8, !dbg !11917
  %add2 = add i64 %4, 152, !dbg !11917
  %conv3 = trunc i64 %add2 to i32, !dbg !11917
  %call4 = call zeroext i8 @inb(i32 %conv3) #11, !dbg !11917
  %5 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11918
  %end_message = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %5, i32 0, i32 16, !dbg !11919
  store i8 %call4, i8* %end_message, align 1, !dbg !11920
  %6 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11921
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %6, i32 0, i32 10, !dbg !11922
  store i16 2048, i16* %state, align 8, !dbg !11923
  %7 = load i16*, i16** %pscsi_status.addr, align 8, !dbg !11924
  store i16 5, i16* %7, align 2, !dbg !11925
  %8 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11926
  %io_port_base5 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %8, i32 0, i32 1, !dbg !11926
  %9 = load i64, i64* %io_port_base5, align 8, !dbg !11926
  %add6 = add i64 %9, 128, !dbg !11926
  %conv7 = trunc i64 %add6 to i32, !dbg !11926
  call void @outw(i16 zeroext 2, i32 %conv7) #11, !dbg !11926
  %10 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11927
  %io_port_base8 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %10, i32 0, i32 1, !dbg !11927
  %11 = load i64, i64* %io_port_base8, align 8, !dbg !11927
  %add9 = add i64 %11, 144, !dbg !11927
  %conv10 = trunc i64 %add9 to i32, !dbg !11927
  call void @outb(i8 zeroext -40, i32 %conv10) #11, !dbg !11927
  ret void, !dbg !11928
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nop0(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb, i16* %pscsi_status) #2 !dbg !11929 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %pscsi_status.addr = alloca i16*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !11930, metadata !DIExpression()), !dbg !11931
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !11932, metadata !DIExpression()), !dbg !11933
  store i16* %pscsi_status, i16** %pscsi_status.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pscsi_status.addr, metadata !11934, metadata !DIExpression()), !dbg !11935
  ret void, !dbg !11936
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @msgout_phase0(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb, i16* %pscsi_status) #2 !dbg !11937 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %pscsi_status.addr = alloca i16*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !11938, metadata !DIExpression()), !dbg !11939
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !11940, metadata !DIExpression()), !dbg !11941
  store i16* %pscsi_status, i16** %pscsi_status.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pscsi_status.addr, metadata !11942, metadata !DIExpression()), !dbg !11943
  br label %do.body, !dbg !11944

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11945

do.end:                                           ; preds = %do.body
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11947
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 10, !dbg !11949
  %1 = load i16, i16* %state, align 8, !dbg !11949
  %conv = zext i16 %1 to i32, !dbg !11947
  %and = and i32 %conv, 36864, !dbg !11950
  %tobool = icmp ne i32 %and, 0, !dbg !11950
  br i1 %tobool, label %if.then, label %if.end, !dbg !11951

if.then:                                          ; preds = %do.end
  %2 = load i16*, i16** %pscsi_status.addr, align 8, !dbg !11952
  store i16 5, i16* %2, align 2, !dbg !11953
  br label %if.end, !dbg !11954

if.end:                                           ; preds = %if.then, %do.end
  %3 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11955
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %3, i32 0, i32 1, !dbg !11955
  %4 = load i64, i64* %io_port_base, align 8, !dbg !11955
  %add = add i64 %4, 128, !dbg !11955
  %conv1 = trunc i64 %add to i32, !dbg !11955
  call void @outw(i16 zeroext 2, i32 %conv1) #11, !dbg !11955
  %5 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11956
  %state2 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %5, i32 0, i32 10, !dbg !11957
  %6 = load i16, i16* %state2, align 8, !dbg !11958
  %conv3 = zext i16 %6 to i32, !dbg !11958
  %and4 = and i32 %conv3, -5, !dbg !11958
  %conv5 = trunc i32 %and4 to i16, !dbg !11958
  store i16 %conv5, i16* %state2, align 8, !dbg !11958
  ret void, !dbg !11959
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @msgin_phase0(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb, i16* %pscsi_status) #2 !dbg !11960 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %pscsi_status.addr = alloca i16*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !11961, metadata !DIExpression()), !dbg !11962
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !11963, metadata !DIExpression()), !dbg !11964
  store i16* %pscsi_status, i16** %pscsi_status.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pscsi_status.addr, metadata !11965, metadata !DIExpression()), !dbg !11966
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !11967, metadata !DIExpression()), !dbg !11968
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11969
  %active_dcb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 5, !dbg !11970
  %1 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %active_dcb, align 8, !dbg !11970
  store %struct.DeviceCtlBlk* %1, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !11968
  br label %do.body, !dbg !11971

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11972

do.end:                                           ; preds = %do.body
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11974
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 1, !dbg !11974
  %3 = load i64, i64* %io_port_base, align 8, !dbg !11974
  %add = add i64 %3, 152, !dbg !11974
  %conv = trunc i64 %add to i32, !dbg !11974
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !11974
  %4 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11975
  %msgin_buf = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %4, i32 0, i32 11, !dbg !11976
  %5 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11977
  %msg_len = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %5, i32 0, i32 24, !dbg !11978
  %6 = load i8, i8* %msg_len, align 8, !dbg !11979
  %inc = add i8 %6, 1, !dbg !11979
  store i8 %inc, i8* %msg_len, align 8, !dbg !11979
  %idxprom = zext i8 %6 to i64, !dbg !11975
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %msgin_buf, i64 0, i64 %idxprom, !dbg !11975
  store i8 %call, i8* %arrayidx, align 1, !dbg !11980
  %7 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11981
  %msgin_buf1 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %7, i32 0, i32 11, !dbg !11983
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %msgin_buf1, i64 0, i64 0, !dbg !11981
  %8 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11984
  %msg_len2 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %8, i32 0, i32 24, !dbg !11985
  %9 = load i8, i8* %msg_len2, align 8, !dbg !11985
  %conv3 = zext i8 %9 to i32, !dbg !11984
  %call4 = call zeroext i8 @msgin_completed(i8* %arraydecay, i32 %conv3) #11, !dbg !11986
  %tobool = icmp ne i8 %call4, 0, !dbg !11986
  br i1 %tobool, label %if.then, label %if.end98, !dbg !11987

if.then:                                          ; preds = %do.end
  %10 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11988
  %msgin_buf5 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %10, i32 0, i32 11, !dbg !11990
  %arrayidx6 = getelementptr [6 x i8], [6 x i8]* %msgin_buf5, i64 0, i64 0, !dbg !11988
  %11 = load i8, i8* %arrayidx6, align 2, !dbg !11988
  %conv7 = zext i8 %11 to i32, !dbg !11988
  switch i32 %conv7, label %sw.default [
    i32 4, label %sw.bb
    i32 32, label %sw.bb8
    i32 33, label %sw.bb8
    i32 34, label %sw.bb8
    i32 7, label %sw.bb12
    i32 1, label %sw.bb26
    i32 35, label %sw.bb57
    i32 0, label %sw.bb60
    i32 2, label %sw.bb61
    i32 3, label %sw.bb64
    i32 6, label %sw.bb67
  ], !dbg !11991

sw.bb:                                            ; preds = %if.then
  %12 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11992
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %12, i32 0, i32 10, !dbg !11994
  store i16 128, i16* %state, align 8, !dbg !11995
  br label %sw.epilog, !dbg !11996

sw.bb8:                                           ; preds = %if.then, %if.then, %if.then
  %13 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !11997
  %14 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !11998
  %15 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !11999
  %msgin_buf9 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %15, i32 0, i32 11, !dbg !12000
  %arrayidx10 = getelementptr [6 x i8], [6 x i8]* %msgin_buf9, i64 0, i64 1, !dbg !11999
  %16 = load i8, i8* %arrayidx10, align 1, !dbg !11999
  %call11 = call %struct.ScsiReqBlk* @msgin_qtag(%struct.AdapterCtlBlk* %13, %struct.DeviceCtlBlk* %14, i8 zeroext %16) #11, !dbg !12001
  store %struct.ScsiReqBlk* %call11, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12002
  br label %sw.epilog, !dbg !12003

sw.bb12:                                          ; preds = %if.then
  %17 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12004
  %io_port_base13 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %17, i32 0, i32 1, !dbg !12004
  %18 = load i64, i64* %io_port_base13, align 8, !dbg !12004
  %add14 = add i64 %18, 128, !dbg !12004
  %conv15 = trunc i64 %add14 to i32, !dbg !12004
  call void @outw(i16 zeroext 1026, i32 %conv15) #11, !dbg !12004
  %19 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12005
  %state16 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %19, i32 0, i32 10, !dbg !12007
  %20 = load i16, i16* %state16, align 8, !dbg !12007
  %conv17 = zext i16 %20 to i32, !dbg !12005
  %and = and i32 %conv17, 8192, !dbg !12008
  %tobool18 = icmp ne i32 %and, 0, !dbg !12008
  br i1 %tobool18, label %if.then19, label %if.end, !dbg !12009

if.then19:                                        ; preds = %sw.bb12
  %21 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12010
  %22 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12012
  call void @msgin_set_async(%struct.AdapterCtlBlk* %21, %struct.ScsiReqBlk* %22) #11, !dbg !12013
  br label %sw.epilog, !dbg !12014

if.end:                                           ; preds = %sw.bb12
  %23 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12015
  %state20 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %23, i32 0, i32 10, !dbg !12017
  %24 = load i16, i16* %state20, align 8, !dbg !12017
  %conv21 = zext i16 %24 to i32, !dbg !12015
  %and22 = and i32 %conv21, 16384, !dbg !12018
  %tobool23 = icmp ne i32 %and22, 0, !dbg !12018
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !12019

if.then24:                                        ; preds = %if.end
  %25 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12020
  %26 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12022
  call void @msgin_set_nowide(%struct.AdapterCtlBlk* %25, %struct.ScsiReqBlk* %26) #11, !dbg !12023
  br label %sw.epilog, !dbg !12024

if.end25:                                         ; preds = %if.end
  %27 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12025
  %28 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12026
  call void @enable_msgout_abort(%struct.AdapterCtlBlk* %27, %struct.ScsiReqBlk* %28) #11, !dbg !12027
  br label %sw.epilog, !dbg !12028

sw.bb26:                                          ; preds = %if.then
  %29 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12029
  %msgin_buf27 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %29, i32 0, i32 11, !dbg !12031
  %arrayidx28 = getelementptr [6 x i8], [6 x i8]* %msgin_buf27, i64 0, i64 1, !dbg !12029
  %30 = load i8, i8* %arrayidx28, align 1, !dbg !12029
  %conv29 = zext i8 %30 to i32, !dbg !12029
  %cmp = icmp eq i32 %conv29, 3, !dbg !12032
  br i1 %cmp, label %land.lhs.true, label %if.end37, !dbg !12033

land.lhs.true:                                    ; preds = %sw.bb26
  %31 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12034
  %msgin_buf31 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %31, i32 0, i32 11, !dbg !12035
  %arrayidx32 = getelementptr [6 x i8], [6 x i8]* %msgin_buf31, i64 0, i64 2, !dbg !12034
  %32 = load i8, i8* %arrayidx32, align 2, !dbg !12034
  %conv33 = zext i8 %32 to i32, !dbg !12034
  %cmp34 = icmp eq i32 %conv33, 1, !dbg !12036
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !12037

if.then36:                                        ; preds = %land.lhs.true
  %33 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12038
  %34 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12040
  call void @msgin_set_sync(%struct.AdapterCtlBlk* %33, %struct.ScsiReqBlk* %34) #11, !dbg !12041
  br label %sw.epilog, !dbg !12042

if.end37:                                         ; preds = %land.lhs.true, %sw.bb26
  %35 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12043
  %msgin_buf38 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %35, i32 0, i32 11, !dbg !12045
  %arrayidx39 = getelementptr [6 x i8], [6 x i8]* %msgin_buf38, i64 0, i64 1, !dbg !12043
  %36 = load i8, i8* %arrayidx39, align 1, !dbg !12043
  %conv40 = zext i8 %36 to i32, !dbg !12043
  %cmp41 = icmp eq i32 %conv40, 2, !dbg !12046
  br i1 %cmp41, label %land.lhs.true43, label %if.end56, !dbg !12047

land.lhs.true43:                                  ; preds = %if.end37
  %37 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12048
  %msgin_buf44 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %37, i32 0, i32 11, !dbg !12049
  %arrayidx45 = getelementptr [6 x i8], [6 x i8]* %msgin_buf44, i64 0, i64 2, !dbg !12048
  %38 = load i8, i8* %arrayidx45, align 2, !dbg !12048
  %conv46 = zext i8 %38 to i32, !dbg !12048
  %cmp47 = icmp eq i32 %conv46, 3, !dbg !12050
  br i1 %cmp47, label %land.lhs.true49, label %if.end56, !dbg !12051

land.lhs.true49:                                  ; preds = %land.lhs.true43
  %39 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12052
  %msgin_buf50 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %39, i32 0, i32 11, !dbg !12053
  %arrayidx51 = getelementptr [6 x i8], [6 x i8]* %msgin_buf50, i64 0, i64 3, !dbg !12052
  %40 = load i8, i8* %arrayidx51, align 1, !dbg !12052
  %conv52 = zext i8 %40 to i32, !dbg !12052
  %cmp53 = icmp sle i32 %conv52, 2, !dbg !12054
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !12055

if.then55:                                        ; preds = %land.lhs.true49
  %41 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12056
  %42 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12058
  call void @msgin_set_wide(%struct.AdapterCtlBlk* %41, %struct.ScsiReqBlk* %42) #11, !dbg !12059
  br label %sw.epilog, !dbg !12060

if.end56:                                         ; preds = %land.lhs.true49, %land.lhs.true43, %if.end37
  %43 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12061
  %44 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12062
  call void @msgin_reject(%struct.AdapterCtlBlk* %43, %struct.ScsiReqBlk* %44) #11, !dbg !12063
  br label %sw.epilog, !dbg !12064

sw.bb57:                                          ; preds = %if.then
  br label %do.body58, !dbg !12065

do.body58:                                        ; preds = %sw.bb57
  br label %do.end59, !dbg !12066

do.end59:                                         ; preds = %do.body58
  br label %sw.epilog, !dbg !12068

sw.bb60:                                          ; preds = %if.then
  br label %sw.epilog, !dbg !12069

sw.bb61:                                          ; preds = %if.then
  br label %do.body62, !dbg !12070

do.body62:                                        ; preds = %sw.bb61
  br label %do.end63, !dbg !12071

do.end63:                                         ; preds = %do.body62
  br label %sw.epilog, !dbg !12073

sw.bb64:                                          ; preds = %if.then
  br label %do.body65, !dbg !12074

do.body65:                                        ; preds = %sw.bb64
  br label %do.end66, !dbg !12075

do.end66:                                         ; preds = %do.body65
  br label %sw.epilog, !dbg !12077

sw.bb67:                                          ; preds = %if.then
  br label %do.body68, !dbg !12078

do.body68:                                        ; preds = %sw.bb67
  br label %do.end69, !dbg !12079

do.end69:                                         ; preds = %do.body68
  %45 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12081
  %flag = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %45, i32 0, i32 16, !dbg !12082
  %46 = load i8, i8* %flag, align 1, !dbg !12083
  %conv70 = zext i8 %46 to i32, !dbg !12083
  %or = or i32 %conv70, 1, !dbg !12083
  %conv71 = trunc i32 %or to i8, !dbg !12083
  store i8 %conv71, i8* %flag, align 1, !dbg !12083
  %47 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12084
  %48 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12085
  call void @enable_msgout_abort(%struct.AdapterCtlBlk* %47, %struct.ScsiReqBlk* %48) #11, !dbg !12086
  br label %sw.epilog, !dbg !12087

sw.default:                                       ; preds = %if.then
  %49 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12088
  %msgin_buf72 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %49, i32 0, i32 11, !dbg !12090
  %arrayidx73 = getelementptr [6 x i8], [6 x i8]* %msgin_buf72, i64 0, i64 0, !dbg !12088
  %50 = load i8, i8* %arrayidx73, align 2, !dbg !12088
  %conv74 = zext i8 %50 to i32, !dbg !12088
  %and75 = and i32 %conv74, 128, !dbg !12091
  %tobool76 = icmp ne i32 %and75, 0, !dbg !12091
  br i1 %tobool76, label %if.then77, label %if.end92, !dbg !12092

if.then77:                                        ; preds = %sw.default
  br label %do.body78, !dbg !12093

do.body78:                                        ; preds = %if.then77
  br label %do.end79, !dbg !12095

do.end79:                                         ; preds = %do.body78
  %51 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12097
  %msg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %51, i32 0, i32 15, !dbg !12098
  store i8 1, i8* %msg_count, align 8, !dbg !12099
  %52 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12100
  %identify_msg = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %52, i32 0, i32 9, !dbg !12101
  %53 = load i8, i8* %identify_msg, align 8, !dbg !12101
  %54 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12102
  %msgout_buf = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %54, i32 0, i32 12, !dbg !12103
  %arrayidx80 = getelementptr [6 x i8], [6 x i8]* %msgout_buf, i64 0, i64 0, !dbg !12102
  store i8 %53, i8* %arrayidx80, align 8, !dbg !12104
  %55 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12105
  %io_port_base81 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %55, i32 0, i32 1, !dbg !12105
  %56 = load i64, i64* %io_port_base81, align 8, !dbg !12105
  %add82 = add i64 %56, 128, !dbg !12105
  %conv83 = trunc i64 %add82 to i32, !dbg !12105
  call void @outw(i16 zeroext 512, i32 %conv83) #11, !dbg !12105
  %57 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12105
  %state84 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %57, i32 0, i32 10, !dbg !12105
  %58 = load i16, i16* %state84, align 8, !dbg !12105
  %conv85 = zext i16 %58 to i32, !dbg !12105
  %or86 = or i32 %conv85, 4, !dbg !12105
  %conv87 = trunc i32 %or86 to i16, !dbg !12105
  store i16 %conv87, i16* %state84, align 8, !dbg !12105
  %59 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12106
  %state88 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %59, i32 0, i32 10, !dbg !12107
  %60 = load i16, i16* %state88, align 8, !dbg !12108
  %conv89 = zext i16 %60 to i32, !dbg !12108
  %or90 = or i32 %conv89, 4, !dbg !12108
  %conv91 = trunc i32 %or90 to i16, !dbg !12108
  store i16 %conv91, i16* %state88, align 8, !dbg !12108
  br label %if.end92, !dbg !12109

if.end92:                                         ; preds = %do.end79, %sw.default
  %61 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12110
  %62 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12111
  call void @msgin_reject(%struct.AdapterCtlBlk* %61, %struct.ScsiReqBlk* %62) #11, !dbg !12112
  br label %sw.epilog, !dbg !12113

sw.epilog:                                        ; preds = %if.end92, %do.end69, %do.end66, %do.end63, %sw.bb60, %do.end59, %if.end56, %if.then55, %if.then36, %if.end25, %if.then24, %if.then19, %sw.bb8, %sw.bb
  %63 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12114
  %state93 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %63, i32 0, i32 10, !dbg !12115
  %64 = load i16, i16* %state93, align 8, !dbg !12116
  %conv94 = zext i16 %64 to i32, !dbg !12116
  %and95 = and i32 %conv94, -9, !dbg !12116
  %conv96 = trunc i32 %and95 to i16, !dbg !12116
  store i16 %conv96, i16* %state93, align 8, !dbg !12116
  %65 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12117
  %msg_len97 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %65, i32 0, i32 24, !dbg !12118
  store i8 0, i8* %msg_len97, align 8, !dbg !12119
  br label %if.end98, !dbg !12120

if.end98:                                         ; preds = %sw.epilog, %do.end
  %66 = load i16*, i16** %pscsi_status.addr, align 8, !dbg !12121
  store i16 5, i16* %66, align 2, !dbg !12122
  %67 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12123
  %io_port_base99 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %67, i32 0, i32 1, !dbg !12123
  %68 = load i64, i64* %io_port_base99, align 8, !dbg !12123
  %add100 = add i64 %68, 128, !dbg !12123
  %conv101 = trunc i64 %add100 to i32, !dbg !12123
  call void @outw(i16 zeroext 2, i32 %conv101) #11, !dbg !12123
  %69 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12124
  %io_port_base102 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %69, i32 0, i32 1, !dbg !12124
  %70 = load i64, i64* %io_port_base102, align 8, !dbg !12124
  %add103 = add i64 %70, 144, !dbg !12124
  %conv104 = trunc i64 %add103 to i32, !dbg !12124
  call void @outb(i8 zeroext -40, i32 %conv104) #11, !dbg !12124
  ret void, !dbg !12125
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @inl(i32 %port) #2 !dbg !12126 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12129, metadata !DIExpression()), !dbg !12130
  call void @llvm.dbg.declare(metadata i32* %value, metadata !12131, metadata !DIExpression()), !dbg !12130
  %0 = load i32, i32* %port.addr, align 4, !dbg !12130
  %1 = call i32 asm sideeffect "inl ${1:w}, $0", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #6, !dbg !12130, !srcloc !12132
  store i32 %1, i32* %value, align 4, !dbg !12130
  %2 = load i32, i32* %value, align 4, !dbg !12130
  ret i32 %2, !dbg !12130
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_update_list(%struct.ScsiReqBlk* %srb, i32 %left) #2 !dbg !12133 {
entry:
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %left.addr = alloca i32, align 4
  %idx = alloca i8, align 1
  %xferred = alloca i32, align 4
  %psge = alloca %struct.SGentry*, align 8
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !12136, metadata !DIExpression()), !dbg !12137
  store i32 %left, i32* %left.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %left.addr, metadata !12138, metadata !DIExpression()), !dbg !12139
  call void @llvm.dbg.declare(metadata i8* %idx, metadata !12140, metadata !DIExpression()), !dbg !12141
  call void @llvm.dbg.declare(metadata i32* %xferred, metadata !12142, metadata !DIExpression()), !dbg !12143
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12144
  %total_xfer_length = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 7, !dbg !12145
  %1 = load i64, i64* %total_xfer_length, align 8, !dbg !12145
  %2 = load i32, i32* %left.addr, align 4, !dbg !12146
  %conv = zext i32 %2 to i64, !dbg !12146
  %sub = sub i64 %1, %conv, !dbg !12147
  %conv1 = trunc i64 %sub to i32, !dbg !12144
  store i32 %conv1, i32* %xferred, align 4, !dbg !12143
  call void @llvm.dbg.declare(metadata %struct.SGentry** %psge, metadata !12148, metadata !DIExpression()), !dbg !12149
  %3 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12150
  %segment_x = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %3, i32 0, i32 3, !dbg !12151
  %4 = load %struct.SGentry*, %struct.SGentry** %segment_x, align 8, !dbg !12151
  %5 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12152
  %sg_index = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %5, i32 0, i32 6, !dbg !12153
  %6 = load i8, i8* %sg_index, align 1, !dbg !12153
  %conv2 = zext i8 %6 to i32, !dbg !12152
  %idx.ext = sext i32 %conv2 to i64, !dbg !12154
  %add.ptr = getelementptr %struct.SGentry, %struct.SGentry* %4, i64 %idx.ext, !dbg !12154
  store %struct.SGentry* %add.ptr, %struct.SGentry** %psge, align 8, !dbg !12149
  br label %do.body, !dbg !12155

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12156

do.end:                                           ; preds = %do.body
  %7 = load i32, i32* %xferred, align 4, !dbg !12158
  %cmp = icmp eq i32 %7, 0, !dbg !12160
  br i1 %cmp, label %if.then, label %if.end, !dbg !12161

if.then:                                          ; preds = %do.end
  br label %return, !dbg !12162

if.end:                                           ; preds = %do.end
  %8 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12164
  call void @sg_verify_length(%struct.ScsiReqBlk* %8) #11, !dbg !12165
  %9 = load i32, i32* %left.addr, align 4, !dbg !12166
  %conv4 = zext i32 %9 to i64, !dbg !12166
  %10 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12167
  %total_xfer_length5 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %10, i32 0, i32 7, !dbg !12168
  store i64 %conv4, i64* %total_xfer_length5, align 8, !dbg !12169
  %11 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12170
  %sg_index6 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %11, i32 0, i32 6, !dbg !12172
  %12 = load i8, i8* %sg_index6, align 1, !dbg !12172
  store i8 %12, i8* %idx, align 1, !dbg !12173
  br label %for.cond, !dbg !12174

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i8, i8* %idx, align 1, !dbg !12175
  %conv7 = zext i8 %13 to i32, !dbg !12175
  %14 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12177
  %sg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %14, i32 0, i32 5, !dbg !12178
  %15 = load i8, i8* %sg_count, align 8, !dbg !12178
  %conv8 = zext i8 %15 to i32, !dbg !12177
  %cmp9 = icmp slt i32 %conv7, %conv8, !dbg !12179
  br i1 %cmp9, label %for.body, label %for.end, !dbg !12180

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %xferred, align 4, !dbg !12181
  %17 = load %struct.SGentry*, %struct.SGentry** %psge, align 8, !dbg !12184
  %length = getelementptr inbounds %struct.SGentry, %struct.SGentry* %17, i32 0, i32 1, !dbg !12185
  %18 = load i32, i32* %length, align 4, !dbg !12185
  %cmp11 = icmp uge i32 %16, %18, !dbg !12186
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !12187

if.then13:                                        ; preds = %for.body
  %19 = load %struct.SGentry*, %struct.SGentry** %psge, align 8, !dbg !12188
  %length14 = getelementptr inbounds %struct.SGentry, %struct.SGentry* %19, i32 0, i32 1, !dbg !12190
  %20 = load i32, i32* %length14, align 4, !dbg !12190
  %21 = load i32, i32* %xferred, align 4, !dbg !12191
  %sub15 = sub i32 %21, %20, !dbg !12191
  store i32 %sub15, i32* %xferred, align 4, !dbg !12191
  br label %if.end25, !dbg !12192

if.else:                                          ; preds = %for.body
  %22 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12193
  %dcb = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %22, i32 0, i32 1, !dbg !12195
  %23 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12195
  %acb = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %23, i32 0, i32 1, !dbg !12196
  %24 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !12196
  %dev = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %24, i32 0, i32 23, !dbg !12197
  %25 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !12197
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !12198
  %26 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12199
  %sg_bus_addr = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %26, i32 0, i32 4, !dbg !12200
  %27 = load i64, i64* %sg_bus_addr, align 8, !dbg !12200
  call void @dma_sync_single_for_cpu(%struct.device* %dev16, i64 %27, i64 512, i32 1) #11, !dbg !12201
  %28 = load i32, i32* %xferred, align 4, !dbg !12202
  %29 = load %struct.SGentry*, %struct.SGentry** %psge, align 8, !dbg !12203
  %length17 = getelementptr inbounds %struct.SGentry, %struct.SGentry* %29, i32 0, i32 1, !dbg !12204
  %30 = load i32, i32* %length17, align 4, !dbg !12205
  %sub18 = sub i32 %30, %28, !dbg !12205
  store i32 %sub18, i32* %length17, align 4, !dbg !12205
  %31 = load i32, i32* %xferred, align 4, !dbg !12206
  %32 = load %struct.SGentry*, %struct.SGentry** %psge, align 8, !dbg !12207
  %address = getelementptr inbounds %struct.SGentry, %struct.SGentry* %32, i32 0, i32 0, !dbg !12208
  %33 = load i32, i32* %address, align 4, !dbg !12209
  %add = add i32 %33, %31, !dbg !12209
  store i32 %add, i32* %address, align 4, !dbg !12209
  %34 = load i8, i8* %idx, align 1, !dbg !12210
  %35 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12211
  %sg_index19 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %35, i32 0, i32 6, !dbg !12212
  store i8 %34, i8* %sg_index19, align 1, !dbg !12213
  %36 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12214
  %dcb20 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %36, i32 0, i32 1, !dbg !12215
  %37 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb20, align 8, !dbg !12215
  %acb21 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %37, i32 0, i32 1, !dbg !12216
  %38 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb21, align 8, !dbg !12216
  %dev22 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %38, i32 0, i32 23, !dbg !12217
  %39 = load %struct.pci_dev*, %struct.pci_dev** %dev22, align 8, !dbg !12217
  %dev23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 41, !dbg !12218
  %40 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12219
  %sg_bus_addr24 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %40, i32 0, i32 4, !dbg !12220
  %41 = load i64, i64* %sg_bus_addr24, align 8, !dbg !12220
  call void @dma_sync_single_for_device(%struct.device* %dev23, i64 %41, i64 512, i32 1) #11, !dbg !12221
  br label %for.end, !dbg !12222

if.end25:                                         ; preds = %if.then13
  %42 = load %struct.SGentry*, %struct.SGentry** %psge, align 8, !dbg !12223
  %incdec.ptr = getelementptr %struct.SGentry, %struct.SGentry* %42, i32 1, !dbg !12223
  store %struct.SGentry* %incdec.ptr, %struct.SGentry** %psge, align 8, !dbg !12223
  br label %for.inc, !dbg !12224

for.inc:                                          ; preds = %if.end25
  %43 = load i8, i8* %idx, align 1, !dbg !12225
  %inc = add i8 %43, 1, !dbg !12225
  store i8 %inc, i8* %idx, align 1, !dbg !12225
  br label %for.cond, !dbg !12226, !llvm.loop !12227

for.end:                                          ; preds = %if.else, %for.cond
  %44 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12229
  call void @sg_verify_length(%struct.ScsiReqBlk* %44) #11, !dbg !12230
  br label %return, !dbg !12231

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !12231
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cleanup_after_transfer(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb) #2 !dbg !12232 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !12233, metadata !DIExpression()), !dbg !12234
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !12235, metadata !DIExpression()), !dbg !12236
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12237
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 1, !dbg !12237
  %1 = load i64, i64* %io_port_base, align 8, !dbg !12237
  %add = add i64 %1, 160, !dbg !12237
  %conv = trunc i64 %add to i32, !dbg !12237
  %call = call zeroext i16 @inw(i32 %conv) #11, !dbg !12237
  %conv1 = zext i16 %call to i32, !dbg !12237
  %and = and i32 %conv1, 1, !dbg !12239
  %tobool = icmp ne i32 %and, 0, !dbg !12239
  br i1 %tobool, label %if.then, label %if.else, !dbg !12240

if.then:                                          ; preds = %entry
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12241
  %io_port_base2 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 1, !dbg !12241
  %3 = load i64, i64* %io_port_base2, align 8, !dbg !12241
  %add3 = add i64 %3, 130, !dbg !12241
  %conv4 = trunc i64 %add3 to i32, !dbg !12241
  %call5 = call zeroext i8 @inb(i32 %conv4) #11, !dbg !12241
  %conv6 = zext i8 %call5 to i32, !dbg !12241
  %and7 = and i32 %conv6, 64, !dbg !12244
  %tobool8 = icmp ne i32 %and7, 0, !dbg !12244
  br i1 %tobool8, label %if.end, label %if.then9, !dbg !12245

if.then9:                                         ; preds = %if.then
  %4 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12246
  call void @clear_fifo(%struct.AdapterCtlBlk* %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i64 0, i64 0)) #11, !dbg !12247
  br label %if.end, !dbg !12247

if.end:                                           ; preds = %if.then9, %if.then
  %5 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12248
  %io_port_base10 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %5, i32 0, i32 1, !dbg !12248
  %6 = load i64, i64* %io_port_base10, align 8, !dbg !12248
  %add11 = add i64 %6, 162, !dbg !12248
  %conv12 = trunc i64 %add11 to i32, !dbg !12248
  %call13 = call zeroext i8 @inb(i32 %conv12) #11, !dbg !12248
  %conv14 = zext i8 %call13 to i32, !dbg !12248
  %and15 = and i32 %conv14, 128, !dbg !12250
  %tobool16 = icmp ne i32 %and15, 0, !dbg !12250
  br i1 %tobool16, label %if.end21, label %if.then17, !dbg !12251

if.then17:                                        ; preds = %if.end
  %7 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12252
  %io_port_base18 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %7, i32 0, i32 1, !dbg !12252
  %8 = load i64, i64* %io_port_base18, align 8, !dbg !12252
  %add19 = add i64 %8, 161, !dbg !12252
  %conv20 = trunc i64 %add19 to i32, !dbg !12252
  call void @outb(i8 zeroext 2, i32 %conv20) #11, !dbg !12252
  br label %if.end21, !dbg !12252

if.end21:                                         ; preds = %if.then17, %if.end
  br label %if.end43, !dbg !12253

if.else:                                          ; preds = %entry
  %9 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12254
  %io_port_base22 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %9, i32 0, i32 1, !dbg !12254
  %10 = load i64, i64* %io_port_base22, align 8, !dbg !12254
  %add23 = add i64 %10, 162, !dbg !12254
  %conv24 = trunc i64 %add23 to i32, !dbg !12254
  %call25 = call zeroext i8 @inb(i32 %conv24) #11, !dbg !12254
  %conv26 = zext i8 %call25 to i32, !dbg !12254
  %and27 = and i32 %conv26, 128, !dbg !12257
  %tobool28 = icmp ne i32 %and27, 0, !dbg !12257
  br i1 %tobool28, label %if.end33, label %if.then29, !dbg !12258

if.then29:                                        ; preds = %if.else
  %11 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12259
  %io_port_base30 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %11, i32 0, i32 1, !dbg !12259
  %12 = load i64, i64* %io_port_base30, align 8, !dbg !12259
  %add31 = add i64 %12, 161, !dbg !12259
  %conv32 = trunc i64 %add31 to i32, !dbg !12259
  call void @outb(i8 zeroext 2, i32 %conv32) #11, !dbg !12259
  br label %if.end33, !dbg !12259

if.end33:                                         ; preds = %if.then29, %if.else
  %13 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12260
  %io_port_base34 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %13, i32 0, i32 1, !dbg !12260
  %14 = load i64, i64* %io_port_base34, align 8, !dbg !12260
  %add35 = add i64 %14, 130, !dbg !12260
  %conv36 = trunc i64 %add35 to i32, !dbg !12260
  %call37 = call zeroext i8 @inb(i32 %conv36) #11, !dbg !12260
  %conv38 = zext i8 %call37 to i32, !dbg !12260
  %and39 = and i32 %conv38, 64, !dbg !12262
  %tobool40 = icmp ne i32 %and39, 0, !dbg !12262
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !12263

if.then41:                                        ; preds = %if.end33
  %15 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12264
  call void @clear_fifo(%struct.AdapterCtlBlk* %15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.91, i64 0, i64 0)) #11, !dbg !12265
  br label %if.end42, !dbg !12265

if.end42:                                         ; preds = %if.then41, %if.end33
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.end21
  %16 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12266
  %io_port_base44 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %16, i32 0, i32 1, !dbg !12266
  %17 = load i64, i64* %io_port_base44, align 8, !dbg !12266
  %add45 = add i64 %17, 128, !dbg !12266
  %conv46 = trunc i64 %add45 to i32, !dbg !12266
  call void @outw(i16 zeroext 2, i32 %conv46) #11, !dbg !12266
  ret void, !dbg !12267
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_verify_length(%struct.ScsiReqBlk* %srb) #2 !dbg !12268 {
entry:
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !12271, metadata !DIExpression()), !dbg !12272
  ret void, !dbg !12273
}

; Function Attrs: noredzone
declare dso_local void @dma_sync_single_for_cpu(%struct.device*, i64, i64, i32) #1

; Function Attrs: noredzone
declare dso_local void @dma_sync_single_for_device(%struct.device*, i64, i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_subtract_one(%struct.ScsiReqBlk* %srb) #2 !dbg !12274 {
entry:
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !12275, metadata !DIExpression()), !dbg !12276
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12277
  %1 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12278
  %total_xfer_length = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %1, i32 0, i32 7, !dbg !12279
  %2 = load i64, i64* %total_xfer_length, align 8, !dbg !12279
  %sub = sub i64 %2, 1, !dbg !12280
  %conv = trunc i64 %sub to i32, !dbg !12278
  call void @sg_update_list(%struct.ScsiReqBlk* %0, i32 %conv) #11, !dbg !12281
  ret void, !dbg !12282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @msgin_completed(i8* %msgbuf, i32 %len) #2 !dbg !12283 {
entry:
  %retval = alloca i8, align 1
  %msgbuf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store i8* %msgbuf, i8** %msgbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msgbuf.addr, metadata !12286, metadata !DIExpression()), !dbg !12287
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !12288, metadata !DIExpression()), !dbg !12289
  %0 = load i8*, i8** %msgbuf.addr, align 8, !dbg !12290
  %1 = load i8, i8* %0, align 1, !dbg !12292
  %conv = zext i8 %1 to i32, !dbg !12292
  %cmp = icmp eq i32 %conv, 1, !dbg !12293
  br i1 %cmp, label %if.then, label %if.else, !dbg !12294

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %len.addr, align 4, !dbg !12295
  %cmp2 = icmp ult i32 %2, 2, !dbg !12298
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !12299

if.then4:                                         ; preds = %if.then
  store i8 0, i8* %retval, align 1, !dbg !12300
  br label %return, !dbg !12300

if.end:                                           ; preds = %if.then
  %3 = load i32, i32* %len.addr, align 4, !dbg !12301
  %4 = load i8*, i8** %msgbuf.addr, align 8, !dbg !12303
  %arrayidx = getelementptr i8, i8* %4, i64 1, !dbg !12303
  %5 = load i8, i8* %arrayidx, align 1, !dbg !12303
  %conv5 = zext i8 %5 to i32, !dbg !12303
  %add = add i32 %conv5, 2, !dbg !12304
  %cmp6 = icmp ult i32 %3, %add, !dbg !12305
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !12306

if.then8:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !12307
  br label %return, !dbg !12307

if.end9:                                          ; preds = %if.end
  br label %if.end22, !dbg !12308

if.else:                                          ; preds = %entry
  %6 = load i8*, i8** %msgbuf.addr, align 8, !dbg !12309
  %7 = load i8, i8* %6, align 1, !dbg !12311
  %conv10 = zext i8 %7 to i32, !dbg !12311
  %cmp11 = icmp sge i32 %conv10, 32, !dbg !12312
  br i1 %cmp11, label %land.lhs.true, label %if.end21, !dbg !12313

land.lhs.true:                                    ; preds = %if.else
  %8 = load i8*, i8** %msgbuf.addr, align 8, !dbg !12314
  %9 = load i8, i8* %8, align 1, !dbg !12315
  %conv13 = zext i8 %9 to i32, !dbg !12315
  %cmp14 = icmp sle i32 %conv13, 47, !dbg !12316
  br i1 %cmp14, label %if.then16, label %if.end21, !dbg !12317

if.then16:                                        ; preds = %land.lhs.true
  %10 = load i32, i32* %len.addr, align 4, !dbg !12318
  %cmp17 = icmp ult i32 %10, 2, !dbg !12320
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !12321

if.then19:                                        ; preds = %if.then16
  store i8 0, i8* %retval, align 1, !dbg !12322
  br label %return, !dbg !12322

if.end20:                                         ; preds = %if.then16
  br label %if.end21, !dbg !12323

if.end21:                                         ; preds = %if.end20, %land.lhs.true, %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end9
  store i8 1, i8* %retval, align 1, !dbg !12324
  br label %return, !dbg !12324

return:                                           ; preds = %if.end22, %if.then19, %if.then8, %if.then4
  %11 = load i8, i8* %retval, align 1, !dbg !12325
  ret i8 %11, !dbg !12325
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ScsiReqBlk* @msgin_qtag(%struct.AdapterCtlBlk* %acb, %struct.DeviceCtlBlk* %dcb, i8 zeroext %tag) #2 !dbg !12326 {
entry:
  %retval = alloca %struct.ScsiReqBlk*, align 8
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  %tag.addr = alloca i8, align 1
  %srb = alloca %struct.ScsiReqBlk*, align 8
  %i = alloca %struct.ScsiReqBlk*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ScsiReqBlk*, align 8
  %__mptr18 = alloca i8*, align 8
  %tmp23 = alloca %struct.ScsiReqBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !12329, metadata !DIExpression()), !dbg !12330
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !12331, metadata !DIExpression()), !dbg !12332
  store i8 %tag, i8* %tag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %tag.addr, metadata !12333, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb, metadata !12335, metadata !DIExpression()), !dbg !12336
  store %struct.ScsiReqBlk* null, %struct.ScsiReqBlk** %srb, align 8, !dbg !12336
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %i, metadata !12337, metadata !DIExpression()), !dbg !12338
  br label %do.body, !dbg !12339

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12340

do.end:                                           ; preds = %do.body
  %0 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12342
  %tag_mask = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %0, i32 0, i32 5, !dbg !12344
  %1 = load i32, i32* %tag_mask, align 8, !dbg !12344
  %2 = load i8, i8* %tag.addr, align 1, !dbg !12345
  %conv = zext i8 %2 to i32, !dbg !12345
  %shl = shl i32 1, %conv, !dbg !12346
  %and = and i32 %1, %shl, !dbg !12347
  %tobool = icmp ne i32 %and, 0, !dbg !12347
  br i1 %tobool, label %if.end, label %if.then, !dbg !12348

if.then:                                          ; preds = %do.end
  %3 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12349
  %tag_mask1 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %3, i32 0, i32 5, !dbg !12349
  %4 = load i32, i32* %tag_mask1, align 8, !dbg !12349
  %5 = load i8, i8* %tag.addr, align 1, !dbg !12349
  %conv2 = zext i8 %5 to i32, !dbg !12349
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.93, i64 0, i64 0), i32 %4, i32 %conv2) #12, !dbg !12349
  br label %if.end, !dbg !12349

if.end:                                           ; preds = %if.then, %do.end
  %6 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12350
  %srb_going_list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %6, i32 0, i32 2, !dbg !12352
  %call3 = call i32 @list_empty(%struct.list_head* %srb_going_list) #11, !dbg !12353
  %tobool4 = icmp ne i32 %call3, 0, !dbg !12353
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !12354

if.then5:                                         ; preds = %if.end
  br label %mingx0, !dbg !12355

if.end6:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12356, metadata !DIExpression()), !dbg !12359
  %7 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12359
  %srb_going_list7 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %7, i32 0, i32 2, !dbg !12359
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %srb_going_list7, i32 0, i32 0, !dbg !12359
  %8 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12359
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !12359
  store i8* %9, i8** %__mptr, align 8, !dbg !12359
  br label %do.body8, !dbg !12359

do.body8:                                         ; preds = %if.end6
  br label %do.end9, !dbg !12360

do.end9:                                          ; preds = %do.body8
  %10 = load i8*, i8** %__mptr, align 8, !dbg !12359
  %add.ptr = getelementptr i8, i8* %10, i64 0, !dbg !12359
  %11 = bitcast i8* %add.ptr to %struct.ScsiReqBlk*, !dbg !12359
  store %struct.ScsiReqBlk* %11, %struct.ScsiReqBlk** %tmp, align 8, !dbg !12360
  %12 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp, align 8, !dbg !12359
  store %struct.ScsiReqBlk* %12, %struct.ScsiReqBlk** %i, align 8, !dbg !12362
  br label %for.cond, !dbg !12362

for.cond:                                         ; preds = %do.end22, %do.end9
  %13 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %i, align 8, !dbg !12363
  %list = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %13, i32 0, i32 0, !dbg !12363
  %14 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12363
  %srb_going_list10 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %14, i32 0, i32 2, !dbg !12363
  %cmp = icmp eq %struct.list_head* %list, %srb_going_list10, !dbg !12363
  %lnot = xor i1 %cmp, true, !dbg !12363
  br i1 %lnot, label %for.body, label %for.end, !dbg !12362

for.body:                                         ; preds = %for.cond
  %15 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %i, align 8, !dbg !12365
  %tag_number = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %15, i32 0, i32 17, !dbg !12368
  %16 = load i8, i8* %tag_number, align 2, !dbg !12368
  %conv12 = zext i8 %16 to i32, !dbg !12365
  %17 = load i8, i8* %tag.addr, align 1, !dbg !12369
  %conv13 = zext i8 %17 to i32, !dbg !12369
  %cmp14 = icmp eq i32 %conv12, %conv13, !dbg !12370
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !12371

if.then16:                                        ; preds = %for.body
  %18 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %i, align 8, !dbg !12372
  store %struct.ScsiReqBlk* %18, %struct.ScsiReqBlk** %srb, align 8, !dbg !12374
  br label %for.end, !dbg !12375

if.end17:                                         ; preds = %for.body
  br label %for.inc, !dbg !12376

for.inc:                                          ; preds = %if.end17
  call void @llvm.dbg.declare(metadata i8** %__mptr18, metadata !12377, metadata !DIExpression()), !dbg !12379
  %19 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %i, align 8, !dbg !12379
  %list19 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %19, i32 0, i32 0, !dbg !12379
  %next20 = getelementptr inbounds %struct.list_head, %struct.list_head* %list19, i32 0, i32 0, !dbg !12379
  %20 = load %struct.list_head*, %struct.list_head** %next20, align 8, !dbg !12379
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !12379
  store i8* %21, i8** %__mptr18, align 8, !dbg !12379
  br label %do.body21, !dbg !12379

do.body21:                                        ; preds = %for.inc
  br label %do.end22, !dbg !12380

do.end22:                                         ; preds = %do.body21
  %22 = load i8*, i8** %__mptr18, align 8, !dbg !12379
  %add.ptr24 = getelementptr i8, i8* %22, i64 0, !dbg !12379
  %23 = bitcast i8* %add.ptr24 to %struct.ScsiReqBlk*, !dbg !12379
  store %struct.ScsiReqBlk* %23, %struct.ScsiReqBlk** %tmp23, align 8, !dbg !12380
  %24 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp23, align 8, !dbg !12379
  store %struct.ScsiReqBlk* %24, %struct.ScsiReqBlk** %i, align 8, !dbg !12363
  br label %for.cond, !dbg !12363, !llvm.loop !12382

for.end:                                          ; preds = %if.then16, %for.cond
  %25 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !12384
  %tobool25 = icmp ne %struct.ScsiReqBlk* %25, null, !dbg !12384
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !12386

if.then26:                                        ; preds = %for.end
  br label %mingx0, !dbg !12387

if.end27:                                         ; preds = %for.end
  br label %do.body28, !dbg !12388

do.body28:                                        ; preds = %if.end27
  br label %do.end29, !dbg !12389

do.end29:                                         ; preds = %do.body28
  %26 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12391
  %flag = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %26, i32 0, i32 16, !dbg !12393
  %27 = load i8, i8* %flag, align 1, !dbg !12393
  %conv30 = zext i8 %27 to i32, !dbg !12391
  %and31 = and i32 %conv30, 1, !dbg !12394
  %tobool32 = icmp ne i32 %and31, 0, !dbg !12394
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !12395

if.then33:                                        ; preds = %do.end29
  %28 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12396
  %29 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !12398
  call void @enable_msgout_abort(%struct.AdapterCtlBlk* %28, %struct.ScsiReqBlk* %29) #11, !dbg !12399
  br label %if.end34, !dbg !12400

if.end34:                                         ; preds = %if.then33, %do.end29
  %30 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !12401
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %30, i32 0, i32 10, !dbg !12403
  %31 = load i16, i16* %state, align 8, !dbg !12403
  %conv35 = zext i16 %31 to i32, !dbg !12401
  %and36 = and i32 %conv35, 128, !dbg !12404
  %tobool37 = icmp ne i32 %and36, 0, !dbg !12404
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !12405

if.then38:                                        ; preds = %if.end34
  br label %mingx0, !dbg !12406

if.end39:                                         ; preds = %if.end34
  %32 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !12407
  %msgin_buf = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %32, i32 0, i32 11, !dbg !12408
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %msgin_buf, i64 0, i64 0, !dbg !12409
  %33 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12410
  %active_srb = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %33, i32 0, i32 4, !dbg !12411
  %34 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %active_srb, align 8, !dbg !12411
  %msgin_buf40 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %34, i32 0, i32 11, !dbg !12412
  %arraydecay41 = getelementptr inbounds [6 x i8], [6 x i8]* %msgin_buf40, i64 0, i64 0, !dbg !12409
  %35 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12413
  %msg_len = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %35, i32 0, i32 24, !dbg !12414
  %36 = load i8, i8* %msg_len, align 8, !dbg !12414
  %conv42 = zext i8 %36 to i64, !dbg !12413
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay, i8* align 2 %arraydecay41, i64 %conv42, i1 false), !dbg !12409
  %37 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12415
  %active_srb43 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %37, i32 0, i32 4, !dbg !12416
  %38 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %active_srb43, align 8, !dbg !12416
  %state44 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %38, i32 0, i32 10, !dbg !12417
  %39 = load i16, i16* %state44, align 8, !dbg !12417
  %conv45 = zext i16 %39 to i32, !dbg !12415
  %40 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !12418
  %state46 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %40, i32 0, i32 10, !dbg !12419
  %41 = load i16, i16* %state46, align 8, !dbg !12420
  %conv47 = zext i16 %41 to i32, !dbg !12420
  %or = or i32 %conv47, %conv45, !dbg !12420
  %conv48 = trunc i32 %or to i16, !dbg !12420
  store i16 %conv48, i16* %state46, align 8, !dbg !12420
  %42 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !12421
  %state49 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %42, i32 0, i32 10, !dbg !12422
  %43 = load i16, i16* %state49, align 8, !dbg !12423
  %conv50 = zext i16 %43 to i32, !dbg !12423
  %or51 = or i32 %conv50, 256, !dbg !12423
  %conv52 = trunc i32 %or51 to i16, !dbg !12423
  store i16 %conv52, i16* %state49, align 8, !dbg !12423
  %44 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !12424
  %45 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12425
  %active_srb53 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %45, i32 0, i32 4, !dbg !12426
  store %struct.ScsiReqBlk* %44, %struct.ScsiReqBlk** %active_srb53, align 8, !dbg !12427
  %46 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !12428
  store %struct.ScsiReqBlk* %46, %struct.ScsiReqBlk** %retval, align 8, !dbg !12429
  br label %return, !dbg !12429

mingx0:                                           ; preds = %if.then38, %if.then26, %if.then5
  call void @llvm.dbg.label(metadata !12430), !dbg !12431
  %47 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12432
  %tmp_srb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %47, i32 0, i32 7, !dbg !12433
  %48 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp_srb, align 8, !dbg !12433
  store %struct.ScsiReqBlk* %48, %struct.ScsiReqBlk** %srb, align 8, !dbg !12434
  %49 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !12435
  %state54 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %49, i32 0, i32 10, !dbg !12436
  store i16 -32768, i16* %state54, align 8, !dbg !12437
  %50 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !12438
  %51 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12439
  %active_srb55 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %51, i32 0, i32 4, !dbg !12440
  store %struct.ScsiReqBlk* %50, %struct.ScsiReqBlk** %active_srb55, align 8, !dbg !12441
  %52 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !12442
  %msgout_buf = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %52, i32 0, i32 12, !dbg !12443
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %msgout_buf, i64 0, i64 0, !dbg !12442
  store i8 13, i8* %arrayidx, align 8, !dbg !12444
  %53 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !12445
  %msg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %53, i32 0, i32 15, !dbg !12446
  store i8 1, i8* %msg_count, align 8, !dbg !12447
  %54 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12448
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %54, i32 0, i32 1, !dbg !12448
  %55 = load i64, i64* %io_port_base, align 8, !dbg !12448
  %add = add i64 %55, 128, !dbg !12448
  %conv56 = trunc i64 %add to i32, !dbg !12448
  call void @outw(i16 zeroext 512, i32 %conv56) #11, !dbg !12448
  %56 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !12448
  %state57 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %56, i32 0, i32 10, !dbg !12448
  %57 = load i16, i16* %state57, align 8, !dbg !12448
  %conv58 = zext i16 %57 to i32, !dbg !12448
  %or59 = or i32 %conv58, 4, !dbg !12448
  %conv60 = trunc i32 %or59 to i16, !dbg !12448
  store i16 %conv60, i16* %state57, align 8, !dbg !12448
  %58 = load i8, i8* %tag.addr, align 1, !dbg !12449
  %conv61 = zext i8 %58 to i32, !dbg !12449
  %call62 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.94, i64 0, i64 0), i32 %conv61) #12, !dbg !12449
  %59 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb, align 8, !dbg !12450
  store %struct.ScsiReqBlk* %59, %struct.ScsiReqBlk** %retval, align 8, !dbg !12451
  br label %return, !dbg !12451

return:                                           ; preds = %mingx0, %if.end39
  %60 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %retval, align 8, !dbg !12452
  ret %struct.ScsiReqBlk* %60, !dbg !12452
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @msgin_set_async(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb) #2 !dbg !12453 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !12454, metadata !DIExpression()), !dbg !12455
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !12456, metadata !DIExpression()), !dbg !12457
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !12458, metadata !DIExpression()), !dbg !12459
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12460
  %dcb1 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 1, !dbg !12461
  %1 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb1, align 8, !dbg !12461
  store %struct.DeviceCtlBlk* %1, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12459
  %2 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12462
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %2, i32 0, i32 7, !dbg !12462
  %3 = load i8, i8* %target_id, align 2, !dbg !12462
  %conv = zext i8 %3 to i32, !dbg !12462
  %4 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12462
  %target_lun = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %4, i32 0, i32 8, !dbg !12462
  %5 = load i8, i8* %target_lun, align 1, !dbg !12462
  %conv2 = zext i8 %5 to i32, !dbg !12462
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.95, i64 0, i64 0), i32 %conv, i32 %conv2) #12, !dbg !12462
  %6 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12463
  %sync_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %6, i32 0, i32 12, !dbg !12464
  %7 = load i8, i8* %sync_mode, align 1, !dbg !12465
  %conv3 = zext i8 %7 to i32, !dbg !12465
  %and = and i32 %conv3, -2, !dbg !12465
  %conv4 = trunc i32 %and to i8, !dbg !12465
  store i8 %conv4, i8* %sync_mode, align 1, !dbg !12465
  %8 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12466
  %sync_mode5 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %8, i32 0, i32 12, !dbg !12467
  %9 = load i8, i8* %sync_mode5, align 1, !dbg !12468
  %conv6 = zext i8 %9 to i32, !dbg !12468
  %or = or i32 %conv6, 2, !dbg !12468
  %conv7 = trunc i32 %or to i8, !dbg !12468
  store i8 %conv7, i8* %sync_mode5, align 1, !dbg !12468
  %10 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12469
  %sync_offset = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %10, i32 0, i32 15, !dbg !12470
  store i8 0, i8* %sync_offset, align 2, !dbg !12471
  %11 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12472
  %min_nego_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %11, i32 0, i32 13, !dbg !12473
  store i8 50, i8* %min_nego_period, align 4, !dbg !12474
  %12 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12475
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %12, i32 0, i32 10, !dbg !12476
  %13 = load i16, i16* %state, align 8, !dbg !12477
  %conv8 = zext i16 %13 to i32, !dbg !12477
  %and9 = and i32 %conv8, -8193, !dbg !12477
  %conv10 = trunc i32 %and9 to i16, !dbg !12477
  store i16 %conv10, i16* %state, align 8, !dbg !12477
  %14 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12478
  %15 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12479
  call void @reprogram_regs(%struct.AdapterCtlBlk* %14, %struct.DeviceCtlBlk* %15) #11, !dbg !12480
  %16 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12481
  %sync_mode11 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %16, i32 0, i32 12, !dbg !12483
  %17 = load i8, i8* %sync_mode11, align 1, !dbg !12483
  %conv12 = zext i8 %17 to i32, !dbg !12481
  %and13 = and i32 %conv12, 4, !dbg !12484
  %tobool = icmp ne i32 %and13, 0, !dbg !12484
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !12485

land.lhs.true:                                    ; preds = %entry
  %18 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12486
  %sync_mode14 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %18, i32 0, i32 12, !dbg !12487
  %19 = load i8, i8* %sync_mode14, align 1, !dbg !12487
  %conv15 = zext i8 %19 to i32, !dbg !12486
  %and16 = and i32 %conv15, 8, !dbg !12488
  %tobool17 = icmp ne i32 %and16, 0, !dbg !12488
  br i1 %tobool17, label %if.end, label %if.then, !dbg !12489

if.then:                                          ; preds = %land.lhs.true
  %20 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12490
  %21 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12492
  %22 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12493
  call void @build_wdtr(%struct.AdapterCtlBlk* %20, %struct.DeviceCtlBlk* %21, %struct.ScsiReqBlk* %22) #11, !dbg !12494
  %23 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12495
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %23, i32 0, i32 1, !dbg !12495
  %24 = load i64, i64* %io_port_base, align 8, !dbg !12495
  %add = add i64 %24, 128, !dbg !12495
  %conv18 = trunc i64 %add to i32, !dbg !12495
  call void @outw(i16 zeroext 512, i32 %conv18) #11, !dbg !12495
  %25 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12495
  %state19 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %25, i32 0, i32 10, !dbg !12495
  %26 = load i16, i16* %state19, align 8, !dbg !12495
  %conv20 = zext i16 %26 to i32, !dbg !12495
  %or21 = or i32 %conv20, 4, !dbg !12495
  %conv22 = trunc i32 %or21 to i16, !dbg !12495
  store i16 %conv22, i16* %state19, align 8, !dbg !12495
  br label %do.body, !dbg !12496

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !12497

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !12499

if.end:                                           ; preds = %do.end, %land.lhs.true, %entry
  ret void, !dbg !12500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @msgin_set_nowide(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb) #2 !dbg !12501 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !12502, metadata !DIExpression()), !dbg !12503
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !12504, metadata !DIExpression()), !dbg !12505
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !12506, metadata !DIExpression()), !dbg !12507
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12508
  %dcb1 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 1, !dbg !12509
  %1 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb1, align 8, !dbg !12509
  store %struct.DeviceCtlBlk* %1, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12507
  br label %do.body, !dbg !12510

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12511

do.end:                                           ; preds = %do.body
  %2 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12513
  %sync_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %2, i32 0, i32 14, !dbg !12514
  %3 = load i8, i8* %sync_period, align 1, !dbg !12515
  %conv = zext i8 %3 to i32, !dbg !12515
  %and = and i32 %conv, -17, !dbg !12515
  %conv2 = trunc i32 %and to i8, !dbg !12515
  store i8 %conv2, i8* %sync_period, align 1, !dbg !12515
  %4 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12516
  %sync_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %4, i32 0, i32 12, !dbg !12517
  %5 = load i8, i8* %sync_mode, align 1, !dbg !12518
  %conv3 = zext i8 %5 to i32, !dbg !12518
  %and4 = and i32 %conv3, -5, !dbg !12518
  %conv5 = trunc i32 %and4 to i8, !dbg !12518
  store i8 %conv5, i8* %sync_mode, align 1, !dbg !12518
  %6 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12519
  %sync_mode6 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %6, i32 0, i32 12, !dbg !12520
  %7 = load i8, i8* %sync_mode6, align 1, !dbg !12521
  %conv7 = zext i8 %7 to i32, !dbg !12521
  %or = or i32 %conv7, 8, !dbg !12521
  %conv8 = trunc i32 %or to i8, !dbg !12521
  store i8 %conv8, i8* %sync_mode6, align 1, !dbg !12521
  %8 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12522
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %8, i32 0, i32 10, !dbg !12523
  %9 = load i16, i16* %state, align 8, !dbg !12524
  %conv9 = zext i16 %9 to i32, !dbg !12524
  %and10 = and i32 %conv9, -16385, !dbg !12524
  %conv11 = trunc i32 %and10 to i16, !dbg !12524
  store i16 %conv11, i16* %state, align 8, !dbg !12524
  %10 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12525
  %11 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12526
  call void @reprogram_regs(%struct.AdapterCtlBlk* %10, %struct.DeviceCtlBlk* %11) #11, !dbg !12527
  %12 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12528
  %sync_mode12 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %12, i32 0, i32 12, !dbg !12530
  %13 = load i8, i8* %sync_mode12, align 1, !dbg !12530
  %conv13 = zext i8 %13 to i32, !dbg !12528
  %and14 = and i32 %conv13, 1, !dbg !12531
  %tobool = icmp ne i32 %and14, 0, !dbg !12531
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !12532

land.lhs.true:                                    ; preds = %do.end
  %14 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12533
  %sync_mode15 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %14, i32 0, i32 12, !dbg !12534
  %15 = load i8, i8* %sync_mode15, align 1, !dbg !12534
  %conv16 = zext i8 %15 to i32, !dbg !12533
  %and17 = and i32 %conv16, 2, !dbg !12535
  %tobool18 = icmp ne i32 %and17, 0, !dbg !12535
  br i1 %tobool18, label %if.end, label %if.then, !dbg !12536

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12537
  %17 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12539
  %18 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12540
  call void @build_sdtr(%struct.AdapterCtlBlk* %16, %struct.DeviceCtlBlk* %17, %struct.ScsiReqBlk* %18) #11, !dbg !12541
  %19 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12542
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %19, i32 0, i32 1, !dbg !12542
  %20 = load i64, i64* %io_port_base, align 8, !dbg !12542
  %add = add i64 %20, 128, !dbg !12542
  %conv19 = trunc i64 %add to i32, !dbg !12542
  call void @outw(i16 zeroext 512, i32 %conv19) #11, !dbg !12542
  %21 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12542
  %state20 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %21, i32 0, i32 10, !dbg !12542
  %22 = load i16, i16* %state20, align 8, !dbg !12542
  %conv21 = zext i16 %22 to i32, !dbg !12542
  %or22 = or i32 %conv21, 4, !dbg !12542
  %conv23 = trunc i32 %or22 to i16, !dbg !12542
  store i16 %conv23, i16* %state20, align 8, !dbg !12542
  br label %do.body24, !dbg !12543

do.body24:                                        ; preds = %if.then
  br label %do.end25, !dbg !12544

do.end25:                                         ; preds = %do.body24
  br label %if.end, !dbg !12546

if.end:                                           ; preds = %do.end25, %land.lhs.true, %do.end
  ret void, !dbg !12547
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @msgin_set_sync(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb) #2 !dbg !12548 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %bval = alloca i8, align 1
  %fact = alloca i32, align 4
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !12549, metadata !DIExpression()), !dbg !12550
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !12551, metadata !DIExpression()), !dbg !12552
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !12553, metadata !DIExpression()), !dbg !12554
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12555
  %dcb1 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 1, !dbg !12556
  %1 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb1, align 8, !dbg !12556
  store %struct.DeviceCtlBlk* %1, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12554
  call void @llvm.dbg.declare(metadata i8* %bval, metadata !12557, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.declare(metadata i32* %fact, metadata !12559, metadata !DIExpression()), !dbg !12560
  br label %do.body, !dbg !12561

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12562

do.end:                                           ; preds = %do.body
  %2 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12564
  %msgin_buf = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %2, i32 0, i32 11, !dbg !12566
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %msgin_buf, i64 0, i64 4, !dbg !12564
  %3 = load i8, i8* %arrayidx, align 2, !dbg !12564
  %conv = zext i8 %3 to i32, !dbg !12564
  %cmp = icmp sgt i32 %conv, 15, !dbg !12567
  br i1 %cmp, label %if.then, label %if.end, !dbg !12568

if.then:                                          ; preds = %do.end
  %4 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12569
  %msgin_buf3 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %4, i32 0, i32 11, !dbg !12570
  %arrayidx4 = getelementptr [6 x i8], [6 x i8]* %msgin_buf3, i64 0, i64 4, !dbg !12569
  store i8 15, i8* %arrayidx4, align 2, !dbg !12571
  br label %if.end, !dbg !12569

if.end:                                           ; preds = %if.then, %do.end
  %5 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12572
  %dev_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %5, i32 0, i32 10, !dbg !12574
  %6 = load i8, i8* %dev_mode, align 1, !dbg !12574
  %conv5 = zext i8 %6 to i32, !dbg !12572
  %and = and i32 %conv5, 2, !dbg !12575
  %tobool = icmp ne i32 %and, 0, !dbg !12575
  br i1 %tobool, label %if.else, label %if.then6, !dbg !12576

if.then6:                                         ; preds = %if.end
  %7 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12577
  %sync_offset = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %7, i32 0, i32 15, !dbg !12578
  store i8 0, i8* %sync_offset, align 2, !dbg !12579
  br label %if.end16, !dbg !12577

if.else:                                          ; preds = %if.end
  %8 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12580
  %sync_offset7 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %8, i32 0, i32 15, !dbg !12582
  %9 = load i8, i8* %sync_offset7, align 2, !dbg !12582
  %conv8 = zext i8 %9 to i32, !dbg !12580
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !12583
  br i1 %cmp9, label %if.then11, label %if.end15, !dbg !12584

if.then11:                                        ; preds = %if.else
  %10 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12585
  %msgin_buf12 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %10, i32 0, i32 11, !dbg !12586
  %arrayidx13 = getelementptr [6 x i8], [6 x i8]* %msgin_buf12, i64 0, i64 4, !dbg !12585
  %11 = load i8, i8* %arrayidx13, align 2, !dbg !12585
  %12 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12587
  %sync_offset14 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %12, i32 0, i32 15, !dbg !12588
  store i8 %11, i8* %sync_offset14, align 2, !dbg !12589
  br label %if.end15, !dbg !12587

if.end15:                                         ; preds = %if.then11, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then6
  %13 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12590
  %msgin_buf17 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %13, i32 0, i32 11, !dbg !12592
  %arrayidx18 = getelementptr [6 x i8], [6 x i8]* %msgin_buf17, i64 0, i64 4, !dbg !12590
  %14 = load i8, i8* %arrayidx18, align 2, !dbg !12590
  %conv19 = zext i8 %14 to i32, !dbg !12590
  %15 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12593
  %sync_offset20 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %15, i32 0, i32 15, !dbg !12594
  %16 = load i8, i8* %sync_offset20, align 2, !dbg !12594
  %conv21 = zext i8 %16 to i32, !dbg !12593
  %cmp22 = icmp sgt i32 %conv19, %conv21, !dbg !12595
  br i1 %cmp22, label %if.then24, label %if.else28, !dbg !12596

if.then24:                                        ; preds = %if.end16
  %17 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12597
  %sync_offset25 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %17, i32 0, i32 15, !dbg !12598
  %18 = load i8, i8* %sync_offset25, align 2, !dbg !12598
  %19 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12599
  %msgin_buf26 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %19, i32 0, i32 11, !dbg !12600
  %arrayidx27 = getelementptr [6 x i8], [6 x i8]* %msgin_buf26, i64 0, i64 4, !dbg !12599
  store i8 %18, i8* %arrayidx27, align 2, !dbg !12601
  br label %if.end32, !dbg !12599

if.else28:                                        ; preds = %if.end16
  %20 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12602
  %msgin_buf29 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %20, i32 0, i32 11, !dbg !12603
  %arrayidx30 = getelementptr [6 x i8], [6 x i8]* %msgin_buf29, i64 0, i64 4, !dbg !12602
  %21 = load i8, i8* %arrayidx30, align 2, !dbg !12602
  %22 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12604
  %sync_offset31 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %22, i32 0, i32 15, !dbg !12605
  store i8 %21, i8* %sync_offset31, align 2, !dbg !12606
  br label %if.end32

if.end32:                                         ; preds = %if.else28, %if.then24
  store i8 0, i8* %bval, align 1, !dbg !12607
  br label %while.cond, !dbg !12608

while.cond:                                       ; preds = %while.body, %if.end32
  %23 = load i8, i8* %bval, align 1, !dbg !12609
  %conv33 = zext i8 %23 to i32, !dbg !12609
  %cmp34 = icmp slt i32 %conv33, 7, !dbg !12610
  br i1 %cmp34, label %land.rhs, label %land.end, !dbg !12611

land.rhs:                                         ; preds = %while.cond
  %24 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12612
  %msgin_buf36 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %24, i32 0, i32 11, !dbg !12613
  %arrayidx37 = getelementptr [6 x i8], [6 x i8]* %msgin_buf36, i64 0, i64 3, !dbg !12612
  %25 = load i8, i8* %arrayidx37, align 1, !dbg !12612
  %conv38 = zext i8 %25 to i32, !dbg !12612
  %26 = load i8, i8* %bval, align 1, !dbg !12614
  %idxprom = zext i8 %26 to i64, !dbg !12615
  %arrayidx39 = getelementptr [8 x i8], [8 x i8]* @clock_period, i64 0, i64 %idxprom, !dbg !12615
  %27 = load i8, i8* %arrayidx39, align 1, !dbg !12615
  %conv40 = zext i8 %27 to i32, !dbg !12615
  %cmp41 = icmp sgt i32 %conv38, %conv40, !dbg !12616
  br i1 %cmp41, label %lor.end, label %lor.rhs, !dbg !12617

lor.rhs:                                          ; preds = %land.rhs
  %28 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12618
  %min_nego_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %28, i32 0, i32 13, !dbg !12619
  %29 = load i8, i8* %min_nego_period, align 4, !dbg !12619
  %conv43 = zext i8 %29 to i32, !dbg !12618
  %30 = load i8, i8* %bval, align 1, !dbg !12620
  %idxprom44 = zext i8 %30 to i64, !dbg !12621
  %arrayidx45 = getelementptr [8 x i8], [8 x i8]* @clock_period, i64 0, i64 %idxprom44, !dbg !12621
  %31 = load i8, i8* %arrayidx45, align 1, !dbg !12621
  %conv46 = zext i8 %31 to i32, !dbg !12621
  %cmp47 = icmp sgt i32 %conv43, %conv46, !dbg !12622
  br label %lor.end, !dbg !12617

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %32 = phi i1 [ true, %land.rhs ], [ %cmp47, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %33 = phi i1 [ false, %while.cond ], [ %32, %lor.end ], !dbg !12623
  br i1 %33, label %while.body, label %while.end, !dbg !12608

while.body:                                       ; preds = %land.end
  %34 = load i8, i8* %bval, align 1, !dbg !12624
  %inc = add i8 %34, 1, !dbg !12624
  store i8 %inc, i8* %bval, align 1, !dbg !12624
  br label %while.cond, !dbg !12608, !llvm.loop !12625

while.end:                                        ; preds = %land.end
  %35 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12626
  %msgin_buf49 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %35, i32 0, i32 11, !dbg !12628
  %arrayidx50 = getelementptr [6 x i8], [6 x i8]* %msgin_buf49, i64 0, i64 3, !dbg !12626
  %36 = load i8, i8* %arrayidx50, align 1, !dbg !12626
  %conv51 = zext i8 %36 to i32, !dbg !12626
  %37 = load i8, i8* %bval, align 1, !dbg !12629
  %idxprom52 = zext i8 %37 to i64, !dbg !12630
  %arrayidx53 = getelementptr [8 x i8], [8 x i8]* @clock_period, i64 0, i64 %idxprom52, !dbg !12630
  %38 = load i8, i8* %arrayidx53, align 1, !dbg !12630
  %conv54 = zext i8 %38 to i32, !dbg !12630
  %cmp55 = icmp slt i32 %conv51, %conv54, !dbg !12631
  br i1 %cmp55, label %if.then57, label %if.end61, !dbg !12632

if.then57:                                        ; preds = %while.end
  %39 = load i8, i8* %bval, align 1, !dbg !12633
  %idxprom58 = zext i8 %39 to i64, !dbg !12633
  %arrayidx59 = getelementptr [8 x i8], [8 x i8]* @clock_period, i64 0, i64 %idxprom58, !dbg !12633
  %40 = load i8, i8* %arrayidx59, align 1, !dbg !12633
  %conv60 = zext i8 %40 to i32, !dbg !12633
  %shl = shl i32 %conv60, 2, !dbg !12633
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.96, i64 0, i64 0), i32 %shl) #12, !dbg !12633
  br label %if.end61, !dbg !12633

if.end61:                                         ; preds = %if.then57, %while.end
  %41 = load i8, i8* %bval, align 1, !dbg !12634
  %idxprom62 = zext i8 %41 to i64, !dbg !12635
  %arrayidx63 = getelementptr [8 x i8], [8 x i8]* @clock_period, i64 0, i64 %idxprom62, !dbg !12635
  %42 = load i8, i8* %arrayidx63, align 1, !dbg !12635
  %43 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12636
  %msgin_buf64 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %43, i32 0, i32 11, !dbg !12637
  %arrayidx65 = getelementptr [6 x i8], [6 x i8]* %msgin_buf64, i64 0, i64 3, !dbg !12636
  store i8 %42, i8* %arrayidx65, align 1, !dbg !12638
  %44 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12639
  %sync_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %44, i32 0, i32 14, !dbg !12640
  %45 = load i8, i8* %sync_period, align 1, !dbg !12641
  %conv66 = zext i8 %45 to i32, !dbg !12641
  %and67 = and i32 %conv66, 240, !dbg !12641
  %conv68 = trunc i32 %and67 to i8, !dbg !12641
  store i8 %conv68, i8* %sync_period, align 1, !dbg !12641
  %46 = load i8, i8* %bval, align 1, !dbg !12642
  %conv69 = zext i8 %46 to i32, !dbg !12642
  %or = or i32 8, %conv69, !dbg !12643
  %47 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12644
  %sync_period70 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %47, i32 0, i32 14, !dbg !12645
  %48 = load i8, i8* %sync_period70, align 1, !dbg !12646
  %conv71 = zext i8 %48 to i32, !dbg !12646
  %or72 = or i32 %conv71, %or, !dbg !12646
  %conv73 = trunc i32 %or72 to i8, !dbg !12646
  store i8 %conv73, i8* %sync_period70, align 1, !dbg !12646
  %49 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12647
  %msgin_buf74 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %49, i32 0, i32 11, !dbg !12648
  %arrayidx75 = getelementptr [6 x i8], [6 x i8]* %msgin_buf74, i64 0, i64 3, !dbg !12647
  %50 = load i8, i8* %arrayidx75, align 1, !dbg !12647
  %51 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12649
  %min_nego_period76 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %51, i32 0, i32 13, !dbg !12650
  store i8 %50, i8* %min_nego_period76, align 4, !dbg !12651
  %52 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12652
  %sync_period77 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %52, i32 0, i32 14, !dbg !12654
  %53 = load i8, i8* %sync_period77, align 1, !dbg !12654
  %conv78 = zext i8 %53 to i32, !dbg !12652
  %and79 = and i32 %conv78, 16, !dbg !12655
  %tobool80 = icmp ne i32 %and79, 0, !dbg !12655
  br i1 %tobool80, label %if.then81, label %if.else82, !dbg !12656

if.then81:                                        ; preds = %if.end61
  store i32 500, i32* %fact, align 4, !dbg !12657
  br label %if.end83, !dbg !12658

if.else82:                                        ; preds = %if.end61
  store i32 250, i32* %fact, align 4, !dbg !12659
  br label %if.end83

if.end83:                                         ; preds = %if.else82, %if.then81
  %54 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12660
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %54, i32 0, i32 7, !dbg !12660
  %55 = load i8, i8* %target_id, align 2, !dbg !12660
  %conv84 = zext i8 %55 to i32, !dbg !12660
  %56 = load i32, i32* %fact, align 4, !dbg !12660
  %cmp85 = icmp eq i32 %56, 500, !dbg !12660
  %57 = zext i1 %cmp85 to i64, !dbg !12660
  %cond = select i1 %cmp85, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38, i64 0, i64 0), !dbg !12660
  %58 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12660
  %min_nego_period87 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %58, i32 0, i32 13, !dbg !12660
  %59 = load i8, i8* %min_nego_period87, align 4, !dbg !12660
  %conv88 = zext i8 %59 to i32, !dbg !12660
  %shl89 = shl i32 %conv88, 2, !dbg !12660
  %60 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12660
  %sync_offset90 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %60, i32 0, i32 15, !dbg !12660
  %61 = load i8, i8* %sync_offset90, align 2, !dbg !12660
  %conv91 = zext i8 %61 to i32, !dbg !12660
  %62 = load i32, i32* %fact, align 4, !dbg !12660
  %63 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12660
  %min_nego_period92 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %63, i32 0, i32 13, !dbg !12660
  %64 = load i8, i8* %min_nego_period92, align 4, !dbg !12660
  %conv93 = zext i8 %64 to i32, !dbg !12660
  %div = sdiv i32 %62, %conv93, !dbg !12660
  %65 = load i32, i32* %fact, align 4, !dbg !12660
  %66 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12660
  %min_nego_period94 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %66, i32 0, i32 13, !dbg !12660
  %67 = load i8, i8* %min_nego_period94, align 4, !dbg !12660
  %conv95 = zext i8 %67 to i32, !dbg !12660
  %rem = srem i32 %65, %conv95, !dbg !12660
  %mul = mul i32 %rem, 10, !dbg !12660
  %68 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12660
  %min_nego_period96 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %68, i32 0, i32 13, !dbg !12660
  %69 = load i8, i8* %min_nego_period96, align 4, !dbg !12660
  %conv97 = zext i8 %69 to i32, !dbg !12660
  %div98 = sdiv i32 %conv97, 2, !dbg !12660
  %add = add i32 %mul, %div98, !dbg !12660
  %70 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12660
  %min_nego_period99 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %70, i32 0, i32 13, !dbg !12660
  %71 = load i8, i8* %min_nego_period99, align 4, !dbg !12660
  %conv100 = zext i8 %71 to i32, !dbg !12660
  %div101 = sdiv i32 %add, %conv100, !dbg !12660
  %call102 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.97, i64 0, i64 0), i32 %conv84, i8* %cond, i32 %shl89, i32 %conv91, i32 %div, i32 %div101) #12, !dbg !12660
  %72 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12661
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %72, i32 0, i32 10, !dbg !12663
  %73 = load i16, i16* %state, align 8, !dbg !12663
  %conv103 = zext i16 %73 to i32, !dbg !12661
  %and104 = and i32 %conv103, 8192, !dbg !12664
  %tobool105 = icmp ne i32 %and104, 0, !dbg !12664
  br i1 %tobool105, label %if.else126, label %if.then106, !dbg !12665

if.then106:                                       ; preds = %if.end83
  %74 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12666
  %msgin_buf107 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %74, i32 0, i32 11, !dbg !12666
  %arrayidx108 = getelementptr [6 x i8], [6 x i8]* %msgin_buf107, i64 0, i64 3, !dbg !12666
  %75 = load i8, i8* %arrayidx108, align 1, !dbg !12666
  %conv109 = zext i8 %75 to i32, !dbg !12666
  %shl110 = shl i32 %conv109, 2, !dbg !12666
  %76 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12666
  %msgin_buf111 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %76, i32 0, i32 11, !dbg !12666
  %arrayidx112 = getelementptr [6 x i8], [6 x i8]* %msgin_buf111, i64 0, i64 4, !dbg !12666
  %77 = load i8, i8* %arrayidx112, align 2, !dbg !12666
  %conv113 = zext i8 %77 to i32, !dbg !12666
  %call114 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.99, i64 0, i64 0), i32 %shl110, i32 %conv113) #12, !dbg !12666
  %78 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12668
  %msgout_buf = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %78, i32 0, i32 12, !dbg !12669
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %msgout_buf, i64 0, i64 0, !dbg !12670
  %79 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12671
  %msgin_buf115 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %79, i32 0, i32 11, !dbg !12672
  %arraydecay116 = getelementptr inbounds [6 x i8], [6 x i8]* %msgin_buf115, i64 0, i64 0, !dbg !12670
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 2 %arraydecay116, i64 5, i1 false), !dbg !12670
  %80 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12673
  %msg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %80, i32 0, i32 15, !dbg !12674
  store i8 5, i8* %msg_count, align 8, !dbg !12675
  %81 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12676
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %81, i32 0, i32 1, !dbg !12676
  %82 = load i64, i64* %io_port_base, align 8, !dbg !12676
  %add117 = add i64 %82, 128, !dbg !12676
  %conv118 = trunc i64 %add117 to i32, !dbg !12676
  call void @outw(i16 zeroext 512, i32 %conv118) #11, !dbg !12676
  %83 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12676
  %state119 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %83, i32 0, i32 10, !dbg !12676
  %84 = load i16, i16* %state119, align 8, !dbg !12676
  %conv120 = zext i16 %84 to i32, !dbg !12676
  %or121 = or i32 %conv120, 4, !dbg !12676
  %conv122 = trunc i32 %or121 to i16, !dbg !12676
  store i16 %conv122, i16* %state119, align 8, !dbg !12676
  %85 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12677
  %sync_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %85, i32 0, i32 12, !dbg !12678
  %86 = load i8, i8* %sync_mode, align 1, !dbg !12679
  %conv123 = zext i8 %86 to i32, !dbg !12679
  %or124 = or i32 %conv123, 2, !dbg !12679
  %conv125 = trunc i32 %or124 to i8, !dbg !12679
  store i8 %conv125, i8* %sync_mode, align 1, !dbg !12679
  br label %if.end146, !dbg !12680

if.else126:                                       ; preds = %if.end83
  %87 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12681
  %sync_mode127 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %87, i32 0, i32 12, !dbg !12684
  %88 = load i8, i8* %sync_mode127, align 1, !dbg !12684
  %conv128 = zext i8 %88 to i32, !dbg !12681
  %and129 = and i32 %conv128, 4, !dbg !12685
  %tobool130 = icmp ne i32 %and129, 0, !dbg !12685
  br i1 %tobool130, label %land.lhs.true, label %if.end145, !dbg !12686

land.lhs.true:                                    ; preds = %if.else126
  %89 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12687
  %sync_mode131 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %89, i32 0, i32 12, !dbg !12688
  %90 = load i8, i8* %sync_mode131, align 1, !dbg !12688
  %conv132 = zext i8 %90 to i32, !dbg !12687
  %and133 = and i32 %conv132, 8, !dbg !12689
  %tobool134 = icmp ne i32 %and133, 0, !dbg !12689
  br i1 %tobool134, label %if.end145, label %if.then135, !dbg !12690

if.then135:                                       ; preds = %land.lhs.true
  %91 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12691
  %92 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12693
  %93 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12694
  call void @build_wdtr(%struct.AdapterCtlBlk* %91, %struct.DeviceCtlBlk* %92, %struct.ScsiReqBlk* %93) #11, !dbg !12695
  %94 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12696
  %io_port_base136 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %94, i32 0, i32 1, !dbg !12696
  %95 = load i64, i64* %io_port_base136, align 8, !dbg !12696
  %add137 = add i64 %95, 128, !dbg !12696
  %conv138 = trunc i64 %add137 to i32, !dbg !12696
  call void @outw(i16 zeroext 512, i32 %conv138) #11, !dbg !12696
  %96 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12696
  %state139 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %96, i32 0, i32 10, !dbg !12696
  %97 = load i16, i16* %state139, align 8, !dbg !12696
  %conv140 = zext i16 %97 to i32, !dbg !12696
  %or141 = or i32 %conv140, 4, !dbg !12696
  %conv142 = trunc i32 %or141 to i16, !dbg !12696
  store i16 %conv142, i16* %state139, align 8, !dbg !12696
  br label %do.body143, !dbg !12697

do.body143:                                       ; preds = %if.then135
  br label %do.end144, !dbg !12698

do.end144:                                        ; preds = %do.body143
  br label %if.end145, !dbg !12700

if.end145:                                        ; preds = %do.end144, %land.lhs.true, %if.else126
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.then106
  %98 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12701
  %state147 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %98, i32 0, i32 10, !dbg !12702
  %99 = load i16, i16* %state147, align 8, !dbg !12703
  %conv148 = zext i16 %99 to i32, !dbg !12703
  %and149 = and i32 %conv148, -8193, !dbg !12703
  %conv150 = trunc i32 %and149 to i16, !dbg !12703
  store i16 %conv150, i16* %state147, align 8, !dbg !12703
  %100 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12704
  %sync_mode151 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %100, i32 0, i32 12, !dbg !12705
  %101 = load i8, i8* %sync_mode151, align 1, !dbg !12706
  %conv152 = zext i8 %101 to i32, !dbg !12706
  %or153 = or i32 %conv152, 3, !dbg !12706
  %conv154 = trunc i32 %or153 to i8, !dbg !12706
  store i8 %conv154, i8* %sync_mode151, align 1, !dbg !12706
  %102 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12707
  %103 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12708
  call void @reprogram_regs(%struct.AdapterCtlBlk* %102, %struct.DeviceCtlBlk* %103) #11, !dbg !12709
  ret void, !dbg !12710
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @msgin_set_wide(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb) #2 !dbg !12711 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %wide = alloca i8, align 1
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !12712, metadata !DIExpression()), !dbg !12713
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !12714, metadata !DIExpression()), !dbg !12715
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !12716, metadata !DIExpression()), !dbg !12717
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12718
  %dcb1 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 1, !dbg !12719
  %1 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb1, align 8, !dbg !12719
  store %struct.DeviceCtlBlk* %1, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12717
  call void @llvm.dbg.declare(metadata i8* %wide, metadata !12720, metadata !DIExpression()), !dbg !12721
  %2 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12722
  %dev_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %2, i32 0, i32 10, !dbg !12723
  %3 = load i8, i8* %dev_mode, align 1, !dbg !12723
  %conv = zext i8 %3 to i32, !dbg !12722
  %and = and i32 %conv, 32, !dbg !12724
  %tobool = icmp ne i32 %and, 0, !dbg !12724
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !12725

land.rhs:                                         ; preds = %entry
  %4 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12726
  %config = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %4, i32 0, i32 17, !dbg !12727
  %5 = load i8, i8* %config, align 1, !dbg !12727
  %conv2 = zext i8 %5 to i32, !dbg !12726
  %and3 = and i32 %conv2, 32, !dbg !12728
  %tobool4 = icmp ne i32 %and3, 0, !dbg !12725
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %tobool4, %land.rhs ], !dbg !12729
  %7 = zext i1 %6 to i64, !dbg !12730
  %cond = select i1 %6, i32 1, i32 0, !dbg !12730
  %conv5 = trunc i32 %cond to i8, !dbg !12730
  store i8 %conv5, i8* %wide, align 1, !dbg !12721
  br label %do.body, !dbg !12731

do.body:                                          ; preds = %land.end
  br label %do.end, !dbg !12732

do.end:                                           ; preds = %do.body
  %8 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12734
  %msgin_buf = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %8, i32 0, i32 11, !dbg !12736
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %msgin_buf, i64 0, i64 3, !dbg !12734
  %9 = load i8, i8* %arrayidx, align 1, !dbg !12734
  %conv6 = zext i8 %9 to i32, !dbg !12734
  %10 = load i8, i8* %wide, align 1, !dbg !12737
  %conv7 = zext i8 %10 to i32, !dbg !12737
  %cmp = icmp sgt i32 %conv6, %conv7, !dbg !12738
  br i1 %cmp, label %if.then, label %if.end, !dbg !12739

if.then:                                          ; preds = %do.end
  %11 = load i8, i8* %wide, align 1, !dbg !12740
  %12 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12741
  %msgin_buf9 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %12, i32 0, i32 11, !dbg !12742
  %arrayidx10 = getelementptr [6 x i8], [6 x i8]* %msgin_buf9, i64 0, i64 3, !dbg !12741
  store i8 %11, i8* %arrayidx10, align 1, !dbg !12743
  br label %if.end, !dbg !12741

if.end:                                           ; preds = %if.then, %do.end
  %13 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12744
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %13, i32 0, i32 10, !dbg !12746
  %14 = load i16, i16* %state, align 8, !dbg !12746
  %conv11 = zext i16 %14 to i32, !dbg !12744
  %and12 = and i32 %conv11, 16384, !dbg !12747
  %tobool13 = icmp ne i32 %and12, 0, !dbg !12747
  br i1 %tobool13, label %if.end26, label %if.then14, !dbg !12748

if.then14:                                        ; preds = %if.end
  %15 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12749
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %15, i32 0, i32 7, !dbg !12749
  %16 = load i8, i8* %target_id, align 2, !dbg !12749
  %conv15 = zext i8 %16 to i32, !dbg !12749
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.100, i64 0, i64 0), i32 %conv15) #12, !dbg !12749
  %17 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12751
  %msgout_buf = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %17, i32 0, i32 12, !dbg !12752
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %msgout_buf, i64 0, i64 0, !dbg !12753
  %18 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12754
  %msgin_buf16 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %18, i32 0, i32 11, !dbg !12755
  %arraydecay17 = getelementptr inbounds [6 x i8], [6 x i8]* %msgin_buf16, i64 0, i64 0, !dbg !12753
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 2 %arraydecay17, i64 4, i1 false), !dbg !12753
  %19 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12756
  %msg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %19, i32 0, i32 15, !dbg !12757
  store i8 4, i8* %msg_count, align 8, !dbg !12758
  %20 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12759
  %state18 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %20, i32 0, i32 10, !dbg !12760
  %21 = load i16, i16* %state18, align 8, !dbg !12761
  %conv19 = zext i16 %21 to i32, !dbg !12761
  %or = or i32 %conv19, 16384, !dbg !12761
  %conv20 = trunc i32 %or to i16, !dbg !12761
  store i16 %conv20, i16* %state18, align 8, !dbg !12761
  %22 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12762
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %22, i32 0, i32 1, !dbg !12762
  %23 = load i64, i64* %io_port_base, align 8, !dbg !12762
  %add = add i64 %23, 128, !dbg !12762
  %conv21 = trunc i64 %add to i32, !dbg !12762
  call void @outw(i16 zeroext 512, i32 %conv21) #11, !dbg !12762
  %24 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12762
  %state22 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %24, i32 0, i32 10, !dbg !12762
  %25 = load i16, i16* %state22, align 8, !dbg !12762
  %conv23 = zext i16 %25 to i32, !dbg !12762
  %or24 = or i32 %conv23, 4, !dbg !12762
  %conv25 = trunc i32 %or24 to i16, !dbg !12762
  store i16 %conv25, i16* %state22, align 8, !dbg !12762
  br label %if.end26, !dbg !12763

if.end26:                                         ; preds = %if.then14, %if.end
  %26 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12764
  %sync_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %26, i32 0, i32 12, !dbg !12765
  %27 = load i8, i8* %sync_mode, align 1, !dbg !12766
  %conv27 = zext i8 %27 to i32, !dbg !12766
  %or28 = or i32 %conv27, 12, !dbg !12766
  %conv29 = trunc i32 %or28 to i8, !dbg !12766
  store i8 %conv29, i8* %sync_mode, align 1, !dbg !12766
  %28 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12767
  %msgin_buf30 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %28, i32 0, i32 11, !dbg !12769
  %arrayidx31 = getelementptr [6 x i8], [6 x i8]* %msgin_buf30, i64 0, i64 3, !dbg !12767
  %29 = load i8, i8* %arrayidx31, align 1, !dbg !12767
  %conv32 = zext i8 %29 to i32, !dbg !12767
  %cmp33 = icmp sgt i32 %conv32, 0, !dbg !12770
  br i1 %cmp33, label %if.then35, label %if.else, !dbg !12771

if.then35:                                        ; preds = %if.end26
  %30 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12772
  %sync_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %30, i32 0, i32 14, !dbg !12773
  %31 = load i8, i8* %sync_period, align 1, !dbg !12774
  %conv36 = zext i8 %31 to i32, !dbg !12774
  %or37 = or i32 %conv36, 16, !dbg !12774
  %conv38 = trunc i32 %or37 to i8, !dbg !12774
  store i8 %conv38, i8* %sync_period, align 1, !dbg !12774
  br label %if.end43, !dbg !12772

if.else:                                          ; preds = %if.end26
  %32 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12775
  %sync_period39 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %32, i32 0, i32 14, !dbg !12776
  %33 = load i8, i8* %sync_period39, align 1, !dbg !12777
  %conv40 = zext i8 %33 to i32, !dbg !12777
  %and41 = and i32 %conv40, -17, !dbg !12777
  %conv42 = trunc i32 %and41 to i8, !dbg !12777
  store i8 %conv42, i8* %sync_period39, align 1, !dbg !12777
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then35
  %34 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12778
  %state44 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %34, i32 0, i32 10, !dbg !12779
  %35 = load i16, i16* %state44, align 8, !dbg !12780
  %conv45 = zext i16 %35 to i32, !dbg !12780
  %and46 = and i32 %conv45, -16385, !dbg !12780
  %conv47 = trunc i32 %and46 to i16, !dbg !12780
  store i16 %conv47, i16* %state44, align 8, !dbg !12780
  br label %do.body48, !dbg !12781

do.body48:                                        ; preds = %if.end43
  br label %do.end49, !dbg !12782

do.end49:                                         ; preds = %do.body48
  %36 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12784
  %37 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12785
  call void @reprogram_regs(%struct.AdapterCtlBlk* %36, %struct.DeviceCtlBlk* %37) #11, !dbg !12786
  %38 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12787
  %sync_mode50 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %38, i32 0, i32 12, !dbg !12789
  %39 = load i8, i8* %sync_mode50, align 1, !dbg !12789
  %conv51 = zext i8 %39 to i32, !dbg !12787
  %and52 = and i32 %conv51, 1, !dbg !12790
  %tobool53 = icmp ne i32 %and52, 0, !dbg !12790
  br i1 %tobool53, label %land.lhs.true, label %if.end68, !dbg !12791

land.lhs.true:                                    ; preds = %do.end49
  %40 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12792
  %sync_mode54 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %40, i32 0, i32 12, !dbg !12793
  %41 = load i8, i8* %sync_mode54, align 1, !dbg !12793
  %conv55 = zext i8 %41 to i32, !dbg !12792
  %and56 = and i32 %conv55, 2, !dbg !12794
  %tobool57 = icmp ne i32 %and56, 0, !dbg !12794
  br i1 %tobool57, label %if.end68, label %if.then58, !dbg !12795

if.then58:                                        ; preds = %land.lhs.true
  %42 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12796
  %43 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12798
  %44 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12799
  call void @build_sdtr(%struct.AdapterCtlBlk* %42, %struct.DeviceCtlBlk* %43, %struct.ScsiReqBlk* %44) #11, !dbg !12800
  %45 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12801
  %io_port_base59 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %45, i32 0, i32 1, !dbg !12801
  %46 = load i64, i64* %io_port_base59, align 8, !dbg !12801
  %add60 = add i64 %46, 128, !dbg !12801
  %conv61 = trunc i64 %add60 to i32, !dbg !12801
  call void @outw(i16 zeroext 512, i32 %conv61) #11, !dbg !12801
  %47 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12801
  %state62 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %47, i32 0, i32 10, !dbg !12801
  %48 = load i16, i16* %state62, align 8, !dbg !12801
  %conv63 = zext i16 %48 to i32, !dbg !12801
  %or64 = or i32 %conv63, 4, !dbg !12801
  %conv65 = trunc i32 %or64 to i16, !dbg !12801
  store i16 %conv65, i16* %state62, align 8, !dbg !12801
  br label %do.body66, !dbg !12802

do.body66:                                        ; preds = %if.then58
  br label %do.end67, !dbg !12803

do.end67:                                         ; preds = %do.body66
  br label %if.end68, !dbg !12805

if.end68:                                         ; preds = %do.end67, %land.lhs.true, %do.end49
  ret void, !dbg !12806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @msgin_reject(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb) #2 !dbg !12807 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !12808, metadata !DIExpression()), !dbg !12809
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !12810, metadata !DIExpression()), !dbg !12811
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12812
  %msgout_buf = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 12, !dbg !12813
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %msgout_buf, i64 0, i64 0, !dbg !12812
  store i8 7, i8* %arrayidx, align 8, !dbg !12814
  %1 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12815
  %msg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %1, i32 0, i32 15, !dbg !12816
  store i8 1, i8* %msg_count, align 8, !dbg !12817
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12818
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 1, !dbg !12818
  %3 = load i64, i64* %io_port_base, align 8, !dbg !12818
  %add = add i64 %3, 128, !dbg !12818
  %conv = trunc i64 %add to i32, !dbg !12818
  call void @outw(i16 zeroext 512, i32 %conv) #11, !dbg !12818
  %4 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12818
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %4, i32 0, i32 10, !dbg !12818
  %5 = load i16, i16* %state, align 8, !dbg !12818
  %conv1 = zext i16 %5 to i32, !dbg !12818
  %or = or i32 %conv1, 4, !dbg !12818
  %conv2 = trunc i32 %or to i16, !dbg !12818
  store i16 %conv2, i16* %state, align 8, !dbg !12818
  %6 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12819
  %state3 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %6, i32 0, i32 10, !dbg !12820
  %7 = load i16, i16* %state3, align 8, !dbg !12821
  %conv4 = zext i16 %7 to i32, !dbg !12821
  %and = and i32 %conv4, -9, !dbg !12821
  %conv5 = trunc i32 %and to i16, !dbg !12821
  store i16 %conv5, i16* %state3, align 8, !dbg !12821
  %8 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12822
  %state6 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %8, i32 0, i32 10, !dbg !12823
  %9 = load i16, i16* %state6, align 8, !dbg !12824
  %conv7 = zext i16 %9 to i32, !dbg !12824
  %or8 = or i32 %conv7, 4, !dbg !12824
  %conv9 = trunc i32 %or8 to i16, !dbg !12824
  store i16 %conv9, i16* %state6, align 8, !dbg !12824
  %10 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12825
  %msgin_buf = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %10, i32 0, i32 11, !dbg !12825
  %arrayidx10 = getelementptr [6 x i8], [6 x i8]* %msgin_buf, i64 0, i64 0, !dbg !12825
  %11 = load i8, i8* %arrayidx10, align 2, !dbg !12825
  %conv11 = zext i8 %11 to i32, !dbg !12825
  %12 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12825
  %dcb = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %12, i32 0, i32 1, !dbg !12825
  %13 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12825
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %13, i32 0, i32 7, !dbg !12825
  %14 = load i8, i8* %target_id, align 2, !dbg !12825
  %conv12 = zext i8 %14 to i32, !dbg !12825
  %15 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12825
  %dcb13 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %15, i32 0, i32 1, !dbg !12825
  %16 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb13, align 8, !dbg !12825
  %target_lun = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %16, i32 0, i32 8, !dbg !12825
  %17 = load i8, i8* %target_lun, align 1, !dbg !12825
  %conv14 = zext i8 %17 to i32, !dbg !12825
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.101, i64 0, i64 0), i32 %conv11, i32 %conv12, i32 %conv14) #12, !dbg !12825
  ret void, !dbg !12826
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reprogram_regs(%struct.AdapterCtlBlk* %acb, %struct.DeviceCtlBlk* %dcb) #2 !dbg !12827 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !12828, metadata !DIExpression()), !dbg !12829
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !12830, metadata !DIExpression()), !dbg !12831
  %0 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12832
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %0, i32 0, i32 7, !dbg !12832
  %1 = load i8, i8* %target_id, align 2, !dbg !12832
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12832
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 1, !dbg !12832
  %3 = load i64, i64* %io_port_base, align 8, !dbg !12832
  %add = add i64 %3, 134, !dbg !12832
  %conv = trunc i64 %add to i32, !dbg !12832
  call void @outb(i8 zeroext %1, i32 %conv) #11, !dbg !12832
  %4 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12833
  %sync_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %4, i32 0, i32 14, !dbg !12833
  %5 = load i8, i8* %sync_period, align 1, !dbg !12833
  %6 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12833
  %io_port_base1 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %6, i32 0, i32 1, !dbg !12833
  %7 = load i64, i64* %io_port_base1, align 8, !dbg !12833
  %add2 = add i64 %7, 133, !dbg !12833
  %conv3 = trunc i64 %add2 to i32, !dbg !12833
  call void @outb(i8 zeroext %5, i32 %conv3) #11, !dbg !12833
  %8 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12834
  %sync_offset = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %8, i32 0, i32 15, !dbg !12834
  %9 = load i8, i8* %sync_offset, align 2, !dbg !12834
  %10 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12834
  %io_port_base4 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %10, i32 0, i32 1, !dbg !12834
  %11 = load i64, i64* %io_port_base4, align 8, !dbg !12834
  %add5 = add i64 %11, 132, !dbg !12834
  %conv6 = trunc i64 %add5 to i32, !dbg !12834
  call void @outb(i8 zeroext %9, i32 %conv6) #11, !dbg !12834
  %12 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12835
  %13 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12836
  call void @set_xfer_rate(%struct.AdapterCtlBlk* %12, %struct.DeviceCtlBlk* %13) #11, !dbg !12837
  ret void, !dbg !12838
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_xfer_rate(%struct.AdapterCtlBlk* %acb, %struct.DeviceCtlBlk* %dcb) #2 !dbg !12839 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  %i = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp24 = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !12840, metadata !DIExpression()), !dbg !12841
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !12842, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %i, metadata !12844, metadata !DIExpression()), !dbg !12845
  %0 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12846
  %identify_msg = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %0, i32 0, i32 9, !dbg !12848
  %1 = load i8, i8* %identify_msg, align 8, !dbg !12848
  %conv = zext i8 %1 to i32, !dbg !12846
  %and = and i32 %conv, 7, !dbg !12849
  %tobool = icmp ne i32 %and, 0, !dbg !12849
  br i1 %tobool, label %if.then, label %if.end, !dbg !12850

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !12851

if.end:                                           ; preds = %entry
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12852
  %scan_devices = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 19, !dbg !12854
  %3 = load i8, i8* %scan_devices, align 1, !dbg !12854
  %tobool1 = icmp ne i8 %3, 0, !dbg !12852
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !12855

if.then2:                                         ; preds = %if.end
  %4 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12856
  %sync_offset = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %4, i32 0, i32 15, !dbg !12858
  %5 = load i8, i8* %sync_offset, align 2, !dbg !12858
  %conv3 = zext i8 %5 to i16, !dbg !12856
  store i16 %conv3, i16* @current_sync_offset, align 2, !dbg !12859
  br label %for.end, !dbg !12860

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12861, metadata !DIExpression()), !dbg !12864
  %6 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12864
  %dcb_list = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %6, i32 0, i32 3, !dbg !12864
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %dcb_list, i32 0, i32 0, !dbg !12864
  %7 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12864
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !12864
  store i8* %8, i8** %__mptr, align 8, !dbg !12864
  br label %do.body, !dbg !12864

do.body:                                          ; preds = %if.end4
  br label %do.end, !dbg !12865

do.end:                                           ; preds = %do.body
  %9 = load i8*, i8** %__mptr, align 8, !dbg !12864
  %add.ptr = getelementptr i8, i8* %9, i64 0, !dbg !12864
  %10 = bitcast i8* %add.ptr to %struct.DeviceCtlBlk*, !dbg !12864
  store %struct.DeviceCtlBlk* %10, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !12865
  %11 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !12864
  store %struct.DeviceCtlBlk* %11, %struct.DeviceCtlBlk** %i, align 8, !dbg !12867
  br label %for.cond, !dbg !12867

for.cond:                                         ; preds = %do.end23, %do.end
  %12 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !12868
  %list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %12, i32 0, i32 0, !dbg !12868
  %13 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12868
  %dcb_list5 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %13, i32 0, i32 3, !dbg !12868
  %cmp = icmp eq %struct.list_head* %list, %dcb_list5, !dbg !12868
  %lnot = xor i1 %cmp, true, !dbg !12868
  br i1 %lnot, label %for.body, label %for.end, !dbg !12867

for.body:                                         ; preds = %for.cond
  %14 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !12870
  %target_id = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %14, i32 0, i32 7, !dbg !12872
  %15 = load i8, i8* %target_id, align 2, !dbg !12872
  %conv7 = zext i8 %15 to i32, !dbg !12870
  %16 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12873
  %target_id8 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %16, i32 0, i32 7, !dbg !12874
  %17 = load i8, i8* %target_id8, align 2, !dbg !12874
  %conv9 = zext i8 %17 to i32, !dbg !12873
  %cmp10 = icmp eq i32 %conv7, %conv9, !dbg !12875
  br i1 %cmp10, label %if.then12, label %if.end18, !dbg !12876

if.then12:                                        ; preds = %for.body
  %18 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12877
  %sync_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %18, i32 0, i32 14, !dbg !12879
  %19 = load i8, i8* %sync_period, align 1, !dbg !12879
  %20 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !12880
  %sync_period13 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %20, i32 0, i32 14, !dbg !12881
  store i8 %19, i8* %sync_period13, align 1, !dbg !12882
  %21 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12883
  %sync_offset14 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %21, i32 0, i32 15, !dbg !12884
  %22 = load i8, i8* %sync_offset14, align 2, !dbg !12884
  %23 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !12885
  %sync_offset15 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %23, i32 0, i32 15, !dbg !12886
  store i8 %22, i8* %sync_offset15, align 2, !dbg !12887
  %24 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12888
  %sync_mode = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %24, i32 0, i32 12, !dbg !12889
  %25 = load i8, i8* %sync_mode, align 1, !dbg !12889
  %26 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !12890
  %sync_mode16 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %26, i32 0, i32 12, !dbg !12891
  store i8 %25, i8* %sync_mode16, align 1, !dbg !12892
  %27 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !12893
  %min_nego_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %27, i32 0, i32 13, !dbg !12894
  %28 = load i8, i8* %min_nego_period, align 4, !dbg !12894
  %29 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !12895
  %min_nego_period17 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %29, i32 0, i32 13, !dbg !12896
  store i8 %28, i8* %min_nego_period17, align 4, !dbg !12897
  br label %if.end18, !dbg !12898

if.end18:                                         ; preds = %if.then12, %for.body
  br label %for.inc, !dbg !12874

for.inc:                                          ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !12899, metadata !DIExpression()), !dbg !12901
  %30 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %i, align 8, !dbg !12901
  %list20 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %30, i32 0, i32 0, !dbg !12901
  %next21 = getelementptr inbounds %struct.list_head, %struct.list_head* %list20, i32 0, i32 0, !dbg !12901
  %31 = load %struct.list_head*, %struct.list_head** %next21, align 8, !dbg !12901
  %32 = bitcast %struct.list_head* %31 to i8*, !dbg !12901
  store i8* %32, i8** %__mptr19, align 8, !dbg !12901
  br label %do.body22, !dbg !12901

do.body22:                                        ; preds = %for.inc
  br label %do.end23, !dbg !12902

do.end23:                                         ; preds = %do.body22
  %33 = load i8*, i8** %__mptr19, align 8, !dbg !12901
  %add.ptr25 = getelementptr i8, i8* %33, i64 0, !dbg !12901
  %34 = bitcast i8* %add.ptr25 to %struct.DeviceCtlBlk*, !dbg !12901
  store %struct.DeviceCtlBlk* %34, %struct.DeviceCtlBlk** %tmp24, align 8, !dbg !12902
  %35 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp24, align 8, !dbg !12901
  store %struct.DeviceCtlBlk* %35, %struct.DeviceCtlBlk** %i, align 8, !dbg !12868
  br label %for.cond, !dbg !12868, !llvm.loop !12904

for.end:                                          ; preds = %if.then, %if.then2, %for.cond
  ret void, !dbg !12906
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @data_out_phase1(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb, i16* %pscsi_status) #2 !dbg !12907 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %pscsi_status.addr = alloca i16*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !12908, metadata !DIExpression()), !dbg !12909
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !12910, metadata !DIExpression()), !dbg !12911
  store i16* %pscsi_status, i16** %pscsi_status.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pscsi_status.addr, metadata !12912, metadata !DIExpression()), !dbg !12913
  br label %do.body, !dbg !12914

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12915

do.end:                                           ; preds = %do.body
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12917
  call void @clear_fifo(%struct.AdapterCtlBlk* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.102, i64 0, i64 0)) #11, !dbg !12918
  %1 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12919
  %2 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12920
  call void @data_io_transfer(%struct.AdapterCtlBlk* %1, %struct.ScsiReqBlk* %2, i16 zeroext 256) #11, !dbg !12921
  ret void, !dbg !12922
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @data_in_phase1(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb, i16* %pscsi_status) #2 !dbg !12923 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %pscsi_status.addr = alloca i16*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !12924, metadata !DIExpression()), !dbg !12925
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !12926, metadata !DIExpression()), !dbg !12927
  store i16* %pscsi_status, i16** %pscsi_status.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pscsi_status.addr, metadata !12928, metadata !DIExpression()), !dbg !12929
  br label %do.body, !dbg !12930

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12931

do.end:                                           ; preds = %do.body
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12933
  %1 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12934
  call void @data_io_transfer(%struct.AdapterCtlBlk* %0, %struct.ScsiReqBlk* %1, i16 zeroext 257) #11, !dbg !12935
  ret void, !dbg !12936
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @command_phase1(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb, i16* %pscsi_status) #2 !dbg !12937 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %pscsi_status.addr = alloca i16*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %ptr = alloca i8*, align 8
  %i = alloca i16, align 2
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !12938, metadata !DIExpression()), !dbg !12939
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !12940, metadata !DIExpression()), !dbg !12941
  store i16* %pscsi_status, i16** %pscsi_status.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pscsi_status.addr, metadata !12942, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !12944, metadata !DIExpression()), !dbg !12945
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !12946, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.declare(metadata i16* %i, metadata !12948, metadata !DIExpression()), !dbg !12949
  br label %do.body, !dbg !12950

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12951

do.end:                                           ; preds = %do.body
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12953
  call void @clear_fifo(%struct.AdapterCtlBlk* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.113, i64 0, i64 0)) #11, !dbg !12954
  %1 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12955
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %1, i32 0, i32 1, !dbg !12955
  %2 = load i64, i64* %io_port_base, align 8, !dbg !12955
  %add = add i64 %2, 128, !dbg !12955
  %conv = trunc i64 %add to i32, !dbg !12955
  call void @outw(i16 zeroext 1024, i32 %conv) #11, !dbg !12955
  %3 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12956
  %flag = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %3, i32 0, i32 20, !dbg !12958
  %4 = load i8, i8* %flag, align 1, !dbg !12958
  %conv1 = zext i8 %4 to i32, !dbg !12956
  %and = and i32 %conv1, 1, !dbg !12959
  %tobool = icmp ne i32 %and, 0, !dbg !12959
  br i1 %tobool, label %if.else, label %if.then, !dbg !12960

if.then:                                          ; preds = %do.end
  %5 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12961
  %cmd = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %5, i32 0, i32 2, !dbg !12963
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !12963
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %6, i32 0, i32 14, !dbg !12964
  %7 = load i8*, i8** %cmnd, align 8, !dbg !12964
  store i8* %7, i8** %ptr, align 8, !dbg !12965
  store i16 0, i16* %i, align 2, !dbg !12966
  br label %for.cond, !dbg !12968

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i16, i16* %i, align 2, !dbg !12969
  %conv2 = zext i16 %8 to i32, !dbg !12969
  %9 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12971
  %cmd3 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %9, i32 0, i32 2, !dbg !12972
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd3, align 8, !dbg !12972
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %10, i32 0, i32 12, !dbg !12973
  %11 = load i16, i16* %cmd_len, align 4, !dbg !12973
  %conv4 = zext i16 %11 to i32, !dbg !12971
  %cmp = icmp slt i32 %conv2, %conv4, !dbg !12974
  br i1 %cmp, label %for.body, label %for.end, !dbg !12975

for.body:                                         ; preds = %for.cond
  %12 = load i8*, i8** %ptr, align 8, !dbg !12976
  %13 = load i8, i8* %12, align 1, !dbg !12976
  %14 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12976
  %io_port_base6 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %14, i32 0, i32 1, !dbg !12976
  %15 = load i64, i64* %io_port_base6, align 8, !dbg !12976
  %add7 = add i64 %15, 152, !dbg !12976
  %conv8 = trunc i64 %add7 to i32, !dbg !12976
  call void @outb(i8 zeroext %13, i32 %conv8) #11, !dbg !12976
  %16 = load i8*, i8** %ptr, align 8, !dbg !12978
  %incdec.ptr = getelementptr i8, i8* %16, i32 1, !dbg !12978
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !12978
  br label %for.inc, !dbg !12979

for.inc:                                          ; preds = %for.body
  %17 = load i16, i16* %i, align 2, !dbg !12980
  %inc = add i16 %17, 1, !dbg !12980
  store i16 %inc, i16* %i, align 2, !dbg !12980
  br label %for.cond, !dbg !12981, !llvm.loop !12982

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !12984

if.else:                                          ; preds = %do.end
  %18 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12985
  %io_port_base9 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %18, i32 0, i32 1, !dbg !12985
  %19 = load i64, i64* %io_port_base9, align 8, !dbg !12985
  %add10 = add i64 %19, 152, !dbg !12985
  %conv11 = trunc i64 %add10 to i32, !dbg !12985
  call void @outb(i8 zeroext 3, i32 %conv11) #11, !dbg !12985
  %20 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12987
  %active_dcb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %20, i32 0, i32 5, !dbg !12988
  %21 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %active_dcb, align 8, !dbg !12988
  store %struct.DeviceCtlBlk* %21, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12989
  %22 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !12990
  %target_lun = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %22, i32 0, i32 8, !dbg !12990
  %23 = load i8, i8* %target_lun, align 1, !dbg !12990
  %conv12 = zext i8 %23 to i32, !dbg !12990
  %shl = shl i32 %conv12, 5, !dbg !12990
  %conv13 = trunc i32 %shl to i8, !dbg !12990
  %24 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12990
  %io_port_base14 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %24, i32 0, i32 1, !dbg !12990
  %25 = load i64, i64* %io_port_base14, align 8, !dbg !12990
  %add15 = add i64 %25, 152, !dbg !12990
  %conv16 = trunc i64 %add15 to i32, !dbg !12990
  call void @outb(i8 zeroext %conv13, i32 %conv16) #11, !dbg !12990
  %26 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12991
  %io_port_base17 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %26, i32 0, i32 1, !dbg !12991
  %27 = load i64, i64* %io_port_base17, align 8, !dbg !12991
  %add18 = add i64 %27, 152, !dbg !12991
  %conv19 = trunc i64 %add18 to i32, !dbg !12991
  call void @outb(i8 zeroext 0, i32 %conv19) #11, !dbg !12991
  %28 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12992
  %io_port_base20 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %28, i32 0, i32 1, !dbg !12992
  %29 = load i64, i64* %io_port_base20, align 8, !dbg !12992
  %add21 = add i64 %29, 152, !dbg !12992
  %conv22 = trunc i64 %add21 to i32, !dbg !12992
  call void @outb(i8 zeroext 0, i32 %conv22) #11, !dbg !12992
  %30 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12993
  %io_port_base23 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %30, i32 0, i32 1, !dbg !12993
  %31 = load i64, i64* %io_port_base23, align 8, !dbg !12993
  %add24 = add i64 %31, 152, !dbg !12993
  %conv25 = trunc i64 %add24 to i32, !dbg !12993
  call void @outb(i8 zeroext 96, i32 %conv25) #11, !dbg !12993
  %32 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12994
  %io_port_base26 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %32, i32 0, i32 1, !dbg !12994
  %33 = load i64, i64* %io_port_base26, align 8, !dbg !12994
  %add27 = add i64 %33, 152, !dbg !12994
  %conv28 = trunc i64 %add27 to i32, !dbg !12994
  call void @outb(i8 zeroext 0, i32 %conv28) #11, !dbg !12994
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  %34 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !12995
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %34, i32 0, i32 10, !dbg !12996
  %35 = load i16, i16* %state, align 8, !dbg !12997
  %conv29 = zext i16 %35 to i32, !dbg !12997
  %or = or i32 %conv29, 32, !dbg !12997
  %conv30 = trunc i32 %or to i16, !dbg !12997
  store i16 %conv30, i16* %state, align 8, !dbg !12997
  %36 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12998
  %io_port_base31 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %36, i32 0, i32 1, !dbg !12998
  %37 = load i64, i64* %io_port_base31, align 8, !dbg !12998
  %add32 = add i64 %37, 128, !dbg !12998
  %conv33 = trunc i64 %add32 to i32, !dbg !12998
  call void @outw(i16 zeroext 2, i32 %conv33) #11, !dbg !12998
  %38 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !12999
  %io_port_base34 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %38, i32 0, i32 1, !dbg !12999
  %39 = load i64, i64* %io_port_base34, align 8, !dbg !12999
  %add35 = add i64 %39, 144, !dbg !12999
  %conv36 = trunc i64 %add35 to i32, !dbg !12999
  call void @outb(i8 zeroext -64, i32 %conv36) #11, !dbg !12999
  ret void, !dbg !13000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @status_phase1(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb, i16* %pscsi_status) #2 !dbg !13001 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %pscsi_status.addr = alloca i16*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !13002, metadata !DIExpression()), !dbg !13003
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !13004, metadata !DIExpression()), !dbg !13005
  store i16* %pscsi_status, i16** %pscsi_status.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pscsi_status.addr, metadata !13006, metadata !DIExpression()), !dbg !13007
  br label %do.body, !dbg !13008

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13009

do.end:                                           ; preds = %do.body
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13011
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 10, !dbg !13012
  store i16 1024, i16* %state, align 8, !dbg !13013
  %1 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13014
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %1, i32 0, i32 1, !dbg !13014
  %2 = load i64, i64* %io_port_base, align 8, !dbg !13014
  %add = add i64 %2, 128, !dbg !13014
  %conv = trunc i64 %add to i32, !dbg !13014
  call void @outw(i16 zeroext 2, i32 %conv) #11, !dbg !13014
  %3 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13015
  %io_port_base1 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %3, i32 0, i32 1, !dbg !13015
  %4 = load i64, i64* %io_port_base1, align 8, !dbg !13015
  %add2 = add i64 %4, 144, !dbg !13015
  %conv3 = trunc i64 %add2 to i32, !dbg !13015
  call void @outb(i8 zeroext 18, i32 %conv3) #11, !dbg !13015
  ret void, !dbg !13016
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @nop1(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb, i16* %pscsi_status) #2 !dbg !13017 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %pscsi_status.addr = alloca i16*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !13018, metadata !DIExpression()), !dbg !13019
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !13020, metadata !DIExpression()), !dbg !13021
  store i16* %pscsi_status, i16** %pscsi_status.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pscsi_status.addr, metadata !13022, metadata !DIExpression()), !dbg !13023
  ret void, !dbg !13024
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @msgout_phase1(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb, i16* %pscsi_status) #2 !dbg !13025 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %pscsi_status.addr = alloca i16*, align 8
  %i = alloca i16, align 2
  %ptr = alloca i8*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !13026, metadata !DIExpression()), !dbg !13027
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !13028, metadata !DIExpression()), !dbg !13029
  store i16* %pscsi_status, i16** %pscsi_status.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pscsi_status.addr, metadata !13030, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.declare(metadata i16* %i, metadata !13032, metadata !DIExpression()), !dbg !13033
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !13034, metadata !DIExpression()), !dbg !13035
  br label %do.body, !dbg !13036

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13037

do.end:                                           ; preds = %do.body
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13039
  call void @clear_fifo(%struct.AdapterCtlBlk* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.114, i64 0, i64 0)) #11, !dbg !13040
  %1 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13041
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %1, i32 0, i32 10, !dbg !13043
  %2 = load i16, i16* %state, align 8, !dbg !13043
  %conv = zext i16 %2 to i32, !dbg !13041
  %and = and i32 %conv, 4, !dbg !13044
  %tobool = icmp ne i32 %and, 0, !dbg !13044
  br i1 %tobool, label %if.end, label %if.then, !dbg !13045

if.then:                                          ; preds = %do.end
  %3 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13046
  %state1 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %3, i32 0, i32 10, !dbg !13048
  %4 = load i16, i16* %state1, align 8, !dbg !13049
  %conv2 = zext i16 %4 to i32, !dbg !13049
  %or = or i32 %conv2, 4, !dbg !13049
  %conv3 = trunc i32 %or to i16, !dbg !13049
  store i16 %conv3, i16* %state1, align 8, !dbg !13049
  %5 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13050
  %cmd = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %5, i32 0, i32 2, !dbg !13050
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !13050
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.115, i64 0, i64 0), %struct.scsi_cmnd* %6) #12, !dbg !13050
  br label %if.end, !dbg !13051

if.end:                                           ; preds = %if.then, %do.end
  %7 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13052
  %msg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %7, i32 0, i32 15, !dbg !13054
  %8 = load i8, i8* %msg_count, align 8, !dbg !13054
  %tobool4 = icmp ne i8 %8, 0, !dbg !13052
  br i1 %tobool4, label %if.end15, label %if.then5, !dbg !13055

if.then5:                                         ; preds = %if.end
  br label %do.body6, !dbg !13056

do.body6:                                         ; preds = %if.then5
  br label %do.end7, !dbg !13058

do.end7:                                          ; preds = %do.body6
  %9 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13060
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %9, i32 0, i32 1, !dbg !13060
  %10 = load i64, i64* %io_port_base, align 8, !dbg !13060
  %add = add i64 %10, 152, !dbg !13060
  %conv8 = trunc i64 %add to i32, !dbg !13060
  call void @outb(i8 zeroext 8, i32 %conv8) #11, !dbg !13060
  %11 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13061
  %io_port_base9 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %11, i32 0, i32 1, !dbg !13061
  %12 = load i64, i64* %io_port_base9, align 8, !dbg !13061
  %add10 = add i64 %12, 128, !dbg !13061
  %conv11 = trunc i64 %add10 to i32, !dbg !13061
  call void @outw(i16 zeroext 2, i32 %conv11) #11, !dbg !13061
  %13 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13062
  %io_port_base12 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %13, i32 0, i32 1, !dbg !13062
  %14 = load i64, i64* %io_port_base12, align 8, !dbg !13062
  %add13 = add i64 %14, 144, !dbg !13062
  %conv14 = trunc i64 %add13 to i32, !dbg !13062
  call void @outb(i8 zeroext -64, i32 %conv14) #11, !dbg !13062
  br label %return, !dbg !13063

if.end15:                                         ; preds = %if.end
  %15 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13064
  %msgout_buf = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %15, i32 0, i32 12, !dbg !13065
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %msgout_buf, i64 0, i64 0, !dbg !13064
  store i8* %arraydecay, i8** %ptr, align 8, !dbg !13066
  store i16 0, i16* %i, align 2, !dbg !13067
  br label %for.cond, !dbg !13069

for.cond:                                         ; preds = %for.inc, %if.end15
  %16 = load i16, i16* %i, align 2, !dbg !13070
  %conv16 = zext i16 %16 to i32, !dbg !13070
  %17 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13072
  %msg_count17 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %17, i32 0, i32 15, !dbg !13073
  %18 = load i8, i8* %msg_count17, align 8, !dbg !13073
  %conv18 = zext i8 %18 to i32, !dbg !13072
  %cmp = icmp slt i32 %conv16, %conv18, !dbg !13074
  br i1 %cmp, label %for.body, label %for.end, !dbg !13075

for.body:                                         ; preds = %for.cond
  %19 = load i8*, i8** %ptr, align 8, !dbg !13076
  %incdec.ptr = getelementptr i8, i8* %19, i32 1, !dbg !13076
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !13076
  %20 = load i8, i8* %19, align 1, !dbg !13076
  %21 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13076
  %io_port_base20 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %21, i32 0, i32 1, !dbg !13076
  %22 = load i64, i64* %io_port_base20, align 8, !dbg !13076
  %add21 = add i64 %22, 152, !dbg !13076
  %conv22 = trunc i64 %add21 to i32, !dbg !13076
  call void @outb(i8 zeroext %20, i32 %conv22) #11, !dbg !13076
  br label %for.inc, !dbg !13076

for.inc:                                          ; preds = %for.body
  %23 = load i16, i16* %i, align 2, !dbg !13077
  %inc = add i16 %23, 1, !dbg !13077
  store i16 %inc, i16* %i, align 2, !dbg !13077
  br label %for.cond, !dbg !13078, !llvm.loop !13079

for.end:                                          ; preds = %for.cond
  %24 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13081
  %msg_count23 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %24, i32 0, i32 15, !dbg !13082
  store i8 0, i8* %msg_count23, align 8, !dbg !13083
  %25 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13084
  %msgout_buf24 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %25, i32 0, i32 12, !dbg !13086
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %msgout_buf24, i64 0, i64 0, !dbg !13084
  %26 = load i8, i8* %arrayidx, align 8, !dbg !13084
  %conv25 = zext i8 %26 to i32, !dbg !13084
  %cmp26 = icmp eq i32 %conv25, 6, !dbg !13087
  br i1 %cmp26, label %if.then28, label %if.end30, !dbg !13088

if.then28:                                        ; preds = %for.end
  %27 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13089
  %state29 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %27, i32 0, i32 10, !dbg !13090
  store i16 4096, i16* %state29, align 8, !dbg !13091
  br label %if.end30, !dbg !13089

if.end30:                                         ; preds = %if.then28, %for.end
  %28 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13092
  %io_port_base31 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %28, i32 0, i32 1, !dbg !13092
  %29 = load i64, i64* %io_port_base31, align 8, !dbg !13092
  %add32 = add i64 %29, 144, !dbg !13092
  %conv33 = trunc i64 %add32 to i32, !dbg !13092
  call void @outb(i8 zeroext -64, i32 %conv33) #11, !dbg !13092
  br label %return, !dbg !13093

return:                                           ; preds = %if.end30, %do.end7
  ret void, !dbg !13093
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @msgin_phase1(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb, i16* %pscsi_status) #2 !dbg !13094 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %pscsi_status.addr = alloca i16*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !13095, metadata !DIExpression()), !dbg !13096
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !13097, metadata !DIExpression()), !dbg !13098
  store i16* %pscsi_status, i16** %pscsi_status.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pscsi_status.addr, metadata !13099, metadata !DIExpression()), !dbg !13100
  br label %do.body, !dbg !13101

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13102

do.end:                                           ; preds = %do.body
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13104
  call void @clear_fifo(%struct.AdapterCtlBlk* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.116, i64 0, i64 0)) #11, !dbg !13105
  %1 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13106
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %1, i32 0, i32 1, !dbg !13106
  %2 = load i64, i64* %io_port_base, align 8, !dbg !13106
  %add = add i64 %2, 136, !dbg !13106
  %conv = trunc i64 %add to i32, !dbg !13106
  call void @outl(i32 1, i32 %conv) #11, !dbg !13106
  %3 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13107
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %3, i32 0, i32 10, !dbg !13109
  %4 = load i16, i16* %state, align 8, !dbg !13109
  %conv1 = zext i16 %4 to i32, !dbg !13107
  %and = and i32 %conv1, 8, !dbg !13110
  %tobool = icmp ne i32 %and, 0, !dbg !13110
  br i1 %tobool, label %if.end, label %if.then, !dbg !13111

if.then:                                          ; preds = %do.end
  %5 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13112
  %state2 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %5, i32 0, i32 10, !dbg !13114
  %6 = load i16, i16* %state2, align 8, !dbg !13115
  %conv3 = zext i16 %6 to i32, !dbg !13115
  %and4 = and i32 %conv3, -129, !dbg !13115
  %conv5 = trunc i32 %and4 to i16, !dbg !13115
  store i16 %conv5, i16* %state2, align 8, !dbg !13115
  %7 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13116
  %state6 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %7, i32 0, i32 10, !dbg !13117
  %8 = load i16, i16* %state6, align 8, !dbg !13118
  %conv7 = zext i16 %8 to i32, !dbg !13118
  %or = or i32 %conv7, 8, !dbg !13118
  %conv8 = trunc i32 %or to i16, !dbg !13118
  store i16 %conv8, i16* %state6, align 8, !dbg !13118
  br label %if.end, !dbg !13119

if.end:                                           ; preds = %if.then, %do.end
  %9 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13120
  %io_port_base9 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %9, i32 0, i32 1, !dbg !13120
  %10 = load i64, i64* %io_port_base9, align 8, !dbg !13120
  %add10 = add i64 %10, 128, !dbg !13120
  %conv11 = trunc i64 %add10 to i32, !dbg !13120
  call void @outw(i16 zeroext 2, i32 %conv11) #11, !dbg !13120
  %11 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13121
  %io_port_base12 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %11, i32 0, i32 1, !dbg !13121
  %12 = load i64, i64* %io_port_base12, align 8, !dbg !13121
  %add13 = add i64 %12, 144, !dbg !13121
  %conv14 = trunc i64 %add13 to i32, !dbg !13121
  call void @outb(i8 zeroext -62, i32 %conv14) #11, !dbg !13121
  ret void, !dbg !13122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @data_io_transfer(%struct.AdapterCtlBlk* %acb, %struct.ScsiReqBlk* %srb, i16 zeroext %io_dir) #2 !dbg !13123 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %io_dir.addr = alloca i16, align 2
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %bval = alloca i8, align 1
  %dma_status = alloca i8, align 1
  %ln = alloca i32, align 4
  %left_io = alloca i64, align 8
  %virt = alloca i8*, align 8
  %base = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %offset = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy142 = alloca i64, align 8
  %__dummy2143 = alloca i64, align 8
  %tmp146 = alloca i32, align 4
  %data = alloca i8, align 1
  %data2 = alloca i8, align 1
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !13126, metadata !DIExpression()), !dbg !13127
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !13128, metadata !DIExpression()), !dbg !13129
  store i16 %io_dir, i16* %io_dir.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %io_dir.addr, metadata !13130, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !13132, metadata !DIExpression()), !dbg !13133
  %0 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13134
  %dcb1 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %0, i32 0, i32 1, !dbg !13135
  %1 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb1, align 8, !dbg !13135
  store %struct.DeviceCtlBlk* %1, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !13133
  call void @llvm.dbg.declare(metadata i8* %bval, metadata !13136, metadata !DIExpression()), !dbg !13137
  br label %do.body, !dbg !13138

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13139

do.end:                                           ; preds = %do.body
  %2 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13141
  %3 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13143
  %tmp_srb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %3, i32 0, i32 7, !dbg !13144
  %4 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %tmp_srb, align 8, !dbg !13144
  %cmp = icmp eq %struct.ScsiReqBlk* %2, %4, !dbg !13145
  br i1 %cmp, label %if.then, label %if.end, !dbg !13146

if.then:                                          ; preds = %do.end
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.103, i64 0, i64 0)) #12, !dbg !13147
  br label %if.end, !dbg !13147

if.end:                                           ; preds = %if.then, %do.end
  %5 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13148
  %sg_index = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %5, i32 0, i32 6, !dbg !13150
  %6 = load i8, i8* %sg_index, align 1, !dbg !13150
  %conv = zext i8 %6 to i32, !dbg !13148
  %7 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13151
  %sg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %7, i32 0, i32 5, !dbg !13152
  %8 = load i8, i8* %sg_count, align 8, !dbg !13152
  %conv2 = zext i8 %8 to i32, !dbg !13151
  %cmp3 = icmp sge i32 %conv, %conv2, !dbg !13153
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !13154

if.then5:                                         ; preds = %if.end
  br label %if.end245, !dbg !13155

if.end6:                                          ; preds = %if.end
  %9 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13157
  %total_xfer_length = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %9, i32 0, i32 7, !dbg !13159
  %10 = load i64, i64* %total_xfer_length, align 8, !dbg !13159
  %cmp7 = icmp ugt i64 %10, 4, !dbg !13160
  br i1 %cmp7, label %if.then9, label %if.else82, !dbg !13161

if.then9:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i8* %dma_status, metadata !13162, metadata !DIExpression()), !dbg !13164
  %11 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13165
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %11, i32 0, i32 1, !dbg !13165
  %12 = load i64, i64* %io_port_base, align 8, !dbg !13165
  %add = add i64 %12, 163, !dbg !13165
  %conv10 = trunc i64 %add to i32, !dbg !13165
  %call11 = call zeroext i8 @inb(i32 %conv10) #11, !dbg !13165
  store i8 %call11, i8* %dma_status, align 1, !dbg !13164
  %13 = load i8, i8* %dma_status, align 1, !dbg !13166
  %conv12 = zext i8 %13 to i32, !dbg !13166
  %and = and i32 %conv12, 128, !dbg !13168
  %tobool = icmp ne i32 %and, 0, !dbg !13168
  br i1 %tobool, label %if.then13, label %if.end18, !dbg !13169

if.then13:                                        ; preds = %if.then9
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.104, i64 0, i64 0)) #12, !dbg !13170
  %14 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13172
  %15 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !13173
  %16 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13174
  call void @dump_register_info(%struct.AdapterCtlBlk* %14, %struct.DeviceCtlBlk* %15, %struct.ScsiReqBlk* %16) #11, !dbg !13175
  %17 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13176
  %io_port_base15 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %17, i32 0, i32 1, !dbg !13176
  %18 = load i64, i64* %io_port_base15, align 8, !dbg !13176
  %add16 = add i64 %18, 161, !dbg !13176
  %conv17 = trunc i64 %add16 to i32, !dbg !13176
  call void @outb(i8 zeroext 2, i32 %conv17) #11, !dbg !13176
  br label %if.end18, !dbg !13177

if.end18:                                         ; preds = %if.then13, %if.then9
  %19 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13178
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %19, i32 0, i32 10, !dbg !13179
  %20 = load i16, i16* %state, align 8, !dbg !13180
  %conv19 = zext i16 %20 to i32, !dbg !13180
  %or = or i32 %conv19, 256, !dbg !13180
  %conv20 = trunc i32 %or to i16, !dbg !13180
  store i16 %conv20, i16* %state, align 8, !dbg !13180
  %21 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13181
  %io_port_base21 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %21, i32 0, i32 1, !dbg !13181
  %22 = load i64, i64* %io_port_base21, align 8, !dbg !13181
  %add22 = add i64 %22, 180, !dbg !13181
  %conv23 = trunc i64 %add22 to i32, !dbg !13181
  call void @outl(i32 0, i32 %conv23) #11, !dbg !13181
  %23 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13182
  %cmd = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %23, i32 0, i32 2, !dbg !13184
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !13184
  %call24 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %24) #11, !dbg !13185
  %tobool25 = icmp ne i32 %call24, 0, !dbg !13185
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !13186

if.then26:                                        ; preds = %if.end18
  %25 = load i16, i16* %io_dir.addr, align 2, !dbg !13187
  %conv27 = zext i16 %25 to i32, !dbg !13187
  %or28 = or i32 %conv27, 2, !dbg !13187
  %conv29 = trunc i32 %or28 to i16, !dbg !13187
  store i16 %conv29, i16* %io_dir.addr, align 2, !dbg !13187
  %26 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13189
  %sg_bus_addr = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %26, i32 0, i32 4, !dbg !13189
  %27 = load i64, i64* %sg_bus_addr, align 8, !dbg !13189
  %28 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13189
  %sg_index30 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %28, i32 0, i32 6, !dbg !13189
  %29 = load i8, i8* %sg_index30, align 1, !dbg !13189
  %conv31 = zext i8 %29 to i64, !dbg !13189
  %mul = mul i64 8, %conv31, !dbg !13189
  %add32 = add i64 %27, %mul, !dbg !13189
  %conv33 = trunc i64 %add32 to i32, !dbg !13189
  %30 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13189
  %io_port_base34 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %30, i32 0, i32 1, !dbg !13189
  %31 = load i64, i64* %io_port_base34, align 8, !dbg !13189
  %add35 = add i64 %31, 176, !dbg !13189
  %conv36 = trunc i64 %add35 to i32, !dbg !13189
  call void @outl(i32 %conv33, i32 %conv36) #11, !dbg !13189
  %32 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13190
  %sg_count37 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %32, i32 0, i32 5, !dbg !13190
  %33 = load i8, i8* %sg_count37, align 8, !dbg !13190
  %conv38 = zext i8 %33 to i32, !dbg !13190
  %34 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13190
  %sg_index39 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %34, i32 0, i32 6, !dbg !13190
  %35 = load i8, i8* %sg_index39, align 1, !dbg !13190
  %conv40 = zext i8 %35 to i32, !dbg !13190
  %sub = sub i32 %conv38, %conv40, !dbg !13190
  %shl = shl i32 %sub, 3, !dbg !13190
  %36 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13190
  %io_port_base41 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %36, i32 0, i32 1, !dbg !13190
  %37 = load i64, i64* %io_port_base41, align 8, !dbg !13190
  %add42 = add i64 %37, 168, !dbg !13190
  %conv43 = trunc i64 %add42 to i32, !dbg !13190
  call void @outl(i32 %shl, i32 %conv43) #11, !dbg !13190
  br label %if.end55, !dbg !13191

if.else:                                          ; preds = %if.end18
  %38 = load i16, i16* %io_dir.addr, align 2, !dbg !13192
  %conv44 = zext i16 %38 to i32, !dbg !13192
  %and45 = and i32 %conv44, -3, !dbg !13192
  %conv46 = trunc i32 %and45 to i16, !dbg !13192
  store i16 %conv46, i16* %io_dir.addr, align 2, !dbg !13192
  %39 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13194
  %segment_x = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %39, i32 0, i32 3, !dbg !13194
  %40 = load %struct.SGentry*, %struct.SGentry** %segment_x, align 8, !dbg !13194
  %arrayidx = getelementptr %struct.SGentry, %struct.SGentry* %40, i64 0, !dbg !13194
  %address = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx, i32 0, i32 0, !dbg !13194
  %41 = load i32, i32* %address, align 4, !dbg !13194
  %42 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13194
  %io_port_base47 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %42, i32 0, i32 1, !dbg !13194
  %43 = load i64, i64* %io_port_base47, align 8, !dbg !13194
  %add48 = add i64 %43, 176, !dbg !13194
  %conv49 = trunc i64 %add48 to i32, !dbg !13194
  call void @outl(i32 %41, i32 %conv49) #11, !dbg !13194
  %44 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13195
  %segment_x50 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %44, i32 0, i32 3, !dbg !13195
  %45 = load %struct.SGentry*, %struct.SGentry** %segment_x50, align 8, !dbg !13195
  %arrayidx51 = getelementptr %struct.SGentry, %struct.SGentry* %45, i64 0, !dbg !13195
  %length = getelementptr inbounds %struct.SGentry, %struct.SGentry* %arrayidx51, i32 0, i32 1, !dbg !13195
  %46 = load i32, i32* %length, align 4, !dbg !13195
  %47 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13195
  %io_port_base52 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %47, i32 0, i32 1, !dbg !13195
  %48 = load i64, i64* %io_port_base52, align 8, !dbg !13195
  %add53 = add i64 %48, 168, !dbg !13195
  %conv54 = trunc i64 %add53 to i32, !dbg !13195
  call void @outl(i32 %46, i32 %conv54) #11, !dbg !13195
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.then26
  %49 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13196
  %total_xfer_length56 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %49, i32 0, i32 7, !dbg !13196
  %50 = load i64, i64* %total_xfer_length56, align 8, !dbg !13196
  %conv57 = trunc i64 %50 to i32, !dbg !13196
  %51 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13196
  %io_port_base58 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %51, i32 0, i32 1, !dbg !13196
  %52 = load i64, i64* %io_port_base58, align 8, !dbg !13196
  %add59 = add i64 %52, 136, !dbg !13196
  %conv60 = trunc i64 %add59 to i32, !dbg !13196
  call void @outl(i32 %conv57, i32 %conv60) #11, !dbg !13196
  %53 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13197
  %io_port_base61 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %53, i32 0, i32 1, !dbg !13197
  %54 = load i64, i64* %io_port_base61, align 8, !dbg !13197
  %add62 = add i64 %54, 128, !dbg !13197
  %conv63 = trunc i64 %add62 to i32, !dbg !13197
  call void @outw(i16 zeroext 2, i32 %conv63) #11, !dbg !13197
  %55 = load i16, i16* %io_dir.addr, align 2, !dbg !13198
  %conv64 = zext i16 %55 to i32, !dbg !13198
  %and65 = and i32 %conv64, 1, !dbg !13200
  %tobool66 = icmp ne i32 %and65, 0, !dbg !13200
  br i1 %tobool66, label %if.then67, label %if.else74, !dbg !13201

if.then67:                                        ; preds = %if.end55
  %56 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13202
  %io_port_base68 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %56, i32 0, i32 1, !dbg !13202
  %57 = load i64, i64* %io_port_base68, align 8, !dbg !13202
  %add69 = add i64 %57, 144, !dbg !13202
  %conv70 = trunc i64 %add69 to i32, !dbg !13202
  call void @outb(i8 zeroext -61, i32 %conv70) #11, !dbg !13202
  %58 = load i16, i16* %io_dir.addr, align 2, !dbg !13204
  %59 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13204
  %io_port_base71 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %59, i32 0, i32 1, !dbg !13204
  %60 = load i64, i64* %io_port_base71, align 8, !dbg !13204
  %add72 = add i64 %60, 160, !dbg !13204
  %conv73 = trunc i64 %add72 to i32, !dbg !13204
  call void @outw(i16 zeroext %58, i32 %conv73) #11, !dbg !13204
  br label %if.end81, !dbg !13205

if.else74:                                        ; preds = %if.end55
  %61 = load i16, i16* %io_dir.addr, align 2, !dbg !13206
  %62 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13206
  %io_port_base75 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %62, i32 0, i32 1, !dbg !13206
  %63 = load i64, i64* %io_port_base75, align 8, !dbg !13206
  %add76 = add i64 %63, 160, !dbg !13206
  %conv77 = trunc i64 %add76 to i32, !dbg !13206
  call void @outw(i16 zeroext %61, i32 %conv77) #11, !dbg !13206
  %64 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13208
  %io_port_base78 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %64, i32 0, i32 1, !dbg !13208
  %65 = load i64, i64* %io_port_base78, align 8, !dbg !13208
  %add79 = add i64 %65, 144, !dbg !13208
  %conv80 = trunc i64 %add79 to i32, !dbg !13208
  call void @outb(i8 zeroext -63, i32 %conv80) #11, !dbg !13208
  br label %if.end81

if.end81:                                         ; preds = %if.else74, %if.then67
  br label %if.end245, !dbg !13209

if.else82:                                        ; preds = %if.end6
  %66 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13210
  %total_xfer_length83 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %66, i32 0, i32 7, !dbg !13212
  %67 = load i64, i64* %total_xfer_length83, align 8, !dbg !13212
  %cmp84 = icmp ugt i64 %67, 0, !dbg !13213
  br i1 %cmp84, label %if.then86, label %if.else170, !dbg !13214

if.then86:                                        ; preds = %if.else82
  %68 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13215
  %state87 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %68, i32 0, i32 10, !dbg !13217
  %69 = load i16, i16* %state87, align 8, !dbg !13218
  %conv88 = zext i16 %69 to i32, !dbg !13218
  %or89 = or i32 %conv88, 256, !dbg !13218
  %conv90 = trunc i32 %or89 to i16, !dbg !13218
  store i16 %conv90, i16* %state87, align 8, !dbg !13218
  %70 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13219
  %total_xfer_length91 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %70, i32 0, i32 7, !dbg !13219
  %71 = load i64, i64* %total_xfer_length91, align 8, !dbg !13219
  %conv92 = trunc i64 %71 to i32, !dbg !13219
  %72 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13219
  %io_port_base93 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %72, i32 0, i32 1, !dbg !13219
  %73 = load i64, i64* %io_port_base93, align 8, !dbg !13219
  %add94 = add i64 %73, 136, !dbg !13219
  %conv95 = trunc i64 %add94 to i32, !dbg !13219
  call void @outl(i32 %conv92, i32 %conv95) #11, !dbg !13219
  %74 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13220
  %io_port_base96 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %74, i32 0, i32 1, !dbg !13220
  %75 = load i64, i64* %io_port_base96, align 8, !dbg !13220
  %add97 = add i64 %75, 128, !dbg !13220
  %conv98 = trunc i64 %add97 to i32, !dbg !13220
  call void @outw(i16 zeroext 2, i32 %conv98) #11, !dbg !13220
  %76 = load i16, i16* %io_dir.addr, align 2, !dbg !13221
  %conv99 = zext i16 %76 to i32, !dbg !13221
  %and100 = and i32 %conv99, 1, !dbg !13223
  %tobool101 = icmp ne i32 %and100, 0, !dbg !13223
  br i1 %tobool101, label %if.then102, label %if.else106, !dbg !13224

if.then102:                                       ; preds = %if.then86
  %77 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13225
  %io_port_base103 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %77, i32 0, i32 1, !dbg !13225
  %78 = load i64, i64* %io_port_base103, align 8, !dbg !13225
  %add104 = add i64 %78, 144, !dbg !13225
  %conv105 = trunc i64 %add104 to i32, !dbg !13225
  call void @outb(i8 zeroext -62, i32 %conv105) #11, !dbg !13225
  br label %if.end169, !dbg !13227

if.else106:                                       ; preds = %if.then86
  call void @llvm.dbg.declare(metadata i32* %ln, metadata !13228, metadata !DIExpression()), !dbg !13230
  %79 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13231
  %total_xfer_length107 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %79, i32 0, i32 7, !dbg !13232
  %80 = load i64, i64* %total_xfer_length107, align 8, !dbg !13232
  %conv108 = trunc i64 %80 to i32, !dbg !13231
  store i32 %conv108, i32* %ln, align 4, !dbg !13230
  call void @llvm.dbg.declare(metadata i64* %left_io, metadata !13233, metadata !DIExpression()), !dbg !13234
  %81 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13235
  %total_xfer_length109 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %81, i32 0, i32 7, !dbg !13236
  %82 = load i64, i64* %total_xfer_length109, align 8, !dbg !13236
  store i64 %82, i64* %left_io, align 8, !dbg !13234
  %83 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13237
  %dcb110 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %83, i32 0, i32 1, !dbg !13239
  %84 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb110, align 8, !dbg !13239
  %sync_period = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %84, i32 0, i32 14, !dbg !13240
  %85 = load i8, i8* %sync_period, align 1, !dbg !13240
  %conv111 = zext i8 %85 to i32, !dbg !13237
  %and112 = and i32 %conv111, 16, !dbg !13241
  %tobool113 = icmp ne i32 %and112, 0, !dbg !13241
  br i1 %tobool113, label %if.then114, label %if.end118, !dbg !13242

if.then114:                                       ; preds = %if.else106
  %86 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13243
  %io_port_base115 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %86, i32 0, i32 1, !dbg !13243
  %87 = load i64, i64* %io_port_base115, align 8, !dbg !13243
  %add116 = add i64 %87, 143, !dbg !13243
  %conv117 = trunc i64 %add116 to i32, !dbg !13243
  call void @outb(i8 zeroext 2, i32 %conv117) #11, !dbg !13243
  br label %if.end118, !dbg !13243

if.end118:                                        ; preds = %if.then114, %if.else106
  br label %while.cond, !dbg !13244

while.cond:                                       ; preds = %do.end148, %if.end118
  %88 = load i64, i64* %left_io, align 8, !dbg !13245
  %tobool119 = icmp ne i64 %88, 0, !dbg !13244
  br i1 %tobool119, label %while.body, label %while.end149, !dbg !13244

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %virt, metadata !13246, metadata !DIExpression()), !dbg !13248
  call void @llvm.dbg.declare(metadata i8** %base, metadata !13249, metadata !DIExpression()), !dbg !13250
  store i8* null, i8** %base, align 8, !dbg !13250
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13251, metadata !DIExpression()), !dbg !13252
  store i64 0, i64* %flags, align 8, !dbg !13252
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13253, metadata !DIExpression()), !dbg !13254
  %89 = load i64, i64* %left_io, align 8, !dbg !13255
  store i64 %89, i64* %len, align 8, !dbg !13254
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !13256, metadata !DIExpression()), !dbg !13257
  %90 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13258
  %request_length = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %90, i32 0, i32 8, !dbg !13259
  %91 = load i64, i64* %request_length, align 8, !dbg !13259
  %92 = load i64, i64* %left_io, align 8, !dbg !13260
  %sub120 = sub i64 %91, %92, !dbg !13261
  store i64 %sub120, i64* %offset, align 8, !dbg !13257
  br label %do.body121, !dbg !13262

do.body121:                                       ; preds = %while.body
  br label %do.body122, !dbg !13263

do.body122:                                       ; preds = %do.body121
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13265, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13269, metadata !DIExpression()), !dbg !13268
  %cmp123 = icmp eq i64* %__dummy, %__dummy2, !dbg !13268
  %conv124 = zext i1 %cmp123 to i32, !dbg !13268
  store i32 1, i32* %tmp, align 4, !dbg !13268
  %93 = load i32, i32* %tmp, align 4, !dbg !13268
  %call125 = call i64 @arch_local_irq_save() #11, !dbg !13270
  store i64 %call125, i64* %flags, align 8, !dbg !13270
  br label %do.end126, !dbg !13270

do.end126:                                        ; preds = %do.body122
  br label %do.end127, !dbg !13263

do.end127:                                        ; preds = %do.end126
  %94 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13271
  %cmd128 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %94, i32 0, i32 2, !dbg !13272
  %95 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd128, align 8, !dbg !13272
  %call129 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %95) #11, !dbg !13273
  %96 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13274
  %sg_count130 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %96, i32 0, i32 5, !dbg !13275
  %97 = load i8, i8* %sg_count130, align 8, !dbg !13275
  %conv131 = zext i8 %97 to i32, !dbg !13274
  %call132 = call i8* @scsi_kmap_atomic_sg(%struct.scatterlist* %call129, i32 %conv131, i64* %offset, i64* %len) #11, !dbg !13276
  store i8* %call132, i8** %base, align 8, !dbg !13277
  %98 = load i8*, i8** %base, align 8, !dbg !13278
  %99 = load i64, i64* %offset, align 8, !dbg !13279
  %add.ptr = getelementptr i8, i8* %98, i64 %99, !dbg !13280
  store i8* %add.ptr, i8** %virt, align 8, !dbg !13281
  %100 = load i64, i64* %len, align 8, !dbg !13282
  %101 = load i64, i64* %left_io, align 8, !dbg !13283
  %sub133 = sub i64 %101, %100, !dbg !13283
  store i64 %sub133, i64* %left_io, align 8, !dbg !13283
  br label %while.cond134, !dbg !13284

while.cond134:                                    ; preds = %while.body136, %do.end127
  %102 = load i64, i64* %len, align 8, !dbg !13285
  %dec = add i64 %102, -1, !dbg !13285
  store i64 %dec, i64* %len, align 8, !dbg !13285
  %tobool135 = icmp ne i64 %102, 0, !dbg !13284
  br i1 %tobool135, label %while.body136, label %while.end, !dbg !13284

while.body136:                                    ; preds = %while.cond134
  %103 = load i8*, i8** %virt, align 8, !dbg !13286
  %incdec.ptr = getelementptr i8, i8* %103, i32 1, !dbg !13286
  store i8* %incdec.ptr, i8** %virt, align 8, !dbg !13286
  %104 = load i8, i8* %103, align 1, !dbg !13286
  %105 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13286
  %io_port_base137 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %105, i32 0, i32 1, !dbg !13286
  %106 = load i64, i64* %io_port_base137, align 8, !dbg !13286
  %add138 = add i64 %106, 152, !dbg !13286
  %conv139 = trunc i64 %add138 to i32, !dbg !13286
  call void @outb(i8 zeroext %104, i32 %conv139) #11, !dbg !13286
  %107 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13288
  call void @sg_subtract_one(%struct.ScsiReqBlk* %107) #11, !dbg !13289
  br label %while.cond134, !dbg !13284, !llvm.loop !13290

while.end:                                        ; preds = %while.cond134
  %108 = load i8*, i8** %base, align 8, !dbg !13292
  call void @scsi_kunmap_atomic_sg(i8* %108) #11, !dbg !13293
  br label %do.body140, !dbg !13294

do.body140:                                       ; preds = %while.end
  br label %do.body141, !dbg !13295

do.body141:                                       ; preds = %do.body140
  call void @llvm.dbg.declare(metadata i64* %__dummy142, metadata !13297, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.declare(metadata i64* %__dummy2143, metadata !13301, metadata !DIExpression()), !dbg !13300
  %cmp144 = icmp eq i64* %__dummy142, %__dummy2143, !dbg !13300
  %conv145 = zext i1 %cmp144 to i32, !dbg !13300
  store i32 1, i32* %tmp146, align 4, !dbg !13300
  %109 = load i32, i32* %tmp146, align 4, !dbg !13300
  %110 = load i64, i64* %flags, align 8, !dbg !13302
  call void @arch_local_irq_restore(i64 %110) #11, !dbg !13302
  br label %do.end147, !dbg !13302

do.end147:                                        ; preds = %do.body141
  br label %do.end148, !dbg !13295

do.end148:                                        ; preds = %do.end147
  br label %while.cond, !dbg !13244, !llvm.loop !13303

while.end149:                                     ; preds = %while.cond
  %111 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13305
  %dcb150 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %111, i32 0, i32 1, !dbg !13307
  %112 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb150, align 8, !dbg !13307
  %sync_period151 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %112, i32 0, i32 14, !dbg !13308
  %113 = load i8, i8* %sync_period151, align 1, !dbg !13308
  %conv152 = zext i8 %113 to i32, !dbg !13305
  %and153 = and i32 %conv152, 16, !dbg !13309
  %tobool154 = icmp ne i32 %and153, 0, !dbg !13309
  br i1 %tobool154, label %if.then155, label %if.end165, !dbg !13310

if.then155:                                       ; preds = %while.end149
  %114 = load i32, i32* %ln, align 4, !dbg !13311
  %rem = srem i32 %114, 2, !dbg !13314
  %tobool156 = icmp ne i32 %rem, 0, !dbg !13314
  br i1 %tobool156, label %if.then157, label %if.end161, !dbg !13315

if.then157:                                       ; preds = %if.then155
  %115 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13316
  %io_port_base158 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %115, i32 0, i32 1, !dbg !13316
  %116 = load i64, i64* %io_port_base158, align 8, !dbg !13316
  %add159 = add i64 %116, 152, !dbg !13316
  %conv160 = trunc i64 %add159 to i32, !dbg !13316
  call void @outb(i8 zeroext 0, i32 %conv160) #11, !dbg !13316
  br label %if.end161, !dbg !13318

if.end161:                                        ; preds = %if.then157, %if.then155
  %117 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13319
  %io_port_base162 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %117, i32 0, i32 1, !dbg !13319
  %118 = load i64, i64* %io_port_base162, align 8, !dbg !13319
  %add163 = add i64 %118, 143, !dbg !13319
  %conv164 = trunc i64 %add163 to i32, !dbg !13319
  call void @outb(i8 zeroext 0, i32 %conv164) #11, !dbg !13319
  br label %if.end165, !dbg !13320

if.end165:                                        ; preds = %if.end161, %while.end149
  %119 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13321
  %io_port_base166 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %119, i32 0, i32 1, !dbg !13321
  %120 = load i64, i64* %io_port_base166, align 8, !dbg !13321
  %add167 = add i64 %120, 144, !dbg !13321
  %conv168 = trunc i64 %add167 to i32, !dbg !13321
  call void @outb(i8 zeroext -64, i32 %conv168) #11, !dbg !13321
  br label %if.end169

if.end169:                                        ; preds = %if.end165, %if.then102
  br label %if.end244, !dbg !13322

if.else170:                                       ; preds = %if.else82
  call void @llvm.dbg.declare(metadata i8* %data, metadata !13323, metadata !DIExpression()), !dbg !13325
  store i8 0, i8* %data, align 1, !dbg !13325
  call void @llvm.dbg.declare(metadata i8* %data2, metadata !13326, metadata !DIExpression()), !dbg !13327
  store i8 0, i8* %data2, align 1, !dbg !13327
  %121 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13328
  %sg_count171 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %121, i32 0, i32 5, !dbg !13330
  %122 = load i8, i8* %sg_count171, align 8, !dbg !13330
  %tobool172 = icmp ne i8 %122, 0, !dbg !13328
  br i1 %tobool172, label %if.then173, label %if.end177, !dbg !13331

if.then173:                                       ; preds = %if.else170
  %123 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13332
  %adapter_status = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %123, i32 0, i32 13, !dbg !13334
  store i8 18, i8* %adapter_status, align 2, !dbg !13335
  %124 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13336
  %status = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %124, i32 0, i32 18, !dbg !13337
  %125 = load i8, i8* %status, align 1, !dbg !13338
  %conv174 = zext i8 %125 to i32, !dbg !13338
  %or175 = or i32 %conv174, 4, !dbg !13338
  %conv176 = trunc i32 %or175 to i8, !dbg !13338
  store i8 %conv176, i8* %status, align 1, !dbg !13338
  br label %if.end177, !dbg !13339

if.end177:                                        ; preds = %if.then173, %if.else170
  %126 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !13340
  %sync_period178 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %126, i32 0, i32 14, !dbg !13342
  %127 = load i8, i8* %sync_period178, align 1, !dbg !13342
  %conv179 = zext i8 %127 to i32, !dbg !13340
  %and180 = and i32 %conv179, 16, !dbg !13343
  %tobool181 = icmp ne i32 %and180, 0, !dbg !13343
  br i1 %tobool181, label %if.then182, label %if.else212, !dbg !13344

if.then182:                                       ; preds = %if.end177
  %128 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13345
  %io_port_base183 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %128, i32 0, i32 1, !dbg !13345
  %129 = load i64, i64* %io_port_base183, align 8, !dbg !13345
  %add184 = add i64 %129, 136, !dbg !13345
  %conv185 = trunc i64 %add184 to i32, !dbg !13345
  call void @outl(i32 2, i32 %conv185) #11, !dbg !13345
  %130 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13347
  %io_port_base186 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %130, i32 0, i32 1, !dbg !13347
  %131 = load i64, i64* %io_port_base186, align 8, !dbg !13347
  %add187 = add i64 %131, 143, !dbg !13347
  %conv188 = trunc i64 %add187 to i32, !dbg !13347
  call void @outb(i8 zeroext 2, i32 %conv188) #11, !dbg !13347
  %132 = load i16, i16* %io_dir.addr, align 2, !dbg !13348
  %conv189 = zext i16 %132 to i32, !dbg !13348
  %and190 = and i32 %conv189, 1, !dbg !13350
  %tobool191 = icmp ne i32 %and190, 0, !dbg !13350
  br i1 %tobool191, label %if.then192, label %if.else201, !dbg !13351

if.then192:                                       ; preds = %if.then182
  %133 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13352
  %io_port_base193 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %133, i32 0, i32 1, !dbg !13352
  %134 = load i64, i64* %io_port_base193, align 8, !dbg !13352
  %add194 = add i64 %134, 152, !dbg !13352
  %conv195 = trunc i64 %add194 to i32, !dbg !13352
  %call196 = call zeroext i8 @inb(i32 %conv195) #11, !dbg !13352
  store i8 %call196, i8* %data, align 1, !dbg !13354
  %135 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13355
  %io_port_base197 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %135, i32 0, i32 1, !dbg !13355
  %136 = load i64, i64* %io_port_base197, align 8, !dbg !13355
  %add198 = add i64 %136, 152, !dbg !13355
  %conv199 = trunc i64 %add198 to i32, !dbg !13355
  %call200 = call zeroext i8 @inb(i32 %conv199) #11, !dbg !13355
  store i8 %call200, i8* %data2, align 1, !dbg !13356
  br label %if.end208, !dbg !13357

if.else201:                                       ; preds = %if.then182
  %137 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13358
  %io_port_base202 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %137, i32 0, i32 1, !dbg !13358
  %138 = load i64, i64* %io_port_base202, align 8, !dbg !13358
  %add203 = add i64 %138, 152, !dbg !13358
  %conv204 = trunc i64 %add203 to i32, !dbg !13358
  call void @outb(i8 zeroext 75, i32 %conv204) #11, !dbg !13358
  %139 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13360
  %io_port_base205 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %139, i32 0, i32 1, !dbg !13360
  %140 = load i64, i64* %io_port_base205, align 8, !dbg !13360
  %add206 = add i64 %140, 152, !dbg !13360
  %conv207 = trunc i64 %add206 to i32, !dbg !13360
  call void @outb(i8 zeroext 71, i32 %conv207) #11, !dbg !13360
  br label %if.end208

if.end208:                                        ; preds = %if.else201, %if.then192
  %141 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13361
  %io_port_base209 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %141, i32 0, i32 1, !dbg !13361
  %142 = load i64, i64* %io_port_base209, align 8, !dbg !13361
  %add210 = add i64 %142, 143, !dbg !13361
  %conv211 = trunc i64 %add210 to i32, !dbg !13361
  call void @outb(i8 zeroext 0, i32 %conv211) #11, !dbg !13361
  br label %if.end229, !dbg !13362

if.else212:                                       ; preds = %if.end177
  %143 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13363
  %io_port_base213 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %143, i32 0, i32 1, !dbg !13363
  %144 = load i64, i64* %io_port_base213, align 8, !dbg !13363
  %add214 = add i64 %144, 136, !dbg !13363
  %conv215 = trunc i64 %add214 to i32, !dbg !13363
  call void @outl(i32 1, i32 %conv215) #11, !dbg !13363
  %145 = load i16, i16* %io_dir.addr, align 2, !dbg !13365
  %conv216 = zext i16 %145 to i32, !dbg !13365
  %and217 = and i32 %conv216, 1, !dbg !13367
  %tobool218 = icmp ne i32 %and217, 0, !dbg !13367
  br i1 %tobool218, label %if.then219, label %if.else224, !dbg !13368

if.then219:                                       ; preds = %if.else212
  %146 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13369
  %io_port_base220 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %146, i32 0, i32 1, !dbg !13369
  %147 = load i64, i64* %io_port_base220, align 8, !dbg !13369
  %add221 = add i64 %147, 152, !dbg !13369
  %conv222 = trunc i64 %add221 to i32, !dbg !13369
  %call223 = call zeroext i8 @inb(i32 %conv222) #11, !dbg !13369
  store i8 %call223, i8* %data, align 1, !dbg !13370
  br label %if.end228, !dbg !13371

if.else224:                                       ; preds = %if.else212
  %148 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13372
  %io_port_base225 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %148, i32 0, i32 1, !dbg !13372
  %149 = load i64, i64* %io_port_base225, align 8, !dbg !13372
  %add226 = add i64 %149, 152, !dbg !13372
  %conv227 = trunc i64 %add226 to i32, !dbg !13372
  call void @outb(i8 zeroext 75, i32 %conv227) #11, !dbg !13372
  br label %if.end228

if.end228:                                        ; preds = %if.else224, %if.then219
  br label %if.end229

if.end229:                                        ; preds = %if.end228, %if.end208
  %150 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13373
  %state230 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %150, i32 0, i32 10, !dbg !13374
  %151 = load i16, i16* %state230, align 8, !dbg !13375
  %conv231 = zext i16 %151 to i32, !dbg !13375
  %or232 = or i32 %conv231, 512, !dbg !13375
  %conv233 = trunc i32 %or232 to i16, !dbg !13375
  store i16 %conv233, i16* %state230, align 8, !dbg !13375
  %152 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13376
  %io_port_base234 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %152, i32 0, i32 1, !dbg !13376
  %153 = load i64, i64* %io_port_base234, align 8, !dbg !13376
  %add235 = add i64 %153, 128, !dbg !13376
  %conv236 = trunc i64 %add235 to i32, !dbg !13376
  call void @outw(i16 zeroext 2, i32 %conv236) #11, !dbg !13376
  %154 = load i16, i16* %io_dir.addr, align 2, !dbg !13377
  %conv237 = zext i16 %154 to i32, !dbg !13377
  %and238 = and i32 %conv237, 1, !dbg !13378
  %tobool239 = icmp ne i32 %and238, 0, !dbg !13379
  %155 = zext i1 %tobool239 to i64, !dbg !13379
  %cond = select i1 %tobool239, i32 194, i32 192, !dbg !13379
  %conv240 = trunc i32 %cond to i8, !dbg !13379
  store i8 %conv240, i8* %bval, align 1, !dbg !13380
  %156 = load i8, i8* %bval, align 1, !dbg !13381
  %157 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13381
  %io_port_base241 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %157, i32 0, i32 1, !dbg !13381
  %158 = load i64, i64* %io_port_base241, align 8, !dbg !13381
  %add242 = add i64 %158, 144, !dbg !13381
  %conv243 = trunc i64 %add242 to i32, !dbg !13381
  call void @outb(i8 zeroext %156, i32 %conv243) #11, !dbg !13381
  br label %if.end244

if.end244:                                        ; preds = %if.end229, %if.end169
  br label %if.end245

if.end245:                                        ; preds = %if.then5, %if.end244, %if.end81
  ret void, !dbg !13382
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dump_register_info(%struct.AdapterCtlBlk* %acb, %struct.DeviceCtlBlk* %dcb, %struct.ScsiReqBlk* %srb) #2 !dbg !13383 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb.addr = alloca %struct.DeviceCtlBlk*, align 8
  %srb.addr = alloca %struct.ScsiReqBlk*, align 8
  %pstat = alloca i16, align 2
  %dev = alloca %struct.pci_dev*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !13384, metadata !DIExpression()), !dbg !13385
  store %struct.DeviceCtlBlk* %dcb, %struct.DeviceCtlBlk** %dcb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb.addr, metadata !13386, metadata !DIExpression()), !dbg !13387
  store %struct.ScsiReqBlk* %srb, %struct.ScsiReqBlk** %srb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScsiReqBlk** %srb.addr, metadata !13388, metadata !DIExpression()), !dbg !13389
  call void @llvm.dbg.declare(metadata i16* %pstat, metadata !13390, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !13392, metadata !DIExpression()), !dbg !13393
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13394
  %dev1 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 23, !dbg !13395
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev1, align 8, !dbg !13395
  store %struct.pci_dev* %1, %struct.pci_dev** %dev, align 8, !dbg !13393
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !13396
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %2, i32 6, i16* %pstat) #11, !dbg !13397
  %3 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !13398
  %tobool = icmp ne %struct.DeviceCtlBlk* %3, null, !dbg !13398
  br i1 %tobool, label %if.end, label %if.then, !dbg !13400

if.then:                                          ; preds = %entry
  %4 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13401
  %active_dcb = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %4, i32 0, i32 5, !dbg !13402
  %5 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %active_dcb, align 8, !dbg !13402
  store %struct.DeviceCtlBlk* %5, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !13403
  br label %if.end, !dbg !13404

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13405
  %tobool2 = icmp ne %struct.ScsiReqBlk* %6, null, !dbg !13405
  br i1 %tobool2, label %if.end5, label %land.lhs.true, !dbg !13407

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !13408
  %tobool3 = icmp ne %struct.DeviceCtlBlk* %7, null, !dbg !13408
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !13409

if.then4:                                         ; preds = %land.lhs.true
  %8 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb.addr, align 8, !dbg !13410
  %active_srb = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %8, i32 0, i32 4, !dbg !13411
  %9 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %active_srb, align 8, !dbg !13411
  store %struct.ScsiReqBlk* %9, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13412
  br label %if.end5, !dbg !13413

if.end5:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %10 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13414
  %tobool6 = icmp ne %struct.ScsiReqBlk* %10, null, !dbg !13414
  br i1 %tobool6, label %if.then7, label %if.end30, !dbg !13416

if.then7:                                         ; preds = %if.end5
  %11 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13417
  %cmd = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %11, i32 0, i32 2, !dbg !13420
  %12 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !13420
  %tobool8 = icmp ne %struct.scsi_cmnd* %12, null, !dbg !13417
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !13421

if.then9:                                         ; preds = %if.then7
  %13 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13422
  %14 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13422
  %cmd10 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %14, i32 0, i32 2, !dbg !13422
  %15 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd10, align 8, !dbg !13422
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.105, i64 0, i64 0), %struct.ScsiReqBlk* %13, %struct.scsi_cmnd* %15) #12, !dbg !13422
  br label %if.end20, !dbg !13422

if.else:                                          ; preds = %if.then7
  %16 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13423
  %17 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13423
  %cmd12 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %17, i32 0, i32 2, !dbg !13423
  %18 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd12, align 8, !dbg !13423
  %19 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13423
  %cmd13 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %19, i32 0, i32 2, !dbg !13423
  %20 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd13, align 8, !dbg !13423
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %20, i32 0, i32 14, !dbg !13423
  %21 = load i8*, i8** %cmnd, align 8, !dbg !13423
  %arrayidx = getelementptr i8, i8* %21, i64 0, !dbg !13423
  %22 = load i8, i8* %arrayidx, align 1, !dbg !13423
  %conv = zext i8 %22 to i32, !dbg !13423
  %23 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13423
  %cmd14 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %23, i32 0, i32 2, !dbg !13423
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd14, align 8, !dbg !13423
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %24, i32 0, i32 1, !dbg !13423
  %25 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !13423
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %25, i32 0, i32 16, !dbg !13423
  %26 = load i32, i32* %id, align 8, !dbg !13423
  %27 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13423
  %cmd15 = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %27, i32 0, i32 2, !dbg !13423
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd15, align 8, !dbg !13423
  %device16 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %28, i32 0, i32 1, !dbg !13423
  %29 = load %struct.scsi_device*, %struct.scsi_device** %device16, align 8, !dbg !13423
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %29, i32 0, i32 18, !dbg !13423
  %30 = load i64, i64* %lun, align 8, !dbg !13423
  %conv17 = trunc i64 %30 to i8, !dbg !13423
  %conv18 = zext i8 %conv17 to i32, !dbg !13423
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.106, i64 0, i64 0), %struct.ScsiReqBlk* %16, %struct.scsi_cmnd* %18, i32 %conv, i32 %26, i32 %conv18) #12, !dbg !13423
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then9
  %31 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13424
  %segment_x = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %31, i32 0, i32 3, !dbg !13425
  %32 = load %struct.SGentry*, %struct.SGentry** %segment_x, align 8, !dbg !13425
  %33 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13426
  %sg_count = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %33, i32 0, i32 5, !dbg !13427
  %34 = load i8, i8* %sg_count, align 8, !dbg !13427
  %conv21 = zext i8 %34 to i32, !dbg !13426
  %35 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13428
  %sg_index = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %35, i32 0, i32 6, !dbg !13429
  %36 = load i8, i8* %sg_index, align 1, !dbg !13429
  %conv22 = zext i8 %36 to i32, !dbg !13428
  %37 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13430
  %total_xfer_length = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %37, i32 0, i32 7, !dbg !13431
  %38 = load i64, i64* %total_xfer_length, align 8, !dbg !13431
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.107, i64 0, i64 0), %struct.SGentry* %32, i32 %conv21, i32 %conv22, i64 %38) #12, !dbg !13432
  %39 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13433
  %state = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %39, i32 0, i32 10, !dbg !13434
  %40 = load i16, i16* %state, align 8, !dbg !13434
  %conv24 = zext i16 %40 to i32, !dbg !13433
  %41 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13435
  %status = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %41, i32 0, i32 18, !dbg !13436
  %42 = load i8, i8* %status, align 1, !dbg !13436
  %conv25 = zext i8 %42 to i32, !dbg !13435
  %43 = load %struct.ScsiReqBlk*, %struct.ScsiReqBlk** %srb.addr, align 8, !dbg !13437
  %scsi_phase = getelementptr inbounds %struct.ScsiReqBlk, %struct.ScsiReqBlk* %43, i32 0, i32 21, !dbg !13438
  %44 = load i8, i8* %scsi_phase, align 2, !dbg !13438
  %conv26 = zext i8 %44 to i32, !dbg !13437
  %45 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13439
  %active_dcb27 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %45, i32 0, i32 5, !dbg !13440
  %46 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %active_dcb27, align 8, !dbg !13440
  %tobool28 = icmp ne %struct.DeviceCtlBlk* %46, null, !dbg !13441
  %47 = zext i1 %tobool28 to i64, !dbg !13441
  %cond = select i1 %tobool28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i64 0, i64 0), !dbg !13441
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.108, i64 0, i64 0), i32 %conv24, i32 %conv25, i32 %conv26, i8* %cond) #12, !dbg !13442
  br label %if.end30, !dbg !13443

if.end30:                                         ; preds = %if.end20, %if.end5
  %48 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13444
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %48, i32 0, i32 1, !dbg !13444
  %49 = load i64, i64* %io_port_base, align 8, !dbg !13444
  %add = add i64 %49, 128, !dbg !13444
  %conv31 = trunc i64 %add to i32, !dbg !13444
  %call32 = call zeroext i16 @inw(i32 %conv31) #11, !dbg !13444
  %conv33 = zext i16 %call32 to i32, !dbg !13444
  %50 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13444
  %io_port_base34 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %50, i32 0, i32 1, !dbg !13444
  %51 = load i64, i64* %io_port_base34, align 8, !dbg !13444
  %add35 = add i64 %51, 130, !dbg !13444
  %conv36 = trunc i64 %add35 to i32, !dbg !13444
  %call37 = call zeroext i8 @inb(i32 %conv36) #11, !dbg !13444
  %conv38 = zext i8 %call37 to i32, !dbg !13444
  %52 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13444
  %io_port_base39 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %52, i32 0, i32 1, !dbg !13444
  %53 = load i64, i64* %io_port_base39, align 8, !dbg !13444
  %add40 = add i64 %53, 131, !dbg !13444
  %conv41 = trunc i64 %add40 to i32, !dbg !13444
  %call42 = call zeroext i8 @inb(i32 %conv41) #11, !dbg !13444
  %conv43 = zext i8 %call42 to i32, !dbg !13444
  %54 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13444
  %io_port_base44 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %54, i32 0, i32 1, !dbg !13444
  %55 = load i64, i64* %io_port_base44, align 8, !dbg !13444
  %add45 = add i64 %55, 132, !dbg !13444
  %conv46 = trunc i64 %add45 to i32, !dbg !13444
  %call47 = call zeroext i8 @inb(i32 %conv46) #11, !dbg !13444
  %conv48 = zext i8 %call47 to i32, !dbg !13444
  %56 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13444
  %io_port_base49 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %56, i32 0, i32 1, !dbg !13444
  %57 = load i64, i64* %io_port_base49, align 8, !dbg !13444
  %add50 = add i64 %57, 133, !dbg !13444
  %conv51 = trunc i64 %add50 to i32, !dbg !13444
  %call52 = call zeroext i8 @inb(i32 %conv51) #11, !dbg !13444
  %conv53 = zext i8 %call52 to i32, !dbg !13444
  %58 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13444
  %io_port_base54 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %58, i32 0, i32 1, !dbg !13444
  %59 = load i64, i64* %io_port_base54, align 8, !dbg !13444
  %add55 = add i64 %59, 134, !dbg !13444
  %conv56 = trunc i64 %add55 to i32, !dbg !13444
  %call57 = call zeroext i8 @inb(i32 %conv56) #11, !dbg !13444
  %conv58 = zext i8 %call57 to i32, !dbg !13444
  %60 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13444
  %io_port_base59 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %60, i32 0, i32 1, !dbg !13444
  %61 = load i64, i64* %io_port_base59, align 8, !dbg !13444
  %add60 = add i64 %61, 135, !dbg !13444
  %conv61 = trunc i64 %add60 to i32, !dbg !13444
  %call62 = call zeroext i8 @inb(i32 %conv61) #11, !dbg !13444
  %conv63 = zext i8 %call62 to i32, !dbg !13444
  %62 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13444
  %io_port_base64 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %62, i32 0, i32 1, !dbg !13444
  %63 = load i64, i64* %io_port_base64, align 8, !dbg !13444
  %add65 = add i64 %63, 136, !dbg !13444
  %conv66 = trunc i64 %add65 to i32, !dbg !13444
  %call67 = call i32 @inl(i32 %conv66) #11, !dbg !13444
  %64 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13444
  %io_port_base68 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %64, i32 0, i32 1, !dbg !13444
  %65 = load i64, i64* %io_port_base68, align 8, !dbg !13444
  %add69 = add i64 %65, 140, !dbg !13444
  %conv70 = trunc i64 %add69 to i32, !dbg !13444
  %call71 = call zeroext i8 @inb(i32 %conv70) #11, !dbg !13444
  %conv72 = zext i8 %call71 to i32, !dbg !13444
  %66 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13444
  %io_port_base73 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %66, i32 0, i32 1, !dbg !13444
  %67 = load i64, i64* %io_port_base73, align 8, !dbg !13444
  %add74 = add i64 %67, 141, !dbg !13444
  %conv75 = trunc i64 %add74 to i32, !dbg !13444
  %call76 = call zeroext i16 @inw(i32 %conv75) #11, !dbg !13444
  %conv77 = zext i16 %call76 to i32, !dbg !13444
  %68 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13444
  %io_port_base78 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %68, i32 0, i32 1, !dbg !13444
  %69 = load i64, i64* %io_port_base78, align 8, !dbg !13444
  %add79 = add i64 %69, 143, !dbg !13444
  %conv80 = trunc i64 %add79 to i32, !dbg !13444
  %call81 = call zeroext i8 @inb(i32 %conv80) #11, !dbg !13444
  %conv82 = zext i8 %call81 to i32, !dbg !13444
  %70 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13444
  %io_port_base83 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %70, i32 0, i32 1, !dbg !13444
  %71 = load i64, i64* %io_port_base83, align 8, !dbg !13444
  %add84 = add i64 %71, 144, !dbg !13444
  %conv85 = trunc i64 %add84 to i32, !dbg !13444
  %call86 = call zeroext i8 @inb(i32 %conv85) #11, !dbg !13444
  %conv87 = zext i8 %call86 to i32, !dbg !13444
  %72 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13444
  %io_port_base88 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %72, i32 0, i32 1, !dbg !13444
  %73 = load i64, i64* %io_port_base88, align 8, !dbg !13444
  %add89 = add i64 %73, 145, !dbg !13444
  %conv90 = trunc i64 %add89 to i32, !dbg !13444
  %call91 = call zeroext i8 @inb(i32 %conv90) #11, !dbg !13444
  %conv92 = zext i8 %call91 to i32, !dbg !13444
  %call93 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([199 x i8], [199 x i8]* @.str.110, i64 0, i64 0), i32 %conv33, i32 %conv38, i32 %conv43, i32 %conv48, i32 %conv53, i32 %conv58, i32 %conv63, i32 %call67, i32 %conv72, i32 %conv77, i32 %conv82, i32 %conv87, i32 %conv92) #12, !dbg !13444
  %74 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13445
  %io_port_base94 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %74, i32 0, i32 1, !dbg !13445
  %75 = load i64, i64* %io_port_base94, align 8, !dbg !13445
  %add95 = add i64 %75, 160, !dbg !13445
  %conv96 = trunc i64 %add95 to i32, !dbg !13445
  %call97 = call zeroext i16 @inw(i32 %conv96) #11, !dbg !13445
  %conv98 = zext i16 %call97 to i32, !dbg !13445
  %76 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13445
  %io_port_base99 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %76, i32 0, i32 1, !dbg !13445
  %77 = load i64, i64* %io_port_base99, align 8, !dbg !13445
  %add100 = add i64 %77, 161, !dbg !13445
  %conv101 = trunc i64 %add100 to i32, !dbg !13445
  %call102 = call zeroext i8 @inb(i32 %conv101) #11, !dbg !13445
  %conv103 = zext i8 %call102 to i32, !dbg !13445
  %78 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13445
  %io_port_base104 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %78, i32 0, i32 1, !dbg !13445
  %79 = load i64, i64* %io_port_base104, align 8, !dbg !13445
  %add105 = add i64 %79, 162, !dbg !13445
  %conv106 = trunc i64 %add105 to i32, !dbg !13445
  %call107 = call zeroext i8 @inb(i32 %conv106) #11, !dbg !13445
  %conv108 = zext i8 %call107 to i32, !dbg !13445
  %80 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13445
  %io_port_base109 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %80, i32 0, i32 1, !dbg !13445
  %81 = load i64, i64* %io_port_base109, align 8, !dbg !13445
  %add110 = add i64 %81, 163, !dbg !13445
  %conv111 = trunc i64 %add110 to i32, !dbg !13445
  %call112 = call zeroext i8 @inb(i32 %conv111) #11, !dbg !13445
  %conv113 = zext i8 %call112 to i32, !dbg !13445
  %82 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13445
  %io_port_base114 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %82, i32 0, i32 1, !dbg !13445
  %83 = load i64, i64* %io_port_base114, align 8, !dbg !13445
  %add115 = add i64 %83, 164, !dbg !13445
  %conv116 = trunc i64 %add115 to i32, !dbg !13445
  %call117 = call zeroext i8 @inb(i32 %conv116) #11, !dbg !13445
  %conv118 = zext i8 %call117 to i32, !dbg !13445
  %84 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13445
  %io_port_base119 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %84, i32 0, i32 1, !dbg !13445
  %85 = load i64, i64* %io_port_base119, align 8, !dbg !13445
  %add120 = add i64 %85, 166, !dbg !13445
  %conv121 = trunc i64 %add120 to i32, !dbg !13445
  %call122 = call zeroext i16 @inw(i32 %conv121) #11, !dbg !13445
  %conv123 = zext i16 %call122 to i32, !dbg !13445
  %86 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13445
  %io_port_base124 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %86, i32 0, i32 1, !dbg !13445
  %87 = load i64, i64* %io_port_base124, align 8, !dbg !13445
  %add125 = add i64 %87, 168, !dbg !13445
  %conv126 = trunc i64 %add125 to i32, !dbg !13445
  %call127 = call i32 @inl(i32 %conv126) #11, !dbg !13445
  %88 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13445
  %io_port_base128 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %88, i32 0, i32 1, !dbg !13445
  %89 = load i64, i64* %io_port_base128, align 8, !dbg !13445
  %add129 = add i64 %89, 172, !dbg !13445
  %conv130 = trunc i64 %add129 to i32, !dbg !13445
  %call131 = call i32 @inl(i32 %conv130) #11, !dbg !13445
  %90 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13445
  %io_port_base132 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %90, i32 0, i32 1, !dbg !13445
  %91 = load i64, i64* %io_port_base132, align 8, !dbg !13445
  %add133 = add i64 %91, 180, !dbg !13445
  %conv134 = trunc i64 %add133 to i32, !dbg !13445
  %call135 = call i32 @inl(i32 %conv134) #11, !dbg !13445
  %92 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13445
  %io_port_base136 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %92, i32 0, i32 1, !dbg !13445
  %93 = load i64, i64* %io_port_base136, align 8, !dbg !13445
  %add137 = add i64 %93, 176, !dbg !13445
  %conv138 = trunc i64 %add137 to i32, !dbg !13445
  %call139 = call i32 @inl(i32 %conv138) #11, !dbg !13445
  %call140 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.111, i64 0, i64 0), i32 %conv98, i32 %conv103, i32 %conv108, i32 %conv113, i32 %conv118, i32 %conv123, i32 %call127, i32 %call131, i32 %call135, i32 %call139) #12, !dbg !13445
  %94 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13446
  %io_port_base141 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %94, i32 0, i32 1, !dbg !13446
  %95 = load i64, i64* %io_port_base141, align 8, !dbg !13446
  %add142 = add i64 %95, 212, !dbg !13446
  %conv143 = trunc i64 %add142 to i32, !dbg !13446
  %call144 = call zeroext i8 @inb(i32 %conv143) #11, !dbg !13446
  %conv145 = zext i8 %call144 to i32, !dbg !13446
  %96 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13446
  %io_port_base146 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %96, i32 0, i32 1, !dbg !13446
  %97 = load i64, i64* %io_port_base146, align 8, !dbg !13446
  %add147 = add i64 %97, 213, !dbg !13446
  %conv148 = trunc i64 %add147 to i32, !dbg !13446
  %call149 = call zeroext i8 @inb(i32 %conv148) #11, !dbg !13446
  %conv150 = zext i8 %call149 to i32, !dbg !13446
  %98 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !13446
  %io_port_base151 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %98, i32 0, i32 1, !dbg !13446
  %99 = load i64, i64* %io_port_base151, align 8, !dbg !13446
  %add152 = add i64 %99, 219, !dbg !13446
  %conv153 = trunc i64 %add152 to i32, !dbg !13446
  %call154 = call zeroext i8 @inb(i32 %conv153) #11, !dbg !13446
  %conv155 = zext i8 %call154 to i32, !dbg !13446
  %100 = load i16, i16* %pstat, align 2, !dbg !13446
  %conv156 = zext i16 %100 to i32, !dbg !13446
  %call157 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.112, i64 0, i64 0), i32 %conv145, i32 %conv150, i32 %conv155, i32 %conv156) #12, !dbg !13446
  ret void, !dbg !13447
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outl(i32 %value, i32 %port) #2 !dbg !13448 {
entry:
  %value.addr = alloca i32, align 4
  %port.addr = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !13451, metadata !DIExpression()), !dbg !13452
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !13453, metadata !DIExpression()), !dbg !13452
  %0 = load i32, i32* %value.addr, align 4, !dbg !13452
  %1 = load i32, i32* %port.addr, align 4, !dbg !13452
  call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32 %1) #6, !dbg !13452, !srcloc !13454
  ret void, !dbg !13452
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_word(%struct.pci_dev*, i32, i16*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trms1040_read_all(%struct.NvRamType* %eeprom, i64 %io_port) #2 !dbg !13455 {
entry:
  %eeprom.addr = alloca %struct.NvRamType*, align 8
  %io_port.addr = alloca i64, align 8
  %b_eeprom = alloca i8*, align 8
  %addr = alloca i8, align 1
  store %struct.NvRamType* %eeprom, %struct.NvRamType** %eeprom.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NvRamType** %eeprom.addr, metadata !13456, metadata !DIExpression()), !dbg !13457
  store i64 %io_port, i64* %io_port.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %io_port.addr, metadata !13458, metadata !DIExpression()), !dbg !13459
  call void @llvm.dbg.declare(metadata i8** %b_eeprom, metadata !13460, metadata !DIExpression()), !dbg !13461
  %0 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !13462
  %1 = bitcast %struct.NvRamType* %0 to i8*, !dbg !13463
  store i8* %1, i8** %b_eeprom, align 8, !dbg !13461
  call void @llvm.dbg.declare(metadata i8* %addr, metadata !13464, metadata !DIExpression()), !dbg !13465
  %2 = load i64, i64* %io_port.addr, align 8, !dbg !13466
  %add = add i64 %2, 212, !dbg !13467
  %conv = trunc i64 %add to i32, !dbg !13466
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !13468
  %conv1 = zext i8 %call to i32, !dbg !13468
  %or = or i32 %conv1, 16, !dbg !13469
  %conv2 = trunc i32 %or to i8, !dbg !13470
  %3 = load i64, i64* %io_port.addr, align 8, !dbg !13471
  %add3 = add i64 %3, 212, !dbg !13472
  %conv4 = trunc i64 %add3 to i32, !dbg !13471
  call void @outb(i8 zeroext %conv2, i32 %conv4) #11, !dbg !13473
  store i8 0, i8* %addr, align 1, !dbg !13474
  br label %for.cond, !dbg !13476

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i8, i8* %addr, align 1, !dbg !13477
  %conv5 = zext i8 %4 to i32, !dbg !13477
  %cmp = icmp slt i32 %conv5, 128, !dbg !13479
  br i1 %cmp, label %for.body, label %for.end, !dbg !13480

for.body:                                         ; preds = %for.cond
  %5 = load i64, i64* %io_port.addr, align 8, !dbg !13481
  %6 = load i8, i8* %addr, align 1, !dbg !13482
  %call7 = call zeroext i8 @trms1040_get_data(i64 %5, i8 zeroext %6) #11, !dbg !13483
  %7 = load i8*, i8** %b_eeprom, align 8, !dbg !13484
  store i8 %call7, i8* %7, align 1, !dbg !13485
  br label %for.inc, !dbg !13486

for.inc:                                          ; preds = %for.body
  %8 = load i8, i8* %addr, align 1, !dbg !13487
  %inc = add i8 %8, 1, !dbg !13487
  store i8 %inc, i8* %addr, align 1, !dbg !13487
  %9 = load i8*, i8** %b_eeprom, align 8, !dbg !13488
  %incdec.ptr = getelementptr i8, i8* %9, i32 1, !dbg !13488
  store i8* %incdec.ptr, i8** %b_eeprom, align 8, !dbg !13488
  br label %for.cond, !dbg !13489, !llvm.loop !13490

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %io_port.addr, align 8, !dbg !13492
  %add8 = add i64 %10, 212, !dbg !13493
  %conv9 = trunc i64 %add8 to i32, !dbg !13492
  %call10 = call zeroext i8 @inb(i32 %conv9) #11, !dbg !13494
  %conv11 = zext i8 %call10 to i32, !dbg !13494
  %and = and i32 %conv11, -17, !dbg !13495
  %conv12 = trunc i32 %and to i8, !dbg !13496
  %11 = load i64, i64* %io_port.addr, align 8, !dbg !13497
  %add13 = add i64 %11, 212, !dbg !13498
  %conv14 = trunc i64 %add13 to i32, !dbg !13497
  call void @outb(i8 zeroext %conv12, i32 %conv14) #11, !dbg !13499
  ret void, !dbg !13500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_safe_settings() #2 !dbg !13501 {
entry:
  %i = alloca i32, align 4
  %0 = load i8, i8* @use_safe_settings, align 1, !dbg !13502
  %tobool = trunc i8 %0 to i1, !dbg !13502
  br i1 %tobool, label %if.then, label %if.end, !dbg !13504

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13505, metadata !DIExpression()), !dbg !13507
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.118, i64 0, i64 0)) #12, !dbg !13508
  store i32 0, i32* %i, align 4, !dbg !13509
  br label %for.cond, !dbg !13511

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %i, align 4, !dbg !13512
  %cmp = icmp slt i32 %1, 6, !dbg !13514
  br i1 %cmp, label %for.body, label %for.end, !dbg !13515

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !13516
  %idxprom = sext i32 %2 to i64, !dbg !13518
  %arrayidx = getelementptr [6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 %idxprom, !dbg !13518
  %safe = getelementptr inbounds %struct.ParameterData, %struct.ParameterData* %arrayidx, i32 0, i32 4, !dbg !13519
  %3 = load i32, i32* %safe, align 4, !dbg !13519
  %4 = load i32, i32* %i, align 4, !dbg !13520
  %idxprom1 = sext i32 %4 to i64, !dbg !13521
  %arrayidx2 = getelementptr [6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 %idxprom1, !dbg !13521
  %value = getelementptr inbounds %struct.ParameterData, %struct.ParameterData* %arrayidx2, i32 0, i32 0, !dbg !13522
  store i32 %3, i32* %value, align 4, !dbg !13523
  br label %for.inc, !dbg !13524

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !13525
  %inc = add i32 %5, 1, !dbg !13525
  store i32 %inc, i32* %i, align 4, !dbg !13525
  br label %for.cond, !dbg !13526, !llvm.loop !13527

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !13529

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !13530
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fix_settings() #2 !dbg !13531 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13532, metadata !DIExpression()), !dbg !13533
  br label %do.body, !dbg !13534

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13535

do.end:                                           ; preds = %do.body
  store i32 0, i32* %i, align 4, !dbg !13537
  br label %for.cond, !dbg !13539

for.cond:                                         ; preds = %for.inc, %do.end
  %0 = load i32, i32* %i, align 4, !dbg !13540
  %cmp = icmp slt i32 %0, 6, !dbg !13542
  br i1 %cmp, label %for.body, label %for.end, !dbg !13543

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !13544
  %idxprom = sext i32 %1 to i64, !dbg !13547
  %arrayidx = getelementptr [6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 %idxprom, !dbg !13547
  %value = getelementptr inbounds %struct.ParameterData, %struct.ParameterData* %arrayidx, i32 0, i32 0, !dbg !13548
  %2 = load i32, i32* %value, align 4, !dbg !13548
  %3 = load i32, i32* %i, align 4, !dbg !13549
  %idxprom1 = sext i32 %3 to i64, !dbg !13550
  %arrayidx2 = getelementptr [6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 %idxprom1, !dbg !13550
  %min = getelementptr inbounds %struct.ParameterData, %struct.ParameterData* %arrayidx2, i32 0, i32 1, !dbg !13551
  %4 = load i32, i32* %min, align 4, !dbg !13551
  %cmp3 = icmp slt i32 %2, %4, !dbg !13552
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !13553

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !13554
  %idxprom4 = sext i32 %5 to i64, !dbg !13555
  %arrayidx5 = getelementptr [6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 %idxprom4, !dbg !13555
  %value6 = getelementptr inbounds %struct.ParameterData, %struct.ParameterData* %arrayidx5, i32 0, i32 0, !dbg !13556
  %6 = load i32, i32* %value6, align 4, !dbg !13556
  %7 = load i32, i32* %i, align 4, !dbg !13557
  %idxprom7 = sext i32 %7 to i64, !dbg !13558
  %arrayidx8 = getelementptr [6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 %idxprom7, !dbg !13558
  %max = getelementptr inbounds %struct.ParameterData, %struct.ParameterData* %arrayidx8, i32 0, i32 2, !dbg !13559
  %8 = load i32, i32* %max, align 4, !dbg !13559
  %cmp9 = icmp sgt i32 %6, %8, !dbg !13560
  br i1 %cmp9, label %if.then, label %if.end, !dbg !13561

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %9 = load i32, i32* %i, align 4, !dbg !13562
  %idxprom10 = sext i32 %9 to i64, !dbg !13563
  %arrayidx11 = getelementptr [6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 %idxprom10, !dbg !13563
  %def = getelementptr inbounds %struct.ParameterData, %struct.ParameterData* %arrayidx11, i32 0, i32 3, !dbg !13564
  %10 = load i32, i32* %def, align 4, !dbg !13564
  %11 = load i32, i32* %i, align 4, !dbg !13565
  %idxprom12 = sext i32 %11 to i64, !dbg !13566
  %arrayidx13 = getelementptr [6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 %idxprom12, !dbg !13566
  %value14 = getelementptr inbounds %struct.ParameterData, %struct.ParameterData* %arrayidx13, i32 0, i32 0, !dbg !13567
  store i32 %10, i32* %value14, align 4, !dbg !13568
  br label %if.end, !dbg !13566

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !13569

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !13570
  %inc = add i32 %12, 1, !dbg !13570
  store i32 %inc, i32* %i, align 4, !dbg !13570
  br label %for.cond, !dbg !13571, !llvm.loop !13572

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eeprom_override(%struct.NvRamType* %eeprom) #2 !dbg !13575 {
entry:
  %eeprom.addr = alloca %struct.NvRamType*, align 8
  %id = alloca i8, align 1
  store %struct.NvRamType* %eeprom, %struct.NvRamType** %eeprom.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NvRamType** %eeprom.addr, metadata !13576, metadata !DIExpression()), !dbg !13577
  call void @llvm.dbg.declare(metadata i8* %id, metadata !13578, metadata !DIExpression()), !dbg !13579
  %0 = load i32, i32* getelementptr inbounds ([6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 0, i32 0), align 16, !dbg !13580
  %cmp = icmp ne i32 %0, -1, !dbg !13582
  br i1 %cmp, label %if.then, label %if.end, !dbg !13583

if.then:                                          ; preds = %entry
  %1 = load i32, i32* getelementptr inbounds ([6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 0, i32 0), align 16, !dbg !13584
  %conv = trunc i32 %1 to i8, !dbg !13585
  %2 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !13586
  %scsi_id = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %2, i32 0, i32 7, !dbg !13587
  store i8 %conv, i8* %scsi_id, align 2, !dbg !13588
  br label %if.end, !dbg !13586

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* getelementptr inbounds ([6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 3, i32 0), align 4, !dbg !13589
  %cmp1 = icmp ne i32 %3, -1, !dbg !13591
  br i1 %cmp1, label %if.then3, label %if.end5, !dbg !13592

if.then3:                                         ; preds = %if.end
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 3, i32 0), align 4, !dbg !13593
  %conv4 = trunc i32 %4 to i8, !dbg !13594
  %5 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !13595
  %channel_cfg = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %5, i32 0, i32 8, !dbg !13596
  store i8 %conv4, i8* %channel_cfg, align 1, !dbg !13597
  br label %if.end5, !dbg !13595

if.end5:                                          ; preds = %if.then3, %if.end
  %6 = load i32, i32* getelementptr inbounds ([6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 5, i32 0), align 4, !dbg !13598
  %cmp6 = icmp ne i32 %6, -1, !dbg !13600
  br i1 %cmp6, label %if.then8, label %if.end10, !dbg !13601

if.then8:                                         ; preds = %if.end5
  %7 = load i32, i32* getelementptr inbounds ([6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 5, i32 0), align 4, !dbg !13602
  %call = call i32 @delay_to_eeprom_index(i32 %7) #11, !dbg !13603
  %conv9 = trunc i32 %call to i8, !dbg !13603
  %8 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !13604
  %delay_time = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %8, i32 0, i32 9, !dbg !13605
  store i8 %conv9, i8* %delay_time, align 2, !dbg !13606
  br label %if.end10, !dbg !13604

if.end10:                                         ; preds = %if.then8, %if.end5
  %9 = load i32, i32* getelementptr inbounds ([6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 4, i32 0), align 16, !dbg !13607
  %cmp11 = icmp ne i32 %9, -1, !dbg !13609
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !13610

if.then13:                                        ; preds = %if.end10
  %10 = load i32, i32* getelementptr inbounds ([6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 4, i32 0), align 16, !dbg !13611
  %conv14 = trunc i32 %10 to i8, !dbg !13612
  %11 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !13613
  %max_tag = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %11, i32 0, i32 10, !dbg !13614
  store i8 %conv14, i8* %max_tag, align 1, !dbg !13615
  br label %if.end15, !dbg !13613

if.end15:                                         ; preds = %if.then13, %if.end10
  store i8 0, i8* %id, align 1, !dbg !13616
  br label %for.cond, !dbg !13618

for.cond:                                         ; preds = %for.inc, %if.end15
  %12 = load i8, i8* %id, align 1, !dbg !13619
  %conv16 = zext i8 %12 to i32, !dbg !13619
  %cmp17 = icmp slt i32 %conv16, 16, !dbg !13621
  br i1 %cmp17, label %for.body, label %for.end, !dbg !13622

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* getelementptr inbounds ([6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 2, i32 0), align 8, !dbg !13623
  %cmp19 = icmp ne i32 %13, -1, !dbg !13626
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !13627

if.then21:                                        ; preds = %for.body
  %14 = load i32, i32* getelementptr inbounds ([6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 2, i32 0), align 8, !dbg !13628
  %conv22 = trunc i32 %14 to i8, !dbg !13629
  %15 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !13630
  %target = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %15, i32 0, i32 6, !dbg !13631
  %16 = load i8, i8* %id, align 1, !dbg !13632
  %idxprom = zext i8 %16 to i64, !dbg !13630
  %arrayidx = getelementptr [16 x %struct.NVRamTarget], [16 x %struct.NVRamTarget]* %target, i64 0, i64 %idxprom, !dbg !13630
  %cfg0 = getelementptr inbounds %struct.NVRamTarget, %struct.NVRamTarget* %arrayidx, i32 0, i32 0, !dbg !13633
  store i8 %conv22, i8* %cfg0, align 2, !dbg !13634
  br label %if.end23, !dbg !13630

if.end23:                                         ; preds = %if.then21, %for.body
  %17 = load i32, i32* getelementptr inbounds ([6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 1, i32 0), align 4, !dbg !13635
  %cmp24 = icmp ne i32 %17, -1, !dbg !13637
  br i1 %cmp24, label %if.then26, label %if.end31, !dbg !13638

if.then26:                                        ; preds = %if.end23
  %18 = load i32, i32* getelementptr inbounds ([6 x %struct.ParameterData], [6 x %struct.ParameterData]* @cfg_data, i64 0, i64 1, i32 0), align 4, !dbg !13639
  %conv27 = trunc i32 %18 to i8, !dbg !13640
  %19 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !13641
  %target28 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %19, i32 0, i32 6, !dbg !13642
  %20 = load i8, i8* %id, align 1, !dbg !13643
  %idxprom29 = zext i8 %20 to i64, !dbg !13641
  %arrayidx30 = getelementptr [16 x %struct.NVRamTarget], [16 x %struct.NVRamTarget]* %target28, i64 0, i64 %idxprom29, !dbg !13641
  %period = getelementptr inbounds %struct.NVRamTarget, %struct.NVRamTarget* %arrayidx30, i32 0, i32 1, !dbg !13644
  store i8 %conv27, i8* %period, align 1, !dbg !13645
  br label %if.end31, !dbg !13641

if.end31:                                         ; preds = %if.then26, %if.end23
  br label %for.inc, !dbg !13646

for.inc:                                          ; preds = %if.end31
  %21 = load i8, i8* %id, align 1, !dbg !13647
  %inc = add i8 %21, 1, !dbg !13647
  store i8 %inc, i8* %id, align 1, !dbg !13647
  br label %for.cond, !dbg !13648, !llvm.loop !13649

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13651
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trms1040_write_all(%struct.NvRamType* %eeprom, i64 %io_port) #2 !dbg !13652 {
entry:
  %eeprom.addr = alloca %struct.NvRamType*, align 8
  %io_port.addr = alloca i64, align 8
  %b_eeprom = alloca i8*, align 8
  %addr = alloca i8, align 1
  store %struct.NvRamType* %eeprom, %struct.NvRamType** %eeprom.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NvRamType** %eeprom.addr, metadata !13653, metadata !DIExpression()), !dbg !13654
  store i64 %io_port, i64* %io_port.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %io_port.addr, metadata !13655, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.declare(metadata i8** %b_eeprom, metadata !13657, metadata !DIExpression()), !dbg !13658
  %0 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !13659
  %1 = bitcast %struct.NvRamType* %0 to i8*, !dbg !13660
  store i8* %1, i8** %b_eeprom, align 8, !dbg !13658
  call void @llvm.dbg.declare(metadata i8* %addr, metadata !13661, metadata !DIExpression()), !dbg !13662
  %2 = load i64, i64* %io_port.addr, align 8, !dbg !13663
  %add = add i64 %2, 212, !dbg !13664
  %conv = trunc i64 %add to i32, !dbg !13663
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !13665
  %conv1 = zext i8 %call to i32, !dbg !13665
  %or = or i32 %conv1, 16, !dbg !13666
  %conv2 = trunc i32 %or to i8, !dbg !13667
  %3 = load i64, i64* %io_port.addr, align 8, !dbg !13668
  %add3 = add i64 %3, 212, !dbg !13669
  %conv4 = trunc i64 %add3 to i32, !dbg !13668
  call void @outb(i8 zeroext %conv2, i32 %conv4) #11, !dbg !13670
  %4 = load i64, i64* %io_port.addr, align 8, !dbg !13671
  call void @trms1040_write_cmd(i64 %4, i8 zeroext 4, i8 zeroext -1) #11, !dbg !13672
  %5 = load i64, i64* %io_port.addr, align 8, !dbg !13673
  %add5 = add i64 %5, 214, !dbg !13674
  %conv6 = trunc i64 %add5 to i32, !dbg !13673
  call void @outb(i8 zeroext 0, i32 %conv6) #11, !dbg !13675
  %6 = load i64, i64* %io_port.addr, align 8, !dbg !13676
  call void @trms1040_wait_30us(i64 %6) #11, !dbg !13677
  store i8 0, i8* %addr, align 1, !dbg !13678
  br label %for.cond, !dbg !13680

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i8, i8* %addr, align 1, !dbg !13681
  %conv7 = zext i8 %7 to i32, !dbg !13681
  %cmp = icmp slt i32 %conv7, 128, !dbg !13683
  br i1 %cmp, label %for.body, label %for.end, !dbg !13684

for.body:                                         ; preds = %for.cond
  %8 = load i64, i64* %io_port.addr, align 8, !dbg !13685
  %9 = load i8, i8* %addr, align 1, !dbg !13686
  %10 = load i8*, i8** %b_eeprom, align 8, !dbg !13687
  %11 = load i8, i8* %10, align 1, !dbg !13688
  call void @trms1040_set_data(i64 %8, i8 zeroext %9, i8 zeroext %11) #11, !dbg !13689
  br label %for.inc, !dbg !13689

for.inc:                                          ; preds = %for.body
  %12 = load i8, i8* %addr, align 1, !dbg !13690
  %inc = add i8 %12, 1, !dbg !13690
  store i8 %inc, i8* %addr, align 1, !dbg !13690
  %13 = load i8*, i8** %b_eeprom, align 8, !dbg !13691
  %incdec.ptr = getelementptr i8, i8* %13, i32 1, !dbg !13691
  store i8* %incdec.ptr, i8** %b_eeprom, align 8, !dbg !13691
  br label %for.cond, !dbg !13692, !llvm.loop !13693

for.end:                                          ; preds = %for.cond
  %14 = load i64, i64* %io_port.addr, align 8, !dbg !13695
  call void @trms1040_write_cmd(i64 %14, i8 zeroext 4, i8 zeroext 0) #11, !dbg !13696
  %15 = load i64, i64* %io_port.addr, align 8, !dbg !13697
  %add9 = add i64 %15, 214, !dbg !13698
  %conv10 = trunc i64 %add9 to i32, !dbg !13697
  call void @outb(i8 zeroext 0, i32 %conv10) #11, !dbg !13699
  %16 = load i64, i64* %io_port.addr, align 8, !dbg !13700
  call void @trms1040_wait_30us(i64 %16) #11, !dbg !13701
  %17 = load i64, i64* %io_port.addr, align 8, !dbg !13702
  %add11 = add i64 %17, 212, !dbg !13703
  %conv12 = trunc i64 %add11 to i32, !dbg !13702
  %call13 = call zeroext i8 @inb(i32 %conv12) #11, !dbg !13704
  %conv14 = zext i8 %call13 to i32, !dbg !13704
  %and = and i32 %conv14, -17, !dbg !13705
  %conv15 = trunc i32 %and to i8, !dbg !13706
  %18 = load i64, i64* %io_port.addr, align 8, !dbg !13707
  %add16 = add i64 %18, 212, !dbg !13708
  %conv17 = trunc i64 %add16 to i32, !dbg !13707
  call void @outb(i8 zeroext %conv15, i32 %conv17) #11, !dbg !13709
  ret void, !dbg !13710
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eeprom_index_to_delay(%struct.NvRamType* %eeprom) #2 !dbg !13711 {
entry:
  %eeprom.addr = alloca %struct.NvRamType*, align 8
  store %struct.NvRamType* %eeprom, %struct.NvRamType** %eeprom.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NvRamType** %eeprom.addr, metadata !13712, metadata !DIExpression()), !dbg !13713
  %0 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !13714
  %delay_time = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %0, i32 0, i32 9, !dbg !13715
  %1 = load i8, i8* %delay_time, align 2, !dbg !13715
  %idxprom = zext i8 %1 to i64, !dbg !13716
  %arrayidx = getelementptr [8 x i8], [8 x i8]* @eeprom_index_to_delay_map, i64 0, i64 %idxprom, !dbg !13716
  %2 = load i8, i8* %arrayidx, align 1, !dbg !13716
  %3 = load %struct.NvRamType*, %struct.NvRamType** %eeprom.addr, align 8, !dbg !13717
  %delay_time1 = getelementptr inbounds %struct.NvRamType, %struct.NvRamType* %3, i32 0, i32 9, !dbg !13718
  store i8 %2, i8* %delay_time1, align 2, !dbg !13719
  ret void, !dbg !13720
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @trms1040_get_data(i64 %io_port, i8 zeroext %addr) #2 !dbg !13721 {
entry:
  %io_port.addr = alloca i64, align 8
  %addr.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %read_byte = alloca i8, align 1
  %result = alloca i8, align 1
  store i64 %io_port, i64* %io_port.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %io_port.addr, metadata !13724, metadata !DIExpression()), !dbg !13725
  store i8 %addr, i8* %addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %addr.addr, metadata !13726, metadata !DIExpression()), !dbg !13727
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13728, metadata !DIExpression()), !dbg !13729
  call void @llvm.dbg.declare(metadata i8* %read_byte, metadata !13730, metadata !DIExpression()), !dbg !13731
  call void @llvm.dbg.declare(metadata i8* %result, metadata !13732, metadata !DIExpression()), !dbg !13733
  store i8 0, i8* %result, align 1, !dbg !13733
  %0 = load i64, i64* %io_port.addr, align 8, !dbg !13734
  %1 = load i8, i8* %addr.addr, align 1, !dbg !13735
  call void @trms1040_write_cmd(i64 %0, i8 zeroext 6, i8 zeroext %1) #11, !dbg !13736
  store i32 0, i32* %i, align 4, !dbg !13737
  br label %for.cond, !dbg !13739

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !13740
  %cmp = icmp slt i32 %2, 8, !dbg !13742
  br i1 %cmp, label %for.body, label %for.end, !dbg !13743

for.body:                                         ; preds = %for.cond
  %3 = load i64, i64* %io_port.addr, align 8, !dbg !13744
  %add = add i64 %3, 214, !dbg !13746
  %conv = trunc i64 %add to i32, !dbg !13744
  call void @outb(i8 zeroext 3, i32 %conv) #11, !dbg !13747
  %4 = load i64, i64* %io_port.addr, align 8, !dbg !13748
  call void @trms1040_wait_30us(i64 %4) #11, !dbg !13749
  %5 = load i64, i64* %io_port.addr, align 8, !dbg !13750
  %add1 = add i64 %5, 214, !dbg !13751
  %conv2 = trunc i64 %add1 to i32, !dbg !13750
  call void @outb(i8 zeroext 1, i32 %conv2) #11, !dbg !13752
  %6 = load i64, i64* %io_port.addr, align 8, !dbg !13753
  %add3 = add i64 %6, 214, !dbg !13754
  %conv4 = trunc i64 %add3 to i32, !dbg !13753
  %call = call zeroext i8 @inb(i32 %conv4) #11, !dbg !13755
  store i8 %call, i8* %read_byte, align 1, !dbg !13756
  %7 = load i8, i8* %result, align 1, !dbg !13757
  %conv5 = zext i8 %7 to i32, !dbg !13757
  %shl = shl i32 %conv5, 1, !dbg !13757
  %conv6 = trunc i32 %shl to i8, !dbg !13757
  store i8 %conv6, i8* %result, align 1, !dbg !13757
  %8 = load i8, i8* %read_byte, align 1, !dbg !13758
  %conv7 = zext i8 %8 to i32, !dbg !13758
  %and = and i32 %conv7, 4, !dbg !13760
  %tobool = icmp ne i32 %and, 0, !dbg !13760
  br i1 %tobool, label %if.then, label %if.end, !dbg !13761

if.then:                                          ; preds = %for.body
  %9 = load i8, i8* %result, align 1, !dbg !13762
  %conv8 = zext i8 %9 to i32, !dbg !13762
  %or = or i32 %conv8, 1, !dbg !13762
  %conv9 = trunc i32 %or to i8, !dbg !13762
  store i8 %conv9, i8* %result, align 1, !dbg !13762
  br label %if.end, !dbg !13763

if.end:                                           ; preds = %if.then, %for.body
  %10 = load i64, i64* %io_port.addr, align 8, !dbg !13764
  call void @trms1040_wait_30us(i64 %10) #11, !dbg !13765
  br label %for.inc, !dbg !13766

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !13767
  %inc = add i32 %11, 1, !dbg !13767
  store i32 %inc, i32* %i, align 4, !dbg !13767
  br label %for.cond, !dbg !13768, !llvm.loop !13769

for.end:                                          ; preds = %for.cond
  %12 = load i64, i64* %io_port.addr, align 8, !dbg !13771
  %add10 = add i64 %12, 214, !dbg !13772
  %conv11 = trunc i64 %add10 to i32, !dbg !13771
  call void @outb(i8 zeroext 0, i32 %conv11) #11, !dbg !13773
  %13 = load i8, i8* %result, align 1, !dbg !13774
  ret i8 %13, !dbg !13775
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trms1040_write_cmd(i64 %io_port, i8 zeroext %cmd, i8 zeroext %addr) #2 !dbg !13776 {
entry:
  %io_port.addr = alloca i64, align 8
  %cmd.addr = alloca i8, align 1
  %addr.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %send_data = alloca i8, align 1
  store i64 %io_port, i64* %io_port.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %io_port.addr, metadata !13779, metadata !DIExpression()), !dbg !13780
  store i8 %cmd, i8* %cmd.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cmd.addr, metadata !13781, metadata !DIExpression()), !dbg !13782
  store i8 %addr, i8* %addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %addr.addr, metadata !13783, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13785, metadata !DIExpression()), !dbg !13786
  call void @llvm.dbg.declare(metadata i8* %send_data, metadata !13787, metadata !DIExpression()), !dbg !13788
  store i32 0, i32* %i, align 4, !dbg !13789
  br label %for.cond, !dbg !13791

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !13792
  %cmp = icmp slt i32 %0, 3, !dbg !13794
  br i1 %cmp, label %for.body, label %for.end, !dbg !13795

for.body:                                         ; preds = %for.cond
  store i8 1, i8* %send_data, align 1, !dbg !13796
  %1 = load i8, i8* %cmd.addr, align 1, !dbg !13798
  %conv = zext i8 %1 to i32, !dbg !13798
  %and = and i32 %conv, 4, !dbg !13800
  %tobool = icmp ne i32 %and, 0, !dbg !13800
  br i1 %tobool, label %if.then, label %if.end, !dbg !13801

if.then:                                          ; preds = %for.body
  %2 = load i8, i8* %send_data, align 1, !dbg !13802
  %conv1 = zext i8 %2 to i32, !dbg !13802
  %or = or i32 %conv1, 8, !dbg !13802
  %conv2 = trunc i32 %or to i8, !dbg !13802
  store i8 %conv2, i8* %send_data, align 1, !dbg !13802
  br label %if.end, !dbg !13803

if.end:                                           ; preds = %if.then, %for.body
  %3 = load i8, i8* %send_data, align 1, !dbg !13804
  %4 = load i64, i64* %io_port.addr, align 8, !dbg !13805
  %add = add i64 %4, 214, !dbg !13806
  %conv3 = trunc i64 %add to i32, !dbg !13805
  call void @outb(i8 zeroext %3, i32 %conv3) #11, !dbg !13807
  %5 = load i64, i64* %io_port.addr, align 8, !dbg !13808
  call void @trms1040_wait_30us(i64 %5) #11, !dbg !13809
  %6 = load i8, i8* %send_data, align 1, !dbg !13810
  %conv4 = zext i8 %6 to i32, !dbg !13810
  %or5 = or i32 %conv4, 2, !dbg !13811
  %conv6 = trunc i32 %or5 to i8, !dbg !13812
  %7 = load i64, i64* %io_port.addr, align 8, !dbg !13813
  %add7 = add i64 %7, 214, !dbg !13814
  %conv8 = trunc i64 %add7 to i32, !dbg !13813
  call void @outb(i8 zeroext %conv6, i32 %conv8) #11, !dbg !13815
  %8 = load i64, i64* %io_port.addr, align 8, !dbg !13816
  call void @trms1040_wait_30us(i64 %8) #11, !dbg !13817
  br label %for.inc, !dbg !13818

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !13819
  %inc = add i32 %9, 1, !dbg !13819
  store i32 %inc, i32* %i, align 4, !dbg !13819
  %10 = load i8, i8* %cmd.addr, align 1, !dbg !13820
  %conv9 = zext i8 %10 to i32, !dbg !13820
  %shl = shl i32 %conv9, 1, !dbg !13820
  %conv10 = trunc i32 %shl to i8, !dbg !13820
  store i8 %conv10, i8* %cmd.addr, align 1, !dbg !13820
  br label %for.cond, !dbg !13821, !llvm.loop !13822

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !13824
  br label %for.cond11, !dbg !13826

for.cond11:                                       ; preds = %for.inc30, %for.end
  %11 = load i32, i32* %i, align 4, !dbg !13827
  %cmp12 = icmp slt i32 %11, 7, !dbg !13829
  br i1 %cmp12, label %for.body14, label %for.end35, !dbg !13830

for.body14:                                       ; preds = %for.cond11
  store i8 1, i8* %send_data, align 1, !dbg !13831
  %12 = load i8, i8* %addr.addr, align 1, !dbg !13833
  %conv15 = zext i8 %12 to i32, !dbg !13833
  %and16 = and i32 %conv15, 64, !dbg !13835
  %tobool17 = icmp ne i32 %and16, 0, !dbg !13835
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !13836

if.then18:                                        ; preds = %for.body14
  %13 = load i8, i8* %send_data, align 1, !dbg !13837
  %conv19 = zext i8 %13 to i32, !dbg !13837
  %or20 = or i32 %conv19, 8, !dbg !13837
  %conv21 = trunc i32 %or20 to i8, !dbg !13837
  store i8 %conv21, i8* %send_data, align 1, !dbg !13837
  br label %if.end22, !dbg !13838

if.end22:                                         ; preds = %if.then18, %for.body14
  %14 = load i8, i8* %send_data, align 1, !dbg !13839
  %15 = load i64, i64* %io_port.addr, align 8, !dbg !13840
  %add23 = add i64 %15, 214, !dbg !13841
  %conv24 = trunc i64 %add23 to i32, !dbg !13840
  call void @outb(i8 zeroext %14, i32 %conv24) #11, !dbg !13842
  %16 = load i64, i64* %io_port.addr, align 8, !dbg !13843
  call void @trms1040_wait_30us(i64 %16) #11, !dbg !13844
  %17 = load i8, i8* %send_data, align 1, !dbg !13845
  %conv25 = zext i8 %17 to i32, !dbg !13845
  %or26 = or i32 %conv25, 2, !dbg !13846
  %conv27 = trunc i32 %or26 to i8, !dbg !13847
  %18 = load i64, i64* %io_port.addr, align 8, !dbg !13848
  %add28 = add i64 %18, 214, !dbg !13849
  %conv29 = trunc i64 %add28 to i32, !dbg !13848
  call void @outb(i8 zeroext %conv27, i32 %conv29) #11, !dbg !13850
  %19 = load i64, i64* %io_port.addr, align 8, !dbg !13851
  call void @trms1040_wait_30us(i64 %19) #11, !dbg !13852
  br label %for.inc30, !dbg !13853

for.inc30:                                        ; preds = %if.end22
  %20 = load i32, i32* %i, align 4, !dbg !13854
  %inc31 = add i32 %20, 1, !dbg !13854
  store i32 %inc31, i32* %i, align 4, !dbg !13854
  %21 = load i8, i8* %addr.addr, align 1, !dbg !13855
  %conv32 = zext i8 %21 to i32, !dbg !13855
  %shl33 = shl i32 %conv32, 1, !dbg !13855
  %conv34 = trunc i32 %shl33 to i8, !dbg !13855
  store i8 %conv34, i8* %addr.addr, align 1, !dbg !13855
  br label %for.cond11, !dbg !13856, !llvm.loop !13857

for.end35:                                        ; preds = %for.cond11
  %22 = load i64, i64* %io_port.addr, align 8, !dbg !13859
  %add36 = add i64 %22, 214, !dbg !13860
  %conv37 = trunc i64 %add36 to i32, !dbg !13859
  call void @outb(i8 zeroext 1, i32 %conv37) #11, !dbg !13861
  %23 = load i64, i64* %io_port.addr, align 8, !dbg !13862
  call void @trms1040_wait_30us(i64 %23) #11, !dbg !13863
  ret void, !dbg !13864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trms1040_wait_30us(i64 %io_port) #2 !dbg !13865 {
entry:
  %io_port.addr = alloca i64, align 8
  store i64 %io_port, i64* %io_port.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %io_port.addr, metadata !13866, metadata !DIExpression()), !dbg !13867
  %0 = load i64, i64* %io_port.addr, align 8, !dbg !13868
  %add = add i64 %0, 219, !dbg !13869
  %conv = trunc i64 %add to i32, !dbg !13868
  call void @outb(i8 zeroext 5, i32 %conv) #11, !dbg !13870
  br label %while.cond, !dbg !13871

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i64, i64* %io_port.addr, align 8, !dbg !13872
  %add1 = add i64 %1, 213, !dbg !13873
  %conv2 = trunc i64 %add1 to i32, !dbg !13872
  %call = call zeroext i8 @inb(i32 %conv2) #11, !dbg !13874
  %conv3 = zext i8 %call to i32, !dbg !13874
  %and = and i32 %conv3, 128, !dbg !13875
  %tobool = icmp ne i32 %and, 0, !dbg !13876
  %lnot = xor i1 %tobool, true, !dbg !13876
  br i1 %lnot, label %while.body, label %while.end, !dbg !13871

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !13871, !llvm.loop !13877

while.end:                                        ; preds = %while.cond
  ret void, !dbg !13879
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @delay_to_eeprom_index(i32 %delay) #2 !dbg !13880 {
entry:
  %delay.addr = alloca i32, align 4
  %idx = alloca i8, align 1
  store i32 %delay, i32* %delay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %delay.addr, metadata !13881, metadata !DIExpression()), !dbg !13882
  call void @llvm.dbg.declare(metadata i8* %idx, metadata !13883, metadata !DIExpression()), !dbg !13884
  store i8 0, i8* %idx, align 1, !dbg !13884
  br label %while.cond, !dbg !13885

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8, i8* %idx, align 1, !dbg !13886
  %conv = zext i8 %0 to i32, !dbg !13886
  %cmp = icmp slt i32 %conv, 7, !dbg !13887
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !13888

land.rhs:                                         ; preds = %while.cond
  %1 = load i8, i8* %idx, align 1, !dbg !13889
  %idxprom = zext i8 %1 to i64, !dbg !13890
  %arrayidx = getelementptr [8 x i8], [8 x i8]* @eeprom_index_to_delay_map, i64 0, i64 %idxprom, !dbg !13890
  %2 = load i8, i8* %arrayidx, align 1, !dbg !13890
  %conv2 = sext i8 %2 to i32, !dbg !13890
  %3 = load i32, i32* %delay.addr, align 4, !dbg !13891
  %cmp3 = icmp slt i32 %conv2, %3, !dbg !13892
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ], !dbg !13893
  br i1 %4, label %while.body, label %while.end, !dbg !13885

while.body:                                       ; preds = %land.end
  %5 = load i8, i8* %idx, align 1, !dbg !13894
  %inc = add i8 %5, 1, !dbg !13894
  store i8 %inc, i8* %idx, align 1, !dbg !13894
  br label %while.cond, !dbg !13885, !llvm.loop !13895

while.end:                                        ; preds = %land.end
  %6 = load i8, i8* %idx, align 1, !dbg !13896
  %conv5 = zext i8 %6 to i32, !dbg !13896
  ret i32 %conv5, !dbg !13897
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trms1040_set_data(i64 %io_port, i8 zeroext %addr, i8 zeroext %byte) #2 !dbg !13898 {
entry:
  %io_port.addr = alloca i64, align 8
  %addr.addr = alloca i8, align 1
  %byte.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %send_data = alloca i8, align 1
  store i64 %io_port, i64* %io_port.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %io_port.addr, metadata !13899, metadata !DIExpression()), !dbg !13900
  store i8 %addr, i8* %addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %addr.addr, metadata !13901, metadata !DIExpression()), !dbg !13902
  store i8 %byte, i8* %byte.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %byte.addr, metadata !13903, metadata !DIExpression()), !dbg !13904
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13905, metadata !DIExpression()), !dbg !13906
  call void @llvm.dbg.declare(metadata i8* %send_data, metadata !13907, metadata !DIExpression()), !dbg !13908
  %0 = load i64, i64* %io_port.addr, align 8, !dbg !13909
  %1 = load i8, i8* %addr.addr, align 1, !dbg !13910
  call void @trms1040_write_cmd(i64 %0, i8 zeroext 5, i8 zeroext %1) #11, !dbg !13911
  store i32 0, i32* %i, align 4, !dbg !13912
  br label %for.cond, !dbg !13914

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !13915
  %cmp = icmp slt i32 %2, 8, !dbg !13917
  br i1 %cmp, label %for.body, label %for.end, !dbg !13918

for.body:                                         ; preds = %for.cond
  store i8 1, i8* %send_data, align 1, !dbg !13919
  %3 = load i8, i8* %byte.addr, align 1, !dbg !13921
  %conv = zext i8 %3 to i32, !dbg !13921
  %and = and i32 %conv, 128, !dbg !13923
  %tobool = icmp ne i32 %and, 0, !dbg !13923
  br i1 %tobool, label %if.then, label %if.end, !dbg !13924

if.then:                                          ; preds = %for.body
  %4 = load i8, i8* %send_data, align 1, !dbg !13925
  %conv1 = zext i8 %4 to i32, !dbg !13925
  %or = or i32 %conv1, 8, !dbg !13925
  %conv2 = trunc i32 %or to i8, !dbg !13925
  store i8 %conv2, i8* %send_data, align 1, !dbg !13925
  br label %if.end, !dbg !13926

if.end:                                           ; preds = %if.then, %for.body
  %5 = load i8, i8* %send_data, align 1, !dbg !13927
  %6 = load i64, i64* %io_port.addr, align 8, !dbg !13928
  %add = add i64 %6, 214, !dbg !13929
  %conv3 = trunc i64 %add to i32, !dbg !13928
  call void @outb(i8 zeroext %5, i32 %conv3) #11, !dbg !13930
  %7 = load i64, i64* %io_port.addr, align 8, !dbg !13931
  call void @trms1040_wait_30us(i64 %7) #11, !dbg !13932
  %8 = load i8, i8* %send_data, align 1, !dbg !13933
  %conv4 = zext i8 %8 to i32, !dbg !13933
  %or5 = or i32 %conv4, 2, !dbg !13934
  %conv6 = trunc i32 %or5 to i8, !dbg !13935
  %9 = load i64, i64* %io_port.addr, align 8, !dbg !13936
  %add7 = add i64 %9, 214, !dbg !13937
  %conv8 = trunc i64 %add7 to i32, !dbg !13936
  call void @outb(i8 zeroext %conv6, i32 %conv8) #11, !dbg !13938
  %10 = load i64, i64* %io_port.addr, align 8, !dbg !13939
  call void @trms1040_wait_30us(i64 %10) #11, !dbg !13940
  br label %for.inc, !dbg !13941

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !13942
  %inc = add i32 %11, 1, !dbg !13942
  store i32 %inc, i32* %i, align 4, !dbg !13942
  %12 = load i8, i8* %byte.addr, align 1, !dbg !13943
  %conv9 = zext i8 %12 to i32, !dbg !13943
  %shl = shl i32 %conv9, 1, !dbg !13943
  %conv10 = trunc i32 %shl to i8, !dbg !13943
  store i8 %conv10, i8* %byte.addr, align 1, !dbg !13943
  br label %for.cond, !dbg !13944, !llvm.loop !13945

for.end:                                          ; preds = %for.cond
  %13 = load i64, i64* %io_port.addr, align 8, !dbg !13947
  %add11 = add i64 %13, 214, !dbg !13948
  %conv12 = trunc i64 %add11 to i32, !dbg !13947
  call void @outb(i8 zeroext 1, i32 %conv12) #11, !dbg !13949
  %14 = load i64, i64* %io_port.addr, align 8, !dbg !13950
  call void @trms1040_wait_30us(i64 %14) #11, !dbg !13951
  %15 = load i64, i64* %io_port.addr, align 8, !dbg !13952
  %add13 = add i64 %15, 214, !dbg !13953
  %conv14 = trunc i64 %add13 to i32, !dbg !13952
  call void @outb(i8 zeroext 0, i32 %conv14) #11, !dbg !13954
  %16 = load i64, i64* %io_port.addr, align 8, !dbg !13955
  call void @trms1040_wait_30us(i64 %16) #11, !dbg !13956
  %17 = load i64, i64* %io_port.addr, align 8, !dbg !13957
  %add15 = add i64 %17, 214, !dbg !13958
  %conv16 = trunc i64 %add15 to i32, !dbg !13957
  call void @outb(i8 zeroext 1, i32 %conv16) #11, !dbg !13959
  %18 = load i64, i64* %io_port.addr, align 8, !dbg !13960
  call void @trms1040_wait_30us(i64 %18) #11, !dbg !13961
  br label %while.body, !dbg !13962

while.body:                                       ; preds = %for.end, %if.end27
  %19 = load i64, i64* %io_port.addr, align 8, !dbg !13963
  %add17 = add i64 %19, 214, !dbg !13965
  %conv18 = trunc i64 %add17 to i32, !dbg !13963
  call void @outb(i8 zeroext 3, i32 %conv18) #11, !dbg !13966
  %20 = load i64, i64* %io_port.addr, align 8, !dbg !13967
  call void @trms1040_wait_30us(i64 %20) #11, !dbg !13968
  %21 = load i64, i64* %io_port.addr, align 8, !dbg !13969
  %add19 = add i64 %21, 214, !dbg !13970
  %conv20 = trunc i64 %add19 to i32, !dbg !13969
  call void @outb(i8 zeroext 1, i32 %conv20) #11, !dbg !13971
  %22 = load i64, i64* %io_port.addr, align 8, !dbg !13972
  call void @trms1040_wait_30us(i64 %22) #11, !dbg !13973
  %23 = load i64, i64* %io_port.addr, align 8, !dbg !13974
  %add21 = add i64 %23, 214, !dbg !13976
  %conv22 = trunc i64 %add21 to i32, !dbg !13974
  %call = call zeroext i8 @inb(i32 %conv22) #11, !dbg !13977
  %conv23 = zext i8 %call to i32, !dbg !13977
  %and24 = and i32 %conv23, 4, !dbg !13978
  %tobool25 = icmp ne i32 %and24, 0, !dbg !13978
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !13979

if.then26:                                        ; preds = %while.body
  br label %while.end, !dbg !13980

if.end27:                                         ; preds = %while.body
  br label %while.body, !dbg !13962, !llvm.loop !13981

while.end:                                        ; preds = %if.then26
  %24 = load i64, i64* %io_port.addr, align 8, !dbg !13983
  %add28 = add i64 %24, 214, !dbg !13984
  %conv29 = trunc i64 %add28 to i32, !dbg !13983
  call void @outb(i8 zeroext 0, i32 %conv29) #11, !dbg !13985
  ret void, !dbg !13986
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @waiting_timeout(%struct.timer_list* %t) #2 !dbg !13987 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !6115, metadata !DIExpression()), !dbg !13988
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6122, metadata !DIExpression()), !dbg !13990
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6124, metadata !DIExpression()), !dbg !13991
  %t.addr = alloca %struct.timer_list*, align 8
  %flags = alloca i64, align 8
  %acb = alloca %struct.AdapterCtlBlk*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.AdapterCtlBlk*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp5 = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !13998, metadata !DIExpression()), !dbg !13999
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14000, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb, metadata !14002, metadata !DIExpression()), !dbg !14003
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14004, metadata !DIExpression()), !dbg !14006
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !14006
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !14006
  store i8* %1, i8** %__mptr, align 8, !dbg !14006
  br label %do.body, !dbg !14006

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14007

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14006
  %add.ptr = getelementptr i8, i8* %2, i64 -80, !dbg !14006
  %3 = bitcast i8* %add.ptr to %struct.AdapterCtlBlk*, !dbg !14006
  store %struct.AdapterCtlBlk* %3, %struct.AdapterCtlBlk** %tmp, align 8, !dbg !14007
  %4 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %tmp, align 8, !dbg !14006
  store %struct.AdapterCtlBlk* %4, %struct.AdapterCtlBlk** %acb, align 8, !dbg !14003
  br label %do.body1, !dbg !14009

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !14010

do.end2:                                          ; preds = %do.body1
  br label %do.body3, !dbg !14012

do.body3:                                         ; preds = %do.end2
  br label %do.body4, !dbg !14013

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14014, metadata !DIExpression()), !dbg !14016
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14017, metadata !DIExpression()), !dbg !14016
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14016
  %conv = zext i1 %cmp to i32, !dbg !14016
  store i32 1, i32* %tmp5, align 4, !dbg !14016
  %5 = load i32, i32* %tmp5, align 4, !dbg !14016
  br label %do.body6, !dbg !14018

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !14019

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !14020

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !14022, metadata !DIExpression()), !dbg !14025
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !14026, metadata !DIExpression()), !dbg !14025
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !14025
  %conv12 = zext i1 %cmp11 to i32, !dbg !14025
  store i32 1, i32* %tmp13, align 4, !dbg !14025
  %6 = load i32, i32* %tmp13, align 4, !dbg !14025
  %call = call i64 @arch_local_irq_save() #11, !dbg !14027
  store i64 %call, i64* %flags, align 8, !dbg !14027
  br label %do.end14, !dbg !14027

do.end14:                                         ; preds = %do.body8
  br label %do.end15, !dbg !14020

do.end15:                                         ; preds = %do.end14
  br label %do.body16, !dbg !14019

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !14028, !srcloc !14029
  br label %do.body17, !dbg !14028

do.body17:                                        ; preds = %do.body16
  %7 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !14030
  %scsi_host = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %7, i32 0, i32 0, !dbg !14030
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 8, !dbg !14030
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 4, !dbg !14030
  %9 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !14030
  store %struct.spinlock* %9, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14031
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !14032
  %rlock.i = bitcast %union.anon.2* %11 to %struct.raw_spinlock*, !dbg !14032
  br label %do.end19, !dbg !14030

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !14028

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !14019

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !14018

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !14013

do.end23:                                         ; preds = %do.end22
  %12 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !14033
  call void @waiting_process_next(%struct.AdapterCtlBlk* %12) #11, !dbg !14034
  %13 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb, align 8, !dbg !14035
  %scsi_host24 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %13, i32 0, i32 0, !dbg !14035
  %14 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host24, align 8, !dbg !14035
  %host_lock25 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %14, i32 0, i32 4, !dbg !14035
  %15 = load %struct.spinlock*, %struct.spinlock** %host_lock25, align 8, !dbg !14035
  %16 = load i64, i64* %flags, align 8, !dbg !14035
  store %struct.spinlock* %15, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !216, metadata !6182, metadata !DIExpression()) #6, !dbg !14036
  call void @llvm.dbg.declare(metadata !216, metadata !6186, metadata !DIExpression()) #6, !dbg !14036
  store i32 1, i32* %tmp.i, align 4, !dbg !14036
  %17 = load i32, i32* %tmp.i, align 4, !dbg !14036
  call void @llvm.dbg.declare(metadata !216, metadata !6187, metadata !DIExpression()) #6, !dbg !14037
  call void @llvm.dbg.declare(metadata !216, metadata !6193, metadata !DIExpression()) #6, !dbg !14037
  store i32 1, i32* %tmp8.i, align 4, !dbg !14037
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !14037
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !14038
  call void @arch_local_irq_restore(i64 %19) #13, !dbg !14038
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !14039, !srcloc !6197
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !14040
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !14040
  %rlock.i27 = bitcast %union.anon.2* %21 to %struct.raw_spinlock*, !dbg !14040
  ret void, !dbg !14041
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_add_host_with_dma(%struct.Scsi_Host*, %struct.device*, %struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !14042 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14045, metadata !DIExpression()), !dbg !14046
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !14047, metadata !DIExpression()), !dbg !14048
  %0 = load i8*, i8** %data.addr, align 8, !dbg !14049
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14050
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !14051
  store i8* %0, i8** %driver_data, align 8, !dbg !14052
  ret void, !dbg !14053
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @adapter_uninit_chip(%struct.AdapterCtlBlk* %acb) #2 !dbg !14054 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !14055, metadata !DIExpression()), !dbg !14056
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !14057
  %io_port_base = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 1, !dbg !14057
  %1 = load i64, i64* %io_port_base, align 8, !dbg !14057
  %add = add i64 %1, 164, !dbg !14057
  %conv = trunc i64 %add to i32, !dbg !14057
  call void @outb(i8 zeroext 0, i32 %conv) #11, !dbg !14057
  %2 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !14058
  %io_port_base1 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %2, i32 0, i32 1, !dbg !14058
  %3 = load i64, i64* %io_port_base1, align 8, !dbg !14058
  %add2 = add i64 %3, 140, !dbg !14058
  %conv3 = trunc i64 %add2 to i32, !dbg !14058
  call void @outb(i8 zeroext 0, i32 %conv3) #11, !dbg !14058
  %4 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !14059
  %config = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %4, i32 0, i32 17, !dbg !14061
  %5 = load i8, i8* %config, align 1, !dbg !14061
  %conv4 = zext i8 %5 to i32, !dbg !14059
  %and = and i32 %conv4, 16, !dbg !14062
  %tobool = icmp ne i32 %and, 0, !dbg !14062
  br i1 %tobool, label %if.then, label %if.end, !dbg !14063

if.then:                                          ; preds = %entry
  %6 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !14064
  call void @reset_scsi_bus(%struct.AdapterCtlBlk* %6) #11, !dbg !14065
  br label %if.end, !dbg !14065

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !14066
  %io_port_base5 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %7, i32 0, i32 1, !dbg !14066
  %8 = load i64, i64* %io_port_base5, align 8, !dbg !14066
  %add6 = add i64 %8, 132, !dbg !14066
  %conv7 = trunc i64 %add6 to i32, !dbg !14066
  %call = call zeroext i8 @inb(i32 %conv7) #11, !dbg !14066
  ret void, !dbg !14067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @adapter_remove_and_free_all_devices(%struct.AdapterCtlBlk* %acb) #2 !dbg !14068 {
entry:
  %acb.addr = alloca %struct.AdapterCtlBlk*, align 8
  %dcb = alloca %struct.DeviceCtlBlk*, align 8
  %tmp = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr = alloca i8*, align 8
  %tmp3 = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp8 = alloca %struct.DeviceCtlBlk*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp17 = alloca %struct.DeviceCtlBlk*, align 8
  store %struct.AdapterCtlBlk* %acb, %struct.AdapterCtlBlk** %acb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AdapterCtlBlk** %acb.addr, metadata !14069, metadata !DIExpression()), !dbg !14070
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %dcb, metadata !14071, metadata !DIExpression()), !dbg !14072
  call void @llvm.dbg.declare(metadata %struct.DeviceCtlBlk** %tmp, metadata !14073, metadata !DIExpression()), !dbg !14074
  br label %do.body, !dbg !14075

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14076

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14078, metadata !DIExpression()), !dbg !14081
  %0 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !14081
  %dcb_list = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %0, i32 0, i32 3, !dbg !14081
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %dcb_list, i32 0, i32 0, !dbg !14081
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14081
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !14081
  store i8* %2, i8** %__mptr, align 8, !dbg !14081
  br label %do.body1, !dbg !14081

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !14082

do.end2:                                          ; preds = %do.body1
  %3 = load i8*, i8** %__mptr, align 8, !dbg !14081
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !14081
  %4 = bitcast i8* %add.ptr to %struct.DeviceCtlBlk*, !dbg !14081
  store %struct.DeviceCtlBlk* %4, %struct.DeviceCtlBlk** %tmp3, align 8, !dbg !14082
  %5 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp3, align 8, !dbg !14081
  store %struct.DeviceCtlBlk* %5, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !14084
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !14085, metadata !DIExpression()), !dbg !14087
  %6 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !14087
  %list = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %6, i32 0, i32 0, !dbg !14087
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !14087
  %7 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !14087
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !14087
  store i8* %8, i8** %__mptr4, align 8, !dbg !14087
  br label %do.body6, !dbg !14087

do.body6:                                         ; preds = %do.end2
  br label %do.end7, !dbg !14088

do.end7:                                          ; preds = %do.body6
  %9 = load i8*, i8** %__mptr4, align 8, !dbg !14087
  %add.ptr9 = getelementptr i8, i8* %9, i64 0, !dbg !14087
  %10 = bitcast i8* %add.ptr9 to %struct.DeviceCtlBlk*, !dbg !14087
  store %struct.DeviceCtlBlk* %10, %struct.DeviceCtlBlk** %tmp8, align 8, !dbg !14088
  %11 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp8, align 8, !dbg !14087
  store %struct.DeviceCtlBlk* %11, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !14084
  br label %for.cond, !dbg !14084

for.cond:                                         ; preds = %do.end16, %do.end7
  %12 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !14090
  %list10 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %12, i32 0, i32 0, !dbg !14090
  %13 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !14090
  %dcb_list11 = getelementptr inbounds %struct.AdapterCtlBlk, %struct.AdapterCtlBlk* %13, i32 0, i32 3, !dbg !14090
  %cmp = icmp eq %struct.list_head* %list10, %dcb_list11, !dbg !14090
  %lnot = xor i1 %cmp, true, !dbg !14090
  br i1 %lnot, label %for.body, label %for.end, !dbg !14084

for.body:                                         ; preds = %for.cond
  %14 = load %struct.AdapterCtlBlk*, %struct.AdapterCtlBlk** %acb.addr, align 8, !dbg !14092
  %15 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !14093
  call void @adapter_remove_and_free_device(%struct.AdapterCtlBlk* %14, %struct.DeviceCtlBlk* %15) #11, !dbg !14094
  br label %for.inc, !dbg !14094

for.inc:                                          ; preds = %for.body
  %16 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !14090
  store %struct.DeviceCtlBlk* %16, %struct.DeviceCtlBlk** %dcb, align 8, !dbg !14090
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !14095, metadata !DIExpression()), !dbg !14097
  %17 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !14097
  %list13 = getelementptr inbounds %struct.DeviceCtlBlk, %struct.DeviceCtlBlk* %17, i32 0, i32 0, !dbg !14097
  %next14 = getelementptr inbounds %struct.list_head, %struct.list_head* %list13, i32 0, i32 0, !dbg !14097
  %18 = load %struct.list_head*, %struct.list_head** %next14, align 8, !dbg !14097
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !14097
  store i8* %19, i8** %__mptr12, align 8, !dbg !14097
  br label %do.body15, !dbg !14097

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !14098

do.end16:                                         ; preds = %do.body15
  %20 = load i8*, i8** %__mptr12, align 8, !dbg !14097
  %add.ptr18 = getelementptr i8, i8* %20, i64 0, !dbg !14097
  %21 = bitcast i8* %add.ptr18 to %struct.DeviceCtlBlk*, !dbg !14097
  store %struct.DeviceCtlBlk* %21, %struct.DeviceCtlBlk** %tmp17, align 8, !dbg !14098
  %22 = load %struct.DeviceCtlBlk*, %struct.DeviceCtlBlk** %tmp17, align 8, !dbg !14097
  store %struct.DeviceCtlBlk* %22, %struct.DeviceCtlBlk** %tmp, align 8, !dbg !14090
  br label %for.cond, !dbg !14090, !llvm.loop !14100

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14102
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #2 !dbg !14103 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !14106, metadata !DIExpression()), !dbg !14107
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !14108
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !14109
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !14110
  ret i8* %call, !dbg !14111
}

; Function Attrs: noredzone
declare dso_local void @scsi_remove_host(%struct.Scsi_Host*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !14112 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14115, metadata !DIExpression()), !dbg !14116
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14117
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !14118
  %1 = load i8*, i8** %driver_data, align 8, !dbg !14118
  ret i8* %1, !dbg !14119
}

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone willreturn }
attributes #8 = { nounwind willreturn }
attributes #9 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind willreturn }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!5856}
!llvm.module.flags = !{!5857, !5858, !5859, !5860}
!llvm.ident = !{!5861}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_safe", scope: !2, file: !3, line: 549, type: !5823, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !181, globals: !5638, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/scsi/dc395x.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !42, !48, !55, !59, !66, !71, !78, !84, !93, !101, !107, !113, !120, !127, !135, !146, !153, !163, !168, !175}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !31, line: 49, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36, !37, !38, !39, !40, !41}
!33 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!39 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!40 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!41 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !43, line: 118, baseType: !7, size: 32, elements: !44)
!43 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!44 = !{!45, !46, !47}
!45 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!46 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!47 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !49, line: 19, baseType: !7, size: 32, elements: !50)
!49 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!50 = !{!51, !52, !53, !54}
!51 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!52 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!53 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!54 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_eh_timer_return", file: !43, line: 293, baseType: !7, size: 32, elements: !56)
!56 = !{!57, !58}
!57 = !DIEnumerator(name: "BLK_EH_DONE", value: 0, isUnsigned: true)
!58 = !DIEnumerator(name: "BLK_EH_RESET_TIMER", value: 1, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !60, line: 502, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65}
!62 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !43, line: 315, baseType: !7, size: 32, elements: !67)
!67 = !{!68, !69, !70}
!68 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!69 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!70 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !72, line: 59, baseType: !7, size: 32, elements: !73)
!72 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!73 = !{!74, !75, !76, !77}
!74 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!76 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!77 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !79, line: 54, baseType: !7, size: 32, elements: !80)
!79 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!80 = !{!81, !82, !83}
!81 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!82 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !85, line: 296, baseType: !7, size: 32, elements: !86)
!85 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!86 = !{!87, !88, !89, !90, !91, !92}
!87 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!90 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!91 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!92 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !94, line: 9, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100}
!96 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !102, line: 26, baseType: !7, size: 32, elements: !103)
!102 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!103 = !{!104, !105, !106}
!104 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !108, line: 44, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111, !112}
!110 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !114, line: 343, baseType: !7, size: 32, elements: !115)
!114 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!115 = !{!116, !117, !118, !119}
!116 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!117 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!118 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!119 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !60, line: 524, baseType: !7, size: 32, elements: !121)
!121 = !{!122, !123, !124, !125, !126}
!122 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!124 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!125 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!126 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_target_state", file: !128, line: 276, baseType: !7, size: 32, elements: !129)
!128 = !DIFile(filename: "./include/scsi/scsi_device.h", directory: "/home/lizy2001/genbc/linux")
!129 = !{!130, !131, !132, !133, !134}
!130 = !DIEnumerator(name: "STARGET_CREATED", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "STARGET_RUNNING", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "STARGET_REMOVE", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "STARGET_CREATED_REMOVE", value: 4, isUnsigned: true)
!134 = !DIEnumerator(name: "STARGET_DEL", value: 5, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_device_state", file: !128, line: 36, baseType: !7, size: 32, elements: !136)
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145}
!137 = !DIEnumerator(name: "SDEV_CREATED", value: 1, isUnsigned: true)
!138 = !DIEnumerator(name: "SDEV_RUNNING", value: 2, isUnsigned: true)
!139 = !DIEnumerator(name: "SDEV_CANCEL", value: 3, isUnsigned: true)
!140 = !DIEnumerator(name: "SDEV_DEL", value: 4, isUnsigned: true)
!141 = !DIEnumerator(name: "SDEV_QUIESCE", value: 5, isUnsigned: true)
!142 = !DIEnumerator(name: "SDEV_OFFLINE", value: 6, isUnsigned: true)
!143 = !DIEnumerator(name: "SDEV_TRANSPORT_OFFLINE", value: 7, isUnsigned: true)
!144 = !DIEnumerator(name: "SDEV_BLOCK", value: 8, isUnsigned: true)
!145 = !DIEnumerator(name: "SDEV_CREATED_BLOCK", value: 9, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !147, line: 5, baseType: !7, size: 32, elements: !148)
!147 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!148 = !{!149, !150, !151, !152}
!149 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!152 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_host_state", file: !154, line: 514, baseType: !7, size: 32, elements: !155)
!154 = !DIFile(filename: "./include/scsi/scsi_host.h", directory: "/home/lizy2001/genbc/linux")
!155 = !{!156, !157, !158, !159, !160, !161, !162}
!156 = !DIEnumerator(name: "SHOST_CREATED", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "SHOST_RUNNING", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "SHOST_CANCEL", value: 3, isUnsigned: true)
!159 = !DIEnumerator(name: "SHOST_DEL", value: 4, isUnsigned: true)
!160 = !DIEnumerator(name: "SHOST_RECOVERY", value: 5, isUnsigned: true)
!161 = !DIEnumerator(name: "SHOST_CANCEL_RECOVERY", value: 6, isUnsigned: true)
!162 = !DIEnumerator(name: "SHOST_DEL_RECOVERY", value: 7, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !164, line: 10, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!165 = !{!166, !167}
!166 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !169, line: 305, baseType: !7, size: 32, elements: !170)
!169 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!170 = !{!171, !172, !173, !174}
!171 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !176, line: 11, baseType: !7, size: 32, elements: !177)
!176 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!177 = !{!178, !179, !180}
!178 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!181 = !{!182, !185, !256, !248, !410, !5612, !5234, !5615, !250, !3859, !526, !5226, !5616, !918, !254, !5619, !267, !502, !189, !5620, !671, !5637, !4171}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !184, line: 76, flags: DIFlagFwdDecl)
!184 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AdapterCtlBlk", file: !3, line: 295, size: 88768, elements: !187)
!187 = !{!188, !5222, !5223, !5224, !5225, !5279, !5280, !5281, !5282, !5283, !5284, !5285, !5286, !5287, !5288, !5289, !5290, !5291, !5292, !5293, !5294, !5295, !5297, !5300, !5577, !5578, !5582, !5583}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_host", scope: !186, file: !3, line: 296, baseType: !189, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 64)
!190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scsi_Host", file: !154, line: 524, size: 16256, elements: !191)
!191 = !{!192, !199, !200, !201, !217, !219, !237, !238, !4801, !4802, !4803, !5168, !5171, !5172, !5173, !5174, !5175, !5176, !5177, !5178, !5179, !5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5192, !5193, !5194, !5195, !5196, !5197, !5198, !5199, !5200, !5201, !5202, !5203, !5204, !5206, !5207, !5208, !5209, !5210, !5211, !5212, !5213, !5214, !5215, !5216, !5217, !5218, !5219, !5220, !5221}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "__devices", scope: !190, file: !154, line: 533, baseType: !193, size: 128)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !194, line: 178, size: 128, elements: !195)
!194 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!195 = !{!196, !198}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !193, file: !194, line: 179, baseType: !197, size: 64)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !193, file: !194, line: 179, baseType: !197, size: 64, offset: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "__targets", scope: !190, file: !154, line: 534, baseType: !193, size: 128, offset: 128)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "starved_list", scope: !190, file: !154, line: 536, baseType: !193, size: 128, offset: 256)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "default_lock", scope: !190, file: !154, line: 538, baseType: !202, offset: 384)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !203, line: 83, baseType: !204)
!203 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !203, line: 71, elements: !205)
!205 = !{!206}
!206 = !DIDerivedType(tag: DW_TAG_member, scope: !204, file: !203, line: 72, baseType: !207)
!207 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !204, file: !203, line: 72, elements: !208)
!208 = !{!209}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !207, file: !203, line: 73, baseType: !210)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !203, line: 20, elements: !211)
!211 = !{!212}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !210, file: !203, line: 21, baseType: !213)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !214, line: 25, baseType: !215)
!214 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !214, line: 25, elements: !216)
!216 = !{}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "host_lock", scope: !190, file: !154, line: 539, baseType: !218, size: 64, offset: 384)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "scan_mutex", scope: !190, file: !154, line: 541, baseType: !220, size: 192, offset: 448)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !221, line: 53, size: 192, elements: !222)
!221 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!222 = !{!223, !235, !236}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !220, file: !221, line: 54, baseType: !224, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !225, line: 13, baseType: !226)
!225 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !194, line: 175, baseType: !227)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !194, line: 173, size: 64, elements: !228)
!228 = !{!229}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !227, file: !194, line: 174, baseType: !230, size: 64)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !231, line: 22, baseType: !232)
!231 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !233, line: 30, baseType: !234)
!233 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!234 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !220, file: !221, line: 55, baseType: !202, offset: 64)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !220, file: !221, line: 59, baseType: !193, size: 128, offset: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "eh_cmd_q", scope: !190, file: !154, line: 543, baseType: !193, size: 128, offset: 640)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "ehandler", scope: !190, file: !154, line: 544, baseType: !239, size: 64, offset: 768)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !241, line: 640, size: 48640, elements: !242)
!241 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!242 = !{!243, !252, !255, !257, !268, !269, !270, !271, !272, !273, !274, !275, !279, !307, !319, !419, !420, !421, !432, !433, !435, !436, !4134, !4135, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4212, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4227, !4228, !4229, !4231, !4232, !4233, !4234, !4235, !4236, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4260, !4265, !4266, !4267, !4268, !4269, !4271, !4274, !4277, !4280, !4283, !4287, !4388, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4425, !4434, !4435, !4436, !4437, !4438, !4443, !4444, !4445, !4448, !4449, !4451, !4460, !4463, !4464, !4465, !4468, !4469, !4548, !4549, !4552, !4553, !4556, !4557, !4558, !4562, !4563, !4564, !4577, !4578, !4579, !4589, !4594, !4595, !4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !240, file: !241, line: 646, baseType: !244, size: 128)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !245, line: 56, size: 128, elements: !246)
!245 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!246 = !{!247, !249}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !244, file: !245, line: 57, baseType: !248, size: 64)
!248 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !244, file: !245, line: 58, baseType: !250, size: 32, offset: 64)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !231, line: 21, baseType: !251)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !233, line: 27, baseType: !7)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !240, file: !241, line: 649, baseType: !253, size: 64, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !254)
!254 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !240, file: !241, line: 657, baseType: !256, size: 64, offset: 192)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !240, file: !241, line: 658, baseType: !258, size: 32, offset: 256)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !259, line: 113, baseType: !260)
!259 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !259, line: 111, size: 32, elements: !261)
!261 = !{!262}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !260, file: !259, line: 112, baseType: !263, size: 32)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !194, line: 168, baseType: !264)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !194, line: 166, size: 32, elements: !265)
!265 = !{!266}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !264, file: !194, line: 167, baseType: !267, size: 32)
!267 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !240, file: !241, line: 660, baseType: !7, size: 32, offset: 288)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !240, file: !241, line: 661, baseType: !7, size: 32, offset: 320)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !240, file: !241, line: 684, baseType: !267, size: 32, offset: 352)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !240, file: !241, line: 686, baseType: !267, size: 32, offset: 384)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !240, file: !241, line: 687, baseType: !267, size: 32, offset: 416)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !240, file: !241, line: 688, baseType: !267, size: 32, offset: 448)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !240, file: !241, line: 689, baseType: !7, size: 32, offset: 480)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !240, file: !241, line: 691, baseType: !276, size: 64, offset: 512)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !278)
!278 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !241, line: 691, flags: DIFlagFwdDecl)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !240, file: !241, line: 692, baseType: !280, size: 832, offset: 576)
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !241, line: 451, size: 832, elements: !281)
!281 = !{!282, !287, !295, !296, !297, !301, !302, !303, !304, !305}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !280, file: !241, line: 453, baseType: !283, size: 128)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !241, line: 325, size: 128, elements: !284)
!284 = !{!285, !286}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !283, file: !241, line: 326, baseType: !248, size: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !283, file: !241, line: 327, baseType: !250, size: 32, offset: 64)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !280, file: !241, line: 454, baseType: !288, size: 192, align: 64, offset: 128)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !289, line: 24, size: 192, align: 64, elements: !290)
!289 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!290 = !{!291, !292, !294}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !288, file: !289, line: 25, baseType: !248, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !288, file: !289, line: 26, baseType: !293, size: 64, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !288, file: !289, line: 27, baseType: !293, size: 64, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !280, file: !241, line: 455, baseType: !193, size: 128, offset: 320)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !280, file: !241, line: 456, baseType: !7, size: 32, offset: 448)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !280, file: !241, line: 458, baseType: !298, size: 64, offset: 512)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !231, line: 23, baseType: !299)
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !233, line: 31, baseType: !300)
!300 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !280, file: !241, line: 459, baseType: !298, size: 64, offset: 576)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !280, file: !241, line: 460, baseType: !298, size: 64, offset: 640)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !280, file: !241, line: 461, baseType: !298, size: 64, offset: 704)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !280, file: !241, line: 463, baseType: !298, size: 64, offset: 768)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !280, file: !241, line: 465, baseType: !306, offset: 832)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !241, line: 415, elements: !216)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !240, file: !241, line: 693, baseType: !308, size: 384, offset: 1408)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !241, line: 489, size: 384, elements: !309)
!309 = !{!310, !311, !312, !313, !314, !316, !317}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !308, file: !241, line: 490, baseType: !193, size: 128)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !308, file: !241, line: 491, baseType: !248, size: 64, offset: 128)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !308, file: !241, line: 492, baseType: !248, size: 64, offset: 192)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !308, file: !241, line: 493, baseType: !7, size: 32, offset: 256)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !308, file: !241, line: 494, baseType: !315, size: 16, offset: 288)
!315 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !308, file: !241, line: 495, baseType: !315, size: 16, offset: 304)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !308, file: !241, line: 497, baseType: !318, size: 64, offset: 320)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !240, file: !241, line: 697, baseType: !320, size: 1792, offset: 1792)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !241, line: 507, size: 1792, elements: !321)
!321 = !{!322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !416, !417}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !320, file: !241, line: 508, baseType: !288, size: 192, align: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !320, file: !241, line: 515, baseType: !298, size: 64, offset: 192)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !320, file: !241, line: 516, baseType: !298, size: 64, offset: 256)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !320, file: !241, line: 517, baseType: !298, size: 64, offset: 320)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !320, file: !241, line: 518, baseType: !298, size: 64, offset: 384)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !320, file: !241, line: 519, baseType: !298, size: 64, offset: 448)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !320, file: !241, line: 526, baseType: !230, size: 64, offset: 512)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !320, file: !241, line: 527, baseType: !298, size: 64, offset: 576)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !320, file: !241, line: 528, baseType: !7, size: 32, offset: 640)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !320, file: !241, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !320, file: !241, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !320, file: !241, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !320, file: !241, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !320, file: !241, line: 563, baseType: !336, size: 512, offset: 704)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !337)
!337 = !{!338, !346, !347, !352, !409, !413, !414, !415}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !336, file: !20, line: 119, baseType: !339, size: 256)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !340, line: 9, size: 256, elements: !341)
!340 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!341 = !{!342, !343}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !339, file: !340, line: 10, baseType: !288, size: 192, align: 64)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !339, file: !340, line: 11, baseType: !344, size: 64, offset: 192)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !345, line: 29, baseType: !230)
!345 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!346 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !336, file: !20, line: 120, baseType: !344, size: 64, offset: 256)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !336, file: !20, line: 121, baseType: !348, size: 64, offset: 320)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = !DISubroutineType(types: !350)
!350 = !{!19, !351}
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !336, file: !20, line: 122, baseType: !353, size: 64, offset: 384)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !355)
!355 = !{!356, !377, !378, !382, !392, !393, !404, !408}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !354, file: !20, line: 160, baseType: !357, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !359)
!359 = !{!360, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !358, file: !20, line: 215, baseType: !361)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !203, line: 29, baseType: !210)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !358, file: !20, line: 216, baseType: !7, size: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !358, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !358, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !358, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !358, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !358, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !358, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !358, file: !20, line: 233, baseType: !344, size: 64, offset: 128)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !358, file: !20, line: 234, baseType: !351, size: 64, offset: 192)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !358, file: !20, line: 235, baseType: !344, size: 64, offset: 256)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !358, file: !20, line: 236, baseType: !351, size: 64, offset: 320)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !358, file: !20, line: 237, baseType: !374, size: 4096, offset: 512)
!374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !354, size: 4096, elements: !375)
!375 = !{!376}
!376 = !DISubrange(count: 8)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !354, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !354, file: !20, line: 162, baseType: !379, size: 32, offset: 96)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !194, line: 27, baseType: !380)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !381, line: 96, baseType: !267)
!381 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!382 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !354, file: !20, line: 163, baseType: !383, size: 32, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !384, line: 276, baseType: !385)
!384 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !384, line: 276, size: 32, elements: !386)
!386 = !{!387}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !385, file: !384, line: 276, baseType: !388, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !384, line: 70, baseType: !389)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !384, line: 65, size: 32, elements: !390)
!390 = !{!391}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !389, file: !384, line: 66, baseType: !7, size: 32)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !354, file: !20, line: 164, baseType: !351, size: 64, offset: 192)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !354, file: !20, line: 165, baseType: !394, size: 128, offset: 256)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !340, line: 14, size: 128, elements: !395)
!395 = !{!396}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !394, file: !340, line: 15, baseType: !397, size: 128)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !289, line: 125, size: 128, elements: !398)
!398 = !{!399, !403}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !397, file: !289, line: 126, baseType: !400, size: 64)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !289, line: 31, size: 64, elements: !401)
!401 = !{!402}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !400, file: !289, line: 32, baseType: !293, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !397, file: !289, line: 127, baseType: !293, size: 64, offset: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !354, file: !20, line: 166, baseType: !405, size: 64, offset: 384)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DISubroutineType(types: !407)
!407 = !{!344}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !354, file: !20, line: 167, baseType: !344, size: 64, offset: 448)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !336, file: !20, line: 123, baseType: !410, size: 8, offset: 448)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !231, line: 17, baseType: !411)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !233, line: 21, baseType: !412)
!412 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !336, file: !20, line: 124, baseType: !410, size: 8, offset: 456)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !336, file: !20, line: 125, baseType: !410, size: 8, offset: 464)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !336, file: !20, line: 126, baseType: !410, size: 8, offset: 472)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !320, file: !241, line: 572, baseType: !336, size: 512, offset: 1216)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !320, file: !241, line: 580, baseType: !418, size: 64, offset: 1728)
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !240, file: !241, line: 721, baseType: !7, size: 32, offset: 3584)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !240, file: !241, line: 722, baseType: !267, size: 32, offset: 3616)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !240, file: !241, line: 723, baseType: !422, size: 64, offset: 3648)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !424)
!424 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !425, line: 17, baseType: !426)
!425 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !425, line: 17, size: 64, elements: !427)
!427 = !{!428}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !426, file: !425, line: 17, baseType: !429, size: 64)
!429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 64, elements: !430)
!430 = !{!431}
!431 = !DISubrange(count: 1)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !240, file: !241, line: 724, baseType: !424, size: 64, offset: 3712)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !240, file: !241, line: 749, baseType: !434, offset: 3776)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !241, line: 290, elements: !216)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !240, file: !241, line: 751, baseType: !193, size: 128, offset: 3776)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !240, file: !241, line: 757, baseType: !437, size: 64, offset: 3904)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !439, line: 388, size: 7296, elements: !440)
!439 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!440 = !{!441, !4132}
!441 = !DIDerivedType(tag: DW_TAG_member, scope: !438, file: !439, line: 389, baseType: !442, size: 7296)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !438, file: !439, line: 389, size: 7296, elements: !443)
!443 = !{!444, !4007, !4008, !4009, !4010, !4011, !4012, !4013, !4014, !4021, !4022, !4023, !4024, !4025, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4055, !4061, !4064, !4103, !4104, !4116, !4117, !4120, !4121, !4122, !4125, !4126, !4127, !4130, !4131}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !442, file: !439, line: 390, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !439, line: 305, size: 1472, elements: !447)
!447 = !{!448, !449, !450, !451, !452, !453, !454, !455, !463, !464, !469, !470, !473, !4001, !4002, !4003, !4004, !4005}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !446, file: !439, line: 308, baseType: !248, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !446, file: !439, line: 309, baseType: !248, size: 64, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !446, file: !439, line: 313, baseType: !445, size: 64, offset: 128)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !446, file: !439, line: 313, baseType: !445, size: 64, offset: 192)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !446, file: !439, line: 315, baseType: !288, size: 192, align: 64, offset: 256)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !446, file: !439, line: 323, baseType: !248, size: 64, offset: 448)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !446, file: !439, line: 327, baseType: !437, size: 64, offset: 512)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !446, file: !439, line: 333, baseType: !456, size: 64, offset: 576)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !457, line: 284, baseType: !458)
!457 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !457, line: 284, size: 64, elements: !459)
!459 = !{!460}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !458, file: !457, line: 284, baseType: !461, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !462, line: 19, baseType: !248)
!462 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!463 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !446, file: !439, line: 334, baseType: !248, size: 64, offset: 640)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !446, file: !439, line: 343, baseType: !465, size: 256, offset: 704)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !446, file: !439, line: 340, size: 256, elements: !466)
!466 = !{!467, !468}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !465, file: !439, line: 341, baseType: !288, size: 192, align: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !465, file: !439, line: 342, baseType: !248, size: 64, offset: 192)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !446, file: !439, line: 351, baseType: !193, size: 128, offset: 960)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !446, file: !439, line: 353, baseType: !471, size: 64, offset: 1088)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !439, line: 353, flags: DIFlagFwdDecl)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !446, file: !439, line: 356, baseType: !474, size: 64, offset: 1152)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !476)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !477)
!477 = !{!478, !482, !483, !487, !491, !3975, !3979, !3983, !3987, !3988, !3989, !3993, !3997}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !476, file: !14, line: 558, baseType: !479, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = !DISubroutineType(types: !481)
!481 = !{null, !445}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !476, file: !14, line: 559, baseType: !479, size: 64, offset: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !476, file: !14, line: 560, baseType: !484, size: 64, offset: 128)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = !DISubroutineType(types: !486)
!486 = !{!267, !445, !248}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !476, file: !14, line: 561, baseType: !488, size: 64, offset: 192)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DISubroutineType(types: !490)
!490 = !{!267, !445}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !476, file: !14, line: 562, baseType: !492, size: 64, offset: 256)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DISubroutineType(types: !494)
!494 = !{!495, !496}
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !439, line: 682, baseType: !7)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !498)
!498 = !{!499, !500, !501, !503, !504, !505, !512, !519, !525, !3970, !3971, !3973, !3974}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !497, file: !14, line: 509, baseType: !445, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !497, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !497, file: !14, line: 511, baseType: !502, size: 32, offset: 96)
!502 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !194, line: 148, baseType: !7)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !497, file: !14, line: 512, baseType: !248, size: 64, offset: 128)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !497, file: !14, line: 513, baseType: !248, size: 64, offset: 192)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !497, file: !14, line: 514, baseType: !506, size: 64, offset: 256)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !457, line: 385, baseType: !508)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 385, size: 64, elements: !509)
!509 = !{!510}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !508, file: !457, line: 385, baseType: !511, size: 64)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !462, line: 15, baseType: !248)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !497, file: !14, line: 516, baseType: !513, size: 64, offset: 320)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !457, line: 359, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 359, size: 64, elements: !516)
!516 = !{!517}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !515, file: !457, line: 359, baseType: !518, size: 64)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !462, line: 16, baseType: !248)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !497, file: !14, line: 519, baseType: !520, size: 64, offset: 384)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !462, line: 21, baseType: !521)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !462, line: 21, size: 64, elements: !522)
!522 = !{!523}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !521, file: !462, line: 21, baseType: !524, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !462, line: 14, baseType: !248)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !497, file: !14, line: 521, baseType: !526, size: 64, offset: 448)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !439, line: 68, size: 512, align: 128, elements: !528)
!528 = !{!529, !530, !3962, !3969}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !527, file: !439, line: 69, baseType: !248, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, scope: !527, file: !439, line: 77, baseType: !531, size: 320, offset: 64)
!531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !527, file: !439, line: 77, size: 320, elements: !532)
!532 = !{!533, !3855, !3860, !3886, !3894, !3900, !3913, !3961}
!533 = !DIDerivedType(tag: DW_TAG_member, scope: !531, file: !439, line: 78, baseType: !534, size: 320)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !531, file: !439, line: 78, size: 320, elements: !535)
!535 = !{!536, !537, !3853, !3854}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !534, file: !439, line: 84, baseType: !193, size: 128)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !534, file: !439, line: 86, baseType: !538, size: 64, offset: 128)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !85, line: 451, size: 1216, align: 64, elements: !540)
!540 = !{!541, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3848, !3849, !3850, !3851, !3852}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !539, file: !85, line: 452, baseType: !542, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !85, line: 610, size: 4224, elements: !544)
!544 = !{!545, !547, !548, !556, !563, !564, !3674, !3675, !3676, !3677, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3717, !3725, !3726, !3727, !3737, !3738, !3739, !3740}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !543, file: !85, line: 611, baseType: !546, size: 16)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !194, line: 19, baseType: !315)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !543, file: !85, line: 612, baseType: !315, size: 16, offset: 16)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !543, file: !85, line: 613, baseType: !549, size: 32, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !550, line: 23, baseType: !551)
!550 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !550, line: 21, size: 32, elements: !552)
!552 = !{!553}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !551, file: !550, line: 22, baseType: !554, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !194, line: 32, baseType: !555)
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !381, line: 49, baseType: !7)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !543, file: !85, line: 614, baseType: !557, size: 32, offset: 64)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !550, line: 28, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !550, line: 26, size: 32, elements: !559)
!559 = !{!560}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !558, file: !550, line: 27, baseType: !561, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !194, line: 33, baseType: !562)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !381, line: 50, baseType: !7)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !543, file: !85, line: 615, baseType: !7, size: 32, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !543, file: !85, line: 622, baseType: !565, size: 64, offset: 128)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !567)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !85, line: 1864, size: 1536, align: 512, elements: !568)
!568 = !{!569, !3551, !3561, !3565, !3571, !3575, !3579, !3583, !3587, !3591, !3595, !3596, !3600, !3604, !3624, !3650, !3654, !3660, !3665, !3669, !3670}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !567, file: !85, line: 1865, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = !DISubroutineType(types: !572)
!572 = !{!573, !542, !573, !7}
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !575, line: 89, size: 1536, elements: !576)
!575 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!576 = !{!577, !578, !583, !591, !592, !607, !608, !612, !624, !698, !3535, !3536, !3537, !3543, !3544, !3545}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !574, file: !575, line: 91, baseType: !7, size: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !574, file: !575, line: 92, baseType: !579, size: 32, offset: 32)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !384, line: 277, baseType: !580)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !384, line: 277, size: 32, elements: !581)
!581 = !{!582}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !580, file: !384, line: 277, baseType: !388, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !574, file: !575, line: 93, baseType: !584, size: 128, offset: 64)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !585, line: 38, size: 128, elements: !586)
!585 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!586 = !{!587, !589}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !584, file: !585, line: 39, baseType: !588, size: 64)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !584, file: !585, line: 39, baseType: !590, size: 64, offset: 64)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !574, file: !575, line: 94, baseType: !573, size: 64, offset: 192)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !574, file: !575, line: 95, baseType: !593, size: 128, offset: 256)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !575, line: 47, size: 128, elements: !594)
!594 = !{!595, !604}
!595 = !DIDerivedType(tag: DW_TAG_member, scope: !593, file: !575, line: 48, baseType: !596, size: 64)
!596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !593, file: !575, line: 48, size: 64, elements: !597)
!597 = !{!598, !603}
!598 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !575, line: 49, baseType: !599, size: 64)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !596, file: !575, line: 49, size: 64, elements: !600)
!600 = !{!601, !602}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !599, file: !575, line: 50, baseType: !250, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !599, file: !575, line: 50, baseType: !250, size: 32, offset: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !596, file: !575, line: 52, baseType: !298, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !593, file: !575, line: 54, baseType: !605, size: 64, offset: 64)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !412)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !574, file: !575, line: 96, baseType: !542, size: 64, offset: 384)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !574, file: !575, line: 98, baseType: !609, size: 256, offset: 448)
!609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !412, size: 256, elements: !610)
!610 = !{!611}
!611 = !DISubrange(count: 32)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !574, file: !575, line: 101, baseType: !613, size: 32, offset: 704)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !614, line: 25, size: 32, elements: !615)
!614 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!615 = !{!616}
!616 = !DIDerivedType(tag: DW_TAG_member, scope: !613, file: !614, line: 26, baseType: !617, size: 32)
!617 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !613, file: !614, line: 26, size: 32, elements: !618)
!618 = !{!619}
!619 = !DIDerivedType(tag: DW_TAG_member, scope: !617, file: !614, line: 30, baseType: !620, size: 32)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !617, file: !614, line: 30, size: 32, elements: !621)
!621 = !{!622, !623}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !620, file: !614, line: 31, baseType: !202)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !620, file: !614, line: 32, baseType: !267, size: 32)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !574, file: !575, line: 102, baseType: !625, size: 64, offset: 768)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !627)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !575, line: 135, size: 1024, align: 512, elements: !628)
!628 = !{!629, !633, !634, !641, !650, !654, !658, !662, !663, !667, !672, !684, !692}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !627, file: !575, line: 136, baseType: !630, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = !DISubroutineType(types: !632)
!632 = !{!267, !573, !7}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !627, file: !575, line: 137, baseType: !630, size: 64, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !627, file: !575, line: 138, baseType: !635, size: 64, offset: 128)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DISubroutineType(types: !637)
!637 = !{!267, !638, !640}
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !574)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !627, file: !575, line: 139, baseType: !642, size: 64, offset: 192)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DISubroutineType(types: !644)
!644 = !{!267, !638, !7, !645, !648}
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !647)
!647 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !593)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !627, file: !575, line: 141, baseType: !651, size: 64, offset: 256)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = !DISubroutineType(types: !653)
!653 = !{!267, !638}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !627, file: !575, line: 142, baseType: !655, size: 64, offset: 320)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = !DISubroutineType(types: !657)
!657 = !{!267, !573}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !627, file: !575, line: 143, baseType: !659, size: 64, offset: 384)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DISubroutineType(types: !661)
!661 = !{null, !573}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !627, file: !575, line: 144, baseType: !659, size: 64, offset: 448)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !627, file: !575, line: 145, baseType: !664, size: 64, offset: 512)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DISubroutineType(types: !666)
!666 = !{null, !573, !542}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !627, file: !575, line: 146, baseType: !668, size: 64, offset: 576)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DISubroutineType(types: !670)
!670 = !{!671, !573, !671, !267}
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !627, file: !575, line: 147, baseType: !673, size: 64, offset: 640)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DISubroutineType(types: !675)
!675 = !{!676, !678}
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !575, line: 18, flags: DIFlagFwdDecl)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !680, line: 8, size: 128, elements: !681)
!680 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!681 = !{!682, !683}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !679, file: !680, line: 9, baseType: !676, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !679, file: !680, line: 10, baseType: !573, size: 64, offset: 64)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !627, file: !575, line: 148, baseType: !685, size: 64, offset: 704)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DISubroutineType(types: !687)
!687 = !{!267, !688, !690}
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !679)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !194, line: 30, baseType: !691)
!691 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !627, file: !575, line: 149, baseType: !693, size: 64, offset: 768)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DISubroutineType(types: !695)
!695 = !{!573, !573, !696}
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !574, file: !575, line: 103, baseType: !699, size: 64, offset: 832)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !85, line: 1416, size: 9472, elements: !701)
!701 = !{!702, !703, !706, !707, !708, !711, !760, !1439, !1521, !1604, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1620, !1624, !1625, !3394, !3395, !3398, !3399, !3400, !3441, !3467, !3468, !3469, !3470, !3471, !3472, !3475, !3476, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !700, file: !85, line: 1417, baseType: !193, size: 128)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !700, file: !85, line: 1418, baseType: !704, size: 32, offset: 128)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !194, line: 16, baseType: !705)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !194, line: 13, baseType: !250)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !700, file: !85, line: 1419, baseType: !412, size: 8, offset: 160)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !700, file: !85, line: 1420, baseType: !248, size: 64, offset: 192)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !700, file: !85, line: 1421, baseType: !709, size: 64, offset: 256)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !194, line: 46, baseType: !710)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !381, line: 88, baseType: !234)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !700, file: !85, line: 1422, baseType: !712, size: 64, offset: 320)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !85, line: 2228, size: 576, elements: !714)
!714 = !{!715, !716, !717, !724, !728, !732, !736, !737, !738, !748, !751, !752, !753, !757, !758, !759}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !713, file: !85, line: 2229, baseType: !645, size: 64)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !713, file: !85, line: 2230, baseType: !267, size: 32, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !713, file: !85, line: 2238, baseType: !718, size: 64, offset: 128)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DISubroutineType(types: !720)
!720 = !{!267, !721}
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !723, line: 28, flags: DIFlagFwdDecl)
!723 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!724 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !713, file: !85, line: 2239, baseType: !725, size: 64, offset: 192)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !727)
!727 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !85, line: 70, flags: DIFlagFwdDecl)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !713, file: !85, line: 2240, baseType: !729, size: 64, offset: 256)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DISubroutineType(types: !731)
!731 = !{!573, !712, !267, !645, !256}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !713, file: !85, line: 2242, baseType: !733, size: 64, offset: 320)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{null, !699}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !713, file: !85, line: 2243, baseType: !182, size: 64, offset: 384)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !713, file: !85, line: 2244, baseType: !712, size: 64, offset: 448)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !713, file: !85, line: 2245, baseType: !739, size: 64, offset: 512)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !194, line: 182, size: 64, elements: !740)
!740 = !{!741}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !739, file: !194, line: 183, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !194, line: 186, size: 128, elements: !744)
!744 = !{!745, !746}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !743, file: !194, line: 187, baseType: !742, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !743, file: !194, line: 187, baseType: !747, size: 64, offset: 64)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !713, file: !85, line: 2247, baseType: !749, offset: 576)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !750, line: 187, elements: !216)
!750 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!751 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !713, file: !85, line: 2248, baseType: !749, offset: 576)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !713, file: !85, line: 2249, baseType: !749, offset: 576)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !713, file: !85, line: 2250, baseType: !754, offset: 576)
!754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !749, elements: !755)
!755 = !{!756}
!756 = !DISubrange(count: 3)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !713, file: !85, line: 2252, baseType: !749, offset: 576)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !713, file: !85, line: 2253, baseType: !749, offset: 576)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !713, file: !85, line: 2254, baseType: !749, offset: 576)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !700, file: !85, line: 1423, baseType: !761, size: 64, offset: 384)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !763)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !85, line: 1935, size: 1472, elements: !764)
!764 = !{!765, !769, !773, !774, !778, !784, !788, !789, !790, !794, !798, !799, !800, !801, !807, !812, !813, !1416, !1417, !1418, !1419, !1423, !1438}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !763, file: !85, line: 1936, baseType: !766, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DISubroutineType(types: !768)
!768 = !{!542, !699}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !763, file: !85, line: 1937, baseType: !770, size: 64, offset: 64)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = !DISubroutineType(types: !772)
!772 = !{null, !542}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !763, file: !85, line: 1938, baseType: !770, size: 64, offset: 128)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !763, file: !85, line: 1940, baseType: !775, size: 64, offset: 192)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DISubroutineType(types: !777)
!777 = !{null, !542, !267}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !763, file: !85, line: 1941, baseType: !779, size: 64, offset: 256)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{!267, !542, !782}
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !763, file: !85, line: 1942, baseType: !785, size: 64, offset: 320)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DISubroutineType(types: !787)
!787 = !{!267, !542}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !763, file: !85, line: 1943, baseType: !770, size: 64, offset: 384)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !763, file: !85, line: 1944, baseType: !733, size: 64, offset: 448)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !763, file: !85, line: 1945, baseType: !791, size: 64, offset: 512)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DISubroutineType(types: !793)
!793 = !{!267, !699, !267}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !763, file: !85, line: 1946, baseType: !795, size: 64, offset: 576)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DISubroutineType(types: !797)
!797 = !{!267, !699}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !763, file: !85, line: 1947, baseType: !795, size: 64, offset: 640)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !763, file: !85, line: 1948, baseType: !795, size: 64, offset: 704)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !763, file: !85, line: 1949, baseType: !795, size: 64, offset: 768)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !763, file: !85, line: 1950, baseType: !802, size: 64, offset: 832)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DISubroutineType(types: !804)
!804 = !{!267, !573, !805}
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !85, line: 57, flags: DIFlagFwdDecl)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !763, file: !85, line: 1951, baseType: !808, size: 64, offset: 896)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DISubroutineType(types: !810)
!810 = !{!267, !699, !811, !671}
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !763, file: !85, line: 1952, baseType: !733, size: 64, offset: 960)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !763, file: !85, line: 1954, baseType: !814, size: 64, offset: 1024)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DISubroutineType(types: !816)
!816 = !{!267, !817, !573}
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !819, line: 16, size: 896, elements: !820)
!819 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!820 = !{!821, !822, !826, !827, !828, !829, !830, !831, !832, !854, !855, !1415}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !818, file: !819, line: 17, baseType: !671, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !818, file: !819, line: 18, baseType: !823, size: 64, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !194, line: 55, baseType: !824)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !381, line: 72, baseType: !825)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !381, line: 16, baseType: !248)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !818, file: !819, line: 19, baseType: !823, size: 64, offset: 128)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !818, file: !819, line: 20, baseType: !823, size: 64, offset: 192)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !818, file: !819, line: 21, baseType: !823, size: 64, offset: 256)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !818, file: !819, line: 22, baseType: !709, size: 64, offset: 320)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !818, file: !819, line: 23, baseType: !709, size: 64, offset: 384)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !818, file: !819, line: 24, baseType: !220, size: 192, offset: 448)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !818, file: !819, line: 25, baseType: !833, size: 64, offset: 640)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !835)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !819, line: 31, size: 256, elements: !836)
!836 = !{!837, !842, !846, !850}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !835, file: !819, line: 32, baseType: !838, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DISubroutineType(types: !840)
!840 = !{!256, !817, !841}
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !835, file: !819, line: 33, baseType: !843, size: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DISubroutineType(types: !845)
!845 = !{null, !817, !256}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !835, file: !819, line: 34, baseType: !847, size: 64, offset: 128)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DISubroutineType(types: !849)
!849 = !{!256, !817, !256, !841}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !835, file: !819, line: 35, baseType: !851, size: 64, offset: 192)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DISubroutineType(types: !853)
!853 = !{!267, !817, !256}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !818, file: !819, line: 26, baseType: !267, size: 32, offset: 704)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !818, file: !819, line: 27, baseType: !856, size: 64, offset: 768)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !85, line: 916, size: 1856, align: 32, elements: !859)
!859 = !{!860, !878, !879, !880, !1162, !1163, !1164, !1165, !1166, !1168, !1169, !1170, !1200, !1397, !1406, !1407, !1408, !1409, !1410, !1411, !1414}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !858, file: !85, line: 920, baseType: !861, size: 128)
!861 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !858, file: !85, line: 917, size: 128, elements: !862)
!862 = !{!863, !869}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !861, file: !85, line: 918, baseType: !864, size: 64)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !865, line: 58, size: 64, elements: !866)
!865 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!866 = !{!867}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !864, file: !865, line: 59, baseType: !868, size: 64)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !861, file: !85, line: 919, baseType: !870, size: 128, align: 64)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !194, line: 216, size: 128, align: 64, elements: !871)
!871 = !{!872, !874}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !870, file: !194, line: 217, baseType: !873, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !870, file: !194, line: 218, baseType: !875, size: 64, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DISubroutineType(types: !877)
!877 = !{null, !873}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !858, file: !85, line: 921, baseType: !679, size: 128, offset: 128)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !858, file: !85, line: 922, baseType: !542, size: 64, offset: 256)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !858, file: !85, line: 923, baseType: !881, size: 64, offset: 320)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !883)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !85, line: 1822, size: 2048, elements: !884)
!884 = !{!885, !886, !891, !898, !902, !948, !949, !953, !966, !967, !975, !979, !980, !984, !985, !989, !994, !995, !999, !1003, !1117, !1121, !1125, !1129, !1130, !1136, !1140, !1145, !1149, !1153, !1157, !1161}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !883, file: !85, line: 1823, baseType: !182, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !883, file: !85, line: 1824, baseType: !887, size: 64, offset: 64)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DISubroutineType(types: !889)
!889 = !{!709, !890, !709, !267}
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !883, file: !85, line: 1825, baseType: !892, size: 64, offset: 128)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{!895, !890, !671, !823, !841}
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !194, line: 60, baseType: !896)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !381, line: 73, baseType: !897)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !381, line: 15, baseType: !254)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !883, file: !85, line: 1826, baseType: !899, size: 64, offset: 192)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DISubroutineType(types: !901)
!901 = !{!895, !890, !645, !823, !841}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !883, file: !85, line: 1827, baseType: !903, size: 64, offset: 256)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DISubroutineType(types: !905)
!905 = !{!895, !906, !946}
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !85, line: 320, size: 384, elements: !908)
!908 = !{!909, !910, !911, !915, !916, !917, !920, !921}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !907, file: !85, line: 321, baseType: !890, size: 64)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !907, file: !85, line: 326, baseType: !709, size: 64, offset: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !907, file: !85, line: 327, baseType: !912, size: 64, offset: 128)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{null, !906, !254, !254}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !907, file: !85, line: 328, baseType: !256, size: 64, offset: 192)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !907, file: !85, line: 329, baseType: !267, size: 32, offset: 256)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !907, file: !85, line: 330, baseType: !918, size: 16, offset: 288)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !231, line: 19, baseType: !919)
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !233, line: 24, baseType: !315)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !907, file: !85, line: 331, baseType: !918, size: 16, offset: 304)
!921 = !DIDerivedType(tag: DW_TAG_member, scope: !907, file: !85, line: 332, baseType: !922, size: 64, offset: 320)
!922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !907, file: !85, line: 332, size: 64, elements: !923)
!923 = !{!924, !925}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !922, file: !85, line: 333, baseType: !7, size: 32)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !922, file: !85, line: 334, baseType: !926, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !928, line: 569, size: 448, elements: !929)
!928 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!929 = !{!930, !931, !932}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !927, file: !928, line: 570, baseType: !526, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !927, file: !928, line: 571, baseType: !267, size: 32, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !927, file: !928, line: 572, baseType: !933, size: 320, offset: 128)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !934, line: 14, baseType: !935)
!934 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !934, line: 29, size: 320, elements: !936)
!936 = !{!937, !938, !939, !945}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !935, file: !934, line: 30, baseType: !7, size: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !935, file: !934, line: 31, baseType: !256, size: 64, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !935, file: !934, line: 32, baseType: !940, size: 64, offset: 128)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !934, line: 16, baseType: !941)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DISubroutineType(types: !943)
!943 = !{!267, !944, !7, !267, !256}
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !935, file: !934, line: 33, baseType: !193, size: 128, offset: 192)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !85, line: 64, flags: DIFlagFwdDecl)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !883, file: !85, line: 1828, baseType: !903, size: 64, offset: 320)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !883, file: !85, line: 1829, baseType: !950, size: 64, offset: 384)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DISubroutineType(types: !952)
!952 = !{!267, !906, !690}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !883, file: !85, line: 1830, baseType: !954, size: 64, offset: 448)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = !DISubroutineType(types: !956)
!956 = !{!267, !890, !957}
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !85, line: 1776, size: 128, elements: !959)
!959 = !{!960, !965}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !958, file: !85, line: 1777, baseType: !961, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !85, line: 1773, baseType: !962)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!267, !957, !645, !267, !709, !298, !7}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !958, file: !85, line: 1778, baseType: !709, size: 64, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !883, file: !85, line: 1831, baseType: !954, size: 64, offset: 512)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !883, file: !85, line: 1832, baseType: !968, size: 64, offset: 576)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DISubroutineType(types: !970)
!970 = !{!971, !890, !973}
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !972, line: 52, baseType: !7)
!972 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !723, line: 27, flags: DIFlagFwdDecl)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !883, file: !85, line: 1833, baseType: !976, size: 64, offset: 640)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64)
!977 = !DISubroutineType(types: !978)
!978 = !{!254, !890, !7, !248}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !883, file: !85, line: 1834, baseType: !976, size: 64, offset: 704)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !883, file: !85, line: 1835, baseType: !981, size: 64, offset: 768)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = !DISubroutineType(types: !983)
!983 = !{!267, !890, !445}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !883, file: !85, line: 1836, baseType: !248, size: 64, offset: 832)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !883, file: !85, line: 1837, baseType: !986, size: 64, offset: 896)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DISubroutineType(types: !988)
!988 = !{!267, !542, !890}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !883, file: !85, line: 1838, baseType: !990, size: 64, offset: 960)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DISubroutineType(types: !992)
!992 = !{!267, !890, !993}
!993 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !85, line: 1007, baseType: !256)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !883, file: !85, line: 1839, baseType: !986, size: 64, offset: 1024)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !883, file: !85, line: 1840, baseType: !996, size: 64, offset: 1088)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DISubroutineType(types: !998)
!998 = !{!267, !890, !709, !709, !267}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !883, file: !85, line: 1841, baseType: !1000, size: 64, offset: 1152)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!267, !267, !890, !267}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !883, file: !85, line: 1842, baseType: !1004, size: 64, offset: 1216)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{!267, !890, !267, !1007}
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !85, line: 1062, size: 1664, elements: !1009)
!1009 = !{!1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1026, !1027, !1028, !1029, !1046, !1047, !1048, !1061, !1093}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !1008, file: !85, line: 1063, baseType: !1007, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !1008, file: !85, line: 1064, baseType: !193, size: 128, offset: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !1008, file: !85, line: 1065, baseType: !743, size: 128, offset: 192)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !1008, file: !85, line: 1066, baseType: !193, size: 128, offset: 320)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !1008, file: !85, line: 1069, baseType: !193, size: 128, offset: 448)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !1008, file: !85, line: 1072, baseType: !993, size: 64, offset: 576)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !1008, file: !85, line: 1073, baseType: !7, size: 32, offset: 640)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !1008, file: !85, line: 1074, baseType: !412, size: 8, offset: 672)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !1008, file: !85, line: 1075, baseType: !7, size: 32, offset: 704)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !1008, file: !85, line: 1076, baseType: !267, size: 32, offset: 736)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !1008, file: !85, line: 1077, baseType: !1021, size: 128, offset: 768)
!1021 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !934, line: 40, baseType: !1022)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !934, line: 36, size: 128, elements: !1023)
!1023 = !{!1024, !1025}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1022, file: !934, line: 37, baseType: !202)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1022, file: !934, line: 38, baseType: !193, size: 128)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !1008, file: !85, line: 1078, baseType: !890, size: 64, offset: 896)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !1008, file: !85, line: 1079, baseType: !709, size: 64, offset: 960)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !1008, file: !85, line: 1080, baseType: !709, size: 64, offset: 1024)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !1008, file: !85, line: 1082, baseType: !1030, size: 64, offset: 1088)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !85, line: 1314, size: 320, elements: !1032)
!1032 = !{!1033, !1041, !1042, !1043, !1044, !1045}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1031, file: !85, line: 1315, baseType: !1034)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1035, line: 20, baseType: !1036)
!1035 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1035, line: 11, elements: !1037)
!1037 = !{!1038}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1036, file: !1035, line: 12, baseType: !1039)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !214, line: 33, baseType: !1040)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !214, line: 31, elements: !216)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1031, file: !85, line: 1316, baseType: !267, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1031, file: !85, line: 1317, baseType: !267, size: 32, offset: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1031, file: !85, line: 1318, baseType: !1030, size: 64, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1031, file: !85, line: 1319, baseType: !890, size: 64, offset: 128)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1031, file: !85, line: 1320, baseType: !870, size: 128, align: 64, offset: 192)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !1008, file: !85, line: 1084, baseType: !248, size: 64, offset: 1152)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !1008, file: !85, line: 1085, baseType: !248, size: 64, offset: 1216)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !1008, file: !85, line: 1087, baseType: !1049, size: 64, offset: 1280)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !85, line: 1011, size: 128, elements: !1052)
!1052 = !{!1053, !1057}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !1051, file: !85, line: 1012, baseType: !1054, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{null, !1007, !1007}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !1051, file: !85, line: 1013, baseType: !1058, size: 64, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{null, !1007}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !1008, file: !85, line: 1088, baseType: !1062, size: 64, offset: 1344)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !85, line: 1016, size: 512, elements: !1065)
!1065 = !{!1066, !1070, !1074, !1075, !1079, !1083, !1087, !1092}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !1064, file: !85, line: 1017, baseType: !1067, size: 64)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{!993, !993}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !1064, file: !85, line: 1018, baseType: !1071, size: 64, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{null, !993}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !1064, file: !85, line: 1019, baseType: !1058, size: 64, offset: 128)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !1064, file: !85, line: 1020, baseType: !1076, size: 64, offset: 192)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!267, !1007, !267}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !1064, file: !85, line: 1021, baseType: !1080, size: 64, offset: 256)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!690, !1007}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !1064, file: !85, line: 1022, baseType: !1084, size: 64, offset: 320)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!267, !1007, !267, !197}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !1064, file: !85, line: 1023, baseType: !1088, size: 64, offset: 384)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{null, !1007, !1091}
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !1064, file: !85, line: 1024, baseType: !1080, size: 64, offset: 448)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !1008, file: !85, line: 1097, baseType: !1094, size: 256, offset: 1408)
!1094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1008, file: !85, line: 1089, size: 256, elements: !1095)
!1095 = !{!1096, !1105, !1111}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !1094, file: !85, line: 1090, baseType: !1097, size: 256)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !1098, line: 10, size: 256, elements: !1099)
!1098 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1099 = !{!1100, !1101, !1104}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1097, file: !1098, line: 11, baseType: !250, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1097, file: !1098, line: 12, baseType: !1102, size: 64, offset: 64)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !1098, line: 5, flags: DIFlagFwdDecl)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1097, file: !1098, line: 13, baseType: !193, size: 128, offset: 128)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !1094, file: !85, line: 1091, baseType: !1106, size: 64)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !1098, line: 17, size: 64, elements: !1107)
!1107 = !{!1108}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1106, file: !1098, line: 18, baseType: !1109, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !1098, line: 16, flags: DIFlagFwdDecl)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !1094, file: !85, line: 1096, baseType: !1112, size: 192)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1094, file: !85, line: 1092, size: 192, elements: !1113)
!1113 = !{!1114, !1115, !1116}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1112, file: !85, line: 1093, baseType: !193, size: 128)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1112, file: !85, line: 1094, baseType: !267, size: 32, offset: 128)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !1112, file: !85, line: 1095, baseType: !7, size: 32, offset: 160)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !883, file: !85, line: 1843, baseType: !1118, size: 64, offset: 1280)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!895, !890, !526, !267, !823, !841, !267}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !883, file: !85, line: 1844, baseType: !1122, size: 64, offset: 1344)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{!248, !890, !248, !248, !248, !248}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !883, file: !85, line: 1845, baseType: !1126, size: 64, offset: 1408)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!267, !267}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !883, file: !85, line: 1846, baseType: !1004, size: 64, offset: 1472)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !883, file: !85, line: 1847, baseType: !1131, size: 64, offset: 1536)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!895, !1134, !890, !841, !823, !7}
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !241, line: 53, flags: DIFlagFwdDecl)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !883, file: !85, line: 1848, baseType: !1137, size: 64, offset: 1600)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!895, !890, !841, !1134, !823, !7}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !883, file: !85, line: 1849, baseType: !1141, size: 64, offset: 1664)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!267, !890, !254, !1144, !1091}
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !883, file: !85, line: 1850, baseType: !1146, size: 64, offset: 1728)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!254, !890, !267, !709, !709}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !883, file: !85, line: 1852, baseType: !1150, size: 64, offset: 1792)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{null, !817, !890}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !883, file: !85, line: 1856, baseType: !1154, size: 64, offset: 1856)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!895, !890, !709, !890, !709, !823, !7}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !883, file: !85, line: 1858, baseType: !1158, size: 64, offset: 1920)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!709, !890, !709, !890, !709, !709, !7}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !883, file: !85, line: 1861, baseType: !996, size: 64, offset: 1984)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !858, file: !85, line: 929, baseType: !202, offset: 384)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !858, file: !85, line: 930, baseType: !84, size: 32, offset: 384)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !858, file: !85, line: 931, baseType: !224, size: 64, offset: 448)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !858, file: !85, line: 932, baseType: !7, size: 32, offset: 512)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !858, file: !85, line: 933, baseType: !1167, size: 32, offset: 544)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !194, line: 150, baseType: !7)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !858, file: !85, line: 934, baseType: !220, size: 192, offset: 576)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !858, file: !85, line: 935, baseType: !709, size: 64, offset: 768)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !858, file: !85, line: 936, baseType: !1171, size: 192, offset: 832)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !85, line: 885, size: 192, elements: !1172)
!1172 = !{!1173, !1174, !1196, !1197, !1198, !1199}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1171, file: !85, line: 886, baseType: !1034)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1171, file: !85, line: 887, baseType: !1175, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !94, line: 59, size: 768, elements: !1177)
!1177 = !{!1178, !1179, !1180, !1181, !1185, !1186, !1187, !1188}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1176, file: !94, line: 61, baseType: !258, size: 32)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1176, file: !94, line: 62, baseType: !7, size: 32, offset: 32)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1176, file: !94, line: 63, baseType: !202, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1176, file: !94, line: 65, baseType: !1182, size: 256, offset: 64)
!1182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !739, size: 256, elements: !1183)
!1183 = !{!1184}
!1184 = !DISubrange(count: 4)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1176, file: !94, line: 66, baseType: !739, size: 64, offset: 320)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1176, file: !94, line: 68, baseType: !1021, size: 128, offset: 384)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1176, file: !94, line: 69, baseType: !870, size: 128, align: 64, offset: 512)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1176, file: !94, line: 70, baseType: !1189, size: 128, offset: 640)
!1189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1190, size: 128, elements: !430)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !94, line: 54, size: 128, elements: !1191)
!1191 = !{!1192, !1193}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1190, file: !94, line: 55, baseType: !267, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1190, file: !94, line: 56, baseType: !1194, size: 64, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !94, line: 56, flags: DIFlagFwdDecl)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !1171, file: !85, line: 888, baseType: !93, size: 32, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1171, file: !85, line: 889, baseType: !549, size: 32, offset: 96)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1171, file: !85, line: 889, baseType: !549, size: 32, offset: 128)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !1171, file: !85, line: 890, baseType: !267, size: 32, offset: 160)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !858, file: !85, line: 937, baseType: !1201, size: 64, offset: 1024)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1203)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1204, line: 111, size: 1280, elements: !1205)
!1204 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1205 = !{!1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1225, !1226, !1227, !1228, !1229, !1230, !1350, !1351, !1352, !1353, !1379, !1382, !1392}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1203, file: !1204, line: 112, baseType: !263, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1203, file: !1204, line: 120, baseType: !549, size: 32, offset: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1203, file: !1204, line: 121, baseType: !557, size: 32, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1203, file: !1204, line: 122, baseType: !549, size: 32, offset: 96)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1203, file: !1204, line: 123, baseType: !557, size: 32, offset: 128)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1203, file: !1204, line: 124, baseType: !549, size: 32, offset: 160)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1203, file: !1204, line: 125, baseType: !557, size: 32, offset: 192)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1203, file: !1204, line: 126, baseType: !549, size: 32, offset: 224)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1203, file: !1204, line: 127, baseType: !557, size: 32, offset: 256)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1203, file: !1204, line: 128, baseType: !7, size: 32, offset: 288)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1203, file: !1204, line: 129, baseType: !1217, size: 64, offset: 320)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1218, line: 26, baseType: !1219)
!1218 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1218, line: 24, size: 64, elements: !1220)
!1220 = !{!1221}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1219, file: !1218, line: 25, baseType: !1222, size: 64)
!1222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !251, size: 64, elements: !1223)
!1223 = !{!1224}
!1224 = !DISubrange(count: 2)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1203, file: !1204, line: 130, baseType: !1217, size: 64, offset: 384)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1203, file: !1204, line: 131, baseType: !1217, size: 64, offset: 448)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1203, file: !1204, line: 132, baseType: !1217, size: 64, offset: 512)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1203, file: !1204, line: 133, baseType: !1217, size: 64, offset: 576)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1203, file: !1204, line: 135, baseType: !412, size: 8, offset: 640)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1203, file: !1204, line: 137, baseType: !1231, size: 64, offset: 704)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1233, line: 189, size: 1664, elements: !1234)
!1233 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1234 = !{!1235, !1236, !1241, !1246, !1254, !1257, !1258, !1265, !1266, !1267, !1268, !1271, !1272, !1273, !1275, !1276, !1314, !1335}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1232, file: !1233, line: 190, baseType: !258, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1232, file: !1233, line: 191, baseType: !1237, size: 32, offset: 32)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1233, line: 28, baseType: !1238)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !194, line: 98, baseType: !1239)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !231, line: 20, baseType: !1240)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !233, line: 26, baseType: !267)
!1241 = !DIDerivedType(tag: DW_TAG_member, scope: !1232, file: !1233, line: 192, baseType: !1242, size: 192, offset: 64)
!1242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1232, file: !1233, line: 192, size: 192, elements: !1243)
!1243 = !{!1244, !1245}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1242, file: !1233, line: 193, baseType: !193, size: 128)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1242, file: !1233, line: 194, baseType: !288, size: 192, align: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1232, file: !1233, line: 199, baseType: !1247, size: 256, offset: 256)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1248, line: 35, size: 256, elements: !1249)
!1248 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1249 = !{!1250, !1251, !1252, !1253}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1247, file: !1248, line: 36, baseType: !224, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1247, file: !1248, line: 42, baseType: !224, size: 64, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1247, file: !1248, line: 46, baseType: !361, offset: 128)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1247, file: !1248, line: 47, baseType: !193, size: 128, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1232, file: !1233, line: 200, baseType: !1255, size: 64, offset: 512)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1233, line: 200, flags: DIFlagFwdDecl)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1232, file: !1233, line: 201, baseType: !256, size: 64, offset: 576)
!1258 = !DIDerivedType(tag: DW_TAG_member, scope: !1232, file: !1233, line: 202, baseType: !1259, size: 64, offset: 640)
!1259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1232, file: !1233, line: 202, size: 64, elements: !1260)
!1260 = !{!1261, !1264}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1259, file: !1233, line: 203, baseType: !1262, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1263, line: 8, baseType: !232)
!1263 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1259, file: !1233, line: 204, baseType: !1262, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1232, file: !1233, line: 206, baseType: !1262, size: 64, offset: 704)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1232, file: !1233, line: 207, baseType: !549, size: 32, offset: 768)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1232, file: !1233, line: 208, baseType: !557, size: 32, offset: 800)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1232, file: !1233, line: 209, baseType: !1269, size: 32, offset: 832)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1233, line: 31, baseType: !1270)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !194, line: 104, baseType: !250)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1232, file: !1233, line: 210, baseType: !315, size: 16, offset: 864)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1232, file: !1233, line: 211, baseType: !315, size: 16, offset: 880)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1232, file: !1233, line: 215, baseType: !1274, size: 16, offset: 896)
!1274 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1232, file: !1233, line: 222, baseType: !248, size: 64, offset: 960)
!1276 = !DIDerivedType(tag: DW_TAG_member, scope: !1232, file: !1233, line: 239, baseType: !1277, size: 320, offset: 1024)
!1277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1232, file: !1233, line: 239, size: 320, elements: !1278)
!1278 = !{!1279, !1306}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1277, file: !1233, line: 240, baseType: !1280, size: 320)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1233, line: 108, size: 320, elements: !1281)
!1281 = !{!1282, !1283, !1295, !1298, !1305}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1280, file: !1233, line: 110, baseType: !248, size: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, scope: !1280, file: !1233, line: 111, baseType: !1284, size: 64, offset: 64)
!1284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1280, file: !1233, line: 111, size: 64, elements: !1285)
!1285 = !{!1286, !1294}
!1286 = !DIDerivedType(tag: DW_TAG_member, scope: !1284, file: !1233, line: 112, baseType: !1287, size: 64)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1284, file: !1233, line: 112, size: 64, elements: !1288)
!1288 = !{!1289, !1290}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1287, file: !1233, line: 114, baseType: !918, size: 16)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1287, file: !1233, line: 115, baseType: !1291, size: 48, offset: 16)
!1291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 48, elements: !1292)
!1292 = !{!1293}
!1293 = !DISubrange(count: 6)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1284, file: !1233, line: 121, baseType: !248, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1280, file: !1233, line: 123, baseType: !1296, size: 64, offset: 128)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1233, line: 96, flags: DIFlagFwdDecl)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1280, file: !1233, line: 124, baseType: !1299, size: 64, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1233, line: 102, size: 192, elements: !1301)
!1301 = !{!1302, !1303, !1304}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1300, file: !1233, line: 103, baseType: !870, size: 128, align: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1300, file: !1233, line: 104, baseType: !258, size: 32, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1300, file: !1233, line: 105, baseType: !690, size: 8, offset: 160)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1280, file: !1233, line: 125, baseType: !645, size: 64, offset: 256)
!1306 = !DIDerivedType(tag: DW_TAG_member, scope: !1277, file: !1233, line: 241, baseType: !1307, size: 320)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1277, file: !1233, line: 241, size: 320, elements: !1308)
!1308 = !{!1309, !1310, !1311, !1312, !1313}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1307, file: !1233, line: 242, baseType: !248, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1307, file: !1233, line: 243, baseType: !248, size: 64, offset: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1307, file: !1233, line: 244, baseType: !1296, size: 64, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1307, file: !1233, line: 245, baseType: !1299, size: 64, offset: 192)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1307, file: !1233, line: 246, baseType: !671, size: 64, offset: 256)
!1314 = !DIDerivedType(tag: DW_TAG_member, scope: !1232, file: !1233, line: 254, baseType: !1315, size: 256, offset: 1344)
!1315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1232, file: !1233, line: 254, size: 256, elements: !1316)
!1316 = !{!1317, !1323}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1315, file: !1233, line: 255, baseType: !1318, size: 256)
!1318 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1233, line: 128, size: 256, elements: !1319)
!1319 = !{!1320, !1321}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1318, file: !1233, line: 129, baseType: !256, size: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1318, file: !1233, line: 130, baseType: !1322, size: 256)
!1322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 256, elements: !1183)
!1323 = !DIDerivedType(tag: DW_TAG_member, scope: !1315, file: !1233, line: 256, baseType: !1324, size: 256)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1315, file: !1233, line: 256, size: 256, elements: !1325)
!1325 = !{!1326, !1327}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1324, file: !1233, line: 258, baseType: !193, size: 128)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1324, file: !1233, line: 259, baseType: !1328, size: 128, offset: 128)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1329, line: 22, size: 128, elements: !1330)
!1329 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1330 = !{!1331, !1334}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1328, file: !1329, line: 23, baseType: !1332, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1329, line: 23, flags: DIFlagFwdDecl)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1328, file: !1329, line: 24, baseType: !248, size: 64, offset: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1232, file: !1233, line: 274, baseType: !1336, size: 64, offset: 1600)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1233, line: 170, size: 192, elements: !1338)
!1338 = !{!1339, !1348, !1349}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1337, file: !1233, line: 171, baseType: !1340, size: 64)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1233, line: 165, baseType: !1341)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!267, !1231, !1344, !1346, !1231}
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1297)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1318)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1337, file: !1233, line: 172, baseType: !1231, size: 64, offset: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1337, file: !1233, line: 173, baseType: !1296, size: 64, offset: 128)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1203, file: !1204, line: 138, baseType: !1231, size: 64, offset: 768)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1203, file: !1204, line: 139, baseType: !1231, size: 64, offset: 832)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1203, file: !1204, line: 140, baseType: !1231, size: 64, offset: 896)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1203, file: !1204, line: 145, baseType: !1354, size: 64, offset: 960)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1356, line: 13, size: 896, elements: !1357)
!1356 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1357 = !{!1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1355, file: !1356, line: 14, baseType: !258, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1355, file: !1356, line: 15, baseType: !263, size: 32, offset: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1355, file: !1356, line: 16, baseType: !263, size: 32, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1355, file: !1356, line: 21, baseType: !224, size: 64, offset: 128)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1355, file: !1356, line: 27, baseType: !248, size: 64, offset: 192)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1355, file: !1356, line: 28, baseType: !248, size: 64, offset: 256)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1355, file: !1356, line: 29, baseType: !224, size: 64, offset: 320)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1355, file: !1356, line: 32, baseType: !743, size: 128, offset: 384)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1355, file: !1356, line: 33, baseType: !549, size: 32, offset: 512)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1355, file: !1356, line: 37, baseType: !224, size: 64, offset: 576)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1355, file: !1356, line: 44, baseType: !1369, size: 256, offset: 640)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1370, line: 15, size: 256, elements: !1371)
!1370 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1371 = !{!1372, !1373, !1374, !1375, !1376, !1377, !1378}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1369, file: !1370, line: 16, baseType: !361)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1369, file: !1370, line: 18, baseType: !267, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1369, file: !1370, line: 19, baseType: !267, size: 32, offset: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1369, file: !1370, line: 20, baseType: !267, size: 32, offset: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1369, file: !1370, line: 21, baseType: !267, size: 32, offset: 96)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1369, file: !1370, line: 22, baseType: !248, size: 64, offset: 128)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1369, file: !1370, line: 23, baseType: !248, size: 64, offset: 192)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1203, file: !1204, line: 146, baseType: !1380, size: 64, offset: 1024)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !550, line: 18, flags: DIFlagFwdDecl)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1203, file: !1204, line: 147, baseType: !1383, size: 64, offset: 1088)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1204, line: 25, size: 64, elements: !1385)
!1385 = !{!1386, !1387, !1388}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1384, file: !1204, line: 26, baseType: !263, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1384, file: !1204, line: 27, baseType: !267, size: 32, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1384, file: !1204, line: 28, baseType: !1389, offset: 64)
!1389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, elements: !1390)
!1390 = !{!1391}
!1391 = !DISubrange(count: 0)
!1392 = !DIDerivedType(tag: DW_TAG_member, scope: !1203, file: !1204, line: 149, baseType: !1393, size: 128, offset: 1152)
!1393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1203, file: !1204, line: 149, size: 128, elements: !1394)
!1394 = !{!1395, !1396}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1393, file: !1204, line: 150, baseType: !267, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1393, file: !1204, line: 151, baseType: !870, size: 128, align: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !858, file: !85, line: 938, baseType: !1398, size: 256, offset: 1088)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !85, line: 896, size: 256, elements: !1399)
!1399 = !{!1400, !1401, !1402, !1403, !1404, !1405}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1398, file: !85, line: 897, baseType: !248, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1398, file: !85, line: 898, baseType: !7, size: 32, offset: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !1398, file: !85, line: 899, baseType: !7, size: 32, offset: 96)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1398, file: !85, line: 902, baseType: !7, size: 32, offset: 128)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !1398, file: !85, line: 903, baseType: !7, size: 32, offset: 160)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !1398, file: !85, line: 904, baseType: !709, size: 64, offset: 192)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !858, file: !85, line: 940, baseType: !298, size: 64, offset: 1344)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !858, file: !85, line: 945, baseType: !256, size: 64, offset: 1408)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !858, file: !85, line: 949, baseType: !193, size: 128, offset: 1472)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !858, file: !85, line: 950, baseType: !193, size: 128, offset: 1600)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !858, file: !85, line: 952, baseType: !538, size: 64, offset: 1728)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !858, file: !85, line: 953, baseType: !1412, size: 32, offset: 1792)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1413, line: 8, baseType: !250)
!1413 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !858, file: !85, line: 954, baseType: !1412, size: 32, offset: 1824)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !818, file: !819, line: 28, baseType: !256, size: 64, offset: 832)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !763, file: !85, line: 1955, baseType: !814, size: 64, offset: 1088)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !763, file: !85, line: 1956, baseType: !814, size: 64, offset: 1152)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !763, file: !85, line: 1957, baseType: !814, size: 64, offset: 1216)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !763, file: !85, line: 1963, baseType: !1420, size: 64, offset: 1280)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!267, !699, !526, !502}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !763, file: !85, line: 1964, baseType: !1424, size: 64, offset: 1344)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!254, !699, !1427}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !1429, line: 12, size: 256, elements: !1430)
!1429 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!1430 = !{!1431, !1432, !1433, !1434, !1435}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1428, file: !1429, line: 13, baseType: !502, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !1428, file: !1429, line: 16, baseType: !267, size: 32, offset: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !1428, file: !1429, line: 23, baseType: !248, size: 64, offset: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !1428, file: !1429, line: 30, baseType: !248, size: 64, offset: 128)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !1428, file: !1429, line: 33, baseType: !1436, size: 64, offset: 192)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!1437 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !439, line: 27, flags: DIFlagFwdDecl)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !763, file: !85, line: 1966, baseType: !1424, size: 64, offset: 1408)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !700, file: !85, line: 1424, baseType: !1440, size: 64, offset: 448)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1442)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !79, line: 322, size: 704, elements: !1443)
!1443 = !{!1444, !1490, !1494, !1498, !1499, !1500, !1501, !1502, !1507, !1512, !1516}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !1442, file: !79, line: 323, baseType: !1445, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!267, !1448}
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !79, line: 294, size: 1600, elements: !1450)
!1450 = !{!1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1475, !1476, !1477}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !1449, file: !79, line: 295, baseType: !743, size: 128)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !1449, file: !79, line: 296, baseType: !193, size: 128, offset: 128)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !1449, file: !79, line: 297, baseType: !193, size: 128, offset: 256)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !1449, file: !79, line: 298, baseType: !193, size: 128, offset: 384)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !1449, file: !79, line: 299, baseType: !220, size: 192, offset: 512)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !1449, file: !79, line: 300, baseType: !202, offset: 704)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !1449, file: !79, line: 301, baseType: !263, size: 32, offset: 704)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !1449, file: !79, line: 302, baseType: !699, size: 64, offset: 768)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !1449, file: !79, line: 303, baseType: !1460, size: 64, offset: 832)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !79, line: 68, size: 64, elements: !1461)
!1461 = !{!1462, !1474}
!1462 = !DIDerivedType(tag: DW_TAG_member, scope: !1460, file: !79, line: 69, baseType: !1463, size: 32)
!1463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1460, file: !79, line: 69, size: 32, elements: !1464)
!1464 = !{!1465, !1466, !1467}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1463, file: !79, line: 70, baseType: !549, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1463, file: !79, line: 71, baseType: !557, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !1463, file: !79, line: 72, baseType: !1468, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !1469, line: 24, baseType: !1470)
!1469 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1469, line: 22, size: 32, elements: !1471)
!1471 = !{!1472}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1470, file: !1469, line: 23, baseType: !1473, size: 32)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !1469, line: 20, baseType: !555)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1460, file: !79, line: 74, baseType: !78, size: 32, offset: 32)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !1449, file: !79, line: 304, baseType: !709, size: 64, offset: 896)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !1449, file: !79, line: 305, baseType: !248, size: 64, offset: 960)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !1449, file: !79, line: 306, baseType: !1478, size: 576, offset: 1024)
!1478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !79, line: 205, size: 576, elements: !1479)
!1479 = !{!1480, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !1478, file: !79, line: 206, baseType: !1481, size: 64)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !79, line: 66, baseType: !234)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !1478, file: !79, line: 207, baseType: !1481, size: 64, offset: 64)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !1478, file: !79, line: 208, baseType: !1481, size: 64, offset: 128)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !1478, file: !79, line: 209, baseType: !1481, size: 64, offset: 192)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !1478, file: !79, line: 210, baseType: !1481, size: 64, offset: 256)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !1478, file: !79, line: 211, baseType: !1481, size: 64, offset: 320)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !1478, file: !79, line: 212, baseType: !1481, size: 64, offset: 384)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !1478, file: !79, line: 213, baseType: !1262, size: 64, offset: 448)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !1478, file: !79, line: 214, baseType: !1262, size: 64, offset: 512)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !1442, file: !79, line: 324, baseType: !1491, size: 64, offset: 64)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!1448, !699, !267}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !1442, file: !79, line: 325, baseType: !1495, size: 64, offset: 128)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{null, !1448}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !1442, file: !79, line: 326, baseType: !1445, size: 64, offset: 192)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !1442, file: !79, line: 327, baseType: !1445, size: 64, offset: 256)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !1442, file: !79, line: 328, baseType: !1445, size: 64, offset: 320)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !1442, file: !79, line: 329, baseType: !791, size: 64, offset: 384)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !1442, file: !79, line: 332, baseType: !1503, size: 64, offset: 448)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 64)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!1506, !542}
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !1442, file: !79, line: 333, baseType: !1508, size: 64, offset: 512)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!267, !542, !1511}
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !1442, file: !79, line: 335, baseType: !1513, size: 64, offset: 576)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!267, !542, !1506}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !1442, file: !79, line: 337, baseType: !1517, size: 64, offset: 640)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 64)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{!267, !699, !1520}
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !700, file: !85, line: 1425, baseType: !1522, size: 64, offset: 512)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1524)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !79, line: 428, size: 704, elements: !1525)
!1525 = !{!1526, !1530, !1531, !1535, !1536, !1537, !1552, !1575, !1579, !1580, !1603}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !1524, file: !79, line: 429, baseType: !1527, size: 64)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!267, !699, !267, !267, !688}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !1524, file: !79, line: 430, baseType: !791, size: 64, offset: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !1524, file: !79, line: 431, baseType: !1532, size: 64, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!267, !699, !7}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !1524, file: !79, line: 432, baseType: !1532, size: 64, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !1524, file: !79, line: 433, baseType: !791, size: 64, offset: 256)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !1524, file: !79, line: 434, baseType: !1538, size: 64, offset: 320)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!267, !699, !267, !1541}
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !79, line: 415, size: 256, elements: !1543)
!1543 = !{!1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !1542, file: !79, line: 416, baseType: !267, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1542, file: !79, line: 417, baseType: !7, size: 32, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !1542, file: !79, line: 418, baseType: !7, size: 32, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !1542, file: !79, line: 420, baseType: !7, size: 32, offset: 96)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !1542, file: !79, line: 421, baseType: !7, size: 32, offset: 128)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !1542, file: !79, line: 422, baseType: !7, size: 32, offset: 160)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !1542, file: !79, line: 423, baseType: !7, size: 32, offset: 192)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !1542, file: !79, line: 424, baseType: !7, size: 32, offset: 224)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !1524, file: !79, line: 435, baseType: !1553, size: 64, offset: 384)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{!267, !699, !1460, !1556}
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !79, line: 343, size: 960, elements: !1558)
!1558 = !{!1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !1557, file: !79, line: 344, baseType: !267, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !1557, file: !79, line: 345, baseType: !298, size: 64, offset: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !1557, file: !79, line: 346, baseType: !298, size: 64, offset: 128)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !1557, file: !79, line: 347, baseType: !298, size: 64, offset: 192)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !1557, file: !79, line: 348, baseType: !298, size: 64, offset: 256)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !1557, file: !79, line: 349, baseType: !298, size: 64, offset: 320)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !1557, file: !79, line: 350, baseType: !298, size: 64, offset: 384)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !1557, file: !79, line: 351, baseType: !230, size: 64, offset: 448)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !1557, file: !79, line: 353, baseType: !230, size: 64, offset: 512)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !1557, file: !79, line: 354, baseType: !267, size: 32, offset: 576)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !1557, file: !79, line: 355, baseType: !267, size: 32, offset: 608)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !1557, file: !79, line: 356, baseType: !298, size: 64, offset: 640)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !1557, file: !79, line: 357, baseType: !298, size: 64, offset: 704)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !1557, file: !79, line: 358, baseType: !298, size: 64, offset: 768)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !1557, file: !79, line: 359, baseType: !230, size: 64, offset: 832)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !1557, file: !79, line: 360, baseType: !267, size: 32, offset: 896)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !1524, file: !79, line: 436, baseType: !1576, size: 64, offset: 448)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!267, !699, !1520, !1556}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !1524, file: !79, line: 438, baseType: !1553, size: 64, offset: 512)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !1524, file: !79, line: 439, baseType: !1581, size: 64, offset: 576)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!267, !699, !1584}
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !79, line: 409, size: 1408, elements: !1586)
!1586 = !{!1587, !1588}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !1585, file: !79, line: 410, baseType: !7, size: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !1585, file: !79, line: 411, baseType: !1589, size: 1344, offset: 64)
!1589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1590, size: 1344, elements: !755)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !79, line: 395, size: 448, elements: !1591)
!1591 = !{!1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1602}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1590, file: !79, line: 396, baseType: !7, size: 32)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !1590, file: !79, line: 397, baseType: !7, size: 32, offset: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !1590, file: !79, line: 399, baseType: !7, size: 32, offset: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !1590, file: !79, line: 400, baseType: !7, size: 32, offset: 96)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !1590, file: !79, line: 401, baseType: !7, size: 32, offset: 128)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !1590, file: !79, line: 402, baseType: !7, size: 32, offset: 160)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !1590, file: !79, line: 403, baseType: !7, size: 32, offset: 192)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1590, file: !79, line: 404, baseType: !300, size: 64, offset: 256)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1590, file: !79, line: 405, baseType: !1601, size: 64, offset: 320)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !194, line: 126, baseType: !298)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !1590, file: !79, line: 406, baseType: !1601, size: 64, offset: 384)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !1524, file: !79, line: 440, baseType: !1532, size: 64, offset: 640)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !700, file: !85, line: 1426, baseType: !1605, size: 64, offset: 576)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64)
!1606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1607)
!1607 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !85, line: 49, flags: DIFlagFwdDecl)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !700, file: !85, line: 1427, baseType: !248, size: 64, offset: 640)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !700, file: !85, line: 1428, baseType: !248, size: 64, offset: 704)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !700, file: !85, line: 1429, baseType: !248, size: 64, offset: 768)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !700, file: !85, line: 1430, baseType: !573, size: 64, offset: 832)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !700, file: !85, line: 1431, baseType: !1247, size: 256, offset: 896)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !700, file: !85, line: 1432, baseType: !267, size: 32, offset: 1152)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !700, file: !85, line: 1433, baseType: !263, size: 32, offset: 1184)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !700, file: !85, line: 1437, baseType: !1616, size: 64, offset: 1216)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64)
!1618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1619)
!1619 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !85, line: 1437, flags: DIFlagFwdDecl)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !700, file: !85, line: 1449, baseType: !1621, size: 64, offset: 1280)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !585, line: 34, size: 64, elements: !1622)
!1622 = !{!1623}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1621, file: !585, line: 35, baseType: !588, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !700, file: !85, line: 1450, baseType: !193, size: 128, offset: 1344)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !700, file: !85, line: 1451, baseType: !1626, size: 64, offset: 1472)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1628, line: 22, size: 1344, elements: !1629)
!1628 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!1629 = !{!1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !2467, !2468, !2469, !3391, !3392, !3393}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !1627, file: !1628, line: 23, baseType: !704, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !1627, file: !1628, line: 24, baseType: !267, size: 32, offset: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !1627, file: !1628, line: 25, baseType: !542, size: 64, offset: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !1627, file: !1628, line: 26, baseType: !699, size: 64, offset: 128)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !1627, file: !1628, line: 27, baseType: !220, size: 192, offset: 192)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !1627, file: !1628, line: 28, baseType: !256, size: 64, offset: 384)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !1627, file: !1628, line: 29, baseType: !256, size: 64, offset: 448)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !1627, file: !1628, line: 30, baseType: !267, size: 32, offset: 512)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !1627, file: !1628, line: 31, baseType: !690, size: 8, offset: 544)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !1627, file: !1628, line: 33, baseType: !193, size: 128, offset: 576)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !1627, file: !1628, line: 35, baseType: !1626, size: 64, offset: 704)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !1627, file: !1628, line: 36, baseType: !410, size: 8, offset: 768)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !1627, file: !1628, line: 37, baseType: !1643, size: 64, offset: 832)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !1645, line: 53, size: 6592, elements: !1646)
!1645 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!1646 = !{!1647, !1649, !1650, !1651, !1654, !1675, !2446, !2447, !2448, !2449, !2459}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !1644, file: !1645, line: 54, baseType: !1648, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !194, line: 125, baseType: !298)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !1644, file: !1645, line: 60, baseType: !1648, size: 64, offset: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1644, file: !1645, line: 64, baseType: !248, size: 64, offset: 128)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !1644, file: !1645, line: 65, baseType: !1652, size: 64, offset: 192)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !1645, line: 65, flags: DIFlagFwdDecl)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1644, file: !1645, line: 66, baseType: !1655, size: 128, offset: 256)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !1656, line: 105, size: 128, elements: !1657)
!1656 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!1657 = !{!1658, !1659}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !1655, file: !1656, line: 110, baseType: !248, size: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1655, file: !1656, line: 118, baseType: !1660, size: 64, offset: 64)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !1656, line: 95, size: 448, elements: !1662)
!1662 = !{!1663, !1664, !1670, !1671, !1672, !1673, !1674}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1661, file: !1656, line: 96, baseType: !224, size: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1661, file: !1656, line: 97, baseType: !1665, size: 64, offset: 64)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !1656, line: 60, baseType: !1667)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{null, !1669}
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !1661, file: !1656, line: 98, baseType: !1665, size: 64, offset: 128)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !1661, file: !1656, line: 99, baseType: !690, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !1661, file: !1656, line: 100, baseType: !690, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1661, file: !1656, line: 101, baseType: !870, size: 128, align: 64, offset: 256)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1661, file: !1656, line: 102, baseType: !1669, size: 64, offset: 384)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !1644, file: !1645, line: 68, baseType: !1676, size: 5568, offset: 384)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !114, line: 461, size: 5568, elements: !1677)
!1677 = !{!1678, !1976, !1978, !1981, !1982, !2033, !2125, !2126, !2127, !2128, !2129, !2138, !2264, !2277, !2281, !2282, !2286, !2288, !2289, !2290, !2294, !2300, !2301, !2304, !2308, !2398, !2399, !2400, !2401, !2402, !2434, !2435, !2436, !2439, !2442, !2443, !2444, !2445}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1676, file: !114, line: 462, baseType: !1679, size: 512)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !1680, line: 64, size: 512, elements: !1681)
!1680 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!1681 = !{!1682, !1683, !1684, !1686, !1728, !1833, !1966, !1971, !1972, !1973, !1974, !1975}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1679, file: !1680, line: 65, baseType: !645, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1679, file: !1680, line: 66, baseType: !193, size: 128, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1679, file: !1680, line: 67, baseType: !1685, size: 64, offset: 192)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !1679, file: !1680, line: 68, baseType: !1687, size: 64, offset: 256)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !1680, line: 192, size: 704, elements: !1689)
!1689 = !{!1690, !1691, !1692, !1693}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1688, file: !1680, line: 193, baseType: !193, size: 128)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1688, file: !1680, line: 194, baseType: !202, offset: 128)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1688, file: !1680, line: 195, baseType: !1679, size: 512, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !1688, file: !1680, line: 196, baseType: !1694, size: 64, offset: 640)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !1680, line: 156, size: 192, elements: !1697)
!1697 = !{!1698, !1703, !1708}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1696, file: !1680, line: 157, baseType: !1699, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1700)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!267, !1687, !1685}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1696, file: !1680, line: 158, baseType: !1704, size: 64, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1705)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!645, !1687, !1685}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1696, file: !1680, line: 159, baseType: !1709, size: 64, offset: 128)
!1709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1710)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{!267, !1687, !1685, !1713}
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !1680, line: 148, size: 20736, elements: !1715)
!1715 = !{!1716, !1718, !1722, !1723, !1727}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !1714, file: !1680, line: 149, baseType: !1717, size: 192)
!1717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !671, size: 192, elements: !755)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !1714, file: !1680, line: 150, baseType: !1719, size: 4096, offset: 192)
!1719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !671, size: 4096, elements: !1720)
!1720 = !{!1721}
!1721 = !DISubrange(count: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !1714, file: !1680, line: 151, baseType: !267, size: 32, offset: 4288)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1714, file: !1680, line: 152, baseType: !1724, size: 16384, offset: 4320)
!1724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 16384, elements: !1725)
!1725 = !{!1726}
!1726 = !DISubrange(count: 2048)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !1714, file: !1680, line: 153, baseType: !267, size: 32, offset: 20704)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !1679, file: !1680, line: 69, baseType: !1729, size: 64, offset: 320)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !1680, line: 138, size: 448, elements: !1731)
!1731 = !{!1732, !1736, !1755, !1757, !1790, !1823, !1827}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1730, file: !1680, line: 139, baseType: !1733, size: 64)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = !DISubroutineType(types: !1735)
!1735 = !{null, !1685}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !1730, file: !1680, line: 140, baseType: !1737, size: 64, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !1740, line: 230, size: 128, elements: !1741)
!1740 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!1741 = !{!1742, !1751}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1739, file: !1740, line: 231, baseType: !1743, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{!895, !1685, !1746, !671}
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !1740, line: 30, size: 128, elements: !1748)
!1748 = !{!1749, !1750}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1747, file: !1740, line: 31, baseType: !645, size: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1747, file: !1740, line: 32, baseType: !546, size: 16, offset: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1739, file: !1740, line: 232, baseType: !1752, size: 64, offset: 64)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1753 = !DISubroutineType(types: !1754)
!1754 = !{!895, !1685, !1746, !645, !823}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !1730, file: !1680, line: 141, baseType: !1756, size: 64, offset: 128)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !1730, file: !1680, line: 142, baseType: !1758, size: 64, offset: 192)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1761)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !1740, line: 84, size: 320, elements: !1762)
!1762 = !{!1763, !1764, !1768, !1787, !1788}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1761, file: !1740, line: 85, baseType: !645, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !1761, file: !1740, line: 86, baseType: !1765, size: 64, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = !DISubroutineType(types: !1767)
!1767 = !{!546, !1685, !1746, !267}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !1761, file: !1740, line: 88, baseType: !1769, size: 64, offset: 128)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{!546, !1685, !1772, !267}
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !1740, line: 168, size: 448, elements: !1774)
!1774 = !{!1775, !1776, !1777, !1778, !1782, !1783}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1773, file: !1740, line: 169, baseType: !1747, size: 128)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1773, file: !1740, line: 170, baseType: !823, size: 64, offset: 128)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1773, file: !1740, line: 171, baseType: !256, size: 64, offset: 192)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1773, file: !1740, line: 172, baseType: !1779, size: 64, offset: 256)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!895, !890, !1685, !1772, !671, !709, !823}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1773, file: !1740, line: 174, baseType: !1779, size: 64, offset: 320)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1773, file: !1740, line: 176, baseType: !1784, size: 64, offset: 384)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!267, !890, !1685, !1772, !445}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !1761, file: !1740, line: 90, baseType: !1756, size: 64, offset: 192)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !1761, file: !1740, line: 91, baseType: !1789, size: 64, offset: 256)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !1730, file: !1680, line: 143, baseType: !1791, size: 64, offset: 256)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1792 = !DISubroutineType(types: !1793)
!1793 = !{!1794, !1685}
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1796)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !102, line: 39, size: 384, elements: !1797)
!1797 = !{!1798, !1799, !1803, !1807, !1815, !1819}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1796, file: !102, line: 40, baseType: !101, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !1796, file: !102, line: 41, baseType: !1800, size: 64, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!690}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !1796, file: !102, line: 42, baseType: !1804, size: 64, offset: 128)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!256}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !1796, file: !102, line: 43, baseType: !1808, size: 64, offset: 192)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!1811, !1813}
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !102, line: 19, flags: DIFlagFwdDecl)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !1796, file: !102, line: 44, baseType: !1816, size: 64, offset: 256)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!1811}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !1796, file: !102, line: 45, baseType: !1820, size: 64, offset: 320)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{null, !256}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !1730, file: !1680, line: 144, baseType: !1824, size: 64, offset: 320)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!1811, !1685}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !1730, file: !1680, line: 145, baseType: !1828, size: 64, offset: 384)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{null, !1685, !1831, !1832}
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !1679, file: !1680, line: 70, baseType: !1834, size: 64, offset: 384)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !723, line: 123, size: 1024, elements: !1836)
!1836 = !{!1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1959, !1960, !1961, !1962, !1963}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1835, file: !723, line: 124, baseType: !263, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1835, file: !723, line: 125, baseType: !263, size: 32, offset: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1835, file: !723, line: 135, baseType: !1834, size: 64, offset: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1835, file: !723, line: 136, baseType: !645, size: 64, offset: 128)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1835, file: !723, line: 138, baseType: !288, size: 192, align: 64, offset: 192)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1835, file: !723, line: 140, baseType: !1811, size: 64, offset: 384)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1835, file: !723, line: 141, baseType: !7, size: 32, offset: 448)
!1844 = !DIDerivedType(tag: DW_TAG_member, scope: !1835, file: !723, line: 142, baseType: !1845, size: 256, offset: 512)
!1845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1835, file: !723, line: 142, size: 256, elements: !1846)
!1846 = !{!1847, !1899, !1903}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1845, file: !723, line: 143, baseType: !1848, size: 192)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !723, line: 91, size: 192, elements: !1849)
!1849 = !{!1850, !1851, !1852}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !1848, file: !723, line: 92, baseType: !248, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1848, file: !723, line: 94, baseType: !400, size: 64, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1848, file: !723, line: 100, baseType: !1853, size: 64, offset: 128)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !723, line: 180, size: 704, elements: !1855)
!1855 = !{!1856, !1857, !1858, !1871, !1872, !1873, !1897, !1898}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1854, file: !723, line: 182, baseType: !1834, size: 64)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1854, file: !723, line: 183, baseType: !7, size: 32, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !1854, file: !723, line: 186, baseType: !1859, size: 192, offset: 128)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1860, line: 19, size: 192, elements: !1861)
!1860 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1861 = !{!1862, !1869, !1870}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1859, file: !1860, line: 20, baseType: !1863, size: 128)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1864, line: 292, size: 128, elements: !1865)
!1864 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1865 = !{!1866, !1867, !1868}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1863, file: !1864, line: 293, baseType: !202)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1863, file: !1864, line: 295, baseType: !502, size: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1863, file: !1864, line: 296, baseType: !256, size: 64, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1859, file: !1860, line: 21, baseType: !7, size: 32, offset: 128)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1859, file: !1860, line: 22, baseType: !7, size: 32, offset: 160)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !1854, file: !723, line: 187, baseType: !250, size: 32, offset: 320)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !1854, file: !723, line: 188, baseType: !250, size: 32, offset: 352)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !1854, file: !723, line: 189, baseType: !1874, size: 64, offset: 384)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !723, line: 168, size: 320, elements: !1876)
!1876 = !{!1877, !1881, !1885, !1889, !1893}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1875, file: !723, line: 169, baseType: !1878, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DISubroutineType(types: !1880)
!1880 = !{!267, !817, !1853}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1875, file: !723, line: 171, baseType: !1882, size: 64, offset: 64)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!267, !1834, !645, !546}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1875, file: !723, line: 173, baseType: !1886, size: 64, offset: 128)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = !DISubroutineType(types: !1888)
!1888 = !{!267, !1834}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1875, file: !723, line: 174, baseType: !1890, size: 64, offset: 192)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{!267, !1834, !1834, !645}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1875, file: !723, line: 176, baseType: !1894, size: 64, offset: 256)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{!267, !817, !1834, !1853}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !1854, file: !723, line: 192, baseType: !193, size: 128, offset: 448)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !1854, file: !723, line: 194, baseType: !1021, size: 128, offset: 576)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1845, file: !723, line: 144, baseType: !1900, size: 64)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !723, line: 103, size: 64, elements: !1901)
!1901 = !{!1902}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !1900, file: !723, line: 104, baseType: !1834, size: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1845, file: !723, line: 145, baseType: !1904, size: 256)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !723, line: 107, size: 256, elements: !1905)
!1905 = !{!1906, !1954, !1957, !1958}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1904, file: !723, line: 108, baseType: !1907, size: 64)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1909)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !723, line: 217, size: 768, elements: !1910)
!1910 = !{!1911, !1931, !1935, !1936, !1937, !1938, !1939, !1943, !1944, !1945, !1946, !1950}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1909, file: !723, line: 222, baseType: !1912, size: 64)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64)
!1913 = !DISubroutineType(types: !1914)
!1914 = !{!267, !1915}
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !723, line: 197, size: 1088, elements: !1917)
!1917 = !{!1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1916, file: !723, line: 199, baseType: !1834, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1916, file: !723, line: 200, baseType: !890, size: 64, offset: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !1916, file: !723, line: 201, baseType: !817, size: 64, offset: 128)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1916, file: !723, line: 202, baseType: !256, size: 64, offset: 192)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1916, file: !723, line: 205, baseType: !220, size: 192, offset: 256)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !1916, file: !723, line: 206, baseType: !220, size: 192, offset: 448)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1916, file: !723, line: 207, baseType: !267, size: 32, offset: 640)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1916, file: !723, line: 208, baseType: !193, size: 128, offset: 704)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !1916, file: !723, line: 209, baseType: !671, size: 64, offset: 832)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !1916, file: !723, line: 211, baseType: !823, size: 64, offset: 896)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !1916, file: !723, line: 212, baseType: !690, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !1916, file: !723, line: 213, baseType: !690, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1916, file: !723, line: 214, baseType: !474, size: 64, offset: 1024)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1909, file: !723, line: 223, baseType: !1932, size: 64, offset: 64)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{null, !1915}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !1909, file: !723, line: 236, baseType: !851, size: 64, offset: 128)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !1909, file: !723, line: 238, baseType: !838, size: 64, offset: 192)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !1909, file: !723, line: 239, baseType: !847, size: 64, offset: 256)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !1909, file: !723, line: 240, baseType: !843, size: 64, offset: 320)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1909, file: !723, line: 242, baseType: !1940, size: 64, offset: 384)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!895, !1915, !671, !823, !709}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !1909, file: !723, line: 252, baseType: !823, size: 64, offset: 448)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !1909, file: !723, line: 259, baseType: !690, size: 8, offset: 512)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1909, file: !723, line: 260, baseType: !1940, size: 64, offset: 576)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1909, file: !723, line: 263, baseType: !1947, size: 64, offset: 640)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64)
!1948 = !DISubroutineType(types: !1949)
!1949 = !{!971, !1915, !973}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1909, file: !723, line: 266, baseType: !1951, size: 64, offset: 704)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{!267, !1915, !445}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1904, file: !723, line: 109, baseType: !1955, size: 64, offset: 64)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !723, line: 31, flags: DIFlagFwdDecl)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1904, file: !723, line: 110, baseType: !709, size: 64, offset: 128)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !1904, file: !723, line: 111, baseType: !1834, size: 64, offset: 192)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1835, file: !723, line: 148, baseType: !256, size: 64, offset: 768)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1835, file: !723, line: 154, baseType: !298, size: 64, offset: 832)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1835, file: !723, line: 156, baseType: !315, size: 16, offset: 896)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1835, file: !723, line: 157, baseType: !546, size: 16, offset: 912)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !1835, file: !723, line: 158, baseType: !1964, size: 64, offset: 960)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1965 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !723, line: 32, flags: DIFlagFwdDecl)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1679, file: !1680, line: 71, baseType: !1967, size: 32, offset: 448)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1968, line: 19, size: 32, elements: !1969)
!1968 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1969 = !{!1970}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1967, file: !1968, line: 20, baseType: !258, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !1679, file: !1680, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !1679, file: !1680, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !1679, file: !1680, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !1679, file: !1680, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !1679, file: !1680, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1676, file: !114, line: 463, baseType: !1977, size: 64, offset: 512)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1676, file: !114, line: 465, baseType: !1979, size: 64, offset: 576)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1980 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !114, line: 36, flags: DIFlagFwdDecl)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !1676, file: !114, line: 467, baseType: !645, size: 64, offset: 640)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1676, file: !114, line: 468, baseType: !1983, size: 64, offset: 704)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !114, line: 87, size: 384, elements: !1986)
!1986 = !{!1987, !1988, !1989, !1993, !1998, !2002}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1985, file: !114, line: 88, baseType: !645, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1985, file: !114, line: 89, baseType: !1758, size: 64, offset: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1985, file: !114, line: 90, baseType: !1990, size: 64, offset: 128)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = !DISubroutineType(types: !1992)
!1992 = !{!267, !1977, !1713}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !1985, file: !114, line: 91, baseType: !1994, size: 64, offset: 192)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = !DISubroutineType(types: !1996)
!1996 = !{!671, !1977, !1997, !1831, !1832}
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1985, file: !114, line: 93, baseType: !1999, size: 64, offset: 256)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = !DISubroutineType(types: !2001)
!2001 = !{null, !1977}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1985, file: !114, line: 95, baseType: !2003, size: 64, offset: 320)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2005)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !60, line: 278, size: 1472, elements: !2006)
!2006 = !{!2007, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !2005, file: !60, line: 279, baseType: !2008, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = !DISubroutineType(types: !2010)
!2010 = !{!267, !1977}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !2005, file: !60, line: 280, baseType: !1999, size: 64, offset: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2005, file: !60, line: 281, baseType: !2008, size: 64, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2005, file: !60, line: 282, baseType: !2008, size: 64, offset: 192)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !2005, file: !60, line: 283, baseType: !2008, size: 64, offset: 256)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !2005, file: !60, line: 284, baseType: !2008, size: 64, offset: 320)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !2005, file: !60, line: 285, baseType: !2008, size: 64, offset: 384)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !2005, file: !60, line: 286, baseType: !2008, size: 64, offset: 448)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !2005, file: !60, line: 287, baseType: !2008, size: 64, offset: 512)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !2005, file: !60, line: 288, baseType: !2008, size: 64, offset: 576)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !2005, file: !60, line: 289, baseType: !2008, size: 64, offset: 640)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !2005, file: !60, line: 290, baseType: !2008, size: 64, offset: 704)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !2005, file: !60, line: 291, baseType: !2008, size: 64, offset: 768)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !2005, file: !60, line: 292, baseType: !2008, size: 64, offset: 832)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !2005, file: !60, line: 293, baseType: !2008, size: 64, offset: 896)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !2005, file: !60, line: 294, baseType: !2008, size: 64, offset: 960)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !2005, file: !60, line: 295, baseType: !2008, size: 64, offset: 1024)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !2005, file: !60, line: 296, baseType: !2008, size: 64, offset: 1088)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !2005, file: !60, line: 297, baseType: !2008, size: 64, offset: 1152)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !2005, file: !60, line: 298, baseType: !2008, size: 64, offset: 1216)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !2005, file: !60, line: 299, baseType: !2008, size: 64, offset: 1280)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !2005, file: !60, line: 300, baseType: !2008, size: 64, offset: 1344)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !2005, file: !60, line: 301, baseType: !2008, size: 64, offset: 1408)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1676, file: !114, line: 470, baseType: !2034, size: 64, offset: 768)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !2036, line: 82, size: 1408, elements: !2037)
!2036 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!2037 = !{!2038, !2039, !2040, !2041, !2042, !2043, !2044, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2120, !2123, !2124}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2035, file: !2036, line: 83, baseType: !645, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2035, file: !2036, line: 84, baseType: !645, size: 64, offset: 64)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !2035, file: !2036, line: 85, baseType: !1977, size: 64, offset: 128)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !2035, file: !2036, line: 86, baseType: !1758, size: 64, offset: 192)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2035, file: !2036, line: 87, baseType: !1758, size: 64, offset: 256)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !2035, file: !2036, line: 88, baseType: !1758, size: 64, offset: 320)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !2035, file: !2036, line: 90, baseType: !2045, size: 64, offset: 384)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = !DISubroutineType(types: !2047)
!2047 = !{!267, !1977, !2048}
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !108, line: 95, size: 1152, elements: !2050)
!2050 = !{!2051, !2052, !2053, !2054, !2055, !2056, !2057, !2071, !2084, !2085, !2086, !2087, !2088, !2096, !2097, !2098, !2099, !2100, !2101}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2049, file: !108, line: 96, baseType: !645, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2049, file: !108, line: 97, baseType: !2034, size: 64, offset: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2049, file: !108, line: 99, baseType: !182, size: 64, offset: 128)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !2049, file: !108, line: 100, baseType: !645, size: 64, offset: 192)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !2049, file: !108, line: 102, baseType: !690, size: 8, offset: 256)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !2049, file: !108, line: 103, baseType: !107, size: 32, offset: 288)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !2049, file: !108, line: 105, baseType: !2058, size: 64, offset: 320)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2060)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !2061, line: 262, size: 1600, elements: !2062)
!2061 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!2062 = !{!2063, !2065, !2066, !2070}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2060, file: !2061, line: 263, baseType: !2064, size: 256)
!2064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 256, elements: !610)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2060, file: !2061, line: 264, baseType: !2064, size: 256, offset: 256)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !2060, file: !2061, line: 265, baseType: !2067, size: 1024, offset: 512)
!2067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 1024, elements: !2068)
!2068 = !{!2069}
!2069 = !DISubrange(count: 128)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2060, file: !2061, line: 266, baseType: !1811, size: 64, offset: 1536)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !2049, file: !108, line: 106, baseType: !2072, size: 64, offset: 384)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2074)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !2061, line: 210, size: 256, elements: !2075)
!2075 = !{!2076, !2080, !2082, !2083}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2074, file: !2061, line: 211, baseType: !2077, size: 72)
!2077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 72, elements: !2078)
!2078 = !{!2079}
!2079 = !DISubrange(count: 9)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2074, file: !2061, line: 212, baseType: !2081, size: 64, offset: 128)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !2061, line: 14, baseType: !248)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !2074, file: !2061, line: 213, baseType: !251, size: 32, offset: 192)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !2074, file: !2061, line: 214, baseType: !251, size: 32, offset: 224)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2049, file: !108, line: 108, baseType: !2008, size: 64, offset: 448)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2049, file: !108, line: 109, baseType: !1999, size: 64, offset: 512)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2049, file: !108, line: 110, baseType: !2008, size: 64, offset: 576)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2049, file: !108, line: 111, baseType: !1999, size: 64, offset: 640)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2049, file: !108, line: 112, baseType: !2089, size: 64, offset: 704)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2090 = !DISubroutineType(types: !2091)
!2091 = !{!267, !1977, !2092}
!2092 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !60, line: 52, baseType: !2093)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !60, line: 50, size: 32, elements: !2094)
!2094 = !{!2095}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2093, file: !60, line: 51, baseType: !267, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2049, file: !108, line: 113, baseType: !2008, size: 64, offset: 768)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2049, file: !108, line: 114, baseType: !1758, size: 64, offset: 832)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2049, file: !108, line: 115, baseType: !1758, size: 64, offset: 896)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2049, file: !108, line: 117, baseType: !2003, size: 64, offset: 960)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !2049, file: !108, line: 118, baseType: !1999, size: 64, offset: 1024)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2049, file: !108, line: 120, baseType: !2102, size: 64, offset: 1088)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !108, line: 120, flags: DIFlagFwdDecl)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2035, file: !2036, line: 91, baseType: !1990, size: 64, offset: 448)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2035, file: !2036, line: 92, baseType: !2008, size: 64, offset: 512)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2035, file: !2036, line: 93, baseType: !1999, size: 64, offset: 576)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2035, file: !2036, line: 94, baseType: !2008, size: 64, offset: 640)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2035, file: !2036, line: 95, baseType: !1999, size: 64, offset: 704)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !2035, file: !2036, line: 97, baseType: !2008, size: 64, offset: 768)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !2035, file: !2036, line: 98, baseType: !2008, size: 64, offset: 832)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2035, file: !2036, line: 100, baseType: !2089, size: 64, offset: 896)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2035, file: !2036, line: 101, baseType: !2008, size: 64, offset: 960)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !2035, file: !2036, line: 103, baseType: !2008, size: 64, offset: 1024)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !2035, file: !2036, line: 105, baseType: !2008, size: 64, offset: 1088)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2035, file: !2036, line: 107, baseType: !2003, size: 64, offset: 1152)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !2035, file: !2036, line: 109, baseType: !2117, size: 64, offset: 1216)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2119)
!2119 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !2036, line: 109, flags: DIFlagFwdDecl)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2035, file: !2036, line: 111, baseType: !2121, size: 64, offset: 1280)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !2036, line: 111, flags: DIFlagFwdDecl)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !2035, file: !2036, line: 112, baseType: !749, offset: 1344)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !2035, file: !2036, line: 114, baseType: !690, size: 8, offset: 1344)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1676, file: !114, line: 471, baseType: !2048, size: 64, offset: 832)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !1676, file: !114, line: 473, baseType: !256, size: 64, offset: 896)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1676, file: !114, line: 475, baseType: !256, size: 64, offset: 960)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1676, file: !114, line: 480, baseType: !220, size: 192, offset: 1024)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1676, file: !114, line: 484, baseType: !2130, size: 576, offset: 1216)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !114, line: 361, size: 576, elements: !2131)
!2131 = !{!2132, !2133, !2134, !2135, !2136, !2137}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !2130, file: !114, line: 362, baseType: !193, size: 128)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !2130, file: !114, line: 363, baseType: !193, size: 128, offset: 128)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !2130, file: !114, line: 364, baseType: !193, size: 128, offset: 256)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !2130, file: !114, line: 365, baseType: !193, size: 128, offset: 384)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !2130, file: !114, line: 366, baseType: !690, size: 8, offset: 512)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2130, file: !114, line: 367, baseType: !113, size: 32, offset: 544)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !1676, file: !114, line: 485, baseType: !2139, size: 2304, offset: 1792)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !60, line: 565, size: 2304, elements: !2140)
!2140 = !{!2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2166, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2257, !2261}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !2139, file: !60, line: 566, baseType: !2092, size: 32)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !2139, file: !60, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !2139, file: !60, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !2139, file: !60, line: 569, baseType: !690, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !2139, file: !60, line: 570, baseType: !690, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !2139, file: !60, line: 571, baseType: !690, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !2139, file: !60, line: 572, baseType: !690, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !2139, file: !60, line: 573, baseType: !690, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !2139, file: !60, line: 574, baseType: !690, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !2139, file: !60, line: 575, baseType: !690, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !2139, file: !60, line: 576, baseType: !690, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !2139, file: !60, line: 577, baseType: !250, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2139, file: !60, line: 578, baseType: !202, offset: 96)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2139, file: !60, line: 580, baseType: !193, size: 128, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2139, file: !60, line: 581, baseType: !2156, size: 192, offset: 256)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2157, line: 26, size: 192, elements: !2158)
!2157 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2158 = !{!2159, !2160}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2156, file: !2157, line: 27, baseType: !7, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2156, file: !2157, line: 28, baseType: !2161, size: 128, offset: 64)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2162, line: 43, size: 128, elements: !2163)
!2162 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2163 = !{!2164, !2165}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2161, file: !2162, line: 44, baseType: !361)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2161, file: !2162, line: 45, baseType: !193, size: 128)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !2139, file: !60, line: 582, baseType: !2167, size: 64, offset: 448)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !2169, line: 43, size: 1472, elements: !2170)
!2169 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!2170 = !{!2171, !2172, !2173, !2174, !2175, !2178, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2168, file: !2169, line: 44, baseType: !645, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2168, file: !2169, line: 45, baseType: !267, size: 32, offset: 64)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2168, file: !2169, line: 46, baseType: !193, size: 128, offset: 128)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2168, file: !2169, line: 47, baseType: !202, offset: 256)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2168, file: !2169, line: 48, baseType: !2176, size: 64, offset: 256)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2177 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !60, line: 533, flags: DIFlagFwdDecl)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2168, file: !2169, line: 49, baseType: !2179, size: 320, offset: 320)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2180, line: 11, size: 320, elements: !2181)
!2180 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2181 = !{!2182, !2183, !2184, !2189}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2179, file: !2180, line: 16, baseType: !743, size: 128)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2179, file: !2180, line: 17, baseType: !248, size: 64, offset: 128)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2179, file: !2180, line: 18, baseType: !2185, size: 64, offset: 192)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 64)
!2186 = !DISubroutineType(types: !2187)
!2187 = !{null, !2188}
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2179, file: !2180, line: 19, baseType: !250, size: 32, offset: 256)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2168, file: !2169, line: 50, baseType: !248, size: 64, offset: 640)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !2168, file: !2169, line: 51, baseType: !344, size: 64, offset: 704)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !2168, file: !2169, line: 52, baseType: !344, size: 64, offset: 768)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !2168, file: !2169, line: 53, baseType: !344, size: 64, offset: 832)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !2168, file: !2169, line: 54, baseType: !344, size: 64, offset: 896)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !2168, file: !2169, line: 55, baseType: !344, size: 64, offset: 960)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !2168, file: !2169, line: 56, baseType: !248, size: 64, offset: 1024)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !2168, file: !2169, line: 57, baseType: !248, size: 64, offset: 1088)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !2168, file: !2169, line: 58, baseType: !248, size: 64, offset: 1152)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !2168, file: !2169, line: 59, baseType: !248, size: 64, offset: 1216)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !2168, file: !2169, line: 60, baseType: !248, size: 64, offset: 1280)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2168, file: !2169, line: 61, baseType: !1977, size: 64, offset: 1344)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2168, file: !2169, line: 62, baseType: !690, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !2168, file: !2169, line: 63, baseType: !690, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !2139, file: !60, line: 583, baseType: !690, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !2139, file: !60, line: 584, baseType: !690, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !2139, file: !60, line: 585, baseType: !690, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !2139, file: !60, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !2139, file: !60, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !2139, file: !60, line: 592, baseType: !336, size: 512, offset: 576)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2139, file: !60, line: 593, baseType: !298, size: 64, offset: 1088)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2139, file: !60, line: 594, baseType: !2212, size: 256, offset: 1152)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2213, line: 102, size: 256, elements: !2214)
!2213 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2214 = !{!2215, !2216, !2217}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2212, file: !2213, line: 103, baseType: !224, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2212, file: !2213, line: 104, baseType: !193, size: 128, offset: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2212, file: !2213, line: 105, baseType: !2218, size: 64, offset: 192)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2213, line: 21, baseType: !2219)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64)
!2220 = !DISubroutineType(types: !2221)
!2221 = !{null, !2222}
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !2139, file: !60, line: 595, baseType: !1021, size: 128, offset: 1408)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2139, file: !60, line: 596, baseType: !2176, size: 64, offset: 1536)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !2139, file: !60, line: 597, baseType: !263, size: 32, offset: 1600)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !2139, file: !60, line: 598, baseType: !263, size: 32, offset: 1632)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !2139, file: !60, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !2139, file: !60, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !2139, file: !60, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !2139, file: !60, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !2139, file: !60, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !2139, file: !60, line: 604, baseType: !690, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !2139, file: !60, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !2139, file: !60, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !2139, file: !60, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !2139, file: !60, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !2139, file: !60, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !2139, file: !60, line: 610, baseType: !7, size: 32, offset: 1696)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !2139, file: !60, line: 611, baseType: !120, size: 32, offset: 1728)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !2139, file: !60, line: 612, baseType: !59, size: 32, offset: 1760)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !2139, file: !60, line: 613, baseType: !267, size: 32, offset: 1792)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !2139, file: !60, line: 614, baseType: !267, size: 32, offset: 1824)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !2139, file: !60, line: 615, baseType: !298, size: 64, offset: 1856)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !2139, file: !60, line: 616, baseType: !298, size: 64, offset: 1920)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !2139, file: !60, line: 617, baseType: !298, size: 64, offset: 1984)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !2139, file: !60, line: 618, baseType: !298, size: 64, offset: 2048)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !2139, file: !60, line: 620, baseType: !2248, size: 64, offset: 2112)
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 64)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !60, line: 536, size: 256, elements: !2250)
!2250 = !{!2251, !2252, !2253, !2254}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2249, file: !60, line: 537, baseType: !202)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2249, file: !60, line: 538, baseType: !7, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !2249, file: !60, line: 540, baseType: !193, size: 128, offset: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !2249, file: !60, line: 543, baseType: !2255, size: 64, offset: 192)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !60, line: 534, flags: DIFlagFwdDecl)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !2139, file: !60, line: 621, baseType: !2258, size: 64, offset: 2176)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = !DISubroutineType(types: !2260)
!2260 = !{null, !1977, !1239}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !2139, file: !60, line: 622, baseType: !2262, size: 64, offset: 2240)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 64)
!2263 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !60, line: 622, flags: DIFlagFwdDecl)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !1676, file: !114, line: 486, baseType: !2265, size: 64, offset: 4096)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !60, line: 642, size: 1792, elements: !2267)
!2267 = !{!2268, !2269, !2270, !2274, !2275, !2276}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2266, file: !60, line: 643, baseType: !2005, size: 1472)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2266, file: !60, line: 644, baseType: !2008, size: 64, offset: 1472)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !2266, file: !60, line: 645, baseType: !2271, size: 64, offset: 1536)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64)
!2272 = !DISubroutineType(types: !2273)
!2273 = !{null, !1977, !690}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !2266, file: !60, line: 646, baseType: !2008, size: 64, offset: 1600)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !2266, file: !60, line: 647, baseType: !1999, size: 64, offset: 1664)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !2266, file: !60, line: 648, baseType: !1999, size: 64, offset: 1728)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !1676, file: !114, line: 493, baseType: !2278, size: 64, offset: 4160)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 64)
!2279 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !2280, line: 13, flags: DIFlagFwdDecl)
!2280 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !1676, file: !114, line: 499, baseType: !193, size: 128, offset: 4224)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !1676, file: !114, line: 502, baseType: !2283, size: 64, offset: 4352)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 64)
!2284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2285)
!2285 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !114, line: 502, flags: DIFlagFwdDecl)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !1676, file: !114, line: 504, baseType: !2287, size: 64, offset: 4416)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !1676, file: !114, line: 505, baseType: !298, size: 64, offset: 4480)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !1676, file: !114, line: 510, baseType: !298, size: 64, offset: 4544)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !1676, file: !114, line: 511, baseType: !2291, size: 64, offset: 4608)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2293)
!2293 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !114, line: 511, flags: DIFlagFwdDecl)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !1676, file: !114, line: 513, baseType: !2295, size: 64, offset: 4672)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !114, line: 288, size: 128, elements: !2297)
!2297 = !{!2298, !2299}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !2296, file: !114, line: 293, baseType: !7, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !2296, file: !114, line: 294, baseType: !248, size: 64, offset: 64)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !1676, file: !114, line: 515, baseType: !193, size: 128, offset: 4736)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !1676, file: !114, line: 526, baseType: !2302, offset: 4864)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !2303, line: 5, elements: !216)
!2303 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !1676, file: !114, line: 528, baseType: !2305, size: 64, offset: 4864)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64)
!2306 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !2307, line: 14, flags: DIFlagFwdDecl)
!2307 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1676, file: !114, line: 529, baseType: !2309, size: 64, offset: 4928)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !2311, line: 17, size: 192, elements: !2312)
!2311 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!2312 = !{!2313, !2314, !2397}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !2310, file: !2311, line: 18, baseType: !2309, size: 64)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2310, file: !2311, line: 19, baseType: !2315, size: 64, offset: 64)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !2311, line: 110, size: 1152, elements: !2318)
!2318 = !{!2319, !2323, !2327, !2333, !2339, !2343, !2347, !2352, !2356, !2357, !2361, !2365, !2369, !2380, !2381, !2382, !2383, !2393}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2317, file: !2311, line: 111, baseType: !2320, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DISubroutineType(types: !2322)
!2322 = !{!2309, !2309}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !2317, file: !2311, line: 112, baseType: !2324, size: 64, offset: 64)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = !DISubroutineType(types: !2326)
!2326 = !{null, !2309}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !2317, file: !2311, line: 113, baseType: !2328, size: 64, offset: 128)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64)
!2329 = !DISubroutineType(types: !2330)
!2330 = !{!690, !2331}
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 64)
!2332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2310)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !2317, file: !2311, line: 114, baseType: !2334, size: 64, offset: 192)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = !DISubroutineType(types: !2336)
!2336 = !{!1811, !2331, !2337}
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1676)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !2317, file: !2311, line: 116, baseType: !2340, size: 64, offset: 256)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64)
!2341 = !DISubroutineType(types: !2342)
!2342 = !{!690, !2331, !645}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !2317, file: !2311, line: 118, baseType: !2344, size: 64, offset: 320)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64)
!2345 = !DISubroutineType(types: !2346)
!2346 = !{!267, !2331, !645, !7, !256, !823}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !2317, file: !2311, line: 123, baseType: !2348, size: 64, offset: 384)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DISubroutineType(types: !2350)
!2350 = !{!267, !2331, !645, !2351, !823}
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !2317, file: !2311, line: 126, baseType: !2353, size: 64, offset: 448)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2354 = !DISubroutineType(types: !2355)
!2355 = !{!645, !2331}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !2317, file: !2311, line: 127, baseType: !2353, size: 64, offset: 512)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !2317, file: !2311, line: 128, baseType: !2358, size: 64, offset: 576)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 64)
!2359 = !DISubroutineType(types: !2360)
!2360 = !{!2309, !2331}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !2317, file: !2311, line: 130, baseType: !2362, size: 64, offset: 640)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{!2309, !2331, !2309}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !2317, file: !2311, line: 133, baseType: !2366, size: 64, offset: 704)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!2367 = !DISubroutineType(types: !2368)
!2368 = !{!2309, !2331, !645}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !2317, file: !2311, line: 135, baseType: !2370, size: 64, offset: 768)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = !DISubroutineType(types: !2372)
!2372 = !{!267, !2331, !645, !645, !7, !7, !2373}
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !2311, line: 43, size: 640, elements: !2375)
!2375 = !{!2376, !2377, !2378}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !2374, file: !2311, line: 44, baseType: !2309, size: 64)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !2374, file: !2311, line: 45, baseType: !7, size: 32, offset: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2374, file: !2311, line: 46, baseType: !2379, size: 512, offset: 128)
!2379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 512, elements: !375)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !2317, file: !2311, line: 140, baseType: !2362, size: 64, offset: 832)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !2317, file: !2311, line: 143, baseType: !2358, size: 64, offset: 896)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !2317, file: !2311, line: 145, baseType: !2320, size: 64, offset: 960)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !2317, file: !2311, line: 146, baseType: !2384, size: 64, offset: 1024)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 64)
!2385 = !DISubroutineType(types: !2386)
!2386 = !{!267, !2331, !2387}
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 64)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !2311, line: 29, size: 128, elements: !2389)
!2389 = !{!2390, !2391, !2392}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2388, file: !2311, line: 30, baseType: !7, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2388, file: !2311, line: 31, baseType: !7, size: 32, offset: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !2388, file: !2311, line: 32, baseType: !2331, size: 64, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !2317, file: !2311, line: 148, baseType: !2394, size: 64, offset: 1088)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64)
!2395 = !DISubroutineType(types: !2396)
!2396 = !{!267, !2331, !1977}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2310, file: !2311, line: 20, baseType: !1977, size: 64, offset: 128)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !1676, file: !114, line: 534, baseType: !704, size: 32, offset: 4992)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1676, file: !114, line: 535, baseType: !250, size: 32, offset: 5024)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !1676, file: !114, line: 537, baseType: !202, offset: 5056)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !1676, file: !114, line: 538, baseType: !193, size: 128, offset: 5056)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1676, file: !114, line: 540, baseType: !2403, size: 64, offset: 5184)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !2405, line: 54, size: 960, elements: !2406)
!2405 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!2406 = !{!2407, !2408, !2409, !2410, !2411, !2412, !2413, !2417, !2421, !2422, !2423, !2424, !2428, !2432, !2433}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2404, file: !2405, line: 55, baseType: !645, size: 64)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2404, file: !2405, line: 56, baseType: !182, size: 64, offset: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !2404, file: !2405, line: 58, baseType: !1758, size: 64, offset: 128)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2404, file: !2405, line: 59, baseType: !1758, size: 64, offset: 192)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !2404, file: !2405, line: 60, baseType: !1685, size: 64, offset: 256)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !2404, file: !2405, line: 62, baseType: !1990, size: 64, offset: 320)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2404, file: !2405, line: 63, baseType: !2414, size: 64, offset: 384)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{!671, !1977, !1997}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !2404, file: !2405, line: 65, baseType: !2418, size: 64, offset: 448)
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 64)
!2419 = !DISubroutineType(types: !2420)
!2420 = !{null, !2403}
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !2404, file: !2405, line: 66, baseType: !1999, size: 64, offset: 512)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !2404, file: !2405, line: 68, baseType: !2008, size: 64, offset: 576)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !2404, file: !2405, line: 70, baseType: !1794, size: 64, offset: 640)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !2404, file: !2405, line: 71, baseType: !2425, size: 64, offset: 704)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64)
!2426 = !DISubroutineType(types: !2427)
!2427 = !{!1811, !1977}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !2404, file: !2405, line: 73, baseType: !2429, size: 64, offset: 768)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!2430 = !DISubroutineType(types: !2431)
!2431 = !{null, !1977, !1831, !1832}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2404, file: !2405, line: 75, baseType: !2003, size: 64, offset: 832)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2404, file: !2405, line: 77, baseType: !2121, size: 64, offset: 896)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1676, file: !114, line: 541, baseType: !1758, size: 64, offset: 5248)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1676, file: !114, line: 543, baseType: !1999, size: 64, offset: 5312)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !1676, file: !114, line: 544, baseType: !2437, size: 64, offset: 5376)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64)
!2438 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !114, line: 45, flags: DIFlagFwdDecl)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !1676, file: !114, line: 545, baseType: !2440, size: 64, offset: 5440)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2441 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !114, line: 47, flags: DIFlagFwdDecl)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !1676, file: !114, line: 547, baseType: !690, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1676, file: !114, line: 548, baseType: !690, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !1676, file: !114, line: 549, baseType: !690, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !1676, file: !114, line: 550, baseType: !690, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !1644, file: !1645, line: 69, baseType: !1685, size: 64, offset: 5952)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1644, file: !1645, line: 70, baseType: !267, size: 32, offset: 6016)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !1644, file: !1645, line: 70, baseType: !267, size: 32, offset: 6048)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1644, file: !1645, line: 71, baseType: !2450, size: 64, offset: 6080)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !1645, line: 48, size: 808, elements: !2452)
!2452 = !{!2453, !2457}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !2451, file: !1645, line: 49, baseType: !2454, size: 296)
!2454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 296, elements: !2455)
!2455 = !{!2456}
!2456 = !DISubrange(count: 37)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !2451, file: !1645, line: 50, baseType: !2458, size: 512, offset: 296)
!2458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 512, elements: !1720)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !1644, file: !1645, line: 75, baseType: !2460, size: 448, offset: 6144)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !2213, line: 124, size: 448, elements: !2461)
!2461 = !{!2462, !2463, !2464}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2460, file: !2213, line: 125, baseType: !2212, size: 256)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2460, file: !2213, line: 126, baseType: !870, size: 128, align: 64, offset: 256)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2460, file: !2213, line: 129, baseType: !2465, size: 64, offset: 384)
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 64)
!2466 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2213, line: 18, flags: DIFlagFwdDecl)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !1627, file: !1628, line: 39, baseType: !7, size: 32, offset: 896)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !1627, file: !1628, line: 41, baseType: !202, offset: 928)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !1627, file: !1628, line: 42, baseType: !2470, size: 64, offset: 960)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !1645, line: 167, size: 8512, elements: !2472)
!2472 = !{!2473, !2474, !2475, !2476, !2477, !2478, !2479, !2490, !2491, !2672, !3372, !3373, !3374, !3375, !3376, !3377, !3380, !3381, !3384, !3385, !3386, !3389}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2471, file: !1645, line: 171, baseType: !267, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !2471, file: !1645, line: 172, baseType: !267, size: 32, offset: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !2471, file: !1645, line: 173, baseType: !267, size: 32, offset: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2471, file: !1645, line: 176, baseType: !2064, size: 256, offset: 96)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2471, file: !1645, line: 178, baseType: !315, size: 16, offset: 352)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !2471, file: !1645, line: 179, baseType: !315, size: 16, offset: 368)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !2471, file: !1645, line: 186, baseType: !2480, size: 64, offset: 384)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !1645, line: 149, size: 256, elements: !2482)
!2482 = !{!2483, !2484, !2485, !2486}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2481, file: !1645, line: 150, baseType: !870, size: 128, align: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2481, file: !1645, line: 151, baseType: !267, size: 32, offset: 128)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !2481, file: !1645, line: 152, baseType: !1643, size: 64, offset: 192)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2481, file: !1645, line: 153, baseType: !2487, offset: 256)
!2487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1643, elements: !2488)
!2488 = !{!2489}
!2489 = !DISubrange(count: -1)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !2471, file: !1645, line: 187, baseType: !1644, size: 6592, offset: 448)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !2471, file: !1645, line: 189, baseType: !2492, size: 64, offset: 7040)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64)
!2493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2494)
!2494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !43, line: 1844, size: 960, elements: !2495)
!2495 = !{!2496, !2598, !2602, !2606, !2610, !2614, !2615, !2619, !2623, !2627, !2633, !2637, !2663, !2667, !2668}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !2494, file: !43, line: 1845, baseType: !2497, size: 64)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!2498 = !DISubroutineType(types: !2499)
!2499 = !{!2500, !2501}
!2500 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !1628, line: 515, baseType: !7)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !1628, line: 203, size: 832, elements: !2503)
!2503 = !{!2504, !2505, !2506, !2507, !2508, !2509, !2510, !2512, !2513, !2514, !2522, !2527, !2528, !2553, !2554, !2555, !2556, !2557, !2597}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !2502, file: !1628, line: 204, baseType: !2501, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !2502, file: !1628, line: 205, baseType: !2470, size: 64, offset: 64)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !2502, file: !1628, line: 206, baseType: !7, size: 32, offset: 128)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !2502, file: !1628, line: 210, baseType: !315, size: 16, offset: 160)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !2502, file: !1628, line: 211, baseType: !315, size: 16, offset: 176)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !2502, file: !1628, line: 212, baseType: !315, size: 16, offset: 192)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !2502, file: !1628, line: 213, baseType: !2511, size: 8, offset: 208)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !1628, line: 58, baseType: !410)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !2502, file: !1628, line: 214, baseType: !410, size: 8, offset: 216)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !2502, file: !1628, line: 215, baseType: !263, size: 32, offset: 224)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !2502, file: !1628, line: 217, baseType: !2515, size: 192, offset: 256)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !2516, line: 37, size: 192, elements: !2517)
!2516 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!2517 = !{!2518, !2519, !2520, !2521}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !2515, file: !2516, line: 38, baseType: !1648, size: 64)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !2515, file: !2516, line: 40, baseType: !7, size: 32, offset: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !2515, file: !2516, line: 42, baseType: !7, size: 32, offset: 96)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !2515, file: !2516, line: 44, baseType: !7, size: 32, offset: 128)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !2502, file: !1628, line: 219, baseType: !2523, size: 64, offset: 448)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !1628, line: 19, baseType: !2525)
!2525 = !DISubroutineType(types: !2526)
!2526 = !{null, !2501}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !2502, file: !1628, line: 221, baseType: !256, size: 64, offset: 512)
!2528 = !DIDerivedType(tag: DW_TAG_member, scope: !2502, file: !1628, line: 240, baseType: !2529, size: 64, offset: 576)
!2529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2502, file: !1628, line: 240, size: 64, elements: !2530)
!2530 = !{!2531}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !2529, file: !1628, line: 242, baseType: !2532, size: 64)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !2534, line: 313, size: 832, elements: !2535)
!2534 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!2535 = !{!2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2551}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !2533, file: !2534, line: 314, baseType: !2501, size: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !2533, file: !2534, line: 316, baseType: !2515, size: 192, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !2533, file: !2534, line: 318, baseType: !315, size: 16, offset: 256)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !2533, file: !2534, line: 319, baseType: !315, size: 16, offset: 272)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !2533, file: !2534, line: 320, baseType: !315, size: 16, offset: 288)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !2533, file: !2534, line: 321, baseType: !315, size: 16, offset: 304)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !2533, file: !2534, line: 323, baseType: !2515, size: 192, offset: 320)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !2533, file: !2534, line: 325, baseType: !2212, size: 256, offset: 512)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !2533, file: !2534, line: 327, baseType: !2545, size: 64, offset: 768)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 64)
!2546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !2516, line: 31, size: 128, elements: !2547)
!2547 = !{!2548, !2549, !2550}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !2546, file: !2516, line: 32, baseType: !526, size: 64)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !2546, file: !2516, line: 33, baseType: !7, size: 32, offset: 64)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !2546, file: !2516, line: 34, baseType: !7, size: 32, offset: 96)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !2533, file: !2534, line: 328, baseType: !2552, offset: 832)
!2552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2546, elements: !2488)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !2502, file: !1628, line: 246, baseType: !315, size: 16, offset: 640)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !2502, file: !1628, line: 252, baseType: !315, size: 16, offset: 656)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !2502, file: !1628, line: 254, baseType: !263, size: 32, offset: 672)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !2502, file: !1628, line: 256, baseType: !2545, size: 64, offset: 704)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !2502, file: !1628, line: 258, baseType: !2558, size: 64, offset: 768)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 64)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !2534, line: 682, size: 2368, elements: !2560)
!2560 = !{!2561, !2564, !2565, !2586, !2587, !2588, !2589, !2590, !2595, !2596}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !2559, file: !2534, line: 683, baseType: !2562, size: 64)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64)
!2563 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !439, line: 117, flags: DIFlagFwdDecl)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !2559, file: !2534, line: 684, baseType: !7, size: 32, offset: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !2559, file: !2534, line: 686, baseType: !2566, size: 448, offset: 128)
!2566 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !2567, line: 26, baseType: !2568)
!2567 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !2567, line: 16, size: 448, elements: !2569)
!2569 = !{!2570, !2571, !2572, !2573, !2574, !2575, !2580, !2585}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2568, file: !2567, line: 17, baseType: !202)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !2568, file: !2567, line: 18, baseType: !267, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !2568, file: !2567, line: 19, baseType: !267, size: 32, offset: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2568, file: !2567, line: 20, baseType: !1091, size: 64, offset: 64)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !2568, file: !2567, line: 22, baseType: !256, size: 64, offset: 128)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2568, file: !2567, line: 23, baseType: !2576, size: 64, offset: 192)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 64)
!2577 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !2567, line: 13, baseType: !2578)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{!256, !502, !256}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2568, file: !2567, line: 24, baseType: !2581, size: 64, offset: 256)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 64)
!2582 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !2567, line: 14, baseType: !2583)
!2583 = !DISubroutineType(types: !2584)
!2584 = !{null, !256, !256}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2568, file: !2567, line: 25, baseType: !1021, size: 128, offset: 320)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !2559, file: !2534, line: 687, baseType: !2566, size: 448, offset: 576)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !2559, file: !2534, line: 689, baseType: !2566, size: 448, offset: 1024)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !2559, file: !2534, line: 690, baseType: !2566, size: 448, offset: 1472)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !2559, file: !2534, line: 697, baseType: !202, offset: 1920)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !2559, file: !2534, line: 698, baseType: !2591, size: 128, offset: 1920)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2534, line: 554, size: 128, elements: !2592)
!2592 = !{!2593, !2594}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2591, file: !2534, line: 555, baseType: !2501, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2591, file: !2534, line: 556, baseType: !2501, size: 64, offset: 64)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !2559, file: !2534, line: 699, baseType: !2212, size: 256, offset: 2048)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !2559, file: !2534, line: 700, baseType: !2465, size: 64, offset: 2304)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !2502, file: !1628, line: 265, baseType: !2552, offset: 832)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2494, file: !43, line: 1846, baseType: !2599, size: 64, offset: 64)
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 64)
!2600 = !DISubroutineType(types: !2601)
!2601 = !{!267, !1626, !1167}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2494, file: !43, line: 1847, baseType: !2603, size: 64, offset: 128)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64)
!2604 = !DISubroutineType(types: !2605)
!2605 = !{null, !2470, !1167}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !2494, file: !43, line: 1848, baseType: !2607, size: 64, offset: 192)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 64)
!2608 = !DISubroutineType(types: !2609)
!2609 = !{!267, !1626, !1648, !526, !7}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2494, file: !43, line: 1849, baseType: !2611, size: 64, offset: 256)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{!267, !1626, !1167, !7, !248}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2494, file: !43, line: 1850, baseType: !2611, size: 64, offset: 320)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !2494, file: !43, line: 1851, baseType: !2616, size: 64, offset: 384)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2617 = !DISubroutineType(types: !2618)
!2618 = !{!7, !2470, !7}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !2494, file: !43, line: 1853, baseType: !2620, size: 64, offset: 448)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64)
!2621 = !DISubroutineType(types: !2622)
!2622 = !{null, !2470}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !2494, file: !43, line: 1854, baseType: !2624, size: 64, offset: 512)
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 64)
!2625 = !DISubroutineType(types: !2626)
!2626 = !{!267, !2470}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !2494, file: !43, line: 1855, baseType: !2628, size: 64, offset: 576)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 64)
!2629 = !DISubroutineType(types: !2630)
!2630 = !{!267, !1626, !2631}
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 64)
!2632 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !85, line: 51, flags: DIFlagFwdDecl)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !2494, file: !43, line: 1857, baseType: !2634, size: 64, offset: 640)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 64)
!2635 = !DISubroutineType(types: !2636)
!2636 = !{null, !1626, !248}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !2494, file: !43, line: 1858, baseType: !2638, size: 64, offset: 704)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64)
!2639 = !DISubroutineType(types: !2640)
!2640 = !{!267, !2470, !1648, !7, !2641, !256}
!2641 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !43, line: 354, baseType: !2642)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = !DISubroutineType(types: !2644)
!2644 = !{!267, !2645, !7, !256}
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !2647, line: 106, size: 512, elements: !2648)
!2647 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!2648 = !{!2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2658, !2659}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2646, file: !2647, line: 107, baseType: !299, size: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2646, file: !2647, line: 108, baseType: !299, size: 64, offset: 64)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !2646, file: !2647, line: 109, baseType: !299, size: 64, offset: 128)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2646, file: !2647, line: 110, baseType: !411, size: 8, offset: 192)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2646, file: !2647, line: 111, baseType: !411, size: 8, offset: 200)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !2646, file: !2647, line: 112, baseType: !411, size: 8, offset: 208)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2646, file: !2647, line: 113, baseType: !411, size: 8, offset: 216)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !2646, file: !2647, line: 114, baseType: !2657, size: 32, offset: 224)
!2657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 32, elements: !1183)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2646, file: !2647, line: 115, baseType: !299, size: 64, offset: 256)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2646, file: !2647, line: 116, baseType: !2660, size: 192, offset: 320)
!2660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 192, elements: !2661)
!2661 = !{!2662}
!2662 = !DISubrange(count: 24)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2494, file: !43, line: 1860, baseType: !2664, size: 64, offset: 768)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64)
!2665 = !DISubroutineType(types: !2666)
!2666 = !{!671, !2470, !1997}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2494, file: !43, line: 1861, baseType: !182, size: 64, offset: 832)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !2494, file: !43, line: 1862, baseType: !2669, size: 64, offset: 896)
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 64)
!2670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2671)
!2671 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !43, line: 41, flags: DIFlagFwdDecl)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2471, file: !1645, line: 190, baseType: !2673, size: 64, offset: 7104)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !43, line: 399, size: 14464, elements: !2675)
!2675 = !{!2676, !2892, !3014, !3015, !3018, !3021, !3117, !3118, !3119, !3121, !3122, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3238, !3249, !3250, !3251, !3252, !3253, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !2674, file: !43, line: 400, baseType: !2677, size: 64)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !43, line: 130, size: 2176, elements: !2679)
!2679 = !{!2680, !2681, !2684, !2774, !2775, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2789, !2796, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2890, !2891}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2678, file: !43, line: 131, baseType: !2673, size: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !2678, file: !43, line: 132, baseType: !2682, size: 64, offset: 64)
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 64)
!2683 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !43, line: 132, flags: DIFlagFwdDecl)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !2678, file: !43, line: 133, baseType: !2685, size: 64, offset: 128)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 64)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !2687, line: 16, size: 4032, elements: !2688)
!2687 = !DIFile(filename: "./include/linux/blk-mq.h", directory: "/home/lizy2001/genbc/linux")
!2688 = !{!2689, !2695, !2702, !2705, !2706, !2707, !2708, !2709, !2710, !2713, !2714, !2729, !2730, !2731, !2732, !2733, !2735, !2736, !2737, !2738, !2741, !2742, !2743, !2744, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759}
!2689 = !DIDerivedType(tag: DW_TAG_member, scope: !2686, file: !2687, line: 17, baseType: !2690, size: 192)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2686, file: !2687, line: 17, size: 192, elements: !2691)
!2691 = !{!2692, !2693, !2694}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2690, file: !2687, line: 19, baseType: !202)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !2690, file: !2687, line: 27, baseType: !193, size: 128)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2690, file: !2687, line: 32, baseType: !248, size: 64, offset: 128)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2686, file: !2687, line: 38, baseType: !2696, size: 704, offset: 192)
!2696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !2213, line: 115, size: 704, elements: !2697)
!2697 = !{!2698, !2699, !2700, !2701}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2696, file: !2213, line: 116, baseType: !2212, size: 256)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2696, file: !2213, line: 117, baseType: !2179, size: 320, offset: 256)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2696, file: !2213, line: 120, baseType: !2465, size: 64, offset: 576)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2696, file: !2213, line: 121, baseType: !267, size: 32, offset: 640)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2686, file: !2687, line: 40, baseType: !2703, size: 64, offset: 896)
!2703 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !425, line: 756, baseType: !2704)
!2704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !430)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu", scope: !2686, file: !2687, line: 45, baseType: !267, size: 32, offset: 960)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu_batch", scope: !2686, file: !2687, line: 50, baseType: !267, size: 32, offset: 992)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2686, file: !2687, line: 53, baseType: !248, size: 64, offset: 1024)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "sched_data", scope: !2686, file: !2687, line: 59, baseType: !256, size: 64, offset: 1088)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2686, file: !2687, line: 63, baseType: !2673, size: 64, offset: 1152)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2686, file: !2687, line: 65, baseType: !2711, size: 64, offset: 1216)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !43, line: 40, flags: DIFlagFwdDecl)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2686, file: !2687, line: 71, baseType: !256, size: 64, offset: 1280)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_map", scope: !2686, file: !2687, line: 77, baseType: !2715, size: 192, offset: 1344)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap", file: !2716, line: 48, size: 192, elements: !2717)
!2716 = !DIFile(filename: "./include/linux/sbitmap.h", directory: "/home/lizy2001/genbc/linux")
!2717 = !{!2718, !2719, !2720, !2721}
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2715, file: !2716, line: 52, baseType: !7, size: 32)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2715, file: !2716, line: 57, baseType: !7, size: 32, offset: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "map_nr", scope: !2715, file: !2716, line: 62, baseType: !7, size: 32, offset: 64)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2715, file: !2716, line: 67, baseType: !2722, size: 64, offset: 128)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_word", file: !2716, line: 20, size: 192, elements: !2724)
!2724 = !{!2725, !2726, !2727, !2728}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2723, file: !2716, line: 24, baseType: !248, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !2723, file: !2716, line: 29, baseType: !248, size: 64, offset: 64)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "cleared", scope: !2723, file: !2716, line: 34, baseType: !248, size: 64, offset: 128)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "swap_lock", scope: !2723, file: !2716, line: 39, baseType: !202, offset: 192)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_from", scope: !2686, file: !2687, line: 83, baseType: !2682, size: 64, offset: 1536)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_busy", scope: !2686, file: !2687, line: 89, baseType: !7, size: 32, offset: 1600)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2686, file: !2687, line: 92, baseType: !315, size: 16, offset: 1632)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ctx", scope: !2686, file: !2687, line: 94, baseType: !315, size: 16, offset: 1648)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "ctxs", scope: !2686, file: !2687, line: 96, baseType: !2734, size: 64, offset: 1664)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait_lock", scope: !2686, file: !2687, line: 99, baseType: !202, offset: 1728)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait", scope: !2686, file: !2687, line: 104, baseType: !933, size: 320, offset: 1728)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "wait_index", scope: !2686, file: !2687, line: 110, baseType: !263, size: 32, offset: 2048)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2686, file: !2687, line: 116, baseType: !2739, size: 64, offset: 2112)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!2740 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tags", file: !2687, line: 9, flags: DIFlagFwdDecl)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "sched_tags", scope: !2686, file: !2687, line: 122, baseType: !2739, size: 64, offset: 2176)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !2686, file: !2687, line: 125, baseType: !248, size: 64, offset: 2240)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !2686, file: !2687, line: 127, baseType: !248, size: 64, offset: 2304)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "dispatched", scope: !2686, file: !2687, line: 130, baseType: !2745, size: 448, offset: 2368)
!2745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 448, elements: !2746)
!2746 = !{!2747}
!2747 = !DISubrange(count: 7)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !2686, file: !2687, line: 133, baseType: !7, size: 32, offset: 2816)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "queue_num", scope: !2686, file: !2687, line: 135, baseType: !7, size: 32, offset: 2848)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !2686, file: !2687, line: 141, baseType: !263, size: 32, offset: 2880)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_queued", scope: !2686, file: !2687, line: 145, baseType: !263, size: 32, offset: 2912)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_online", scope: !2686, file: !2687, line: 148, baseType: !743, size: 128, offset: 2944)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_dead", scope: !2686, file: !2687, line: 150, baseType: !743, size: 128, offset: 3072)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2686, file: !2687, line: 152, baseType: !1679, size: 512, offset: 3200)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "poll_considered", scope: !2686, file: !2687, line: 155, baseType: !248, size: 64, offset: 3712)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "poll_invoked", scope: !2686, file: !2687, line: 157, baseType: !248, size: 64, offset: 3776)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "poll_success", scope: !2686, file: !2687, line: 159, baseType: !248, size: 64, offset: 3840)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_list", scope: !2686, file: !2687, line: 175, baseType: !193, size: 128, offset: 3904)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !2686, file: !2687, line: 182, baseType: !2760, offset: 4032)
!2760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2761, elements: !2488)
!2761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !2762, line: 16, size: 576, elements: !2763)
!2762 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!2763 = !{!2764, !2766, !2767, !2768, !2769, !2770, !2771, !2773}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !2761, file: !2762, line: 17, baseType: !2765, size: 32)
!2765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1274, size: 32, elements: !1223)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !2761, file: !2762, line: 18, baseType: !1274, size: 16, offset: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !2761, file: !2762, line: 19, baseType: !410, size: 8, offset: 48)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !2761, file: !2762, line: 20, baseType: !410, size: 8, offset: 56)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !2761, file: !2762, line: 21, baseType: !2161, size: 128, offset: 64)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !2761, file: !2762, line: 23, baseType: !873, size: 64, offset: 192)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !2761, file: !2762, line: 24, baseType: !2772, size: 64, offset: 256)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !2761, file: !2762, line: 25, baseType: !2212, size: 256, offset: 320)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !2678, file: !43, line: 135, baseType: !7, size: 32, offset: 192)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !2678, file: !43, line: 136, baseType: !2776, size: 32, offset: 224)
!2776 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !43, line: 66, baseType: !251)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2678, file: !43, line: 138, baseType: !267, size: 32, offset: 256)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !2678, file: !43, line: 139, baseType: !267, size: 32, offset: 288)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !2678, file: !43, line: 142, baseType: !7, size: 32, offset: 320)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !2678, file: !43, line: 143, baseType: !1648, size: 64, offset: 384)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !2678, file: !43, line: 145, baseType: !2501, size: 64, offset: 448)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !2678, file: !43, line: 146, baseType: !2501, size: 64, offset: 512)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !2678, file: !43, line: 148, baseType: !193, size: 128, offset: 576)
!2784 = !DIDerivedType(tag: DW_TAG_member, scope: !2678, file: !43, line: 157, baseType: !2785, size: 128, offset: 704)
!2785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2678, file: !43, line: 157, size: 128, elements: !2786)
!2786 = !{!2787, !2788}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2785, file: !43, line: 158, baseType: !743, size: 128)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !2785, file: !43, line: 159, baseType: !193, size: 128)
!2789 = !DIDerivedType(tag: DW_TAG_member, scope: !2678, file: !43, line: 167, baseType: !2790, size: 192, offset: 832)
!2790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2678, file: !43, line: 167, size: 192, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2790, file: !43, line: 168, baseType: !288, size: 192, align: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !2790, file: !43, line: 169, baseType: !2546, size: 128)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !2790, file: !43, line: 170, baseType: !256, size: 64)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !2790, file: !43, line: 171, baseType: !267, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, scope: !2678, file: !43, line: 180, baseType: !2797, size: 256, offset: 1024)
!2797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2678, file: !43, line: 180, size: 256, elements: !2798)
!2798 = !{!2799, !2834}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !2797, file: !43, line: 184, baseType: !2800, size: 192)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2797, file: !43, line: 181, size: 192, elements: !2801)
!2801 = !{!2802, !2832}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !2800, file: !43, line: 182, baseType: !2803, size: 64)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 64)
!2804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2805, line: 73, size: 448, elements: !2806)
!2805 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2806 = !{!2807, !2808, !2821, !2826, !2831}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2804, file: !2805, line: 74, baseType: !2673, size: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2804, file: !2805, line: 75, baseType: !2809, size: 64, offset: 64)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2805, line: 99, size: 704, elements: !2811)
!2811 = !{!2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2810, file: !2805, line: 100, baseType: !224, size: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2810, file: !2805, line: 101, baseType: !263, size: 32, offset: 64)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2810, file: !2805, line: 102, baseType: !263, size: 32, offset: 96)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2810, file: !2805, line: 105, baseType: !202, offset: 128)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2810, file: !2805, line: 107, baseType: !315, size: 16, offset: 128)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2810, file: !2805, line: 109, baseType: !1863, size: 128, offset: 192)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2810, file: !2805, line: 110, baseType: !2803, size: 64, offset: 320)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2810, file: !2805, line: 111, baseType: !739, size: 64, offset: 384)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2810, file: !2805, line: 113, baseType: !2212, size: 256, offset: 448)
!2821 = !DIDerivedType(tag: DW_TAG_member, scope: !2804, file: !2805, line: 83, baseType: !2822, size: 128, offset: 128)
!2822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2804, file: !2805, line: 83, size: 128, elements: !2823)
!2823 = !{!2824, !2825}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2822, file: !2805, line: 84, baseType: !193, size: 128)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2822, file: !2805, line: 85, baseType: !2562, size: 64)
!2826 = !DIDerivedType(tag: DW_TAG_member, scope: !2804, file: !2805, line: 87, baseType: !2827, size: 128, offset: 256)
!2827 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2804, file: !2805, line: 87, size: 128, elements: !2828)
!2828 = !{!2829, !2830}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2827, file: !2805, line: 88, baseType: !743, size: 128)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2827, file: !2805, line: 89, baseType: !870, size: 128, align: 64)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2804, file: !2805, line: 92, baseType: !7, size: 32, offset: 384)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2800, file: !43, line: 183, baseType: !2833, size: 128, offset: 64)
!2833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 128, elements: !1223)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2797, file: !43, line: 190, baseType: !2835, size: 256)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2797, file: !43, line: 186, size: 256, elements: !2836)
!2836 = !{!2837, !2838, !2839}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2835, file: !43, line: 187, baseType: !7, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2835, file: !43, line: 188, baseType: !193, size: 128, offset: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !2835, file: !43, line: 189, baseType: !2840, size: 64, offset: 192)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !43, line: 62, baseType: !2842)
!2842 = !DISubroutineType(types: !2843)
!2843 = !{null, !2677, !2511}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !2678, file: !43, line: 193, baseType: !2470, size: 64, offset: 1280)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2678, file: !43, line: 194, baseType: !1643, size: 64, offset: 1344)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !2678, file: !43, line: 200, baseType: !298, size: 64, offset: 1408)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !2678, file: !43, line: 202, baseType: !298, size: 64, offset: 1472)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !2678, file: !43, line: 212, baseType: !315, size: 16, offset: 1536)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !2678, file: !43, line: 218, baseType: !315, size: 16, offset: 1552)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !2678, file: !43, line: 221, baseType: !315, size: 16, offset: 1568)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !2678, file: !43, line: 229, baseType: !315, size: 16, offset: 1584)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2678, file: !43, line: 230, baseType: !315, size: 16, offset: 1600)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2678, file: !43, line: 232, baseType: !42, size: 32, offset: 1632)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2678, file: !43, line: 233, baseType: !258, size: 32, offset: 1664)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2678, file: !43, line: 235, baseType: !7, size: 32, offset: 1696)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2678, file: !43, line: 236, baseType: !248, size: 64, offset: 1728)
!2857 = !DIDerivedType(tag: DW_TAG_member, scope: !2678, file: !43, line: 238, baseType: !2858, size: 256, offset: 1792)
!2858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2678, file: !43, line: 238, size: 256, elements: !2859)
!2859 = !{!2860, !2889}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !2858, file: !43, line: 239, baseType: !2861, size: 256)
!2861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !2862, line: 23, size: 256, elements: !2863)
!2862 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!2863 = !{!2864, !2886, !2888}
!2864 = !DIDerivedType(tag: DW_TAG_member, scope: !2861, file: !2862, line: 24, baseType: !2865, size: 128)
!2865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2861, file: !2862, line: 24, size: 128, elements: !2866)
!2866 = !{!2867, !2879}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2865, file: !2862, line: 25, baseType: !2868, size: 128)
!2868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !2869, line: 58, size: 128, elements: !2870)
!2869 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!2870 = !{!2871, !2872, !2877, !2878}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2868, file: !2869, line: 59, baseType: !864, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_member, scope: !2868, file: !2869, line: 60, baseType: !2873, size: 32, offset: 64)
!2873 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2868, file: !2869, line: 60, size: 32, elements: !2874)
!2874 = !{!2875, !2876}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !2873, file: !2869, line: 61, baseType: !7, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !2873, file: !2869, line: 62, baseType: !263, size: 32)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2868, file: !2869, line: 65, baseType: !918, size: 16, offset: 96)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2868, file: !2869, line: 65, baseType: !918, size: 16, offset: 112)
!2879 = !DIDerivedType(tag: DW_TAG_member, scope: !2865, file: !2862, line: 26, baseType: !2880, size: 128)
!2880 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2865, file: !2862, line: 26, size: 128, elements: !2881)
!2881 = !{!2882, !2883, !2884, !2885}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2880, file: !2862, line: 27, baseType: !864, size: 64)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2880, file: !2862, line: 28, baseType: !7, size: 32, offset: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2880, file: !2862, line: 30, baseType: !918, size: 16, offset: 96)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2880, file: !2862, line: 30, baseType: !918, size: 16, offset: 112)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2861, file: !2862, line: 34, baseType: !2887, size: 64, offset: 128)
!2887 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !2862, line: 17, baseType: !1820)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2861, file: !2862, line: 35, baseType: !256, size: 64, offset: 192)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !2858, file: !43, line: 240, baseType: !298, size: 64)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !2678, file: !43, line: 246, baseType: !2840, size: 64, offset: 2048)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !2678, file: !43, line: 247, baseType: !256, size: 64, offset: 2112)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !2674, file: !43, line: 401, baseType: !2893, size: 64, offset: 64)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !49, line: 101, size: 4992, elements: !2895)
!2895 = !{!2896, !3008, !3009, !3010, !3011, !3012}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2894, file: !49, line: 103, baseType: !2897, size: 64)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !49, line: 66, size: 2240, elements: !2899)
!2899 = !{!2900, !2901, !2983, !2984, !2985, !2998, !2999, !3000, !3002, !3003, !3007}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !2898, file: !49, line: 69, baseType: !2562, size: 64)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2898, file: !49, line: 72, baseType: !2902, size: 1408, offset: 64)
!2902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !49, line: 29, size: 1408, elements: !2903)
!2903 = !{!2904, !2908, !2912, !2916, !2920, !2924, !2928, !2932, !2937, !2941, !2945, !2951, !2955, !2956, !2960, !2964, !2968, !2972, !2973, !2977, !2978, !2982}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !2902, file: !49, line: 30, baseType: !2905, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = !DISubroutineType(types: !2907)
!2907 = !{!267, !2673, !2897}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !2902, file: !49, line: 31, baseType: !2909, size: 64, offset: 64)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{null, !2893}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !2902, file: !49, line: 32, baseType: !2913, size: 64, offset: 128)
!2913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2914, size: 64)
!2914 = !DISubroutineType(types: !2915)
!2915 = !{!267, !2685, !7}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !2902, file: !49, line: 33, baseType: !2917, size: 64, offset: 192)
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 64)
!2918 = !DISubroutineType(types: !2919)
!2919 = !{null, !2685, !7}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !2902, file: !49, line: 34, baseType: !2921, size: 64, offset: 256)
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 64)
!2922 = !DISubroutineType(types: !2923)
!2923 = !{null, !2685}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !2902, file: !49, line: 36, baseType: !2925, size: 64, offset: 320)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64)
!2926 = !DISubroutineType(types: !2927)
!2927 = !{!690, !2673, !2677, !2501}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !2902, file: !49, line: 37, baseType: !2929, size: 64, offset: 384)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 64)
!2930 = !DISubroutineType(types: !2931)
!2931 = !{!690, !2685, !2501, !7}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !2902, file: !49, line: 38, baseType: !2933, size: 64, offset: 448)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 64)
!2934 = !DISubroutineType(types: !2935)
!2935 = !{!267, !2673, !2936, !2501}
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !2902, file: !49, line: 39, baseType: !2938, size: 64, offset: 512)
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 64)
!2939 = !DISubroutineType(types: !2940)
!2940 = !{null, !2673, !2677, !48}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !2902, file: !49, line: 40, baseType: !2942, size: 64, offset: 576)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64)
!2943 = !DISubroutineType(types: !2944)
!2944 = !{null, !2673, !2677, !2677}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !2902, file: !49, line: 41, baseType: !2946, size: 64, offset: 640)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2947 = !DISubroutineType(types: !2948)
!2948 = !{null, !7, !2949}
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !49, line: 26, flags: DIFlagFwdDecl)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !2902, file: !49, line: 42, baseType: !2952, size: 64, offset: 704)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{null, !2677}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !2902, file: !49, line: 43, baseType: !2952, size: 64, offset: 768)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !2902, file: !49, line: 44, baseType: !2957, size: 64, offset: 832)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DISubroutineType(types: !2959)
!2959 = !{null, !2685, !197, !690}
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !2902, file: !49, line: 45, baseType: !2961, size: 64, offset: 896)
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 64)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{!2677, !2685}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !2902, file: !49, line: 46, baseType: !2965, size: 64, offset: 960)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = !DISubroutineType(types: !2967)
!2967 = !{!690, !2685}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !2902, file: !49, line: 47, baseType: !2969, size: 64, offset: 1024)
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 64)
!2970 = !DISubroutineType(types: !2971)
!2971 = !{null, !2677, !298}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !2902, file: !49, line: 48, baseType: !2952, size: 64, offset: 1088)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !2902, file: !49, line: 49, baseType: !2974, size: 64, offset: 1152)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!2677, !2673, !2677}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !2902, file: !49, line: 50, baseType: !2974, size: 64, offset: 1216)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !2902, file: !49, line: 51, baseType: !2979, size: 64, offset: 1280)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{null, !2803}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !2902, file: !49, line: 52, baseType: !2979, size: 64, offset: 1344)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !2898, file: !49, line: 74, baseType: !823, size: 64, offset: 1472)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !2898, file: !49, line: 75, baseType: !823, size: 64, offset: 1536)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !2898, file: !49, line: 76, baseType: !2986, size: 64, offset: 1600)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 64)
!2987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !49, line: 57, size: 256, elements: !2988)
!2988 = !{!2989, !2990, !2994}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2987, file: !49, line: 58, baseType: !1747, size: 128)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2987, file: !49, line: 59, baseType: !2991, size: 64, offset: 128)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 64)
!2992 = !DISubroutineType(types: !2993)
!2993 = !{!895, !2893, !671}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2987, file: !49, line: 60, baseType: !2995, size: 64, offset: 192)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = !DISubroutineType(types: !2997)
!2997 = !{!895, !2893, !645, !823}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !2898, file: !49, line: 77, baseType: !645, size: 64, offset: 1664)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !2898, file: !49, line: 78, baseType: !645, size: 64, offset: 1728)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !2898, file: !49, line: 79, baseType: !3001, size: 32, offset: 1792)
!3001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !2898, file: !49, line: 80, baseType: !182, size: 64, offset: 1856)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !2898, file: !49, line: 87, baseType: !3004, size: 176, offset: 1920)
!3004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 176, elements: !3005)
!3005 = !{!3006}
!3006 = !DISubrange(count: 22)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2898, file: !49, line: 88, baseType: !193, size: 128, offset: 2112)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !2894, file: !49, line: 104, baseType: !256, size: 64, offset: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2894, file: !49, line: 105, baseType: !1679, size: 512, offset: 128)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2894, file: !49, line: 106, baseType: !220, size: 192, offset: 640)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !2894, file: !49, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2894, file: !49, line: 108, baseType: !3013, size: 4096, offset: 896)
!3013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !739, size: 4096, elements: !1720)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !2674, file: !43, line: 403, baseType: !1655, size: 128, offset: 128)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2674, file: !43, line: 405, baseType: !3016, size: 64, offset: 256)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !43, line: 43, flags: DIFlagFwdDecl)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !2674, file: !43, line: 406, baseType: !3019, size: 64, offset: 320)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 64)
!3020 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !43, line: 42, flags: DIFlagFwdDecl)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !2674, file: !43, line: 408, baseType: !3022, size: 64, offset: 384)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 64)
!3023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3024)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !2687, line: 290, size: 960, elements: !3025)
!3025 = !{!3026, !3036, !3037, !3041, !3045, !3049, !3053, !3054, !3058, !3059, !3106, !3110, !3111, !3112, !3113}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "queue_rq", scope: !3024, file: !2687, line: 294, baseType: !3027, size: 64)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = !DISubroutineType(types: !3029)
!3029 = !{!2511, !2685, !3030}
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 64)
!3031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3032)
!3032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_data", file: !2687, line: 277, size: 128, elements: !3033)
!3033 = !{!3034, !3035}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "rq", scope: !3032, file: !2687, line: 278, baseType: !2677, size: 64)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !3032, file: !2687, line: 279, baseType: !690, size: 8, offset: 64)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !3024, file: !2687, line: 304, baseType: !2921, size: 64, offset: 64)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "get_budget", scope: !3024, file: !2687, line: 312, baseType: !3038, size: 64, offset: 128)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{!690, !2673}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "put_budget", scope: !3024, file: !2687, line: 317, baseType: !3042, size: 64, offset: 192)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 64)
!3043 = !DISubroutineType(types: !3044)
!3044 = !{null, !2673}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3024, file: !2687, line: 322, baseType: !3046, size: 64, offset: 256)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3047 = !DISubroutineType(types: !3048)
!3048 = !{!55, !2677, !690}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3024, file: !2687, line: 327, baseType: !3050, size: 64, offset: 320)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = !DISubroutineType(types: !3052)
!3052 = !{!267, !2685}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3024, file: !2687, line: 332, baseType: !2952, size: 64, offset: 384)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3024, file: !2687, line: 339, baseType: !3055, size: 64, offset: 448)
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3056, size: 64)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{!267, !2685, !256, !7}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3024, file: !2687, line: 343, baseType: !2917, size: 64, offset: 512)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "init_request", scope: !3024, file: !2687, line: 352, baseType: !3060, size: 64, offset: 576)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3061 = !DISubroutineType(types: !3062)
!3062 = !{!267, !3063, !2677, !7, !7}
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !2687, line: 249, size: 2304, elements: !3065)
!3065 = !{!3066, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3101, !3102, !3104, !3105}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3064, file: !2687, line: 250, baseType: !3067, size: 384)
!3067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3068, size: 384, elements: !755)
!3068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_map", file: !2687, line: 195, size: 128, elements: !3069)
!3069 = !{!3070, !3072, !3073}
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "mq_map", scope: !3068, file: !2687, line: 196, baseType: !3071, size: 64)
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "nr_queues", scope: !3068, file: !2687, line: 197, baseType: !7, size: 32, offset: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "queue_offset", scope: !3068, file: !2687, line: 198, baseType: !7, size: 32, offset: 96)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "nr_maps", scope: !3064, file: !2687, line: 251, baseType: !7, size: 32, offset: 384)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3064, file: !2687, line: 252, baseType: !3022, size: 64, offset: 448)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !3064, file: !2687, line: 253, baseType: !7, size: 32, offset: 512)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !3064, file: !2687, line: 254, baseType: !7, size: 32, offset: 544)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tags", scope: !3064, file: !2687, line: 255, baseType: !7, size: 32, offset: 576)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !3064, file: !2687, line: 256, baseType: !7, size: 32, offset: 608)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3064, file: !2687, line: 257, baseType: !267, size: 32, offset: 640)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3064, file: !2687, line: 258, baseType: !7, size: 32, offset: 672)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3064, file: !2687, line: 259, baseType: !7, size: 32, offset: 704)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3064, file: !2687, line: 260, baseType: !256, size: 64, offset: 768)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "active_queues_shared_sbitmap", scope: !3064, file: !2687, line: 261, baseType: !263, size: 32, offset: 832)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "__bitmap_tags", scope: !3064, file: !2687, line: 263, baseType: !3086, size: 512, offset: 896)
!3086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_queue", file: !2716, line: 97, size: 512, elements: !3087)
!3087 = !{!3088, !3089, !3090, !3091, !3092, !3098, !3099, !3100}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !3086, file: !2716, line: 101, baseType: !2715, size: 192)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hint", scope: !3086, file: !2716, line: 109, baseType: !3071, size: 64, offset: 192)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "wake_batch", scope: !3086, file: !2716, line: 115, baseType: !7, size: 32, offset: 256)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "wake_index", scope: !3086, file: !2716, line: 120, baseType: !263, size: 32, offset: 288)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !3086, file: !2716, line: 125, baseType: !3093, size: 64, offset: 320)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbq_wait_state", file: !2716, line: 76, size: 192, elements: !3095)
!3095 = !{!3096, !3097}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "wait_cnt", scope: !3094, file: !2716, line: 80, baseType: !263, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3094, file: !2716, line: 85, baseType: !1021, size: 128, offset: 64)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "ws_active", scope: !3086, file: !2716, line: 130, baseType: !263, size: 32, offset: 384)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "round_robin", scope: !3086, file: !2716, line: 135, baseType: !690, size: 8, offset: 416)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "min_shallow_depth", scope: !3086, file: !2716, line: 141, baseType: !7, size: 32, offset: 448)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "__breserved_tags", scope: !3064, file: !2687, line: 264, baseType: !3086, size: 512, offset: 1408)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !3064, file: !2687, line: 265, baseType: !3103, size: 64, offset: 1920)
!3103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 64)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list_lock", scope: !3064, file: !2687, line: 267, baseType: !220, size: 192, offset: 1984)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list", scope: !3064, file: !2687, line: 268, baseType: !193, size: 128, offset: 2176)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "exit_request", scope: !3024, file: !2687, line: 357, baseType: !3107, size: 64, offset: 640)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3108, size: 64)
!3108 = !DISubroutineType(types: !3109)
!3109 = !{null, !3063, !2677, !7}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rq_fn", scope: !3024, file: !2687, line: 363, baseType: !2952, size: 64, offset: 704)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_rq", scope: !3024, file: !2687, line: 369, baseType: !2952, size: 64, offset: 768)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !3024, file: !2687, line: 374, baseType: !3038, size: 64, offset: 832)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !3024, file: !2687, line: 380, baseType: !3114, size: 64, offset: 896)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = !DISubroutineType(types: !3116)
!3116 = !{!267, !3063}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !2674, file: !43, line: 411, baseType: !2682, size: 64, offset: 448)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2674, file: !43, line: 413, baseType: !7, size: 32, offset: 512)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !2674, file: !43, line: 416, baseType: !3120, size: 64, offset: 576)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 64)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2674, file: !43, line: 417, baseType: !7, size: 32, offset: 640)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2674, file: !43, line: 419, baseType: !3123, size: 64, offset: 704)
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 64)
!3124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !31, line: 165, size: 4672, elements: !3125)
!3125 = !{!3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3176, !3177, !3178, !3179, !3181, !3182}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3124, file: !31, line: 166, baseType: !298, size: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !3124, file: !31, line: 167, baseType: !288, size: 192, align: 64, offset: 64)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !3124, file: !31, line: 168, baseType: !193, size: 128, offset: 256)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3124, file: !31, line: 169, baseType: !248, size: 64, offset: 384)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !3124, file: !31, line: 170, baseType: !248, size: 64, offset: 448)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3124, file: !31, line: 172, baseType: !1967, size: 32, offset: 512)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !3124, file: !31, line: 173, baseType: !7, size: 32, offset: 544)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !3124, file: !31, line: 174, baseType: !7, size: 32, offset: 576)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !3124, file: !31, line: 175, baseType: !7, size: 32, offset: 608)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !3124, file: !31, line: 175, baseType: !7, size: 32, offset: 640)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !3124, file: !31, line: 181, baseType: !224, size: 64, offset: 704)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !3124, file: !31, line: 183, baseType: !3138, size: 2688, offset: 768)
!3138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !31, line: 107, size: 2688, elements: !3139)
!3139 = !{!3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3169, !3170, !3171, !3172, !3173, !3174, !3175}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !3138, file: !31, line: 108, baseType: !3123, size: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3138, file: !31, line: 110, baseType: !248, size: 64, offset: 64)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !3138, file: !31, line: 111, baseType: !248, size: 64, offset: 128)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !3138, file: !31, line: 113, baseType: !193, size: 128, offset: 192)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !3138, file: !31, line: 114, baseType: !193, size: 128, offset: 320)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !3138, file: !31, line: 115, baseType: !193, size: 128, offset: 448)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !3138, file: !31, line: 116, baseType: !193, size: 128, offset: 576)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3138, file: !31, line: 117, baseType: !202, offset: 704)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !3138, file: !31, line: 119, baseType: !3149, size: 256, offset: 704)
!3149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3150, size: 256, elements: !1183)
!3150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3151, line: 97, size: 64, elements: !3152)
!3151 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3152 = !{!3153}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3150, file: !3151, line: 98, baseType: !230, size: 64)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !3138, file: !31, line: 121, baseType: !248, size: 64, offset: 960)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !3138, file: !31, line: 123, baseType: !248, size: 64, offset: 1024)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !3138, file: !31, line: 124, baseType: !248, size: 64, offset: 1088)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !3138, file: !31, line: 125, baseType: !248, size: 64, offset: 1152)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !3138, file: !31, line: 126, baseType: !248, size: 64, offset: 1216)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !3138, file: !31, line: 127, baseType: !248, size: 64, offset: 1280)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !3138, file: !31, line: 135, baseType: !248, size: 64, offset: 1344)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !3138, file: !31, line: 136, baseType: !248, size: 64, offset: 1408)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !3138, file: !31, line: 138, baseType: !3163, size: 128, offset: 1472)
!3163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !3164, line: 76, size: 128, elements: !3165)
!3164 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!3165 = !{!3166, !3167, !3168}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3163, file: !3164, line: 78, baseType: !3150, size: 64)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !3163, file: !3164, line: 80, baseType: !7, size: 32, offset: 64)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3163, file: !3164, line: 81, baseType: !361, offset: 96)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !3138, file: !31, line: 139, baseType: !267, size: 32, offset: 1600)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !3138, file: !31, line: 140, baseType: !30, size: 32, offset: 1632)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !3138, file: !31, line: 142, baseType: !202, offset: 1664)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !3138, file: !31, line: 143, baseType: !193, size: 128, offset: 1664)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !3138, file: !31, line: 144, baseType: !2696, size: 704, offset: 1792)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !3138, file: !31, line: 146, baseType: !248, size: 64, offset: 2496)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !3138, file: !31, line: 148, baseType: !193, size: 128, offset: 2560)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !3124, file: !31, line: 184, baseType: !193, size: 128, offset: 3456)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !3124, file: !31, line: 190, baseType: !1021, size: 128, offset: 3584)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3124, file: !31, line: 192, baseType: !1977, size: 64, offset: 3712)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3124, file: !31, line: 193, baseType: !3180, size: 512, offset: 3776)
!3180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 512, elements: !1720)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3124, file: !31, line: 194, baseType: !1977, size: 64, offset: 4288)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !3124, file: !31, line: 196, baseType: !2179, size: 320, offset: 4352)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !2674, file: !43, line: 425, baseType: !256, size: 64, offset: 768)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !2674, file: !43, line: 430, baseType: !248, size: 64, offset: 832)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !2674, file: !43, line: 436, baseType: !263, size: 32, offset: 896)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2674, file: !43, line: 442, baseType: !267, size: 32, offset: 928)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !2674, file: !43, line: 447, baseType: !502, size: 32, offset: 960)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !2674, file: !43, line: 449, baseType: !202, offset: 992)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2674, file: !43, line: 454, baseType: !1679, size: 512, offset: 1024)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !2674, file: !43, line: 459, baseType: !1685, size: 64, offset: 1536)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !2674, file: !43, line: 462, baseType: !3192, size: 128, offset: 1600)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !1645, line: 159, size: 128, elements: !3193)
!3193 = !{!3194, !3223, !3224, !3225, !3226}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !3192, file: !1645, line: 160, baseType: !3195, size: 64)
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!3196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3197)
!3197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !43, line: 1664, size: 320, elements: !3198)
!3198 = !{!3199, !3213, !3214, !3217, !3222}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !3197, file: !43, line: 1665, baseType: !3200, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!3201 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !43, line: 1660, baseType: !3202)
!3202 = !DISubroutineType(types: !3203)
!3203 = !{!2511, !3204}
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3205, size: 64)
!3205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !43, line: 1651, size: 320, elements: !3206)
!3206 = !{!3207, !3208, !3209, !3210, !3211, !3212}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !3205, file: !43, line: 1652, baseType: !256, size: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !3205, file: !43, line: 1653, baseType: !256, size: 64, offset: 64)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3205, file: !43, line: 1654, baseType: !1648, size: 64, offset: 128)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !3205, file: !43, line: 1655, baseType: !7, size: 32, offset: 192)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3205, file: !43, line: 1656, baseType: !315, size: 16, offset: 224)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3205, file: !43, line: 1657, baseType: !645, size: 64, offset: 256)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !3197, file: !43, line: 1666, baseType: !3200, size: 64, offset: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !3197, file: !43, line: 1667, baseType: !3215, size: 64, offset: 128)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 64)
!3216 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !43, line: 1661, baseType: !2953)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !3197, file: !43, line: 1668, baseType: !3218, size: 64, offset: 192)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 64)
!3219 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !43, line: 1662, baseType: !3220)
!3220 = !DISubroutineType(types: !3221)
!3221 = !{null, !2677, !7}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3197, file: !43, line: 1669, baseType: !645, size: 64, offset: 256)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3192, file: !1645, line: 161, baseType: !412, size: 8, offset: 64)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !3192, file: !1645, line: 162, baseType: !412, size: 8, offset: 72)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !3192, file: !1645, line: 163, baseType: !412, size: 8, offset: 80)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !3192, file: !1645, line: 164, baseType: !412, size: 8, offset: 88)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2674, file: !43, line: 466, baseType: !1977, size: 64, offset: 1728)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !2674, file: !43, line: 467, baseType: !59, size: 32, offset: 1792)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !2674, file: !43, line: 468, baseType: !7, size: 32, offset: 1824)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !2674, file: !43, line: 474, baseType: !248, size: 64, offset: 1856)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !2674, file: !43, line: 476, baseType: !7, size: 32, offset: 1920)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !2674, file: !43, line: 477, baseType: !7, size: 32, offset: 1952)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !2674, file: !43, line: 484, baseType: !7, size: 32, offset: 1984)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !2674, file: !43, line: 485, baseType: !267, size: 32, offset: 2016)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !2674, file: !43, line: 487, baseType: !3236, size: 64, offset: 2048)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!3237 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !43, line: 44, flags: DIFlagFwdDecl)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !2674, file: !43, line: 488, baseType: !3239, size: 5120, offset: 2112)
!3239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3240, size: 5120, elements: !3247)
!3240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !1628, line: 540, size: 320, elements: !3241)
!3241 = !{!3242, !3243, !3244, !3245, !3246}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !3240, file: !1628, line: 541, baseType: !298, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3240, file: !1628, line: 542, baseType: !298, size: 64, offset: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3240, file: !1628, line: 543, baseType: !298, size: 64, offset: 128)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !3240, file: !1628, line: 544, baseType: !250, size: 32, offset: 192)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3240, file: !1628, line: 545, baseType: !298, size: 64, offset: 256)
!3247 = !{!3248}
!3248 = !DISubrange(count: 16)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2674, file: !43, line: 490, baseType: !2179, size: 320, offset: 7232)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !2674, file: !43, line: 491, baseType: !2212, size: 256, offset: 7552)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !2674, file: !43, line: 493, baseType: !263, size: 32, offset: 7808)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2674, file: !43, line: 495, baseType: !193, size: 128, offset: 7872)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !2674, file: !43, line: 502, baseType: !3254, size: 896, offset: 8000)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !43, line: 321, size: 896, elements: !3255)
!3255 = !{!3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !3254, file: !43, line: 322, baseType: !248, size: 64)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !3254, file: !43, line: 323, baseType: !248, size: 64, offset: 64)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !3254, file: !43, line: 324, baseType: !248, size: 64, offset: 128)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !3254, file: !43, line: 326, baseType: !7, size: 32, offset: 192)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !3254, file: !43, line: 327, baseType: !7, size: 32, offset: 224)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !3254, file: !43, line: 328, baseType: !7, size: 32, offset: 256)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !3254, file: !43, line: 329, baseType: !7, size: 32, offset: 288)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3254, file: !43, line: 330, baseType: !7, size: 32, offset: 320)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !3254, file: !43, line: 331, baseType: !7, size: 32, offset: 352)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !3254, file: !43, line: 332, baseType: !7, size: 32, offset: 384)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !3254, file: !43, line: 333, baseType: !7, size: 32, offset: 416)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !3254, file: !43, line: 334, baseType: !7, size: 32, offset: 448)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !3254, file: !43, line: 335, baseType: !7, size: 32, offset: 480)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !3254, file: !43, line: 336, baseType: !7, size: 32, offset: 512)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !3254, file: !43, line: 337, baseType: !7, size: 32, offset: 544)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !3254, file: !43, line: 338, baseType: !7, size: 32, offset: 576)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !3254, file: !43, line: 339, baseType: !7, size: 32, offset: 608)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !3254, file: !43, line: 340, baseType: !7, size: 32, offset: 640)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !3254, file: !43, line: 341, baseType: !7, size: 32, offset: 672)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !3254, file: !43, line: 342, baseType: !7, size: 32, offset: 704)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !3254, file: !43, line: 344, baseType: !315, size: 16, offset: 736)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !3254, file: !43, line: 345, baseType: !315, size: 16, offset: 752)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !3254, file: !43, line: 346, baseType: !315, size: 16, offset: 768)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !3254, file: !43, line: 348, baseType: !412, size: 8, offset: 784)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !3254, file: !43, line: 349, baseType: !412, size: 8, offset: 792)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !3254, file: !43, line: 350, baseType: !412, size: 8, offset: 800)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !3254, file: !43, line: 351, baseType: !66, size: 32, offset: 832)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !2674, file: !43, line: 504, baseType: !7, size: 32, offset: 8896)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !2674, file: !43, line: 534, baseType: !7, size: 32, offset: 8928)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !2674, file: !43, line: 535, baseType: !7, size: 32, offset: 8960)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2674, file: !43, line: 536, baseType: !267, size: 32, offset: 8992)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !2674, file: !43, line: 537, baseType: !220, size: 192, offset: 9024)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2674, file: !43, line: 544, baseType: !2711, size: 64, offset: 9216)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !2674, file: !43, line: 546, baseType: !193, size: 128, offset: 9280)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !2674, file: !43, line: 547, baseType: !202, offset: 9408)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !2674, file: !43, line: 548, baseType: !2696, size: 704, offset: 9408)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2674, file: !43, line: 550, baseType: !220, size: 192, offset: 10112)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !2674, file: !43, line: 551, baseType: !220, size: 192, offset: 10304)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !2674, file: !43, line: 557, baseType: !193, size: 128, offset: 10496)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !2674, file: !43, line: 558, baseType: !202, offset: 10624)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !2674, file: !43, line: 560, baseType: !267, size: 32, offset: 10624)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !2674, file: !43, line: 563, baseType: !3298, size: 256, offset: 10688)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !3299, line: 18, size: 256, elements: !3300)
!3299 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3300 = !{!3301, !3302, !3303, !3304}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3298, file: !3299, line: 19, baseType: !1977, size: 64)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3298, file: !3299, line: 20, baseType: !267, size: 32, offset: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3298, file: !3299, line: 21, baseType: !2673, size: 64, offset: 128)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3298, file: !3299, line: 22, baseType: !3305, size: 64, offset: 192)
!3305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3306, size: 64)
!3306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3307)
!3307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !3299, line: 10, size: 256, elements: !3308)
!3308 = !{!3309, !3350, !3354, !3358}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !3307, file: !3299, line: 11, baseType: !3310, size: 64)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = !DISubroutineType(types: !3312)
!3312 = !{!267, !3313}
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 64)
!3314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !3315, line: 22, size: 1280, elements: !3316)
!3315 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3316 = !{!3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349}
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !3314, file: !3315, line: 23, baseType: !1240, size: 32)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3314, file: !3315, line: 24, baseType: !251, size: 32, offset: 32)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !3314, file: !3315, line: 25, baseType: !251, size: 32, offset: 64)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !3314, file: !3315, line: 28, baseType: !251, size: 32, offset: 96)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3314, file: !3315, line: 29, baseType: !299, size: 64, offset: 128)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !3314, file: !3315, line: 30, baseType: !299, size: 64, offset: 192)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !3314, file: !3315, line: 31, baseType: !251, size: 32, offset: 256)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !3314, file: !3315, line: 32, baseType: !251, size: 32, offset: 288)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !3314, file: !3315, line: 33, baseType: !251, size: 32, offset: 320)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !3314, file: !3315, line: 34, baseType: !251, size: 32, offset: 352)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !3314, file: !3315, line: 35, baseType: !299, size: 64, offset: 384)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !3314, file: !3315, line: 38, baseType: !251, size: 32, offset: 448)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !3314, file: !3315, line: 40, baseType: !251, size: 32, offset: 480)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !3314, file: !3315, line: 41, baseType: !251, size: 32, offset: 512)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !3314, file: !3315, line: 42, baseType: !251, size: 32, offset: 544)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !3314, file: !3315, line: 43, baseType: !299, size: 64, offset: 576)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !3314, file: !3315, line: 44, baseType: !299, size: 64, offset: 640)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3314, file: !3315, line: 46, baseType: !251, size: 32, offset: 704)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3314, file: !3315, line: 47, baseType: !251, size: 32, offset: 736)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !3314, file: !3315, line: 48, baseType: !299, size: 64, offset: 768)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !3314, file: !3315, line: 49, baseType: !251, size: 32, offset: 832)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !3314, file: !3315, line: 51, baseType: !251, size: 32, offset: 864)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !3314, file: !3315, line: 52, baseType: !251, size: 32, offset: 896)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !3314, file: !3315, line: 53, baseType: !251, size: 32, offset: 928)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !3314, file: !3315, line: 54, baseType: !251, size: 32, offset: 960)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3314, file: !3315, line: 55, baseType: !251, size: 32, offset: 992)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3314, file: !3315, line: 56, baseType: !251, size: 32, offset: 1024)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !3314, file: !3315, line: 57, baseType: !251, size: 32, offset: 1056)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !3314, file: !3315, line: 58, baseType: !1240, size: 32, offset: 1088)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !3314, file: !3315, line: 59, baseType: !1240, size: 32, offset: 1120)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !3314, file: !3315, line: 60, baseType: !299, size: 64, offset: 1152)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !3314, file: !3315, line: 61, baseType: !251, size: 32, offset: 1216)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3314, file: !3315, line: 63, baseType: !251, size: 32, offset: 1248)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !3307, file: !3299, line: 12, baseType: !3351, size: 64, offset: 64)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{!267, !2677, !3313, !1167}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !3307, file: !3299, line: 14, baseType: !3355, size: 64, offset: 128)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!267, !2677, !3313}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !3307, file: !3299, line: 15, baseType: !2952, size: 64, offset: 192)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2674, file: !43, line: 570, baseType: !870, size: 128, align: 64, offset: 10944)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !2674, file: !43, line: 571, baseType: !1021, size: 128, offset: 11072)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !2674, file: !43, line: 576, baseType: !220, size: 192, offset: 11200)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !2674, file: !43, line: 578, baseType: !3063, size: 64, offset: 11392)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !2674, file: !43, line: 579, baseType: !193, size: 128, offset: 11456)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !2674, file: !43, line: 580, baseType: !2559, size: 2368, offset: 11584)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !2674, file: !43, line: 582, baseType: !573, size: 64, offset: 13952)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !2674, file: !43, line: 589, baseType: !690, size: 8, offset: 14016)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2674, file: !43, line: 591, baseType: !823, size: 64, offset: 14080)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !2674, file: !43, line: 594, baseType: !3369, size: 320, offset: 14144)
!3369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 320, elements: !3370)
!3370 = !{!3371}
!3371 = !DISubrange(count: 5)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !2471, file: !1645, line: 191, baseType: !256, size: 64, offset: 7168)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2471, file: !1645, line: 193, baseType: !267, size: 32, offset: 7232)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2471, file: !1645, line: 194, baseType: !248, size: 64, offset: 7296)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !2471, file: !1645, line: 196, baseType: !1247, size: 256, offset: 7360)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !2471, file: !1645, line: 197, baseType: !1685, size: 64, offset: 7616)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !2471, file: !1645, line: 199, baseType: !3378, size: 64, offset: 7680)
!3378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3379, size: 64)
!3379 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !1645, line: 199, flags: DIFlagFwdDecl)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !2471, file: !1645, line: 200, baseType: !263, size: 32, offset: 7744)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !2471, file: !1645, line: 201, baseType: !3382, size: 64, offset: 7808)
!3382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3383, size: 64)
!3383 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !1645, line: 156, flags: DIFlagFwdDecl)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !2471, file: !1645, line: 203, baseType: !1679, size: 512, offset: 7872)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !2471, file: !1645, line: 208, baseType: !267, size: 32, offset: 8384)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2471, file: !1645, line: 209, baseType: !3387, size: 64, offset: 8448)
!3387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3388, size: 64)
!3388 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !1645, line: 157, flags: DIFlagFwdDecl)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !2471, file: !1645, line: 210, baseType: !3390, offset: 8512)
!3390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !750, line: 192, elements: !216)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !1627, file: !1628, line: 43, baseType: !3123, size: 64, offset: 1024)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !1627, file: !1628, line: 46, baseType: !267, size: 32, offset: 1088)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !1627, file: !1628, line: 48, baseType: !220, size: 192, offset: 1152)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !700, file: !85, line: 1452, baseType: !3123, size: 64, offset: 1536)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !700, file: !85, line: 1453, baseType: !3396, size: 64, offset: 1600)
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 64)
!3397 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !85, line: 1453, flags: DIFlagFwdDecl)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !700, file: !85, line: 1454, baseType: !743, size: 128, offset: 1664)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !700, file: !85, line: 1455, baseType: !7, size: 32, offset: 1792)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !700, file: !85, line: 1456, baseType: !3401, size: 2432, offset: 1856)
!3401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !79, line: 518, size: 2432, elements: !3402)
!3402 = !{!3403, !3404, !3405, !3407, !3439}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3401, file: !79, line: 519, baseType: !7, size: 32)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3401, file: !79, line: 520, baseType: !1247, size: 256, offset: 64)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3401, file: !79, line: 521, baseType: !3406, size: 192, offset: 320)
!3406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !542, size: 192, elements: !755)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3401, file: !79, line: 522, baseType: !3408, size: 1728, offset: 512)
!3408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3409, size: 1728, elements: !755)
!3409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !79, line: 222, size: 576, elements: !3410)
!3410 = !{!3411, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438}
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3409, file: !79, line: 223, baseType: !3412, size: 64)
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 64)
!3413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !79, line: 443, size: 256, elements: !3414)
!3414 = !{!3415, !3416, !3429, !3430}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3413, file: !79, line: 444, baseType: !267, size: 32)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3413, file: !79, line: 445, baseType: !3417, size: 64, offset: 64)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3419)
!3419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !79, line: 310, size: 512, elements: !3420)
!3420 = !{!3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3419, file: !79, line: 311, baseType: !791, size: 64)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3419, file: !79, line: 312, baseType: !791, size: 64, offset: 64)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3419, file: !79, line: 313, baseType: !791, size: 64, offset: 128)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3419, file: !79, line: 314, baseType: !791, size: 64, offset: 192)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3419, file: !79, line: 315, baseType: !1445, size: 64, offset: 256)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3419, file: !79, line: 316, baseType: !1445, size: 64, offset: 320)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3419, file: !79, line: 317, baseType: !1445, size: 64, offset: 384)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3419, file: !79, line: 318, baseType: !1517, size: 64, offset: 448)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3413, file: !79, line: 446, baseType: !182, size: 64, offset: 128)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3413, file: !79, line: 447, baseType: !3412, size: 64, offset: 192)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3409, file: !79, line: 224, baseType: !267, size: 32, offset: 64)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3409, file: !79, line: 226, baseType: !193, size: 128, offset: 128)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3409, file: !79, line: 227, baseType: !248, size: 64, offset: 256)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3409, file: !79, line: 228, baseType: !7, size: 32, offset: 320)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3409, file: !79, line: 229, baseType: !7, size: 32, offset: 352)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3409, file: !79, line: 230, baseType: !1481, size: 64, offset: 384)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3409, file: !79, line: 231, baseType: !1481, size: 64, offset: 448)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3409, file: !79, line: 232, baseType: !256, size: 64, offset: 512)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3401, file: !79, line: 523, baseType: !3440, size: 192, offset: 2240)
!3440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3417, size: 192, elements: !755)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !700, file: !85, line: 1458, baseType: !3442, size: 2112, offset: 4288)
!3442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !85, line: 1410, size: 2112, elements: !3443)
!3443 = !{!3444, !3445, !3446}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3442, file: !85, line: 1411, baseType: !267, size: 32)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3442, file: !85, line: 1412, baseType: !1021, size: 128, offset: 64)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3442, file: !85, line: 1413, baseType: !3447, size: 1920, offset: 192)
!3447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3448, size: 1920, elements: !755)
!3448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3449, line: 12, size: 640, elements: !3450)
!3449 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3450 = !{!3451, !3459, !3460, !3465, !3466}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3448, file: !3449, line: 13, baseType: !3452, size: 320)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3453, line: 17, size: 320, elements: !3454)
!3453 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3454 = !{!3455, !3456, !3457, !3458}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3452, file: !3453, line: 18, baseType: !267, size: 32)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3452, file: !3453, line: 19, baseType: !267, size: 32, offset: 32)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3452, file: !3453, line: 20, baseType: !1021, size: 128, offset: 64)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3452, file: !3453, line: 22, baseType: !870, size: 128, align: 64, offset: 192)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3448, file: !3449, line: 14, baseType: !3071, size: 64, offset: 320)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3448, file: !3449, line: 15, baseType: !3461, size: 64, offset: 384)
!3461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3462, line: 16, size: 64, elements: !3463)
!3462 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3463 = !{!3464}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3461, file: !3462, line: 17, baseType: !239, size: 64)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3448, file: !3449, line: 16, baseType: !1021, size: 128, offset: 448)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3448, file: !3449, line: 17, baseType: !263, size: 32, offset: 576)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !700, file: !85, line: 1465, baseType: !256, size: 64, offset: 6400)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !700, file: !85, line: 1468, baseType: !250, size: 32, offset: 6464)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !700, file: !85, line: 1470, baseType: !1262, size: 64, offset: 6528)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !700, file: !85, line: 1471, baseType: !1262, size: 64, offset: 6592)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !700, file: !85, line: 1473, baseType: !251, size: 32, offset: 6656)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !700, file: !85, line: 1474, baseType: !3473, size: 64, offset: 6720)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3474, size: 64)
!3474 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !85, line: 603, flags: DIFlagFwdDecl)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !700, file: !85, line: 1477, baseType: !2064, size: 256, offset: 6784)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !700, file: !85, line: 1478, baseType: !3477, size: 128, offset: 7040)
!3477 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3478, line: 18, baseType: !3479)
!3478 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3479 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3478, line: 16, size: 128, elements: !3480)
!3480 = !{!3481}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3479, file: !3478, line: 17, baseType: !3482, size: 128)
!3482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 128, elements: !3247)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !700, file: !85, line: 1480, baseType: !7, size: 32, offset: 7168)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !700, file: !85, line: 1481, baseType: !1167, size: 32, offset: 7200)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !700, file: !85, line: 1487, baseType: !220, size: 192, offset: 7232)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !700, file: !85, line: 1493, baseType: !645, size: 64, offset: 7424)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !700, file: !85, line: 1495, baseType: !625, size: 64, offset: 7488)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !700, file: !85, line: 1500, baseType: !267, size: 32, offset: 7552)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !700, file: !85, line: 1502, baseType: !3490, size: 448, offset: 7616)
!3490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !1429, line: 60, size: 448, elements: !3491)
!3491 = !{!3492, !3497, !3498, !3499, !3500, !3501, !3502}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3490, file: !1429, line: 61, baseType: !3493, size: 64)
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!248, !3496, !1427}
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 64)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3490, file: !1429, line: 63, baseType: !3493, size: 64, offset: 64)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3490, file: !1429, line: 66, baseType: !254, size: 64, offset: 128)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3490, file: !1429, line: 67, baseType: !267, size: 32, offset: 192)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3490, file: !1429, line: 68, baseType: !7, size: 32, offset: 224)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3490, file: !1429, line: 71, baseType: !193, size: 128, offset: 256)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3490, file: !1429, line: 77, baseType: !3503, size: 64, offset: 384)
!3503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !700, file: !85, line: 1505, baseType: !224, size: 64, offset: 8064)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !700, file: !85, line: 1508, baseType: !224, size: 64, offset: 8128)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !700, file: !85, line: 1511, baseType: !267, size: 32, offset: 8192)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !700, file: !85, line: 1514, baseType: !1412, size: 32, offset: 8224)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !700, file: !85, line: 1517, baseType: !2465, size: 64, offset: 8256)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !700, file: !85, line: 1518, baseType: !739, size: 64, offset: 8320)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !700, file: !85, line: 1525, baseType: !1380, size: 64, offset: 8384)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !700, file: !85, line: 1532, baseType: !3512, size: 64, offset: 8448)
!3512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3513, line: 52, size: 64, elements: !3514)
!3513 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3514 = !{!3515}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3512, file: !3513, line: 53, baseType: !3516, size: 64)
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3517, size: 64)
!3517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3513, line: 40, size: 256, elements: !3518)
!3518 = !{!3519, !3520, !3525}
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3517, file: !3513, line: 42, baseType: !202)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3517, file: !3513, line: 44, baseType: !3521, size: 192)
!3521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3513, line: 28, size: 192, elements: !3522)
!3522 = !{!3523, !3524}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3521, file: !3513, line: 29, baseType: !193, size: 128)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3521, file: !3513, line: 31, baseType: !254, size: 64, offset: 128)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3517, file: !3513, line: 49, baseType: !254, size: 64, offset: 192)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !700, file: !85, line: 1533, baseType: !3512, size: 64, offset: 8512)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !700, file: !85, line: 1534, baseType: !870, size: 128, align: 64, offset: 8576)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !700, file: !85, line: 1535, baseType: !2212, size: 256, offset: 8704)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !700, file: !85, line: 1537, baseType: !220, size: 192, offset: 8960)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !700, file: !85, line: 1542, baseType: !267, size: 32, offset: 9152)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !700, file: !85, line: 1545, baseType: !202, offset: 9184)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !700, file: !85, line: 1546, baseType: !193, size: 128, offset: 9216)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !700, file: !85, line: 1548, baseType: !202, offset: 9344)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !700, file: !85, line: 1549, baseType: !193, size: 128, offset: 9344)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !574, file: !575, line: 104, baseType: !248, size: 64, offset: 896)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !574, file: !575, line: 105, baseType: !256, size: 64, offset: 960)
!3537 = !DIDerivedType(tag: DW_TAG_member, scope: !574, file: !575, line: 107, baseType: !3538, size: 128, offset: 1024)
!3538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !574, file: !575, line: 107, size: 128, elements: !3539)
!3539 = !{!3540, !3541}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3538, file: !575, line: 108, baseType: !193, size: 128)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3538, file: !575, line: 109, baseType: !3542, size: 64)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !574, file: !575, line: 111, baseType: !193, size: 128, offset: 1152)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !574, file: !575, line: 112, baseType: !193, size: 128, offset: 1280)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !574, file: !575, line: 120, baseType: !3546, size: 128, offset: 1408)
!3546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !574, file: !575, line: 116, size: 128, elements: !3547)
!3547 = !{!3548, !3549, !3550}
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3546, file: !575, line: 117, baseType: !743, size: 128)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3546, file: !575, line: 118, baseType: !584, size: 128)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3546, file: !575, line: 119, baseType: !870, size: 128, align: 64)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !567, file: !85, line: 1866, baseType: !3552, size: 64, offset: 64)
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3553, size: 64)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{!645, !573, !542, !3555}
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !3557, line: 10, size: 128, elements: !3558)
!3557 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!3558 = !{!3559, !3560}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3556, file: !3557, line: 11, baseType: !1820, size: 64)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !3556, file: !3557, line: 12, baseType: !256, size: 64, offset: 64)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !567, file: !85, line: 1867, baseType: !3562, size: 64, offset: 128)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3563, size: 64)
!3563 = !DISubroutineType(types: !3564)
!3564 = !{!267, !542, !267}
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !567, file: !85, line: 1868, baseType: !3566, size: 64, offset: 192)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DISubroutineType(types: !3568)
!3568 = !{!3569, !542, !267}
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !85, line: 581, flags: DIFlagFwdDecl)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !567, file: !85, line: 1870, baseType: !3572, size: 64, offset: 256)
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3573, size: 64)
!3573 = !DISubroutineType(types: !3574)
!3574 = !{!267, !573, !671, !267}
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !567, file: !85, line: 1872, baseType: !3576, size: 64, offset: 320)
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 64)
!3577 = !DISubroutineType(types: !3578)
!3578 = !{!267, !542, !573, !546, !690}
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !567, file: !85, line: 1873, baseType: !3580, size: 64, offset: 384)
!3580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3581, size: 64)
!3581 = !DISubroutineType(types: !3582)
!3582 = !{!267, !573, !542, !573}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !567, file: !85, line: 1874, baseType: !3584, size: 64, offset: 448)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3585 = !DISubroutineType(types: !3586)
!3586 = !{!267, !542, !573}
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !567, file: !85, line: 1875, baseType: !3588, size: 64, offset: 512)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = !DISubroutineType(types: !3590)
!3590 = !{!267, !542, !573, !645}
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !567, file: !85, line: 1876, baseType: !3592, size: 64, offset: 576)
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3593 = !DISubroutineType(types: !3594)
!3594 = !{!267, !542, !573, !546}
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !567, file: !85, line: 1877, baseType: !3584, size: 64, offset: 640)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !567, file: !85, line: 1878, baseType: !3597, size: 64, offset: 704)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = !DISubroutineType(types: !3599)
!3599 = !{!267, !542, !573, !546, !704}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !567, file: !85, line: 1879, baseType: !3601, size: 64, offset: 768)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = !DISubroutineType(types: !3603)
!3603 = !{!267, !542, !573, !542, !573, !7}
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !567, file: !85, line: 1881, baseType: !3605, size: 64, offset: 832)
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3606 = !DISubroutineType(types: !3607)
!3607 = !{!267, !573, !3608}
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3609, size: 64)
!3609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !85, line: 219, size: 640, elements: !3610)
!3610 = !{!3611, !3612, !3613, !3614, !3615, !3616, !3621, !3622, !3623}
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !3609, file: !85, line: 220, baseType: !7, size: 32)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !3609, file: !85, line: 221, baseType: !546, size: 16, offset: 32)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !3609, file: !85, line: 222, baseType: !549, size: 32, offset: 64)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !3609, file: !85, line: 223, baseType: !557, size: 32, offset: 96)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !3609, file: !85, line: 224, baseType: !709, size: 64, offset: 128)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !3609, file: !85, line: 225, baseType: !3617, size: 128, offset: 192)
!3617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1263, line: 13, size: 128, elements: !3618)
!3618 = !{!3619, !3620}
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3617, file: !1263, line: 14, baseType: !1262, size: 64)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3617, file: !1263, line: 15, baseType: !254, size: 64, offset: 64)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !3609, file: !85, line: 226, baseType: !3617, size: 128, offset: 320)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !3609, file: !85, line: 227, baseType: !3617, size: 128, offset: 448)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !3609, file: !85, line: 234, baseType: !890, size: 64, offset: 576)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !567, file: !85, line: 1882, baseType: !3625, size: 64, offset: 896)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 64)
!3626 = !DISubroutineType(types: !3627)
!3627 = !{!267, !688, !3628, !250, !7}
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 64)
!3629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !3630, line: 22, size: 1152, elements: !3631)
!3630 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!3631 = !{!3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649}
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !3629, file: !3630, line: 23, baseType: !250, size: 32)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3629, file: !3630, line: 24, baseType: !546, size: 16, offset: 32)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !3629, file: !3630, line: 25, baseType: !7, size: 32, offset: 64)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !3629, file: !3630, line: 26, baseType: !1270, size: 32, offset: 96)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !3629, file: !3630, line: 27, baseType: !298, size: 64, offset: 128)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !3629, file: !3630, line: 28, baseType: !298, size: 64, offset: 192)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3629, file: !3630, line: 37, baseType: !298, size: 64, offset: 256)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3629, file: !3630, line: 38, baseType: !704, size: 32, offset: 320)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !3629, file: !3630, line: 39, baseType: !704, size: 32, offset: 352)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3629, file: !3630, line: 40, baseType: !549, size: 32, offset: 384)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3629, file: !3630, line: 41, baseType: !557, size: 32, offset: 416)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3629, file: !3630, line: 42, baseType: !709, size: 64, offset: 448)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !3629, file: !3630, line: 43, baseType: !3617, size: 128, offset: 512)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !3629, file: !3630, line: 44, baseType: !3617, size: 128, offset: 640)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !3629, file: !3630, line: 45, baseType: !3617, size: 128, offset: 768)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !3629, file: !3630, line: 46, baseType: !3617, size: 128, offset: 896)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3629, file: !3630, line: 47, baseType: !298, size: 64, offset: 1024)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !3629, file: !3630, line: 48, baseType: !298, size: 64, offset: 1088)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !567, file: !85, line: 1883, baseType: !3651, size: 64, offset: 960)
!3651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3652, size: 64)
!3652 = !DISubroutineType(types: !3653)
!3653 = !{!895, !573, !671, !823}
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !567, file: !85, line: 1884, baseType: !3655, size: 64, offset: 1024)
!3655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3656, size: 64)
!3656 = !DISubroutineType(types: !3657)
!3657 = !{!267, !542, !3658, !298, !298}
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !85, line: 50, flags: DIFlagFwdDecl)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !567, file: !85, line: 1886, baseType: !3661, size: 64, offset: 1088)
!3661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3662, size: 64)
!3662 = !DISubroutineType(types: !3663)
!3663 = !{!267, !542, !3664, !267}
!3664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !567, file: !85, line: 1887, baseType: !3666, size: 64, offset: 1152)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DISubroutineType(types: !3668)
!3668 = !{!267, !542, !573, !890, !7, !546}
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !567, file: !85, line: 1890, baseType: !3592, size: 64, offset: 1216)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !567, file: !85, line: 1891, baseType: !3671, size: 64, offset: 1280)
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3672 = !DISubroutineType(types: !3673)
!3673 = !{!267, !542, !3569, !267}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !543, file: !85, line: 623, baseType: !699, size: 64, offset: 192)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !543, file: !85, line: 624, baseType: !538, size: 64, offset: 256)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !543, file: !85, line: 631, baseType: !248, size: 64, offset: 320)
!3677 = !DIDerivedType(tag: DW_TAG_member, scope: !543, file: !85, line: 639, baseType: !3678, size: 32, offset: 384)
!3678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !543, file: !85, line: 639, size: 32, elements: !3679)
!3679 = !{!3680, !3681}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3678, file: !85, line: 640, baseType: !3001, size: 32)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3678, file: !85, line: 641, baseType: !7, size: 32)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !543, file: !85, line: 643, baseType: !704, size: 32, offset: 416)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !543, file: !85, line: 644, baseType: !709, size: 64, offset: 448)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !543, file: !85, line: 645, baseType: !3617, size: 128, offset: 512)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !543, file: !85, line: 646, baseType: !3617, size: 128, offset: 640)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !543, file: !85, line: 647, baseType: !3617, size: 128, offset: 768)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !543, file: !85, line: 648, baseType: !202, offset: 896)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !543, file: !85, line: 649, baseType: !315, size: 16, offset: 896)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !543, file: !85, line: 650, baseType: !410, size: 8, offset: 912)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !543, file: !85, line: 651, baseType: !410, size: 8, offset: 920)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !543, file: !85, line: 652, baseType: !1601, size: 64, offset: 960)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !543, file: !85, line: 659, baseType: !248, size: 64, offset: 1024)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !543, file: !85, line: 660, baseType: !1247, size: 256, offset: 1088)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !543, file: !85, line: 662, baseType: !248, size: 64, offset: 1344)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !543, file: !85, line: 663, baseType: !248, size: 64, offset: 1408)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !543, file: !85, line: 665, baseType: !743, size: 128, offset: 1472)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !543, file: !85, line: 666, baseType: !193, size: 128, offset: 1600)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !543, file: !85, line: 675, baseType: !193, size: 128, offset: 1728)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !543, file: !85, line: 676, baseType: !193, size: 128, offset: 1856)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !543, file: !85, line: 677, baseType: !193, size: 128, offset: 1984)
!3701 = !DIDerivedType(tag: DW_TAG_member, scope: !543, file: !85, line: 678, baseType: !3702, size: 128, offset: 2112)
!3702 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !543, file: !85, line: 678, size: 128, elements: !3703)
!3703 = !{!3704, !3705}
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3702, file: !85, line: 679, baseType: !739, size: 64)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3702, file: !85, line: 680, baseType: !870, size: 128, align: 64)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !543, file: !85, line: 682, baseType: !226, size: 64, offset: 2240)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !543, file: !85, line: 683, baseType: !226, size: 64, offset: 2304)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !543, file: !85, line: 684, baseType: !263, size: 32, offset: 2368)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !543, file: !85, line: 685, baseType: !263, size: 32, offset: 2400)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !543, file: !85, line: 686, baseType: !263, size: 32, offset: 2432)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !543, file: !85, line: 688, baseType: !263, size: 32, offset: 2464)
!3712 = !DIDerivedType(tag: DW_TAG_member, scope: !543, file: !85, line: 690, baseType: !3713, size: 64, offset: 2496)
!3713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !543, file: !85, line: 690, size: 64, elements: !3714)
!3714 = !{!3715, !3716}
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3713, file: !85, line: 691, baseType: !881, size: 64)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3713, file: !85, line: 692, baseType: !770, size: 64)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !543, file: !85, line: 694, baseType: !3718, size: 64, offset: 2560)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 64)
!3719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !85, line: 1100, size: 384, elements: !3720)
!3720 = !{!3721, !3722, !3723, !3724}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3719, file: !85, line: 1101, baseType: !202)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3719, file: !85, line: 1102, baseType: !193, size: 128)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3719, file: !85, line: 1103, baseType: !193, size: 128, offset: 128)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3719, file: !85, line: 1104, baseType: !193, size: 128, offset: 256)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !543, file: !85, line: 695, baseType: !539, size: 1216, align: 64, offset: 2624)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !543, file: !85, line: 696, baseType: !193, size: 128, offset: 3840)
!3727 = !DIDerivedType(tag: DW_TAG_member, scope: !543, file: !85, line: 697, baseType: !3728, size: 64, offset: 3968)
!3728 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !543, file: !85, line: 697, size: 64, elements: !3729)
!3729 = !{!3730, !3731, !3732, !3735, !3736}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3728, file: !85, line: 698, baseType: !1134, size: 64)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3728, file: !85, line: 699, baseType: !1626, size: 64)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3728, file: !85, line: 700, baseType: !3733, size: 64)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3734 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !85, line: 700, flags: DIFlagFwdDecl)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3728, file: !85, line: 701, baseType: !671, size: 64)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3728, file: !85, line: 702, baseType: !7, size: 32)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !543, file: !85, line: 705, baseType: !251, size: 32, offset: 4032)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !543, file: !85, line: 708, baseType: !251, size: 32, offset: 4064)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !543, file: !85, line: 709, baseType: !3473, size: 64, offset: 4096)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !543, file: !85, line: 720, baseType: !256, size: 64, offset: 4160)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !539, file: !85, line: 453, baseType: !1863, size: 128, offset: 64)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !539, file: !85, line: 454, baseType: !502, size: 32, offset: 192)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !539, file: !85, line: 455, baseType: !263, size: 32, offset: 224)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !539, file: !85, line: 460, baseType: !397, size: 128, offset: 256)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !539, file: !85, line: 461, baseType: !1247, size: 256, offset: 384)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !539, file: !85, line: 462, baseType: !248, size: 64, offset: 640)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !539, file: !85, line: 463, baseType: !248, size: 64, offset: 704)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !539, file: !85, line: 464, baseType: !248, size: 64, offset: 768)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !539, file: !85, line: 465, baseType: !3750, size: 64, offset: 832)
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3751, size: 64)
!3751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3752)
!3752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !85, line: 367, size: 1408, elements: !3753)
!3753 = !{!3754, !3758, !3762, !3766, !3770, !3774, !3786, !3791, !3795, !3799, !3803, !3807, !3811, !3812, !3816, !3822, !3823, !3824, !3828, !3833, !3837, !3844}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !3752, file: !85, line: 368, baseType: !3755, size: 64)
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 64)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{!267, !526, !782}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !3752, file: !85, line: 369, baseType: !3759, size: 64, offset: 64)
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 64)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{!267, !890, !526}
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !3752, file: !85, line: 372, baseType: !3763, size: 64, offset: 128)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64)
!3764 = !DISubroutineType(types: !3765)
!3765 = !{!267, !538, !782}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !3752, file: !85, line: 375, baseType: !3767, size: 64, offset: 192)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = !DISubroutineType(types: !3769)
!3769 = !{!267, !526}
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !3752, file: !85, line: 381, baseType: !3771, size: 64, offset: 256)
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3772 = !DISubroutineType(types: !3773)
!3773 = !{!267, !890, !538, !197, !7}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !3752, file: !85, line: 383, baseType: !3775, size: 64, offset: 320)
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{null, !3778}
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !928, line: 795, size: 256, elements: !3780)
!3780 = !{!3781, !3782, !3783, !3784, !3785}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3779, file: !928, line: 796, baseType: !890, size: 64)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !3779, file: !928, line: 797, baseType: !538, size: 64, offset: 64)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !3779, file: !928, line: 799, baseType: !248, size: 64, offset: 128)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !3779, file: !928, line: 800, baseType: !7, size: 32, offset: 192)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !3779, file: !928, line: 801, baseType: !7, size: 32, offset: 224)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !3752, file: !85, line: 385, baseType: !3787, size: 64, offset: 384)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 64)
!3788 = !DISubroutineType(types: !3789)
!3789 = !{!267, !890, !538, !709, !7, !7, !3790, !1091}
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !3752, file: !85, line: 388, baseType: !3792, size: 64, offset: 448)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{!267, !890, !538, !709, !7, !7, !526, !256}
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !3752, file: !85, line: 393, baseType: !3796, size: 64, offset: 512)
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{!1648, !538, !1648}
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !3752, file: !85, line: 394, baseType: !3800, size: 64, offset: 576)
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{null, !526, !7, !7}
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !3752, file: !85, line: 395, baseType: !3804, size: 64, offset: 640)
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 64)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{!267, !526, !502}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !3752, file: !85, line: 396, baseType: !3808, size: 64, offset: 704)
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{null, !526}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !3752, file: !85, line: 397, baseType: !903, size: 64, offset: 768)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !3752, file: !85, line: 402, baseType: !3813, size: 64, offset: 832)
!3813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3814, size: 64)
!3814 = !DISubroutineType(types: !3815)
!3815 = !{!267, !538, !526, !526, !5}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !3752, file: !85, line: 404, baseType: !3817, size: 64, offset: 896)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3818, size: 64)
!3818 = !DISubroutineType(types: !3819)
!3819 = !{!690, !526, !3820}
!3820 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !3821, line: 305, baseType: !7)
!3821 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !3752, file: !85, line: 405, baseType: !3808, size: 64, offset: 960)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !3752, file: !85, line: 406, baseType: !3767, size: 64, offset: 1024)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !3752, file: !85, line: 407, baseType: !3825, size: 64, offset: 1088)
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3826, size: 64)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{!267, !526, !248, !248}
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !3752, file: !85, line: 409, baseType: !3829, size: 64, offset: 1152)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DISubroutineType(types: !3831)
!3831 = !{null, !526, !3832, !3832}
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !3752, file: !85, line: 410, baseType: !3834, size: 64, offset: 1216)
!3834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3835, size: 64)
!3835 = !DISubroutineType(types: !3836)
!3836 = !{!267, !538, !526}
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !3752, file: !85, line: 413, baseType: !3838, size: 64, offset: 1280)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 64)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{!267, !3841, !890, !3843}
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !85, line: 61, flags: DIFlagFwdDecl)
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !3752, file: !85, line: 415, baseType: !3845, size: 64, offset: 1344)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{null, !890}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !539, file: !85, line: 466, baseType: !248, size: 64, offset: 896)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !539, file: !85, line: 467, baseType: !1412, size: 32, offset: 960)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !539, file: !85, line: 468, baseType: !202, offset: 992)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !539, file: !85, line: 469, baseType: !193, size: 128, offset: 1024)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !539, file: !85, line: 470, baseType: !256, size: 64, offset: 1152)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !534, file: !439, line: 87, baseType: !248, size: 64, offset: 192)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !534, file: !439, line: 94, baseType: !248, size: 64, offset: 256)
!3855 = !DIDerivedType(tag: DW_TAG_member, scope: !531, file: !439, line: 96, baseType: !3856, size: 64)
!3856 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !531, file: !439, line: 96, size: 64, elements: !3857)
!3857 = !{!3858}
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !3856, file: !439, line: 101, baseType: !3859, size: 64)
!3859 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !194, line: 143, baseType: !298)
!3860 = !DIDerivedType(tag: DW_TAG_member, scope: !531, file: !439, line: 103, baseType: !3861, size: 320)
!3861 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !531, file: !439, line: 103, size: 320, elements: !3862)
!3862 = !{!3863, !3873, !3874, !3875}
!3863 = !DIDerivedType(tag: DW_TAG_member, scope: !3861, file: !439, line: 104, baseType: !3864, size: 128)
!3864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3861, file: !439, line: 104, size: 128, elements: !3865)
!3865 = !{!3866, !3867}
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !3864, file: !439, line: 105, baseType: !193, size: 128)
!3867 = !DIDerivedType(tag: DW_TAG_member, scope: !3864, file: !439, line: 106, baseType: !3868, size: 128)
!3868 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3864, file: !439, line: 106, size: 128, elements: !3869)
!3869 = !{!3870, !3871, !3872}
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3868, file: !439, line: 107, baseType: !526, size: 64)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3868, file: !439, line: 109, baseType: !267, size: 32, offset: 64)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !3868, file: !439, line: 110, baseType: !267, size: 32, offset: 96)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !3861, file: !439, line: 117, baseType: !2562, size: 64, offset: 128)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !3861, file: !439, line: 119, baseType: !256, size: 64, offset: 192)
!3875 = !DIDerivedType(tag: DW_TAG_member, scope: !3861, file: !439, line: 120, baseType: !3876, size: 64, offset: 256)
!3876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3861, file: !439, line: 120, size: 64, elements: !3877)
!3877 = !{!3878, !3879, !3880}
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !3876, file: !439, line: 121, baseType: !256, size: 64)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !3876, file: !439, line: 122, baseType: !248, size: 64)
!3880 = !DIDerivedType(tag: DW_TAG_member, scope: !3876, file: !439, line: 123, baseType: !3881, size: 32)
!3881 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3876, file: !439, line: 123, size: 32, elements: !3882)
!3882 = !{!3883, !3884, !3885}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !3881, file: !439, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !3881, file: !439, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3881, file: !439, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!3886 = !DIDerivedType(tag: DW_TAG_member, scope: !531, file: !439, line: 130, baseType: !3887, size: 192)
!3887 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !531, file: !439, line: 130, size: 192, elements: !3888)
!3888 = !{!3889, !3890, !3891, !3892, !3893}
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !3887, file: !439, line: 131, baseType: !248, size: 64)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !3887, file: !439, line: 134, baseType: !412, size: 8, offset: 64)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !3887, file: !439, line: 135, baseType: !412, size: 8, offset: 72)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !3887, file: !439, line: 136, baseType: !263, size: 32, offset: 96)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !3887, file: !439, line: 137, baseType: !7, size: 32, offset: 128)
!3894 = !DIDerivedType(tag: DW_TAG_member, scope: !531, file: !439, line: 139, baseType: !3895, size: 256)
!3895 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !531, file: !439, line: 139, size: 256, elements: !3896)
!3896 = !{!3897, !3898, !3899}
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !3895, file: !439, line: 140, baseType: !248, size: 64)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !3895, file: !439, line: 141, baseType: !263, size: 32, offset: 64)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !3895, file: !439, line: 143, baseType: !193, size: 128, offset: 128)
!3900 = !DIDerivedType(tag: DW_TAG_member, scope: !531, file: !439, line: 145, baseType: !3901, size: 256)
!3901 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !531, file: !439, line: 145, size: 256, elements: !3902)
!3902 = !{!3903, !3904, !3906, !3907, !3912}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !3901, file: !439, line: 146, baseType: !248, size: 64)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !3901, file: !439, line: 147, baseType: !3905, size: 64, offset: 64)
!3905 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !457, line: 509, baseType: !526)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !3901, file: !439, line: 148, baseType: !248, size: 64, offset: 128)
!3907 = !DIDerivedType(tag: DW_TAG_member, scope: !3901, file: !439, line: 149, baseType: !3908, size: 64, offset: 192)
!3908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3901, file: !439, line: 149, size: 64, elements: !3909)
!3909 = !{!3910, !3911}
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !3908, file: !439, line: 150, baseType: !437, size: 64)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !3908, file: !439, line: 151, baseType: !263, size: 32)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !3901, file: !439, line: 156, baseType: !202, offset: 256)
!3913 = !DIDerivedType(tag: DW_TAG_member, scope: !531, file: !439, line: 159, baseType: !3914, size: 128)
!3914 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !531, file: !439, line: 159, size: 128, elements: !3915)
!3915 = !{!3916, !3960}
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3914, file: !439, line: 161, baseType: !3917, size: 64)
!3917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 64)
!3918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !72, line: 110, size: 1152, elements: !3919)
!3919 = !{!3920, !3930, !3931, !3932, !3933, !3934, !3935, !3947, !3948, !3949}
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3918, file: !72, line: 111, baseType: !3921, size: 384)
!3921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !72, line: 19, size: 384, elements: !3922)
!3922 = !{!3923, !3925, !3926, !3927, !3928, !3929}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3921, file: !72, line: 20, baseType: !3924, size: 64)
!3924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !248)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3921, file: !72, line: 21, baseType: !3924, size: 64, offset: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3921, file: !72, line: 22, baseType: !3924, size: 64, offset: 128)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3921, file: !72, line: 23, baseType: !248, size: 64, offset: 192)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3921, file: !72, line: 24, baseType: !248, size: 64, offset: 256)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3921, file: !72, line: 25, baseType: !248, size: 64, offset: 320)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3918, file: !72, line: 112, baseType: !1669, size: 64, offset: 384)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3918, file: !72, line: 113, baseType: !1655, size: 128, offset: 448)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3918, file: !72, line: 114, baseType: !2156, size: 192, offset: 576)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3918, file: !72, line: 115, baseType: !71, size: 32, offset: 768)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3918, file: !72, line: 116, baseType: !7, size: 32, offset: 800)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3918, file: !72, line: 117, baseType: !3936, size: 64, offset: 832)
!3936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3937, size: 64)
!3937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3938)
!3938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !72, line: 67, size: 256, elements: !3939)
!3939 = !{!3940, !3941, !3945, !3946}
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3938, file: !72, line: 73, baseType: !3808, size: 64)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3938, file: !72, line: 78, baseType: !3942, size: 64, offset: 64)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{null, !3917}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3938, file: !72, line: 83, baseType: !3942, size: 64, offset: 128)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3938, file: !72, line: 89, baseType: !492, size: 64, offset: 192)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3918, file: !72, line: 118, baseType: !256, size: 64, offset: 896)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3918, file: !72, line: 119, baseType: !267, size: 32, offset: 960)
!3949 = !DIDerivedType(tag: DW_TAG_member, scope: !3918, file: !72, line: 120, baseType: !3950, size: 128, offset: 1024)
!3950 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3918, file: !72, line: 120, size: 128, elements: !3951)
!3951 = !{!3952, !3958}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3950, file: !72, line: 121, baseType: !3953, size: 128)
!3953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3954, line: 6, size: 128, elements: !3955)
!3954 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3955 = !{!3956, !3957}
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3953, file: !3954, line: 7, baseType: !298, size: 64)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3953, file: !3954, line: 8, baseType: !298, size: 64, offset: 64)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3950, file: !72, line: 122, baseType: !3959)
!3959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3953, elements: !1390)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3914, file: !439, line: 162, baseType: !256, size: 64, offset: 64)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !531, file: !439, line: 176, baseType: !870, size: 128, align: 64)
!3962 = !DIDerivedType(tag: DW_TAG_member, scope: !527, file: !439, line: 179, baseType: !3963, size: 32, offset: 384)
!3963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !527, file: !439, line: 179, size: 32, elements: !3964)
!3964 = !{!3965, !3966, !3967, !3968}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3963, file: !439, line: 184, baseType: !263, size: 32)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3963, file: !439, line: 192, baseType: !7, size: 32)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3963, file: !439, line: 194, baseType: !7, size: 32)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3963, file: !439, line: 195, baseType: !267, size: 32)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !527, file: !439, line: 199, baseType: !263, size: 32, offset: 416)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !497, file: !14, line: 522, baseType: !526, size: 64, offset: 512)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !497, file: !14, line: 528, baseType: !3972, size: 64, offset: 576)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !497, file: !14, line: 532, baseType: !218, size: 64, offset: 640)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !497, file: !14, line: 536, baseType: !3905, size: 64, offset: 704)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !476, file: !14, line: 563, baseType: !3976, size: 64, offset: 320)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{!495, !496, !13}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !476, file: !14, line: 565, baseType: !3980, size: 64, offset: 384)
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3981, size: 64)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{null, !496, !248, !248}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !476, file: !14, line: 567, baseType: !3984, size: 64, offset: 448)
!3984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{!248, !445}
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !476, file: !14, line: 571, baseType: !492, size: 64, offset: 512)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !476, file: !14, line: 574, baseType: !492, size: 64, offset: 576)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !476, file: !14, line: 579, baseType: !3990, size: 64, offset: 640)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{!267, !445, !248, !256, !267, !267}
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !476, file: !14, line: 585, baseType: !3994, size: 64, offset: 704)
!3994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3995, size: 64)
!3995 = !DISubroutineType(types: !3996)
!3996 = !{!645, !445}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !476, file: !14, line: 615, baseType: !3998, size: 64, offset: 768)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64)
!3999 = !DISubroutineType(types: !4000)
!4000 = !{!526, !445, !248}
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !446, file: !439, line: 359, baseType: !248, size: 64, offset: 1216)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !446, file: !439, line: 361, baseType: !890, size: 64, offset: 1280)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !446, file: !439, line: 362, baseType: !256, size: 64, offset: 1344)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !446, file: !439, line: 365, baseType: !224, size: 64, offset: 1408)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !446, file: !439, line: 373, baseType: !4006, offset: 1472)
!4006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !439, line: 296, elements: !216)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !442, file: !439, line: 391, baseType: !400, size: 64, offset: 64)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !442, file: !439, line: 392, baseType: !298, size: 64, offset: 128)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !442, file: !439, line: 394, baseType: !1122, size: 64, offset: 192)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !442, file: !439, line: 398, baseType: !248, size: 64, offset: 256)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !442, file: !439, line: 399, baseType: !248, size: 64, offset: 320)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !442, file: !439, line: 405, baseType: !248, size: 64, offset: 384)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !442, file: !439, line: 406, baseType: !248, size: 64, offset: 448)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !442, file: !439, line: 407, baseType: !4015, size: 64, offset: 512)
!4015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4016, size: 64)
!4016 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !457, line: 286, baseType: !4017)
!4017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 286, size: 64, elements: !4018)
!4018 = !{!4019}
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !4017, file: !457, line: 286, baseType: !4020, size: 64)
!4020 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !462, line: 18, baseType: !248)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !442, file: !439, line: 416, baseType: !263, size: 32, offset: 576)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !442, file: !439, line: 428, baseType: !263, size: 32, offset: 608)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !442, file: !439, line: 437, baseType: !263, size: 32, offset: 640)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !442, file: !439, line: 447, baseType: !263, size: 32, offset: 672)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !442, file: !439, line: 450, baseType: !224, size: 64, offset: 704)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !442, file: !439, line: 452, baseType: !267, size: 32, offset: 768)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !442, file: !439, line: 454, baseType: !202, offset: 800)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !442, file: !439, line: 457, baseType: !1247, size: 256, offset: 832)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !442, file: !439, line: 459, baseType: !193, size: 128, offset: 1088)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !442, file: !439, line: 466, baseType: !248, size: 64, offset: 1216)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !442, file: !439, line: 467, baseType: !248, size: 64, offset: 1280)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !442, file: !439, line: 469, baseType: !248, size: 64, offset: 1344)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !442, file: !439, line: 470, baseType: !248, size: 64, offset: 1408)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !442, file: !439, line: 471, baseType: !226, size: 64, offset: 1472)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !442, file: !439, line: 472, baseType: !248, size: 64, offset: 1536)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !442, file: !439, line: 473, baseType: !248, size: 64, offset: 1600)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !442, file: !439, line: 474, baseType: !248, size: 64, offset: 1664)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !442, file: !439, line: 475, baseType: !248, size: 64, offset: 1728)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !442, file: !439, line: 477, baseType: !202, offset: 1792)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !442, file: !439, line: 478, baseType: !248, size: 64, offset: 1792)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !442, file: !439, line: 478, baseType: !248, size: 64, offset: 1856)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !442, file: !439, line: 478, baseType: !248, size: 64, offset: 1920)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !442, file: !439, line: 478, baseType: !248, size: 64, offset: 1984)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !442, file: !439, line: 479, baseType: !248, size: 64, offset: 2048)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !442, file: !439, line: 479, baseType: !248, size: 64, offset: 2112)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !442, file: !439, line: 479, baseType: !248, size: 64, offset: 2176)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !442, file: !439, line: 480, baseType: !248, size: 64, offset: 2240)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !442, file: !439, line: 480, baseType: !248, size: 64, offset: 2304)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !442, file: !439, line: 480, baseType: !248, size: 64, offset: 2368)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !442, file: !439, line: 480, baseType: !248, size: 64, offset: 2432)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !442, file: !439, line: 482, baseType: !4052, size: 2816, offset: 2496)
!4052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 2816, elements: !4053)
!4053 = !{!4054}
!4054 = !DISubrange(count: 44)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !442, file: !439, line: 488, baseType: !4056, size: 256, offset: 5312)
!4056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !4057, line: 60, size: 256, elements: !4058)
!4057 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!4058 = !{!4059}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4056, file: !4057, line: 61, baseType: !4060, size: 256)
!4060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 256, elements: !1183)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !442, file: !439, line: 490, baseType: !4062, size: 64, offset: 5568)
!4062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4063, size: 64)
!4063 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !439, line: 490, flags: DIFlagFwdDecl)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !442, file: !439, line: 493, baseType: !4065, size: 896, offset: 5632)
!4065 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !4066, line: 53, baseType: !4067)
!4066 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!4067 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4066, line: 13, size: 896, elements: !4068)
!4068 = !{!4069, !4070, !4071, !4072, !4075, !4076, !4077, !4078, !4098, !4099, !4100}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !4067, file: !4066, line: 18, baseType: !298, size: 64)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !4067, file: !4066, line: 28, baseType: !226, size: 64, offset: 64)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !4067, file: !4066, line: 31, baseType: !1247, size: 256, offset: 128)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !4067, file: !4066, line: 32, baseType: !4073, size: 64, offset: 384)
!4073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4074, size: 64)
!4074 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !4066, line: 32, flags: DIFlagFwdDecl)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !4067, file: !4066, line: 37, baseType: !315, size: 16, offset: 448)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4067, file: !4066, line: 40, baseType: !220, size: 192, offset: 512)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !4067, file: !4066, line: 41, baseType: !256, size: 64, offset: 704)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !4067, file: !4066, line: 42, baseType: !4079, size: 64, offset: 768)
!4079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4080, size: 64)
!4080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4081)
!4081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !4082, line: 13, size: 896, elements: !4083)
!4082 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!4083 = !{!4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4081, file: !4082, line: 14, baseType: !256, size: 64)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4081, file: !4082, line: 15, baseType: !248, size: 64, offset: 64)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !4081, file: !4082, line: 17, baseType: !248, size: 64, offset: 128)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !4081, file: !4082, line: 17, baseType: !248, size: 64, offset: 192)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !4081, file: !4082, line: 19, baseType: !254, size: 64, offset: 256)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !4081, file: !4082, line: 21, baseType: !254, size: 64, offset: 320)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !4081, file: !4082, line: 22, baseType: !254, size: 64, offset: 384)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !4081, file: !4082, line: 23, baseType: !254, size: 64, offset: 448)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !4081, file: !4082, line: 24, baseType: !254, size: 64, offset: 512)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !4081, file: !4082, line: 25, baseType: !254, size: 64, offset: 576)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !4081, file: !4082, line: 26, baseType: !254, size: 64, offset: 640)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !4081, file: !4082, line: 27, baseType: !254, size: 64, offset: 704)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !4081, file: !4082, line: 28, baseType: !254, size: 64, offset: 768)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !4081, file: !4082, line: 29, baseType: !254, size: 64, offset: 832)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !4067, file: !4066, line: 44, baseType: !263, size: 32, offset: 832)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !4067, file: !4066, line: 50, baseType: !918, size: 16, offset: 864)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !4067, file: !4066, line: 51, baseType: !4101, size: 16, offset: 880)
!4101 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !231, line: 18, baseType: !4102)
!4102 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !233, line: 23, baseType: !1274)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !442, file: !439, line: 495, baseType: !248, size: 64, offset: 6528)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !442, file: !439, line: 497, baseType: !4105, size: 64, offset: 6592)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 64)
!4106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !439, line: 381, size: 384, elements: !4107)
!4107 = !{!4108, !4109, !4115}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !4106, file: !439, line: 382, baseType: !263, size: 32)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !4106, file: !439, line: 383, baseType: !4110, size: 128, offset: 64)
!4110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !439, line: 376, size: 128, elements: !4111)
!4111 = !{!4112, !4113}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4110, file: !439, line: 377, baseType: !239, size: 64)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4110, file: !439, line: 378, baseType: !4114, size: 64, offset: 64)
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !4106, file: !439, line: 384, baseType: !2156, size: 192, offset: 192)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !442, file: !439, line: 500, baseType: !202, offset: 6656)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !442, file: !439, line: 501, baseType: !4118, size: 64, offset: 6656)
!4118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4119, size: 64)
!4119 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !439, line: 387, flags: DIFlagFwdDecl)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !442, file: !439, line: 516, baseType: !1380, size: 64, offset: 6720)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !442, file: !439, line: 519, baseType: !890, size: 64, offset: 6784)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !442, file: !439, line: 521, baseType: !4123, size: 64, offset: 6848)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !439, line: 521, flags: DIFlagFwdDecl)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !442, file: !439, line: 545, baseType: !263, size: 32, offset: 6912)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !442, file: !439, line: 548, baseType: !690, size: 8, offset: 6944)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !442, file: !439, line: 550, baseType: !4128, offset: 6952)
!4128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4129, line: 142, elements: !216)
!4129 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !442, file: !439, line: 554, baseType: !2212, size: 256, offset: 6976)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !442, file: !439, line: 557, baseType: !250, size: 32, offset: 7232)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !438, file: !439, line: 565, baseType: !4133, offset: 7296)
!4133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, elements: !2488)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !240, file: !241, line: 758, baseType: !437, size: 64, offset: 3968)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !240, file: !241, line: 761, baseType: !4136, size: 320, offset: 4032)
!4136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !4057, line: 34, size: 320, elements: !4137)
!4137 = !{!4138, !4139}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !4136, file: !4057, line: 35, baseType: !298, size: 64)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !4136, file: !4057, line: 36, baseType: !4140, size: 256, offset: 64)
!4140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !445, size: 256, elements: !1183)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !240, file: !241, line: 766, baseType: !267, size: 32, offset: 4352)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !240, file: !241, line: 767, baseType: !267, size: 32, offset: 4384)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !240, file: !241, line: 768, baseType: !267, size: 32, offset: 4416)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !240, file: !241, line: 770, baseType: !267, size: 32, offset: 4448)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !240, file: !241, line: 772, baseType: !248, size: 64, offset: 4480)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !240, file: !241, line: 775, baseType: !7, size: 32, offset: 4544)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !240, file: !241, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !240, file: !241, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !240, file: !241, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !240, file: !241, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !240, file: !241, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !240, file: !241, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !240, file: !241, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !240, file: !241, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !240, file: !241, line: 831, baseType: !248, size: 64, offset: 4672)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !240, file: !241, line: 833, baseType: !4157, size: 384, offset: 4736)
!4157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !4158)
!4158 = !{!4159, !4164}
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4157, file: !25, line: 26, baseType: !4160, size: 64)
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4161, size: 64)
!4161 = !DISubroutineType(types: !4162)
!4162 = !{!254, !4163}
!4163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4157, size: 64)
!4164 = !DIDerivedType(tag: DW_TAG_member, scope: !4157, file: !25, line: 27, baseType: !4165, size: 320, offset: 64)
!4165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4157, file: !25, line: 27, size: 320, elements: !4166)
!4166 = !{!4167, !4177, !4202}
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !4165, file: !25, line: 36, baseType: !4168, size: 320)
!4168 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4165, file: !25, line: 29, size: 320, elements: !4169)
!4169 = !{!4170, !4172, !4173, !4174, !4175, !4176}
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !4168, file: !25, line: 30, baseType: !4171, size: 64)
!4171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4168, file: !25, line: 31, baseType: !250, size: 32, offset: 64)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4168, file: !25, line: 32, baseType: !250, size: 32, offset: 96)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !4168, file: !25, line: 33, baseType: !250, size: 32, offset: 128)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !4168, file: !25, line: 34, baseType: !298, size: 64, offset: 192)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !4168, file: !25, line: 35, baseType: !4171, size: 64, offset: 256)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !4165, file: !25, line: 46, baseType: !4178, size: 192)
!4178 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4165, file: !25, line: 38, size: 192, elements: !4179)
!4179 = !{!4180, !4181, !4182, !4201}
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !4178, file: !25, line: 39, baseType: !379, size: 32)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4178, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!4182 = !DIDerivedType(tag: DW_TAG_member, scope: !4178, file: !25, line: 41, baseType: !4183, size: 64, offset: 64)
!4183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4178, file: !25, line: 41, size: 64, elements: !4184)
!4184 = !{!4185, !4193}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !4183, file: !25, line: 42, baseType: !4186, size: 64)
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !4188, line: 7, size: 128, elements: !4189)
!4188 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!4189 = !{!4190, !4192}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4187, file: !4188, line: 8, baseType: !4191, size: 64)
!4191 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !381, line: 93, baseType: !234)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4187, file: !4188, line: 9, baseType: !234, size: 64, offset: 64)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !4183, file: !25, line: 43, baseType: !4194, size: 64)
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4195, size: 64)
!4195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !4196, line: 7, size: 64, elements: !4197)
!4196 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!4197 = !{!4198, !4200}
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4195, file: !4196, line: 8, baseType: !4199, size: 32)
!4199 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !4196, line: 5, baseType: !1239)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4195, file: !4196, line: 9, baseType: !1239, size: 32, offset: 32)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4178, file: !25, line: 45, baseType: !298, size: 64, offset: 128)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4165, file: !25, line: 54, baseType: !4203, size: 256)
!4203 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4165, file: !25, line: 48, size: 256, elements: !4204)
!4204 = !{!4205, !4208, !4209, !4210, !4211}
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !4203, file: !25, line: 49, baseType: !4206, size: 64)
!4206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4207, size: 64)
!4207 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !4203, file: !25, line: 50, baseType: !267, size: 32, offset: 64)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !4203, file: !25, line: 51, baseType: !267, size: 32, offset: 96)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4203, file: !25, line: 52, baseType: !248, size: 64, offset: 128)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4203, file: !25, line: 53, baseType: !248, size: 64, offset: 192)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !240, file: !241, line: 835, baseType: !4213, size: 32, offset: 5120)
!4213 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !194, line: 22, baseType: !4214)
!4214 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !381, line: 28, baseType: !267)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !240, file: !241, line: 836, baseType: !4213, size: 32, offset: 5152)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !240, file: !241, line: 840, baseType: !248, size: 64, offset: 5184)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !240, file: !241, line: 849, baseType: !239, size: 64, offset: 5248)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !240, file: !241, line: 852, baseType: !239, size: 64, offset: 5312)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !240, file: !241, line: 857, baseType: !193, size: 128, offset: 5376)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !240, file: !241, line: 858, baseType: !193, size: 128, offset: 5504)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !240, file: !241, line: 859, baseType: !239, size: 64, offset: 5632)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !240, file: !241, line: 867, baseType: !193, size: 128, offset: 5696)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !240, file: !241, line: 868, baseType: !193, size: 128, offset: 5824)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !240, file: !241, line: 871, baseType: !1175, size: 64, offset: 5952)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !240, file: !241, line: 872, baseType: !4226, size: 512, offset: 6016)
!4226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !743, size: 512, elements: !1183)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !240, file: !241, line: 873, baseType: !193, size: 128, offset: 6528)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !240, file: !241, line: 874, baseType: !193, size: 128, offset: 6656)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !240, file: !241, line: 876, baseType: !4230, size: 64, offset: 6784)
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !240, file: !241, line: 879, baseType: !811, size: 64, offset: 6848)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !240, file: !241, line: 882, baseType: !811, size: 64, offset: 6912)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !240, file: !241, line: 884, baseType: !298, size: 64, offset: 6976)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !240, file: !241, line: 885, baseType: !298, size: 64, offset: 7040)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !240, file: !241, line: 890, baseType: !298, size: 64, offset: 7104)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !240, file: !241, line: 891, baseType: !4237, size: 128, offset: 7168)
!4237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !241, line: 242, size: 128, elements: !4238)
!4238 = !{!4239, !4240, !4241}
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4237, file: !241, line: 244, baseType: !298, size: 64)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4237, file: !241, line: 245, baseType: !298, size: 64, offset: 64)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4237, file: !241, line: 246, baseType: !361, offset: 128)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !240, file: !241, line: 900, baseType: !248, size: 64, offset: 7296)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !240, file: !241, line: 901, baseType: !248, size: 64, offset: 7360)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !240, file: !241, line: 904, baseType: !298, size: 64, offset: 7424)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !240, file: !241, line: 907, baseType: !298, size: 64, offset: 7488)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !240, file: !241, line: 910, baseType: !248, size: 64, offset: 7552)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !240, file: !241, line: 911, baseType: !248, size: 64, offset: 7616)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !240, file: !241, line: 914, baseType: !4249, size: 640, offset: 7680)
!4249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !4250, line: 123, size: 640, elements: !4251)
!4250 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!4251 = !{!4252, !4258, !4259}
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !4249, file: !4250, line: 124, baseType: !4253, size: 576)
!4253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4254, size: 576, elements: !755)
!4254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !4250, line: 108, size: 192, elements: !4255)
!4255 = !{!4256, !4257}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !4254, file: !4250, line: 109, baseType: !298, size: 64)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !4254, file: !4250, line: 110, baseType: !394, size: 128, offset: 64)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !4249, file: !4250, line: 125, baseType: !7, size: 32, offset: 576)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !4249, file: !4250, line: 126, baseType: !7, size: 32, offset: 608)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !240, file: !241, line: 917, baseType: !4261, size: 192, offset: 8320)
!4261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !4250, line: 134, size: 192, elements: !4262)
!4262 = !{!4263, !4264}
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4261, file: !4250, line: 135, baseType: !870, size: 128, align: 64)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !4261, file: !4250, line: 136, baseType: !7, size: 32, offset: 128)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !240, file: !241, line: 923, baseType: !1201, size: 64, offset: 8512)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !240, file: !241, line: 926, baseType: !1201, size: 64, offset: 8576)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !240, file: !241, line: 929, baseType: !1201, size: 64, offset: 8640)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !240, file: !241, line: 933, baseType: !1231, size: 64, offset: 8704)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !240, file: !241, line: 943, baseType: !4270, size: 128, offset: 8768)
!4270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 128, elements: !3247)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !240, file: !241, line: 945, baseType: !4272, size: 64, offset: 8896)
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 64)
!4273 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !241, line: 49, flags: DIFlagFwdDecl)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !240, file: !241, line: 956, baseType: !4275, size: 64, offset: 8960)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !241, line: 45, flags: DIFlagFwdDecl)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !240, file: !241, line: 959, baseType: !4278, size: 64, offset: 9024)
!4278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4279, size: 64)
!4279 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !241, line: 959, flags: DIFlagFwdDecl)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !240, file: !241, line: 962, baseType: !4281, size: 64, offset: 9088)
!4281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4282, size: 64)
!4282 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !241, line: 66, flags: DIFlagFwdDecl)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !240, file: !241, line: 966, baseType: !4284, size: 64, offset: 9152)
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64)
!4285 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !4286, line: 35, flags: DIFlagFwdDecl)
!4286 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !240, file: !241, line: 969, baseType: !4288, size: 64, offset: 9216)
!4288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4289, size: 64)
!4289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !4290, line: 82, size: 7296, elements: !4291)
!4290 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!4291 = !{!4292, !4293, !4294, !4295, !4296, !4297, !4298, !4309, !4310, !4311, !4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4327, !4336, !4337, !4339, !4340, !4341, !4344, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4374, !4375, !4382, !4383, !4384, !4385, !4386, !4387}
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !4289, file: !4290, line: 83, baseType: !258, size: 32)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !4289, file: !4290, line: 84, baseType: !263, size: 32, offset: 32)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !4289, file: !4290, line: 85, baseType: !267, size: 32, offset: 64)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !4289, file: !4290, line: 86, baseType: !193, size: 128, offset: 128)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !4289, file: !4290, line: 88, baseType: !1021, size: 128, offset: 256)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !4289, file: !4290, line: 91, baseType: !239, size: 64, offset: 384)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !4289, file: !4290, line: 94, baseType: !4299, size: 192, offset: 448)
!4299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !4300, line: 30, size: 192, elements: !4301)
!4300 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!4301 = !{!4302, !4303}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4299, file: !4300, line: 31, baseType: !193, size: 128)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !4299, file: !4300, line: 32, baseType: !4304, size: 64, offset: 128)
!4304 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !4305, line: 25, baseType: !4306)
!4305 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!4306 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4305, line: 23, size: 64, elements: !4307)
!4307 = !{!4308}
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !4306, file: !4305, line: 24, baseType: !429, size: 64)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !4289, file: !4290, line: 97, baseType: !739, size: 64, offset: 640)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !4289, file: !4290, line: 100, baseType: !267, size: 32, offset: 704)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !4289, file: !4290, line: 106, baseType: !267, size: 32, offset: 736)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !4289, file: !4290, line: 107, baseType: !239, size: 64, offset: 768)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !4289, file: !4290, line: 110, baseType: !267, size: 32, offset: 832)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4289, file: !4290, line: 111, baseType: !7, size: 32, offset: 864)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !4289, file: !4290, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !4289, file: !4290, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !4289, file: !4290, line: 128, baseType: !267, size: 32, offset: 928)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !4289, file: !4290, line: 129, baseType: !193, size: 128, offset: 960)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !4289, file: !4290, line: 132, baseType: !336, size: 512, offset: 1088)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !4289, file: !4290, line: 133, baseType: !344, size: 64, offset: 1600)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !4289, file: !4290, line: 140, baseType: !4322, size: 256, offset: 1664)
!4322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4323, size: 256, elements: !1223)
!4323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !4290, line: 38, size: 128, elements: !4324)
!4324 = !{!4325, !4326}
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4323, file: !4290, line: 39, baseType: !298, size: 64)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !4323, file: !4290, line: 40, baseType: !298, size: 64, offset: 64)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !4289, file: !4290, line: 146, baseType: !4328, size: 192, offset: 1920)
!4328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !4290, line: 66, size: 192, elements: !4329)
!4329 = !{!4330}
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !4328, file: !4290, line: 67, baseType: !4331, size: 192)
!4331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !4290, line: 47, size: 192, elements: !4332)
!4332 = !{!4333, !4334, !4335}
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4331, file: !4290, line: 48, baseType: !226, size: 64)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4331, file: !4290, line: 49, baseType: !226, size: 64, offset: 64)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !4331, file: !4290, line: 50, baseType: !226, size: 64, offset: 128)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !4289, file: !4290, line: 150, baseType: !4249, size: 640, offset: 2112)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !4289, file: !4290, line: 153, baseType: !4338, size: 256, offset: 2752)
!4338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1175, size: 256, elements: !1183)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !4289, file: !4290, line: 159, baseType: !1175, size: 64, offset: 3008)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !4289, file: !4290, line: 162, baseType: !267, size: 32, offset: 3072)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4289, file: !4290, line: 164, baseType: !4342, size: 64, offset: 3136)
!4342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4343, size: 64)
!4343 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !4290, line: 164, flags: DIFlagFwdDecl)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !4289, file: !4290, line: 175, baseType: !4345, size: 32, offset: 3200)
!4345 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !384, line: 805, baseType: !4346)
!4346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !384, line: 798, size: 32, elements: !4347)
!4347 = !{!4348, !4349}
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !4346, file: !384, line: 803, baseType: !579, size: 32)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4346, file: !384, line: 804, baseType: !202, offset: 32)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4289, file: !4290, line: 176, baseType: !298, size: 64, offset: 3264)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4289, file: !4290, line: 176, baseType: !298, size: 64, offset: 3328)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !4289, file: !4290, line: 176, baseType: !298, size: 64, offset: 3392)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !4289, file: !4290, line: 176, baseType: !298, size: 64, offset: 3456)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !4289, file: !4290, line: 177, baseType: !298, size: 64, offset: 3520)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !4289, file: !4290, line: 178, baseType: !298, size: 64, offset: 3584)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !4289, file: !4290, line: 179, baseType: !4237, size: 128, offset: 3648)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !4289, file: !4290, line: 180, baseType: !248, size: 64, offset: 3776)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !4289, file: !4290, line: 180, baseType: !248, size: 64, offset: 3840)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !4289, file: !4290, line: 180, baseType: !248, size: 64, offset: 3904)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !4289, file: !4290, line: 180, baseType: !248, size: 64, offset: 3968)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !4289, file: !4290, line: 181, baseType: !248, size: 64, offset: 4032)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !4289, file: !4290, line: 181, baseType: !248, size: 64, offset: 4096)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !4289, file: !4290, line: 181, baseType: !248, size: 64, offset: 4160)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !4289, file: !4290, line: 181, baseType: !248, size: 64, offset: 4224)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !4289, file: !4290, line: 182, baseType: !248, size: 64, offset: 4288)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !4289, file: !4290, line: 182, baseType: !248, size: 64, offset: 4352)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !4289, file: !4290, line: 182, baseType: !248, size: 64, offset: 4416)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !4289, file: !4290, line: 182, baseType: !248, size: 64, offset: 4480)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !4289, file: !4290, line: 183, baseType: !248, size: 64, offset: 4544)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !4289, file: !4290, line: 183, baseType: !248, size: 64, offset: 4608)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !4289, file: !4290, line: 184, baseType: !4372, offset: 4672)
!4372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !4373, line: 12, elements: !216)
!4373 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !4289, file: !4290, line: 192, baseType: !300, size: 64, offset: 4672)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !4289, file: !4290, line: 203, baseType: !4376, size: 2048, offset: 4736)
!4376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4377, size: 2048, elements: !3247)
!4377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !4378, line: 43, size: 128, elements: !4379)
!4378 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!4379 = !{!4380, !4381}
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !4377, file: !4378, line: 44, baseType: !825, size: 64)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !4377, file: !4378, line: 45, baseType: !825, size: 64, offset: 64)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !4289, file: !4290, line: 220, baseType: !690, size: 8, offset: 6784)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !4289, file: !4290, line: 221, baseType: !1274, size: 16, offset: 6800)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !4289, file: !4290, line: 222, baseType: !1274, size: 16, offset: 6816)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !4289, file: !4290, line: 224, baseType: !437, size: 64, offset: 6848)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !4289, file: !4290, line: 227, baseType: !220, size: 192, offset: 6912)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !4289, file: !4290, line: 233, baseType: !220, size: 192, offset: 7104)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !240, file: !241, line: 970, baseType: !4389, size: 64, offset: 9280)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 64)
!4390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !4290, line: 20, size: 16576, elements: !4391)
!4391 = !{!4392, !4393, !4394, !4395}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !4390, file: !4290, line: 21, baseType: !202)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4390, file: !4290, line: 22, baseType: !258, size: 32)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !4390, file: !4290, line: 23, baseType: !1021, size: 128, offset: 64)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4390, file: !4290, line: 24, baseType: !4396, size: 16384, offset: 192)
!4396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4397, size: 16384, elements: !1720)
!4397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !4300, line: 49, size: 256, elements: !4398)
!4398 = !{!4399}
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !4397, file: !4300, line: 50, baseType: !4400, size: 256)
!4400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !4300, line: 35, size: 256, elements: !4401)
!4401 = !{!4402, !4409, !4410, !4416}
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !4400, file: !4300, line: 37, baseType: !4403, size: 64)
!4403 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !4404, line: 19, baseType: !4405)
!4404 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!4405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4406, size: 64)
!4406 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !4404, line: 18, baseType: !4407)
!4407 = !DISubroutineType(types: !4408)
!4408 = !{null, !267}
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !4400, file: !4300, line: 38, baseType: !248, size: 64, offset: 64)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !4400, file: !4300, line: 44, baseType: !4411, size: 64, offset: 128)
!4411 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !4404, line: 22, baseType: !4412)
!4412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4413, size: 64)
!4413 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !4404, line: 21, baseType: !4414)
!4414 = !DISubroutineType(types: !4415)
!4415 = !{null}
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !4400, file: !4300, line: 46, baseType: !4304, size: 64, offset: 192)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !240, file: !241, line: 971, baseType: !4304, size: 64, offset: 9344)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !240, file: !241, line: 972, baseType: !4304, size: 64, offset: 9408)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !240, file: !241, line: 974, baseType: !4304, size: 64, offset: 9472)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !240, file: !241, line: 975, baseType: !4299, size: 192, offset: 9536)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !240, file: !241, line: 976, baseType: !248, size: 64, offset: 9728)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !240, file: !241, line: 977, baseType: !823, size: 64, offset: 9792)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !240, file: !241, line: 978, baseType: !7, size: 32, offset: 9856)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !240, file: !241, line: 980, baseType: !873, size: 64, offset: 9920)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !240, file: !241, line: 989, baseType: !4426, size: 128, offset: 9984)
!4426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !4427, line: 35, size: 128, elements: !4428)
!4427 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!4428 = !{!4429, !4430, !4431}
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4426, file: !4427, line: 36, baseType: !267, size: 32)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !4426, file: !4427, line: 37, baseType: !263, size: 32, offset: 32)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4426, file: !4427, line: 38, baseType: !4432, size: 64, offset: 64)
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4433, size: 64)
!4433 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !4427, line: 23, flags: DIFlagFwdDecl)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !240, file: !241, line: 992, baseType: !298, size: 64, offset: 10112)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !240, file: !241, line: 993, baseType: !298, size: 64, offset: 10176)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !240, file: !241, line: 996, baseType: !202, offset: 10240)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !240, file: !241, line: 999, baseType: !361, offset: 10240)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !240, file: !241, line: 1001, baseType: !4439, size: 64, offset: 10240)
!4439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !241, line: 636, size: 64, elements: !4440)
!4440 = !{!4441}
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4439, file: !241, line: 637, baseType: !4442, size: 64)
!4442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4439, size: 64)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !240, file: !241, line: 1005, baseType: !397, size: 128, offset: 10304)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !240, file: !241, line: 1007, baseType: !239, size: 64, offset: 10432)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !240, file: !241, line: 1009, baseType: !4446, size: 64, offset: 10496)
!4446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4447, size: 64)
!4447 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !241, line: 1009, flags: DIFlagFwdDecl)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !240, file: !241, line: 1043, baseType: !256, size: 64, offset: 10560)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !240, file: !241, line: 1046, baseType: !4450, size: 64, offset: 10624)
!4450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 64)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !240, file: !241, line: 1050, baseType: !4452, size: 64, offset: 10688)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !43, line: 1236, size: 320, elements: !4454)
!4454 = !{!4455, !4456, !4457, !4458, !4459}
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !4453, file: !43, line: 1237, baseType: !193, size: 128)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !4453, file: !43, line: 1238, baseType: !193, size: 128, offset: 128)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !4453, file: !43, line: 1239, baseType: !315, size: 16, offset: 256)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !4453, file: !43, line: 1240, baseType: !690, size: 8, offset: 272)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !4453, file: !43, line: 1241, baseType: !690, size: 8, offset: 280)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !240, file: !241, line: 1054, baseType: !4461, size: 64, offset: 10752)
!4461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4462, size: 64)
!4462 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !241, line: 55, flags: DIFlagFwdDecl)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !240, file: !241, line: 1056, baseType: !3123, size: 64, offset: 10816)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !240, file: !241, line: 1058, baseType: !2809, size: 64, offset: 10880)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !240, file: !241, line: 1061, baseType: !4466, size: 64, offset: 10944)
!4466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4467, size: 64)
!4467 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !241, line: 43, flags: DIFlagFwdDecl)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !240, file: !241, line: 1064, baseType: !248, size: 64, offset: 11008)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !240, file: !241, line: 1065, baseType: !4470, size: 64, offset: 11072)
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!4471 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !4300, line: 14, baseType: !4472)
!4472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !4300, line: 12, size: 384, elements: !4473)
!4473 = !{!4474}
!4474 = !DIDerivedType(tag: DW_TAG_member, scope: !4472, file: !4300, line: 13, baseType: !4475, size: 384)
!4475 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4472, file: !4300, line: 13, size: 384, elements: !4476)
!4476 = !{!4477, !4478, !4479, !4480}
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !4475, file: !4300, line: 13, baseType: !267, size: 32)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !4475, file: !4300, line: 13, baseType: !267, size: 32, offset: 32)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !4475, file: !4300, line: 13, baseType: !267, size: 32, offset: 64)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !4475, file: !4300, line: 13, baseType: !4481, size: 256, offset: 128)
!4481 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !4482, line: 32, size: 256, elements: !4483)
!4482 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!4483 = !{!4484, !4489, !4502, !4508, !4517, !4537, !4542}
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !4481, file: !4482, line: 37, baseType: !4485, size: 64)
!4485 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4481, file: !4482, line: 34, size: 64, elements: !4486)
!4486 = !{!4487, !4488}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4485, file: !4482, line: 35, baseType: !4214, size: 32)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4485, file: !4482, line: 36, baseType: !555, size: 32, offset: 32)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !4481, file: !4482, line: 45, baseType: !4490, size: 192)
!4490 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4481, file: !4482, line: 40, size: 192, elements: !4491)
!4491 = !{!4492, !4494, !4495, !4501}
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !4490, file: !4482, line: 41, baseType: !4493, size: 32)
!4493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !381, line: 95, baseType: !267)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !4490, file: !4482, line: 42, baseType: !267, size: 32, offset: 32)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !4490, file: !4482, line: 43, baseType: !4496, size: 64, offset: 64)
!4496 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !4482, line: 11, baseType: !4497)
!4497 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !4482, line: 8, size: 64, elements: !4498)
!4498 = !{!4499, !4500}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !4497, file: !4482, line: 9, baseType: !267, size: 32)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !4497, file: !4482, line: 10, baseType: !256, size: 64)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !4490, file: !4482, line: 44, baseType: !267, size: 32, offset: 128)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !4481, file: !4482, line: 52, baseType: !4503, size: 128)
!4503 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4481, file: !4482, line: 48, size: 128, elements: !4504)
!4504 = !{!4505, !4506, !4507}
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4503, file: !4482, line: 49, baseType: !4214, size: 32)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4503, file: !4482, line: 50, baseType: !555, size: 32, offset: 32)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !4503, file: !4482, line: 51, baseType: !4496, size: 64, offset: 64)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !4481, file: !4482, line: 61, baseType: !4509, size: 256)
!4509 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4481, file: !4482, line: 55, size: 256, elements: !4510)
!4510 = !{!4511, !4512, !4513, !4514, !4516}
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4509, file: !4482, line: 56, baseType: !4214, size: 32)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4509, file: !4482, line: 57, baseType: !555, size: 32, offset: 32)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !4509, file: !4482, line: 58, baseType: !267, size: 32, offset: 64)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !4509, file: !4482, line: 59, baseType: !4515, size: 64, offset: 128)
!4515 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !381, line: 94, baseType: !897)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !4509, file: !4482, line: 60, baseType: !4515, size: 64, offset: 192)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !4481, file: !4482, line: 95, baseType: !4518, size: 256)
!4518 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4481, file: !4482, line: 64, size: 256, elements: !4519)
!4519 = !{!4520, !4521}
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !4518, file: !4482, line: 65, baseType: !256, size: 64)
!4521 = !DIDerivedType(tag: DW_TAG_member, scope: !4518, file: !4482, line: 77, baseType: !4522, size: 192, offset: 64)
!4522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4518, file: !4482, line: 77, size: 192, elements: !4523)
!4523 = !{!4524, !4525, !4532}
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !4522, file: !4482, line: 82, baseType: !1274, size: 16)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !4522, file: !4482, line: 88, baseType: !4526, size: 192)
!4526 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4522, file: !4482, line: 84, size: 192, elements: !4527)
!4527 = !{!4528, !4530, !4531}
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !4526, file: !4482, line: 85, baseType: !4529, size: 64)
!4529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 64, elements: !375)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !4526, file: !4482, line: 86, baseType: !256, size: 64, offset: 64)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !4526, file: !4482, line: 87, baseType: !256, size: 64, offset: 128)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !4522, file: !4482, line: 93, baseType: !4533, size: 96)
!4533 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4522, file: !4482, line: 90, size: 96, elements: !4534)
!4534 = !{!4535, !4536}
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !4533, file: !4482, line: 91, baseType: !4529, size: 64)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !4533, file: !4482, line: 92, baseType: !251, size: 32, offset: 64)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !4481, file: !4482, line: 101, baseType: !4538, size: 128)
!4538 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4481, file: !4482, line: 98, size: 128, elements: !4539)
!4539 = !{!4540, !4541}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !4538, file: !4482, line: 99, baseType: !254, size: 64)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !4538, file: !4482, line: 100, baseType: !267, size: 32, offset: 64)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !4481, file: !4482, line: 108, baseType: !4543, size: 128)
!4543 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4481, file: !4482, line: 104, size: 128, elements: !4544)
!4544 = !{!4545, !4546, !4547}
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !4543, file: !4482, line: 105, baseType: !256, size: 64)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !4543, file: !4482, line: 106, baseType: !267, size: 32, offset: 64)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !4543, file: !4482, line: 107, baseType: !7, size: 32, offset: 96)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !240, file: !241, line: 1067, baseType: !4372, offset: 11136)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !240, file: !241, line: 1099, baseType: !4550, size: 64, offset: 11136)
!4550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4551, size: 64)
!4551 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !241, line: 56, flags: DIFlagFwdDecl)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !240, file: !241, line: 1103, baseType: !193, size: 128, offset: 11200)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !240, file: !241, line: 1104, baseType: !4554, size: 64, offset: 11328)
!4554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4555, size: 64)
!4555 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !241, line: 46, flags: DIFlagFwdDecl)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !240, file: !241, line: 1105, baseType: !220, size: 192, offset: 11392)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !240, file: !241, line: 1106, baseType: !7, size: 32, offset: 11584)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !240, file: !241, line: 1109, baseType: !4559, size: 128, offset: 11648)
!4559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4560, size: 128, elements: !1223)
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 64)
!4561 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !241, line: 51, flags: DIFlagFwdDecl)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !240, file: !241, line: 1110, baseType: !220, size: 192, offset: 11776)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !240, file: !241, line: 1111, baseType: !193, size: 128, offset: 11968)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !240, file: !241, line: 1173, baseType: !4565, size: 64, offset: 12096)
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4566, size: 64)
!4566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !4567, line: 62, size: 256, align: 256, elements: !4568)
!4567 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!4568 = !{!4569, !4570, !4571, !4576}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !4566, file: !4567, line: 75, baseType: !251, size: 32)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !4566, file: !4567, line: 90, baseType: !251, size: 32, offset: 32)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !4566, file: !4567, line: 124, baseType: !4572, size: 64, offset: 64)
!4572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4566, file: !4567, line: 109, size: 64, elements: !4573)
!4573 = !{!4574, !4575}
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !4572, file: !4567, line: 110, baseType: !299, size: 64)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4572, file: !4567, line: 112, baseType: !299, size: 64)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4566, file: !4567, line: 144, baseType: !251, size: 32, offset: 128)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !240, file: !241, line: 1174, baseType: !250, size: 32, offset: 12160)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !240, file: !241, line: 1179, baseType: !248, size: 64, offset: 12224)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !240, file: !241, line: 1182, baseType: !4580, size: 128, offset: 12288)
!4580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !4057, line: 76, size: 128, elements: !4581)
!4581 = !{!4582, !4587, !4588}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4580, file: !4057, line: 85, baseType: !4583, size: 64)
!4583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4584, line: 7, size: 64, elements: !4585)
!4584 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4585 = !{!4586}
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4583, file: !4584, line: 12, baseType: !426, size: 64)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4580, file: !4057, line: 88, baseType: !690, size: 8, offset: 64)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4580, file: !4057, line: 95, baseType: !690, size: 8, offset: 72)
!4589 = !DIDerivedType(tag: DW_TAG_member, scope: !240, file: !241, line: 1184, baseType: !4590, size: 128, offset: 12416)
!4590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !240, file: !241, line: 1184, size: 128, elements: !4591)
!4591 = !{!4592, !4593}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4590, file: !241, line: 1185, baseType: !258, size: 32)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4590, file: !241, line: 1186, baseType: !870, size: 128, align: 64)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !240, file: !241, line: 1190, baseType: !1134, size: 64, offset: 12544)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !240, file: !241, line: 1192, baseType: !4596, size: 128, offset: 12608)
!4596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !4057, line: 64, size: 128, elements: !4597)
!4597 = !{!4598, !4599, !4600}
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4596, file: !4057, line: 65, baseType: !526, size: 64)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4596, file: !4057, line: 67, baseType: !251, size: 32, offset: 64)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4596, file: !4057, line: 68, baseType: !251, size: 32, offset: 96)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !240, file: !241, line: 1206, baseType: !267, size: 32, offset: 12736)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !240, file: !241, line: 1207, baseType: !267, size: 32, offset: 12768)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !240, file: !241, line: 1209, baseType: !248, size: 64, offset: 12800)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !240, file: !241, line: 1219, baseType: !298, size: 64, offset: 12864)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !240, file: !241, line: 1220, baseType: !298, size: 64, offset: 12928)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !240, file: !241, line: 1317, baseType: !267, size: 32, offset: 12992)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !240, file: !241, line: 1319, baseType: !239, size: 64, offset: 13056)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !240, file: !241, line: 1322, baseType: !4609, size: 64, offset: 13120)
!4609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4610, size: 64)
!4610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4611, line: 56, size: 512, elements: !4612)
!4611 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4612 = !{!4613, !4614, !4615, !4616, !4617, !4618, !4619, !4621}
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4610, file: !4611, line: 57, baseType: !4609, size: 64)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4610, file: !4611, line: 58, baseType: !256, size: 64, offset: 64)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4610, file: !4611, line: 59, baseType: !248, size: 64, offset: 128)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4610, file: !4611, line: 60, baseType: !248, size: 64, offset: 192)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4610, file: !4611, line: 61, baseType: !3790, size: 64, offset: 256)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4610, file: !4611, line: 62, baseType: !7, size: 32, offset: 320)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4610, file: !4611, line: 63, baseType: !4620, size: 64, offset: 384)
!4620 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !194, line: 153, baseType: !298)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4610, file: !4611, line: 64, baseType: !1811, size: 64, offset: 448)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !240, file: !241, line: 1326, baseType: !258, size: 32, offset: 13184)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !240, file: !241, line: 1342, baseType: !256, size: 64, offset: 13248)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !240, file: !241, line: 1343, baseType: !299, size: 64, offset: 13312)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !240, file: !241, line: 1344, baseType: !298, size: 64, offset: 13376)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !240, file: !241, line: 1345, baseType: !299, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !240, file: !241, line: 1346, baseType: !299, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !240, file: !241, line: 1347, baseType: !299, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !240, file: !241, line: 1348, baseType: !870, size: 128, align: 64, offset: 13504)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !240, file: !241, line: 1358, baseType: !4631, size: 34816, offset: 13824)
!4631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4632, line: 485, size: 34816, elements: !4633)
!4632 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4633 = !{!4634, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4663, !4664, !4665, !4666, !4667, !4668, !4671, !4672, !4673}
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4631, file: !4632, line: 487, baseType: !4635, size: 192)
!4635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4636, size: 192, elements: !755)
!4636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4637, line: 16, size: 64, elements: !4638)
!4637 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4638 = !{!4639, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651}
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4636, file: !4637, line: 17, baseType: !918, size: 16)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4636, file: !4637, line: 18, baseType: !918, size: 16, offset: 16)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4636, file: !4637, line: 19, baseType: !918, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4636, file: !4637, line: 19, baseType: !918, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4636, file: !4637, line: 19, baseType: !918, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4636, file: !4637, line: 19, baseType: !918, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4636, file: !4637, line: 19, baseType: !918, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4636, file: !4637, line: 20, baseType: !918, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4636, file: !4637, line: 20, baseType: !918, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4636, file: !4637, line: 20, baseType: !918, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4636, file: !4637, line: 20, baseType: !918, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4636, file: !4637, line: 20, baseType: !918, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4636, file: !4637, line: 20, baseType: !918, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4631, file: !4632, line: 491, baseType: !248, size: 64, offset: 192)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4631, file: !4632, line: 495, baseType: !315, size: 16, offset: 256)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4631, file: !4632, line: 496, baseType: !315, size: 16, offset: 272)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4631, file: !4632, line: 497, baseType: !315, size: 16, offset: 288)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4631, file: !4632, line: 498, baseType: !315, size: 16, offset: 304)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4631, file: !4632, line: 502, baseType: !248, size: 64, offset: 320)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4631, file: !4632, line: 503, baseType: !248, size: 64, offset: 384)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4631, file: !4632, line: 514, baseType: !4660, size: 256, offset: 448)
!4660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4661, size: 256, elements: !1183)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4632, line: 483, flags: DIFlagFwdDecl)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4631, file: !4632, line: 516, baseType: !248, size: 64, offset: 704)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4631, file: !4632, line: 518, baseType: !248, size: 64, offset: 768)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4631, file: !4632, line: 520, baseType: !248, size: 64, offset: 832)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4631, file: !4632, line: 521, baseType: !248, size: 64, offset: 896)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4631, file: !4632, line: 522, baseType: !248, size: 64, offset: 960)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4631, file: !4632, line: 528, baseType: !4669, size: 64, offset: 1024)
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4632, line: 10, flags: DIFlagFwdDecl)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4631, file: !4632, line: 535, baseType: !248, size: 64, offset: 1088)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4631, file: !4632, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4631, file: !4632, line: 540, baseType: !4674, size: 33280, offset: 1536)
!4674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4675, line: 317, size: 33280, elements: !4676)
!4675 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4676 = !{!4677, !4678, !4679}
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4674, file: !4675, line: 330, baseType: !7, size: 32)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4674, file: !4675, line: 337, baseType: !248, size: 64, offset: 64)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4674, file: !4675, line: 348, baseType: !4680, size: 32768, offset: 512)
!4680 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4675, line: 304, size: 32768, elements: !4681)
!4681 = !{!4682, !4697, !4734, !4784, !4797}
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4680, file: !4675, line: 305, baseType: !4683, size: 896)
!4683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4675, line: 12, size: 896, elements: !4684)
!4684 = !{!4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4696}
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4683, file: !4675, line: 13, baseType: !250, size: 32)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4683, file: !4675, line: 14, baseType: !250, size: 32, offset: 32)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4683, file: !4675, line: 15, baseType: !250, size: 32, offset: 64)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4683, file: !4675, line: 16, baseType: !250, size: 32, offset: 96)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4683, file: !4675, line: 17, baseType: !250, size: 32, offset: 128)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4683, file: !4675, line: 18, baseType: !250, size: 32, offset: 160)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4683, file: !4675, line: 19, baseType: !250, size: 32, offset: 192)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4683, file: !4675, line: 22, baseType: !4693, size: 640, offset: 224)
!4693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 640, elements: !4694)
!4694 = !{!4695}
!4695 = !DISubrange(count: 20)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4683, file: !4675, line: 25, baseType: !250, size: 32, offset: 864)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4680, file: !4675, line: 306, baseType: !4698, size: 4096, align: 128)
!4698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4675, line: 34, size: 4096, align: 128, elements: !4699)
!4699 = !{!4700, !4701, !4702, !4703, !4704, !4719, !4720, !4721, !4723, !4725, !4729}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4698, file: !4675, line: 35, baseType: !918, size: 16)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4698, file: !4675, line: 36, baseType: !918, size: 16, offset: 16)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4698, file: !4675, line: 37, baseType: !918, size: 16, offset: 32)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4698, file: !4675, line: 38, baseType: !918, size: 16, offset: 48)
!4704 = !DIDerivedType(tag: DW_TAG_member, scope: !4698, file: !4675, line: 39, baseType: !4705, size: 128, offset: 64)
!4705 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4698, file: !4675, line: 39, size: 128, elements: !4706)
!4706 = !{!4707, !4712}
!4707 = !DIDerivedType(tag: DW_TAG_member, scope: !4705, file: !4675, line: 40, baseType: !4708, size: 128)
!4708 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4705, file: !4675, line: 40, size: 128, elements: !4709)
!4709 = !{!4710, !4711}
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4708, file: !4675, line: 41, baseType: !298, size: 64)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4708, file: !4675, line: 42, baseType: !298, size: 64, offset: 64)
!4712 = !DIDerivedType(tag: DW_TAG_member, scope: !4705, file: !4675, line: 44, baseType: !4713, size: 128)
!4713 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4705, file: !4675, line: 44, size: 128, elements: !4714)
!4714 = !{!4715, !4716, !4717, !4718}
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4713, file: !4675, line: 45, baseType: !250, size: 32)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4713, file: !4675, line: 46, baseType: !250, size: 32, offset: 32)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4713, file: !4675, line: 47, baseType: !250, size: 32, offset: 64)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4713, file: !4675, line: 48, baseType: !250, size: 32, offset: 96)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4698, file: !4675, line: 51, baseType: !250, size: 32, offset: 192)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4698, file: !4675, line: 52, baseType: !250, size: 32, offset: 224)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4698, file: !4675, line: 55, baseType: !4722, size: 1024, offset: 256)
!4722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 1024, elements: !610)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4698, file: !4675, line: 58, baseType: !4724, size: 2048, offset: 1280)
!4724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 2048, elements: !1720)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4698, file: !4675, line: 60, baseType: !4726, size: 384, offset: 3328)
!4726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 384, elements: !4727)
!4727 = !{!4728}
!4728 = !DISubrange(count: 12)
!4729 = !DIDerivedType(tag: DW_TAG_member, scope: !4698, file: !4675, line: 62, baseType: !4730, size: 384, offset: 3712)
!4730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4698, file: !4675, line: 62, size: 384, elements: !4731)
!4731 = !{!4732, !4733}
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4730, file: !4675, line: 63, baseType: !4726, size: 384)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4730, file: !4675, line: 64, baseType: !4726, size: 384)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4680, file: !4675, line: 307, baseType: !4735, size: 1088)
!4735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4675, line: 79, size: 1088, elements: !4736)
!4736 = !{!4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4745, !4746, !4747, !4748, !4749, !4750, !4751, !4783}
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4735, file: !4675, line: 80, baseType: !250, size: 32)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4735, file: !4675, line: 81, baseType: !250, size: 32, offset: 32)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4735, file: !4675, line: 82, baseType: !250, size: 32, offset: 64)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4735, file: !4675, line: 83, baseType: !250, size: 32, offset: 96)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4735, file: !4675, line: 84, baseType: !250, size: 32, offset: 128)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4735, file: !4675, line: 85, baseType: !250, size: 32, offset: 160)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4735, file: !4675, line: 86, baseType: !250, size: 32, offset: 192)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4735, file: !4675, line: 88, baseType: !4693, size: 640, offset: 224)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4735, file: !4675, line: 89, baseType: !410, size: 8, offset: 864)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4735, file: !4675, line: 90, baseType: !410, size: 8, offset: 872)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4735, file: !4675, line: 91, baseType: !410, size: 8, offset: 880)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4735, file: !4675, line: 92, baseType: !410, size: 8, offset: 888)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4735, file: !4675, line: 93, baseType: !410, size: 8, offset: 896)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4735, file: !4675, line: 94, baseType: !410, size: 8, offset: 904)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4735, file: !4675, line: 95, baseType: !4752, size: 64, offset: 960)
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4754, line: 11, size: 128, elements: !4755)
!4754 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4755 = !{!4756, !4757}
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4753, file: !4754, line: 12, baseType: !254, size: 64)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4753, file: !4754, line: 13, baseType: !4758, size: 64, offset: 64)
!4758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4759, size: 64)
!4759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4760, line: 56, size: 1344, elements: !4761)
!4760 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4761 = !{!4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4782}
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4759, file: !4760, line: 61, baseType: !248, size: 64)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4759, file: !4760, line: 62, baseType: !248, size: 64, offset: 64)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4759, file: !4760, line: 63, baseType: !248, size: 64, offset: 128)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4759, file: !4760, line: 64, baseType: !248, size: 64, offset: 192)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4759, file: !4760, line: 65, baseType: !248, size: 64, offset: 256)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4759, file: !4760, line: 66, baseType: !248, size: 64, offset: 320)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4759, file: !4760, line: 68, baseType: !248, size: 64, offset: 384)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4759, file: !4760, line: 69, baseType: !248, size: 64, offset: 448)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4759, file: !4760, line: 70, baseType: !248, size: 64, offset: 512)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4759, file: !4760, line: 71, baseType: !248, size: 64, offset: 576)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4759, file: !4760, line: 72, baseType: !248, size: 64, offset: 640)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4759, file: !4760, line: 73, baseType: !248, size: 64, offset: 704)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4759, file: !4760, line: 74, baseType: !248, size: 64, offset: 768)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4759, file: !4760, line: 75, baseType: !248, size: 64, offset: 832)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4759, file: !4760, line: 76, baseType: !248, size: 64, offset: 896)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4759, file: !4760, line: 81, baseType: !248, size: 64, offset: 960)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4759, file: !4760, line: 83, baseType: !248, size: 64, offset: 1024)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4759, file: !4760, line: 84, baseType: !248, size: 64, offset: 1088)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4759, file: !4760, line: 85, baseType: !248, size: 64, offset: 1152)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4759, file: !4760, line: 86, baseType: !248, size: 64, offset: 1216)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4759, file: !4760, line: 87, baseType: !248, size: 64, offset: 1280)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4735, file: !4675, line: 96, baseType: !250, size: 32, offset: 1024)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4680, file: !4675, line: 308, baseType: !4785, size: 4608, align: 512)
!4785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4675, line: 289, size: 4608, align: 512, elements: !4786)
!4786 = !{!4787, !4788, !4795}
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4785, file: !4675, line: 290, baseType: !4698, size: 4096, align: 128)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4785, file: !4675, line: 291, baseType: !4789, size: 512, offset: 4096)
!4789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4675, line: 268, size: 512, elements: !4790)
!4790 = !{!4791, !4792, !4793}
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4789, file: !4675, line: 269, baseType: !298, size: 64)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4789, file: !4675, line: 270, baseType: !298, size: 64, offset: 64)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4789, file: !4675, line: 271, baseType: !4794, size: 384, offset: 128)
!4794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 384, elements: !1292)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4785, file: !4675, line: 292, baseType: !4796, offset: 4608)
!4796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, elements: !1390)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4680, file: !4675, line: 309, baseType: !4798, size: 32768)
!4798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 32768, elements: !4799)
!4799 = !{!4800}
!4800 = !DISubrange(count: 4096)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "eh_action", scope: !190, file: !154, line: 545, baseType: !4230, size: 64, offset: 832)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "host_wait", scope: !190, file: !154, line: 547, baseType: !1021, size: 128, offset: 896)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "hostt", scope: !190, file: !154, line: 548, baseType: !4804, size: 64, offset: 1024)
!4804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4805, size: 64)
!4805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_template", file: !154, line: 32, size: 2880, elements: !4806)
!4806 = !{!4807, !4808, !4809, !4813, !4966, !5050, !5051, !5052, !5056, !5060, !5061, !5062, !5063, !5064, !5068, !5069, !5073, !5077, !5081, !5085, !5089, !5093, !5097, !5101, !5105, !5106, !5110, !5114, !5118, !5122, !5123, !5127, !5128, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136, !5137, !5138, !5139, !5140, !5141, !5142, !5143, !5144, !5145, !5146, !5160, !5161, !5162, !5163, !5164, !5167}
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !4805, file: !154, line: 33, baseType: !182, size: 64)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4805, file: !154, line: 34, baseType: !645, size: 64, offset: 64)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4805, file: !154, line: 43, baseType: !4810, size: 64, offset: 128)
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{!645, !189}
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4805, file: !154, line: 50, baseType: !4814, size: 64, offset: 192)
!4814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4815, size: 64)
!4815 = !DISubroutineType(types: !4816)
!4816 = !{!267, !4817, !7, !256}
!4817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4818, size: 64)
!4818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device", file: !128, line: 101, size: 15232, align: 64, elements: !4819)
!4819 = !{!4820, !4821, !4822, !4823, !4824, !4825, !4826, !4827, !4828, !4829, !4830, !4831, !4832, !4833, !4834, !4835, !4836, !4837, !4838, !4839, !4840, !4841, !4842, !4843, !4844, !4845, !4846, !4847, !4849, !4850, !4851, !4852, !4860, !4861, !4862, !4863, !4864, !4888, !4890, !4891, !4892, !4893, !4894, !4895, !4896, !4897, !4898, !4899, !4900, !4901, !4902, !4903, !4904, !4905, !4906, !4907, !4908, !4909, !4910, !4911, !4912, !4913, !4914, !4915, !4916, !4917, !4918, !4919, !4920, !4921, !4922, !4923, !4924, !4925, !4926, !4927, !4928, !4929, !4930, !4931, !4932, !4933, !4934, !4935, !4936, !4937, !4938, !4939, !4940, !4941, !4942, !4943, !4944, !4945, !4946, !4947, !4948, !4949, !4950, !4954, !4955, !4958, !4959, !4960, !4961, !4962, !4963, !4964, !4965}
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !4818, file: !128, line: 102, baseType: !189, size: 64)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "request_queue", scope: !4818, file: !128, line: 103, baseType: !2673, size: 64, offset: 64)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !4818, file: !128, line: 106, baseType: !193, size: 128, offset: 128)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "same_target_siblings", scope: !4818, file: !128, line: 107, baseType: !193, size: 128, offset: 256)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "device_busy", scope: !4818, file: !128, line: 109, baseType: !263, size: 32, offset: 384)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "device_blocked", scope: !4818, file: !128, line: 110, baseType: !263, size: 32, offset: 416)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "restarts", scope: !4818, file: !128, line: 112, baseType: !263, size: 32, offset: 448)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4818, file: !128, line: 113, baseType: !202, offset: 480)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "starved_entry", scope: !4818, file: !128, line: 114, baseType: !193, size: 128, offset: 512)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !4818, file: !128, line: 115, baseType: !315, size: 16, offset: 640)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "max_queue_depth", scope: !4818, file: !128, line: 116, baseType: !315, size: 16, offset: 656)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_depth", scope: !4818, file: !128, line: 117, baseType: !315, size: 16, offset: 672)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_count", scope: !4818, file: !128, line: 118, baseType: !315, size: 16, offset: 688)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_time", scope: !4818, file: !128, line: 119, baseType: !248, size: 64, offset: 704)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ramp_up_period", scope: !4818, file: !128, line: 120, baseType: !248, size: 64, offset: 768)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_ramp_up", scope: !4818, file: !128, line: 123, baseType: !248, size: 64, offset: 832)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4818, file: !128, line: 125, baseType: !7, size: 32, offset: 896)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !4818, file: !128, line: 125, baseType: !7, size: 32, offset: 928)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "lun", scope: !4818, file: !128, line: 126, baseType: !298, size: 64, offset: 960)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !4818, file: !128, line: 127, baseType: !7, size: 32, offset: 1024)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "sector_size", scope: !4818, file: !128, line: 129, baseType: !7, size: 32, offset: 1056)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !4818, file: !128, line: 131, baseType: !256, size: 64, offset: 1088)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4818, file: !128, line: 132, baseType: !412, size: 8, offset: 1152)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !4818, file: !128, line: 133, baseType: !647, size: 8, offset: 1160)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "inq_periph_qual", scope: !4818, file: !128, line: 134, baseType: !647, size: 8, offset: 1168)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_mutex", scope: !4818, file: !128, line: 135, baseType: !220, size: 192, offset: 1216)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_len", scope: !4818, file: !128, line: 136, baseType: !412, size: 8, offset: 1408)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry", scope: !4818, file: !128, line: 137, baseType: !4848, size: 64, offset: 1472)
!4848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4818, file: !128, line: 138, baseType: !645, size: 64, offset: 1536)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !4818, file: !128, line: 139, baseType: !645, size: 64, offset: 1600)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !4818, file: !128, line: 140, baseType: !645, size: 64, offset: 1664)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg0", scope: !4818, file: !128, line: 143, baseType: !4853, size: 64, offset: 1728)
!4853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4854, size: 64)
!4854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_vpd", file: !128, line: 95, size: 192, elements: !4855)
!4855 = !{!4856, !4857, !4858}
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4854, file: !128, line: 96, baseType: !870, size: 128, align: 64)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4854, file: !128, line: 97, baseType: !267, size: 32, offset: 128)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4854, file: !128, line: 98, baseType: !4859, offset: 160)
!4859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !412, elements: !2488)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg83", scope: !4818, file: !128, line: 144, baseType: !4853, size: 64, offset: 1792)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg80", scope: !4818, file: !128, line: 145, baseType: !4853, size: 64, offset: 1856)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg89", scope: !4818, file: !128, line: 146, baseType: !4853, size: 64, offset: 1920)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "current_tag", scope: !4818, file: !128, line: 147, baseType: !412, size: 8, offset: 1984)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_target", scope: !4818, file: !128, line: 148, baseType: !4865, size: 64, offset: 2048)
!4865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4866, size: 64)
!4866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_target", file: !128, line: 289, size: 6272, align: 64, elements: !4867)
!4867 = !{!4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4884, !4885, !4886, !4887}
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "starget_sdev_user", scope: !4866, file: !128, line: 290, baseType: !4817, size: 64)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !4866, file: !128, line: 291, baseType: !193, size: 128, offset: 64)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !4866, file: !128, line: 292, baseType: !193, size: 128, offset: 192)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4866, file: !128, line: 293, baseType: !1676, size: 5568, offset: 320)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "reap_ref", scope: !4866, file: !128, line: 294, baseType: !1967, size: 32, offset: 5888)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !4866, file: !128, line: 295, baseType: !7, size: 32, offset: 5920)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4866, file: !128, line: 296, baseType: !7, size: 32, offset: 5952)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !4866, file: !128, line: 298, baseType: !7, size: 1, offset: 5984, flags: DIFlagBitField, extraData: i64 5984)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "single_lun", scope: !4866, file: !128, line: 299, baseType: !7, size: 1, offset: 5985, flags: DIFlagBitField, extraData: i64 5984)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "pdt_1f_for_no_lun", scope: !4866, file: !128, line: 302, baseType: !7, size: 1, offset: 5986, flags: DIFlagBitField, extraData: i64 5984)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_luns", scope: !4866, file: !128, line: 304, baseType: !7, size: 1, offset: 5987, flags: DIFlagBitField, extraData: i64 5984)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_lun_change", scope: !4866, file: !128, line: 306, baseType: !7, size: 1, offset: 5988, flags: DIFlagBitField, extraData: i64 5984)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "target_busy", scope: !4866, file: !128, line: 310, baseType: !263, size: 32, offset: 6016)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "target_blocked", scope: !4866, file: !128, line: 311, baseType: !263, size: 32, offset: 6048)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !4866, file: !128, line: 317, baseType: !7, size: 32, offset: 6080)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "max_target_blocked", scope: !4866, file: !128, line: 318, baseType: !7, size: 32, offset: 6112)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !4866, file: !128, line: 321, baseType: !647, size: 8, offset: 6144)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4866, file: !128, line: 322, baseType: !127, size: 32, offset: 6176)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !4866, file: !128, line: 323, baseType: !256, size: 64, offset: 6208)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "starget_data", scope: !4866, file: !128, line: 324, baseType: !4133, offset: 6272)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_bflags", scope: !4818, file: !128, line: 150, baseType: !4889, size: 64, offset: 2112)
!4889 = !DIDerivedType(tag: DW_TAG_typedef, name: "blist_flags_t", file: !128, line: 18, baseType: !299)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timeout", scope: !4818, file: !128, line: 154, baseType: !7, size: 32, offset: 2176)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !4818, file: !128, line: 155, baseType: !7, size: 1, offset: 2208, flags: DIFlagBitField, extraData: i64 2208)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4818, file: !128, line: 156, baseType: !7, size: 1, offset: 2209, flags: DIFlagBitField, extraData: i64 2208)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !4818, file: !128, line: 157, baseType: !7, size: 1, offset: 2210, flags: DIFlagBitField, extraData: i64 2208)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "lockable", scope: !4818, file: !128, line: 158, baseType: !7, size: 1, offset: 2211, flags: DIFlagBitField, extraData: i64 2208)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !4818, file: !128, line: 159, baseType: !7, size: 1, offset: 2212, flags: DIFlagBitField, extraData: i64 2208)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "borken", scope: !4818, file: !128, line: 160, baseType: !7, size: 1, offset: 2213, flags: DIFlagBitField, extraData: i64 2208)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !4818, file: !128, line: 162, baseType: !7, size: 1, offset: 2214, flags: DIFlagBitField, extraData: i64 2208)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !4818, file: !128, line: 163, baseType: !7, size: 1, offset: 2215, flags: DIFlagBitField, extraData: i64 2208)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr", scope: !4818, file: !128, line: 164, baseType: !7, size: 1, offset: 2216, flags: DIFlagBitField, extraData: i64 2208)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr", scope: !4818, file: !128, line: 165, baseType: !7, size: 1, offset: 2217, flags: DIFlagBitField, extraData: i64 2208)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "ppr", scope: !4818, file: !128, line: 166, baseType: !7, size: 1, offset: 2218, flags: DIFlagBitField, extraData: i64 2208)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_supported", scope: !4818, file: !128, line: 167, baseType: !7, size: 1, offset: 2219, flags: DIFlagBitField, extraData: i64 2208)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "simple_tags", scope: !4818, file: !128, line: 168, baseType: !7, size: 1, offset: 2220, flags: DIFlagBitField, extraData: i64 2208)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "was_reset", scope: !4818, file: !128, line: 169, baseType: !7, size: 1, offset: 2221, flags: DIFlagBitField, extraData: i64 2208)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_cc_ua", scope: !4818, file: !128, line: 171, baseType: !7, size: 1, offset: 2222, flags: DIFlagBitField, extraData: i64 2208)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_rw", scope: !4818, file: !128, line: 173, baseType: !7, size: 1, offset: 2223, flags: DIFlagBitField, extraData: i64 2208)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_ms", scope: !4818, file: !128, line: 174, baseType: !7, size: 1, offset: 2224, flags: DIFlagBitField, extraData: i64 2208)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "set_dbd_for_ms", scope: !4818, file: !128, line: 175, baseType: !7, size: 1, offset: 2225, flags: DIFlagBitField, extraData: i64 2208)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_opcodes", scope: !4818, file: !128, line: 176, baseType: !7, size: 1, offset: 2226, flags: DIFlagBitField, extraData: i64 2208)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !4818, file: !128, line: 177, baseType: !7, size: 1, offset: 2227, flags: DIFlagBitField, extraData: i64 2208)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "use_16_for_rw", scope: !4818, file: !128, line: 178, baseType: !7, size: 1, offset: 2228, flags: DIFlagBitField, extraData: i64 2208)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_8", scope: !4818, file: !128, line: 179, baseType: !7, size: 1, offset: 2229, flags: DIFlagBitField, extraData: i64 2208)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_3f", scope: !4818, file: !128, line: 180, baseType: !7, size: 1, offset: 2230, flags: DIFlagBitField, extraData: i64 2208)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "skip_vpd_pages", scope: !4818, file: !128, line: 181, baseType: !7, size: 1, offset: 2231, flags: DIFlagBitField, extraData: i64 2208)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "try_vpd_pages", scope: !4818, file: !128, line: 182, baseType: !7, size: 1, offset: 2232, flags: DIFlagBitField, extraData: i64 2208)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "use_192_bytes_for_3f", scope: !4818, file: !128, line: 183, baseType: !7, size: 1, offset: 2233, flags: DIFlagBitField, extraData: i64 2208)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "no_start_on_add", scope: !4818, file: !128, line: 184, baseType: !7, size: 1, offset: 2234, flags: DIFlagBitField, extraData: i64 2208)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "allow_restart", scope: !4818, file: !128, line: 185, baseType: !7, size: 1, offset: 2235, flags: DIFlagBitField, extraData: i64 2208)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "manage_start_stop", scope: !4818, file: !128, line: 186, baseType: !7, size: 1, offset: 2236, flags: DIFlagBitField, extraData: i64 2208)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "start_stop_pwr_cond", scope: !4818, file: !128, line: 187, baseType: !7, size: 1, offset: 2237, flags: DIFlagBitField, extraData: i64 2208)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "no_uld_attach", scope: !4818, file: !128, line: 188, baseType: !7, size: 1, offset: 2238, flags: DIFlagBitField, extraData: i64 2208)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "select_no_atn", scope: !4818, file: !128, line: 189, baseType: !7, size: 1, offset: 2239, flags: DIFlagBitField, extraData: i64 2208)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "fix_capacity", scope: !4818, file: !128, line: 190, baseType: !7, size: 1, offset: 2240, flags: DIFlagBitField, extraData: i64 2208)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "guess_capacity", scope: !4818, file: !128, line: 191, baseType: !7, size: 1, offset: 2241, flags: DIFlagBitField, extraData: i64 2208)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "retry_hwerror", scope: !4818, file: !128, line: 192, baseType: !7, size: 1, offset: 2242, flags: DIFlagBitField, extraData: i64 2208)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "last_sector_bug", scope: !4818, file: !128, line: 193, baseType: !7, size: 1, offset: 2243, flags: DIFlagBitField, extraData: i64 2208)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_disc_info", scope: !4818, file: !128, line: 195, baseType: !7, size: 1, offset: 2244, flags: DIFlagBitField, extraData: i64 2208)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_capacity_16", scope: !4818, file: !128, line: 196, baseType: !7, size: 1, offset: 2245, flags: DIFlagBitField, extraData: i64 2208)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "try_rc_10_first", scope: !4818, file: !128, line: 197, baseType: !7, size: 1, offset: 2246, flags: DIFlagBitField, extraData: i64 2208)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "security_supported", scope: !4818, file: !128, line: 198, baseType: !7, size: 1, offset: 2247, flags: DIFlagBitField, extraData: i64 2208)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !4818, file: !128, line: 199, baseType: !7, size: 1, offset: 2248, flags: DIFlagBitField, extraData: i64 2208)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "wce_default_on", scope: !4818, file: !128, line: 200, baseType: !7, size: 1, offset: 2249, flags: DIFlagBitField, extraData: i64 2208)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "no_dif", scope: !4818, file: !128, line: 201, baseType: !7, size: 1, offset: 2250, flags: DIFlagBitField, extraData: i64 2208)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "broken_fua", scope: !4818, file: !128, line: 202, baseType: !7, size: 1, offset: 2251, flags: DIFlagBitField, extraData: i64 2208)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "lun_in_cdb", scope: !4818, file: !128, line: 203, baseType: !7, size: 1, offset: 2252, flags: DIFlagBitField, extraData: i64 2208)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_limit_for_ws", scope: !4818, file: !128, line: 204, baseType: !7, size: 1, offset: 2253, flags: DIFlagBitField, extraData: i64 2208)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend", scope: !4818, file: !128, line: 205, baseType: !7, size: 1, offset: 2254, flags: DIFlagBitField, extraData: i64 2208)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "offline_already", scope: !4818, file: !128, line: 208, baseType: !690, size: 8, offset: 2256)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "disk_events_disable_depth", scope: !4818, file: !128, line: 210, baseType: !263, size: 32, offset: 2272)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "supported_events", scope: !4818, file: !128, line: 212, baseType: !429, size: 64, offset: 2304)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "pending_events", scope: !4818, file: !128, line: 213, baseType: !429, size: 64, offset: 2368)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !4818, file: !128, line: 214, baseType: !193, size: 128, offset: 2432)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "event_work", scope: !4818, file: !128, line: 215, baseType: !2212, size: 256, offset: 2560)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "max_device_blocked", scope: !4818, file: !128, line: 217, baseType: !7, size: 32, offset: 2816)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "iorequest_cnt", scope: !4818, file: !128, line: 220, baseType: !263, size: 32, offset: 2848)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "iodone_cnt", scope: !4818, file: !128, line: 221, baseType: !263, size: 32, offset: 2880)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "ioerr_cnt", scope: !4818, file: !128, line: 222, baseType: !263, size: 32, offset: 2912)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_gendev", scope: !4818, file: !128, line: 224, baseType: !1676, size: 5568, offset: 2944)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_dev", scope: !4818, file: !128, line: 225, baseType: !1676, size: 5568, offset: 8512)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "ew", scope: !4818, file: !128, line: 227, baseType: !4951, size: 256, offset: 14080)
!4951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "execute_work", file: !2213, line: 168, size: 256, elements: !4952)
!4952 = !{!4953}
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4951, file: !2213, line: 169, baseType: !2212, size: 256)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !4818, file: !128, line: 228, baseType: !2212, size: 256, offset: 14336)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4818, file: !128, line: 230, baseType: !4956, size: 64, offset: 14592)
!4956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4957, size: 64)
!4957 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device_handler", file: !128, line: 230, flags: DIFlagFwdDecl)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !4818, file: !128, line: 231, baseType: !256, size: 64, offset: 14656)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_len", scope: !4818, file: !128, line: 233, baseType: !823, size: 64, offset: 14720)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_buf", scope: !4818, file: !128, line: 234, baseType: !256, size: 64, offset: 14784)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "access_state", scope: !4818, file: !128, line: 236, baseType: !412, size: 8, offset: 14848)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "state_mutex", scope: !4818, file: !128, line: 237, baseType: !220, size: 192, offset: 14912)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_state", scope: !4818, file: !128, line: 238, baseType: !135, size: 32, offset: 15104)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "quiesced_by", scope: !4818, file: !128, line: 239, baseType: !239, size: 64, offset: 15168)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_data", scope: !4818, file: !128, line: 240, baseType: !4133, offset: 15232)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "init_cmd_priv", scope: !4805, file: !154, line: 65, baseType: !4967, size: 64, offset: 256)
!4967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4968, size: 64)
!4968 = !DISubroutineType(types: !4969)
!4969 = !{!267, !189, !4970}
!4970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4971, size: 64)
!4971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_cmnd", file: !4972, line: 68, size: 3136, elements: !4973)
!4972 = !DIFile(filename: "./include/scsi/scsi_cmnd.h", directory: "/home/lizy2001/genbc/linux")
!4973 = !{!4974, !4987, !4988, !4989, !4990, !4991, !4992, !4993, !4994, !4995, !4996, !4997, !4998, !4999, !5000, !5001, !5020, !5022, !5023, !5024, !5025, !5026, !5030, !5044, !5045, !5046, !5047, !5048, !5049}
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !4971, file: !4972, line: 69, baseType: !4975, size: 448)
!4975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_request", file: !4976, line: 9, size: 448, elements: !4977)
!4976 = !DIFile(filename: "./include/scsi/scsi_request.h", directory: "/home/lizy2001/genbc/linux")
!4977 = !{!4978, !4980, !4981, !4982, !4983, !4984, !4985, !4986}
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "__cmd", scope: !4975, file: !4976, line: 10, baseType: !4979, size: 128)
!4979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !412, size: 128, elements: !3247)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4975, file: !4976, line: 11, baseType: !4848, size: 64, offset: 128)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !4975, file: !4976, line: 12, baseType: !315, size: 16, offset: 192)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4975, file: !4976, line: 13, baseType: !267, size: 32, offset: 224)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !4975, file: !4976, line: 14, baseType: !7, size: 32, offset: 256)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "resid_len", scope: !4975, file: !4976, line: 15, baseType: !7, size: 32, offset: 288)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !4975, file: !4976, line: 16, baseType: !267, size: 32, offset: 320)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !4975, file: !4976, line: 17, baseType: !256, size: 64, offset: 384)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4971, file: !4972, line: 70, baseType: !4817, size: 64, offset: 448)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "eh_entry", scope: !4971, file: !4972, line: 71, baseType: !193, size: 128, offset: 512)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "abort_work", scope: !4971, file: !4972, line: 72, baseType: !2696, size: 704, offset: 640)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4971, file: !4972, line: 74, baseType: !870, size: 128, align: 64, offset: 1344)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "eh_eflags", scope: !4971, file: !4972, line: 76, baseType: !267, size: 32, offset: 1472)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "jiffies_at_alloc", scope: !4971, file: !4972, line: 83, baseType: !248, size: 64, offset: 1536)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !4971, file: !4972, line: 85, baseType: !267, size: 32, offset: 1600)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !4971, file: !4972, line: 86, baseType: !267, size: 32, offset: 1632)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "prot_op", scope: !4971, file: !4972, line: 88, baseType: !412, size: 8, offset: 1664)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "prot_type", scope: !4971, file: !4972, line: 89, baseType: !412, size: 8, offset: 1672)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "prot_flags", scope: !4971, file: !4972, line: 90, baseType: !412, size: 8, offset: 1680)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !4971, file: !4972, line: 92, baseType: !315, size: 16, offset: 1696)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "sc_data_direction", scope: !4971, file: !4972, line: 93, baseType: !146, size: 32, offset: 1728)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "cmnd", scope: !4971, file: !4972, line: 96, baseType: !4848, size: 64, offset: 1792)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "sdb", scope: !4971, file: !4972, line: 100, baseType: !5002, size: 192, offset: 1856)
!5002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_data_buffer", file: !4972, line: 35, size: 192, elements: !5003)
!5003 = !{!5004, !5019}
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !5002, file: !4972, line: 36, baseType: !5005, size: 128)
!5005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !5006, line: 42, size: 128, elements: !5007)
!5006 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!5007 = !{!5008, !5017, !5018}
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !5005, file: !5006, line: 43, baseType: !5009, size: 64)
!5009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5010, size: 64)
!5010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !5006, line: 11, size: 256, elements: !5011)
!5011 = !{!5012, !5013, !5014, !5015, !5016}
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !5010, file: !5006, line: 12, baseType: !248, size: 64)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5010, file: !5006, line: 13, baseType: !7, size: 32, offset: 64)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5010, file: !5006, line: 14, baseType: !7, size: 32, offset: 96)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !5010, file: !5006, line: 15, baseType: !3859, size: 64, offset: 128)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !5010, file: !5006, line: 17, baseType: !7, size: 32, offset: 192)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !5005, file: !5006, line: 44, baseType: !7, size: 32, offset: 64)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !5005, file: !5006, line: 45, baseType: !7, size: 32, offset: 96)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5002, file: !4972, line: 37, baseType: !7, size: 32, offset: 128)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "prot_sdb", scope: !4971, file: !4972, line: 101, baseType: !5021, size: 64, offset: 2048)
!5021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5002, size: 64)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "underflow", scope: !4971, file: !4972, line: 103, baseType: !7, size: 32, offset: 2112)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "transfersize", scope: !4971, file: !4972, line: 106, baseType: !7, size: 32, offset: 2144)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4971, file: !4972, line: 112, baseType: !2677, size: 64, offset: 2176)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "sense_buffer", scope: !4971, file: !4972, line: 115, baseType: !4848, size: 64, offset: 2240)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_done", scope: !4971, file: !4972, line: 123, baseType: !5027, size: 64, offset: 2304)
!5027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5028, size: 64)
!5028 = !DISubroutineType(types: !5029)
!5029 = !{null, !4970}
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "SCp", scope: !4971, file: !4972, line: 129, baseType: !5031, size: 512, offset: 2368)
!5031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_pointer", file: !4972, line: 41, size: 512, elements: !5032)
!5032 = !{!5033, !5034, !5035, !5036, !5037, !5038, !5040, !5041, !5042, !5043}
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5031, file: !4972, line: 42, baseType: !671, size: 64)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "this_residual", scope: !5031, file: !4972, line: 43, baseType: !267, size: 32, offset: 64)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !5031, file: !4972, line: 44, baseType: !5009, size: 64, offset: 128)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "buffers_residual", scope: !5031, file: !4972, line: 45, baseType: !267, size: 32, offset: 192)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "dma_handle", scope: !5031, file: !4972, line: 47, baseType: !3859, size: 64, offset: 256)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "Status", scope: !5031, file: !4972, line: 49, baseType: !5039, size: 32, offset: 320)
!5039 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !267)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "Message", scope: !5031, file: !4972, line: 50, baseType: !5039, size: 32, offset: 352)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "have_data_in", scope: !5031, file: !4972, line: 51, baseType: !5039, size: 32, offset: 384)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "sent_command", scope: !5031, file: !4972, line: 52, baseType: !5039, size: 32, offset: 416)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !5031, file: !4972, line: 53, baseType: !5039, size: 32, offset: 448)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "host_scribble", scope: !4971, file: !4972, line: 131, baseType: !4848, size: 64, offset: 2880)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4971, file: !4972, line: 139, baseType: !267, size: 32, offset: 2944)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4971, file: !4972, line: 140, baseType: !267, size: 32, offset: 2976)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4971, file: !4972, line: 141, baseType: !248, size: 64, offset: 3008)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !4971, file: !4972, line: 143, baseType: !412, size: 8, offset: 3072)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "extra_len", scope: !4971, file: !4972, line: 144, baseType: !7, size: 32, offset: 3104)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "exit_cmd_priv", scope: !4805, file: !154, line: 66, baseType: !4967, size: 64, offset: 320)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "queuecommand", scope: !4805, file: !154, line: 102, baseType: !4967, size: 64, offset: 384)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !4805, file: !154, line: 112, baseType: !5053, size: 64, offset: 448)
!5053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5054, size: 64)
!5054 = !DISubroutineType(types: !5055)
!5055 = !{null, !189, !918}
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "eh_abort_handler", scope: !4805, file: !154, line: 132, baseType: !5057, size: 64, offset: 512)
!5057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5058, size: 64)
!5058 = !DISubroutineType(types: !5059)
!5059 = !{!267, !4970}
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "eh_device_reset_handler", scope: !4805, file: !154, line: 133, baseType: !5057, size: 64, offset: 576)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "eh_target_reset_handler", scope: !4805, file: !154, line: 134, baseType: !5057, size: 64, offset: 640)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "eh_bus_reset_handler", scope: !4805, file: !154, line: 135, baseType: !5057, size: 64, offset: 704)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "eh_host_reset_handler", scope: !4805, file: !154, line: 136, baseType: !5057, size: 64, offset: 768)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "slave_alloc", scope: !4805, file: !154, line: 164, baseType: !5065, size: 64, offset: 832)
!5065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5066, size: 64)
!5066 = !DISubroutineType(types: !5067)
!5067 = !{!267, !4817}
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "slave_configure", scope: !4805, file: !154, line: 195, baseType: !5065, size: 64, offset: 896)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "slave_destroy", scope: !4805, file: !154, line: 206, baseType: !5070, size: 64, offset: 960)
!5070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5071, size: 64)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{null, !4817}
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "target_alloc", scope: !4805, file: !154, line: 220, baseType: !5074, size: 64, offset: 1024)
!5074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5075, size: 64)
!5075 = !DISubroutineType(types: !5076)
!5076 = !{!267, !4865}
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "target_destroy", scope: !4805, file: !154, line: 230, baseType: !5078, size: 64, offset: 1088)
!5078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5079, size: 64)
!5079 = !DISubroutineType(types: !5080)
!5080 = !{null, !4865}
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "scan_finished", scope: !4805, file: !154, line: 241, baseType: !5082, size: 64, offset: 1152)
!5082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5083, size: 64)
!5083 = !DISubroutineType(types: !5084)
!5084 = !{!267, !189, !248}
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !4805, file: !154, line: 250, baseType: !5086, size: 64, offset: 1216)
!5086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5087, size: 64)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{null, !189}
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "change_queue_depth", scope: !4805, file: !154, line: 263, baseType: !5090, size: 64, offset: 1280)
!5090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5091, size: 64)
!5091 = !DISubroutineType(types: !5092)
!5092 = !{!267, !4817, !267}
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !4805, file: !154, line: 271, baseType: !5094, size: 64, offset: 1344)
!5094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5095, size: 64)
!5095 = !DISubroutineType(types: !5096)
!5096 = !{!267, !189}
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "dma_need_drain", scope: !4805, file: !154, line: 278, baseType: !5098, size: 64, offset: 1408)
!5098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5099, size: 64)
!5099 = !DISubroutineType(types: !5100)
!5100 = !{!690, !2677}
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "bios_param", scope: !4805, file: !154, line: 288, baseType: !5102, size: 64, offset: 1472)
!5102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5103, size: 64)
!5103 = !DISubroutineType(types: !5104)
!5104 = !{!267, !4817, !1626, !1648, !811}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !4805, file: !154, line: 297, baseType: !5070, size: 64, offset: 1536)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "show_info", scope: !4805, file: !154, line: 306, baseType: !5107, size: 64, offset: 1600)
!5107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5108, size: 64)
!5108 = !DISubroutineType(types: !5109)
!5109 = !{!267, !817, !189}
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4805, file: !154, line: 307, baseType: !5111, size: 64, offset: 1664)
!5111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5112, size: 64)
!5112 = !DISubroutineType(types: !5113)
!5113 = !{!267, !189, !671, !267}
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timed_out", scope: !4805, file: !154, line: 316, baseType: !5115, size: 64, offset: 1728)
!5115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5116, size: 64)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{!55, !4970}
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "host_reset", scope: !4805, file: !154, line: 326, baseType: !5119, size: 64, offset: 1792)
!5119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5120, size: 64)
!5120 = !DISubroutineType(types: !5121)
!5121 = !{!267, !189, !267}
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "proc_name", scope: !4805, file: !154, line: 334, baseType: !645, size: 64, offset: 1856)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !4805, file: !154, line: 340, baseType: !5124, size: 64, offset: 1920)
!5124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5125, size: 64)
!5125 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !5126, line: 123, flags: DIFlagFwdDecl)
!5126 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !4805, file: !154, line: 347, baseType: !267, size: 32, offset: 1984)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !4805, file: !154, line: 356, baseType: !267, size: 32, offset: 2016)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !4805, file: !154, line: 362, baseType: !315, size: 16, offset: 2048)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !4805, file: !154, line: 363, baseType: !315, size: 16, offset: 2064)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !4805, file: !154, line: 368, baseType: !7, size: 32, offset: 2080)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4805, file: !154, line: 373, baseType: !7, size: 32, offset: 2112)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !4805, file: !154, line: 379, baseType: !248, size: 64, offset: 2176)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !4805, file: !154, line: 381, baseType: !248, size: 64, offset: 2240)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !4805, file: !154, line: 400, baseType: !1274, size: 16, offset: 2304)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !4805, file: !154, line: 406, baseType: !412, size: 8, offset: 2320)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "tag_alloc_policy", scope: !4805, file: !154, line: 409, baseType: !267, size: 32, offset: 2336)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "track_queue_depth", scope: !4805, file: !154, line: 414, baseType: !7, size: 1, offset: 2368, flags: DIFlagBitField, extraData: i64 2368)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "supported_mode", scope: !4805, file: !154, line: 419, baseType: !7, size: 2, offset: 2369, flags: DIFlagBitField, extraData: i64 2368)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !4805, file: !154, line: 424, baseType: !7, size: 1, offset: 2371, flags: DIFlagBitField, extraData: i64 2368)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "emulated", scope: !4805, file: !154, line: 429, baseType: !7, size: 1, offset: 2372, flags: DIFlagBitField, extraData: i64 2368)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "skip_settle_delay", scope: !4805, file: !154, line: 434, baseType: !7, size: 1, offset: 2373, flags: DIFlagBitField, extraData: i64 2368)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !4805, file: !154, line: 437, baseType: !7, size: 1, offset: 2374, flags: DIFlagBitField, extraData: i64 2368)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !4805, file: !154, line: 440, baseType: !7, size: 1, offset: 2375, flags: DIFlagBitField, extraData: i64 2368)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !4805, file: !154, line: 445, baseType: !7, size: 32, offset: 2400)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "shost_attrs", scope: !4805, file: !154, line: 459, baseType: !5147, size: 64, offset: 2432)
!5147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5148, size: 64)
!5148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5149, size: 64)
!5149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !114, line: 99, size: 256, elements: !5150)
!5150 = !{!5151, !5152, !5156}
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5149, file: !114, line: 100, baseType: !1747, size: 128)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5149, file: !114, line: 101, baseType: !5153, size: 64, offset: 128)
!5153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5154, size: 64)
!5154 = !DISubroutineType(types: !5155)
!5155 = !{!895, !1977, !5148, !671}
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5149, file: !114, line: 103, baseType: !5157, size: 64, offset: 192)
!5157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5158, size: 64)
!5158 = !DISubroutineType(types: !5159)
!5159 = !{!895, !1977, !5148, !645, !823}
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_attrs", scope: !4805, file: !154, line: 464, baseType: !5147, size: 64, offset: 2496)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_groups", scope: !4805, file: !154, line: 470, baseType: !1758, size: 64, offset: 2560)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !4805, file: !154, line: 479, baseType: !298, size: 64, offset: 2624)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !4805, file: !154, line: 484, baseType: !7, size: 32, offset: 2688)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pool", scope: !4805, file: !154, line: 485, baseType: !5165, size: 64, offset: 2752)
!5165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5166, size: 64)
!5166 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_cmd_pool", file: !154, line: 19, flags: DIFlagFwdDecl)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend_delay", scope: !4805, file: !154, line: 488, baseType: !267, size: 32, offset: 2816)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "transportt", scope: !190, file: !154, line: 549, baseType: !5169, size: 64, offset: 1088)
!5169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5170, size: 64)
!5170 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_transport_template", file: !154, line: 23, flags: DIFlagFwdDecl)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !190, file: !154, line: 552, baseType: !3064, size: 2304, offset: 1152)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "host_blocked", scope: !190, file: !154, line: 554, baseType: !263, size: 32, offset: 3456)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "host_failed", scope: !190, file: !154, line: 556, baseType: !7, size: 32, offset: 3488)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "host_eh_scheduled", scope: !190, file: !154, line: 558, baseType: !7, size: 32, offset: 3520)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "host_no", scope: !190, file: !154, line: 560, baseType: !7, size: 32, offset: 3552)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "eh_deadline", scope: !190, file: !154, line: 563, baseType: !267, size: 32, offset: 3584)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !190, file: !154, line: 564, baseType: !248, size: 64, offset: 3648)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "max_channel", scope: !190, file: !154, line: 573, baseType: !7, size: 32, offset: 3712)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "max_id", scope: !190, file: !154, line: 574, baseType: !7, size: 32, offset: 3744)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "max_lun", scope: !190, file: !154, line: 575, baseType: !298, size: 64, offset: 3776)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !190, file: !154, line: 584, baseType: !7, size: 32, offset: 3840)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmd_len", scope: !190, file: !154, line: 593, baseType: !315, size: 16, offset: 3872)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !190, file: !154, line: 595, baseType: !267, size: 32, offset: 3904)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !190, file: !154, line: 596, baseType: !267, size: 32, offset: 3936)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !190, file: !154, line: 597, baseType: !1274, size: 16, offset: 3968)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !190, file: !154, line: 598, baseType: !315, size: 16, offset: 3984)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !190, file: !154, line: 599, baseType: !315, size: 16, offset: 4000)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !190, file: !154, line: 600, baseType: !7, size: 32, offset: 4032)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !190, file: !154, line: 601, baseType: !7, size: 32, offset: 4064)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !190, file: !154, line: 602, baseType: !248, size: 64, offset: 4096)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !190, file: !154, line: 603, baseType: !248, size: 64, offset: 4160)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !190, file: !154, line: 612, baseType: !7, size: 32, offset: 4224)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "active_mode", scope: !190, file: !154, line: 613, baseType: !7, size: 2, offset: 4256, flags: DIFlagBitField, extraData: i64 4256)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !190, file: !154, line: 614, baseType: !7, size: 1, offset: 4258, flags: DIFlagBitField, extraData: i64 4256)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "host_self_blocked", scope: !190, file: !154, line: 620, baseType: !7, size: 1, offset: 4259, flags: DIFlagBitField, extraData: i64 4256)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "reverse_ordering", scope: !190, file: !154, line: 627, baseType: !7, size: 1, offset: 4260, flags: DIFlagBitField, extraData: i64 4256)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_in_progress", scope: !190, file: !154, line: 630, baseType: !7, size: 1, offset: 4261, flags: DIFlagBitField, extraData: i64 4256)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "async_scan", scope: !190, file: !154, line: 633, baseType: !7, size: 1, offset: 4262, flags: DIFlagBitField, extraData: i64 4256)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "eh_noresume", scope: !190, file: !154, line: 636, baseType: !7, size: 1, offset: 4263, flags: DIFlagBitField, extraData: i64 4256)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !190, file: !154, line: 639, baseType: !7, size: 1, offset: 4264, flags: DIFlagBitField, extraData: i64 4256)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !190, file: !154, line: 642, baseType: !7, size: 1, offset: 4265, flags: DIFlagBitField, extraData: i64 4256)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "short_inquiry", scope: !190, file: !154, line: 645, baseType: !7, size: 1, offset: 4266, flags: DIFlagBitField, extraData: i64 4256)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "no_scsi2_lun_in_cdb", scope: !190, file: !154, line: 648, baseType: !7, size: 1, offset: 4267, flags: DIFlagBitField, extraData: i64 4256)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "work_q_name", scope: !190, file: !154, line: 653, baseType: !5205, size: 160, offset: 4272)
!5205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 160, elements: !4694)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "work_q", scope: !190, file: !154, line: 654, baseType: !2465, size: 64, offset: 4480)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_work_q", scope: !190, file: !154, line: 659, baseType: !2465, size: 64, offset: 4544)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !190, file: !154, line: 664, baseType: !7, size: 32, offset: 4608)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "prot_capabilities", scope: !190, file: !154, line: 667, baseType: !7, size: 32, offset: 4640)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "prot_guard_type", scope: !190, file: !154, line: 668, baseType: !412, size: 8, offset: 4672)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !190, file: !154, line: 671, baseType: !248, size: 64, offset: 4736)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "io_port", scope: !190, file: !154, line: 672, baseType: !248, size: 64, offset: 4800)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "n_io_port", scope: !190, file: !154, line: 673, baseType: !412, size: 8, offset: 4864)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channel", scope: !190, file: !154, line: 674, baseType: !412, size: 8, offset: 4872)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !190, file: !154, line: 675, baseType: !7, size: 32, offset: 4896)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "shost_state", scope: !190, file: !154, line: 678, baseType: !153, size: 32, offset: 4928)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "shost_gendev", scope: !190, file: !154, line: 681, baseType: !1676, size: 5568, offset: 4992)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "shost_dev", scope: !190, file: !154, line: 681, baseType: !1676, size: 5568, offset: 10560)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "shost_data", scope: !190, file: !154, line: 687, baseType: !256, size: 64, offset: 16128)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dev", scope: !190, file: !154, line: 693, baseType: !1977, size: 64, offset: 16192)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !190, file: !154, line: 700, baseType: !4133, align: 64, offset: 16256)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "io_port_base", scope: !186, file: !3, line: 298, baseType: !248, size: 64, offset: 64)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "io_port_len", scope: !186, file: !3, line: 299, baseType: !248, size: 64, offset: 128)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "dcb_list", scope: !186, file: !3, line: 301, baseType: !193, size: 128, offset: 192)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "dcb_run_robin", scope: !186, file: !3, line: 302, baseType: !5226, size: 64, offset: 320)
!5226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5227, size: 64)
!5227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DeviceCtlBlk", file: !3, line: 268, size: 704, elements: !5228)
!5228 = !{!5229, !5230, !5231, !5232, !5233, !5265, !5266, !5267, !5268, !5269, !5270, !5271, !5272, !5273, !5274, !5275, !5276, !5277, !5278}
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5227, file: !3, line: 269, baseType: !193, size: 128)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "acb", scope: !5227, file: !3, line: 270, baseType: !185, size: 64, offset: 128)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "srb_going_list", scope: !5227, file: !3, line: 271, baseType: !193, size: 128, offset: 192)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "srb_waiting_list", scope: !5227, file: !3, line: 272, baseType: !193, size: 128, offset: 320)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "active_srb", scope: !5227, file: !3, line: 274, baseType: !5234, size: 64, offset: 448)
!5234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5235, size: 64)
!5235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScsiReqBlk", file: !3, line: 227, size: 832, elements: !5236)
!5236 = !{!5237, !5238, !5239, !5240, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263, !5264}
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5235, file: !3, line: 228, baseType: !193, size: 128)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "dcb", scope: !5235, file: !3, line: 229, baseType: !5226, size: 64, offset: 128)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5235, file: !3, line: 230, baseType: !4970, size: 64, offset: 192)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "segment_x", scope: !5235, file: !3, line: 232, baseType: !5241, size: 64, offset: 256)
!5241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5242, size: 64)
!5242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SGentry", file: !3, line: 188, size: 64, elements: !5243)
!5243 = !{!5244, !5245}
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !5242, file: !3, line: 189, baseType: !250, size: 32)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5242, file: !3, line: 190, baseType: !250, size: 32, offset: 32)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "sg_bus_addr", scope: !5235, file: !3, line: 233, baseType: !3859, size: 64, offset: 320)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "sg_count", scope: !5235, file: !3, line: 235, baseType: !410, size: 8, offset: 384)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "sg_index", scope: !5235, file: !3, line: 236, baseType: !410, size: 8, offset: 392)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "total_xfer_length", scope: !5235, file: !3, line: 237, baseType: !823, size: 64, offset: 448)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "request_length", scope: !5235, file: !3, line: 238, baseType: !823, size: 64, offset: 512)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "xferred", scope: !5235, file: !3, line: 248, baseType: !823, size: 64, offset: 576)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5235, file: !3, line: 250, baseType: !918, size: 16, offset: 640)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "msgin_buf", scope: !5235, file: !3, line: 252, baseType: !5254, size: 48, offset: 656)
!5254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 48, elements: !1292)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "msgout_buf", scope: !5235, file: !3, line: 253, baseType: !5254, size: 48, offset: 704)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "adapter_status", scope: !5235, file: !3, line: 255, baseType: !410, size: 8, offset: 752)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "target_status", scope: !5235, file: !3, line: 256, baseType: !410, size: 8, offset: 760)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "msg_count", scope: !5235, file: !3, line: 257, baseType: !410, size: 8, offset: 768)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "end_message", scope: !5235, file: !3, line: 258, baseType: !410, size: 8, offset: 776)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "tag_number", scope: !5235, file: !3, line: 260, baseType: !410, size: 8, offset: 784)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5235, file: !3, line: 261, baseType: !410, size: 8, offset: 792)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "retry_count", scope: !5235, file: !3, line: 262, baseType: !410, size: 8, offset: 800)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5235, file: !3, line: 263, baseType: !410, size: 8, offset: 808)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_phase", scope: !5235, file: !3, line: 265, baseType: !410, size: 8, offset: 816)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "tag_mask", scope: !5227, file: !3, line: 275, baseType: !250, size: 32, offset: 512)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "max_command", scope: !5227, file: !3, line: 277, baseType: !918, size: 16, offset: 544)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "target_id", scope: !5227, file: !3, line: 279, baseType: !410, size: 8, offset: 560)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "target_lun", scope: !5227, file: !3, line: 280, baseType: !410, size: 8, offset: 568)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "identify_msg", scope: !5227, file: !3, line: 281, baseType: !410, size: 8, offset: 576)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "dev_mode", scope: !5227, file: !3, line: 282, baseType: !410, size: 8, offset: 584)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry7", scope: !5227, file: !3, line: 284, baseType: !410, size: 8, offset: 592)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !5227, file: !3, line: 285, baseType: !410, size: 8, offset: 600)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "min_nego_period", scope: !5227, file: !3, line: 286, baseType: !410, size: 8, offset: 608)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "sync_period", scope: !5227, file: !3, line: 287, baseType: !410, size: 8, offset: 616)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "sync_offset", scope: !5227, file: !3, line: 289, baseType: !410, size: 8, offset: 624)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5227, file: !3, line: 290, baseType: !410, size: 8, offset: 632)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "dev_type", scope: !5227, file: !3, line: 291, baseType: !410, size: 8, offset: 640)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "init_tcq_flag", scope: !5227, file: !3, line: 292, baseType: !410, size: 8, offset: 648)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "active_dcb", scope: !186, file: !3, line: 303, baseType: !5226, size: 64, offset: 384)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "srb_free_list", scope: !186, file: !3, line: 305, baseType: !193, size: 128, offset: 448)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_srb", scope: !186, file: !3, line: 306, baseType: !5234, size: 64, offset: 576)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "waiting_timer", scope: !186, file: !3, line: 307, baseType: !2179, size: 320, offset: 640)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "selto_timer", scope: !186, file: !3, line: 308, baseType: !2179, size: 320, offset: 960)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !186, file: !3, line: 310, baseType: !248, size: 64, offset: 1280)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "srb_count", scope: !186, file: !3, line: 312, baseType: !918, size: 16, offset: 1344)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "sel_timeout", scope: !186, file: !3, line: 314, baseType: !410, size: 8, offset: 1360)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "irq_level", scope: !186, file: !3, line: 316, baseType: !7, size: 32, offset: 1376)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "tag_max_num", scope: !186, file: !3, line: 317, baseType: !410, size: 8, offset: 1408)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "acb_flag", scope: !186, file: !3, line: 318, baseType: !410, size: 8, offset: 1416)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "gmode2", scope: !186, file: !3, line: 319, baseType: !410, size: 8, offset: 1424)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !186, file: !3, line: 321, baseType: !410, size: 8, offset: 1432)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "lun_chk", scope: !186, file: !3, line: 322, baseType: !410, size: 8, offset: 1440)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "scan_devices", scope: !186, file: !3, line: 323, baseType: !410, size: 8, offset: 1448)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "hostid_bit", scope: !186, file: !3, line: 324, baseType: !410, size: 8, offset: 1456)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "dcb_map", scope: !186, file: !3, line: 326, baseType: !5296, size: 128, offset: 1464)
!5296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 128, elements: !3247)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !186, file: !3, line: 327, baseType: !5298, size: 32768, offset: 1600)
!5298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5226, size: 32768, elements: !5299)
!5299 = !{!3248, !611}
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !186, file: !3, line: 329, baseType: !5301, size: 64, offset: 34368)
!5301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5302, size: 64)
!5302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !5303, line: 309, size: 19264, elements: !5304)
!5303 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!5304 = !{!5305, !5306, !5378, !5379, !5380, !5381, !5392, !5393, !5394, !5395, !5396, !5397, !5398, !5399, !5400, !5401, !5402, !5403, !5404, !5405, !5406, !5407, !5409, !5474, !5475, !5476, !5478, !5479, !5480, !5481, !5482, !5483, !5484, !5485, !5486, !5487, !5488, !5489, !5490, !5491, !5492, !5493, !5494, !5495, !5496, !5497, !5500, !5501, !5502, !5503, !5504, !5505, !5506, !5507, !5511, !5512, !5513, !5514, !5515, !5516, !5517, !5518, !5519, !5520, !5521, !5522, !5523, !5524, !5525, !5526, !5527, !5528, !5529, !5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5539, !5540, !5541, !5542, !5543, !5544, !5545, !5546, !5547, !5548, !5550, !5551, !5553, !5554, !5555, !5556, !5558, !5559, !5560, !5563, !5570, !5571, !5572, !5573, !5574, !5575, !5576}
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !5302, file: !5303, line: 310, baseType: !193, size: 128)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5302, file: !5303, line: 311, baseType: !5307, size: 64, offset: 128)
!5307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5308, size: 64)
!5308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !5303, line: 605, size: 8064, elements: !5309)
!5309 = !{!5310, !5311, !5312, !5313, !5314, !5315, !5316, !5331, !5332, !5333, !5357, !5360, !5361, !5362, !5363, !5364, !5365, !5366, !5370, !5371, !5373, !5374, !5375, !5376, !5377}
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5308, file: !5303, line: 606, baseType: !193, size: 128)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5308, file: !5303, line: 607, baseType: !5307, size: 64, offset: 128)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5308, file: !5303, line: 608, baseType: !193, size: 128, offset: 192)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !5308, file: !5303, line: 609, baseType: !193, size: 128, offset: 320)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !5308, file: !5303, line: 610, baseType: !5301, size: 64, offset: 448)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !5308, file: !5303, line: 611, baseType: !193, size: 128, offset: 512)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !5308, file: !5303, line: 613, baseType: !5317, size: 256, offset: 640)
!5317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5318, size: 256, elements: !1183)
!5318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5319, size: 64)
!5319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !5320, line: 20, size: 512, elements: !5321)
!5320 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!5321 = !{!5322, !5324, !5325, !5326, !5327, !5328, !5329, !5330}
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5319, file: !5320, line: 21, baseType: !5323, size: 64)
!5323 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !194, line: 158, baseType: !4620)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5319, file: !5320, line: 22, baseType: !5323, size: 64, offset: 64)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5319, file: !5320, line: 23, baseType: !645, size: 64, offset: 128)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5319, file: !5320, line: 24, baseType: !248, size: 64, offset: 192)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !5319, file: !5320, line: 25, baseType: !248, size: 64, offset: 256)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5319, file: !5320, line: 26, baseType: !5318, size: 64, offset: 320)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !5319, file: !5320, line: 26, baseType: !5318, size: 64, offset: 384)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !5319, file: !5320, line: 26, baseType: !5318, size: 64, offset: 448)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !5308, file: !5303, line: 614, baseType: !193, size: 128, offset: 896)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !5308, file: !5303, line: 615, baseType: !5319, size: 512, offset: 1024)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5308, file: !5303, line: 617, baseType: !5334, size: 64, offset: 1536)
!5334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5335, size: 64)
!5335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !5303, line: 731, size: 320, elements: !5336)
!5336 = !{!5337, !5341, !5345, !5349, !5353}
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !5335, file: !5303, line: 732, baseType: !5338, size: 64)
!5338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5339, size: 64)
!5339 = !DISubroutineType(types: !5340)
!5340 = !{!267, !5307}
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !5335, file: !5303, line: 733, baseType: !5342, size: 64, offset: 64)
!5342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5343, size: 64)
!5343 = !DISubroutineType(types: !5344)
!5344 = !{null, !5307}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !5335, file: !5303, line: 734, baseType: !5346, size: 64, offset: 128)
!5346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5347, size: 64)
!5347 = !DISubroutineType(types: !5348)
!5348 = !{!256, !5307, !7, !267}
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5335, file: !5303, line: 735, baseType: !5350, size: 64, offset: 192)
!5350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5351, size: 64)
!5351 = !DISubroutineType(types: !5352)
!5352 = !{!267, !5307, !7, !267, !267, !4171}
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5335, file: !5303, line: 736, baseType: !5354, size: 64, offset: 256)
!5354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5355, size: 64)
!5355 = !DISubroutineType(types: !5356)
!5356 = !{!267, !5307, !7, !267, !267, !250}
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !5308, file: !5303, line: 618, baseType: !5358, size: 64, offset: 1600)
!5358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5359, size: 64)
!5359 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !5303, line: 537, flags: DIFlagFwdDecl)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !5308, file: !5303, line: 619, baseType: !256, size: 64, offset: 1664)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !5308, file: !5303, line: 620, baseType: !5124, size: 64, offset: 1728)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !5308, file: !5303, line: 622, baseType: !412, size: 8, offset: 1792)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !5308, file: !5303, line: 623, baseType: !412, size: 8, offset: 1800)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !5308, file: !5303, line: 624, baseType: !412, size: 8, offset: 1808)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !5308, file: !5303, line: 625, baseType: !412, size: 8, offset: 1816)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5308, file: !5303, line: 630, baseType: !5367, size: 384, offset: 1824)
!5367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 384, elements: !5368)
!5368 = !{!5369}
!5369 = !DISubrange(count: 48)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !5308, file: !5303, line: 632, baseType: !315, size: 16, offset: 2208)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !5308, file: !5303, line: 633, baseType: !5372, size: 16, offset: 2224)
!5372 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !5303, line: 237, baseType: !315)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !5308, file: !5303, line: 634, baseType: !1977, size: 64, offset: 2240)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5308, file: !5303, line: 635, baseType: !1676, size: 5568, offset: 2304)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !5308, file: !5303, line: 636, baseType: !1772, size: 64, offset: 7872)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !5308, file: !5303, line: 637, baseType: !1772, size: 64, offset: 7936)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !5308, file: !5303, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !5302, file: !5303, line: 312, baseType: !5307, size: 64, offset: 192)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !5302, file: !5303, line: 314, baseType: !256, size: 64, offset: 256)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !5302, file: !5303, line: 315, baseType: !5124, size: 64, offset: 320)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !5302, file: !5303, line: 316, baseType: !5382, size: 64, offset: 384)
!5382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5383, size: 64)
!5383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !5303, line: 69, size: 832, elements: !5384)
!5384 = !{!5385, !5386, !5387, !5390, !5391}
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5383, file: !5303, line: 70, baseType: !5307, size: 64)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5383, file: !5303, line: 71, baseType: !193, size: 128, offset: 64)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !5383, file: !5303, line: 72, baseType: !5388, size: 64, offset: 192)
!5388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5389, size: 64)
!5389 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !5303, line: 72, flags: DIFlagFwdDecl)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !5383, file: !5303, line: 73, baseType: !412, size: 8, offset: 256)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5383, file: !5303, line: 74, baseType: !1679, size: 512, offset: 320)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !5302, file: !5303, line: 318, baseType: !7, size: 32, offset: 448)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5302, file: !5303, line: 319, baseType: !315, size: 16, offset: 480)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5302, file: !5303, line: 320, baseType: !315, size: 16, offset: 496)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !5302, file: !5303, line: 321, baseType: !315, size: 16, offset: 512)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !5302, file: !5303, line: 322, baseType: !315, size: 16, offset: 528)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5302, file: !5303, line: 323, baseType: !7, size: 32, offset: 544)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !5302, file: !5303, line: 324, baseType: !410, size: 8, offset: 576)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !5302, file: !5303, line: 325, baseType: !410, size: 8, offset: 584)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !5302, file: !5303, line: 330, baseType: !410, size: 8, offset: 592)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !5302, file: !5303, line: 331, baseType: !410, size: 8, offset: 600)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !5302, file: !5303, line: 332, baseType: !410, size: 8, offset: 608)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !5302, file: !5303, line: 333, baseType: !410, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !5302, file: !5303, line: 334, baseType: !410, size: 8, offset: 624)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !5302, file: !5303, line: 335, baseType: !410, size: 8, offset: 632)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !5302, file: !5303, line: 336, baseType: !918, size: 16, offset: 640)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !5302, file: !5303, line: 337, baseType: !5408, size: 64, offset: 704)
!5408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5302, file: !5303, line: 339, baseType: !5410, size: 64, offset: 768)
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5411, size: 64)
!5411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !5303, line: 858, size: 2048, elements: !5412)
!5412 = !{!5413, !5414, !5415, !5427, !5431, !5435, !5439, !5443, !5444, !5448, !5467, !5468, !5469}
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5411, file: !5303, line: 859, baseType: !193, size: 128)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5411, file: !5303, line: 860, baseType: !645, size: 64, offset: 128)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !5411, file: !5303, line: 861, baseType: !5416, size: 64, offset: 192)
!5416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5417, size: 64)
!5417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5418)
!5418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !2061, line: 38, size: 256, elements: !5419)
!5419 = !{!5420, !5421, !5422, !5423, !5424, !5425, !5426}
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5418, file: !2061, line: 39, baseType: !251, size: 32)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5418, file: !2061, line: 39, baseType: !251, size: 32, offset: 32)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !5418, file: !2061, line: 40, baseType: !251, size: 32, offset: 64)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !5418, file: !2061, line: 40, baseType: !251, size: 32, offset: 96)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5418, file: !2061, line: 41, baseType: !251, size: 32, offset: 128)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !5418, file: !2061, line: 41, baseType: !251, size: 32, offset: 160)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5418, file: !2061, line: 42, baseType: !2081, size: 64, offset: 192)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5411, file: !5303, line: 862, baseType: !5428, size: 64, offset: 256)
!5428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5429, size: 64)
!5429 = !DISubroutineType(types: !5430)
!5430 = !{!267, !5301, !5416}
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5411, file: !5303, line: 863, baseType: !5432, size: 64, offset: 320)
!5432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5433, size: 64)
!5433 = !DISubroutineType(types: !5434)
!5434 = !{null, !5301}
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5411, file: !5303, line: 864, baseType: !5436, size: 64, offset: 384)
!5436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5437, size: 64)
!5437 = !DISubroutineType(types: !5438)
!5438 = !{!267, !5301, !2092}
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5411, file: !5303, line: 865, baseType: !5440, size: 64, offset: 448)
!5440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5441, size: 64)
!5441 = !DISubroutineType(types: !5442)
!5442 = !{!267, !5301}
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5411, file: !5303, line: 866, baseType: !5432, size: 64, offset: 512)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !5411, file: !5303, line: 867, baseType: !5445, size: 64, offset: 576)
!5445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5446, size: 64)
!5446 = !DISubroutineType(types: !5447)
!5447 = !{!267, !5301, !267}
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !5411, file: !5303, line: 868, baseType: !5449, size: 64, offset: 640)
!5449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5450, size: 64)
!5450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5451)
!5451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !5303, line: 795, size: 384, elements: !5452)
!5452 = !{!5453, !5459, !5463, !5464, !5465, !5466}
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !5451, file: !5303, line: 797, baseType: !5454, size: 64)
!5454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5455, size: 64)
!5455 = !DISubroutineType(types: !5456)
!5456 = !{!5457, !5301, !5458}
!5457 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !5303, line: 772, baseType: !7)
!5458 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !5303, line: 180, baseType: !7)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !5451, file: !5303, line: 801, baseType: !5460, size: 64, offset: 64)
!5460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5461, size: 64)
!5461 = !DISubroutineType(types: !5462)
!5462 = !{!5457, !5301}
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !5451, file: !5303, line: 804, baseType: !5460, size: 64, offset: 128)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !5451, file: !5303, line: 807, baseType: !5432, size: 64, offset: 192)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !5451, file: !5303, line: 808, baseType: !5432, size: 64, offset: 256)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5451, file: !5303, line: 811, baseType: !5432, size: 64, offset: 320)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5411, file: !5303, line: 869, baseType: !1758, size: 64, offset: 704)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5411, file: !5303, line: 870, baseType: !2049, size: 1152, offset: 768)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !5411, file: !5303, line: 871, baseType: !5470, size: 128, offset: 1920)
!5470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !5303, line: 759, size: 128, elements: !5471)
!5471 = !{!5472, !5473}
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5470, file: !5303, line: 760, baseType: !202)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5470, file: !5303, line: 761, baseType: !193, size: 128)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !5302, file: !5303, line: 340, baseType: !298, size: 64, offset: 832)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !5302, file: !5303, line: 346, baseType: !2296, size: 128, offset: 896)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !5302, file: !5303, line: 348, baseType: !5477, size: 32, offset: 1024)
!5477 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !5303, line: 155, baseType: !267)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !5302, file: !5303, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !5302, file: !5303, line: 352, baseType: !410, size: 8, offset: 1064)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !5302, file: !5303, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !5302, file: !5303, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !5302, file: !5303, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !5302, file: !5303, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !5302, file: !5303, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !5302, file: !5303, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !5302, file: !5303, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !5302, file: !5303, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !5302, file: !5303, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !5302, file: !5303, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !5302, file: !5303, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !5302, file: !5303, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !5302, file: !5303, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !5302, file: !5303, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !5302, file: !5303, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !5302, file: !5303, line: 376, baseType: !7, size: 32, offset: 1120)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !5302, file: !5303, line: 377, baseType: !7, size: 32, offset: 1152)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !5302, file: !5303, line: 380, baseType: !5498, size: 64, offset: 1216)
!5498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5499, size: 64)
!5499 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !5303, line: 303, flags: DIFlagFwdDecl)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !5302, file: !5303, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !5302, file: !5303, line: 383, baseType: !267, size: 32, offset: 1312)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !5302, file: !5303, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !5302, file: !5303, line: 387, baseType: !5458, size: 32, offset: 1376)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5302, file: !5303, line: 388, baseType: !1676, size: 5568, offset: 1408)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !5302, file: !5303, line: 390, baseType: !267, size: 32, offset: 6976)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5302, file: !5303, line: 396, baseType: !7, size: 32, offset: 7008)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !5302, file: !5303, line: 397, baseType: !5508, size: 8704, offset: 7040)
!5508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5319, size: 8704, elements: !5509)
!5509 = !{!5510}
!5510 = !DISubrange(count: 17)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !5302, file: !5303, line: 399, baseType: !690, size: 8, offset: 15744)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !5302, file: !5303, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !5302, file: !5303, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !5302, file: !5303, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !5302, file: !5303, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !5302, file: !5303, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !5302, file: !5303, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !5302, file: !5303, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !5302, file: !5303, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !5302, file: !5303, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !5302, file: !5303, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !5302, file: !5303, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !5302, file: !5303, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !5302, file: !5303, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !5302, file: !5303, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !5302, file: !5303, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !5302, file: !5303, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !5302, file: !5303, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !5302, file: !5303, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !5302, file: !5303, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !5302, file: !5303, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !5302, file: !5303, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !5302, file: !5303, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !5302, file: !5303, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !5302, file: !5303, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !5302, file: !5303, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !5302, file: !5303, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !5302, file: !5303, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !5302, file: !5303, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !5302, file: !5303, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !5302, file: !5303, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !5302, file: !5303, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !5302, file: !5303, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !5302, file: !5303, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !5302, file: !5303, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !5302, file: !5303, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !5302, file: !5303, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !5302, file: !5303, line: 450, baseType: !5549, size: 16, offset: 15792)
!5549 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !5303, line: 206, baseType: !315)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !5302, file: !5303, line: 451, baseType: !263, size: 32, offset: 15808)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !5302, file: !5303, line: 453, baseType: !5552, size: 512, offset: 15840)
!5552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 512, elements: !3247)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !5302, file: !5303, line: 454, baseType: !739, size: 64, offset: 16384)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !5302, file: !5303, line: 455, baseType: !1772, size: 64, offset: 16448)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !5302, file: !5303, line: 456, baseType: !267, size: 32, offset: 16512)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !5302, file: !5303, line: 457, baseType: !5557, size: 1088, offset: 16576)
!5557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1772, size: 1088, elements: !5509)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !5302, file: !5303, line: 458, baseType: !5557, size: 1088, offset: 17664)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !5302, file: !5303, line: 469, baseType: !1758, size: 64, offset: 18752)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !5302, file: !5303, line: 471, baseType: !5561, size: 64, offset: 18816)
!5561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5562, size: 64)
!5562 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !5303, line: 304, flags: DIFlagFwdDecl)
!5563 = !DIDerivedType(tag: DW_TAG_member, scope: !5302, file: !5303, line: 478, baseType: !5564, size: 64, offset: 18880)
!5564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5302, file: !5303, line: 478, size: 64, elements: !5565)
!5565 = !{!5566, !5569}
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !5564, file: !5303, line: 479, baseType: !5567, size: 64)
!5567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5568, size: 64)
!5568 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !5303, line: 305, flags: DIFlagFwdDecl)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !5564, file: !5303, line: 480, baseType: !5301, size: 64)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !5302, file: !5303, line: 482, baseType: !918, size: 16, offset: 18944)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !5302, file: !5303, line: 483, baseType: !410, size: 8, offset: 18960)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !5302, file: !5303, line: 497, baseType: !918, size: 16, offset: 18976)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !5302, file: !5303, line: 498, baseType: !4620, size: 64, offset: 19008)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !5302, file: !5303, line: 499, baseType: !823, size: 64, offset: 19072)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !5302, file: !5303, line: 500, baseType: !671, size: 64, offset: 19136)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !5302, file: !5303, line: 502, baseType: !248, size: 64, offset: 19200)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "msg_len", scope: !186, file: !3, line: 331, baseType: !410, size: 8, offset: 34432)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "srb_array", scope: !186, file: !3, line: 333, baseType: !5579, size: 52416, offset: 34496)
!5579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5235, size: 52416, elements: !5580)
!5580 = !{!5581}
!5581 = !DISubrange(count: 63)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "srb", scope: !186, file: !3, line: 334, baseType: !5235, size: 832, offset: 86912)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom", scope: !186, file: !3, line: 336, baseType: !5584, size: 1024, offset: 87744)
!5584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NvRamType", file: !3, line: 201, size: 1024, elements: !5585)
!5585 = !{!5586, !5588, !5589, !5590, !5591, !5592, !5593, !5601, !5602, !5603, !5604, !5605, !5606, !5607, !5608, !5609, !5611}
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "sub_vendor_id", scope: !5584, file: !3, line: 202, baseType: !5587, size: 16)
!5587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 16, elements: !1223)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "sub_sys_id", scope: !5584, file: !3, line: 203, baseType: !5587, size: 16, offset: 16)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "sub_class", scope: !5584, file: !3, line: 204, baseType: !410, size: 8, offset: 32)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !5584, file: !3, line: 205, baseType: !5587, size: 16, offset: 40)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "device_id", scope: !5584, file: !3, line: 206, baseType: !5587, size: 16, offset: 56)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5584, file: !3, line: 207, baseType: !410, size: 8, offset: 72)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !5584, file: !3, line: 208, baseType: !5594, size: 512, offset: 80)
!5594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5595, size: 512, elements: !3247)
!5595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NVRamTarget", file: !3, line: 194, size: 32, elements: !5596)
!5596 = !{!5597, !5598, !5599, !5600}
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "cfg0", scope: !5595, file: !3, line: 195, baseType: !410, size: 8)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !5595, file: !3, line: 196, baseType: !410, size: 8, offset: 8)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "cfg2", scope: !5595, file: !3, line: 197, baseType: !410, size: 8, offset: 16)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "cfg3", scope: !5595, file: !3, line: 198, baseType: !410, size: 8, offset: 24)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_id", scope: !5584, file: !3, line: 215, baseType: !410, size: 8, offset: 592)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "channel_cfg", scope: !5584, file: !3, line: 216, baseType: !410, size: 8, offset: 600)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "delay_time", scope: !5584, file: !3, line: 217, baseType: !410, size: 8, offset: 608)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "max_tag", scope: !5584, file: !3, line: 218, baseType: !410, size: 8, offset: 616)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "reserved0", scope: !5584, file: !3, line: 219, baseType: !410, size: 8, offset: 624)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "boot_target", scope: !5584, file: !3, line: 220, baseType: !410, size: 8, offset: 632)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "boot_lun", scope: !5584, file: !3, line: 221, baseType: !410, size: 8, offset: 640)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !5584, file: !3, line: 222, baseType: !410, size: 8, offset: 648)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5584, file: !3, line: 223, baseType: !5610, size: 352, offset: 656)
!5610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 352, elements: !3005)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "cksum", scope: !5584, file: !3, line: 224, baseType: !918, size: 16, offset: 1008)
!5612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5613, size: 64)
!5613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5614)
!5614 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !197)
!5615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5614, size: 64)
!5616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5617, size: 64)
!5617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5618)
!5618 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !747)
!5619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!5620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5621, size: 64)
!5621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScsiInqData", file: !5622, line: 223, size: 288, elements: !5623)
!5622 = !DIFile(filename: "drivers/scsi/dc395x.h", directory: "/home/lizy2001/genbc/linux")
!5623 = !{!5624, !5625, !5626, !5627, !5628, !5629, !5630, !5631, !5632, !5634, !5635}
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "DevType", scope: !5621, file: !5622, line: 225, baseType: !410, size: 8)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "RMB_TypeMod", scope: !5621, file: !5622, line: 226, baseType: !410, size: 8, offset: 8)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "Vers", scope: !5621, file: !5622, line: 227, baseType: !410, size: 8, offset: 16)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "RDF", scope: !5621, file: !5622, line: 228, baseType: !410, size: 8, offset: 24)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "AddLen", scope: !5621, file: !5622, line: 229, baseType: !410, size: 8, offset: 32)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "Res1", scope: !5621, file: !5622, line: 230, baseType: !410, size: 8, offset: 40)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "Res2", scope: !5621, file: !5622, line: 231, baseType: !410, size: 8, offset: 48)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "Flags", scope: !5621, file: !5622, line: 232, baseType: !410, size: 8, offset: 56)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "VendorID", scope: !5621, file: !5622, line: 233, baseType: !5633, size: 64, offset: 64)
!5633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 64, elements: !375)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "ProductID", scope: !5621, file: !5622, line: 234, baseType: !5296, size: 128, offset: 128)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "ProductRev", scope: !5621, file: !5622, line: 235, baseType: !5636, size: 32, offset: 256)
!5636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 32, elements: !1183)
!5637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!5638 = !{!5639, !5691, !5696, !5701, !5703, !5708, !5713, !5715, !5720, !5725, !5727, !5732, !5737, !5739, !5744, !5749, !5751, !5756, !5761, !5763, !5766, !5771, !5773, !5778, !5783, !5788, !5790, !0, !5795, !5797, !5802, !5812, !5815, !5818, !5821, !5824, !5826, !5828, !5831, !5834, !5836, !5842, !5844, !5846, !5849, !5851, !5853}
!5639 = !DIGlobalVariableExpression(var: !5640, expr: !DIExpression())
!5640 = distinct !DIGlobalVariable(name: "__param_safe", scope: !2, file: !3, line: 549, type: !5641, isLocal: true, isDefinition: true, align: 64)
!5641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5642)
!5642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !5643, line: 69, size: 320, elements: !5644)
!5643 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!5644 = !{!5645, !5646, !5647, !5663, !5665, !5669, !5670}
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5642, file: !5643, line: 70, baseType: !645, size: 64)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !5642, file: !5643, line: 71, baseType: !182, size: 64, offset: 64)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5642, file: !5643, line: 72, baseType: !5648, size: 64, offset: 128)
!5648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5649, size: 64)
!5649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5650)
!5650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !5643, line: 47, size: 256, elements: !5651)
!5651 = !{!5652, !5653, !5658, !5662}
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5650, file: !5643, line: 49, baseType: !7, size: 32)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !5650, file: !5643, line: 51, baseType: !5654, size: 64, offset: 64)
!5654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5655, size: 64)
!5655 = !DISubroutineType(types: !5656)
!5656 = !{!267, !645, !5657}
!5657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5641, size: 64)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5650, file: !5643, line: 53, baseType: !5659, size: 64, offset: 128)
!5659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5660, size: 64)
!5660 = !DISubroutineType(types: !5661)
!5661 = !{!267, !671, !5657}
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5650, file: !5643, line: 55, baseType: !1820, size: 64, offset: 192)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !5642, file: !5643, line: 73, baseType: !5664, size: 16, offset: 192)
!5664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !918)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !5642, file: !5643, line: 74, baseType: !5666, size: 8, offset: 208)
!5666 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !231, line: 16, baseType: !5667)
!5667 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !233, line: 20, baseType: !5668)
!5668 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5642, file: !5643, line: 75, baseType: !410, size: 8, offset: 216)
!5670 = !DIDerivedType(tag: DW_TAG_member, scope: !5642, file: !5643, line: 76, baseType: !5671, size: 64, offset: 256)
!5671 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5642, file: !5643, line: 76, size: 64, elements: !5672)
!5672 = !{!5673, !5674, !5681}
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !5671, file: !5643, line: 77, baseType: !256, size: 64)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5671, file: !5643, line: 78, baseType: !5675, size: 64)
!5675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5676, size: 64)
!5676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5677)
!5677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !5643, line: 86, size: 128, elements: !5678)
!5678 = !{!5679, !5680}
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !5677, file: !5643, line: 87, baseType: !7, size: 32)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !5677, file: !5643, line: 88, baseType: !671, size: 64, offset: 64)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !5671, file: !5643, line: 79, baseType: !5682, size: 64)
!5682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5683, size: 64)
!5683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5684)
!5684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !5643, line: 92, size: 256, elements: !5685)
!5685 = !{!5686, !5687, !5688, !5689, !5690}
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5684, file: !5643, line: 94, baseType: !7, size: 32)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !5684, file: !5643, line: 95, baseType: !7, size: 32, offset: 32)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5684, file: !5643, line: 96, baseType: !3071, size: 64, offset: 64)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5684, file: !5643, line: 97, baseType: !5648, size: 64, offset: 128)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !5684, file: !5643, line: 98, baseType: !256, size: 64, offset: 192)
!5691 = !DIGlobalVariableExpression(var: !5692, expr: !DIExpression())
!5692 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_safetype296", scope: !2, file: !3, line: 549, type: !5693, isLocal: true, isDefinition: true, align: 8)
!5693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 208, elements: !5694)
!5694 = !{!5695}
!5695 = !DISubrange(count: 26)
!5696 = !DIGlobalVariableExpression(var: !5697, expr: !DIExpression())
!5697 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_safe297", scope: !2, file: !3, line: 550, type: !5698, isLocal: true, isDefinition: true, align: 8)
!5698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 520, elements: !5699)
!5699 = !{!5700}
!5700 = !DISubrange(count: 65)
!5701 = !DIGlobalVariableExpression(var: !5702, expr: !DIExpression())
!5702 = distinct !DIGlobalVariable(name: "__param_adapter_id", scope: !2, file: !3, line: 553, type: !5641, isLocal: true, isDefinition: true, align: 64)
!5703 = !DIGlobalVariableExpression(var: !5704, expr: !DIExpression())
!5704 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_adapter_idtype298", scope: !2, file: !3, line: 553, type: !5705, isLocal: true, isDefinition: true, align: 8)
!5705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 248, elements: !5706)
!5706 = !{!5707}
!5707 = !DISubrange(count: 31)
!5708 = !DIGlobalVariableExpression(var: !5709, expr: !DIExpression())
!5709 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_adapter_id299", scope: !2, file: !3, line: 554, type: !5710, isLocal: true, isDefinition: true, align: 8)
!5710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 456, elements: !5711)
!5711 = !{!5712}
!5712 = !DISubrange(count: 57)
!5713 = !DIGlobalVariableExpression(var: !5714, expr: !DIExpression())
!5714 = distinct !DIGlobalVariable(name: "__param_max_speed", scope: !2, file: !3, line: 556, type: !5641, isLocal: true, isDefinition: true, align: 64)
!5715 = !DIGlobalVariableExpression(var: !5716, expr: !DIExpression())
!5716 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_speedtype300", scope: !2, file: !3, line: 556, type: !5717, isLocal: true, isDefinition: true, align: 8)
!5717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 240, elements: !5718)
!5718 = !{!5719}
!5719 = !DISubrange(count: 30)
!5720 = !DIGlobalVariableExpression(var: !5721, expr: !DIExpression())
!5721 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_speed301", scope: !2, file: !3, line: 557, type: !5722, isLocal: true, isDefinition: true, align: 8)
!5722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 936, elements: !5723)
!5723 = !{!5724}
!5724 = !DISubrange(count: 117)
!5725 = !DIGlobalVariableExpression(var: !5726, expr: !DIExpression())
!5726 = distinct !DIGlobalVariable(name: "__param_dev_mode", scope: !2, file: !3, line: 559, type: !5641, isLocal: true, isDefinition: true, align: 64)
!5727 = !DIGlobalVariableExpression(var: !5728, expr: !DIExpression())
!5728 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_dev_modetype302", scope: !2, file: !3, line: 559, type: !5729, isLocal: true, isDefinition: true, align: 8)
!5729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 232, elements: !5730)
!5730 = !{!5731}
!5731 = !DISubrange(count: 29)
!5732 = !DIGlobalVariableExpression(var: !5733, expr: !DIExpression())
!5733 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_dev_mode303", scope: !2, file: !3, line: 560, type: !5734, isLocal: true, isDefinition: true, align: 8)
!5734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 272, elements: !5735)
!5735 = !{!5736}
!5736 = !DISubrange(count: 34)
!5737 = !DIGlobalVariableExpression(var: !5738, expr: !DIExpression())
!5738 = distinct !DIGlobalVariable(name: "__param_adapter_mode", scope: !2, file: !3, line: 562, type: !5641, isLocal: true, isDefinition: true, align: 64)
!5739 = !DIGlobalVariableExpression(var: !5740, expr: !DIExpression())
!5740 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_adapter_modetype304", scope: !2, file: !3, line: 562, type: !5741, isLocal: true, isDefinition: true, align: 8)
!5741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 264, elements: !5742)
!5742 = !{!5743}
!5743 = !DISubrange(count: 33)
!5744 = !DIGlobalVariableExpression(var: !5745, expr: !DIExpression())
!5745 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_adapter_mode305", scope: !2, file: !3, line: 563, type: !5746, isLocal: true, isDefinition: true, align: 8)
!5746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 312, elements: !5747)
!5747 = !{!5748}
!5748 = !DISubrange(count: 39)
!5749 = !DIGlobalVariableExpression(var: !5750, expr: !DIExpression())
!5750 = distinct !DIGlobalVariable(name: "__param_tags", scope: !2, file: !3, line: 565, type: !5641, isLocal: true, isDefinition: true, align: 64)
!5751 = !DIGlobalVariableExpression(var: !5752, expr: !DIExpression())
!5752 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_tagstype306", scope: !2, file: !3, line: 565, type: !5753, isLocal: true, isDefinition: true, align: 8)
!5753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 200, elements: !5754)
!5754 = !{!5755}
!5755 = !DISubrange(count: 25)
!5756 = !DIGlobalVariableExpression(var: !5757, expr: !DIExpression())
!5757 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_tags307", scope: !2, file: !3, line: 566, type: !5758, isLocal: true, isDefinition: true, align: 8)
!5758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 448, elements: !5759)
!5759 = !{!5760}
!5760 = !DISubrange(count: 56)
!5761 = !DIGlobalVariableExpression(var: !5762, expr: !DIExpression())
!5762 = distinct !DIGlobalVariable(name: "__param_reset_delay", scope: !2, file: !3, line: 568, type: !5641, isLocal: true, isDefinition: true, align: 64)
!5763 = !DIGlobalVariableExpression(var: !5764, expr: !DIExpression())
!5764 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_reset_delaytype308", scope: !2, file: !3, line: 568, type: !5765, isLocal: true, isDefinition: true, align: 8)
!5765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 256, elements: !610)
!5766 = !DIGlobalVariableExpression(var: !5767, expr: !DIExpression())
!5767 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_reset_delay309", scope: !2, file: !3, line: 569, type: !5768, isLocal: true, isDefinition: true, align: 8)
!5768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 528, elements: !5769)
!5769 = !{!5770}
!5770 = !DISubrange(count: 66)
!5771 = !DIGlobalVariableExpression(var: !5772, expr: !DIExpression())
!5772 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_dc395x_driver_init357", scope: !2, file: !3, line: 4724, type: !256, isLocal: true, isDefinition: true)
!5773 = !DIGlobalVariableExpression(var: !5774, expr: !DIExpression())
!5774 = distinct !DIGlobalVariable(name: "__exitcall_dc395x_driver_exit", scope: !2, file: !3, line: 4724, type: !5775, isLocal: true, isDefinition: true)
!5775 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !5776, line: 117, baseType: !5777)
!5776 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!5777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4414, size: 64)
!5778 = !DIGlobalVariableExpression(var: !5779, expr: !DIExpression())
!5779 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author358", scope: !2, file: !3, line: 4726, type: !5780, isLocal: true, isDefinition: true, align: 8)
!5780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 424, elements: !5781)
!5781 = !{!5782}
!5782 = !DISubrange(count: 53)
!5783 = !DIGlobalVariableExpression(var: !5784, expr: !DIExpression())
!5784 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description359", scope: !2, file: !3, line: 4727, type: !5785, isLocal: true, isDefinition: true, align: 8)
!5785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 888, elements: !5786)
!5786 = !{!5787}
!5787 = !DISubrange(count: 111)
!5788 = !DIGlobalVariableExpression(var: !5789, expr: !DIExpression())
!5789 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file360", scope: !2, file: !3, line: 4728, type: !5765, isLocal: true, isDefinition: true, align: 8)
!5790 = !DIGlobalVariableExpression(var: !5791, expr: !DIExpression())
!5791 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license361", scope: !2, file: !3, line: 4728, type: !5792, isLocal: true, isDefinition: true, align: 8)
!5792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 152, elements: !5793)
!5793 = !{!5794}
!5794 = !DISubrange(count: 19)
!5795 = !DIGlobalVariableExpression(var: !5796, expr: !DIExpression())
!5796 = distinct !DIGlobalVariable(name: "use_safe_settings", scope: !2, file: !3, line: 548, type: !690, isLocal: true, isDefinition: true)
!5797 = !DIGlobalVariableExpression(var: !5798, expr: !DIExpression())
!5798 = distinct !DIGlobalVariable(name: "__param_str_adapter_id", scope: !2, file: !3, line: 553, type: !5799, isLocal: true, isDefinition: true)
!5799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 144, elements: !5800)
!5800 = !{!5801}
!5801 = !DISubrange(count: 18)
!5802 = !DIGlobalVariableExpression(var: !5803, expr: !DIExpression())
!5803 = distinct !DIGlobalVariable(name: "cfg_data", scope: !2, file: !3, line: 493, type: !5804, isLocal: true, isDefinition: true)
!5804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5805, size: 960, elements: !1292)
!5805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterData", file: !3, line: 486, size: 160, elements: !5806)
!5806 = !{!5807, !5808, !5809, !5810, !5811}
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5805, file: !3, line: 487, baseType: !267, size: 32)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !5805, file: !3, line: 488, baseType: !267, size: 32, offset: 32)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5805, file: !3, line: 489, baseType: !267, size: 32, offset: 64)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !5805, file: !3, line: 490, baseType: !267, size: 32, offset: 96)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "safe", scope: !5805, file: !3, line: 491, baseType: !267, size: 32, offset: 128)
!5812 = !DIGlobalVariableExpression(var: !5813, expr: !DIExpression())
!5813 = distinct !DIGlobalVariable(name: "__param_str_max_speed", scope: !2, file: !3, line: 556, type: !5814, isLocal: true, isDefinition: true)
!5814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 136, elements: !5509)
!5815 = !DIGlobalVariableExpression(var: !5816, expr: !DIExpression())
!5816 = distinct !DIGlobalVariable(name: "__param_str_dev_mode", scope: !2, file: !3, line: 559, type: !5817, isLocal: true, isDefinition: true)
!5817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 128, elements: !3247)
!5818 = !DIGlobalVariableExpression(var: !5819, expr: !DIExpression())
!5819 = distinct !DIGlobalVariable(name: "__param_str_adapter_mode", scope: !2, file: !3, line: 562, type: !5820, isLocal: true, isDefinition: true)
!5820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 160, elements: !4694)
!5821 = !DIGlobalVariableExpression(var: !5822, expr: !DIExpression())
!5822 = distinct !DIGlobalVariable(name: "__param_str_tags", scope: !2, file: !3, line: 565, type: !5823, isLocal: true, isDefinition: true)
!5823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 96, elements: !4727)
!5824 = !DIGlobalVariableExpression(var: !5825, expr: !DIExpression())
!5825 = distinct !DIGlobalVariable(name: "__param_str_reset_delay", scope: !2, file: !3, line: 568, type: !5792, isLocal: true, isDefinition: true)
!5826 = !DIGlobalVariableExpression(var: !5827, expr: !DIExpression())
!5827 = distinct !DIGlobalVariable(name: "dc395x_driver", scope: !2, file: !3, line: 4718, type: !5411, isLocal: true, isDefinition: true)
!5828 = !DIGlobalVariableExpression(var: !5829, expr: !DIExpression())
!5829 = distinct !DIGlobalVariable(name: "dc395x_pci_table", scope: !2, file: !3, line: 4706, type: !5830, isLocal: true, isDefinition: true)
!5830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5418, size: 512, elements: !1223)
!5831 = !DIGlobalVariableExpression(var: !5832, expr: !DIExpression())
!5832 = distinct !DIGlobalVariable(name: "banner_done", scope: !5833, file: !3, line: 4604, type: !267, isLocal: true, isDefinition: true)
!5833 = distinct !DISubprogram(name: "banner_display", scope: !3, file: !3, line: 4602, type: !4414, scopeLine: 4603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!5834 = !DIGlobalVariableExpression(var: !5835, expr: !DIExpression())
!5835 = distinct !DIGlobalVariable(name: "dc395x_driver_template", scope: !2, file: !3, line: 4580, type: !4805, isLocal: true, isDefinition: true)
!5836 = !DIGlobalVariableExpression(var: !5837, expr: !DIExpression())
!5837 = distinct !DIGlobalVariable(name: "__warned", scope: !5838, file: !5839, line: 275, type: !690, isLocal: true, isDefinition: true)
!5838 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !5839, file: !5839, line: 271, type: !5840, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!5839 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!5840 = !DISubroutineType(types: !5841)
!5841 = !{!3859, !1977, !256, !823, !146, !248}
!5842 = !DIGlobalVariableExpression(var: !5843, expr: !DIExpression())
!5843 = distinct !DIGlobalVariable(name: "clock_period", scope: !2, file: !3, line: 449, type: !5633, isLocal: true, isDefinition: true)
!5844 = !DIGlobalVariableExpression(var: !5845, expr: !DIExpression())
!5845 = distinct !DIGlobalVariable(name: "current_sync_offset", scope: !2, file: !3, line: 403, type: !918, isLocal: true, isDefinition: true)
!5846 = !DIGlobalVariableExpression(var: !5847, expr: !DIExpression())
!5847 = distinct !DIGlobalVariable(name: "dc395x_scsi_phase0", scope: !2, file: !3, line: 405, type: !5848, isLocal: true, isDefinition: true)
!5848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 512, elements: !375)
!5849 = !DIGlobalVariableExpression(var: !5850, expr: !DIExpression())
!5850 = distinct !DIGlobalVariable(name: "dc395x_scsi_phase1", scope: !2, file: !3, line: 416, type: !5848, isLocal: true, isDefinition: true)
!5851 = !DIGlobalVariableExpression(var: !5852, expr: !DIExpression())
!5852 = distinct !DIGlobalVariable(name: "eeprom_index_to_delay_map", scope: !2, file: !3, line: 622, type: !4529, isLocal: true, isDefinition: true)
!5853 = !DIGlobalVariableExpression(var: !5854, expr: !DIExpression())
!5854 = distinct !DIGlobalVariable(name: "clock_speed", scope: !2, file: !3, line: 450, type: !5855, isLocal: true, isDefinition: true)
!5855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 128, elements: !375)
!5856 = !{!"rsp"}
!5857 = !{i32 7, !"Dwarf Version", i32 4}
!5858 = !{i32 2, !"Debug Info Version", i32 3}
!5859 = !{i32 1, !"wchar_size", i32 2}
!5860 = !{i32 1, !"Code Model", i32 2}
!5861 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!5862 = distinct !DISubprogram(name: "dc395x_driver_init", scope: !3, file: !3, line: 4724, type: !5863, scopeLine: 4724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!5863 = !DISubroutineType(types: !5864)
!5864 = !{!267}
!5865 = !DILocation(line: 4724, column: 1, scope: !5862)
!5866 = distinct !DISubprogram(name: "dc395x_driver_exit", scope: !3, file: !3, line: 4724, type: !4414, scopeLine: 4724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!5867 = !DILocation(line: 4724, column: 1, scope: !5866)
!5868 = distinct !DISubprogram(name: "dc395x_init_one", scope: !3, file: !3, line: 4626, type: !5429, scopeLine: 4627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!5869 = !DILocalVariable(name: "dev", arg: 1, scope: !5868, file: !3, line: 4626, type: !5301)
!5870 = !DILocation(line: 4626, column: 44, scope: !5868)
!5871 = !DILocalVariable(name: "id", arg: 2, scope: !5868, file: !3, line: 4626, type: !5416)
!5872 = !DILocation(line: 4626, column: 77, scope: !5868)
!5873 = !DILocalVariable(name: "scsi_host", scope: !5868, file: !3, line: 4628, type: !189)
!5874 = !DILocation(line: 4628, column: 20, scope: !5868)
!5875 = !DILocalVariable(name: "acb", scope: !5868, file: !3, line: 4629, type: !185)
!5876 = !DILocation(line: 4629, column: 24, scope: !5868)
!5877 = !DILocalVariable(name: "io_port_base", scope: !5868, file: !3, line: 4630, type: !248)
!5878 = !DILocation(line: 4630, column: 16, scope: !5868)
!5879 = !DILocalVariable(name: "io_port_len", scope: !5868, file: !3, line: 4631, type: !7)
!5880 = !DILocation(line: 4631, column: 15, scope: !5868)
!5881 = !DILocalVariable(name: "irq", scope: !5868, file: !3, line: 4632, type: !7)
!5882 = !DILocation(line: 4632, column: 15, scope: !5868)
!5883 = !DILocation(line: 4634, column: 2, scope: !5868)
!5884 = !DILocation(line: 4634, column: 2, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 4634, column: 2)
!5886 = !DILocation(line: 4635, column: 2, scope: !5868)
!5887 = !DILocation(line: 4637, column: 24, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 4637, column: 6)
!5889 = !DILocation(line: 4637, column: 6, scope: !5888)
!5890 = !DILocation(line: 4637, column: 6, scope: !5868)
!5891 = !DILocation(line: 4639, column: 3, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 4638, column: 2)
!5893 = !DILocation(line: 4640, column: 3, scope: !5892)
!5894 = !DILocation(line: 4642, column: 17, scope: !5868)
!5895 = !DILocation(line: 4642, column: 44, scope: !5868)
!5896 = !DILocation(line: 4642, column: 15, scope: !5868)
!5897 = !DILocation(line: 4643, column: 16, scope: !5868)
!5898 = !DILocation(line: 4643, column: 14, scope: !5868)
!5899 = !DILocation(line: 4644, column: 8, scope: !5868)
!5900 = !DILocation(line: 4644, column: 13, scope: !5868)
!5901 = !DILocation(line: 4644, column: 6, scope: !5868)
!5902 = !DILocation(line: 4645, column: 2, scope: !5868)
!5903 = !DILocation(line: 4645, column: 2, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 4645, column: 2)
!5905 = !DILocation(line: 4648, column: 14, scope: !5868)
!5906 = !DILocation(line: 4648, column: 12, scope: !5868)
!5907 = !DILocation(line: 4650, column: 7, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 4650, column: 6)
!5909 = !DILocation(line: 4650, column: 6, scope: !5868)
!5910 = !DILocation(line: 4651, column: 3, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 4650, column: 18)
!5912 = !DILocation(line: 4652, column: 3, scope: !5911)
!5913 = !DILocation(line: 4654, column: 32, scope: !5868)
!5914 = !DILocation(line: 4654, column: 43, scope: !5868)
!5915 = !DILocation(line: 4654, column: 9, scope: !5868)
!5916 = !DILocation(line: 4654, column: 7, scope: !5868)
!5917 = !DILocation(line: 4655, column: 20, scope: !5868)
!5918 = !DILocation(line: 4655, column: 3, scope: !5868)
!5919 = !DILocation(line: 4655, column: 8, scope: !5868)
!5920 = !DILocation(line: 4655, column: 18, scope: !5868)
!5921 = !DILocation(line: 4656, column: 14, scope: !5868)
!5922 = !DILocation(line: 4656, column: 3, scope: !5868)
!5923 = !DILocation(line: 4656, column: 8, scope: !5868)
!5924 = !DILocation(line: 4656, column: 12, scope: !5868)
!5925 = !DILocation(line: 4659, column: 20, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 4659, column: 7)
!5927 = !DILocation(line: 4659, column: 25, scope: !5926)
!5928 = !DILocation(line: 4659, column: 39, scope: !5926)
!5929 = !DILocation(line: 4659, column: 52, scope: !5926)
!5930 = !DILocation(line: 4659, column: 7, scope: !5926)
!5931 = !DILocation(line: 4659, column: 7, scope: !5868)
!5932 = !DILocation(line: 4660, column: 3, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 4659, column: 58)
!5934 = !DILocation(line: 4661, column: 3, scope: !5933)
!5935 = !DILocation(line: 4664, column: 17, scope: !5868)
!5936 = !DILocation(line: 4664, column: 2, scope: !5868)
!5937 = !DILocation(line: 4667, column: 20, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 4667, column: 6)
!5939 = !DILocation(line: 4667, column: 32, scope: !5938)
!5940 = !DILocation(line: 4667, column: 37, scope: !5938)
!5941 = !DILocation(line: 4667, column: 6, scope: !5938)
!5942 = !DILocation(line: 4667, column: 6, scope: !5868)
!5943 = !DILocation(line: 4668, column: 3, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5938, file: !3, line: 4667, column: 43)
!5945 = !DILocation(line: 4669, column: 3, scope: !5944)
!5946 = !DILocation(line: 4671, column: 18, scope: !5868)
!5947 = !DILocation(line: 4671, column: 23, scope: !5868)
!5948 = !DILocation(line: 4671, column: 2, scope: !5868)
!5949 = !DILocation(line: 4672, column: 17, scope: !5868)
!5950 = !DILocation(line: 4672, column: 2, scope: !5868)
!5951 = !DILocation(line: 4674, column: 2, scope: !5868)
!5952 = !DILabel(scope: !5868, name: "fail", file: !3, line: 4676)
!5953 = !DILocation(line: 4676, column: 1, scope: !5868)
!5954 = !DILocation(line: 4677, column: 6, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 4677, column: 6)
!5956 = !DILocation(line: 4677, column: 10, scope: !5955)
!5957 = !DILocation(line: 4677, column: 6, scope: !5868)
!5958 = !DILocation(line: 4678, column: 18, scope: !5955)
!5959 = !DILocation(line: 4678, column: 3, scope: !5955)
!5960 = !DILocation(line: 4679, column: 6, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 4679, column: 6)
!5962 = !DILocation(line: 4679, column: 16, scope: !5961)
!5963 = !DILocation(line: 4679, column: 6, scope: !5868)
!5964 = !DILocation(line: 4680, column: 17, scope: !5961)
!5965 = !DILocation(line: 4680, column: 3, scope: !5961)
!5966 = !DILocation(line: 4681, column: 21, scope: !5868)
!5967 = !DILocation(line: 4681, column: 2, scope: !5868)
!5968 = !DILocation(line: 4682, column: 2, scope: !5868)
!5969 = !DILocation(line: 4683, column: 1, scope: !5868)
!5970 = distinct !DISubprogram(name: "dc395x_remove_one", scope: !3, file: !3, line: 4692, type: !5433, scopeLine: 4693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!5971 = !DILocalVariable(name: "dev", arg: 1, scope: !5970, file: !3, line: 4692, type: !5301)
!5972 = !DILocation(line: 4692, column: 47, scope: !5970)
!5973 = !DILocalVariable(name: "scsi_host", scope: !5970, file: !3, line: 4694, type: !189)
!5974 = !DILocation(line: 4694, column: 20, scope: !5970)
!5975 = !DILocation(line: 4694, column: 48, scope: !5970)
!5976 = !DILocation(line: 4694, column: 32, scope: !5970)
!5977 = !DILocalVariable(name: "acb", scope: !5970, file: !3, line: 4695, type: !185)
!5978 = !DILocation(line: 4695, column: 24, scope: !5970)
!5979 = !DILocation(line: 4695, column: 55, scope: !5970)
!5980 = !DILocation(line: 4695, column: 66, scope: !5970)
!5981 = !DILocation(line: 4695, column: 54, scope: !5970)
!5982 = !DILocation(line: 4695, column: 30, scope: !5970)
!5983 = !DILocation(line: 4697, column: 2, scope: !5970)
!5984 = !DILocation(line: 4697, column: 2, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 4697, column: 2)
!5986 = !DILocation(line: 4699, column: 19, scope: !5970)
!5987 = !DILocation(line: 4699, column: 2, scope: !5970)
!5988 = !DILocation(line: 4700, column: 17, scope: !5970)
!5989 = !DILocation(line: 4700, column: 2, scope: !5970)
!5990 = !DILocation(line: 4701, column: 21, scope: !5970)
!5991 = !DILocation(line: 4701, column: 2, scope: !5970)
!5992 = !DILocation(line: 4702, column: 16, scope: !5970)
!5993 = !DILocation(line: 4702, column: 2, scope: !5970)
!5994 = !DILocation(line: 4703, column: 1, scope: !5970)
!5995 = !DILocation(line: 4605, column: 7, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5833, file: !3, line: 4605, column: 6)
!5997 = !DILocation(line: 4605, column: 6, scope: !5833)
!5998 = !DILocation(line: 4607, column: 3, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 4606, column: 2)
!6000 = !DILocation(line: 4608, column: 15, scope: !5999)
!6001 = !DILocation(line: 4609, column: 2, scope: !5999)
!6002 = !DILocation(line: 4610, column: 1, scope: !5833)
!6003 = distinct !DISubprogram(name: "adapter_init", scope: !3, file: !3, line: 4362, type: !6004, scopeLine: 4364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{!267, !185, !248, !250, !7}
!6006 = !DILocalVariable(name: "acb", arg: 1, scope: !6003, file: !3, line: 4362, type: !185)
!6007 = !DILocation(line: 4362, column: 47, scope: !6003)
!6008 = !DILocalVariable(name: "io_port", arg: 2, scope: !6003, file: !3, line: 4362, type: !248)
!6009 = !DILocation(line: 4362, column: 66, scope: !6003)
!6010 = !DILocalVariable(name: "io_port_len", arg: 3, scope: !6003, file: !3, line: 4363, type: !250)
!6011 = !DILocation(line: 4363, column: 8, scope: !6003)
!6012 = !DILocalVariable(name: "irq", arg: 4, scope: !6003, file: !3, line: 4363, type: !7)
!6013 = !DILocation(line: 4363, column: 34, scope: !6003)
!6014 = !DILocation(line: 4365, column: 7, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 4365, column: 6)
!6016 = !DILocation(line: 4365, column: 6, scope: !6003)
!6017 = !DILocation(line: 4366, column: 3, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 4365, column: 58)
!6019 = !DILocation(line: 4367, column: 3, scope: !6018)
!6020 = !DILocation(line: 4370, column: 22, scope: !6003)
!6021 = !DILocation(line: 4370, column: 2, scope: !6003)
!6022 = !DILocation(line: 4370, column: 7, scope: !6003)
!6023 = !DILocation(line: 4370, column: 20, scope: !6003)
!6024 = !DILocation(line: 4371, column: 21, scope: !6003)
!6025 = !DILocation(line: 4371, column: 2, scope: !6003)
!6026 = !DILocation(line: 4371, column: 7, scope: !6003)
!6027 = !DILocation(line: 4371, column: 19, scope: !6003)
!6028 = !DILocation(line: 4373, column: 18, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 4373, column: 6)
!6030 = !DILocation(line: 4373, column: 67, scope: !6029)
!6031 = !DILocation(line: 4373, column: 6, scope: !6029)
!6032 = !DILocation(line: 4373, column: 6, scope: !6003)
!6033 = !DILocation(line: 4375, column: 3, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6029, file: !3, line: 4373, column: 73)
!6035 = !DILocation(line: 4376, column: 3, scope: !6034)
!6036 = !DILocation(line: 4379, column: 19, scope: !6003)
!6037 = !DILocation(line: 4379, column: 2, scope: !6003)
!6038 = !DILocation(line: 4379, column: 7, scope: !6003)
!6039 = !DILocation(line: 4379, column: 17, scope: !6003)
!6040 = !DILocation(line: 4382, column: 16, scope: !6003)
!6041 = !DILocation(line: 4382, column: 21, scope: !6003)
!6042 = !DILocation(line: 4382, column: 29, scope: !6003)
!6043 = !DILocation(line: 4382, column: 2, scope: !6003)
!6044 = !DILocation(line: 4383, column: 26, scope: !6003)
!6045 = !DILocation(line: 4383, column: 31, scope: !6003)
!6046 = !DILocation(line: 4383, column: 3, scope: !6003)
!6047 = !DILocation(line: 4386, column: 22, scope: !6003)
!6048 = !DILocation(line: 4386, column: 2, scope: !6003)
!6049 = !DILocation(line: 4389, column: 24, scope: !6003)
!6050 = !DILocation(line: 4389, column: 3, scope: !6003)
!6051 = !DILocation(line: 4391, column: 30, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 4391, column: 6)
!6053 = !DILocation(line: 4391, column: 6, scope: !6052)
!6054 = !DILocation(line: 4391, column: 6, scope: !6003)
!6055 = !DILocation(line: 4392, column: 3, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 4391, column: 36)
!6057 = !DILocation(line: 4393, column: 3, scope: !6056)
!6058 = !DILocation(line: 4395, column: 25, scope: !6003)
!6059 = !DILocation(line: 4395, column: 30, scope: !6003)
!6060 = !DILocation(line: 4395, column: 2, scope: !6003)
!6061 = !DILocation(line: 4396, column: 20, scope: !6003)
!6062 = !DILocation(line: 4396, column: 2, scope: !6003)
!6063 = !DILocation(line: 4397, column: 19, scope: !6003)
!6064 = !DILocation(line: 4397, column: 2, scope: !6003)
!6065 = !DILocation(line: 4399, column: 2, scope: !6003)
!6066 = !DILocation(line: 4399, column: 2, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 4399, column: 2)
!6068 = !DILocation(line: 4404, column: 2, scope: !6003)
!6069 = !DILabel(scope: !6003, name: "failed", file: !3, line: 4406)
!6070 = !DILocation(line: 4406, column: 1, scope: !6003)
!6071 = !DILocation(line: 4407, column: 6, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 4407, column: 6)
!6073 = !DILocation(line: 4407, column: 11, scope: !6072)
!6074 = !DILocation(line: 4407, column: 6, scope: !6003)
!6075 = !DILocation(line: 4408, column: 12, scope: !6072)
!6076 = !DILocation(line: 4408, column: 17, scope: !6072)
!6077 = !DILocation(line: 4408, column: 28, scope: !6072)
!6078 = !DILocation(line: 4408, column: 3, scope: !6072)
!6079 = !DILocation(line: 4409, column: 6, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 4409, column: 6)
!6081 = !DILocation(line: 4409, column: 11, scope: !6080)
!6082 = !DILocation(line: 4409, column: 6, scope: !6003)
!6083 = !DILocation(line: 4410, column: 3, scope: !6080)
!6084 = !DILocation(line: 4411, column: 25, scope: !6003)
!6085 = !DILocation(line: 4411, column: 2, scope: !6003)
!6086 = !DILocation(line: 4413, column: 2, scope: !6003)
!6087 = !DILocation(line: 4414, column: 1, scope: !6003)
!6088 = distinct !DISubprogram(name: "scsi_add_host", scope: !154, file: !154, line: 753, type: !6089, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6089 = !DISubroutineType(types: !6090)
!6090 = !{!267, !189, !1977}
!6091 = !DILocalVariable(name: "host", arg: 1, scope: !6088, file: !154, line: 753, type: !189)
!6092 = !DILocation(line: 753, column: 64, scope: !6088)
!6093 = !DILocalVariable(name: "dev", arg: 2, scope: !6088, file: !154, line: 754, type: !1977)
!6094 = !DILocation(line: 754, column: 26, scope: !6088)
!6095 = !DILocation(line: 756, column: 32, scope: !6088)
!6096 = !DILocation(line: 756, column: 38, scope: !6088)
!6097 = !DILocation(line: 756, column: 43, scope: !6088)
!6098 = !DILocation(line: 756, column: 9, scope: !6088)
!6099 = !DILocation(line: 756, column: 2, scope: !6088)
!6100 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !5303, file: !5303, line: 1870, type: !6101, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6101 = !DISubroutineType(types: !6102)
!6102 = !{null, !5301, !256}
!6103 = !DILocalVariable(name: "pdev", arg: 1, scope: !6100, file: !5303, line: 1870, type: !5301)
!6104 = !DILocation(line: 1870, column: 52, scope: !6100)
!6105 = !DILocalVariable(name: "data", arg: 2, scope: !6100, file: !5303, line: 1870, type: !256)
!6106 = !DILocation(line: 1870, column: 64, scope: !6100)
!6107 = !DILocation(line: 1872, column: 19, scope: !6100)
!6108 = !DILocation(line: 1872, column: 25, scope: !6100)
!6109 = !DILocation(line: 1872, column: 30, scope: !6100)
!6110 = !DILocation(line: 1872, column: 2, scope: !6100)
!6111 = !DILocation(line: 1873, column: 1, scope: !6100)
!6112 = distinct !DISubprogram(name: "adapter_uninit", scope: !3, file: !3, line: 4447, type: !6113, scopeLine: 4448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6113 = !DISubroutineType(types: !6114)
!6114 = !{null, !185}
!6115 = !DILocalVariable(name: "lock", arg: 1, scope: !6116, file: !6117, line: 407, type: !218)
!6116 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !6117, file: !6117, line: 407, type: !6118, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6117 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!6118 = !DISubroutineType(types: !6119)
!6119 = !{null, !218, !248}
!6120 = !DILocation(line: 407, column: 64, scope: !6116, inlinedAt: !6121)
!6121 = distinct !DILocation(line: 4460, column: 2, scope: !6112)
!6122 = !DILocalVariable(name: "flags", arg: 2, scope: !6116, file: !6117, line: 407, type: !248)
!6123 = !DILocation(line: 407, column: 84, scope: !6116, inlinedAt: !6121)
!6124 = !DILocalVariable(name: "lock", arg: 1, scope: !6125, file: !6117, line: 327, type: !218)
!6125 = distinct !DISubprogram(name: "spinlock_check", scope: !6117, file: !6117, line: 327, type: !6126, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6126 = !DISubroutineType(types: !6127)
!6127 = !{!6128, !218}
!6128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!6129 = !DILocation(line: 327, column: 67, scope: !6125, inlinedAt: !6130)
!6130 = distinct !DILocation(line: 4450, column: 2, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 4450, column: 2)
!6132 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 4450, column: 2)
!6133 = distinct !DILexicalBlock(scope: !6134, file: !3, line: 4450, column: 2)
!6134 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 4450, column: 2)
!6135 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 4450, column: 2)
!6136 = !DILocalVariable(name: "acb", arg: 1, scope: !6112, file: !3, line: 4447, type: !185)
!6137 = !DILocation(line: 4447, column: 50, scope: !6112)
!6138 = !DILocalVariable(name: "flags", scope: !6112, file: !3, line: 4449, type: !248)
!6139 = !DILocation(line: 4449, column: 16, scope: !6112)
!6140 = !DILocation(line: 4450, column: 2, scope: !6112)
!6141 = !DILocation(line: 4450, column: 2, scope: !6135)
!6142 = !DILocalVariable(name: "__dummy", scope: !6143, file: !3, line: 4450, type: !248)
!6143 = distinct !DILexicalBlock(scope: !6134, file: !3, line: 4450, column: 2)
!6144 = !DILocation(line: 4450, column: 2, scope: !6143)
!6145 = !DILocalVariable(name: "__dummy2", scope: !6143, file: !3, line: 4450, type: !248)
!6146 = !DILocation(line: 4450, column: 2, scope: !6134)
!6147 = !DILocation(line: 4450, column: 2, scope: !6133)
!6148 = !DILocation(line: 4450, column: 2, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 4450, column: 2)
!6150 = !DILocalVariable(name: "__dummy", scope: !6151, file: !3, line: 4450, type: !248)
!6151 = distinct !DILexicalBlock(scope: !6152, file: !3, line: 4450, column: 2)
!6152 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 4450, column: 2)
!6153 = !DILocation(line: 4450, column: 2, scope: !6151)
!6154 = !DILocalVariable(name: "__dummy2", scope: !6151, file: !3, line: 4450, type: !248)
!6155 = !DILocation(line: 4450, column: 2, scope: !6152)
!6156 = !DILocation(line: 4450, column: 2, scope: !6132)
!6157 = !{i32 -2140783710}
!6158 = !DILocation(line: 4450, column: 2, scope: !6131)
!6159 = !DILocation(line: 329, column: 10, scope: !6125, inlinedAt: !6130)
!6160 = !DILocation(line: 329, column: 16, scope: !6125, inlinedAt: !6130)
!6161 = !DILocation(line: 4453, column: 21, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 4453, column: 6)
!6163 = !DILocation(line: 4453, column: 26, scope: !6162)
!6164 = !DILocation(line: 4453, column: 6, scope: !6162)
!6165 = !DILocation(line: 4453, column: 6, scope: !6112)
!6166 = !DILocation(line: 4454, column: 14, scope: !6162)
!6167 = !DILocation(line: 4454, column: 19, scope: !6162)
!6168 = !DILocation(line: 4454, column: 3, scope: !6162)
!6169 = !DILocation(line: 4455, column: 21, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 4455, column: 6)
!6171 = !DILocation(line: 4455, column: 26, scope: !6170)
!6172 = !DILocation(line: 4455, column: 6, scope: !6170)
!6173 = !DILocation(line: 4455, column: 6, scope: !6112)
!6174 = !DILocation(line: 4456, column: 14, scope: !6170)
!6175 = !DILocation(line: 4456, column: 19, scope: !6170)
!6176 = !DILocation(line: 4456, column: 3, scope: !6170)
!6177 = !DILocation(line: 4458, column: 22, scope: !6112)
!6178 = !DILocation(line: 4458, column: 2, scope: !6112)
!6179 = !DILocation(line: 4459, column: 38, scope: !6112)
!6180 = !DILocation(line: 4459, column: 2, scope: !6112)
!6181 = !DILocation(line: 4460, column: 2, scope: !6112)
!6182 = !DILocalVariable(name: "__dummy", scope: !6183, file: !6117, line: 409, type: !248)
!6183 = distinct !DILexicalBlock(scope: !6184, file: !6117, line: 409, column: 2)
!6184 = distinct !DILexicalBlock(scope: !6116, file: !6117, line: 409, column: 2)
!6185 = !DILocation(line: 409, column: 2, scope: !6183, inlinedAt: !6121)
!6186 = !DILocalVariable(name: "__dummy2", scope: !6183, file: !6117, line: 409, type: !248)
!6187 = !DILocalVariable(name: "__dummy", scope: !6188, file: !6117, line: 409, type: !248)
!6188 = distinct !DILexicalBlock(scope: !6189, file: !6117, line: 409, column: 2)
!6189 = distinct !DILexicalBlock(scope: !6190, file: !6117, line: 409, column: 2)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !6117, line: 409, column: 2)
!6191 = distinct !DILexicalBlock(scope: !6184, file: !6117, line: 409, column: 2)
!6192 = !DILocation(line: 409, column: 2, scope: !6188, inlinedAt: !6121)
!6193 = !DILocalVariable(name: "__dummy2", scope: !6188, file: !6117, line: 409, type: !248)
!6194 = !DILocation(line: 409, column: 2, scope: !6189, inlinedAt: !6121)
!6195 = !DILocation(line: 409, column: 2, scope: !6196, inlinedAt: !6121)
!6196 = distinct !DILexicalBlock(scope: !6191, file: !6117, line: 409, column: 2)
!6197 = !{i32 -2145337827}
!6198 = !DILocation(line: 409, column: 2, scope: !6199, inlinedAt: !6121)
!6199 = distinct !DILexicalBlock(scope: !6196, file: !6117, line: 409, column: 2)
!6200 = !DILocation(line: 4462, column: 6, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 4462, column: 6)
!6202 = !DILocation(line: 4462, column: 11, scope: !6201)
!6203 = !DILocation(line: 4462, column: 6, scope: !6112)
!6204 = !DILocation(line: 4463, column: 12, scope: !6201)
!6205 = !DILocation(line: 4463, column: 17, scope: !6201)
!6206 = !DILocation(line: 4463, column: 28, scope: !6201)
!6207 = !DILocation(line: 4463, column: 3, scope: !6201)
!6208 = !DILocation(line: 4464, column: 6, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 4464, column: 6)
!6210 = !DILocation(line: 4464, column: 11, scope: !6209)
!6211 = !DILocation(line: 4464, column: 6, scope: !6112)
!6212 = !DILocation(line: 4465, column: 3, scope: !6209)
!6213 = !DILocation(line: 4467, column: 25, scope: !6112)
!6214 = !DILocation(line: 4467, column: 2, scope: !6112)
!6215 = !DILocation(line: 4468, column: 1, scope: !6112)
!6216 = distinct !DISubprogram(name: "dc395x_queue_command", scope: !3, file: !3, line: 1053, type: !4968, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6217 = !DILocation(line: 407, column: 64, scope: !6116, inlinedAt: !6218)
!6218 = distinct !DILocation(line: 1053, column: 8, scope: !6216)
!6219 = !DILocation(line: 407, column: 84, scope: !6116, inlinedAt: !6218)
!6220 = !DILocation(line: 327, column: 67, scope: !6125, inlinedAt: !6221)
!6221 = distinct !DILocation(line: 1053, column: 8, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6223, file: !3, line: 1053, column: 8)
!6223 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 1053, column: 8)
!6224 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 1053, column: 8)
!6225 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 1053, column: 8)
!6226 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 1053, column: 8)
!6227 = !DILocalVariable(name: "shost", arg: 1, scope: !6216, file: !3, line: 1053, type: !189)
!6228 = !DILocation(line: 1053, column: 8, scope: !6216)
!6229 = !DILocalVariable(name: "cmd", arg: 2, scope: !6216, file: !3, line: 1053, type: !4970)
!6230 = !DILocalVariable(name: "irq_flags", scope: !6216, file: !3, line: 1053, type: !248)
!6231 = !DILocalVariable(name: "rc", scope: !6216, file: !3, line: 1053, type: !267)
!6232 = !DILocation(line: 1053, column: 8, scope: !6226)
!6233 = !DILocalVariable(name: "__dummy", scope: !6234, file: !3, line: 1053, type: !248)
!6234 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 1053, column: 8)
!6235 = !DILocation(line: 1053, column: 8, scope: !6234)
!6236 = !DILocalVariable(name: "__dummy2", scope: !6234, file: !3, line: 1053, type: !248)
!6237 = !DILocation(line: 1053, column: 8, scope: !6225)
!6238 = !DILocation(line: 1053, column: 8, scope: !6224)
!6239 = !DILocation(line: 1053, column: 8, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 1053, column: 8)
!6241 = !DILocalVariable(name: "__dummy", scope: !6242, file: !3, line: 1053, type: !248)
!6242 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 1053, column: 8)
!6243 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 1053, column: 8)
!6244 = !DILocation(line: 1053, column: 8, scope: !6242)
!6245 = !DILocalVariable(name: "__dummy2", scope: !6242, file: !3, line: 1053, type: !248)
!6246 = !DILocation(line: 1053, column: 8, scope: !6243)
!6247 = !DILocation(line: 1053, column: 8, scope: !6223)
!6248 = !{i32 -2140868506}
!6249 = !DILocation(line: 1053, column: 8, scope: !6222)
!6250 = !DILocation(line: 329, column: 10, scope: !6125, inlinedAt: !6221)
!6251 = !DILocation(line: 329, column: 16, scope: !6125, inlinedAt: !6221)
!6252 = !DILocation(line: 409, column: 2, scope: !6183, inlinedAt: !6218)
!6253 = !DILocation(line: 409, column: 2, scope: !6188, inlinedAt: !6218)
!6254 = !DILocation(line: 409, column: 2, scope: !6189, inlinedAt: !6218)
!6255 = !DILocation(line: 409, column: 2, scope: !6196, inlinedAt: !6218)
!6256 = !DILocation(line: 409, column: 2, scope: !6199, inlinedAt: !6218)
!6257 = distinct !DISubprogram(name: "dc395x_eh_abort", scope: !3, file: !3, line: 1225, type: !5058, scopeLine: 1226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6258 = !DILocalVariable(name: "cmd", arg: 1, scope: !6257, file: !3, line: 1225, type: !4970)
!6259 = !DILocation(line: 1225, column: 46, scope: !6257)
!6260 = !DILocalVariable(name: "acb", scope: !6257, file: !3, line: 1231, type: !185)
!6261 = !DILocation(line: 1231, column: 24, scope: !6257)
!6262 = !DILocation(line: 1232, column: 30, scope: !6257)
!6263 = !DILocation(line: 1232, column: 35, scope: !6257)
!6264 = !DILocation(line: 1232, column: 43, scope: !6257)
!6265 = !DILocation(line: 1232, column: 49, scope: !6257)
!6266 = !DILocation(line: 1232, column: 6, scope: !6257)
!6267 = !DILocalVariable(name: "dcb", scope: !6257, file: !3, line: 1233, type: !5226)
!6268 = !DILocation(line: 1233, column: 23, scope: !6257)
!6269 = !DILocalVariable(name: "srb", scope: !6257, file: !3, line: 1234, type: !5234)
!6270 = !DILocation(line: 1234, column: 21, scope: !6257)
!6271 = !DILocation(line: 1235, column: 2, scope: !6257)
!6272 = !DILocation(line: 1238, column: 17, scope: !6257)
!6273 = !DILocation(line: 1238, column: 22, scope: !6257)
!6274 = !DILocation(line: 1238, column: 27, scope: !6257)
!6275 = !DILocation(line: 1238, column: 35, scope: !6257)
!6276 = !DILocation(line: 1238, column: 39, scope: !6257)
!6277 = !DILocation(line: 1238, column: 44, scope: !6257)
!6278 = !DILocation(line: 1238, column: 52, scope: !6257)
!6279 = !DILocation(line: 1238, column: 8, scope: !6257)
!6280 = !DILocation(line: 1238, column: 6, scope: !6257)
!6281 = !DILocation(line: 1239, column: 7, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6257, file: !3, line: 1239, column: 6)
!6283 = !DILocation(line: 1239, column: 6, scope: !6257)
!6284 = !DILocation(line: 1240, column: 3, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 1239, column: 12)
!6286 = !DILocation(line: 1241, column: 3, scope: !6285)
!6287 = !DILocation(line: 1244, column: 17, scope: !6257)
!6288 = !DILocation(line: 1244, column: 23, scope: !6257)
!6289 = !DILocation(line: 1244, column: 28, scope: !6257)
!6290 = !DILocation(line: 1244, column: 8, scope: !6257)
!6291 = !DILocation(line: 1244, column: 6, scope: !6257)
!6292 = !DILocation(line: 1245, column: 6, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6257, file: !3, line: 1245, column: 6)
!6294 = !DILocation(line: 1245, column: 6, scope: !6257)
!6295 = !DILocation(line: 1246, column: 13, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6293, file: !3, line: 1245, column: 11)
!6297 = !DILocation(line: 1246, column: 18, scope: !6296)
!6298 = !DILocation(line: 1246, column: 3, scope: !6296)
!6299 = !DILocation(line: 1247, column: 23, scope: !6296)
!6300 = !DILocation(line: 1247, column: 28, scope: !6296)
!6301 = !DILocation(line: 1247, column: 3, scope: !6296)
!6302 = !DILocation(line: 1248, column: 17, scope: !6296)
!6303 = !DILocation(line: 1248, column: 22, scope: !6296)
!6304 = !DILocation(line: 1248, column: 3, scope: !6296)
!6305 = !DILocation(line: 1249, column: 12, scope: !6296)
!6306 = !DILocation(line: 1249, column: 17, scope: !6296)
!6307 = !DILocation(line: 1249, column: 3, scope: !6296)
!6308 = !DILocation(line: 1250, column: 18, scope: !6296)
!6309 = !DILocation(line: 1250, column: 23, scope: !6296)
!6310 = !DILocation(line: 1250, column: 30, scope: !6296)
!6311 = !DILocation(line: 1250, column: 35, scope: !6296)
!6312 = !DILocation(line: 1250, column: 3, scope: !6296)
!6313 = !DILocation(line: 1251, column: 3, scope: !6296)
!6314 = !DILocation(line: 1252, column: 3, scope: !6296)
!6315 = !DILocation(line: 1252, column: 8, scope: !6296)
!6316 = !DILocation(line: 1252, column: 15, scope: !6296)
!6317 = !DILocation(line: 1253, column: 3, scope: !6296)
!6318 = !DILocation(line: 1255, column: 17, scope: !6257)
!6319 = !DILocation(line: 1255, column: 23, scope: !6257)
!6320 = !DILocation(line: 1255, column: 28, scope: !6257)
!6321 = !DILocation(line: 1255, column: 8, scope: !6257)
!6322 = !DILocation(line: 1255, column: 6, scope: !6257)
!6323 = !DILocation(line: 1256, column: 6, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6257, file: !3, line: 1256, column: 6)
!6325 = !DILocation(line: 1256, column: 6, scope: !6257)
!6326 = !DILocation(line: 1257, column: 3, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 1256, column: 11)
!6328 = !DILocation(line: 1259, column: 2, scope: !6327)
!6329 = !DILocation(line: 1260, column: 3, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 1259, column: 9)
!6331 = !DILocation(line: 1262, column: 2, scope: !6257)
!6332 = !DILocation(line: 1263, column: 1, scope: !6257)
!6333 = distinct !DISubprogram(name: "dc395x_eh_bus_reset", scope: !3, file: !3, line: 1209, type: !5058, scopeLine: 1210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6334 = !DILocalVariable(name: "lock", arg: 1, scope: !6335, file: !6117, line: 402, type: !218)
!6335 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !6117, file: !6117, line: 402, type: !6336, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6336 = !DISubroutineType(types: !6337)
!6337 = !{null, !218}
!6338 = !DILocation(line: 402, column: 57, scope: !6335, inlinedAt: !6339)
!6339 = distinct !DILocation(line: 1215, column: 2, scope: !6333)
!6340 = !DILocalVariable(name: "lock", arg: 1, scope: !6341, file: !6117, line: 377, type: !218)
!6341 = distinct !DISubprogram(name: "spin_lock_irq", scope: !6117, file: !6117, line: 377, type: !6336, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6342 = !DILocation(line: 377, column: 55, scope: !6341, inlinedAt: !6343)
!6343 = distinct !DILocation(line: 1213, column: 2, scope: !6333)
!6344 = !DILocalVariable(name: "cmd", arg: 1, scope: !6333, file: !3, line: 1209, type: !4970)
!6345 = !DILocation(line: 1209, column: 50, scope: !6333)
!6346 = !DILocalVariable(name: "rc", scope: !6333, file: !3, line: 1211, type: !267)
!6347 = !DILocation(line: 1211, column: 6, scope: !6333)
!6348 = !DILocation(line: 1213, column: 16, scope: !6333)
!6349 = !DILocation(line: 1213, column: 21, scope: !6333)
!6350 = !DILocation(line: 1213, column: 29, scope: !6333)
!6351 = !DILocation(line: 1213, column: 35, scope: !6333)
!6352 = !DILocation(line: 379, column: 2, scope: !6353, inlinedAt: !6343)
!6353 = distinct !DILexicalBlock(scope: !6354, file: !6117, line: 379, column: 2)
!6354 = distinct !DILexicalBlock(scope: !6341, file: !6117, line: 379, column: 2)
!6355 = !DILocation(line: 379, column: 2, scope: !6356, inlinedAt: !6343)
!6356 = distinct !DILexicalBlock(scope: !6354, file: !6117, line: 379, column: 2)
!6357 = !{i32 -2145340619}
!6358 = !DILocation(line: 379, column: 2, scope: !6359, inlinedAt: !6343)
!6359 = distinct !DILexicalBlock(scope: !6356, file: !6117, line: 379, column: 2)
!6360 = !DILocation(line: 1214, column: 29, scope: !6333)
!6361 = !DILocation(line: 1214, column: 7, scope: !6333)
!6362 = !DILocation(line: 1214, column: 5, scope: !6333)
!6363 = !DILocation(line: 1215, column: 18, scope: !6333)
!6364 = !DILocation(line: 1215, column: 23, scope: !6333)
!6365 = !DILocation(line: 1215, column: 31, scope: !6333)
!6366 = !DILocation(line: 1215, column: 37, scope: !6333)
!6367 = !DILocation(line: 404, column: 2, scope: !6368, inlinedAt: !6339)
!6368 = distinct !DILexicalBlock(scope: !6369, file: !6117, line: 404, column: 2)
!6369 = distinct !DILexicalBlock(scope: !6335, file: !6117, line: 404, column: 2)
!6370 = !DILocation(line: 404, column: 2, scope: !6371, inlinedAt: !6339)
!6371 = distinct !DILexicalBlock(scope: !6369, file: !6117, line: 404, column: 2)
!6372 = !{i32 -2145338871}
!6373 = !DILocation(line: 404, column: 2, scope: !6374, inlinedAt: !6339)
!6374 = distinct !DILexicalBlock(scope: !6371, file: !6117, line: 404, column: 2)
!6375 = !DILocation(line: 1217, column: 9, scope: !6333)
!6376 = !DILocation(line: 1217, column: 2, scope: !6333)
!6377 = distinct !DISubprogram(name: "dc395x_slave_alloc", scope: !3, file: !3, line: 3761, type: !5066, scopeLine: 3762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6378 = !DILocalVariable(name: "scsi_device", arg: 1, scope: !6377, file: !3, line: 3761, type: !4817)
!6379 = !DILocation(line: 3761, column: 51, scope: !6377)
!6380 = !DILocalVariable(name: "acb", scope: !6377, file: !3, line: 3763, type: !185)
!6381 = !DILocation(line: 3763, column: 24, scope: !6377)
!6382 = !DILocation(line: 3763, column: 54, scope: !6377)
!6383 = !DILocation(line: 3763, column: 67, scope: !6377)
!6384 = !DILocation(line: 3763, column: 73, scope: !6377)
!6385 = !DILocation(line: 3763, column: 30, scope: !6377)
!6386 = !DILocalVariable(name: "dcb", scope: !6377, file: !3, line: 3764, type: !5226)
!6387 = !DILocation(line: 3764, column: 23, scope: !6377)
!6388 = !DILocation(line: 3766, column: 21, scope: !6377)
!6389 = !DILocation(line: 3766, column: 26, scope: !6377)
!6390 = !DILocation(line: 3766, column: 39, scope: !6377)
!6391 = !DILocation(line: 3766, column: 43, scope: !6377)
!6392 = !DILocation(line: 3766, column: 56, scope: !6377)
!6393 = !DILocation(line: 3766, column: 8, scope: !6377)
!6394 = !DILocation(line: 3766, column: 6, scope: !6377)
!6395 = !DILocation(line: 3767, column: 7, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 3767, column: 6)
!6397 = !DILocation(line: 3767, column: 6, scope: !6377)
!6398 = !DILocation(line: 3768, column: 3, scope: !6396)
!6399 = !DILocation(line: 3769, column: 21, scope: !6377)
!6400 = !DILocation(line: 3769, column: 26, scope: !6377)
!6401 = !DILocation(line: 3769, column: 2, scope: !6377)
!6402 = !DILocation(line: 3771, column: 2, scope: !6377)
!6403 = !DILocation(line: 3772, column: 1, scope: !6377)
!6404 = distinct !DISubprogram(name: "dc395x_slave_destroy", scope: !3, file: !3, line: 3781, type: !5071, scopeLine: 3782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6405 = !DILocalVariable(name: "scsi_device", arg: 1, scope: !6404, file: !3, line: 3781, type: !4817)
!6406 = !DILocation(line: 3781, column: 54, scope: !6404)
!6407 = !DILocalVariable(name: "acb", scope: !6404, file: !3, line: 3783, type: !185)
!6408 = !DILocation(line: 3783, column: 24, scope: !6404)
!6409 = !DILocation(line: 3783, column: 54, scope: !6404)
!6410 = !DILocation(line: 3783, column: 67, scope: !6404)
!6411 = !DILocation(line: 3783, column: 73, scope: !6404)
!6412 = !DILocation(line: 3783, column: 30, scope: !6404)
!6413 = !DILocalVariable(name: "dcb", scope: !6404, file: !3, line: 3784, type: !5226)
!6414 = !DILocation(line: 3784, column: 23, scope: !6404)
!6415 = !DILocation(line: 3784, column: 38, scope: !6404)
!6416 = !DILocation(line: 3784, column: 43, scope: !6404)
!6417 = !DILocation(line: 3784, column: 56, scope: !6404)
!6418 = !DILocation(line: 3784, column: 60, scope: !6404)
!6419 = !DILocation(line: 3784, column: 73, scope: !6404)
!6420 = !DILocation(line: 3784, column: 29, scope: !6404)
!6421 = !DILocation(line: 3785, column: 6, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 3785, column: 6)
!6423 = !DILocation(line: 3785, column: 6, scope: !6404)
!6424 = !DILocation(line: 3786, column: 34, scope: !6422)
!6425 = !DILocation(line: 3786, column: 39, scope: !6422)
!6426 = !DILocation(line: 3786, column: 3, scope: !6422)
!6427 = !DILocation(line: 3787, column: 1, scope: !6404)
!6428 = distinct !DISubprogram(name: "dc395x_show_info", scope: !3, file: !3, line: 4476, type: !5108, scopeLine: 4477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6429 = !DILocation(line: 407, column: 64, scope: !6116, inlinedAt: !6430)
!6430 = distinct !DILocation(line: 4575, column: 2, scope: !6428)
!6431 = !DILocation(line: 407, column: 84, scope: !6116, inlinedAt: !6430)
!6432 = !DILocation(line: 327, column: 67, scope: !6125, inlinedAt: !6433)
!6433 = distinct !DILocation(line: 4487, column: 2, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6435, file: !3, line: 4487, column: 2)
!6435 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 4487, column: 2)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 4487, column: 2)
!6437 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 4487, column: 2)
!6438 = distinct !DILexicalBlock(scope: !6428, file: !3, line: 4487, column: 2)
!6439 = !DILocalVariable(name: "m", arg: 1, scope: !6428, file: !3, line: 4476, type: !817)
!6440 = !DILocation(line: 4476, column: 46, scope: !6428)
!6441 = !DILocalVariable(name: "host", arg: 2, scope: !6428, file: !3, line: 4476, type: !189)
!6442 = !DILocation(line: 4476, column: 67, scope: !6428)
!6443 = !DILocalVariable(name: "acb", scope: !6428, file: !3, line: 4478, type: !185)
!6444 = !DILocation(line: 4478, column: 24, scope: !6428)
!6445 = !DILocation(line: 4478, column: 54, scope: !6428)
!6446 = !DILocation(line: 4478, column: 60, scope: !6428)
!6447 = !DILocation(line: 4478, column: 30, scope: !6428)
!6448 = !DILocalVariable(name: "spd", scope: !6428, file: !3, line: 4479, type: !267)
!6449 = !DILocation(line: 4479, column: 6, scope: !6428)
!6450 = !DILocalVariable(name: "spd1", scope: !6428, file: !3, line: 4479, type: !267)
!6451 = !DILocation(line: 4479, column: 11, scope: !6428)
!6452 = !DILocalVariable(name: "dcb", scope: !6428, file: !3, line: 4480, type: !5226)
!6453 = !DILocation(line: 4480, column: 23, scope: !6428)
!6454 = !DILocalVariable(name: "flags", scope: !6428, file: !3, line: 4481, type: !248)
!6455 = !DILocation(line: 4481, column: 16, scope: !6428)
!6456 = !DILocalVariable(name: "dev", scope: !6428, file: !3, line: 4482, type: !267)
!6457 = !DILocation(line: 4482, column: 6, scope: !6428)
!6458 = !DILocation(line: 4484, column: 11, scope: !6428)
!6459 = !DILocation(line: 4484, column: 2, scope: !6428)
!6460 = !DILocation(line: 4487, column: 2, scope: !6428)
!6461 = !DILocation(line: 4487, column: 2, scope: !6438)
!6462 = !DILocalVariable(name: "__dummy", scope: !6463, file: !3, line: 4487, type: !248)
!6463 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 4487, column: 2)
!6464 = !DILocation(line: 4487, column: 2, scope: !6463)
!6465 = !DILocalVariable(name: "__dummy2", scope: !6463, file: !3, line: 4487, type: !248)
!6466 = !DILocation(line: 4487, column: 2, scope: !6437)
!6467 = !DILocation(line: 4487, column: 2, scope: !6436)
!6468 = !DILocation(line: 4487, column: 2, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 4487, column: 2)
!6470 = !DILocalVariable(name: "__dummy", scope: !6471, file: !3, line: 4487, type: !248)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 4487, column: 2)
!6472 = distinct !DILexicalBlock(scope: !6469, file: !3, line: 4487, column: 2)
!6473 = !DILocation(line: 4487, column: 2, scope: !6471)
!6474 = !DILocalVariable(name: "__dummy2", scope: !6471, file: !3, line: 4487, type: !248)
!6475 = !DILocation(line: 4487, column: 2, scope: !6472)
!6476 = !DILocation(line: 4487, column: 2, scope: !6435)
!6477 = !{i32 -2140782098}
!6478 = !DILocation(line: 4487, column: 2, scope: !6434)
!6479 = !DILocation(line: 329, column: 10, scope: !6125, inlinedAt: !6433)
!6480 = !DILocation(line: 329, column: 16, scope: !6125, inlinedAt: !6433)
!6481 = !DILocation(line: 4489, column: 13, scope: !6428)
!6482 = !DILocation(line: 4489, column: 37, scope: !6428)
!6483 = !DILocation(line: 4489, column: 43, scope: !6428)
!6484 = !DILocation(line: 4489, column: 2, scope: !6428)
!6485 = !DILocation(line: 4490, column: 13, scope: !6428)
!6486 = !DILocation(line: 4491, column: 4, scope: !6428)
!6487 = !DILocation(line: 4491, column: 9, scope: !6428)
!6488 = !DILocation(line: 4491, column: 16, scope: !6428)
!6489 = !DILocation(line: 4491, column: 3, scope: !6428)
!6490 = !DILocation(line: 4490, column: 2, scope: !6428)
!6491 = !DILocation(line: 4492, column: 13, scope: !6428)
!6492 = !DILocation(line: 4492, column: 42, scope: !6428)
!6493 = !DILocation(line: 4492, column: 47, scope: !6428)
!6494 = !DILocation(line: 4492, column: 2, scope: !6428)
!6495 = !DILocation(line: 4493, column: 13, scope: !6428)
!6496 = !DILocation(line: 4493, column: 38, scope: !6428)
!6497 = !DILocation(line: 4493, column: 43, scope: !6428)
!6498 = !DILocation(line: 4493, column: 2, scope: !6428)
!6499 = !DILocation(line: 4494, column: 13, scope: !6428)
!6500 = !DILocation(line: 4494, column: 46, scope: !6428)
!6501 = !DILocation(line: 4494, column: 51, scope: !6428)
!6502 = !DILocation(line: 4494, column: 44, scope: !6428)
!6503 = !DILocation(line: 4494, column: 64, scope: !6428)
!6504 = !DILocation(line: 4494, column: 2, scope: !6428)
!6505 = !DILocation(line: 4496, column: 13, scope: !6428)
!6506 = !DILocation(line: 4496, column: 43, scope: !6428)
!6507 = !DILocation(line: 4496, column: 49, scope: !6428)
!6508 = !DILocation(line: 4496, column: 57, scope: !6428)
!6509 = !DILocation(line: 4496, column: 63, scope: !6428)
!6510 = !DILocation(line: 4496, column: 2, scope: !6428)
!6511 = !DILocation(line: 4497, column: 13, scope: !6428)
!6512 = !DILocation(line: 4497, column: 34, scope: !6428)
!6513 = !DILocation(line: 4497, column: 40, scope: !6428)
!6514 = !DILocation(line: 4497, column: 2, scope: !6428)
!6515 = !DILocation(line: 4499, column: 13, scope: !6428)
!6516 = !DILocation(line: 4499, column: 34, scope: !6428)
!6517 = !DILocation(line: 4499, column: 39, scope: !6428)
!6518 = !DILocation(line: 4499, column: 2, scope: !6428)
!6519 = !DILocation(line: 4501, column: 13, scope: !6428)
!6520 = !DILocation(line: 4502, column: 3, scope: !6428)
!6521 = !DILocation(line: 4501, column: 2, scope: !6428)
!6522 = !DILocation(line: 4503, column: 13, scope: !6428)
!6523 = !DILocation(line: 4503, column: 38, scope: !6428)
!6524 = !DILocation(line: 4503, column: 43, scope: !6428)
!6525 = !DILocation(line: 4503, column: 50, scope: !6428)
!6526 = !DILocation(line: 4503, column: 2, scope: !6428)
!6527 = !DILocation(line: 4506, column: 13, scope: !6428)
!6528 = !DILocation(line: 4506, column: 47, scope: !6428)
!6529 = !DILocation(line: 4506, column: 52, scope: !6428)
!6530 = !DILocation(line: 4506, column: 36, scope: !6428)
!6531 = !DILocation(line: 4506, column: 2, scope: !6428)
!6532 = !DILocation(line: 4507, column: 13, scope: !6428)
!6533 = !DILocation(line: 4507, column: 49, scope: !6428)
!6534 = !DILocation(line: 4507, column: 54, scope: !6428)
!6535 = !DILocation(line: 4507, column: 2, scope: !6428)
!6536 = !DILocation(line: 4508, column: 13, scope: !6428)
!6537 = !DILocation(line: 4508, column: 49, scope: !6428)
!6538 = !DILocation(line: 4508, column: 54, scope: !6428)
!6539 = !DILocation(line: 4508, column: 2, scope: !6428)
!6540 = !DILocation(line: 4510, column: 11, scope: !6428)
!6541 = !DILocation(line: 4510, column: 2, scope: !6428)
!6542 = !DILocation(line: 4513, column: 6, scope: !6428)
!6543 = !DILocalVariable(name: "__mptr", scope: !6544, file: !3, line: 4514, type: !256)
!6544 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 4514, column: 2)
!6545 = distinct !DILexicalBlock(scope: !6428, file: !3, line: 4514, column: 2)
!6546 = !DILocation(line: 4514, column: 2, scope: !6544)
!6547 = !DILocation(line: 4514, column: 2, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6544, file: !3, line: 4514, column: 2)
!6549 = !DILocation(line: 4514, column: 2, scope: !6545)
!6550 = !DILocation(line: 4514, column: 2, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 4514, column: 2)
!6552 = !DILocalVariable(name: "nego_period", scope: !6553, file: !3, line: 4515, type: !267)
!6553 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 4514, column: 49)
!6554 = !DILocation(line: 4515, column: 7, scope: !6553)
!6555 = !DILocation(line: 4516, column: 14, scope: !6553)
!6556 = !DILocation(line: 4516, column: 37, scope: !6553)
!6557 = !DILocation(line: 4516, column: 42, scope: !6553)
!6558 = !DILocation(line: 4516, column: 47, scope: !6553)
!6559 = !DILocation(line: 4517, column: 4, scope: !6553)
!6560 = !DILocation(line: 4517, column: 9, scope: !6553)
!6561 = !DILocation(line: 4516, column: 3, scope: !6553)
!6562 = !DILocation(line: 4518, column: 3, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 4518, column: 3)
!6564 = !DILocation(line: 4518, column: 3, scope: !6553)
!6565 = !DILocation(line: 4519, column: 3, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 4519, column: 3)
!6567 = !DILocation(line: 4519, column: 3, scope: !6553)
!6568 = !DILocation(line: 4520, column: 3, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 4520, column: 3)
!6570 = !DILocation(line: 4520, column: 3, scope: !6553)
!6571 = !DILocation(line: 4521, column: 3, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 4521, column: 3)
!6573 = !DILocation(line: 4521, column: 3, scope: !6553)
!6574 = !DILocation(line: 4522, column: 3, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 4522, column: 3)
!6576 = !DILocation(line: 4522, column: 3, scope: !6553)
!6577 = !DILocation(line: 4523, column: 3, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 4523, column: 3)
!6579 = !DILocation(line: 4523, column: 3, scope: !6553)
!6580 = !DILocation(line: 4524, column: 30, scope: !6553)
!6581 = !DILocation(line: 4524, column: 35, scope: !6553)
!6582 = !DILocation(line: 4524, column: 47, scope: !6553)
!6583 = !DILocation(line: 4524, column: 17, scope: !6553)
!6584 = !DILocation(line: 4524, column: 55, scope: !6553)
!6585 = !DILocation(line: 4524, column: 15, scope: !6553)
!6586 = !DILocation(line: 4525, column: 7, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 4525, column: 7)
!6588 = !DILocation(line: 4525, column: 12, scope: !6587)
!6589 = !DILocation(line: 4525, column: 7, scope: !6553)
!6590 = !DILocation(line: 4526, column: 15, scope: !6587)
!6591 = !DILocation(line: 4526, column: 32, scope: !6587)
!6592 = !DILocation(line: 4526, column: 4, scope: !6587)
!6593 = !DILocation(line: 4528, column: 15, scope: !6587)
!6594 = !DILocation(line: 4528, column: 33, scope: !6587)
!6595 = !DILocation(line: 4528, column: 38, scope: !6587)
!6596 = !DILocation(line: 4528, column: 54, scope: !6587)
!6597 = !DILocation(line: 4528, column: 4, scope: !6587)
!6598 = !DILocation(line: 4530, column: 7, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 4530, column: 7)
!6600 = !DILocation(line: 4530, column: 12, scope: !6599)
!6601 = !DILocation(line: 4530, column: 24, scope: !6599)
!6602 = !DILocation(line: 4530, column: 7, scope: !6553)
!6603 = !DILocation(line: 4531, column: 18, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 4530, column: 32)
!6605 = !DILocation(line: 4531, column: 15, scope: !6604)
!6606 = !DILocation(line: 4531, column: 8, scope: !6604)
!6607 = !DILocation(line: 4532, column: 19, scope: !6604)
!6608 = !DILocation(line: 4532, column: 16, scope: !6604)
!6609 = !DILocation(line: 4532, column: 9, scope: !6604)
!6610 = !DILocation(line: 4533, column: 12, scope: !6604)
!6611 = !DILocation(line: 4533, column: 17, scope: !6604)
!6612 = !DILocation(line: 4533, column: 24, scope: !6604)
!6613 = !DILocation(line: 4533, column: 36, scope: !6604)
!6614 = !DILocation(line: 4533, column: 22, scope: !6604)
!6615 = !DILocation(line: 4533, column: 44, scope: !6604)
!6616 = !DILocation(line: 4533, column: 41, scope: !6604)
!6617 = !DILocation(line: 4533, column: 9, scope: !6604)
!6618 = !DILocation(line: 4534, column: 15, scope: !6604)
!6619 = !DILocation(line: 4534, column: 44, scope: !6604)
!6620 = !DILocation(line: 4534, column: 49, scope: !6604)
!6621 = !DILocation(line: 4535, column: 6, scope: !6604)
!6622 = !DILocation(line: 4535, column: 11, scope: !6604)
!6623 = !DILocation(line: 4535, column: 23, scope: !6604)
!6624 = !DILocation(line: 4534, column: 4, scope: !6604)
!6625 = !DILocation(line: 4536, column: 3, scope: !6604)
!6626 = !DILocation(line: 4537, column: 13, scope: !6599)
!6627 = !DILocation(line: 4537, column: 4, scope: !6599)
!6628 = !DILocation(line: 4540, column: 14, scope: !6553)
!6629 = !DILocation(line: 4540, column: 32, scope: !6553)
!6630 = !DILocation(line: 4540, column: 37, scope: !6553)
!6631 = !DILocation(line: 4540, column: 3, scope: !6553)
!6632 = !DILocation(line: 4541, column: 6, scope: !6553)
!6633 = !DILocation(line: 4542, column: 2, scope: !6553)
!6634 = !DILocalVariable(name: "__mptr", scope: !6635, file: !3, line: 4514, type: !256)
!6635 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 4514, column: 2)
!6636 = !DILocation(line: 4514, column: 2, scope: !6635)
!6637 = !DILocation(line: 4514, column: 2, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 4514, column: 2)
!6639 = distinct !{!6639, !6549, !6640}
!6640 = !DILocation(line: 4542, column: 2, scope: !6545)
!6641 = !DILocation(line: 4544, column: 21, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6428, file: !3, line: 4544, column: 6)
!6643 = !DILocation(line: 4544, column: 26, scope: !6642)
!6644 = !DILocation(line: 4544, column: 6, scope: !6642)
!6645 = !DILocation(line: 4544, column: 6, scope: !6428)
!6646 = !DILocation(line: 4545, column: 12, scope: !6642)
!6647 = !DILocation(line: 4545, column: 3, scope: !6642)
!6648 = !DILocation(line: 4547, column: 12, scope: !6642)
!6649 = !DILocation(line: 4547, column: 3, scope: !6642)
!6650 = !DILocalVariable(name: "__mptr", scope: !6651, file: !3, line: 4549, type: !256)
!6651 = distinct !DILexicalBlock(scope: !6652, file: !3, line: 4549, column: 2)
!6652 = distinct !DILexicalBlock(scope: !6428, file: !3, line: 4549, column: 2)
!6653 = !DILocation(line: 4549, column: 2, scope: !6651)
!6654 = !DILocation(line: 4549, column: 2, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 4549, column: 2)
!6656 = !DILocation(line: 4549, column: 2, scope: !6652)
!6657 = !DILocation(line: 4549, column: 2, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6652, file: !3, line: 4549, column: 2)
!6659 = !DILocalVariable(name: "srb", scope: !6660, file: !3, line: 4550, type: !5234)
!6660 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 4549, column: 49)
!6661 = !DILocation(line: 4550, column: 22, scope: !6660)
!6662 = !DILocation(line: 4551, column: 20, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 4551, column: 7)
!6664 = !DILocation(line: 4551, column: 25, scope: !6663)
!6665 = !DILocation(line: 4551, column: 8, scope: !6663)
!6666 = !DILocation(line: 4551, column: 7, scope: !6660)
!6667 = !DILocation(line: 4552, column: 15, scope: !6663)
!6668 = !DILocation(line: 4553, column: 5, scope: !6663)
!6669 = !DILocation(line: 4553, column: 10, scope: !6663)
!6670 = !DILocation(line: 4553, column: 21, scope: !6663)
!6671 = !DILocation(line: 4553, column: 26, scope: !6663)
!6672 = !DILocation(line: 4554, column: 16, scope: !6663)
!6673 = !DILocation(line: 4554, column: 21, scope: !6663)
!6674 = !DILocation(line: 4554, column: 5, scope: !6663)
!6675 = !DILocation(line: 4552, column: 4, scope: !6663)
!6676 = !DILocalVariable(name: "__mptr", scope: !6677, file: !3, line: 4555, type: !256)
!6677 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 4555, column: 17)
!6678 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 4555, column: 17)
!6679 = !DILocation(line: 4555, column: 17, scope: !6677)
!6680 = !DILocation(line: 4555, column: 17, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 4555, column: 17)
!6682 = !DILocation(line: 4555, column: 17, scope: !6678)
!6683 = !DILocation(line: 4555, column: 17, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 4555, column: 17)
!6685 = !DILocation(line: 4556, column: 15, scope: !6684)
!6686 = !DILocation(line: 4556, column: 25, scope: !6684)
!6687 = !DILocation(line: 4556, column: 30, scope: !6684)
!6688 = !DILocation(line: 4556, column: 4, scope: !6684)
!6689 = !DILocalVariable(name: "__mptr", scope: !6690, file: !3, line: 4555, type: !256)
!6690 = distinct !DILexicalBlock(scope: !6684, file: !3, line: 4555, column: 17)
!6691 = !DILocation(line: 4555, column: 17, scope: !6690)
!6692 = !DILocation(line: 4555, column: 17, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 4555, column: 17)
!6694 = distinct !{!6694, !6682, !6695}
!6695 = !DILocation(line: 4556, column: 33, scope: !6678)
!6696 = !DILocation(line: 4557, column: 20, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 4557, column: 7)
!6698 = !DILocation(line: 4557, column: 25, scope: !6697)
!6699 = !DILocation(line: 4557, column: 8, scope: !6697)
!6700 = !DILocation(line: 4557, column: 7, scope: !6660)
!6701 = !DILocation(line: 4558, column: 15, scope: !6697)
!6702 = !DILocation(line: 4559, column: 5, scope: !6697)
!6703 = !DILocation(line: 4559, column: 10, scope: !6697)
!6704 = !DILocation(line: 4559, column: 21, scope: !6697)
!6705 = !DILocation(line: 4559, column: 26, scope: !6697)
!6706 = !DILocation(line: 4560, column: 16, scope: !6697)
!6707 = !DILocation(line: 4560, column: 21, scope: !6697)
!6708 = !DILocation(line: 4560, column: 5, scope: !6697)
!6709 = !DILocation(line: 4558, column: 4, scope: !6697)
!6710 = !DILocalVariable(name: "__mptr", scope: !6711, file: !3, line: 4561, type: !256)
!6711 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 4561, column: 3)
!6712 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 4561, column: 3)
!6713 = !DILocation(line: 4561, column: 3, scope: !6711)
!6714 = !DILocation(line: 4561, column: 3, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 4561, column: 3)
!6716 = !DILocation(line: 4561, column: 3, scope: !6712)
!6717 = !DILocation(line: 4561, column: 3, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 4561, column: 3)
!6719 = !DILocation(line: 4562, column: 15, scope: !6718)
!6720 = !DILocation(line: 4562, column: 25, scope: !6718)
!6721 = !DILocation(line: 4562, column: 30, scope: !6718)
!6722 = !DILocation(line: 4562, column: 4, scope: !6718)
!6723 = !DILocalVariable(name: "__mptr", scope: !6724, file: !3, line: 4561, type: !256)
!6724 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 4561, column: 3)
!6725 = !DILocation(line: 4561, column: 3, scope: !6724)
!6726 = !DILocation(line: 4561, column: 3, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 4561, column: 3)
!6728 = distinct !{!6728, !6716, !6729}
!6729 = !DILocation(line: 4562, column: 33, scope: !6712)
!6730 = !DILocation(line: 4563, column: 20, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 4563, column: 7)
!6732 = !DILocation(line: 4563, column: 25, scope: !6731)
!6733 = !DILocation(line: 4563, column: 8, scope: !6731)
!6734 = !DILocation(line: 4563, column: 43, scope: !6731)
!6735 = !DILocation(line: 4563, column: 59, scope: !6731)
!6736 = !DILocation(line: 4563, column: 64, scope: !6731)
!6737 = !DILocation(line: 4563, column: 47, scope: !6731)
!6738 = !DILocation(line: 4563, column: 7, scope: !6660)
!6739 = !DILocation(line: 4564, column: 13, scope: !6731)
!6740 = !DILocation(line: 4564, column: 4, scope: !6731)
!6741 = !DILocation(line: 4565, column: 2, scope: !6660)
!6742 = !DILocalVariable(name: "__mptr", scope: !6743, file: !3, line: 4549, type: !256)
!6743 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 4549, column: 2)
!6744 = !DILocation(line: 4549, column: 2, scope: !6743)
!6745 = !DILocation(line: 4549, column: 2, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 4549, column: 2)
!6747 = distinct !{!6747, !6656, !6748}
!6748 = !DILocation(line: 4565, column: 2, scope: !6652)
!6749 = !DILocation(line: 4575, column: 2, scope: !6428)
!6750 = !DILocation(line: 409, column: 2, scope: !6183, inlinedAt: !6430)
!6751 = !DILocation(line: 409, column: 2, scope: !6188, inlinedAt: !6430)
!6752 = !DILocation(line: 409, column: 2, scope: !6189, inlinedAt: !6430)
!6753 = !DILocation(line: 409, column: 2, scope: !6196, inlinedAt: !6430)
!6754 = !DILocation(line: 409, column: 2, scope: !6199, inlinedAt: !6430)
!6755 = !DILocation(line: 4576, column: 2, scope: !6428)
!6756 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !6757, file: !6757, line: 666, type: !6758, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6757 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!6758 = !DISubroutineType(types: !6759)
!6759 = !{!248}
!6760 = !DILocalVariable(name: "f", scope: !6756, file: !6757, line: 668, type: !248)
!6761 = !DILocation(line: 668, column: 16, scope: !6756)
!6762 = !DILocation(line: 670, column: 6, scope: !6756)
!6763 = !DILocation(line: 670, column: 4, scope: !6756)
!6764 = !DILocation(line: 671, column: 2, scope: !6756)
!6765 = !DILocation(line: 672, column: 9, scope: !6756)
!6766 = !DILocation(line: 672, column: 2, scope: !6756)
!6767 = distinct !DISubprogram(name: "dc395x_queue_command_lck", scope: !3, file: !3, line: 978, type: !6768, scopeLine: 979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6768 = !DISubroutineType(types: !6769)
!6769 = !{!267, !4970, !5027}
!6770 = !DILocalVariable(name: "cmd", arg: 1, scope: !6767, file: !3, line: 978, type: !4970)
!6771 = !DILocation(line: 978, column: 55, scope: !6767)
!6772 = !DILocalVariable(name: "done", arg: 2, scope: !6767, file: !3, line: 978, type: !5027)
!6773 = !DILocation(line: 978, column: 67, scope: !6767)
!6774 = !DILocalVariable(name: "dcb", scope: !6767, file: !3, line: 980, type: !5226)
!6775 = !DILocation(line: 980, column: 23, scope: !6767)
!6776 = !DILocalVariable(name: "srb", scope: !6767, file: !3, line: 981, type: !5234)
!6777 = !DILocation(line: 981, column: 21, scope: !6767)
!6778 = !DILocalVariable(name: "acb", scope: !6767, file: !3, line: 982, type: !185)
!6779 = !DILocation(line: 982, column: 24, scope: !6767)
!6780 = !DILocation(line: 983, column: 30, scope: !6767)
!6781 = !DILocation(line: 983, column: 35, scope: !6767)
!6782 = !DILocation(line: 983, column: 43, scope: !6767)
!6783 = !DILocation(line: 983, column: 49, scope: !6767)
!6784 = !DILocation(line: 983, column: 6, scope: !6767)
!6785 = !DILocation(line: 984, column: 2, scope: !6767)
!6786 = !DILocation(line: 984, column: 2, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 984, column: 2)
!6788 = !DILocation(line: 988, column: 2, scope: !6767)
!6789 = !DILocation(line: 988, column: 7, scope: !6767)
!6790 = !DILocation(line: 988, column: 14, scope: !6767)
!6791 = !DILocation(line: 991, column: 6, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 991, column: 6)
!6793 = !DILocation(line: 991, column: 11, scope: !6792)
!6794 = !DILocation(line: 991, column: 19, scope: !6792)
!6795 = !DILocation(line: 991, column: 25, scope: !6792)
!6796 = !DILocation(line: 991, column: 30, scope: !6792)
!6797 = !DILocation(line: 991, column: 41, scope: !6792)
!6798 = !DILocation(line: 991, column: 22, scope: !6792)
!6799 = !DILocation(line: 991, column: 48, scope: !6792)
!6800 = !DILocation(line: 992, column: 6, scope: !6792)
!6801 = !DILocation(line: 992, column: 11, scope: !6792)
!6802 = !DILocation(line: 992, column: 19, scope: !6792)
!6803 = !DILocation(line: 992, column: 26, scope: !6792)
!6804 = !DILocation(line: 992, column: 31, scope: !6792)
!6805 = !DILocation(line: 992, column: 42, scope: !6792)
!6806 = !DILocation(line: 992, column: 23, scope: !6792)
!6807 = !DILocation(line: 992, column: 50, scope: !6792)
!6808 = !DILocation(line: 993, column: 6, scope: !6792)
!6809 = !DILocation(line: 993, column: 11, scope: !6792)
!6810 = !DILocation(line: 993, column: 19, scope: !6792)
!6811 = !DILocation(line: 993, column: 23, scope: !6792)
!6812 = !DILocation(line: 991, column: 6, scope: !6767)
!6813 = !DILocation(line: 994, column: 3, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 993, column: 28)
!6815 = !DILocation(line: 998, column: 8, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 998, column: 6)
!6817 = !DILocation(line: 998, column: 13, scope: !6816)
!6818 = !DILocation(line: 998, column: 21, scope: !6816)
!6819 = !DILocation(line: 998, column: 26, scope: !6816)
!6820 = !DILocation(line: 998, column: 34, scope: !6816)
!6821 = !DILocation(line: 998, column: 46, scope: !6816)
!6822 = !DILocation(line: 998, column: 51, scope: !6816)
!6823 = !DILocation(line: 998, column: 59, scope: !6816)
!6824 = !DILocation(line: 998, column: 43, scope: !6816)
!6825 = !DILocation(line: 998, column: 38, scope: !6816)
!6826 = !DILocation(line: 998, column: 6, scope: !6767)
!6827 = !DILocation(line: 999, column: 3, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 998, column: 66)
!6829 = !DILocation(line: 1001, column: 3, scope: !6828)
!6830 = !DILocation(line: 1005, column: 17, scope: !6767)
!6831 = !DILocation(line: 1005, column: 22, scope: !6767)
!6832 = !DILocation(line: 1005, column: 27, scope: !6767)
!6833 = !DILocation(line: 1005, column: 35, scope: !6767)
!6834 = !DILocation(line: 1005, column: 39, scope: !6767)
!6835 = !DILocation(line: 1005, column: 44, scope: !6767)
!6836 = !DILocation(line: 1005, column: 52, scope: !6767)
!6837 = !DILocation(line: 1005, column: 8, scope: !6767)
!6838 = !DILocation(line: 1005, column: 6, scope: !6767)
!6839 = !DILocation(line: 1006, column: 7, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 1006, column: 6)
!6841 = !DILocation(line: 1006, column: 6, scope: !6767)
!6842 = !DILocation(line: 1008, column: 3, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1006, column: 12)
!6844 = !DILocation(line: 1010, column: 3, scope: !6843)
!6845 = !DILocation(line: 1014, column: 19, scope: !6767)
!6846 = !DILocation(line: 1014, column: 2, scope: !6767)
!6847 = !DILocation(line: 1014, column: 7, scope: !6767)
!6848 = !DILocation(line: 1014, column: 17, scope: !6767)
!6849 = !DILocation(line: 1015, column: 2, scope: !6767)
!6850 = !DILocation(line: 1015, column: 7, scope: !6767)
!6851 = !DILocation(line: 1015, column: 14, scope: !6767)
!6852 = !DILocalVariable(name: "head__", scope: !6853, file: !3, line: 1017, type: !197)
!6853 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 1017, column: 8)
!6854 = !DILocation(line: 1017, column: 8, scope: !6853)
!6855 = !DILocalVariable(name: "pos__", scope: !6853, file: !3, line: 1017, type: !197)
!6856 = !DILocation(line: 1017, column: 8, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 1017, column: 8)
!6858 = !DILocation(line: 1017, column: 8, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6857, file: !3, line: 1017, column: 8)
!6860 = !DILocalVariable(name: "__mptr", scope: !6861, file: !3, line: 1017, type: !256)
!6861 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 1017, column: 8)
!6862 = !DILocation(line: 1017, column: 8, scope: !6861)
!6863 = !DILocation(line: 1017, column: 8, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 1017, column: 8)
!6865 = !DILocation(line: 1017, column: 6, scope: !6767)
!6866 = !DILocation(line: 1019, column: 7, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 1019, column: 6)
!6868 = !DILocation(line: 1019, column: 6, scope: !6767)
!6869 = !DILocation(line: 1024, column: 3, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 1019, column: 12)
!6871 = !DILocation(line: 1024, column: 3, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 1024, column: 3)
!6873 = !DILocation(line: 1025, column: 3, scope: !6870)
!6874 = !DILocation(line: 1027, column: 12, scope: !6767)
!6875 = !DILocation(line: 1027, column: 17, scope: !6767)
!6876 = !DILocation(line: 1027, column: 2, scope: !6767)
!6877 = !DILocation(line: 1029, column: 12, scope: !6767)
!6878 = !DILocation(line: 1029, column: 17, scope: !6767)
!6879 = !DILocation(line: 1029, column: 22, scope: !6767)
!6880 = !DILocation(line: 1029, column: 2, scope: !6767)
!6881 = !DILocation(line: 1031, column: 19, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 1031, column: 6)
!6883 = !DILocation(line: 1031, column: 24, scope: !6882)
!6884 = !DILocation(line: 1031, column: 7, scope: !6882)
!6885 = !DILocation(line: 1031, column: 6, scope: !6767)
!6886 = !DILocation(line: 1033, column: 18, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 1031, column: 43)
!6888 = !DILocation(line: 1033, column: 23, scope: !6887)
!6889 = !DILocation(line: 1033, column: 30, scope: !6887)
!6890 = !DILocation(line: 1033, column: 35, scope: !6887)
!6891 = !DILocation(line: 1033, column: 3, scope: !6887)
!6892 = !DILocation(line: 1034, column: 24, scope: !6887)
!6893 = !DILocation(line: 1034, column: 3, scope: !6887)
!6894 = !DILocation(line: 1035, column: 2, scope: !6887)
!6895 = !DILocation(line: 1037, column: 12, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 1035, column: 9)
!6897 = !DILocation(line: 1037, column: 17, scope: !6896)
!6898 = !DILocation(line: 1037, column: 3, scope: !6896)
!6899 = !DILocation(line: 1039, column: 2, scope: !6767)
!6900 = !DILocation(line: 1039, column: 2, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 1039, column: 2)
!6902 = !DILocation(line: 1040, column: 2, scope: !6767)
!6903 = !DILabel(scope: !6767, name: "complete", file: !3, line: 1042)
!6904 = !DILocation(line: 1042, column: 1, scope: !6767)
!6905 = !DILocation(line: 1049, column: 2, scope: !6767)
!6906 = !DILocation(line: 1049, column: 7, scope: !6767)
!6907 = !DILocation(line: 1050, column: 2, scope: !6767)
!6908 = !DILocation(line: 1051, column: 1, scope: !6767)
!6909 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !6757, file: !6757, line: 646, type: !6758, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6910 = !DILocalVariable(name: "__ret", scope: !6911, file: !6757, line: 648, type: !248)
!6911 = distinct !DILexicalBlock(scope: !6909, file: !6757, line: 648, column: 9)
!6912 = !DILocation(line: 648, column: 9, scope: !6911)
!6913 = !DILocalVariable(name: "__edi", scope: !6911, file: !6757, line: 648, type: !248)
!6914 = !DILocalVariable(name: "__esi", scope: !6911, file: !6757, line: 648, type: !248)
!6915 = !DILocalVariable(name: "__edx", scope: !6911, file: !6757, line: 648, type: !248)
!6916 = !DILocalVariable(name: "__ecx", scope: !6911, file: !6757, line: 648, type: !248)
!6917 = !DILocalVariable(name: "__eax", scope: !6911, file: !6757, line: 648, type: !248)
!6918 = !DILocation(line: 648, column: 9, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6920, file: !6757, line: 648, column: 9)
!6920 = distinct !DILexicalBlock(scope: !6911, file: !6757, line: 648, column: 9)
!6921 = !{i32 -2145651396, i32 -2145649081, i32 -2145648847, i32 -2145648796, i32 -2145648768, i32 -2145648743, i32 -2145649059, i32 -2145649046, i32 -2145648608, i32 -2145648489, i32 -2145648954, i32 -2145648927, i32 -2145648899, i32 -2145648869}
!6922 = !DILocalVariable(name: "__mask", scope: !6923, file: !6757, line: 648, type: !248)
!6923 = distinct !DILexicalBlock(scope: !6919, file: !6757, line: 648, column: 9)
!6924 = !DILocation(line: 648, column: 9, scope: !6923)
!6925 = !DILocation(line: 648, column: 9, scope: !6920)
!6926 = !DILocation(line: 648, column: 2, scope: !6909)
!6927 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !6757, file: !6757, line: 656, type: !4414, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6928 = !DILocalVariable(name: "__edi", scope: !6929, file: !6757, line: 658, type: !248)
!6929 = distinct !DILexicalBlock(scope: !6927, file: !6757, line: 658, column: 2)
!6930 = !DILocation(line: 658, column: 2, scope: !6929)
!6931 = !DILocalVariable(name: "__esi", scope: !6929, file: !6757, line: 658, type: !248)
!6932 = !DILocalVariable(name: "__edx", scope: !6929, file: !6757, line: 658, type: !248)
!6933 = !DILocalVariable(name: "__ecx", scope: !6929, file: !6757, line: 658, type: !248)
!6934 = !DILocalVariable(name: "__eax", scope: !6929, file: !6757, line: 658, type: !248)
!6935 = !{i32 -2145644302, i32 -2145643570, i32 -2145643336, i32 -2145643285, i32 -2145643257, i32 -2145643232, i32 -2145643548, i32 -2145643535, i32 -2145643097, i32 -2145642978, i32 -2145643443, i32 -2145643416, i32 -2145643388, i32 -2145643358}
!6936 = !DILocation(line: 659, column: 1, scope: !6927)
!6937 = distinct !DISubprogram(name: "find_dcb", scope: !3, file: !3, line: 849, type: !6938, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6938 = !DISubroutineType(types: !6939)
!6939 = !{!5226, !185, !410, !410}
!6940 = !DILocalVariable(name: "acb", arg: 1, scope: !6937, file: !3, line: 849, type: !185)
!6941 = !DILocation(line: 849, column: 60, scope: !6937)
!6942 = !DILocalVariable(name: "id", arg: 2, scope: !6937, file: !3, line: 849, type: !410)
!6943 = !DILocation(line: 849, column: 68, scope: !6937)
!6944 = !DILocalVariable(name: "lun", arg: 3, scope: !6937, file: !3, line: 849, type: !410)
!6945 = !DILocation(line: 849, column: 75, scope: !6937)
!6946 = !DILocation(line: 851, column: 9, scope: !6937)
!6947 = !DILocation(line: 851, column: 14, scope: !6937)
!6948 = !DILocation(line: 851, column: 23, scope: !6937)
!6949 = !DILocation(line: 851, column: 27, scope: !6937)
!6950 = !DILocation(line: 851, column: 2, scope: !6937)
!6951 = distinct !DISubprogram(name: "list_del", scope: !6952, file: !6952, line: 144, type: !6953, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6952 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!6953 = !DISubroutineType(types: !6954)
!6954 = !{null, !197}
!6955 = !DILocalVariable(name: "entry", arg: 1, scope: !6951, file: !6952, line: 144, type: !197)
!6956 = !DILocation(line: 144, column: 47, scope: !6951)
!6957 = !DILocation(line: 146, column: 19, scope: !6951)
!6958 = !DILocation(line: 146, column: 2, scope: !6951)
!6959 = !DILocation(line: 147, column: 2, scope: !6951)
!6960 = !DILocation(line: 147, column: 9, scope: !6951)
!6961 = !DILocation(line: 147, column: 14, scope: !6951)
!6962 = !DILocation(line: 148, column: 2, scope: !6951)
!6963 = !DILocation(line: 148, column: 9, scope: !6951)
!6964 = !DILocation(line: 148, column: 14, scope: !6951)
!6965 = !DILocation(line: 149, column: 1, scope: !6951)
!6966 = distinct !DISubprogram(name: "build_srb", scope: !3, file: !3, line: 877, type: !6967, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!6967 = !DISubroutineType(types: !6968)
!6968 = !{null, !4970, !5226, !5234}
!6969 = !DILocalVariable(name: "cmd", arg: 1, scope: !6966, file: !3, line: 877, type: !4970)
!6970 = !DILocation(line: 877, column: 41, scope: !6966)
!6971 = !DILocalVariable(name: "dcb", arg: 2, scope: !6966, file: !3, line: 877, type: !5226)
!6972 = !DILocation(line: 877, column: 67, scope: !6966)
!6973 = !DILocalVariable(name: "srb", arg: 3, scope: !6966, file: !3, line: 878, type: !5234)
!6974 = !DILocation(line: 878, column: 22, scope: !6966)
!6975 = !DILocalVariable(name: "nseg", scope: !6966, file: !3, line: 880, type: !267)
!6976 = !DILocation(line: 880, column: 6, scope: !6966)
!6977 = !DILocalVariable(name: "dir", scope: !6966, file: !3, line: 881, type: !146)
!6978 = !DILocation(line: 881, column: 26, scope: !6966)
!6979 = !DILocation(line: 881, column: 32, scope: !6966)
!6980 = !DILocation(line: 881, column: 37, scope: !6966)
!6981 = !DILocation(line: 882, column: 2, scope: !6966)
!6982 = !DILocation(line: 882, column: 2, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 882, column: 2)
!6984 = !DILocation(line: 885, column: 13, scope: !6966)
!6985 = !DILocation(line: 885, column: 2, scope: !6966)
!6986 = !DILocation(line: 885, column: 7, scope: !6966)
!6987 = !DILocation(line: 885, column: 11, scope: !6966)
!6988 = !DILocation(line: 886, column: 13, scope: !6966)
!6989 = !DILocation(line: 886, column: 2, scope: !6966)
!6990 = !DILocation(line: 886, column: 7, scope: !6966)
!6991 = !DILocation(line: 886, column: 11, scope: !6966)
!6992 = !DILocation(line: 887, column: 2, scope: !6966)
!6993 = !DILocation(line: 887, column: 7, scope: !6966)
!6994 = !DILocation(line: 887, column: 16, scope: !6966)
!6995 = !DILocation(line: 888, column: 2, scope: !6966)
!6996 = !DILocation(line: 888, column: 7, scope: !6966)
!6997 = !DILocation(line: 888, column: 25, scope: !6966)
!6998 = !DILocation(line: 889, column: 2, scope: !6966)
!6999 = !DILocation(line: 889, column: 7, scope: !6966)
!7000 = !DILocation(line: 889, column: 19, scope: !6966)
!7001 = !DILocation(line: 890, column: 2, scope: !6966)
!7002 = !DILocation(line: 890, column: 7, scope: !6966)
!7003 = !DILocation(line: 890, column: 16, scope: !6966)
!7004 = !DILocation(line: 891, column: 2, scope: !6966)
!7005 = !DILocation(line: 891, column: 7, scope: !6966)
!7006 = !DILocation(line: 891, column: 22, scope: !6966)
!7007 = !DILocation(line: 892, column: 2, scope: !6966)
!7008 = !DILocation(line: 892, column: 7, scope: !6966)
!7009 = !DILocation(line: 892, column: 21, scope: !6966)
!7010 = !DILocation(line: 893, column: 2, scope: !6966)
!7011 = !DILocation(line: 893, column: 7, scope: !6966)
!7012 = !DILocation(line: 893, column: 17, scope: !6966)
!7013 = !DILocation(line: 894, column: 2, scope: !6966)
!7014 = !DILocation(line: 894, column: 7, scope: !6966)
!7015 = !DILocation(line: 894, column: 14, scope: !6966)
!7016 = !DILocation(line: 895, column: 2, scope: !6966)
!7017 = !DILocation(line: 895, column: 7, scope: !6966)
!7018 = !DILocation(line: 895, column: 12, scope: !6966)
!7019 = !DILocation(line: 896, column: 2, scope: !6966)
!7020 = !DILocation(line: 896, column: 7, scope: !6966)
!7021 = !DILocation(line: 896, column: 13, scope: !6966)
!7022 = !DILocation(line: 897, column: 2, scope: !6966)
!7023 = !DILocation(line: 897, column: 7, scope: !6966)
!7024 = !DILocation(line: 897, column: 19, scope: !6966)
!7025 = !DILocation(line: 898, column: 2, scope: !6966)
!7026 = !DILocation(line: 898, column: 7, scope: !6966)
!7027 = !DILocation(line: 898, column: 18, scope: !6966)
!7028 = !DILocation(line: 899, column: 2, scope: !6966)
!7029 = !DILocation(line: 899, column: 7, scope: !6966)
!7030 = !DILocation(line: 899, column: 18, scope: !6966)
!7031 = !DILocation(line: 900, column: 2, scope: !6966)
!7032 = !DILocation(line: 900, column: 7, scope: !6966)
!7033 = !DILocation(line: 900, column: 19, scope: !6966)
!7034 = !DILocation(line: 902, column: 22, scope: !6966)
!7035 = !DILocation(line: 902, column: 9, scope: !6966)
!7036 = !DILocation(line: 902, column: 7, scope: !6966)
!7037 = !DILocation(line: 903, column: 2, scope: !6966)
!7038 = !DILocation(line: 903, column: 2, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7040, file: !3, line: 903, column: 2)
!7040 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 903, column: 2)
!7041 = !DILocation(line: 903, column: 2, scope: !7040)
!7042 = !DILocation(line: 903, column: 2, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7039, file: !3, line: 903, column: 2)
!7044 = !DILocation(line: 903, column: 2, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 903, column: 2)
!7046 = !DILocation(line: 903, column: 2, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 903, column: 2)
!7048 = !{i32 -2140875284, i32 -2140875255, i32 -2140875209, i32 -2140875151, i32 -2140875097, i32 -2140875043, i32 -2140874988, i32 -2140874957}
!7049 = !DILocation(line: 903, column: 2, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 903, column: 2)
!7051 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 903, column: 2)
!7052 = !{i32 -2140874513, i32 -2140874506, i32 -2140874452, i32 -2140874421, i32 -2140874391}
!7053 = !DILocation(line: 903, column: 2, scope: !7051)
!7054 = !DILocation(line: 905, column: 6, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 905, column: 6)
!7056 = !DILocation(line: 905, column: 10, scope: !7055)
!7057 = !DILocation(line: 905, column: 22, scope: !7055)
!7058 = !DILocation(line: 905, column: 26, scope: !7055)
!7059 = !DILocation(line: 905, column: 6, scope: !6966)
!7060 = !DILocation(line: 906, column: 3, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 905, column: 32)
!7062 = !DILocation(line: 906, column: 3, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 906, column: 3)
!7064 = !DILocation(line: 910, column: 2, scope: !7061)
!7065 = !DILocalVariable(name: "i", scope: !7066, file: !3, line: 911, type: !267)
!7066 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 910, column: 9)
!7067 = !DILocation(line: 911, column: 7, scope: !7066)
!7068 = !DILocalVariable(name: "reqlen", scope: !7066, file: !3, line: 912, type: !250)
!7069 = !DILocation(line: 912, column: 7, scope: !7066)
!7070 = !DILocation(line: 912, column: 29, scope: !7066)
!7071 = !DILocation(line: 912, column: 16, scope: !7066)
!7072 = !DILocalVariable(name: "sg", scope: !7066, file: !3, line: 913, type: !5009)
!7073 = !DILocation(line: 913, column: 23, scope: !7066)
!7074 = !DILocalVariable(name: "sgp", scope: !7066, file: !3, line: 914, type: !5241)
!7075 = !DILocation(line: 914, column: 19, scope: !7066)
!7076 = !DILocation(line: 914, column: 25, scope: !7066)
!7077 = !DILocation(line: 914, column: 30, scope: !7066)
!7078 = !DILocation(line: 916, column: 19, scope: !7066)
!7079 = !DILocation(line: 916, column: 3, scope: !7066)
!7080 = !DILocation(line: 916, column: 8, scope: !7066)
!7081 = !DILocation(line: 916, column: 17, scope: !7066)
!7082 = !DILocation(line: 918, column: 3, scope: !7066)
!7083 = !DILocation(line: 918, column: 3, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 918, column: 3)
!7085 = !DILocation(line: 923, column: 3, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 923, column: 3)
!7087 = !DILocation(line: 923, column: 3, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 923, column: 3)
!7089 = !DILocalVariable(name: "busaddr", scope: !7090, file: !3, line: 924, type: !250)
!7090 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 923, column: 47)
!7091 = !DILocation(line: 924, column: 8, scope: !7090)
!7092 = !DILocation(line: 924, column: 23, scope: !7090)
!7093 = !DILocation(line: 924, column: 18, scope: !7090)
!7094 = !DILocalVariable(name: "seglen", scope: !7090, file: !3, line: 925, type: !250)
!7095 = !DILocation(line: 925, column: 8, scope: !7090)
!7096 = !DILocation(line: 925, column: 22, scope: !7090)
!7097 = !DILocation(line: 925, column: 26, scope: !7090)
!7098 = !DILocation(line: 926, column: 21, scope: !7090)
!7099 = !DILocation(line: 926, column: 4, scope: !7090)
!7100 = !DILocation(line: 926, column: 8, scope: !7090)
!7101 = !DILocation(line: 926, column: 11, scope: !7090)
!7102 = !DILocation(line: 926, column: 19, scope: !7090)
!7103 = !DILocation(line: 927, column: 20, scope: !7090)
!7104 = !DILocation(line: 927, column: 4, scope: !7090)
!7105 = !DILocation(line: 927, column: 8, scope: !7090)
!7106 = !DILocation(line: 927, column: 11, scope: !7090)
!7107 = !DILocation(line: 927, column: 18, scope: !7090)
!7108 = !DILocation(line: 928, column: 30, scope: !7090)
!7109 = !DILocation(line: 928, column: 4, scope: !7090)
!7110 = !DILocation(line: 928, column: 9, scope: !7090)
!7111 = !DILocation(line: 928, column: 27, scope: !7090)
!7112 = !DILocation(line: 929, column: 3, scope: !7090)
!7113 = distinct !{!7113, !7085, !7114}
!7114 = !DILocation(line: 929, column: 3, scope: !7086)
!7115 = !DILocation(line: 930, column: 10, scope: !7066)
!7116 = !DILocation(line: 930, column: 15, scope: !7066)
!7117 = !DILocation(line: 930, column: 24, scope: !7066)
!7118 = !DILocation(line: 930, column: 7, scope: !7066)
!7119 = !DILocation(line: 936, column: 7, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 936, column: 7)
!7121 = !DILocation(line: 936, column: 12, scope: !7120)
!7122 = !DILocation(line: 936, column: 32, scope: !7120)
!7123 = !DILocation(line: 936, column: 30, scope: !7120)
!7124 = !DILocation(line: 936, column: 7, scope: !7066)
!7125 = !DILocation(line: 937, column: 20, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 936, column: 40)
!7127 = !DILocation(line: 937, column: 25, scope: !7126)
!7128 = !DILocation(line: 937, column: 45, scope: !7126)
!7129 = !DILocation(line: 937, column: 43, scope: !7126)
!7130 = !DILocation(line: 937, column: 4, scope: !7126)
!7131 = !DILocation(line: 937, column: 9, scope: !7126)
!7132 = !DILocation(line: 937, column: 16, scope: !7126)
!7133 = !DILocation(line: 938, column: 29, scope: !7126)
!7134 = !DILocation(line: 938, column: 4, scope: !7126)
!7135 = !DILocation(line: 938, column: 9, scope: !7126)
!7136 = !DILocation(line: 938, column: 27, scope: !7126)
!7137 = !DILocation(line: 939, column: 3, scope: !7126)
!7138 = !DILocation(line: 942, column: 7, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 942, column: 7)
!7140 = !DILocation(line: 942, column: 12, scope: !7139)
!7141 = !DILocation(line: 942, column: 24, scope: !7139)
!7142 = !DILocation(line: 942, column: 36, scope: !7139)
!7143 = !DILocation(line: 943, column: 7, scope: !7139)
!7144 = !DILocation(line: 943, column: 12, scope: !7139)
!7145 = !DILocation(line: 943, column: 30, scope: !7139)
!7146 = !DILocation(line: 942, column: 7, scope: !7066)
!7147 = !DILocation(line: 944, column: 4, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 943, column: 35)
!7149 = !DILocation(line: 944, column: 9, scope: !7148)
!7150 = !DILocation(line: 944, column: 26, scope: !7148)
!7151 = !DILocation(line: 945, column: 4, scope: !7148)
!7152 = !DILocation(line: 945, column: 9, scope: !7148)
!7153 = !DILocation(line: 945, column: 15, scope: !7148)
!7154 = !DILocation(line: 946, column: 3, scope: !7148)
!7155 = !DILocation(line: 948, column: 22, scope: !7066)
!7156 = !DILocation(line: 948, column: 3, scope: !7066)
!7157 = !DILocation(line: 948, column: 8, scope: !7066)
!7158 = !DILocation(line: 948, column: 20, scope: !7066)
!7159 = !DILocation(line: 951, column: 3, scope: !7066)
!7160 = !DILocation(line: 951, column: 3, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 951, column: 3)
!7162 = !DILocation(line: 955, column: 24, scope: !6966)
!7163 = !DILocation(line: 955, column: 29, scope: !6966)
!7164 = !DILocation(line: 955, column: 2, scope: !6966)
!7165 = !DILocation(line: 955, column: 7, scope: !6966)
!7166 = !DILocation(line: 955, column: 22, scope: !6966)
!7167 = !DILocation(line: 956, column: 1, scope: !6966)
!7168 = distinct !DISubprogram(name: "list_empty", scope: !6952, file: !6952, line: 280, type: !7169, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7169 = !DISubroutineType(types: !7170)
!7170 = !{!267, !7171}
!7171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7172, size: 64)
!7172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !193)
!7173 = !DILocalVariable(name: "head", arg: 1, scope: !7168, file: !6952, line: 280, type: !7171)
!7174 = !DILocation(line: 280, column: 54, scope: !7168)
!7175 = !DILocation(line: 282, column: 9, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7168, file: !6952, line: 282, column: 9)
!7177 = !DILocation(line: 282, column: 9, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7176, file: !6952, line: 282, column: 9)
!7179 = !DILocation(line: 282, column: 34, scope: !7168)
!7180 = !DILocation(line: 282, column: 31, scope: !7168)
!7181 = !DILocation(line: 282, column: 2, scope: !7168)
!7182 = distinct !DISubprogram(name: "list_add_tail", scope: !6952, file: !6952, line: 98, type: !7183, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7183 = !DISubroutineType(types: !7184)
!7184 = !{null, !197, !197}
!7185 = !DILocalVariable(name: "new", arg: 1, scope: !7182, file: !6952, line: 98, type: !197)
!7186 = !DILocation(line: 98, column: 52, scope: !7182)
!7187 = !DILocalVariable(name: "head", arg: 2, scope: !7182, file: !6952, line: 98, type: !197)
!7188 = !DILocation(line: 98, column: 75, scope: !7182)
!7189 = !DILocation(line: 100, column: 13, scope: !7182)
!7190 = !DILocation(line: 100, column: 18, scope: !7182)
!7191 = !DILocation(line: 100, column: 24, scope: !7182)
!7192 = !DILocation(line: 100, column: 30, scope: !7182)
!7193 = !DILocation(line: 100, column: 2, scope: !7182)
!7194 = !DILocation(line: 101, column: 1, scope: !7182)
!7195 = distinct !DISubprogram(name: "waiting_process_next", scope: !3, file: !3, line: 770, type: !6113, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7196 = !DILocalVariable(name: "acb", arg: 1, scope: !7195, file: !3, line: 770, type: !185)
!7197 = !DILocation(line: 770, column: 56, scope: !7195)
!7198 = !DILocalVariable(name: "start", scope: !7195, file: !3, line: 772, type: !5226)
!7199 = !DILocation(line: 772, column: 23, scope: !7195)
!7200 = !DILocalVariable(name: "pos", scope: !7195, file: !3, line: 773, type: !5226)
!7201 = !DILocation(line: 773, column: 23, scope: !7195)
!7202 = !DILocalVariable(name: "dcb", scope: !7195, file: !3, line: 774, type: !5226)
!7203 = !DILocation(line: 774, column: 23, scope: !7195)
!7204 = !DILocalVariable(name: "srb", scope: !7195, file: !3, line: 775, type: !5234)
!7205 = !DILocation(line: 775, column: 21, scope: !7195)
!7206 = !DILocalVariable(name: "dcb_list_head", scope: !7195, file: !3, line: 776, type: !197)
!7207 = !DILocation(line: 776, column: 20, scope: !7195)
!7208 = !DILocation(line: 776, column: 37, scope: !7195)
!7209 = !DILocation(line: 776, column: 42, scope: !7195)
!7210 = !DILocation(line: 778, column: 6, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7195, file: !3, line: 778, column: 6)
!7212 = !DILocation(line: 778, column: 11, scope: !7211)
!7213 = !DILocation(line: 779, column: 6, scope: !7211)
!7214 = !DILocation(line: 779, column: 10, scope: !7211)
!7215 = !DILocation(line: 779, column: 15, scope: !7211)
!7216 = !DILocation(line: 779, column: 24, scope: !7211)
!7217 = !DILocation(line: 778, column: 6, scope: !7195)
!7218 = !DILocation(line: 780, column: 3, scope: !7211)
!7219 = !DILocation(line: 782, column: 21, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7195, file: !3, line: 782, column: 6)
!7221 = !DILocation(line: 782, column: 26, scope: !7220)
!7222 = !DILocation(line: 782, column: 6, scope: !7220)
!7223 = !DILocation(line: 782, column: 6, scope: !7195)
!7224 = !DILocation(line: 783, column: 14, scope: !7220)
!7225 = !DILocation(line: 783, column: 19, scope: !7220)
!7226 = !DILocation(line: 783, column: 3, scope: !7220)
!7227 = !DILocation(line: 785, column: 17, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7195, file: !3, line: 785, column: 6)
!7229 = !DILocation(line: 785, column: 6, scope: !7228)
!7230 = !DILocation(line: 785, column: 6, scope: !7195)
!7231 = !DILocation(line: 786, column: 3, scope: !7228)
!7232 = !DILocalVariable(name: "__mptr", scope: !7233, file: !3, line: 792, type: !256)
!7233 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 792, column: 2)
!7234 = distinct !DILexicalBlock(scope: !7195, file: !3, line: 792, column: 2)
!7235 = !DILocation(line: 792, column: 2, scope: !7233)
!7236 = !DILocation(line: 792, column: 2, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 792, column: 2)
!7238 = !DILocation(line: 792, column: 2, scope: !7234)
!7239 = !DILocation(line: 792, column: 2, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 792, column: 2)
!7241 = !DILocation(line: 793, column: 7, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 793, column: 7)
!7243 = !DILocation(line: 793, column: 14, scope: !7242)
!7244 = !DILocation(line: 793, column: 19, scope: !7242)
!7245 = !DILocation(line: 793, column: 11, scope: !7242)
!7246 = !DILocation(line: 793, column: 7, scope: !7240)
!7247 = !DILocation(line: 794, column: 12, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 793, column: 34)
!7249 = !DILocation(line: 794, column: 10, scope: !7248)
!7250 = !DILocation(line: 795, column: 4, scope: !7248)
!7251 = !DILocalVariable(name: "__mptr", scope: !7252, file: !3, line: 792, type: !256)
!7252 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 792, column: 2)
!7253 = !DILocation(line: 792, column: 2, scope: !7252)
!7254 = !DILocation(line: 792, column: 2, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 792, column: 2)
!7256 = distinct !{!7256, !7238, !7257}
!7257 = !DILocation(line: 796, column: 3, scope: !7234)
!7258 = !DILocation(line: 797, column: 7, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7195, file: !3, line: 797, column: 6)
!7260 = !DILocation(line: 797, column: 6, scope: !7195)
!7261 = !DILocalVariable(name: "__mptr", scope: !7262, file: !3, line: 799, type: !256)
!7262 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 799, column: 11)
!7263 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 797, column: 14)
!7264 = !DILocation(line: 799, column: 11, scope: !7262)
!7265 = !DILocation(line: 799, column: 11, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 799, column: 11)
!7267 = !DILocation(line: 799, column: 9, scope: !7263)
!7268 = !DILocation(line: 800, column: 24, scope: !7263)
!7269 = !DILocation(line: 800, column: 3, scope: !7263)
!7270 = !DILocation(line: 800, column: 8, scope: !7263)
!7271 = !DILocation(line: 800, column: 22, scope: !7263)
!7272 = !DILocation(line: 801, column: 2, scope: !7263)
!7273 = !DILocation(line: 808, column: 8, scope: !7195)
!7274 = !DILocation(line: 808, column: 6, scope: !7195)
!7275 = !DILocation(line: 809, column: 2, scope: !7195)
!7276 = !DILocalVariable(name: "waiting_list_head", scope: !7277, file: !3, line: 810, type: !197)
!7277 = distinct !DILexicalBlock(scope: !7195, file: !3, line: 809, column: 5)
!7278 = !DILocation(line: 810, column: 21, scope: !7277)
!7279 = !DILocation(line: 810, column: 42, scope: !7277)
!7280 = !DILocation(line: 810, column: 47, scope: !7277)
!7281 = !DILocation(line: 813, column: 37, scope: !7277)
!7282 = !DILocation(line: 814, column: 9, scope: !7277)
!7283 = !DILocation(line: 814, column: 14, scope: !7277)
!7284 = !DILocation(line: 813, column: 24, scope: !7277)
!7285 = !DILocation(line: 813, column: 3, scope: !7277)
!7286 = !DILocation(line: 813, column: 8, scope: !7277)
!7287 = !DILocation(line: 813, column: 22, scope: !7277)
!7288 = !DILocation(line: 816, column: 18, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7277, file: !3, line: 816, column: 7)
!7290 = !DILocation(line: 816, column: 7, scope: !7289)
!7291 = !DILocation(line: 816, column: 37, scope: !7289)
!7292 = !DILocation(line: 817, column: 7, scope: !7289)
!7293 = !DILocation(line: 817, column: 12, scope: !7289)
!7294 = !DILocation(line: 817, column: 38, scope: !7289)
!7295 = !DILocation(line: 817, column: 43, scope: !7289)
!7296 = !DILocation(line: 817, column: 27, scope: !7289)
!7297 = !DILocation(line: 817, column: 24, scope: !7289)
!7298 = !DILocation(line: 816, column: 7, scope: !7277)
!7299 = !DILocation(line: 819, column: 23, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 817, column: 60)
!7301 = !DILocation(line: 819, column: 38, scope: !7300)
!7302 = !DILocation(line: 819, column: 10, scope: !7300)
!7303 = !DILocation(line: 819, column: 8, scope: !7300)
!7304 = !DILocation(line: 820, column: 3, scope: !7300)
!7305 = !DILocalVariable(name: "__mptr", scope: !7306, file: !3, line: 821, type: !256)
!7306 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 821, column: 10)
!7307 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 820, column: 10)
!7308 = !DILocation(line: 821, column: 10, scope: !7306)
!7309 = !DILocation(line: 821, column: 10, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 821, column: 10)
!7311 = !DILocation(line: 821, column: 8, scope: !7307)
!7312 = !DILocation(line: 825, column: 20, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 825, column: 8)
!7314 = !DILocation(line: 825, column: 25, scope: !7313)
!7315 = !DILocation(line: 825, column: 30, scope: !7313)
!7316 = !DILocation(line: 825, column: 9, scope: !7313)
!7317 = !DILocation(line: 825, column: 8, scope: !7307)
!7318 = !DILocation(line: 826, column: 16, scope: !7313)
!7319 = !DILocation(line: 826, column: 21, scope: !7313)
!7320 = !DILocation(line: 826, column: 28, scope: !7313)
!7321 = !DILocation(line: 826, column: 33, scope: !7313)
!7322 = !DILocation(line: 826, column: 5, scope: !7313)
!7323 = !DILocation(line: 828, column: 23, scope: !7313)
!7324 = !DILocation(line: 828, column: 5, scope: !7313)
!7325 = !DILocation(line: 829, column: 4, scope: !7307)
!7326 = !DILocation(line: 831, column: 2, scope: !7277)
!7327 = !DILocation(line: 831, column: 11, scope: !7195)
!7328 = !DILocation(line: 831, column: 18, scope: !7195)
!7329 = !DILocation(line: 831, column: 15, scope: !7195)
!7330 = distinct !{!7330, !7275, !7331}
!7331 = !DILocation(line: 831, column: 23, scope: !7195)
!7332 = !DILocation(line: 832, column: 1, scope: !7195)
!7333 = distinct !DISubprogram(name: "send_srb", scope: !3, file: !3, line: 856, type: !7334, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7334 = !DISubroutineType(types: !7335)
!7335 = !{null, !185, !5234}
!7336 = !DILocalVariable(name: "acb", arg: 1, scope: !7333, file: !3, line: 856, type: !185)
!7337 = !DILocation(line: 856, column: 44, scope: !7333)
!7338 = !DILocalVariable(name: "srb", arg: 2, scope: !7333, file: !3, line: 856, type: !5234)
!7339 = !DILocation(line: 856, column: 68, scope: !7333)
!7340 = !DILocalVariable(name: "dcb", scope: !7333, file: !3, line: 858, type: !5226)
!7341 = !DILocation(line: 858, column: 23, scope: !7333)
!7342 = !DILocation(line: 858, column: 29, scope: !7333)
!7343 = !DILocation(line: 858, column: 34, scope: !7333)
!7344 = !DILocation(line: 860, column: 6, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 860, column: 6)
!7346 = !DILocation(line: 860, column: 11, scope: !7345)
!7347 = !DILocation(line: 860, column: 37, scope: !7345)
!7348 = !DILocation(line: 860, column: 42, scope: !7345)
!7349 = !DILocation(line: 860, column: 26, scope: !7345)
!7350 = !DILocation(line: 860, column: 23, scope: !7345)
!7351 = !DILocation(line: 860, column: 58, scope: !7345)
!7352 = !DILocation(line: 861, column: 6, scope: !7345)
!7353 = !DILocation(line: 861, column: 11, scope: !7345)
!7354 = !DILocation(line: 861, column: 22, scope: !7345)
!7355 = !DILocation(line: 862, column: 7, scope: !7345)
!7356 = !DILocation(line: 862, column: 12, scope: !7345)
!7357 = !DILocation(line: 862, column: 21, scope: !7345)
!7358 = !DILocation(line: 860, column: 6, scope: !7333)
!7359 = !DILocation(line: 863, column: 18, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 862, column: 65)
!7361 = !DILocation(line: 863, column: 23, scope: !7360)
!7362 = !DILocation(line: 863, column: 30, scope: !7360)
!7363 = !DILocation(line: 863, column: 35, scope: !7360)
!7364 = !DILocation(line: 863, column: 3, scope: !7360)
!7365 = !DILocation(line: 864, column: 24, scope: !7360)
!7366 = !DILocation(line: 864, column: 3, scope: !7360)
!7367 = !DILocation(line: 865, column: 3, scope: !7360)
!7368 = !DILocation(line: 868, column: 18, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 868, column: 6)
!7370 = !DILocation(line: 868, column: 23, scope: !7369)
!7371 = !DILocation(line: 868, column: 28, scope: !7369)
!7372 = !DILocation(line: 868, column: 7, scope: !7369)
!7373 = !DILocation(line: 868, column: 6, scope: !7333)
!7374 = !DILocation(line: 869, column: 18, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 868, column: 34)
!7376 = !DILocation(line: 869, column: 23, scope: !7375)
!7377 = !DILocation(line: 869, column: 30, scope: !7375)
!7378 = !DILocation(line: 869, column: 35, scope: !7375)
!7379 = !DILocation(line: 869, column: 3, scope: !7375)
!7380 = !DILocation(line: 870, column: 2, scope: !7375)
!7381 = !DILocation(line: 871, column: 13, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 870, column: 9)
!7383 = !DILocation(line: 871, column: 18, scope: !7382)
!7384 = !DILocation(line: 871, column: 25, scope: !7382)
!7385 = !DILocation(line: 871, column: 30, scope: !7382)
!7386 = !DILocation(line: 871, column: 3, scope: !7382)
!7387 = !DILocation(line: 872, column: 21, scope: !7382)
!7388 = !DILocation(line: 872, column: 3, scope: !7382)
!7389 = !DILocation(line: 874, column: 1, scope: !7333)
!7390 = distinct !DISubprogram(name: "__list_del_entry", scope: !6952, file: !6952, line: 130, type: !6953, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7391 = !DILocalVariable(name: "entry", arg: 1, scope: !7390, file: !6952, line: 130, type: !197)
!7392 = !DILocation(line: 130, column: 55, scope: !7390)
!7393 = !DILocation(line: 132, column: 30, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7390, file: !6952, line: 132, column: 6)
!7395 = !DILocation(line: 132, column: 7, scope: !7394)
!7396 = !DILocation(line: 132, column: 6, scope: !7390)
!7397 = !DILocation(line: 133, column: 3, scope: !7394)
!7398 = !DILocation(line: 135, column: 13, scope: !7390)
!7399 = !DILocation(line: 135, column: 20, scope: !7390)
!7400 = !DILocation(line: 135, column: 26, scope: !7390)
!7401 = !DILocation(line: 135, column: 33, scope: !7390)
!7402 = !DILocation(line: 135, column: 2, scope: !7390)
!7403 = !DILocation(line: 136, column: 1, scope: !7390)
!7404 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !6952, file: !6952, line: 51, type: !7405, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7405 = !DISubroutineType(types: !7406)
!7406 = !{!690, !197}
!7407 = !DILocalVariable(name: "entry", arg: 1, scope: !7404, file: !6952, line: 51, type: !197)
!7408 = !DILocation(line: 51, column: 61, scope: !7404)
!7409 = !DILocation(line: 53, column: 2, scope: !7404)
!7410 = distinct !DISubprogram(name: "__list_del", scope: !6952, file: !6952, line: 110, type: !7183, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7411 = !DILocalVariable(name: "prev", arg: 1, scope: !7410, file: !6952, line: 110, type: !197)
!7412 = !DILocation(line: 110, column: 50, scope: !7410)
!7413 = !DILocalVariable(name: "next", arg: 2, scope: !7410, file: !6952, line: 110, type: !197)
!7414 = !DILocation(line: 110, column: 75, scope: !7410)
!7415 = !DILocation(line: 112, column: 15, scope: !7410)
!7416 = !DILocation(line: 112, column: 2, scope: !7410)
!7417 = !DILocation(line: 112, column: 8, scope: !7410)
!7418 = !DILocation(line: 112, column: 13, scope: !7410)
!7419 = !DILocation(line: 113, column: 2, scope: !7410)
!7420 = !DILocation(line: 113, column: 2, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7410, file: !6952, line: 113, column: 2)
!7422 = !DILocation(line: 113, column: 2, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7421, file: !6952, line: 113, column: 2)
!7424 = !DILocation(line: 113, column: 2, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7421, file: !6952, line: 113, column: 2)
!7426 = !DILocation(line: 114, column: 1, scope: !7410)
!7427 = distinct !DISubprogram(name: "scsi_bufflen", scope: !4972, file: !4972, line: 189, type: !7428, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7428 = !DISubroutineType(types: !7429)
!7429 = !{!7, !4970}
!7430 = !DILocalVariable(name: "cmd", arg: 1, scope: !7427, file: !4972, line: 189, type: !4970)
!7431 = !DILocation(line: 189, column: 55, scope: !7427)
!7432 = !DILocation(line: 191, column: 9, scope: !7427)
!7433 = !DILocation(line: 191, column: 14, scope: !7427)
!7434 = !DILocation(line: 191, column: 18, scope: !7427)
!7435 = !DILocation(line: 191, column: 2, scope: !7427)
!7436 = distinct !DISubprogram(name: "scsi_sglist", scope: !4972, file: !4972, line: 184, type: !7437, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7437 = !DISubroutineType(types: !7438)
!7438 = !{!5009, !4970}
!7439 = !DILocalVariable(name: "cmd", arg: 1, scope: !7436, file: !4972, line: 184, type: !4970)
!7440 = !DILocation(line: 184, column: 65, scope: !7436)
!7441 = !DILocation(line: 186, column: 9, scope: !7436)
!7442 = !DILocation(line: 186, column: 14, scope: !7436)
!7443 = !DILocation(line: 186, column: 18, scope: !7436)
!7444 = !DILocation(line: 186, column: 24, scope: !7436)
!7445 = !DILocation(line: 186, column: 2, scope: !7436)
!7446 = !DILocalVariable(name: "dev", arg: 1, scope: !5838, file: !5839, line: 271, type: !1977)
!7447 = !DILocation(line: 271, column: 62, scope: !5838)
!7448 = !DILocalVariable(name: "ptr", arg: 2, scope: !5838, file: !5839, line: 271, type: !256)
!7449 = !DILocation(line: 271, column: 73, scope: !5838)
!7450 = !DILocalVariable(name: "size", arg: 3, scope: !5838, file: !5839, line: 272, type: !823)
!7451 = !DILocation(line: 272, column: 10, scope: !5838)
!7452 = !DILocalVariable(name: "dir", arg: 4, scope: !5838, file: !5839, line: 272, type: !146)
!7453 = !DILocation(line: 272, column: 40, scope: !5838)
!7454 = !DILocalVariable(name: "attrs", arg: 5, scope: !5838, file: !5839, line: 272, type: !248)
!7455 = !DILocation(line: 272, column: 59, scope: !5838)
!7456 = !DILocalVariable(name: "__ret_warn_once", scope: !7457, file: !5839, line: 275, type: !267)
!7457 = distinct !DILexicalBlock(scope: !7458, file: !5839, line: 275, column: 6)
!7458 = distinct !DILexicalBlock(scope: !5838, file: !5839, line: 275, column: 6)
!7459 = !DILocation(line: 275, column: 6, scope: !7457)
!7460 = !DILocation(line: 275, column: 6, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7457, file: !5839, line: 275, column: 6)
!7462 = !DILocation(line: 0, scope: !7461)
!7463 = !DILocation(line: 275, column: 6, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7461, file: !5839, line: 275, column: 6)
!7465 = !DILocalVariable(name: "__ret_warn_on", scope: !7466, file: !5839, line: 275, type: !267)
!7466 = distinct !DILexicalBlock(scope: !7464, file: !5839, line: 275, column: 6)
!7467 = !DILocation(line: 275, column: 6, scope: !7466)
!7468 = !DILocation(line: 275, column: 6, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7466, file: !5839, line: 275, column: 6)
!7470 = !DILocation(line: 275, column: 6, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7469, file: !5839, line: 275, column: 6)
!7472 = !DILocation(line: 275, column: 6, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7471, file: !5839, line: 275, column: 6)
!7474 = !DILocation(line: 275, column: 6, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7471, file: !5839, line: 275, column: 6)
!7476 = !DILocation(line: 275, column: 6, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7475, file: !5839, line: 275, column: 6)
!7478 = !DILocation(line: 275, column: 6, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7475, file: !5839, line: 275, column: 6)
!7480 = !{i32 -2141128126, i32 -2141128097, i32 -2141128051, i32 -2141127993, i32 -2141127939, i32 -2141127885, i32 -2141127830, i32 -2141127799}
!7481 = !DILocation(line: 275, column: 6, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7475, file: !5839, line: 275, column: 6)
!7483 = !{i32 -2141127379, i32 -2141127372, i32 -2141127320, i32 -2141127289, i32 -2141127259}
!7484 = !DILocation(line: 275, column: 6, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7475, file: !5839, line: 275, column: 6)
!7486 = !DILocation(line: 275, column: 6, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7471, file: !5839, line: 275, column: 6)
!7488 = !DILocation(line: 275, column: 6, scope: !7458)
!7489 = !DILocation(line: 275, column: 6, scope: !5838)
!7490 = !DILocation(line: 277, column: 3, scope: !7458)
!7491 = !DILocation(line: 278, column: 23, scope: !5838)
!7492 = !DILocation(line: 278, column: 28, scope: !5838)
!7493 = !DILocation(line: 278, column: 33, scope: !5838)
!7494 = !DILocation(line: 278, column: 2, scope: !5838)
!7495 = !DILocation(line: 279, column: 28, scope: !5838)
!7496 = !DILocation(line: 279, column: 33, scope: !5838)
!7497 = !DILocation(line: 279, column: 52, scope: !5838)
!7498 = !DILocation(line: 280, column: 4, scope: !5838)
!7499 = !DILocation(line: 280, column: 10, scope: !5838)
!7500 = !DILocation(line: 280, column: 15, scope: !5838)
!7501 = !DILocation(line: 279, column: 9, scope: !5838)
!7502 = !DILocation(line: 279, column: 2, scope: !5838)
!7503 = !DILocation(line: 281, column: 1, scope: !5838)
!7504 = distinct !DISubprogram(name: "dev_name", scope: !114, file: !114, line: 609, type: !7505, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7505 = !DISubroutineType(types: !7506)
!7506 = !{!645, !2337}
!7507 = !DILocalVariable(name: "dev", arg: 1, scope: !7504, file: !114, line: 609, type: !2337)
!7508 = !DILocation(line: 609, column: 57, scope: !7504)
!7509 = !DILocation(line: 612, column: 6, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7504, file: !114, line: 612, column: 6)
!7511 = !DILocation(line: 612, column: 11, scope: !7510)
!7512 = !DILocation(line: 612, column: 6, scope: !7504)
!7513 = !DILocation(line: 613, column: 10, scope: !7510)
!7514 = !DILocation(line: 613, column: 15, scope: !7510)
!7515 = !DILocation(line: 613, column: 3, scope: !7510)
!7516 = !DILocation(line: 615, column: 23, scope: !7504)
!7517 = !DILocation(line: 615, column: 28, scope: !7504)
!7518 = !DILocation(line: 615, column: 9, scope: !7504)
!7519 = !DILocation(line: 615, column: 2, scope: !7504)
!7520 = !DILocation(line: 616, column: 1, scope: !7504)
!7521 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !5839, file: !5839, line: 87, type: !7522, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7522 = !DISubroutineType(types: !7523)
!7523 = !{null, !1977, !1811, !248}
!7524 = !DILocalVariable(name: "dev", arg: 1, scope: !7521, file: !5839, line: 87, type: !1977)
!7525 = !DILocation(line: 87, column: 56, scope: !7521)
!7526 = !DILocalVariable(name: "addr", arg: 2, scope: !7521, file: !5839, line: 87, type: !1811)
!7527 = !DILocation(line: 87, column: 73, scope: !7521)
!7528 = !DILocalVariable(name: "len", arg: 3, scope: !7521, file: !5839, line: 88, type: !248)
!7529 = !DILocation(line: 88, column: 17, scope: !7521)
!7530 = !DILocation(line: 90, column: 1, scope: !7521)
!7531 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !7532, file: !7532, line: 18, type: !7533, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7532 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!7533 = !DISubroutineType(types: !7534)
!7534 = !{!248, !248}
!7535 = !DILocalVariable(name: "x", arg: 1, scope: !7531, file: !7532, line: 18, type: !248)
!7536 = !DILocation(line: 18, column: 63, scope: !7531)
!7537 = !DILocalVariable(name: "y", scope: !7531, file: !7532, line: 20, type: !248)
!7538 = !DILocation(line: 20, column: 16, scope: !7531)
!7539 = !DILocation(line: 20, column: 20, scope: !7531)
!7540 = !DILocation(line: 20, column: 22, scope: !7531)
!7541 = !DILocation(line: 23, column: 6, scope: !7531)
!7542 = !DILocation(line: 23, column: 12, scope: !7531)
!7543 = !DILocation(line: 23, column: 16, scope: !7531)
!7544 = !DILocation(line: 23, column: 14, scope: !7531)
!7545 = !DILocation(line: 23, column: 11, scope: !7531)
!7546 = !DILocation(line: 23, column: 21, scope: !7531)
!7547 = !DILocation(line: 23, column: 55, scope: !7531)
!7548 = !DILocation(line: 23, column: 53, scope: !7531)
!7549 = !DILocation(line: 23, column: 8, scope: !7531)
!7550 = !DILocation(line: 23, column: 4, scope: !7531)
!7551 = !DILocation(line: 25, column: 9, scope: !7531)
!7552 = !DILocation(line: 25, column: 2, scope: !7531)
!7553 = distinct !DISubprogram(name: "kobject_name", scope: !1680, file: !1680, line: 88, type: !7554, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7554 = !DISubroutineType(types: !7555)
!7555 = !{!645, !7556}
!7556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7557, size: 64)
!7557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1679)
!7558 = !DILocalVariable(name: "kobj", arg: 1, scope: !7553, file: !1680, line: 88, type: !7556)
!7559 = !DILocation(line: 88, column: 62, scope: !7553)
!7560 = !DILocation(line: 90, column: 9, scope: !7553)
!7561 = !DILocation(line: 90, column: 15, scope: !7553)
!7562 = !DILocation(line: 90, column: 2, scope: !7553)
!7563 = distinct !DISubprogram(name: "__list_add", scope: !6952, file: !6952, line: 63, type: !7564, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7564 = !DISubroutineType(types: !7565)
!7565 = !{null, !197, !197, !197}
!7566 = !DILocalVariable(name: "new", arg: 1, scope: !7563, file: !6952, line: 63, type: !197)
!7567 = !DILocation(line: 63, column: 49, scope: !7563)
!7568 = !DILocalVariable(name: "prev", arg: 2, scope: !7563, file: !6952, line: 64, type: !197)
!7569 = !DILocation(line: 64, column: 28, scope: !7563)
!7570 = !DILocalVariable(name: "next", arg: 3, scope: !7563, file: !6952, line: 65, type: !197)
!7571 = !DILocation(line: 65, column: 28, scope: !7563)
!7572 = !DILocation(line: 67, column: 24, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7563, file: !6952, line: 67, column: 6)
!7574 = !DILocation(line: 67, column: 29, scope: !7573)
!7575 = !DILocation(line: 67, column: 35, scope: !7573)
!7576 = !DILocation(line: 67, column: 7, scope: !7573)
!7577 = !DILocation(line: 67, column: 6, scope: !7563)
!7578 = !DILocation(line: 68, column: 3, scope: !7573)
!7579 = !DILocation(line: 70, column: 15, scope: !7563)
!7580 = !DILocation(line: 70, column: 2, scope: !7563)
!7581 = !DILocation(line: 70, column: 8, scope: !7563)
!7582 = !DILocation(line: 70, column: 13, scope: !7563)
!7583 = !DILocation(line: 71, column: 14, scope: !7563)
!7584 = !DILocation(line: 71, column: 2, scope: !7563)
!7585 = !DILocation(line: 71, column: 7, scope: !7563)
!7586 = !DILocation(line: 71, column: 12, scope: !7563)
!7587 = !DILocation(line: 72, column: 14, scope: !7563)
!7588 = !DILocation(line: 72, column: 2, scope: !7563)
!7589 = !DILocation(line: 72, column: 7, scope: !7563)
!7590 = !DILocation(line: 72, column: 12, scope: !7563)
!7591 = !DILocation(line: 73, column: 2, scope: !7563)
!7592 = !DILocation(line: 73, column: 2, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7563, file: !6952, line: 73, column: 2)
!7594 = !DILocation(line: 73, column: 2, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7593, file: !6952, line: 73, column: 2)
!7596 = !DILocation(line: 73, column: 2, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7593, file: !6952, line: 73, column: 2)
!7598 = !DILocation(line: 74, column: 1, scope: !7563)
!7599 = distinct !DISubprogram(name: "__list_add_valid", scope: !6952, file: !6952, line: 45, type: !7600, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7600 = !DISubroutineType(types: !7601)
!7601 = !{!690, !197, !197, !197}
!7602 = !DILocalVariable(name: "new", arg: 1, scope: !7599, file: !6952, line: 45, type: !197)
!7603 = !DILocation(line: 45, column: 55, scope: !7599)
!7604 = !DILocalVariable(name: "prev", arg: 2, scope: !7599, file: !6952, line: 46, type: !197)
!7605 = !DILocation(line: 46, column: 23, scope: !7599)
!7606 = !DILocalVariable(name: "next", arg: 3, scope: !7599, file: !6952, line: 47, type: !197)
!7607 = !DILocation(line: 47, column: 23, scope: !7599)
!7608 = !DILocation(line: 49, column: 2, scope: !7599)
!7609 = distinct !DISubprogram(name: "timer_pending", scope: !2180, file: !2180, line: 166, type: !7610, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7610 = !DISubroutineType(types: !7611)
!7611 = !{!267, !7612}
!7612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7613, size: 64)
!7613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2179)
!7614 = !DILocalVariable(name: "timer", arg: 1, scope: !7609, file: !2180, line: 166, type: !7612)
!7615 = !DILocation(line: 166, column: 59, scope: !7609)
!7616 = !DILocation(line: 168, column: 35, scope: !7609)
!7617 = !DILocation(line: 168, column: 42, scope: !7609)
!7618 = !DILocation(line: 168, column: 10, scope: !7609)
!7619 = !DILocation(line: 168, column: 9, scope: !7609)
!7620 = !DILocation(line: 168, column: 2, scope: !7609)
!7621 = distinct !DISubprogram(name: "dcb_get_next", scope: !3, file: !3, line: 706, type: !7622, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7622 = !DISubroutineType(types: !7623)
!7623 = !{!5226, !197, !5226}
!7624 = !DILocalVariable(name: "head", arg: 1, scope: !7621, file: !3, line: 706, type: !197)
!7625 = !DILocation(line: 706, column: 60, scope: !7621)
!7626 = !DILocalVariable(name: "pos", arg: 2, scope: !7621, file: !3, line: 707, type: !5226)
!7627 = !DILocation(line: 707, column: 24, scope: !7621)
!7628 = !DILocalVariable(name: "use_next", scope: !7621, file: !3, line: 709, type: !267)
!7629 = !DILocation(line: 709, column: 6, scope: !7621)
!7630 = !DILocalVariable(name: "next", scope: !7621, file: !3, line: 710, type: !5226)
!7631 = !DILocation(line: 710, column: 23, scope: !7621)
!7632 = !DILocalVariable(name: "i", scope: !7621, file: !3, line: 711, type: !5226)
!7633 = !DILocation(line: 711, column: 23, scope: !7621)
!7634 = !DILocation(line: 713, column: 17, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 713, column: 6)
!7636 = !DILocation(line: 713, column: 6, scope: !7635)
!7637 = !DILocation(line: 713, column: 6, scope: !7621)
!7638 = !DILocation(line: 714, column: 3, scope: !7635)
!7639 = !DILocalVariable(name: "__mptr", scope: !7640, file: !3, line: 717, type: !256)
!7640 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 717, column: 2)
!7641 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 717, column: 2)
!7642 = !DILocation(line: 717, column: 2, scope: !7640)
!7643 = !DILocation(line: 717, column: 2, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 717, column: 2)
!7645 = !DILocation(line: 717, column: 2, scope: !7641)
!7646 = !DILocation(line: 717, column: 2, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 717, column: 2)
!7648 = !DILocation(line: 718, column: 7, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 718, column: 7)
!7650 = !DILocation(line: 718, column: 7, scope: !7647)
!7651 = !DILocation(line: 719, column: 11, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 718, column: 17)
!7653 = !DILocation(line: 719, column: 9, scope: !7652)
!7654 = !DILocation(line: 720, column: 4, scope: !7652)
!7655 = !DILocation(line: 721, column: 14, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 721, column: 14)
!7657 = !DILocation(line: 721, column: 19, scope: !7656)
!7658 = !DILocation(line: 721, column: 16, scope: !7656)
!7659 = !DILocation(line: 721, column: 14, scope: !7649)
!7660 = !DILocation(line: 722, column: 13, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 721, column: 24)
!7662 = !DILocation(line: 723, column: 3, scope: !7661)
!7663 = !DILocalVariable(name: "__mptr", scope: !7664, file: !3, line: 717, type: !256)
!7664 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 717, column: 2)
!7665 = !DILocation(line: 717, column: 2, scope: !7664)
!7666 = !DILocation(line: 717, column: 2, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7664, file: !3, line: 717, column: 2)
!7668 = distinct !{!7668, !7645, !7669}
!7669 = !DILocation(line: 723, column: 3, scope: !7641)
!7670 = !DILocation(line: 725, column: 7, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 725, column: 6)
!7672 = !DILocation(line: 725, column: 6, scope: !7621)
!7673 = !DILocalVariable(name: "__mptr", scope: !7674, file: !3, line: 726, type: !256)
!7674 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 726, column: 10)
!7675 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 726, column: 10)
!7676 = !DILocation(line: 726, column: 10, scope: !7674)
!7677 = !DILocation(line: 726, column: 10, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 726, column: 10)
!7679 = !DILocation(line: 726, column: 10, scope: !7675)
!7680 = !DILocation(line: 726, column: 10, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 726, column: 10)
!7682 = !DILocation(line: 727, column: 18, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 726, column: 45)
!7684 = !DILocation(line: 727, column: 16, scope: !7683)
!7685 = !DILocation(line: 728, column: 11, scope: !7683)
!7686 = !DILocalVariable(name: "__mptr", scope: !7687, file: !3, line: 726, type: !256)
!7687 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 726, column: 10)
!7688 = !DILocation(line: 726, column: 10, scope: !7687)
!7689 = !DILocation(line: 726, column: 10, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7687, file: !3, line: 726, column: 10)
!7691 = distinct !{!7691, !7679, !7692}
!7692 = !DILocation(line: 729, column: 10, scope: !7675)
!7693 = !DILocation(line: 731, column: 9, scope: !7621)
!7694 = !DILocation(line: 731, column: 2, scope: !7621)
!7695 = !DILocation(line: 732, column: 1, scope: !7621)
!7696 = distinct !DISubprogram(name: "list_size", scope: !3, file: !3, line: 696, type: !7697, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7697 = !DISubroutineType(types: !7698)
!7698 = !{!7, !197}
!7699 = !DILocalVariable(name: "head", arg: 1, scope: !7696, file: !3, line: 696, type: !197)
!7700 = !DILocation(line: 696, column: 49, scope: !7696)
!7701 = !DILocalVariable(name: "count", scope: !7696, file: !3, line: 698, type: !7)
!7702 = !DILocation(line: 698, column: 15, scope: !7696)
!7703 = !DILocalVariable(name: "pos", scope: !7696, file: !3, line: 699, type: !197)
!7704 = !DILocation(line: 699, column: 20, scope: !7696)
!7705 = !DILocation(line: 700, column: 2, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7696, file: !3, line: 700, column: 2)
!7707 = !DILocation(line: 700, column: 2, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 700, column: 2)
!7709 = !DILocation(line: 701, column: 8, scope: !7708)
!7710 = !DILocation(line: 701, column: 3, scope: !7708)
!7711 = distinct !{!7711, !7705, !7712}
!7712 = !DILocation(line: 701, column: 8, scope: !7706)
!7713 = !DILocation(line: 702, column: 9, scope: !7696)
!7714 = !DILocation(line: 702, column: 2, scope: !7696)
!7715 = distinct !DISubprogram(name: "start_scsi", scope: !3, file: !3, line: 1356, type: !7716, scopeLine: 1358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!7716 = !DISubroutineType(types: !7717)
!7717 = !{!410, !185, !5226, !5234}
!7718 = !DILocalVariable(name: "acb", arg: 1, scope: !7715, file: !3, line: 1356, type: !185)
!7719 = !DILocation(line: 1356, column: 44, scope: !7715)
!7720 = !DILocalVariable(name: "dcb", arg: 2, scope: !7715, file: !3, line: 1356, type: !5226)
!7721 = !DILocation(line: 1356, column: 70, scope: !7715)
!7722 = !DILocalVariable(name: "srb", arg: 3, scope: !7715, file: !3, line: 1357, type: !5234)
!7723 = !DILocation(line: 1357, column: 22, scope: !7715)
!7724 = !DILocalVariable(name: "s_stat2", scope: !7715, file: !3, line: 1359, type: !918)
!7725 = !DILocation(line: 1359, column: 6, scope: !7715)
!7726 = !DILocalVariable(name: "return_code", scope: !7715, file: !3, line: 1359, type: !918)
!7727 = !DILocation(line: 1359, column: 15, scope: !7715)
!7728 = !DILocalVariable(name: "s_stat", scope: !7715, file: !3, line: 1360, type: !410)
!7729 = !DILocation(line: 1360, column: 5, scope: !7715)
!7730 = !DILocalVariable(name: "scsicommand", scope: !7715, file: !3, line: 1360, type: !410)
!7731 = !DILocation(line: 1360, column: 13, scope: !7715)
!7732 = !DILocalVariable(name: "i", scope: !7715, file: !3, line: 1360, type: !410)
!7733 = !DILocation(line: 1360, column: 26, scope: !7715)
!7734 = !DILocalVariable(name: "identify_message", scope: !7715, file: !3, line: 1360, type: !410)
!7735 = !DILocation(line: 1360, column: 29, scope: !7715)
!7736 = !DILocalVariable(name: "ptr", scope: !7715, file: !3, line: 1361, type: !5619)
!7737 = !DILocation(line: 1361, column: 6, scope: !7715)
!7738 = !DILocation(line: 1362, column: 2, scope: !7715)
!7739 = !DILocation(line: 1362, column: 2, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1362, column: 2)
!7741 = !DILocation(line: 1365, column: 2, scope: !7715)
!7742 = !DILocation(line: 1365, column: 7, scope: !7715)
!7743 = !DILocation(line: 1365, column: 18, scope: !7715)
!7744 = !DILocation(line: 1367, column: 11, scope: !7715)
!7745 = !DILocation(line: 1367, column: 9, scope: !7715)
!7746 = !DILocation(line: 1368, column: 10, scope: !7715)
!7747 = !DILocation(line: 1369, column: 12, scope: !7715)
!7748 = !DILocation(line: 1369, column: 10, scope: !7715)
!7749 = !DILocation(line: 1371, column: 6, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1371, column: 6)
!7751 = !DILocation(line: 1371, column: 13, scope: !7750)
!7752 = !DILocation(line: 1371, column: 6, scope: !7715)
!7753 = !DILocation(line: 1372, column: 3, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7750, file: !3, line: 1371, column: 46)
!7755 = !DILocation(line: 1372, column: 3, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7754, file: !3, line: 1372, column: 3)
!7757 = !DILocation(line: 1385, column: 3, scope: !7754)
!7758 = !DILocation(line: 1388, column: 6, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1388, column: 6)
!7760 = !DILocation(line: 1388, column: 11, scope: !7759)
!7761 = !DILocation(line: 1388, column: 6, scope: !7715)
!7762 = !DILocation(line: 1389, column: 3, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 1388, column: 23)
!7764 = !DILocation(line: 1394, column: 3, scope: !7763)
!7765 = !DILocation(line: 1396, column: 6, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1396, column: 6)
!7767 = !DILocation(line: 1396, column: 48, scope: !7766)
!7768 = !DILocation(line: 1396, column: 6, scope: !7715)
!7769 = !DILocation(line: 1397, column: 3, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 1396, column: 65)
!7771 = !DILocation(line: 1397, column: 3, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 1397, column: 3)
!7773 = !DILocation(line: 1398, column: 3, scope: !7770)
!7774 = !DILocation(line: 1402, column: 6, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1402, column: 6)
!7776 = !DILocation(line: 1402, column: 6, scope: !7715)
!7777 = !DILocation(line: 1403, column: 3, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 1402, column: 54)
!7779 = !DILocation(line: 1403, column: 3, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7778, file: !3, line: 1403, column: 3)
!7781 = !DILocation(line: 1404, column: 3, scope: !7778)
!7782 = !DILocation(line: 1408, column: 13, scope: !7715)
!7783 = !DILocation(line: 1408, column: 2, scope: !7715)
!7784 = !DILocation(line: 1409, column: 2, scope: !7715)
!7785 = !DILocation(line: 1410, column: 2, scope: !7715)
!7786 = !DILocation(line: 1411, column: 2, scope: !7715)
!7787 = !DILocation(line: 1412, column: 2, scope: !7715)
!7788 = !DILocation(line: 1413, column: 2, scope: !7715)
!7789 = !DILocation(line: 1413, column: 7, scope: !7715)
!7790 = !DILocation(line: 1413, column: 18, scope: !7715)
!7791 = !DILocation(line: 1415, column: 21, scope: !7715)
!7792 = !DILocation(line: 1415, column: 26, scope: !7715)
!7793 = !DILocation(line: 1415, column: 19, scope: !7715)
!7794 = !DILocation(line: 1418, column: 6, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1418, column: 6)
!7796 = !DILocation(line: 1418, column: 11, scope: !7795)
!7797 = !DILocation(line: 1418, column: 16, scope: !7795)
!7798 = !DILocation(line: 1418, column: 6, scope: !7715)
!7799 = !DILocation(line: 1419, column: 20, scope: !7795)
!7800 = !DILocation(line: 1419, column: 3, scope: !7795)
!7801 = !DILocation(line: 1421, column: 8, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1421, column: 6)
!7803 = !DILocation(line: 1421, column: 13, scope: !7802)
!7804 = !DILocation(line: 1421, column: 18, scope: !7802)
!7805 = !DILocation(line: 1421, column: 26, scope: !7802)
!7806 = !DILocation(line: 1422, column: 7, scope: !7802)
!7807 = !DILocation(line: 1422, column: 11, scope: !7802)
!7808 = !DILocation(line: 1422, column: 16, scope: !7802)
!7809 = !DILocation(line: 1422, column: 21, scope: !7802)
!7810 = !DILocation(line: 1422, column: 29, scope: !7802)
!7811 = !DILocation(line: 1423, column: 7, scope: !7802)
!7812 = !DILocation(line: 1423, column: 11, scope: !7802)
!7813 = !DILocation(line: 1423, column: 16, scope: !7802)
!7814 = !DILocation(line: 1423, column: 21, scope: !7802)
!7815 = !DILocation(line: 1424, column: 6, scope: !7802)
!7816 = !DILocation(line: 1424, column: 12, scope: !7802)
!7817 = !DILocation(line: 1424, column: 17, scope: !7802)
!7818 = !DILocation(line: 1424, column: 27, scope: !7802)
!7819 = !DILocation(line: 1425, column: 4, scope: !7802)
!7820 = !DILocation(line: 1425, column: 9, scope: !7802)
!7821 = !DILocation(line: 1425, column: 14, scope: !7802)
!7822 = !DILocation(line: 1425, column: 24, scope: !7802)
!7823 = !DILocation(line: 1426, column: 3, scope: !7802)
!7824 = !DILocation(line: 1426, column: 8, scope: !7802)
!7825 = !DILocation(line: 1426, column: 13, scope: !7802)
!7826 = !DILocation(line: 1426, column: 23, scope: !7802)
!7827 = !DILocation(line: 1427, column: 7, scope: !7802)
!7828 = !DILocation(line: 1427, column: 12, scope: !7802)
!7829 = !DILocation(line: 1427, column: 17, scope: !7802)
!7830 = !DILocation(line: 1427, column: 27, scope: !7802)
!7831 = !DILocation(line: 1428, column: 6, scope: !7802)
!7832 = !DILocation(line: 1428, column: 10, scope: !7802)
!7833 = !DILocation(line: 1428, column: 15, scope: !7802)
!7834 = !DILocation(line: 1428, column: 26, scope: !7802)
!7835 = !DILocation(line: 1421, column: 6, scope: !7715)
!7836 = !DILocation(line: 1429, column: 24, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 1428, column: 33)
!7838 = !DILocation(line: 1429, column: 3, scope: !7837)
!7839 = !DILocation(line: 1429, column: 8, scope: !7837)
!7840 = !DILocation(line: 1429, column: 22, scope: !7837)
!7841 = !DILocation(line: 1430, column: 3, scope: !7837)
!7842 = !DILocation(line: 1430, column: 8, scope: !7837)
!7843 = !DILocation(line: 1430, column: 18, scope: !7837)
!7844 = !DILocation(line: 1431, column: 15, scope: !7837)
!7845 = !DILocation(line: 1432, column: 3, scope: !7837)
!7846 = !DILocation(line: 1432, column: 8, scope: !7837)
!7847 = !DILocation(line: 1432, column: 14, scope: !7837)
!7848 = !DILocation(line: 1434, column: 7, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 1434, column: 7)
!7850 = !DILocation(line: 1434, column: 12, scope: !7849)
!7851 = !DILocation(line: 1434, column: 22, scope: !7849)
!7852 = !DILocation(line: 1435, column: 7, scope: !7849)
!7853 = !DILocation(line: 1435, column: 10, scope: !7849)
!7854 = !DILocation(line: 1435, column: 15, scope: !7849)
!7855 = !DILocation(line: 1435, column: 24, scope: !7849)
!7856 = !DILocation(line: 1434, column: 7, scope: !7837)
!7857 = !DILocation(line: 1436, column: 15, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7849, file: !3, line: 1435, column: 43)
!7859 = !DILocation(line: 1436, column: 20, scope: !7858)
!7860 = !DILocation(line: 1436, column: 25, scope: !7858)
!7861 = !DILocation(line: 1436, column: 4, scope: !7858)
!7862 = !DILocation(line: 1437, column: 4, scope: !7858)
!7863 = !DILocation(line: 1440, column: 7, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 1440, column: 7)
!7865 = !DILocation(line: 1440, column: 12, scope: !7864)
!7866 = !DILocation(line: 1440, column: 22, scope: !7864)
!7867 = !DILocation(line: 1441, column: 7, scope: !7864)
!7868 = !DILocation(line: 1441, column: 10, scope: !7864)
!7869 = !DILocation(line: 1441, column: 15, scope: !7864)
!7870 = !DILocation(line: 1441, column: 24, scope: !7864)
!7871 = !DILocation(line: 1440, column: 7, scope: !7837)
!7872 = !DILocation(line: 1442, column: 15, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 1441, column: 41)
!7874 = !DILocation(line: 1442, column: 20, scope: !7873)
!7875 = !DILocation(line: 1442, column: 25, scope: !7873)
!7876 = !DILocation(line: 1442, column: 4, scope: !7873)
!7877 = !DILocation(line: 1443, column: 4, scope: !7873)
!7878 = !DILocation(line: 1445, column: 7, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 1445, column: 7)
!7880 = !DILocation(line: 1445, column: 12, scope: !7879)
!7881 = !DILocation(line: 1445, column: 22, scope: !7879)
!7882 = !DILocation(line: 1446, column: 7, scope: !7879)
!7883 = !DILocation(line: 1446, column: 10, scope: !7879)
!7884 = !DILocation(line: 1446, column: 15, scope: !7879)
!7885 = !DILocation(line: 1446, column: 24, scope: !7879)
!7886 = !DILocation(line: 1445, column: 7, scope: !7837)
!7887 = !DILocation(line: 1447, column: 15, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 1446, column: 43)
!7889 = !DILocation(line: 1447, column: 20, scope: !7888)
!7890 = !DILocation(line: 1447, column: 25, scope: !7888)
!7891 = !DILocation(line: 1447, column: 4, scope: !7888)
!7892 = !DILocation(line: 1448, column: 4, scope: !7888)
!7893 = !DILocation(line: 1450, column: 3, scope: !7837)
!7894 = !DILocation(line: 1450, column: 8, scope: !7837)
!7895 = !DILocation(line: 1450, column: 18, scope: !7837)
!7896 = !DILocation(line: 1451, column: 2, scope: !7837)
!7897 = !DILocation(line: 1453, column: 2, scope: !7715)
!7898 = !DILocation(line: 1455, column: 14, scope: !7715)
!7899 = !DILocation(line: 1456, column: 2, scope: !7715)
!7900 = !DILocation(line: 1456, column: 7, scope: !7715)
!7901 = !DILocation(line: 1456, column: 13, scope: !7715)
!7902 = !DILocation(line: 1458, column: 7, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1458, column: 6)
!7904 = !DILocation(line: 1458, column: 12, scope: !7903)
!7905 = !DILocation(line: 1458, column: 22, scope: !7903)
!7906 = !DILocation(line: 1459, column: 6, scope: !7903)
!7907 = !DILocation(line: 1459, column: 10, scope: !7903)
!7908 = !DILocation(line: 1459, column: 27, scope: !7903)
!7909 = !DILocation(line: 1458, column: 6, scope: !7715)
!7910 = !DILocalVariable(name: "tag_mask", scope: !7911, file: !3, line: 1461, type: !250)
!7911 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 1459, column: 36)
!7912 = !DILocation(line: 1461, column: 7, scope: !7911)
!7913 = !DILocalVariable(name: "tag_number", scope: !7911, file: !3, line: 1462, type: !410)
!7914 = !DILocation(line: 1462, column: 6, scope: !7911)
!7915 = !DILocation(line: 1463, column: 3, scope: !7911)
!7916 = !DILocation(line: 1463, column: 10, scope: !7911)
!7917 = !DILocation(line: 1463, column: 21, scope: !7911)
!7918 = !DILocation(line: 1463, column: 26, scope: !7911)
!7919 = !DILocation(line: 1463, column: 19, scope: !7911)
!7920 = !DILocation(line: 1464, column: 10, scope: !7911)
!7921 = !DILocation(line: 1464, column: 13, scope: !7911)
!7922 = !DILocation(line: 1464, column: 26, scope: !7911)
!7923 = !DILocation(line: 1464, column: 31, scope: !7911)
!7924 = !DILocation(line: 1464, column: 24, scope: !7911)
!7925 = !DILocation(line: 0, scope: !7911)
!7926 = !DILocation(line: 1465, column: 15, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 1464, column: 44)
!7928 = !DILocation(line: 1465, column: 24, scope: !7927)
!7929 = !DILocation(line: 1465, column: 13, scope: !7927)
!7930 = !DILocation(line: 1466, column: 14, scope: !7927)
!7931 = distinct !{!7931, !7915, !7932}
!7932 = !DILocation(line: 1467, column: 3, scope: !7911)
!7933 = !DILocation(line: 1468, column: 7, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 1468, column: 7)
!7935 = !DILocation(line: 1468, column: 21, scope: !7934)
!7936 = !DILocation(line: 1468, column: 26, scope: !7934)
!7937 = !DILocation(line: 1468, column: 18, scope: !7934)
!7938 = !DILocation(line: 1468, column: 7, scope: !7911)
!7939 = !DILocation(line: 1469, column: 4, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 1468, column: 39)
!7941 = !DILocation(line: 1473, column: 4, scope: !7940)
!7942 = !DILocation(line: 1473, column: 9, scope: !7940)
!7943 = !DILocation(line: 1473, column: 15, scope: !7940)
!7944 = !DILocation(line: 1474, column: 4, scope: !7940)
!7945 = !DILocation(line: 1476, column: 4, scope: !7940)
!7946 = !DILocation(line: 1479, column: 3, scope: !7911)
!7947 = !DILocation(line: 1480, column: 3, scope: !7911)
!7948 = !DILocation(line: 1481, column: 20, scope: !7911)
!7949 = !DILocation(line: 1481, column: 3, scope: !7911)
!7950 = !DILocation(line: 1481, column: 8, scope: !7911)
!7951 = !DILocation(line: 1481, column: 17, scope: !7911)
!7952 = !DILocation(line: 1482, column: 21, scope: !7911)
!7953 = !DILocation(line: 1482, column: 3, scope: !7911)
!7954 = !DILocation(line: 1482, column: 8, scope: !7911)
!7955 = !DILocation(line: 1482, column: 19, scope: !7911)
!7956 = !DILocation(line: 1483, column: 15, scope: !7911)
!7957 = !DILocation(line: 1484, column: 3, scope: !7911)
!7958 = !DILocation(line: 1484, column: 8, scope: !7911)
!7959 = !DILocation(line: 1484, column: 14, scope: !7911)
!7960 = !DILocation(line: 1485, column: 2, scope: !7911)
!7961 = !DILocation(line: 1489, column: 2, scope: !7715)
!7962 = !DILocation(line: 1489, column: 2, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1489, column: 2)
!7964 = !DILocation(line: 1492, column: 6, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1492, column: 6)
!7966 = !DILocation(line: 1492, column: 11, scope: !7965)
!7967 = !DILocation(line: 1492, column: 16, scope: !7965)
!7968 = !DILocation(line: 1492, column: 6, scope: !7715)
!7969 = !DILocation(line: 1493, column: 3, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7965, file: !3, line: 1492, column: 33)
!7971 = !DILocation(line: 1494, column: 3, scope: !7970)
!7972 = !DILocation(line: 1495, column: 3, scope: !7970)
!7973 = !DILocation(line: 1496, column: 3, scope: !7970)
!7974 = !DILocation(line: 1497, column: 3, scope: !7970)
!7975 = !DILocation(line: 1498, column: 3, scope: !7970)
!7976 = !DILocation(line: 1499, column: 2, scope: !7970)
!7977 = !DILocation(line: 1500, column: 15, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7965, file: !3, line: 1499, column: 9)
!7979 = !DILocation(line: 1500, column: 20, scope: !7978)
!7980 = !DILocation(line: 1500, column: 25, scope: !7978)
!7981 = !DILocation(line: 1500, column: 7, scope: !7978)
!7982 = !DILocation(line: 1501, column: 10, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7978, file: !3, line: 1501, column: 3)
!7984 = !DILocation(line: 1501, column: 8, scope: !7983)
!7985 = !DILocation(line: 1501, column: 15, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7983, file: !3, line: 1501, column: 3)
!7987 = !DILocation(line: 1501, column: 19, scope: !7986)
!7988 = !DILocation(line: 1501, column: 24, scope: !7986)
!7989 = !DILocation(line: 1501, column: 29, scope: !7986)
!7990 = !DILocation(line: 1501, column: 17, scope: !7986)
!7991 = !DILocation(line: 1501, column: 3, scope: !7983)
!7992 = !DILocation(line: 1502, column: 4, scope: !7986)
!7993 = !DILocation(line: 1501, column: 39, scope: !7986)
!7994 = !DILocation(line: 1501, column: 3, scope: !7986)
!7995 = distinct !{!7995, !7991, !7996}
!7996 = !DILocation(line: 1502, column: 4, scope: !7983)
!7997 = !DILocation(line: 1492, column: 18, scope: !7965)
!7998 = !DILabel(scope: !7715, name: "no_cmd", file: !3, line: 1504)
!7999 = !DILocation(line: 1504, column: 7, scope: !7715)
!8000 = !DILocation(line: 1505, column: 2, scope: !7715)
!8001 = !DILocation(line: 1507, column: 6, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1507, column: 6)
!8003 = !DILocation(line: 1507, column: 48, scope: !8002)
!8004 = !DILocation(line: 1507, column: 6, scope: !7715)
!8005 = !DILocation(line: 1513, column: 3, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 1507, column: 65)
!8007 = !DILocation(line: 1513, column: 3, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 1513, column: 3)
!8009 = !DILocation(line: 1515, column: 3, scope: !8006)
!8010 = !DILocation(line: 1515, column: 8, scope: !8006)
!8011 = !DILocation(line: 1515, column: 14, scope: !8006)
!8012 = !DILocation(line: 1516, column: 12, scope: !8006)
!8013 = !DILocation(line: 1516, column: 17, scope: !8006)
!8014 = !DILocation(line: 1516, column: 3, scope: !8006)
!8015 = !DILocation(line: 1517, column: 3, scope: !8006)
!8016 = !DILocation(line: 1517, column: 8, scope: !8006)
!8017 = !DILocation(line: 1517, column: 18, scope: !8006)
!8018 = !DILocation(line: 1518, column: 15, scope: !8006)
!8019 = !DILocation(line: 1520, column: 2, scope: !8006)
!8020 = !DILocation(line: 1525, column: 3, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 1520, column: 9)
!8022 = !DILocation(line: 1525, column: 8, scope: !8021)
!8023 = !DILocation(line: 1525, column: 19, scope: !8021)
!8024 = !DILocation(line: 1526, column: 21, scope: !8021)
!8025 = !DILocation(line: 1526, column: 3, scope: !8021)
!8026 = !DILocation(line: 1526, column: 8, scope: !8021)
!8027 = !DILocation(line: 1526, column: 19, scope: !8021)
!8028 = !DILocation(line: 1527, column: 21, scope: !8021)
!8029 = !DILocation(line: 1527, column: 3, scope: !8021)
!8030 = !DILocation(line: 1527, column: 8, scope: !8021)
!8031 = !DILocation(line: 1527, column: 19, scope: !8021)
!8032 = !DILocation(line: 1528, column: 15, scope: !8021)
!8033 = !DILocation(line: 1530, column: 3, scope: !8021)
!8034 = !DILocation(line: 1533, column: 3, scope: !8021)
!8035 = !DILocation(line: 1535, column: 9, scope: !7715)
!8036 = !DILocation(line: 1535, column: 2, scope: !7715)
!8037 = !DILocation(line: 1536, column: 1, scope: !7715)
!8038 = distinct !DISubprogram(name: "list_move", scope: !6952, file: !6952, line: 213, type: !7183, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8039 = !DILocalVariable(name: "list", arg: 1, scope: !8038, file: !6952, line: 213, type: !197)
!8040 = !DILocation(line: 213, column: 48, scope: !8038)
!8041 = !DILocalVariable(name: "head", arg: 2, scope: !8038, file: !6952, line: 213, type: !197)
!8042 = !DILocation(line: 213, column: 72, scope: !8038)
!8043 = !DILocation(line: 215, column: 19, scope: !8038)
!8044 = !DILocation(line: 215, column: 2, scope: !8038)
!8045 = !DILocation(line: 216, column: 11, scope: !8038)
!8046 = !DILocation(line: 216, column: 17, scope: !8038)
!8047 = !DILocation(line: 216, column: 2, scope: !8038)
!8048 = !DILocation(line: 217, column: 1, scope: !8038)
!8049 = distinct !DISubprogram(name: "waiting_set_timer", scope: !3, file: !3, line: 756, type: !8050, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8050 = !DISubroutineType(types: !8051)
!8051 = !{null, !185, !248}
!8052 = !DILocalVariable(name: "acb", arg: 1, scope: !8049, file: !3, line: 756, type: !185)
!8053 = !DILocation(line: 756, column: 53, scope: !8049)
!8054 = !DILocalVariable(name: "to", arg: 2, scope: !8049, file: !3, line: 756, type: !248)
!8055 = !DILocation(line: 756, column: 72, scope: !8049)
!8056 = !DILocation(line: 758, column: 21, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 758, column: 6)
!8058 = !DILocation(line: 758, column: 26, scope: !8057)
!8059 = !DILocation(line: 758, column: 6, scope: !8057)
!8060 = !DILocation(line: 758, column: 6, scope: !8049)
!8061 = !DILocation(line: 759, column: 3, scope: !8057)
!8062 = !DILocation(line: 760, column: 6, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 760, column: 6)
!8064 = !DILocation(line: 760, column: 6, scope: !8049)
!8065 = !DILocation(line: 762, column: 7, scope: !8063)
!8066 = !DILocation(line: 762, column: 12, scope: !8063)
!8067 = !DILocation(line: 762, column: 23, scope: !8063)
!8068 = !DILocation(line: 762, column: 32, scope: !8063)
!8069 = !DILocation(line: 761, column: 3, scope: !8063)
!8070 = !DILocation(line: 761, column: 8, scope: !8063)
!8071 = !DILocation(line: 761, column: 22, scope: !8063)
!8072 = !DILocation(line: 761, column: 30, scope: !8063)
!8073 = !DILocation(line: 764, column: 32, scope: !8063)
!8074 = !DILocation(line: 764, column: 42, scope: !8063)
!8075 = !DILocation(line: 764, column: 40, scope: !8063)
!8076 = !DILocation(line: 764, column: 45, scope: !8063)
!8077 = !DILocation(line: 764, column: 3, scope: !8063)
!8078 = !DILocation(line: 764, column: 8, scope: !8063)
!8079 = !DILocation(line: 764, column: 22, scope: !8063)
!8080 = !DILocation(line: 764, column: 30, scope: !8063)
!8081 = !DILocation(line: 765, column: 13, scope: !8049)
!8082 = !DILocation(line: 765, column: 18, scope: !8049)
!8083 = !DILocation(line: 765, column: 2, scope: !8049)
!8084 = !DILocation(line: 766, column: 1, scope: !8049)
!8085 = distinct !DISubprogram(name: "hlist_unhashed_lockless", scope: !6952, file: !6952, line: 819, type: !8086, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8086 = !DISubroutineType(types: !8087)
!8087 = !{!267, !8088}
!8088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8089, size: 64)
!8089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !743)
!8090 = !DILocalVariable(name: "h", arg: 1, scope: !8085, file: !6952, line: 819, type: !8088)
!8091 = !DILocation(line: 819, column: 68, scope: !8085)
!8092 = !DILocation(line: 821, column: 10, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8085, file: !6952, line: 821, column: 10)
!8094 = !DILocation(line: 821, column: 10, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8093, file: !6952, line: 821, column: 10)
!8096 = !DILocation(line: 821, column: 9, scope: !8085)
!8097 = !DILocation(line: 821, column: 2, scope: !8085)
!8098 = distinct !DISubprogram(name: "inb", scope: !8099, file: !8099, line: 334, type: !8100, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8099 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!8100 = !DISubroutineType(types: !8101)
!8101 = !{!412, !267}
!8102 = !DILocalVariable(name: "port", arg: 1, scope: !8098, file: !8099, line: 334, type: !267)
!8103 = !DILocation(line: 334, column: 1, scope: !8098)
!8104 = !DILocalVariable(name: "value", scope: !8098, file: !8099, line: 334, type: !412)
!8105 = !{i32 -2141646453}
!8106 = distinct !DISubprogram(name: "inw", scope: !8099, file: !8099, line: 335, type: !8107, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8107 = !DISubroutineType(types: !8108)
!8108 = !{!315, !267}
!8109 = !DILocalVariable(name: "port", arg: 1, scope: !8106, file: !8099, line: 335, type: !267)
!8110 = !DILocation(line: 335, column: 1, scope: !8106)
!8111 = !DILocalVariable(name: "value", scope: !8106, file: !8099, line: 335, type: !315)
!8112 = !{i32 -2141643710}
!8113 = distinct !DISubprogram(name: "clear_fifo", scope: !3, file: !3, line: 1121, type: !8114, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8114 = !DISubroutineType(types: !8115)
!8115 = !{null, !185, !671}
!8116 = !DILocalVariable(name: "acb", arg: 1, scope: !8113, file: !3, line: 1121, type: !185)
!8117 = !DILocation(line: 1121, column: 53, scope: !8113)
!8118 = !DILocalVariable(name: "txt", arg: 2, scope: !8113, file: !3, line: 1121, type: !671)
!8119 = !DILocation(line: 1121, column: 64, scope: !8113)
!8120 = !DILocation(line: 1131, column: 2, scope: !8113)
!8121 = !DILocation(line: 1132, column: 1, scope: !8113)
!8122 = distinct !DISubprogram(name: "outb", scope: !8099, file: !8099, line: 334, type: !8123, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8123 = !DISubroutineType(types: !8124)
!8124 = !{null, !412, !267}
!8125 = !DILocalVariable(name: "value", arg: 1, scope: !8122, file: !8099, line: 334, type: !412)
!8126 = !DILocation(line: 334, column: 1, scope: !8122)
!8127 = !DILocalVariable(name: "port", arg: 2, scope: !8122, file: !8099, line: 334, type: !267)
!8128 = !{i32 -2141646655}
!8129 = distinct !DISubprogram(name: "build_wdtr", scope: !3, file: !3, line: 1295, type: !8130, scopeLine: 1297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8130 = !DISubroutineType(types: !8131)
!8131 = !{null, !185, !5226, !5234}
!8132 = !DILocalVariable(name: "acb", arg: 1, scope: !8129, file: !3, line: 1295, type: !185)
!8133 = !DILocation(line: 1295, column: 46, scope: !8129)
!8134 = !DILocalVariable(name: "dcb", arg: 2, scope: !8129, file: !3, line: 1295, type: !5226)
!8135 = !DILocation(line: 1295, column: 72, scope: !8129)
!8136 = !DILocalVariable(name: "srb", arg: 3, scope: !8129, file: !3, line: 1296, type: !5234)
!8137 = !DILocation(line: 1296, column: 22, scope: !8129)
!8138 = !DILocalVariable(name: "wide", scope: !8129, file: !3, line: 1298, type: !410)
!8139 = !DILocation(line: 1298, column: 5, scope: !8129)
!8140 = !DILocation(line: 1298, column: 14, scope: !8129)
!8141 = !DILocation(line: 1298, column: 19, scope: !8129)
!8142 = !DILocation(line: 1298, column: 28, scope: !8129)
!8143 = !DILocation(line: 1299, column: 7, scope: !8129)
!8144 = !DILocation(line: 1299, column: 12, scope: !8129)
!8145 = !DILocation(line: 1299, column: 19, scope: !8129)
!8146 = !DILocation(line: 1298, column: 48, scope: !8129)
!8147 = !DILocation(line: 1298, column: 12, scope: !8129)
!8148 = !DILocalVariable(name: "ptr", scope: !8129, file: !3, line: 1300, type: !5619)
!8149 = !DILocation(line: 1300, column: 6, scope: !8129)
!8150 = !DILocation(line: 1300, column: 12, scope: !8129)
!8151 = !DILocation(line: 1300, column: 17, scope: !8129)
!8152 = !DILocation(line: 1300, column: 30, scope: !8129)
!8153 = !DILocation(line: 1300, column: 35, scope: !8129)
!8154 = !DILocation(line: 1300, column: 28, scope: !8129)
!8155 = !DILocation(line: 1301, column: 6, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 1301, column: 6)
!8157 = !DILocation(line: 1301, column: 11, scope: !8156)
!8158 = !DILocation(line: 1301, column: 21, scope: !8156)
!8159 = !DILocation(line: 1301, column: 6, scope: !8129)
!8160 = !DILocation(line: 1302, column: 3, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8156, file: !3, line: 1301, column: 26)
!8162 = !DILocation(line: 1306, column: 3, scope: !8161)
!8163 = !DILocation(line: 1308, column: 6, scope: !8129)
!8164 = !DILocation(line: 1308, column: 9, scope: !8129)
!8165 = !DILocation(line: 1309, column: 6, scope: !8129)
!8166 = !DILocation(line: 1309, column: 9, scope: !8129)
!8167 = !DILocation(line: 1310, column: 6, scope: !8129)
!8168 = !DILocation(line: 1310, column: 9, scope: !8129)
!8169 = !DILocation(line: 1311, column: 11, scope: !8129)
!8170 = !DILocation(line: 1311, column: 6, scope: !8129)
!8171 = !DILocation(line: 1311, column: 9, scope: !8129)
!8172 = !DILocation(line: 1312, column: 2, scope: !8129)
!8173 = !DILocation(line: 1312, column: 7, scope: !8129)
!8174 = !DILocation(line: 1312, column: 17, scope: !8129)
!8175 = !DILocation(line: 1313, column: 2, scope: !8129)
!8176 = !DILocation(line: 1313, column: 7, scope: !8129)
!8177 = !DILocation(line: 1313, column: 13, scope: !8129)
!8178 = !DILocation(line: 1314, column: 1, scope: !8129)
!8179 = distinct !DISubprogram(name: "build_sdtr", scope: !3, file: !3, line: 1267, type: !8130, scopeLine: 1269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8180 = !DILocalVariable(name: "acb", arg: 1, scope: !8179, file: !3, line: 1267, type: !185)
!8181 = !DILocation(line: 1267, column: 46, scope: !8179)
!8182 = !DILocalVariable(name: "dcb", arg: 2, scope: !8179, file: !3, line: 1267, type: !5226)
!8183 = !DILocation(line: 1267, column: 72, scope: !8179)
!8184 = !DILocalVariable(name: "srb", arg: 3, scope: !8179, file: !3, line: 1268, type: !5234)
!8185 = !DILocation(line: 1268, column: 22, scope: !8179)
!8186 = !DILocalVariable(name: "ptr", scope: !8179, file: !3, line: 1270, type: !5619)
!8187 = !DILocation(line: 1270, column: 6, scope: !8179)
!8188 = !DILocation(line: 1270, column: 12, scope: !8179)
!8189 = !DILocation(line: 1270, column: 17, scope: !8179)
!8190 = !DILocation(line: 1270, column: 30, scope: !8179)
!8191 = !DILocation(line: 1270, column: 35, scope: !8179)
!8192 = !DILocation(line: 1270, column: 28, scope: !8179)
!8193 = !DILocation(line: 1271, column: 6, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 1271, column: 6)
!8195 = !DILocation(line: 1271, column: 11, scope: !8194)
!8196 = !DILocation(line: 1271, column: 21, scope: !8194)
!8197 = !DILocation(line: 1271, column: 6, scope: !8179)
!8198 = !DILocation(line: 1272, column: 3, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 1271, column: 26)
!8200 = !DILocation(line: 1276, column: 3, scope: !8199)
!8201 = !DILocation(line: 1278, column: 8, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 1278, column: 6)
!8203 = !DILocation(line: 1278, column: 13, scope: !8202)
!8204 = !DILocation(line: 1278, column: 22, scope: !8202)
!8205 = !DILocation(line: 1278, column: 6, scope: !8179)
!8206 = !DILocation(line: 1279, column: 3, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 1278, column: 43)
!8208 = !DILocation(line: 1279, column: 8, scope: !8207)
!8209 = !DILocation(line: 1279, column: 20, scope: !8207)
!8210 = !DILocation(line: 1280, column: 3, scope: !8207)
!8211 = !DILocation(line: 1280, column: 8, scope: !8207)
!8212 = !DILocation(line: 1280, column: 24, scope: !8207)
!8213 = !DILocation(line: 1281, column: 2, scope: !8207)
!8214 = !DILocation(line: 1281, column: 13, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 1281, column: 13)
!8216 = !DILocation(line: 1281, column: 18, scope: !8215)
!8217 = !DILocation(line: 1281, column: 30, scope: !8215)
!8218 = !DILocation(line: 1281, column: 13, scope: !8202)
!8219 = !DILocation(line: 1282, column: 3, scope: !8215)
!8220 = !DILocation(line: 1282, column: 8, scope: !8215)
!8221 = !DILocation(line: 1282, column: 20, scope: !8215)
!8222 = !DILocation(line: 1284, column: 6, scope: !8179)
!8223 = !DILocation(line: 1284, column: 9, scope: !8179)
!8224 = !DILocation(line: 1285, column: 6, scope: !8179)
!8225 = !DILocation(line: 1285, column: 9, scope: !8179)
!8226 = !DILocation(line: 1286, column: 6, scope: !8179)
!8227 = !DILocation(line: 1286, column: 9, scope: !8179)
!8228 = !DILocation(line: 1287, column: 11, scope: !8179)
!8229 = !DILocation(line: 1287, column: 16, scope: !8179)
!8230 = !DILocation(line: 1287, column: 6, scope: !8179)
!8231 = !DILocation(line: 1287, column: 9, scope: !8179)
!8232 = !DILocation(line: 1288, column: 11, scope: !8179)
!8233 = !DILocation(line: 1288, column: 16, scope: !8179)
!8234 = !DILocation(line: 1288, column: 6, scope: !8179)
!8235 = !DILocation(line: 1288, column: 9, scope: !8179)
!8236 = !DILocation(line: 1289, column: 2, scope: !8179)
!8237 = !DILocation(line: 1289, column: 7, scope: !8179)
!8238 = !DILocation(line: 1289, column: 17, scope: !8179)
!8239 = !DILocation(line: 1290, column: 2, scope: !8179)
!8240 = !DILocation(line: 1290, column: 7, scope: !8179)
!8241 = !DILocation(line: 1290, column: 13, scope: !8179)
!8242 = !DILocation(line: 1291, column: 1, scope: !8179)
!8243 = distinct !DISubprogram(name: "outw", scope: !8099, file: !8099, line: 335, type: !8244, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8244 = !DISubroutineType(types: !8245)
!8245 = !{null, !315, !267}
!8246 = !DILocalVariable(name: "value", arg: 1, scope: !8243, file: !8099, line: 335, type: !315)
!8247 = !DILocation(line: 335, column: 1, scope: !8243)
!8248 = !DILocalVariable(name: "port", arg: 2, scope: !8243, file: !8099, line: 335, type: !267)
!8249 = !{i32 -2141643912}
!8250 = distinct !DISubprogram(name: "free_tag", scope: !3, file: !3, line: 735, type: !8251, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8251 = !DISubroutineType(types: !8252)
!8252 = !{null, !5226, !5234}
!8253 = !DILocalVariable(name: "dcb", arg: 1, scope: !8250, file: !3, line: 735, type: !5226)
!8254 = !DILocation(line: 735, column: 43, scope: !8250)
!8255 = !DILocalVariable(name: "srb", arg: 2, scope: !8250, file: !3, line: 735, type: !5234)
!8256 = !DILocation(line: 735, column: 67, scope: !8250)
!8257 = !DILocation(line: 737, column: 6, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 737, column: 6)
!8259 = !DILocation(line: 737, column: 11, scope: !8258)
!8260 = !DILocation(line: 737, column: 22, scope: !8258)
!8261 = !DILocation(line: 737, column: 6, scope: !8250)
!8262 = !DILocation(line: 738, column: 27, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 737, column: 29)
!8264 = !DILocation(line: 738, column: 32, scope: !8263)
!8265 = !DILocation(line: 738, column: 24, scope: !8263)
!8266 = !DILocation(line: 738, column: 20, scope: !8263)
!8267 = !DILocation(line: 738, column: 3, scope: !8263)
!8268 = !DILocation(line: 738, column: 8, scope: !8263)
!8269 = !DILocation(line: 738, column: 17, scope: !8263)
!8270 = !DILocation(line: 739, column: 3, scope: !8263)
!8271 = !DILocation(line: 739, column: 8, scope: !8263)
!8272 = !DILocation(line: 739, column: 19, scope: !8263)
!8273 = !DILocation(line: 740, column: 2, scope: !8263)
!8274 = !DILocation(line: 741, column: 1, scope: !8250)
!8275 = distinct !DISubprogram(name: "list_add", scope: !6952, file: !6952, line: 84, type: !7183, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8276 = !DILocalVariable(name: "new", arg: 1, scope: !8275, file: !6952, line: 84, type: !197)
!8277 = !DILocation(line: 84, column: 47, scope: !8275)
!8278 = !DILocalVariable(name: "head", arg: 2, scope: !8275, file: !6952, line: 84, type: !197)
!8279 = !DILocation(line: 84, column: 70, scope: !8275)
!8280 = !DILocation(line: 86, column: 13, scope: !8275)
!8281 = !DILocation(line: 86, column: 18, scope: !8275)
!8282 = !DILocation(line: 86, column: 24, scope: !8275)
!8283 = !DILocation(line: 86, column: 30, scope: !8275)
!8284 = !DILocation(line: 86, column: 2, scope: !8275)
!8285 = !DILocation(line: 87, column: 1, scope: !8275)
!8286 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !6757, file: !6757, line: 651, type: !8287, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8287 = !DISubroutineType(types: !8288)
!8288 = !{null, !248}
!8289 = !DILocalVariable(name: "f", arg: 1, scope: !8286, file: !6757, line: 651, type: !248)
!8290 = !DILocation(line: 651, column: 65, scope: !8286)
!8291 = !DILocalVariable(name: "__edi", scope: !8292, file: !6757, line: 653, type: !248)
!8292 = distinct !DILexicalBlock(scope: !8286, file: !6757, line: 653, column: 2)
!8293 = !DILocation(line: 653, column: 2, scope: !8292)
!8294 = !DILocalVariable(name: "__esi", scope: !8292, file: !6757, line: 653, type: !248)
!8295 = !DILocalVariable(name: "__edx", scope: !8292, file: !6757, line: 653, type: !248)
!8296 = !DILocalVariable(name: "__ecx", scope: !8292, file: !6757, line: 653, type: !248)
!8297 = !DILocalVariable(name: "__eax", scope: !8292, file: !6757, line: 653, type: !248)
!8298 = !{i32 -2145646929, i32 -2145646179, i32 -2145645945, i32 -2145645894, i32 -2145645866, i32 -2145645841, i32 -2145646157, i32 -2145646144, i32 -2145645706, i32 -2145645587, i32 -2145646052, i32 -2145646025, i32 -2145645997, i32 -2145645967}
!8299 = !DILocation(line: 654, column: 1, scope: !8286)
!8300 = distinct !DISubprogram(name: "find_cmd", scope: !3, file: !3, line: 745, type: !8301, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8301 = !DISubroutineType(types: !8302)
!8302 = !{!5234, !4970, !197}
!8303 = !DILocalVariable(name: "cmd", arg: 1, scope: !8300, file: !3, line: 745, type: !4970)
!8304 = !DILocation(line: 745, column: 61, scope: !8300)
!8305 = !DILocalVariable(name: "head", arg: 2, scope: !8300, file: !3, line: 746, type: !197)
!8306 = !DILocation(line: 746, column: 21, scope: !8300)
!8307 = !DILocalVariable(name: "i", scope: !8300, file: !3, line: 748, type: !5234)
!8308 = !DILocation(line: 748, column: 21, scope: !8300)
!8309 = !DILocalVariable(name: "__mptr", scope: !8310, file: !3, line: 749, type: !256)
!8310 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 749, column: 2)
!8311 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 749, column: 2)
!8312 = !DILocation(line: 749, column: 2, scope: !8310)
!8313 = !DILocation(line: 749, column: 2, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 749, column: 2)
!8315 = !DILocation(line: 749, column: 2, scope: !8311)
!8316 = !DILocation(line: 749, column: 2, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 749, column: 2)
!8318 = !DILocation(line: 750, column: 7, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8317, file: !3, line: 750, column: 7)
!8320 = !DILocation(line: 750, column: 10, scope: !8319)
!8321 = !DILocation(line: 750, column: 17, scope: !8319)
!8322 = !DILocation(line: 750, column: 14, scope: !8319)
!8323 = !DILocation(line: 750, column: 7, scope: !8317)
!8324 = !DILocation(line: 751, column: 11, scope: !8319)
!8325 = !DILocation(line: 751, column: 4, scope: !8319)
!8326 = !DILocalVariable(name: "__mptr", scope: !8327, file: !3, line: 749, type: !256)
!8327 = distinct !DILexicalBlock(scope: !8317, file: !3, line: 749, column: 2)
!8328 = !DILocation(line: 749, column: 2, scope: !8327)
!8329 = !DILocation(line: 749, column: 2, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 749, column: 2)
!8331 = distinct !{!8331, !8315, !8332}
!8332 = !DILocation(line: 751, column: 11, scope: !8311)
!8333 = !DILocation(line: 752, column: 2, scope: !8300)
!8334 = !DILocation(line: 753, column: 1, scope: !8300)
!8335 = distinct !DISubprogram(name: "pci_unmap_srb_sense", scope: !3, file: !3, line: 3153, type: !7334, scopeLine: 3155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8336 = !DILocalVariable(name: "acb", arg: 1, scope: !8335, file: !3, line: 3153, type: !185)
!8337 = !DILocation(line: 3153, column: 55, scope: !8335)
!8338 = !DILocalVariable(name: "srb", arg: 2, scope: !8335, file: !3, line: 3154, type: !5234)
!8339 = !DILocation(line: 3154, column: 22, scope: !8335)
!8340 = !DILocation(line: 3156, column: 8, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 3156, column: 6)
!8342 = !DILocation(line: 3156, column: 13, scope: !8341)
!8343 = !DILocation(line: 3156, column: 18, scope: !8341)
!8344 = !DILocation(line: 3156, column: 6, scope: !8335)
!8345 = !DILocation(line: 3157, column: 3, scope: !8341)
!8346 = !DILocation(line: 3159, column: 2, scope: !8335)
!8347 = !DILocation(line: 3159, column: 2, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 3159, column: 2)
!8349 = !DILocation(line: 3161, column: 2, scope: !8335)
!8350 = !DILocation(line: 3164, column: 27, scope: !8335)
!8351 = !DILocation(line: 3164, column: 32, scope: !8335)
!8352 = !DILocation(line: 3164, column: 2, scope: !8335)
!8353 = !DILocation(line: 3164, column: 7, scope: !8335)
!8354 = !DILocation(line: 3164, column: 25, scope: !8335)
!8355 = !DILocation(line: 3166, column: 6, scope: !8335)
!8356 = !DILocation(line: 3166, column: 11, scope: !8335)
!8357 = !DILocation(line: 3166, column: 50, scope: !8335)
!8358 = !DILocation(line: 3165, column: 2, scope: !8335)
!8359 = !DILocation(line: 3165, column: 7, scope: !8335)
!8360 = !DILocation(line: 3165, column: 20, scope: !8335)
!8361 = !DILocation(line: 3165, column: 28, scope: !8335)
!8362 = !DILocation(line: 3168, column: 6, scope: !8335)
!8363 = !DILocation(line: 3168, column: 11, scope: !8335)
!8364 = !DILocation(line: 3168, column: 50, scope: !8335)
!8365 = !DILocation(line: 3167, column: 2, scope: !8335)
!8366 = !DILocation(line: 3167, column: 7, scope: !8335)
!8367 = !DILocation(line: 3167, column: 20, scope: !8335)
!8368 = !DILocation(line: 3167, column: 27, scope: !8335)
!8369 = !DILocation(line: 3169, column: 1, scope: !8335)
!8370 = distinct !DISubprogram(name: "pci_unmap_srb", scope: !3, file: !3, line: 3133, type: !7334, scopeLine: 3134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8371 = !DILocalVariable(name: "acb", arg: 1, scope: !8370, file: !3, line: 3133, type: !185)
!8372 = !DILocation(line: 3133, column: 49, scope: !8370)
!8373 = !DILocalVariable(name: "srb", arg: 2, scope: !8370, file: !3, line: 3133, type: !5234)
!8374 = !DILocation(line: 3133, column: 73, scope: !8370)
!8375 = !DILocalVariable(name: "cmd", scope: !8370, file: !3, line: 3135, type: !4970)
!8376 = !DILocation(line: 3135, column: 20, scope: !8370)
!8377 = !DILocation(line: 3135, column: 26, scope: !8370)
!8378 = !DILocation(line: 3135, column: 31, scope: !8370)
!8379 = !DILocalVariable(name: "dir", scope: !8370, file: !3, line: 3136, type: !146)
!8380 = !DILocation(line: 3136, column: 26, scope: !8370)
!8381 = !DILocation(line: 3136, column: 32, scope: !8370)
!8382 = !DILocation(line: 3136, column: 37, scope: !8370)
!8383 = !DILocation(line: 3138, column: 20, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 3138, column: 6)
!8385 = !DILocation(line: 3138, column: 6, scope: !8384)
!8386 = !DILocation(line: 3138, column: 25, scope: !8384)
!8387 = !DILocation(line: 3138, column: 28, scope: !8384)
!8388 = !DILocation(line: 3138, column: 32, scope: !8384)
!8389 = !DILocation(line: 3138, column: 6, scope: !8370)
!8390 = !DILocation(line: 3140, column: 3, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 3138, column: 45)
!8392 = !DILocation(line: 3140, column: 3, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 3140, column: 3)
!8394 = !DILocation(line: 3142, column: 3, scope: !8391)
!8395 = !DILocation(line: 3144, column: 3, scope: !8391)
!8396 = !DILocation(line: 3144, column: 3, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 3144, column: 3)
!8398 = !DILocation(line: 3147, column: 18, scope: !8391)
!8399 = !DILocation(line: 3147, column: 3, scope: !8391)
!8400 = !DILocation(line: 3148, column: 2, scope: !8391)
!8401 = !DILocation(line: 3149, column: 1, scope: !8370)
!8402 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !5839, file: !5839, line: 283, type: !8403, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8403 = !DISubroutineType(types: !8404)
!8404 = !{null, !1977, !3859, !823, !146, !248}
!8405 = !DILocalVariable(name: "dev", arg: 1, scope: !8402, file: !5839, line: 283, type: !1977)
!8406 = !DILocation(line: 283, column: 58, scope: !8402)
!8407 = !DILocalVariable(name: "addr", arg: 2, scope: !8402, file: !5839, line: 283, type: !3859)
!8408 = !DILocation(line: 283, column: 74, scope: !8402)
!8409 = !DILocalVariable(name: "size", arg: 3, scope: !8402, file: !5839, line: 284, type: !823)
!8410 = !DILocation(line: 284, column: 10, scope: !8402)
!8411 = !DILocalVariable(name: "dir", arg: 4, scope: !8402, file: !5839, line: 284, type: !146)
!8412 = !DILocation(line: 284, column: 40, scope: !8402)
!8413 = !DILocalVariable(name: "attrs", arg: 5, scope: !8402, file: !5839, line: 284, type: !248)
!8414 = !DILocation(line: 284, column: 59, scope: !8402)
!8415 = !DILocation(line: 286, column: 30, scope: !8402)
!8416 = !DILocation(line: 286, column: 35, scope: !8402)
!8417 = !DILocation(line: 286, column: 41, scope: !8402)
!8418 = !DILocation(line: 286, column: 47, scope: !8402)
!8419 = !DILocation(line: 286, column: 52, scope: !8402)
!8420 = !DILocation(line: 286, column: 9, scope: !8402)
!8421 = !DILocation(line: 286, column: 2, scope: !8402)
!8422 = distinct !DISubprogram(name: "scsi_sg_count", scope: !4972, file: !4972, line: 179, type: !7428, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8423 = !DILocalVariable(name: "cmd", arg: 1, scope: !8422, file: !4972, line: 179, type: !4970)
!8424 = !DILocation(line: 179, column: 56, scope: !8422)
!8425 = !DILocation(line: 181, column: 9, scope: !8422)
!8426 = !DILocation(line: 181, column: 14, scope: !8422)
!8427 = !DILocation(line: 181, column: 18, scope: !8422)
!8428 = !DILocation(line: 181, column: 24, scope: !8422)
!8429 = !DILocation(line: 181, column: 2, scope: !8422)
!8430 = distinct !DISubprogram(name: "__dc395x_eh_bus_reset", scope: !3, file: !3, line: 1163, type: !5058, scopeLine: 1164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8431 = !DILocalVariable(name: "cmd", arg: 1, scope: !8430, file: !3, line: 1163, type: !4970)
!8432 = !DILocation(line: 1163, column: 52, scope: !8430)
!8433 = !DILocalVariable(name: "acb", scope: !8430, file: !3, line: 1165, type: !185)
!8434 = !DILocation(line: 1165, column: 24, scope: !8430)
!8435 = !DILocation(line: 1166, column: 27, scope: !8430)
!8436 = !DILocation(line: 1166, column: 32, scope: !8430)
!8437 = !DILocation(line: 1166, column: 40, scope: !8430)
!8438 = !DILocation(line: 1166, column: 46, scope: !8430)
!8439 = !DILocation(line: 1166, column: 3, scope: !8430)
!8440 = !DILocation(line: 1167, column: 2, scope: !8430)
!8441 = !DILocation(line: 1171, column: 21, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 1171, column: 6)
!8443 = !DILocation(line: 1171, column: 26, scope: !8442)
!8444 = !DILocation(line: 1171, column: 6, scope: !8442)
!8445 = !DILocation(line: 1171, column: 6, scope: !8430)
!8446 = !DILocation(line: 1172, column: 14, scope: !8442)
!8447 = !DILocation(line: 1172, column: 19, scope: !8442)
!8448 = !DILocation(line: 1172, column: 3, scope: !8442)
!8449 = !DILocation(line: 1177, column: 2, scope: !8430)
!8450 = !DILocation(line: 1178, column: 2, scope: !8430)
!8451 = !DILocation(line: 1179, column: 2, scope: !8430)
!8452 = !DILocation(line: 1180, column: 2, scope: !8430)
!8453 = !DILocation(line: 1182, column: 17, scope: !8430)
!8454 = !DILocation(line: 1182, column: 2, scope: !8430)
!8455 = !DILocation(line: 1183, column: 2, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 1183, column: 2)
!8457 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 1183, column: 2)
!8458 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 1183, column: 2)
!8459 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 1183, column: 2)
!8460 = !DILocation(line: 1187, column: 6, scope: !8430)
!8461 = !DILocation(line: 1187, column: 14, scope: !8430)
!8462 = !DILocation(line: 1188, column: 11, scope: !8430)
!8463 = !DILocation(line: 1188, column: 16, scope: !8430)
!8464 = !DILocation(line: 1188, column: 23, scope: !8430)
!8465 = !DILocation(line: 1188, column: 9, scope: !8430)
!8466 = !DILocation(line: 1188, column: 6, scope: !8430)
!8467 = !DILocation(line: 1187, column: 27, scope: !8430)
!8468 = !DILocation(line: 1186, column: 2, scope: !8430)
!8469 = !DILocation(line: 1186, column: 7, scope: !8430)
!8470 = !DILocation(line: 1186, column: 18, scope: !8430)
!8471 = !DILocation(line: 1194, column: 2, scope: !8430)
!8472 = !DILocation(line: 1195, column: 13, scope: !8430)
!8473 = !DILocation(line: 1195, column: 2, scope: !8430)
!8474 = !DILocation(line: 1197, column: 2, scope: !8430)
!8475 = !DILocation(line: 1198, column: 19, scope: !8430)
!8476 = !DILocation(line: 1198, column: 2, scope: !8430)
!8477 = !DILocation(line: 1200, column: 18, scope: !8430)
!8478 = !DILocation(line: 1200, column: 2, scope: !8430)
!8479 = !DILocation(line: 1201, column: 17, scope: !8430)
!8480 = !DILocation(line: 1201, column: 33, scope: !8430)
!8481 = !DILocation(line: 1201, column: 2, scope: !8430)
!8482 = !DILocation(line: 1202, column: 2, scope: !8430)
!8483 = !DILocation(line: 1202, column: 7, scope: !8430)
!8484 = !DILocation(line: 1202, column: 18, scope: !8430)
!8485 = !DILocation(line: 1203, column: 2, scope: !8430)
!8486 = !DILocation(line: 1203, column: 7, scope: !8430)
!8487 = !DILocation(line: 1203, column: 16, scope: !8430)
!8488 = !DILocation(line: 1204, column: 23, scope: !8430)
!8489 = !DILocation(line: 1204, column: 2, scope: !8430)
!8490 = !DILocation(line: 1206, column: 2, scope: !8430)
!8491 = distinct !DISubprogram(name: "reset_scsi_bus", scope: !3, file: !3, line: 3451, type: !6113, scopeLine: 3452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8492 = !DILocalVariable(name: "acb", arg: 1, scope: !8491, file: !3, line: 3451, type: !185)
!8493 = !DILocation(line: 3451, column: 50, scope: !8491)
!8494 = !DILocation(line: 3453, column: 2, scope: !8491)
!8495 = !DILocation(line: 3453, column: 2, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 3453, column: 2)
!8497 = !DILocation(line: 3454, column: 2, scope: !8491)
!8498 = !DILocation(line: 3454, column: 7, scope: !8491)
!8499 = !DILocation(line: 3454, column: 16, scope: !8491)
!8500 = !DILocation(line: 3455, column: 2, scope: !8491)
!8501 = !DILocation(line: 3457, column: 2, scope: !8491)
!8502 = !DILocation(line: 3457, column: 11, scope: !8491)
!8503 = !DILocation(line: 3457, column: 55, scope: !8491)
!8504 = !DILocation(line: 3457, column: 9, scope: !8491)
!8505 = distinct !{!8505, !8501, !8506}
!8506 = !DILocation(line: 3458, column: 16, scope: !8491)
!8507 = !DILocation(line: 3459, column: 1, scope: !8491)
!8508 = distinct !DISubprogram(name: "set_basic_config", scope: !3, file: !3, line: 3462, type: !6113, scopeLine: 3463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8509 = !DILocalVariable(name: "acb", arg: 1, scope: !8508, file: !3, line: 3462, type: !185)
!8510 = !DILocation(line: 3462, column: 52, scope: !8508)
!8511 = !DILocalVariable(name: "bval", scope: !8508, file: !3, line: 3464, type: !410)
!8512 = !DILocation(line: 3464, column: 5, scope: !8508)
!8513 = !DILocalVariable(name: "wval", scope: !8508, file: !3, line: 3465, type: !918)
!8514 = !DILocation(line: 3465, column: 6, scope: !8508)
!8515 = !DILocation(line: 3466, column: 2, scope: !8508)
!8516 = !DILocation(line: 3467, column: 6, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8508, file: !3, line: 3467, column: 6)
!8518 = !DILocation(line: 3467, column: 11, scope: !8517)
!8519 = !DILocation(line: 3467, column: 18, scope: !8517)
!8520 = !DILocation(line: 3467, column: 6, scope: !8508)
!8521 = !DILocation(line: 3468, column: 8, scope: !8517)
!8522 = !DILocation(line: 3468, column: 3, scope: !8517)
!8523 = !DILocation(line: 3470, column: 8, scope: !8517)
!8524 = !DILocation(line: 3472, column: 2, scope: !8508)
!8525 = !DILocation(line: 3475, column: 2, scope: !8508)
!8526 = !DILocation(line: 3477, column: 2, scope: !8508)
!8527 = !DILocation(line: 3479, column: 2, scope: !8508)
!8528 = !DILocation(line: 3481, column: 9, scope: !8508)
!8529 = !DILocation(line: 3481, column: 51, scope: !8508)
!8530 = !DILocation(line: 3481, column: 7, scope: !8508)
!8531 = !DILocation(line: 3482, column: 2, scope: !8508)
!8532 = !DILocation(line: 3484, column: 9, scope: !8508)
!8533 = !DILocation(line: 3484, column: 50, scope: !8508)
!8534 = !DILocation(line: 3484, column: 7, scope: !8508)
!8535 = !DILocation(line: 3485, column: 7, scope: !8508)
!8536 = !DILocation(line: 3487, column: 2, scope: !8508)
!8537 = !DILocation(line: 3489, column: 2, scope: !8508)
!8538 = !DILocation(line: 3491, column: 2, scope: !8508)
!8539 = !DILocation(line: 3492, column: 2, scope: !8508)
!8540 = !DILocation(line: 3495, column: 1, scope: !8508)
!8541 = distinct !DISubprogram(name: "reset_dev_param", scope: !3, file: !3, line: 1135, type: !6113, scopeLine: 1136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8542 = !DILocalVariable(name: "acb", arg: 1, scope: !8541, file: !3, line: 1135, type: !185)
!8543 = !DILocation(line: 1135, column: 51, scope: !8541)
!8544 = !DILocalVariable(name: "dcb", scope: !8541, file: !3, line: 1137, type: !5226)
!8545 = !DILocation(line: 1137, column: 23, scope: !8541)
!8546 = !DILocalVariable(name: "eeprom", scope: !8541, file: !3, line: 1138, type: !8547)
!8547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5584, size: 64)
!8548 = !DILocation(line: 1138, column: 20, scope: !8541)
!8549 = !DILocation(line: 1138, column: 30, scope: !8541)
!8550 = !DILocation(line: 1138, column: 35, scope: !8541)
!8551 = !DILocation(line: 1139, column: 2, scope: !8541)
!8552 = !DILocation(line: 1139, column: 2, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8541, file: !3, line: 1139, column: 2)
!8554 = !DILocalVariable(name: "__mptr", scope: !8555, file: !3, line: 1141, type: !256)
!8555 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 1141, column: 2)
!8556 = distinct !DILexicalBlock(scope: !8541, file: !3, line: 1141, column: 2)
!8557 = !DILocation(line: 1141, column: 2, scope: !8555)
!8558 = !DILocation(line: 1141, column: 2, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 1141, column: 2)
!8560 = !DILocation(line: 1141, column: 2, scope: !8556)
!8561 = !DILocation(line: 1141, column: 2, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 1141, column: 2)
!8563 = !DILocalVariable(name: "period_index", scope: !8564, file: !3, line: 1142, type: !410)
!8564 = distinct !DILexicalBlock(scope: !8562, file: !3, line: 1141, column: 49)
!8565 = !DILocation(line: 1142, column: 6, scope: !8564)
!8566 = !DILocation(line: 1144, column: 3, scope: !8564)
!8567 = !DILocation(line: 1144, column: 8, scope: !8564)
!8568 = !DILocation(line: 1144, column: 18, scope: !8564)
!8569 = !DILocation(line: 1145, column: 3, scope: !8564)
!8570 = !DILocation(line: 1145, column: 8, scope: !8564)
!8571 = !DILocation(line: 1145, column: 20, scope: !8564)
!8572 = !DILocation(line: 1146, column: 3, scope: !8564)
!8573 = !DILocation(line: 1146, column: 8, scope: !8564)
!8574 = !DILocation(line: 1146, column: 20, scope: !8564)
!8575 = !DILocation(line: 1148, column: 19, scope: !8564)
!8576 = !DILocation(line: 1148, column: 27, scope: !8564)
!8577 = !DILocation(line: 1148, column: 34, scope: !8564)
!8578 = !DILocation(line: 1148, column: 39, scope: !8564)
!8579 = !DILocation(line: 1148, column: 50, scope: !8564)
!8580 = !DILocation(line: 1148, column: 3, scope: !8564)
!8581 = !DILocation(line: 1148, column: 8, scope: !8564)
!8582 = !DILocation(line: 1148, column: 17, scope: !8564)
!8583 = !DILocation(line: 1149, column: 18, scope: !8564)
!8584 = !DILocation(line: 1149, column: 26, scope: !8564)
!8585 = !DILocation(line: 1149, column: 33, scope: !8564)
!8586 = !DILocation(line: 1149, column: 38, scope: !8564)
!8587 = !DILocation(line: 1149, column: 49, scope: !8564)
!8588 = !DILocation(line: 1149, column: 56, scope: !8564)
!8589 = !DILocation(line: 1149, column: 16, scope: !8564)
!8590 = !DILocation(line: 1150, column: 39, scope: !8564)
!8591 = !DILocation(line: 1150, column: 26, scope: !8564)
!8592 = !DILocation(line: 1150, column: 3, scope: !8564)
!8593 = !DILocation(line: 1150, column: 8, scope: !8564)
!8594 = !DILocation(line: 1150, column: 24, scope: !8564)
!8595 = !DILocation(line: 1151, column: 9, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8564, file: !3, line: 1151, column: 7)
!8597 = !DILocation(line: 1151, column: 14, scope: !8596)
!8598 = !DILocation(line: 1151, column: 23, scope: !8596)
!8599 = !DILocation(line: 1152, column: 7, scope: !8596)
!8600 = !DILocation(line: 1152, column: 12, scope: !8596)
!8601 = !DILocation(line: 1152, column: 17, scope: !8596)
!8602 = !DILocation(line: 1152, column: 24, scope: !8596)
!8603 = !DILocation(line: 1151, column: 7, scope: !8564)
!8604 = !DILocation(line: 1153, column: 4, scope: !8596)
!8605 = !DILocation(line: 1153, column: 9, scope: !8596)
!8606 = !DILocation(line: 1153, column: 19, scope: !8596)
!8607 = !DILocation(line: 1154, column: 2, scope: !8564)
!8608 = !DILocalVariable(name: "__mptr", scope: !8609, file: !3, line: 1141, type: !256)
!8609 = distinct !DILexicalBlock(scope: !8562, file: !3, line: 1141, column: 2)
!8610 = !DILocation(line: 1141, column: 2, scope: !8609)
!8611 = !DILocation(line: 1141, column: 2, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 1141, column: 2)
!8613 = distinct !{!8613, !8560, !8614}
!8614 = !DILocation(line: 1154, column: 2, scope: !8556)
!8615 = !DILocation(line: 1155, column: 1, scope: !8541)
!8616 = distinct !DISubprogram(name: "doing_srb_done", scope: !3, file: !3, line: 3381, type: !8617, scopeLine: 3383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8617 = !DISubroutineType(types: !8618)
!8618 = !{null, !185, !410, !4970, !410}
!8619 = !DILocalVariable(name: "acb", arg: 1, scope: !8616, file: !3, line: 3381, type: !185)
!8620 = !DILocation(line: 3381, column: 50, scope: !8616)
!8621 = !DILocalVariable(name: "did_flag", arg: 2, scope: !8616, file: !3, line: 3381, type: !410)
!8622 = !DILocation(line: 3381, column: 58, scope: !8616)
!8623 = !DILocalVariable(name: "cmd", arg: 3, scope: !8616, file: !3, line: 3382, type: !4970)
!8624 = !DILocation(line: 3382, column: 21, scope: !8616)
!8625 = !DILocalVariable(name: "force", arg: 4, scope: !8616, file: !3, line: 3382, type: !410)
!8626 = !DILocation(line: 3382, column: 29, scope: !8616)
!8627 = !DILocalVariable(name: "dcb", scope: !8616, file: !3, line: 3384, type: !5226)
!8628 = !DILocation(line: 3384, column: 23, scope: !8616)
!8629 = !DILocation(line: 3385, column: 2, scope: !8616)
!8630 = !DILocalVariable(name: "__mptr", scope: !8631, file: !3, line: 3387, type: !256)
!8631 = distinct !DILexicalBlock(scope: !8632, file: !3, line: 3387, column: 2)
!8632 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 3387, column: 2)
!8633 = !DILocation(line: 3387, column: 2, scope: !8631)
!8634 = !DILocation(line: 3387, column: 2, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 3387, column: 2)
!8636 = !DILocation(line: 3387, column: 2, scope: !8632)
!8637 = !DILocation(line: 3387, column: 2, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8632, file: !3, line: 3387, column: 2)
!8639 = !DILocalVariable(name: "srb", scope: !8640, file: !3, line: 3388, type: !5234)
!8640 = distinct !DILexicalBlock(scope: !8638, file: !3, line: 3387, column: 49)
!8641 = !DILocation(line: 3388, column: 22, scope: !8640)
!8642 = !DILocalVariable(name: "tmp", scope: !8640, file: !3, line: 3389, type: !5234)
!8643 = !DILocation(line: 3389, column: 22, scope: !8640)
!8644 = !DILocalVariable(name: "p", scope: !8640, file: !3, line: 3390, type: !4970)
!8645 = !DILocation(line: 3390, column: 21, scope: !8640)
!8646 = !DILocalVariable(name: "__mptr", scope: !8647, file: !3, line: 3392, type: !256)
!8647 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 3392, column: 3)
!8648 = distinct !DILexicalBlock(scope: !8640, file: !3, line: 3392, column: 3)
!8649 = !DILocation(line: 3392, column: 3, scope: !8647)
!8650 = !DILocation(line: 3392, column: 3, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8647, file: !3, line: 3392, column: 3)
!8652 = !DILocation(line: 3392, column: 3, scope: !8648)
!8653 = !DILocalVariable(name: "__mptr", scope: !8654, file: !3, line: 3392, type: !256)
!8654 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 3392, column: 3)
!8655 = !DILocation(line: 3392, column: 3, scope: !8654)
!8656 = !DILocation(line: 3392, column: 3, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8654, file: !3, line: 3392, column: 3)
!8658 = !DILocation(line: 3392, column: 3, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 3392, column: 3)
!8660 = !DILocalVariable(name: "dir", scope: !8661, file: !3, line: 3393, type: !146)
!8661 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 3392, column: 66)
!8662 = !DILocation(line: 3393, column: 28, scope: !8661)
!8663 = !DILocalVariable(name: "result", scope: !8661, file: !3, line: 3394, type: !267)
!8664 = !DILocation(line: 3394, column: 8, scope: !8661)
!8665 = !DILocation(line: 3396, column: 8, scope: !8661)
!8666 = !DILocation(line: 3396, column: 13, scope: !8661)
!8667 = !DILocation(line: 3396, column: 6, scope: !8661)
!8668 = !DILocation(line: 3397, column: 10, scope: !8661)
!8669 = !DILocation(line: 3397, column: 13, scope: !8661)
!8670 = !DILocation(line: 3397, column: 8, scope: !8661)
!8671 = !DILocation(line: 3398, column: 13, scope: !8661)
!8672 = !DILocation(line: 3398, column: 11, scope: !8661)
!8673 = !DILocation(line: 3399, column: 29, scope: !8661)
!8674 = !DILocation(line: 3400, column: 11, scope: !8661)
!8675 = !DILocation(line: 3400, column: 14, scope: !8661)
!8676 = !DILocation(line: 3400, column: 22, scope: !8661)
!8677 = !DILocation(line: 3400, column: 30, scope: !8661)
!8678 = !DILocation(line: 3400, column: 33, scope: !8661)
!8679 = !DILocation(line: 3400, column: 41, scope: !8661)
!8680 = !DILocation(line: 3400, column: 26, scope: !8661)
!8681 = !DILocation(line: 3399, column: 4, scope: !8661)
!8682 = !DILocation(line: 3401, column: 14, scope: !8661)
!8683 = !DILocation(line: 3401, column: 19, scope: !8661)
!8684 = !DILocation(line: 3401, column: 4, scope: !8661)
!8685 = !DILocation(line: 3402, column: 13, scope: !8661)
!8686 = !DILocation(line: 3402, column: 18, scope: !8661)
!8687 = !DILocation(line: 3402, column: 4, scope: !8661)
!8688 = !DILocation(line: 3403, column: 19, scope: !8661)
!8689 = !DILocation(line: 3403, column: 24, scope: !8661)
!8690 = !DILocation(line: 3403, column: 31, scope: !8661)
!8691 = !DILocation(line: 3403, column: 36, scope: !8661)
!8692 = !DILocation(line: 3403, column: 4, scope: !8661)
!8693 = !DILocation(line: 3404, column: 16, scope: !8661)
!8694 = !DILocation(line: 3404, column: 4, scope: !8661)
!8695 = !DILocation(line: 3404, column: 7, scope: !8661)
!8696 = !DILocation(line: 3404, column: 14, scope: !8661)
!8697 = !DILocation(line: 3405, column: 24, scope: !8661)
!8698 = !DILocation(line: 3405, column: 29, scope: !8661)
!8699 = !DILocation(line: 3405, column: 4, scope: !8661)
!8700 = !DILocation(line: 3406, column: 18, scope: !8661)
!8701 = !DILocation(line: 3406, column: 23, scope: !8661)
!8702 = !DILocation(line: 3406, column: 4, scope: !8661)
!8703 = !DILocation(line: 3407, column: 8, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 3407, column: 8)
!8705 = !DILocation(line: 3407, column: 8, scope: !8661)
!8706 = !DILocation(line: 3410, column: 5, scope: !8707)
!8707 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 3407, column: 15)
!8708 = !DILocation(line: 3410, column: 8, scope: !8707)
!8709 = !DILocation(line: 3410, column: 18, scope: !8707)
!8710 = !DILocation(line: 3411, column: 4, scope: !8707)
!8711 = !DILocation(line: 3412, column: 3, scope: !8661)
!8712 = !DILocalVariable(name: "__mptr", scope: !8713, file: !3, line: 3392, type: !256)
!8713 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 3392, column: 3)
!8714 = !DILocation(line: 3392, column: 3, scope: !8713)
!8715 = !DILocation(line: 3392, column: 3, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8713, file: !3, line: 3392, column: 3)
!8717 = distinct !{!8717, !8652, !8718}
!8718 = !DILocation(line: 3412, column: 3, scope: !8648)
!8719 = !DILocation(line: 3413, column: 20, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8640, file: !3, line: 3413, column: 7)
!8721 = !DILocation(line: 3413, column: 25, scope: !8720)
!8722 = !DILocation(line: 3413, column: 8, scope: !8720)
!8723 = !DILocation(line: 3413, column: 7, scope: !8640)
!8724 = !DILocation(line: 3414, column: 4, scope: !8720)
!8725 = !DILocation(line: 3417, column: 7, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8640, file: !3, line: 3417, column: 7)
!8727 = !DILocation(line: 3417, column: 12, scope: !8726)
!8728 = !DILocation(line: 3417, column: 7, scope: !8640)
!8729 = !DILocation(line: 3418, column: 4, scope: !8726)
!8730 = !DILocalVariable(name: "__mptr", scope: !8731, file: !3, line: 3424, type: !256)
!8731 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 3424, column: 3)
!8732 = distinct !DILexicalBlock(scope: !8640, file: !3, line: 3424, column: 3)
!8733 = !DILocation(line: 3424, column: 3, scope: !8731)
!8734 = !DILocation(line: 3424, column: 3, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 3424, column: 3)
!8736 = !DILocation(line: 3424, column: 3, scope: !8732)
!8737 = !DILocalVariable(name: "__mptr", scope: !8738, file: !3, line: 3424, type: !256)
!8738 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 3424, column: 3)
!8739 = !DILocation(line: 3424, column: 3, scope: !8738)
!8740 = !DILocation(line: 3424, column: 3, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8738, file: !3, line: 3424, column: 3)
!8742 = !DILocation(line: 3424, column: 3, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 3424, column: 3)
!8744 = !DILocalVariable(name: "result", scope: !8745, file: !3, line: 3425, type: !267)
!8745 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 3424, column: 68)
!8746 = !DILocation(line: 3425, column: 8, scope: !8745)
!8747 = !DILocation(line: 3426, column: 8, scope: !8745)
!8748 = !DILocation(line: 3426, column: 13, scope: !8745)
!8749 = !DILocation(line: 3426, column: 6, scope: !8745)
!8750 = !DILocation(line: 3428, column: 13, scope: !8745)
!8751 = !DILocation(line: 3428, column: 11, scope: !8745)
!8752 = !DILocation(line: 3429, column: 28, scope: !8745)
!8753 = !DILocation(line: 3429, column: 31, scope: !8745)
!8754 = !DILocation(line: 3429, column: 34, scope: !8745)
!8755 = !DILocation(line: 3429, column: 42, scope: !8745)
!8756 = !DILocation(line: 3430, column: 15, scope: !8745)
!8757 = !DILocation(line: 3430, column: 18, scope: !8745)
!8758 = !DILocation(line: 3430, column: 26, scope: !8745)
!8759 = !DILocation(line: 3430, column: 11, scope: !8745)
!8760 = !DILocation(line: 3429, column: 4, scope: !8745)
!8761 = !DILocation(line: 3431, column: 20, scope: !8745)
!8762 = !DILocation(line: 3431, column: 25, scope: !8745)
!8763 = !DILocation(line: 3431, column: 32, scope: !8745)
!8764 = !DILocation(line: 3431, column: 37, scope: !8745)
!8765 = !DILocation(line: 3431, column: 4, scope: !8745)
!8766 = !DILocation(line: 3432, column: 16, scope: !8745)
!8767 = !DILocation(line: 3432, column: 4, scope: !8745)
!8768 = !DILocation(line: 3432, column: 7, scope: !8745)
!8769 = !DILocation(line: 3432, column: 14, scope: !8745)
!8770 = !DILocation(line: 3433, column: 24, scope: !8745)
!8771 = !DILocation(line: 3433, column: 29, scope: !8745)
!8772 = !DILocation(line: 3433, column: 4, scope: !8745)
!8773 = !DILocation(line: 3434, column: 18, scope: !8745)
!8774 = !DILocation(line: 3434, column: 23, scope: !8745)
!8775 = !DILocation(line: 3434, column: 4, scope: !8745)
!8776 = !DILocation(line: 3435, column: 8, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 3435, column: 8)
!8778 = !DILocation(line: 3435, column: 8, scope: !8745)
!8779 = !DILocation(line: 3438, column: 5, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 3435, column: 15)
!8781 = !DILocation(line: 3438, column: 10, scope: !8780)
!8782 = !DILocation(line: 3438, column: 20, scope: !8780)
!8783 = !DILocation(line: 3439, column: 4, scope: !8780)
!8784 = !DILocation(line: 3440, column: 3, scope: !8745)
!8785 = !DILocalVariable(name: "__mptr", scope: !8786, file: !3, line: 3424, type: !256)
!8786 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 3424, column: 3)
!8787 = !DILocation(line: 3424, column: 3, scope: !8786)
!8788 = !DILocation(line: 3424, column: 3, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8786, file: !3, line: 3424, column: 3)
!8790 = distinct !{!8790, !8736, !8791}
!8791 = !DILocation(line: 3440, column: 3, scope: !8732)
!8792 = !DILocation(line: 3441, column: 20, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8640, file: !3, line: 3441, column: 7)
!8794 = !DILocation(line: 3441, column: 25, scope: !8793)
!8795 = !DILocation(line: 3441, column: 8, scope: !8793)
!8796 = !DILocation(line: 3441, column: 7, scope: !8640)
!8797 = !DILocation(line: 3442, column: 4, scope: !8793)
!8798 = !DILocation(line: 3445, column: 3, scope: !8640)
!8799 = !DILocation(line: 3445, column: 8, scope: !8640)
!8800 = !DILocation(line: 3445, column: 13, scope: !8640)
!8801 = !DILocation(line: 3446, column: 2, scope: !8640)
!8802 = !DILocalVariable(name: "__mptr", scope: !8803, file: !3, line: 3387, type: !256)
!8803 = distinct !DILexicalBlock(scope: !8638, file: !3, line: 3387, column: 2)
!8804 = !DILocation(line: 3387, column: 2, scope: !8803)
!8805 = !DILocation(line: 3387, column: 2, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8803, file: !3, line: 3387, column: 2)
!8807 = distinct !{!8807, !8636, !8808}
!8808 = !DILocation(line: 3446, column: 2, scope: !8632)
!8809 = !DILocation(line: 3447, column: 2, scope: !8616)
!8810 = !DILocation(line: 3448, column: 1, scope: !8616)
!8811 = distinct !DISubprogram(name: "list_move_tail", scope: !6952, file: !6952, line: 224, type: !7183, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8812 = !DILocalVariable(name: "list", arg: 1, scope: !8811, file: !6952, line: 224, type: !197)
!8813 = !DILocation(line: 224, column: 53, scope: !8811)
!8814 = !DILocalVariable(name: "head", arg: 2, scope: !8811, file: !6952, line: 225, type: !197)
!8815 = !DILocation(line: 225, column: 25, scope: !8811)
!8816 = !DILocation(line: 227, column: 19, scope: !8811)
!8817 = !DILocation(line: 227, column: 2, scope: !8811)
!8818 = !DILocation(line: 228, column: 16, scope: !8811)
!8819 = !DILocation(line: 228, column: 22, scope: !8811)
!8820 = !DILocation(line: 228, column: 2, scope: !8811)
!8821 = !DILocation(line: 229, column: 1, scope: !8811)
!8822 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !6757, file: !6757, line: 661, type: !4414, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8823 = !DILocalVariable(name: "__edi", scope: !8824, file: !6757, line: 663, type: !248)
!8824 = distinct !DILexicalBlock(scope: !8822, file: !6757, line: 663, column: 2)
!8825 = !DILocation(line: 663, column: 2, scope: !8824)
!8826 = !DILocalVariable(name: "__esi", scope: !8824, file: !6757, line: 663, type: !248)
!8827 = !DILocalVariable(name: "__edx", scope: !8824, file: !6757, line: 663, type: !248)
!8828 = !DILocalVariable(name: "__ecx", scope: !8824, file: !6757, line: 663, type: !248)
!8829 = !DILocalVariable(name: "__eax", scope: !8824, file: !6757, line: 663, type: !248)
!8830 = !{i32 -2145641718, i32 -2145640988, i32 -2145640754, i32 -2145640703, i32 -2145640675, i32 -2145640650, i32 -2145640966, i32 -2145640953, i32 -2145640515, i32 -2145640396, i32 -2145640861, i32 -2145640834, i32 -2145640806, i32 -2145640776}
!8831 = !DILocation(line: 664, column: 1, scope: !8822)
!8832 = distinct !DISubprogram(name: "device_alloc", scope: !3, file: !3, line: 3589, type: !6938, scopeLine: 3591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8833 = !DILocalVariable(name: "s", arg: 1, scope: !8834, file: !169, line: 445, type: !2562)
!8834 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !169, file: !169, line: 445, type: !8835, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8835 = !DISubroutineType(types: !8836)
!8836 = !{!256, !2562, !502, !823}
!8837 = !DILocation(line: 445, column: 72, scope: !8834, inlinedAt: !8838)
!8838 = distinct !DILocation(line: 552, column: 10, scope: !8839, inlinedAt: !8844)
!8839 = distinct !DILexicalBlock(scope: !8840, file: !169, line: 540, column: 34)
!8840 = distinct !DILexicalBlock(scope: !8841, file: !169, line: 540, column: 6)
!8841 = distinct !DISubprogram(name: "kmalloc", scope: !169, file: !169, line: 538, type: !8842, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8842 = !DISubroutineType(types: !8843)
!8843 = !{!256, !823, !502}
!8844 = distinct !DILocation(line: 3596, column: 8, scope: !8832)
!8845 = !DILocalVariable(name: "flags", arg: 2, scope: !8834, file: !169, line: 446, type: !502)
!8846 = !DILocation(line: 446, column: 9, scope: !8834, inlinedAt: !8838)
!8847 = !DILocalVariable(name: "size", arg: 3, scope: !8834, file: !169, line: 446, type: !823)
!8848 = !DILocation(line: 446, column: 23, scope: !8834, inlinedAt: !8838)
!8849 = !DILocalVariable(name: "ret", scope: !8834, file: !169, line: 448, type: !256)
!8850 = !DILocation(line: 448, column: 8, scope: !8834, inlinedAt: !8838)
!8851 = !DILocalVariable(name: "flags", arg: 1, scope: !8852, file: !169, line: 318, type: !502)
!8852 = distinct !DISubprogram(name: "kmalloc_type", scope: !169, file: !169, line: 318, type: !8853, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8853 = !DISubroutineType(types: !8854)
!8854 = !{!168, !502}
!8855 = !DILocation(line: 318, column: 67, scope: !8852, inlinedAt: !8856)
!8856 = distinct !DILocation(line: 553, column: 20, scope: !8839, inlinedAt: !8844)
!8857 = !DILocalVariable(name: "size", arg: 1, scope: !8858, file: !169, line: 346, type: !823)
!8858 = distinct !DISubprogram(name: "kmalloc_index", scope: !169, file: !169, line: 346, type: !8859, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8859 = !DISubroutineType(types: !8860)
!8860 = !{!7, !823}
!8861 = !DILocation(line: 346, column: 58, scope: !8858, inlinedAt: !8862)
!8862 = distinct !DILocation(line: 547, column: 11, scope: !8839, inlinedAt: !8844)
!8863 = !DILocalVariable(name: "size", arg: 1, scope: !8864, file: !169, line: 472, type: !823)
!8864 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !169, file: !169, line: 472, type: !8865, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8865 = !DISubroutineType(types: !8866)
!8866 = !{!256, !823, !502, !7}
!8867 = !DILocation(line: 472, column: 28, scope: !8864, inlinedAt: !8868)
!8868 = distinct !DILocation(line: 481, column: 9, scope: !8869, inlinedAt: !8870)
!8869 = distinct !DISubprogram(name: "kmalloc_large", scope: !169, file: !169, line: 478, type: !8842, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!8870 = distinct !DILocation(line: 545, column: 11, scope: !8871, inlinedAt: !8844)
!8871 = distinct !DILexicalBlock(scope: !8839, file: !169, line: 544, column: 7)
!8872 = !DILocalVariable(name: "flags", arg: 2, scope: !8864, file: !169, line: 472, type: !502)
!8873 = !DILocation(line: 472, column: 40, scope: !8864, inlinedAt: !8868)
!8874 = !DILocalVariable(name: "order", arg: 3, scope: !8864, file: !169, line: 472, type: !7)
!8875 = !DILocation(line: 472, column: 60, scope: !8864, inlinedAt: !8868)
!8876 = !DILocalVariable(name: "size", arg: 1, scope: !8869, file: !169, line: 478, type: !823)
!8877 = !DILocation(line: 478, column: 51, scope: !8869, inlinedAt: !8870)
!8878 = !DILocalVariable(name: "flags", arg: 2, scope: !8869, file: !169, line: 478, type: !502)
!8879 = !DILocation(line: 478, column: 63, scope: !8869, inlinedAt: !8870)
!8880 = !DILocalVariable(name: "order", scope: !8869, file: !169, line: 480, type: !7)
!8881 = !DILocation(line: 480, column: 15, scope: !8869, inlinedAt: !8870)
!8882 = !DILocalVariable(name: "size", arg: 1, scope: !8841, file: !169, line: 538, type: !823)
!8883 = !DILocation(line: 538, column: 45, scope: !8841, inlinedAt: !8844)
!8884 = !DILocalVariable(name: "flags", arg: 2, scope: !8841, file: !169, line: 538, type: !502)
!8885 = !DILocation(line: 538, column: 57, scope: !8841, inlinedAt: !8844)
!8886 = !DILocalVariable(name: "index", scope: !8839, file: !169, line: 542, type: !7)
!8887 = !DILocation(line: 542, column: 16, scope: !8839, inlinedAt: !8844)
!8888 = !DILocalVariable(name: "acb", arg: 1, scope: !8832, file: !3, line: 3589, type: !185)
!8889 = !DILocation(line: 3589, column: 64, scope: !8832)
!8890 = !DILocalVariable(name: "target", arg: 2, scope: !8832, file: !3, line: 3590, type: !410)
!8891 = !DILocation(line: 3590, column: 6, scope: !8832)
!8892 = !DILocalVariable(name: "lun", arg: 3, scope: !8832, file: !3, line: 3590, type: !410)
!8893 = !DILocation(line: 3590, column: 17, scope: !8832)
!8894 = !DILocalVariable(name: "eeprom", scope: !8832, file: !3, line: 3592, type: !8547)
!8895 = !DILocation(line: 3592, column: 20, scope: !8832)
!8896 = !DILocation(line: 3592, column: 30, scope: !8832)
!8897 = !DILocation(line: 3592, column: 35, scope: !8832)
!8898 = !DILocalVariable(name: "period_index", scope: !8832, file: !3, line: 3593, type: !410)
!8899 = !DILocation(line: 3593, column: 5, scope: !8832)
!8900 = !DILocation(line: 3593, column: 20, scope: !8832)
!8901 = !DILocation(line: 3593, column: 28, scope: !8832)
!8902 = !DILocation(line: 3593, column: 35, scope: !8832)
!8903 = !DILocation(line: 3593, column: 43, scope: !8832)
!8904 = !DILocation(line: 3593, column: 50, scope: !8832)
!8905 = !DILocalVariable(name: "dcb", scope: !8832, file: !3, line: 3594, type: !5226)
!8906 = !DILocation(line: 3594, column: 23, scope: !8832)
!8907 = !DILocation(line: 540, column: 27, scope: !8840, inlinedAt: !8844)
!8908 = !DILocation(line: 540, column: 6, scope: !8840, inlinedAt: !8844)
!8909 = !DILocation(line: 540, column: 6, scope: !8841, inlinedAt: !8844)
!8910 = !DILocation(line: 544, column: 7, scope: !8871, inlinedAt: !8844)
!8911 = !DILocation(line: 544, column: 12, scope: !8871, inlinedAt: !8844)
!8912 = !DILocation(line: 544, column: 7, scope: !8839, inlinedAt: !8844)
!8913 = !DILocation(line: 545, column: 25, scope: !8871, inlinedAt: !8844)
!8914 = !DILocation(line: 545, column: 31, scope: !8871, inlinedAt: !8844)
!8915 = !DILocation(line: 480, column: 33, scope: !8869, inlinedAt: !8870)
!8916 = !DILocation(line: 480, column: 23, scope: !8869, inlinedAt: !8870)
!8917 = !DILocation(line: 481, column: 29, scope: !8869, inlinedAt: !8870)
!8918 = !DILocation(line: 481, column: 35, scope: !8869, inlinedAt: !8870)
!8919 = !DILocation(line: 481, column: 42, scope: !8869, inlinedAt: !8870)
!8920 = !DILocation(line: 474, column: 23, scope: !8864, inlinedAt: !8868)
!8921 = !DILocation(line: 474, column: 29, scope: !8864, inlinedAt: !8868)
!8922 = !DILocation(line: 474, column: 36, scope: !8864, inlinedAt: !8868)
!8923 = !DILocation(line: 474, column: 9, scope: !8864, inlinedAt: !8868)
!8924 = !DILocation(line: 545, column: 4, scope: !8871, inlinedAt: !8844)
!8925 = !DILocation(line: 547, column: 25, scope: !8839, inlinedAt: !8844)
!8926 = !DILocation(line: 348, column: 7, scope: !8927, inlinedAt: !8862)
!8927 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 348, column: 6)
!8928 = !DILocation(line: 348, column: 6, scope: !8858, inlinedAt: !8862)
!8929 = !DILocation(line: 349, column: 3, scope: !8927, inlinedAt: !8862)
!8930 = !DILocation(line: 351, column: 6, scope: !8931, inlinedAt: !8862)
!8931 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 351, column: 6)
!8932 = !DILocation(line: 351, column: 11, scope: !8931, inlinedAt: !8862)
!8933 = !DILocation(line: 351, column: 6, scope: !8858, inlinedAt: !8862)
!8934 = !DILocation(line: 352, column: 3, scope: !8931, inlinedAt: !8862)
!8935 = !DILocation(line: 354, column: 32, scope: !8936, inlinedAt: !8862)
!8936 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 354, column: 6)
!8937 = !DILocation(line: 354, column: 37, scope: !8936, inlinedAt: !8862)
!8938 = !DILocation(line: 354, column: 42, scope: !8936, inlinedAt: !8862)
!8939 = !DILocation(line: 354, column: 45, scope: !8936, inlinedAt: !8862)
!8940 = !DILocation(line: 354, column: 50, scope: !8936, inlinedAt: !8862)
!8941 = !DILocation(line: 354, column: 6, scope: !8858, inlinedAt: !8862)
!8942 = !DILocation(line: 355, column: 3, scope: !8936, inlinedAt: !8862)
!8943 = !DILocation(line: 356, column: 32, scope: !8944, inlinedAt: !8862)
!8944 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 356, column: 6)
!8945 = !DILocation(line: 356, column: 37, scope: !8944, inlinedAt: !8862)
!8946 = !DILocation(line: 356, column: 43, scope: !8944, inlinedAt: !8862)
!8947 = !DILocation(line: 356, column: 46, scope: !8944, inlinedAt: !8862)
!8948 = !DILocation(line: 356, column: 51, scope: !8944, inlinedAt: !8862)
!8949 = !DILocation(line: 356, column: 6, scope: !8858, inlinedAt: !8862)
!8950 = !DILocation(line: 357, column: 3, scope: !8944, inlinedAt: !8862)
!8951 = !DILocation(line: 358, column: 6, scope: !8952, inlinedAt: !8862)
!8952 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 358, column: 6)
!8953 = !DILocation(line: 358, column: 11, scope: !8952, inlinedAt: !8862)
!8954 = !DILocation(line: 358, column: 6, scope: !8858, inlinedAt: !8862)
!8955 = !DILocation(line: 358, column: 26, scope: !8952, inlinedAt: !8862)
!8956 = !DILocation(line: 359, column: 6, scope: !8957, inlinedAt: !8862)
!8957 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 359, column: 6)
!8958 = !DILocation(line: 359, column: 11, scope: !8957, inlinedAt: !8862)
!8959 = !DILocation(line: 359, column: 6, scope: !8858, inlinedAt: !8862)
!8960 = !DILocation(line: 359, column: 26, scope: !8957, inlinedAt: !8862)
!8961 = !DILocation(line: 360, column: 6, scope: !8962, inlinedAt: !8862)
!8962 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 360, column: 6)
!8963 = !DILocation(line: 360, column: 11, scope: !8962, inlinedAt: !8862)
!8964 = !DILocation(line: 360, column: 6, scope: !8858, inlinedAt: !8862)
!8965 = !DILocation(line: 360, column: 26, scope: !8962, inlinedAt: !8862)
!8966 = !DILocation(line: 361, column: 6, scope: !8967, inlinedAt: !8862)
!8967 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 361, column: 6)
!8968 = !DILocation(line: 361, column: 11, scope: !8967, inlinedAt: !8862)
!8969 = !DILocation(line: 361, column: 6, scope: !8858, inlinedAt: !8862)
!8970 = !DILocation(line: 361, column: 26, scope: !8967, inlinedAt: !8862)
!8971 = !DILocation(line: 362, column: 6, scope: !8972, inlinedAt: !8862)
!8972 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 362, column: 6)
!8973 = !DILocation(line: 362, column: 11, scope: !8972, inlinedAt: !8862)
!8974 = !DILocation(line: 362, column: 6, scope: !8858, inlinedAt: !8862)
!8975 = !DILocation(line: 362, column: 26, scope: !8972, inlinedAt: !8862)
!8976 = !DILocation(line: 363, column: 6, scope: !8977, inlinedAt: !8862)
!8977 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 363, column: 6)
!8978 = !DILocation(line: 363, column: 11, scope: !8977, inlinedAt: !8862)
!8979 = !DILocation(line: 363, column: 6, scope: !8858, inlinedAt: !8862)
!8980 = !DILocation(line: 363, column: 26, scope: !8977, inlinedAt: !8862)
!8981 = !DILocation(line: 364, column: 6, scope: !8982, inlinedAt: !8862)
!8982 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 364, column: 6)
!8983 = !DILocation(line: 364, column: 11, scope: !8982, inlinedAt: !8862)
!8984 = !DILocation(line: 364, column: 6, scope: !8858, inlinedAt: !8862)
!8985 = !DILocation(line: 364, column: 26, scope: !8982, inlinedAt: !8862)
!8986 = !DILocation(line: 365, column: 6, scope: !8987, inlinedAt: !8862)
!8987 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 365, column: 6)
!8988 = !DILocation(line: 365, column: 11, scope: !8987, inlinedAt: !8862)
!8989 = !DILocation(line: 365, column: 6, scope: !8858, inlinedAt: !8862)
!8990 = !DILocation(line: 365, column: 26, scope: !8987, inlinedAt: !8862)
!8991 = !DILocation(line: 366, column: 6, scope: !8992, inlinedAt: !8862)
!8992 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 366, column: 6)
!8993 = !DILocation(line: 366, column: 11, scope: !8992, inlinedAt: !8862)
!8994 = !DILocation(line: 366, column: 6, scope: !8858, inlinedAt: !8862)
!8995 = !DILocation(line: 366, column: 26, scope: !8992, inlinedAt: !8862)
!8996 = !DILocation(line: 367, column: 6, scope: !8997, inlinedAt: !8862)
!8997 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 367, column: 6)
!8998 = !DILocation(line: 367, column: 11, scope: !8997, inlinedAt: !8862)
!8999 = !DILocation(line: 367, column: 6, scope: !8858, inlinedAt: !8862)
!9000 = !DILocation(line: 367, column: 26, scope: !8997, inlinedAt: !8862)
!9001 = !DILocation(line: 368, column: 6, scope: !9002, inlinedAt: !8862)
!9002 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 368, column: 6)
!9003 = !DILocation(line: 368, column: 11, scope: !9002, inlinedAt: !8862)
!9004 = !DILocation(line: 368, column: 6, scope: !8858, inlinedAt: !8862)
!9005 = !DILocation(line: 368, column: 26, scope: !9002, inlinedAt: !8862)
!9006 = !DILocation(line: 369, column: 6, scope: !9007, inlinedAt: !8862)
!9007 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 369, column: 6)
!9008 = !DILocation(line: 369, column: 11, scope: !9007, inlinedAt: !8862)
!9009 = !DILocation(line: 369, column: 6, scope: !8858, inlinedAt: !8862)
!9010 = !DILocation(line: 369, column: 26, scope: !9007, inlinedAt: !8862)
!9011 = !DILocation(line: 370, column: 6, scope: !9012, inlinedAt: !8862)
!9012 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 370, column: 6)
!9013 = !DILocation(line: 370, column: 11, scope: !9012, inlinedAt: !8862)
!9014 = !DILocation(line: 370, column: 6, scope: !8858, inlinedAt: !8862)
!9015 = !DILocation(line: 370, column: 26, scope: !9012, inlinedAt: !8862)
!9016 = !DILocation(line: 371, column: 6, scope: !9017, inlinedAt: !8862)
!9017 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 371, column: 6)
!9018 = !DILocation(line: 371, column: 11, scope: !9017, inlinedAt: !8862)
!9019 = !DILocation(line: 371, column: 6, scope: !8858, inlinedAt: !8862)
!9020 = !DILocation(line: 371, column: 26, scope: !9017, inlinedAt: !8862)
!9021 = !DILocation(line: 372, column: 6, scope: !9022, inlinedAt: !8862)
!9022 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 372, column: 6)
!9023 = !DILocation(line: 372, column: 11, scope: !9022, inlinedAt: !8862)
!9024 = !DILocation(line: 372, column: 6, scope: !8858, inlinedAt: !8862)
!9025 = !DILocation(line: 372, column: 26, scope: !9022, inlinedAt: !8862)
!9026 = !DILocation(line: 373, column: 6, scope: !9027, inlinedAt: !8862)
!9027 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 373, column: 6)
!9028 = !DILocation(line: 373, column: 11, scope: !9027, inlinedAt: !8862)
!9029 = !DILocation(line: 373, column: 6, scope: !8858, inlinedAt: !8862)
!9030 = !DILocation(line: 373, column: 26, scope: !9027, inlinedAt: !8862)
!9031 = !DILocation(line: 374, column: 6, scope: !9032, inlinedAt: !8862)
!9032 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 374, column: 6)
!9033 = !DILocation(line: 374, column: 11, scope: !9032, inlinedAt: !8862)
!9034 = !DILocation(line: 374, column: 6, scope: !8858, inlinedAt: !8862)
!9035 = !DILocation(line: 374, column: 26, scope: !9032, inlinedAt: !8862)
!9036 = !DILocation(line: 375, column: 6, scope: !9037, inlinedAt: !8862)
!9037 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 375, column: 6)
!9038 = !DILocation(line: 375, column: 11, scope: !9037, inlinedAt: !8862)
!9039 = !DILocation(line: 375, column: 6, scope: !8858, inlinedAt: !8862)
!9040 = !DILocation(line: 375, column: 27, scope: !9037, inlinedAt: !8862)
!9041 = !DILocation(line: 376, column: 6, scope: !9042, inlinedAt: !8862)
!9042 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 376, column: 6)
!9043 = !DILocation(line: 376, column: 11, scope: !9042, inlinedAt: !8862)
!9044 = !DILocation(line: 376, column: 6, scope: !8858, inlinedAt: !8862)
!9045 = !DILocation(line: 376, column: 32, scope: !9042, inlinedAt: !8862)
!9046 = !DILocation(line: 377, column: 6, scope: !9047, inlinedAt: !8862)
!9047 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 377, column: 6)
!9048 = !DILocation(line: 377, column: 11, scope: !9047, inlinedAt: !8862)
!9049 = !DILocation(line: 377, column: 6, scope: !8858, inlinedAt: !8862)
!9050 = !DILocation(line: 377, column: 32, scope: !9047, inlinedAt: !8862)
!9051 = !DILocation(line: 378, column: 6, scope: !9052, inlinedAt: !8862)
!9052 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 378, column: 6)
!9053 = !DILocation(line: 378, column: 11, scope: !9052, inlinedAt: !8862)
!9054 = !DILocation(line: 378, column: 6, scope: !8858, inlinedAt: !8862)
!9055 = !DILocation(line: 378, column: 32, scope: !9052, inlinedAt: !8862)
!9056 = !DILocation(line: 379, column: 6, scope: !9057, inlinedAt: !8862)
!9057 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 379, column: 6)
!9058 = !DILocation(line: 379, column: 11, scope: !9057, inlinedAt: !8862)
!9059 = !DILocation(line: 379, column: 6, scope: !8858, inlinedAt: !8862)
!9060 = !DILocation(line: 379, column: 33, scope: !9057, inlinedAt: !8862)
!9061 = !DILocation(line: 380, column: 6, scope: !9062, inlinedAt: !8862)
!9062 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 380, column: 6)
!9063 = !DILocation(line: 380, column: 11, scope: !9062, inlinedAt: !8862)
!9064 = !DILocation(line: 380, column: 6, scope: !8858, inlinedAt: !8862)
!9065 = !DILocation(line: 380, column: 33, scope: !9062, inlinedAt: !8862)
!9066 = !DILocation(line: 381, column: 6, scope: !9067, inlinedAt: !8862)
!9067 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 381, column: 6)
!9068 = !DILocation(line: 381, column: 11, scope: !9067, inlinedAt: !8862)
!9069 = !DILocation(line: 381, column: 6, scope: !8858, inlinedAt: !8862)
!9070 = !DILocation(line: 381, column: 33, scope: !9067, inlinedAt: !8862)
!9071 = !DILocation(line: 382, column: 2, scope: !9072, inlinedAt: !8862)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !169, line: 382, column: 2)
!9073 = distinct !DILexicalBlock(scope: !8858, file: !169, line: 382, column: 2)
!9074 = !{i32 -2143535998, i32 -2143535969, i32 -2143535923, i32 -2143535865, i32 -2143535811, i32 -2143535757, i32 -2143535702, i32 -2143535671}
!9075 = !DILocation(line: 382, column: 2, scope: !9076, inlinedAt: !8862)
!9076 = distinct !DILexicalBlock(scope: !9077, file: !169, line: 382, column: 2)
!9077 = distinct !DILexicalBlock(scope: !9073, file: !169, line: 382, column: 2)
!9078 = !{i32 -2143535228, i32 -2143535221, i32 -2143535167, i32 -2143535136, i32 -2143535106}
!9079 = !DILocation(line: 382, column: 2, scope: !9077, inlinedAt: !8862)
!9080 = !DILocation(line: 386, column: 1, scope: !8858, inlinedAt: !8862)
!9081 = !DILocation(line: 547, column: 9, scope: !8839, inlinedAt: !8844)
!9082 = !DILocation(line: 549, column: 8, scope: !9083, inlinedAt: !8844)
!9083 = distinct !DILexicalBlock(scope: !8839, file: !169, line: 549, column: 7)
!9084 = !DILocation(line: 549, column: 7, scope: !8839, inlinedAt: !8844)
!9085 = !DILocation(line: 550, column: 4, scope: !9083, inlinedAt: !8844)
!9086 = !DILocation(line: 553, column: 33, scope: !8839, inlinedAt: !8844)
!9087 = !DILocation(line: 325, column: 6, scope: !9088, inlinedAt: !8856)
!9088 = distinct !DILexicalBlock(scope: !8852, file: !169, line: 325, column: 6)
!9089 = !DILocation(line: 325, column: 6, scope: !8852, inlinedAt: !8856)
!9090 = !DILocation(line: 326, column: 3, scope: !9088, inlinedAt: !8856)
!9091 = !DILocation(line: 332, column: 9, scope: !8852, inlinedAt: !8856)
!9092 = !DILocation(line: 332, column: 15, scope: !8852, inlinedAt: !8856)
!9093 = !DILocation(line: 332, column: 2, scope: !8852, inlinedAt: !8856)
!9094 = !DILocation(line: 336, column: 1, scope: !8852, inlinedAt: !8856)
!9095 = !DILocation(line: 553, column: 5, scope: !8839, inlinedAt: !8844)
!9096 = !DILocation(line: 553, column: 41, scope: !8839, inlinedAt: !8844)
!9097 = !DILocation(line: 554, column: 5, scope: !8839, inlinedAt: !8844)
!9098 = !DILocation(line: 554, column: 12, scope: !8839, inlinedAt: !8844)
!9099 = !DILocation(line: 448, column: 31, scope: !8834, inlinedAt: !8838)
!9100 = !DILocation(line: 448, column: 34, scope: !8834, inlinedAt: !8838)
!9101 = !DILocation(line: 448, column: 14, scope: !8834, inlinedAt: !8838)
!9102 = !DILocation(line: 450, column: 22, scope: !8834, inlinedAt: !8838)
!9103 = !DILocation(line: 450, column: 25, scope: !8834, inlinedAt: !8838)
!9104 = !DILocation(line: 450, column: 30, scope: !8834, inlinedAt: !8838)
!9105 = !DILocation(line: 450, column: 36, scope: !8834, inlinedAt: !8838)
!9106 = !DILocation(line: 450, column: 8, scope: !8834, inlinedAt: !8838)
!9107 = !DILocation(line: 450, column: 6, scope: !8834, inlinedAt: !8838)
!9108 = !DILocation(line: 451, column: 9, scope: !8834, inlinedAt: !8838)
!9109 = !DILocation(line: 552, column: 3, scope: !8839, inlinedAt: !8844)
!9110 = !DILocation(line: 557, column: 19, scope: !8841, inlinedAt: !8844)
!9111 = !DILocation(line: 557, column: 25, scope: !8841, inlinedAt: !8844)
!9112 = !DILocation(line: 557, column: 9, scope: !8841, inlinedAt: !8844)
!9113 = !DILocation(line: 557, column: 2, scope: !8841, inlinedAt: !8844)
!9114 = !DILocation(line: 558, column: 1, scope: !8841, inlinedAt: !8844)
!9115 = !DILocation(line: 3596, column: 8, scope: !8832)
!9116 = !DILocation(line: 3596, column: 6, scope: !8832)
!9117 = !DILocation(line: 3597, column: 2, scope: !8832)
!9118 = !DILocation(line: 3597, column: 2, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 3597, column: 2)
!9120 = !DILocation(line: 3598, column: 7, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 3598, column: 6)
!9122 = !DILocation(line: 3598, column: 6, scope: !8832)
!9123 = !DILocation(line: 3599, column: 3, scope: !9121)
!9124 = !DILocation(line: 3600, column: 2, scope: !8832)
!9125 = !DILocation(line: 3600, column: 7, scope: !8832)
!9126 = !DILocation(line: 3600, column: 11, scope: !8832)
!9127 = !DILocation(line: 3601, column: 18, scope: !8832)
!9128 = !DILocation(line: 3601, column: 23, scope: !8832)
!9129 = !DILocation(line: 3601, column: 2, scope: !8832)
!9130 = !DILocation(line: 3602, column: 18, scope: !8832)
!9131 = !DILocation(line: 3602, column: 23, scope: !8832)
!9132 = !DILocation(line: 3602, column: 2, scope: !8832)
!9133 = !DILocation(line: 3603, column: 2, scope: !8832)
!9134 = !DILocation(line: 3603, column: 7, scope: !8832)
!9135 = !DILocation(line: 3603, column: 18, scope: !8832)
!9136 = !DILocation(line: 3604, column: 2, scope: !8832)
!9137 = !DILocation(line: 3604, column: 7, scope: !8832)
!9138 = !DILocation(line: 3604, column: 16, scope: !8832)
!9139 = !DILocation(line: 3605, column: 2, scope: !8832)
!9140 = !DILocation(line: 3605, column: 7, scope: !8832)
!9141 = !DILocation(line: 3605, column: 19, scope: !8832)
!9142 = !DILocation(line: 3606, column: 19, scope: !8832)
!9143 = !DILocation(line: 3606, column: 2, scope: !8832)
!9144 = !DILocation(line: 3606, column: 7, scope: !8832)
!9145 = !DILocation(line: 3606, column: 17, scope: !8832)
!9146 = !DILocation(line: 3607, column: 20, scope: !8832)
!9147 = !DILocation(line: 3607, column: 2, scope: !8832)
!9148 = !DILocation(line: 3607, column: 7, scope: !8832)
!9149 = !DILocation(line: 3607, column: 18, scope: !8832)
!9150 = !DILocation(line: 3608, column: 18, scope: !8832)
!9151 = !DILocation(line: 3608, column: 26, scope: !8832)
!9152 = !DILocation(line: 3608, column: 33, scope: !8832)
!9153 = !DILocation(line: 3608, column: 41, scope: !8832)
!9154 = !DILocation(line: 3608, column: 2, scope: !8832)
!9155 = !DILocation(line: 3608, column: 7, scope: !8832)
!9156 = !DILocation(line: 3608, column: 16, scope: !8832)
!9157 = !DILocation(line: 3611, column: 6, scope: !8832)
!9158 = !DILocation(line: 3610, column: 2, scope: !8832)
!9159 = !DILocation(line: 3610, column: 7, scope: !8832)
!9160 = !DILocation(line: 3610, column: 20, scope: !8832)
!9161 = !DILocation(line: 3615, column: 2, scope: !8832)
!9162 = !DILocation(line: 3615, column: 7, scope: !8832)
!9163 = !DILocation(line: 3615, column: 16, scope: !8832)
!9164 = !DILocation(line: 3616, column: 2, scope: !8832)
!9165 = !DILocation(line: 3616, column: 7, scope: !8832)
!9166 = !DILocation(line: 3616, column: 17, scope: !8832)
!9167 = !DILocation(line: 3617, column: 38, scope: !8832)
!9168 = !DILocation(line: 3617, column: 25, scope: !8832)
!9169 = !DILocation(line: 3617, column: 2, scope: !8832)
!9170 = !DILocation(line: 3617, column: 7, scope: !8832)
!9171 = !DILocation(line: 3617, column: 23, scope: !8832)
!9172 = !DILocation(line: 3618, column: 2, scope: !8832)
!9173 = !DILocation(line: 3618, column: 7, scope: !8832)
!9174 = !DILocation(line: 3618, column: 19, scope: !8832)
!9175 = !DILocation(line: 3619, column: 2, scope: !8832)
!9176 = !DILocation(line: 3619, column: 7, scope: !8832)
!9177 = !DILocation(line: 3619, column: 19, scope: !8832)
!9178 = !DILocation(line: 3620, column: 2, scope: !8832)
!9179 = !DILocation(line: 3620, column: 7, scope: !8832)
!9180 = !DILocation(line: 3620, column: 12, scope: !8832)
!9181 = !DILocation(line: 3623, column: 7, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 3623, column: 6)
!9183 = !DILocation(line: 3623, column: 12, scope: !9182)
!9184 = !DILocation(line: 3623, column: 21, scope: !9182)
!9185 = !DILocation(line: 3624, column: 6, scope: !9182)
!9186 = !DILocation(line: 3624, column: 10, scope: !9182)
!9187 = !DILocation(line: 3624, column: 15, scope: !9182)
!9188 = !DILocation(line: 3624, column: 22, scope: !9182)
!9189 = !DILocation(line: 3623, column: 6, scope: !8832)
!9190 = !DILocation(line: 3625, column: 3, scope: !9182)
!9191 = !DILocation(line: 3625, column: 8, scope: !9182)
!9192 = !DILocation(line: 3625, column: 18, scope: !9182)
!9193 = !DILocation(line: 3628, column: 6, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 3628, column: 6)
!9195 = !DILocation(line: 3628, column: 11, scope: !9194)
!9196 = !DILocation(line: 3628, column: 20, scope: !9194)
!9197 = !DILocation(line: 3628, column: 6, scope: !8832)
!9198 = !DILocation(line: 3629, column: 9, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9194, file: !3, line: 3629, column: 7)
!9200 = !DILocation(line: 3629, column: 8, scope: !9199)
!9201 = !DILocation(line: 3629, column: 14, scope: !9199)
!9202 = !DILocation(line: 3629, column: 17, scope: !9199)
!9203 = !DILocation(line: 3629, column: 7, scope: !9194)
!9204 = !DILocation(line: 3630, column: 4, scope: !9199)
!9205 = !DILocation(line: 3630, column: 9, scope: !9199)
!9206 = !DILocation(line: 3630, column: 19, scope: !9199)
!9207 = !DILocation(line: 3632, column: 6, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 3632, column: 6)
!9209 = !DILocation(line: 3632, column: 11, scope: !9208)
!9210 = !DILocation(line: 3632, column: 22, scope: !9208)
!9211 = !DILocation(line: 3632, column: 6, scope: !8832)
!9212 = !DILocalVariable(name: "p", scope: !9213, file: !3, line: 3634, type: !5226)
!9213 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 3632, column: 28)
!9214 = !DILocation(line: 3634, column: 24, scope: !9213)
!9215 = !DILocalVariable(name: "__mptr", scope: !9216, file: !3, line: 3635, type: !256)
!9216 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 3635, column: 3)
!9217 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 3635, column: 3)
!9218 = !DILocation(line: 3635, column: 3, scope: !9216)
!9219 = !DILocation(line: 3635, column: 3, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9216, file: !3, line: 3635, column: 3)
!9221 = !DILocation(line: 3635, column: 3, scope: !9217)
!9222 = !DILocation(line: 3635, column: 3, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 3635, column: 3)
!9224 = !DILocation(line: 3636, column: 8, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9223, file: !3, line: 3636, column: 8)
!9226 = !DILocation(line: 3636, column: 11, scope: !9225)
!9227 = !DILocation(line: 3636, column: 24, scope: !9225)
!9228 = !DILocation(line: 3636, column: 29, scope: !9225)
!9229 = !DILocation(line: 3636, column: 21, scope: !9225)
!9230 = !DILocation(line: 3636, column: 8, scope: !9223)
!9231 = !DILocation(line: 3637, column: 5, scope: !9225)
!9232 = !DILocalVariable(name: "__mptr", scope: !9233, file: !3, line: 3635, type: !256)
!9233 = distinct !DILexicalBlock(scope: !9223, file: !3, line: 3635, column: 3)
!9234 = !DILocation(line: 3635, column: 3, scope: !9233)
!9235 = !DILocation(line: 3635, column: 3, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9233, file: !3, line: 3635, column: 3)
!9237 = distinct !{!9237, !9221, !9238}
!9238 = !DILocation(line: 3637, column: 5, scope: !9217)
!9239 = !DILocation(line: 3638, column: 3, scope: !9213)
!9240 = !DILocation(line: 3638, column: 3, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 3638, column: 3)
!9242 = !DILocation(line: 3642, column: 20, scope: !9213)
!9243 = !DILocation(line: 3642, column: 23, scope: !9213)
!9244 = !DILocation(line: 3642, column: 3, scope: !9213)
!9245 = !DILocation(line: 3642, column: 8, scope: !9213)
!9246 = !DILocation(line: 3642, column: 18, scope: !9213)
!9247 = !DILocation(line: 3643, column: 22, scope: !9213)
!9248 = !DILocation(line: 3643, column: 25, scope: !9213)
!9249 = !DILocation(line: 3643, column: 3, scope: !9213)
!9250 = !DILocation(line: 3643, column: 8, scope: !9213)
!9251 = !DILocation(line: 3643, column: 20, scope: !9213)
!9252 = !DILocation(line: 3644, column: 26, scope: !9213)
!9253 = !DILocation(line: 3644, column: 29, scope: !9213)
!9254 = !DILocation(line: 3644, column: 3, scope: !9213)
!9255 = !DILocation(line: 3644, column: 8, scope: !9213)
!9256 = !DILocation(line: 3644, column: 24, scope: !9213)
!9257 = !DILocation(line: 3645, column: 22, scope: !9213)
!9258 = !DILocation(line: 3645, column: 25, scope: !9213)
!9259 = !DILocation(line: 3645, column: 3, scope: !9213)
!9260 = !DILocation(line: 3645, column: 8, scope: !9213)
!9261 = !DILocation(line: 3645, column: 20, scope: !9213)
!9262 = !DILocation(line: 3646, column: 19, scope: !9213)
!9263 = !DILocation(line: 3646, column: 22, scope: !9213)
!9264 = !DILocation(line: 3646, column: 3, scope: !9213)
!9265 = !DILocation(line: 3646, column: 8, scope: !9213)
!9266 = !DILocation(line: 3646, column: 17, scope: !9213)
!9267 = !DILocation(line: 3647, column: 2, scope: !9213)
!9268 = !DILocation(line: 3648, column: 9, scope: !8832)
!9269 = !DILocation(line: 3648, column: 2, scope: !8832)
!9270 = !DILocation(line: 3649, column: 1, scope: !8832)
!9271 = distinct !DISubprogram(name: "adapter_add_device", scope: !3, file: !3, line: 3658, type: !9272, scopeLine: 3660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!9272 = !DISubroutineType(types: !9273)
!9273 = !{null, !185, !5226}
!9274 = !DILocalVariable(name: "acb", arg: 1, scope: !9271, file: !3, line: 3658, type: !185)
!9275 = !DILocation(line: 3658, column: 54, scope: !9271)
!9276 = !DILocalVariable(name: "dcb", arg: 2, scope: !9271, file: !3, line: 3659, type: !5226)
!9277 = !DILocation(line: 3659, column: 24, scope: !9271)
!9278 = !DILocation(line: 3662, column: 13, scope: !9271)
!9279 = !DILocation(line: 3662, column: 2, scope: !9271)
!9280 = !DILocation(line: 3662, column: 7, scope: !9271)
!9281 = !DILocation(line: 3662, column: 11, scope: !9271)
!9282 = !DILocation(line: 3665, column: 18, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9271, file: !3, line: 3665, column: 6)
!9284 = !DILocation(line: 3665, column: 23, scope: !9283)
!9285 = !DILocation(line: 3665, column: 6, scope: !9283)
!9286 = !DILocation(line: 3665, column: 6, scope: !9271)
!9287 = !DILocation(line: 3666, column: 24, scope: !9283)
!9288 = !DILocation(line: 3666, column: 3, scope: !9283)
!9289 = !DILocation(line: 3666, column: 8, scope: !9283)
!9290 = !DILocation(line: 3666, column: 22, scope: !9283)
!9291 = !DILocation(line: 3669, column: 17, scope: !9271)
!9292 = !DILocation(line: 3669, column: 22, scope: !9271)
!9293 = !DILocation(line: 3669, column: 29, scope: !9271)
!9294 = !DILocation(line: 3669, column: 34, scope: !9271)
!9295 = !DILocation(line: 3669, column: 2, scope: !9271)
!9296 = !DILocation(line: 3672, column: 40, scope: !9271)
!9297 = !DILocation(line: 3672, column: 45, scope: !9271)
!9298 = !DILocation(line: 3672, column: 37, scope: !9271)
!9299 = !DILocation(line: 3672, column: 2, scope: !9271)
!9300 = !DILocation(line: 3672, column: 7, scope: !9271)
!9301 = !DILocation(line: 3672, column: 15, scope: !9271)
!9302 = !DILocation(line: 3672, column: 20, scope: !9271)
!9303 = !DILocation(line: 3672, column: 31, scope: !9271)
!9304 = !DILocation(line: 3673, column: 51, scope: !9271)
!9305 = !DILocation(line: 3673, column: 2, scope: !9271)
!9306 = !DILocation(line: 3673, column: 7, scope: !9271)
!9307 = !DILocation(line: 3673, column: 16, scope: !9271)
!9308 = !DILocation(line: 3673, column: 21, scope: !9271)
!9309 = !DILocation(line: 3673, column: 32, scope: !9271)
!9310 = !DILocation(line: 3673, column: 37, scope: !9271)
!9311 = !DILocation(line: 3673, column: 49, scope: !9271)
!9312 = !DILocation(line: 3674, column: 1, scope: !9271)
!9313 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !6952, file: !6952, line: 33, type: !6953, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!9314 = !DILocalVariable(name: "list", arg: 1, scope: !9313, file: !6952, line: 33, type: !197)
!9315 = !DILocation(line: 33, column: 53, scope: !9313)
!9316 = !DILocation(line: 35, column: 2, scope: !9313)
!9317 = !DILocation(line: 35, column: 2, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9313, file: !6952, line: 35, column: 2)
!9319 = !DILocation(line: 35, column: 2, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9318, file: !6952, line: 35, column: 2)
!9321 = !DILocation(line: 35, column: 2, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9318, file: !6952, line: 35, column: 2)
!9323 = !DILocation(line: 36, column: 15, scope: !9313)
!9324 = !DILocation(line: 36, column: 2, scope: !9313)
!9325 = !DILocation(line: 36, column: 8, scope: !9313)
!9326 = !DILocation(line: 36, column: 13, scope: !9313)
!9327 = !DILocation(line: 37, column: 1, scope: !9313)
!9328 = distinct !DISubprogram(name: "get_order", scope: !9329, file: !9329, line: 29, type: !9330, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!9329 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!9330 = !DISubroutineType(types: !9331)
!9331 = !{!267, !248}
!9332 = !DILocalVariable(name: "x", arg: 1, scope: !9333, file: !9334, line: 366, type: !299)
!9333 = distinct !DISubprogram(name: "fls64", scope: !9334, file: !9334, line: 366, type: !9335, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!9334 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!9335 = !DISubroutineType(types: !9336)
!9336 = !{!267, !299}
!9337 = !DILocation(line: 366, column: 40, scope: !9333, inlinedAt: !9338)
!9338 = distinct !DILocation(line: 46, column: 9, scope: !9328)
!9339 = !DILocalVariable(name: "bitpos", scope: !9333, file: !9334, line: 368, type: !267)
!9340 = !DILocation(line: 368, column: 6, scope: !9333, inlinedAt: !9338)
!9341 = !DILocalVariable(name: "size", arg: 1, scope: !9328, file: !9329, line: 29, type: !248)
!9342 = !DILocation(line: 29, column: 63, scope: !9328)
!9343 = !DILocation(line: 31, column: 27, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9328, file: !9329, line: 31, column: 6)
!9345 = !DILocation(line: 31, column: 6, scope: !9344)
!9346 = !DILocation(line: 31, column: 6, scope: !9328)
!9347 = !DILocation(line: 32, column: 8, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9349, file: !9329, line: 32, column: 7)
!9349 = distinct !DILexicalBlock(scope: !9344, file: !9329, line: 31, column: 34)
!9350 = !DILocation(line: 32, column: 7, scope: !9349)
!9351 = !DILocation(line: 33, column: 4, scope: !9348)
!9352 = !DILocation(line: 35, column: 7, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9349, file: !9329, line: 35, column: 7)
!9354 = !DILocation(line: 35, column: 12, scope: !9353)
!9355 = !DILocation(line: 35, column: 7, scope: !9349)
!9356 = !DILocation(line: 36, column: 4, scope: !9353)
!9357 = !DILocation(line: 38, column: 10, scope: !9349)
!9358 = !DILocation(line: 38, column: 28, scope: !9349)
!9359 = !DILocation(line: 38, column: 41, scope: !9349)
!9360 = !DILocation(line: 38, column: 3, scope: !9349)
!9361 = !DILocation(line: 41, column: 6, scope: !9328)
!9362 = !DILocation(line: 42, column: 7, scope: !9328)
!9363 = !DILocation(line: 46, column: 15, scope: !9328)
!9364 = !DILocation(line: 374, column: 2, scope: !9333, inlinedAt: !9338)
!9365 = !DILocation(line: 376, column: 14, scope: !9333, inlinedAt: !9338)
!9366 = !{i32 436563}
!9367 = !DILocation(line: 377, column: 9, scope: !9333, inlinedAt: !9338)
!9368 = !DILocation(line: 377, column: 16, scope: !9333, inlinedAt: !9338)
!9369 = !DILocation(line: 46, column: 2, scope: !9328)
!9370 = !DILocation(line: 48, column: 1, scope: !9328)
!9371 = distinct !DISubprogram(name: "__ilog2_u64", scope: !9372, file: !9372, line: 30, type: !9373, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!9372 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!9373 = !DISubroutineType(types: !9374)
!9374 = !{!267, !298}
!9375 = !DILocation(line: 366, column: 40, scope: !9333, inlinedAt: !9376)
!9376 = distinct !DILocation(line: 32, column: 9, scope: !9371)
!9377 = !DILocation(line: 368, column: 6, scope: !9333, inlinedAt: !9376)
!9378 = !DILocalVariable(name: "n", arg: 1, scope: !9371, file: !9372, line: 30, type: !298)
!9379 = !DILocation(line: 30, column: 21, scope: !9371)
!9380 = !DILocation(line: 32, column: 15, scope: !9371)
!9381 = !DILocation(line: 374, column: 2, scope: !9333, inlinedAt: !9376)
!9382 = !DILocation(line: 376, column: 14, scope: !9333, inlinedAt: !9376)
!9383 = !DILocation(line: 377, column: 9, scope: !9333, inlinedAt: !9376)
!9384 = !DILocation(line: 377, column: 16, scope: !9333, inlinedAt: !9376)
!9385 = !DILocation(line: 32, column: 18, scope: !9371)
!9386 = !DILocation(line: 32, column: 2, scope: !9371)
!9387 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !9388, file: !9388, line: 137, type: !9389, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!9388 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!9389 = !DISubroutineType(types: !9390)
!9390 = !{!256, !2562, !1811, !823, !502}
!9391 = !DILocalVariable(name: "s", arg: 1, scope: !9387, file: !9388, line: 137, type: !2562)
!9392 = !DILocation(line: 137, column: 54, scope: !9387)
!9393 = !DILocalVariable(name: "object", arg: 2, scope: !9387, file: !9388, line: 137, type: !1811)
!9394 = !DILocation(line: 137, column: 69, scope: !9387)
!9395 = !DILocalVariable(name: "size", arg: 3, scope: !9387, file: !9388, line: 138, type: !823)
!9396 = !DILocation(line: 138, column: 12, scope: !9387)
!9397 = !DILocalVariable(name: "flags", arg: 4, scope: !9387, file: !9388, line: 138, type: !502)
!9398 = !DILocation(line: 138, column: 24, scope: !9387)
!9399 = !DILocation(line: 140, column: 17, scope: !9387)
!9400 = !DILocation(line: 140, column: 2, scope: !9387)
!9401 = distinct !DISubprogram(name: "adapter_remove_and_free_device", scope: !3, file: !3, line: 3721, type: !9272, scopeLine: 3723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!9402 = !DILocalVariable(name: "acb", arg: 1, scope: !9401, file: !3, line: 3721, type: !185)
!9403 = !DILocation(line: 3721, column: 66, scope: !9401)
!9404 = !DILocalVariable(name: "dcb", arg: 2, scope: !9401, file: !3, line: 3722, type: !5226)
!9405 = !DILocation(line: 3722, column: 24, scope: !9401)
!9406 = !DILocation(line: 3724, column: 17, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9401, file: !3, line: 3724, column: 6)
!9408 = !DILocation(line: 3724, column: 22, scope: !9407)
!9409 = !DILocation(line: 3724, column: 6, scope: !9407)
!9410 = !DILocation(line: 3724, column: 38, scope: !9407)
!9411 = !DILocation(line: 3724, column: 6, scope: !9401)
!9412 = !DILocation(line: 3725, column: 3, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 3724, column: 43)
!9414 = !DILocation(line: 3725, column: 3, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9413, file: !3, line: 3725, column: 3)
!9416 = !DILocation(line: 3729, column: 3, scope: !9413)
!9417 = !DILocation(line: 3731, column: 24, scope: !9401)
!9418 = !DILocation(line: 3731, column: 29, scope: !9401)
!9419 = !DILocation(line: 3731, column: 2, scope: !9401)
!9420 = !DILocation(line: 3732, column: 8, scope: !9401)
!9421 = !DILocation(line: 3732, column: 2, scope: !9401)
!9422 = !DILocation(line: 3733, column: 1, scope: !9401)
!9423 = distinct !DISubprogram(name: "adapter_remove_device", scope: !3, file: !3, line: 3686, type: !9272, scopeLine: 3688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!9424 = !DILocalVariable(name: "acb", arg: 1, scope: !9423, file: !3, line: 3686, type: !185)
!9425 = !DILocation(line: 3686, column: 57, scope: !9423)
!9426 = !DILocalVariable(name: "dcb", arg: 2, scope: !9423, file: !3, line: 3687, type: !5226)
!9427 = !DILocation(line: 3687, column: 24, scope: !9423)
!9428 = !DILocalVariable(name: "i", scope: !9423, file: !3, line: 3689, type: !5226)
!9429 = !DILocation(line: 3689, column: 23, scope: !9423)
!9430 = !DILocalVariable(name: "tmp", scope: !9423, file: !3, line: 3690, type: !5226)
!9431 = !DILocation(line: 3690, column: 23, scope: !9423)
!9432 = !DILocation(line: 3691, column: 2, scope: !9423)
!9433 = !DILocation(line: 3691, column: 2, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 3691, column: 2)
!9435 = !DILocation(line: 3695, column: 6, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 3695, column: 6)
!9437 = !DILocation(line: 3695, column: 11, scope: !9436)
!9438 = !DILocation(line: 3695, column: 25, scope: !9436)
!9439 = !DILocation(line: 3695, column: 22, scope: !9436)
!9440 = !DILocation(line: 3695, column: 6, scope: !9423)
!9441 = !DILocation(line: 3696, column: 3, scope: !9436)
!9442 = !DILocation(line: 3696, column: 8, scope: !9436)
!9443 = !DILocation(line: 3696, column: 19, scope: !9436)
!9444 = !DILocation(line: 3697, column: 6, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 3697, column: 6)
!9446 = !DILocation(line: 3697, column: 11, scope: !9445)
!9447 = !DILocation(line: 3697, column: 28, scope: !9445)
!9448 = !DILocation(line: 3697, column: 25, scope: !9445)
!9449 = !DILocation(line: 3697, column: 6, scope: !9423)
!9450 = !DILocation(line: 3698, column: 38, scope: !9445)
!9451 = !DILocation(line: 3698, column: 43, scope: !9445)
!9452 = !DILocation(line: 3698, column: 53, scope: !9445)
!9453 = !DILocation(line: 3698, column: 24, scope: !9445)
!9454 = !DILocation(line: 3698, column: 3, scope: !9445)
!9455 = !DILocation(line: 3698, column: 8, scope: !9445)
!9456 = !DILocation(line: 3698, column: 22, scope: !9445)
!9457 = !DILocalVariable(name: "__mptr", scope: !9458, file: !3, line: 3701, type: !256)
!9458 = distinct !DILexicalBlock(scope: !9459, file: !3, line: 3701, column: 2)
!9459 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 3701, column: 2)
!9460 = !DILocation(line: 3701, column: 2, scope: !9458)
!9461 = !DILocation(line: 3701, column: 2, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9458, file: !3, line: 3701, column: 2)
!9463 = !DILocation(line: 3701, column: 2, scope: !9459)
!9464 = !DILocalVariable(name: "__mptr", scope: !9465, file: !3, line: 3701, type: !256)
!9465 = distinct !DILexicalBlock(scope: !9459, file: !3, line: 3701, column: 2)
!9466 = !DILocation(line: 3701, column: 2, scope: !9465)
!9467 = !DILocation(line: 3701, column: 2, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9465, file: !3, line: 3701, column: 2)
!9469 = !DILocation(line: 3701, column: 2, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9459, file: !3, line: 3701, column: 2)
!9471 = !DILocation(line: 3702, column: 7, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 3702, column: 7)
!9473 = !DILocation(line: 3702, column: 14, scope: !9472)
!9474 = !DILocation(line: 3702, column: 11, scope: !9472)
!9475 = !DILocation(line: 3702, column: 7, scope: !9470)
!9476 = !DILocation(line: 3703, column: 14, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 3702, column: 17)
!9478 = !DILocation(line: 3703, column: 17, scope: !9477)
!9479 = !DILocation(line: 3703, column: 4, scope: !9477)
!9480 = !DILocation(line: 3704, column: 4, scope: !9477)
!9481 = !DILocalVariable(name: "__mptr", scope: !9482, file: !3, line: 3701, type: !256)
!9482 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 3701, column: 2)
!9483 = !DILocation(line: 3701, column: 2, scope: !9482)
!9484 = !DILocation(line: 3701, column: 2, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 3701, column: 2)
!9486 = distinct !{!9486, !9463, !9487}
!9487 = !DILocation(line: 3705, column: 3, scope: !9459)
!9488 = !DILocation(line: 3708, column: 41, scope: !9423)
!9489 = !DILocation(line: 3708, column: 46, scope: !9423)
!9490 = !DILocation(line: 3708, column: 38, scope: !9423)
!9491 = !DILocation(line: 3708, column: 34, scope: !9423)
!9492 = !DILocation(line: 3708, column: 2, scope: !9423)
!9493 = !DILocation(line: 3708, column: 7, scope: !9423)
!9494 = !DILocation(line: 3708, column: 15, scope: !9423)
!9495 = !DILocation(line: 3708, column: 20, scope: !9423)
!9496 = !DILocation(line: 3708, column: 31, scope: !9423)
!9497 = !DILocation(line: 3709, column: 2, scope: !9423)
!9498 = !DILocation(line: 3709, column: 7, scope: !9423)
!9499 = !DILocation(line: 3709, column: 16, scope: !9423)
!9500 = !DILocation(line: 3709, column: 21, scope: !9423)
!9501 = !DILocation(line: 3709, column: 32, scope: !9423)
!9502 = !DILocation(line: 3709, column: 37, scope: !9423)
!9503 = !DILocation(line: 3709, column: 49, scope: !9423)
!9504 = !DILocation(line: 3710, column: 2, scope: !9423)
!9505 = !DILocation(line: 3710, column: 7, scope: !9423)
!9506 = !DILocation(line: 3710, column: 11, scope: !9423)
!9507 = !DILocation(line: 3711, column: 1, scope: !9423)
!9508 = distinct !DISubprogram(name: "request_irq", scope: !5126, file: !5126, line: 157, type: !9509, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!9509 = !DISubroutineType(types: !9510)
!9510 = !{!267, !7, !9511, !248, !645, !256}
!9511 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !5126, line: 92, baseType: !9512)
!9512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9513, size: 64)
!9513 = !DISubroutineType(types: !9514)
!9514 = !{!9515, !267, !256}
!9515 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !176, line: 17, baseType: !175)
!9516 = !DILocalVariable(name: "irq", arg: 1, scope: !9508, file: !5126, line: 157, type: !7)
!9517 = !DILocation(line: 157, column: 26, scope: !9508)
!9518 = !DILocalVariable(name: "handler", arg: 2, scope: !9508, file: !5126, line: 157, type: !9511)
!9519 = !DILocation(line: 157, column: 45, scope: !9508)
!9520 = !DILocalVariable(name: "flags", arg: 3, scope: !9508, file: !5126, line: 157, type: !248)
!9521 = !DILocation(line: 157, column: 68, scope: !9508)
!9522 = !DILocalVariable(name: "name", arg: 4, scope: !9508, file: !5126, line: 158, type: !645)
!9523 = !DILocation(line: 158, column: 18, scope: !9508)
!9524 = !DILocalVariable(name: "dev", arg: 5, scope: !9508, file: !5126, line: 158, type: !256)
!9525 = !DILocation(line: 158, column: 30, scope: !9508)
!9526 = !DILocation(line: 160, column: 30, scope: !9508)
!9527 = !DILocation(line: 160, column: 35, scope: !9508)
!9528 = !DILocation(line: 160, column: 50, scope: !9508)
!9529 = !DILocation(line: 160, column: 57, scope: !9508)
!9530 = !DILocation(line: 160, column: 63, scope: !9508)
!9531 = !DILocation(line: 160, column: 9, scope: !9508)
!9532 = !DILocation(line: 160, column: 2, scope: !9508)
!9533 = distinct !DISubprogram(name: "dc395x_interrupt", scope: !3, file: !3, line: 1667, type: !9513, scopeLine: 1668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!9534 = !DILocalVariable(name: "irq", arg: 1, scope: !9533, file: !3, line: 1667, type: !267)
!9535 = !DILocation(line: 1667, column: 41, scope: !9533)
!9536 = !DILocalVariable(name: "dev_id", arg: 2, scope: !9533, file: !3, line: 1667, type: !256)
!9537 = !DILocation(line: 1667, column: 52, scope: !9533)
!9538 = !DILocalVariable(name: "acb", scope: !9533, file: !3, line: 1669, type: !185)
!9539 = !DILocation(line: 1669, column: 24, scope: !9533)
!9540 = !DILocation(line: 1669, column: 30, scope: !9533)
!9541 = !DILocalVariable(name: "scsi_status", scope: !9533, file: !3, line: 1670, type: !918)
!9542 = !DILocation(line: 1670, column: 6, scope: !9533)
!9543 = !DILocalVariable(name: "dma_status", scope: !9533, file: !3, line: 1671, type: !410)
!9544 = !DILocation(line: 1671, column: 5, scope: !9533)
!9545 = !DILocalVariable(name: "handled", scope: !9533, file: !3, line: 1672, type: !9515)
!9546 = !DILocation(line: 1672, column: 14, scope: !9533)
!9547 = !DILocation(line: 1677, column: 16, scope: !9533)
!9548 = !DILocation(line: 1677, column: 14, scope: !9533)
!9549 = !DILocation(line: 1678, column: 15, scope: !9533)
!9550 = !DILocation(line: 1678, column: 13, scope: !9533)
!9551 = !DILocation(line: 1679, column: 6, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 1679, column: 6)
!9553 = !DILocation(line: 1679, column: 18, scope: !9552)
!9554 = !DILocation(line: 1679, column: 6, scope: !9533)
!9555 = !DILocation(line: 1681, column: 27, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9552, file: !3, line: 1679, column: 35)
!9557 = !DILocation(line: 1681, column: 32, scope: !9556)
!9558 = !DILocation(line: 1681, column: 3, scope: !9556)
!9559 = !DILocation(line: 1682, column: 11, scope: !9556)
!9560 = !DILocation(line: 1683, column: 2, scope: !9556)
!9561 = !DILocation(line: 1684, column: 11, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9552, file: !3, line: 1684, column: 11)
!9563 = !DILocation(line: 1684, column: 22, scope: !9562)
!9564 = !DILocation(line: 1684, column: 11, scope: !9552)
!9565 = !DILocation(line: 1686, column: 3, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9562, file: !3, line: 1684, column: 30)
!9567 = !DILocation(line: 1696, column: 3, scope: !9566)
!9568 = !DILocation(line: 1697, column: 7, scope: !9566)
!9569 = !DILocation(line: 1699, column: 11, scope: !9566)
!9570 = !DILocation(line: 1700, column: 2, scope: !9566)
!9571 = !DILocation(line: 1702, column: 9, scope: !9533)
!9572 = !DILocation(line: 1702, column: 2, scope: !9533)
!9573 = distinct !DISubprogram(name: "check_eeprom", scope: !3, file: !3, line: 4023, type: !9574, scopeLine: 4024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!9574 = !DISubroutineType(types: !9575)
!9575 = !{null, !8547, !248}
!9576 = !DILocalVariable(name: "eeprom", arg: 1, scope: !9573, file: !3, line: 4023, type: !8547)
!9577 = !DILocation(line: 4023, column: 44, scope: !9573)
!9578 = !DILocalVariable(name: "io_port", arg: 2, scope: !9573, file: !3, line: 4023, type: !248)
!9579 = !DILocation(line: 4023, column: 66, scope: !9573)
!9580 = !DILocalVariable(name: "w_eeprom", scope: !9573, file: !3, line: 4025, type: !5637)
!9581 = !DILocation(line: 4025, column: 7, scope: !9573)
!9582 = !DILocation(line: 4025, column: 25, scope: !9573)
!9583 = !DILocation(line: 4025, column: 18, scope: !9573)
!9584 = !DILocalVariable(name: "w_addr", scope: !9573, file: !3, line: 4026, type: !918)
!9585 = !DILocation(line: 4026, column: 6, scope: !9573)
!9586 = !DILocalVariable(name: "cksum", scope: !9573, file: !3, line: 4027, type: !918)
!9587 = !DILocation(line: 4027, column: 6, scope: !9573)
!9588 = !DILocalVariable(name: "d_addr", scope: !9573, file: !3, line: 4028, type: !250)
!9589 = !DILocation(line: 4028, column: 6, scope: !9573)
!9590 = !DILocalVariable(name: "d_eeprom", scope: !9573, file: !3, line: 4029, type: !4171)
!9591 = !DILocation(line: 4029, column: 7, scope: !9573)
!9592 = !DILocation(line: 4031, column: 20, scope: !9573)
!9593 = !DILocation(line: 4031, column: 28, scope: !9573)
!9594 = !DILocation(line: 4031, column: 2, scope: !9573)
!9595 = !DILocation(line: 4033, column: 8, scope: !9573)
!9596 = !DILocation(line: 4034, column: 14, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 4034, column: 2)
!9598 = !DILocation(line: 4034, column: 37, scope: !9597)
!9599 = !DILocation(line: 4034, column: 30, scope: !9597)
!9600 = !DILocation(line: 4034, column: 28, scope: !9597)
!9601 = !DILocation(line: 4034, column: 7, scope: !9597)
!9602 = !DILocation(line: 4034, column: 45, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 4034, column: 2)
!9604 = !DILocation(line: 4034, column: 52, scope: !9603)
!9605 = !DILocation(line: 4034, column: 2, scope: !9597)
!9606 = !DILocation(line: 4036, column: 13, scope: !9603)
!9607 = !DILocation(line: 4036, column: 12, scope: !9603)
!9608 = !DILocation(line: 4036, column: 9, scope: !9603)
!9609 = !DILocation(line: 4036, column: 3, scope: !9603)
!9610 = !DILocation(line: 4035, column: 13, scope: !9603)
!9611 = !DILocation(line: 4035, column: 25, scope: !9603)
!9612 = !DILocation(line: 4034, column: 2, scope: !9603)
!9613 = distinct !{!9613, !9605, !9614}
!9614 = !DILocation(line: 4036, column: 13, scope: !9597)
!9615 = !DILocation(line: 4037, column: 6, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 4037, column: 6)
!9617 = !DILocation(line: 4037, column: 12, scope: !9616)
!9618 = !DILocation(line: 4037, column: 6, scope: !9573)
!9619 = !DILocation(line: 4042, column: 3, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 4037, column: 23)
!9621 = !DILocation(line: 4044, column: 3, scope: !9620)
!9622 = !DILocation(line: 4044, column: 11, scope: !9620)
!9623 = !DILocation(line: 4044, column: 28, scope: !9620)
!9624 = !DILocation(line: 4045, column: 3, scope: !9620)
!9625 = !DILocation(line: 4045, column: 11, scope: !9620)
!9626 = !DILocation(line: 4045, column: 28, scope: !9620)
!9627 = !DILocation(line: 4046, column: 3, scope: !9620)
!9628 = !DILocation(line: 4046, column: 11, scope: !9620)
!9629 = !DILocation(line: 4046, column: 25, scope: !9620)
!9630 = !DILocation(line: 4047, column: 3, scope: !9620)
!9631 = !DILocation(line: 4047, column: 11, scope: !9620)
!9632 = !DILocation(line: 4047, column: 25, scope: !9620)
!9633 = !DILocation(line: 4049, column: 3, scope: !9620)
!9634 = !DILocation(line: 4049, column: 11, scope: !9620)
!9635 = !DILocation(line: 4049, column: 21, scope: !9620)
!9636 = !DILocation(line: 4050, column: 3, scope: !9620)
!9637 = !DILocation(line: 4050, column: 11, scope: !9620)
!9638 = !DILocation(line: 4050, column: 24, scope: !9620)
!9639 = !DILocation(line: 4051, column: 3, scope: !9620)
!9640 = !DILocation(line: 4051, column: 11, scope: !9620)
!9641 = !DILocation(line: 4051, column: 24, scope: !9620)
!9642 = !DILocation(line: 4052, column: 3, scope: !9620)
!9643 = !DILocation(line: 4052, column: 11, scope: !9620)
!9644 = !DILocation(line: 4052, column: 24, scope: !9620)
!9645 = !DILocation(line: 4053, column: 3, scope: !9620)
!9646 = !DILocation(line: 4053, column: 11, scope: !9620)
!9647 = !DILocation(line: 4053, column: 24, scope: !9620)
!9648 = !DILocation(line: 4055, column: 3, scope: !9620)
!9649 = !DILocation(line: 4055, column: 11, scope: !9620)
!9650 = !DILocation(line: 4055, column: 20, scope: !9620)
!9651 = !DILocation(line: 4057, column: 15, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 4057, column: 3)
!9653 = !DILocation(line: 4057, column: 38, scope: !9652)
!9654 = !DILocation(line: 4057, column: 46, scope: !9652)
!9655 = !DILocation(line: 4057, column: 31, scope: !9652)
!9656 = !DILocation(line: 4057, column: 29, scope: !9652)
!9657 = !DILocation(line: 4057, column: 8, scope: !9652)
!9658 = !DILocation(line: 4058, column: 8, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 4057, column: 3)
!9660 = !DILocation(line: 4058, column: 15, scope: !9659)
!9661 = !DILocation(line: 4057, column: 3, scope: !9652)
!9662 = !DILocation(line: 4059, column: 5, scope: !9659)
!9663 = !DILocation(line: 4059, column: 14, scope: !9659)
!9664 = !DILocation(line: 4059, column: 4, scope: !9659)
!9665 = !DILocation(line: 4058, column: 27, scope: !9659)
!9666 = !DILocation(line: 4058, column: 39, scope: !9659)
!9667 = !DILocation(line: 4057, column: 3, scope: !9659)
!9668 = distinct !{!9668, !9661, !9669}
!9669 = !DILocation(line: 4059, column: 16, scope: !9652)
!9670 = !DILocation(line: 4061, column: 12, scope: !9620)
!9671 = !DILocation(line: 4061, column: 15, scope: !9620)
!9672 = !DILocation(line: 4062, column: 12, scope: !9620)
!9673 = !DILocation(line: 4062, column: 15, scope: !9620)
!9674 = !DILocation(line: 4063, column: 15, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 4063, column: 3)
!9676 = !DILocation(line: 4063, column: 8, scope: !9675)
!9677 = !DILocation(line: 4063, column: 20, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 4063, column: 3)
!9679 = !DILocation(line: 4063, column: 27, scope: !9678)
!9680 = !DILocation(line: 4063, column: 3, scope: !9675)
!9681 = !DILocation(line: 4064, column: 5, scope: !9678)
!9682 = !DILocation(line: 4064, column: 14, scope: !9678)
!9683 = !DILocation(line: 4064, column: 4, scope: !9678)
!9684 = !DILocation(line: 4063, column: 39, scope: !9678)
!9685 = !DILocation(line: 4063, column: 51, scope: !9678)
!9686 = !DILocation(line: 4063, column: 3, scope: !9678)
!9687 = distinct !{!9687, !9680, !9688}
!9688 = !DILocation(line: 4064, column: 16, scope: !9675)
!9689 = !DILocation(line: 4067, column: 3, scope: !9620)
!9690 = !DILocation(line: 4068, column: 3, scope: !9620)
!9691 = !DILocation(line: 4069, column: 19, scope: !9620)
!9692 = !DILocation(line: 4069, column: 3, scope: !9620)
!9693 = !DILocation(line: 4071, column: 3, scope: !9620)
!9694 = !DILocation(line: 4071, column: 11, scope: !9620)
!9695 = !DILocation(line: 4071, column: 17, scope: !9620)
!9696 = !DILocation(line: 4072, column: 15, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 4072, column: 3)
!9698 = !DILocation(line: 4072, column: 26, scope: !9697)
!9699 = !DILocation(line: 4072, column: 49, scope: !9697)
!9700 = !DILocation(line: 4072, column: 42, scope: !9697)
!9701 = !DILocation(line: 4072, column: 40, scope: !9697)
!9702 = !DILocation(line: 4072, column: 8, scope: !9697)
!9703 = !DILocation(line: 4073, column: 8, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9697, file: !3, line: 4072, column: 3)
!9705 = !DILocation(line: 4073, column: 15, scope: !9704)
!9706 = !DILocation(line: 4072, column: 3, scope: !9697)
!9707 = !DILocation(line: 4074, column: 14, scope: !9704)
!9708 = !DILocation(line: 4074, column: 13, scope: !9704)
!9709 = !DILocation(line: 4074, column: 10, scope: !9704)
!9710 = !DILocation(line: 4074, column: 4, scope: !9704)
!9711 = !DILocation(line: 4073, column: 27, scope: !9704)
!9712 = !DILocation(line: 4073, column: 39, scope: !9704)
!9713 = !DILocation(line: 4072, column: 3, scope: !9704)
!9714 = distinct !{!9714, !9706, !9715}
!9715 = !DILocation(line: 4074, column: 14, scope: !9697)
!9716 = !DILocation(line: 4076, column: 24, scope: !9620)
!9717 = !DILocation(line: 4076, column: 22, scope: !9620)
!9718 = !DILocation(line: 4076, column: 15, scope: !9620)
!9719 = !DILocation(line: 4076, column: 4, scope: !9620)
!9720 = !DILocation(line: 4076, column: 13, scope: !9620)
!9721 = !DILocation(line: 4077, column: 22, scope: !9620)
!9722 = !DILocation(line: 4077, column: 30, scope: !9620)
!9723 = !DILocation(line: 4077, column: 3, scope: !9620)
!9724 = !DILocation(line: 4078, column: 50, scope: !9620)
!9725 = !DILocation(line: 4078, column: 24, scope: !9620)
!9726 = !DILocation(line: 4078, column: 3, scope: !9620)
!9727 = !DILocation(line: 4078, column: 11, scope: !9620)
!9728 = !DILocation(line: 4078, column: 22, scope: !9620)
!9729 = !DILocation(line: 4079, column: 2, scope: !9620)
!9730 = !DILocation(line: 4080, column: 3, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 4079, column: 9)
!9732 = !DILocation(line: 4081, column: 25, scope: !9731)
!9733 = !DILocation(line: 4081, column: 3, scope: !9731)
!9734 = !DILocation(line: 4082, column: 19, scope: !9731)
!9735 = !DILocation(line: 4082, column: 3, scope: !9731)
!9736 = !DILocation(line: 4084, column: 1, scope: !9573)
!9737 = distinct !DISubprogram(name: "print_eeprom_settings", scope: !3, file: !3, line: 4093, type: !9738, scopeLine: 4094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!9738 = !DISubroutineType(types: !9739)
!9739 = !{null, !8547}
!9740 = !DILocalVariable(name: "eeprom", arg: 1, scope: !9737, file: !3, line: 4093, type: !8547)
!9741 = !DILocation(line: 4093, column: 53, scope: !9737)
!9742 = !DILocation(line: 4095, column: 2, scope: !9737)
!9743 = !DILocation(line: 4101, column: 2, scope: !9737)
!9744 = !DILocation(line: 4104, column: 1, scope: !9737)
!9745 = distinct !DISubprogram(name: "adapter_init_params", scope: !3, file: !3, line: 4211, type: !6113, scopeLine: 4212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!9746 = !DILocalVariable(name: "acb", arg: 1, scope: !9745, file: !3, line: 4211, type: !185)
!9747 = !DILocation(line: 4211, column: 55, scope: !9745)
!9748 = !DILocalVariable(name: "eeprom", scope: !9745, file: !3, line: 4213, type: !8547)
!9749 = !DILocation(line: 4213, column: 20, scope: !9745)
!9750 = !DILocation(line: 4213, column: 30, scope: !9745)
!9751 = !DILocation(line: 4213, column: 35, scope: !9745)
!9752 = !DILocalVariable(name: "i", scope: !9745, file: !3, line: 4214, type: !267)
!9753 = !DILocation(line: 4214, column: 6, scope: !9745)
!9754 = !DILocation(line: 4220, column: 18, scope: !9745)
!9755 = !DILocation(line: 4220, column: 23, scope: !9745)
!9756 = !DILocation(line: 4220, column: 2, scope: !9745)
!9757 = !DILocation(line: 4221, column: 2, scope: !9745)
!9758 = !DILocation(line: 4221, column: 7, scope: !9745)
!9759 = !DILocation(line: 4221, column: 21, scope: !9745)
!9760 = !DILocation(line: 4222, column: 2, scope: !9745)
!9761 = !DILocation(line: 4222, column: 7, scope: !9745)
!9762 = !DILocation(line: 4222, column: 18, scope: !9745)
!9763 = !DILocation(line: 4224, column: 18, scope: !9745)
!9764 = !DILocation(line: 4224, column: 23, scope: !9745)
!9765 = !DILocation(line: 4224, column: 2, scope: !9745)
!9766 = !DILocation(line: 4226, column: 18, scope: !9745)
!9767 = !DILocation(line: 4226, column: 23, scope: !9745)
!9768 = !DILocation(line: 4226, column: 2, scope: !9745)
!9769 = !DILocation(line: 4226, column: 7, scope: !9745)
!9770 = !DILocation(line: 4226, column: 15, scope: !9745)
!9771 = !DILocation(line: 4227, column: 2, scope: !9745)
!9772 = !DILocation(line: 4228, column: 2, scope: !9745)
!9773 = !DILocation(line: 4230, column: 2, scope: !9745)
!9774 = !DILocation(line: 4230, column: 7, scope: !9745)
!9775 = !DILocation(line: 4230, column: 17, scope: !9745)
!9776 = !DILocation(line: 4232, column: 2, scope: !9745)
!9777 = !DILocation(line: 4232, column: 7, scope: !9745)
!9778 = !DILocation(line: 4232, column: 19, scope: !9745)
!9779 = !DILocation(line: 4235, column: 26, scope: !9745)
!9780 = !DILocation(line: 4235, column: 34, scope: !9745)
!9781 = !DILocation(line: 4235, column: 23, scope: !9745)
!9782 = !DILocation(line: 4235, column: 21, scope: !9745)
!9783 = !DILocation(line: 4235, column: 2, scope: !9745)
!9784 = !DILocation(line: 4235, column: 7, scope: !9745)
!9785 = !DILocation(line: 4235, column: 19, scope: !9745)
!9786 = !DILocation(line: 4236, column: 6, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 4236, column: 6)
!9788 = !DILocation(line: 4236, column: 11, scope: !9787)
!9789 = !DILocation(line: 4236, column: 23, scope: !9787)
!9790 = !DILocation(line: 4236, column: 6, scope: !9745)
!9791 = !DILocation(line: 4237, column: 3, scope: !9787)
!9792 = !DILocation(line: 4237, column: 8, scope: !9787)
!9793 = !DILocation(line: 4237, column: 20, scope: !9787)
!9794 = !DILocation(line: 4239, column: 2, scope: !9745)
!9795 = !DILocation(line: 4239, column: 7, scope: !9745)
!9796 = !DILocation(line: 4239, column: 16, scope: !9745)
!9797 = !DILocation(line: 4240, column: 16, scope: !9745)
!9798 = !DILocation(line: 4240, column: 24, scope: !9745)
!9799 = !DILocation(line: 4240, column: 2, scope: !9745)
!9800 = !DILocation(line: 4240, column: 7, scope: !9745)
!9801 = !DILocation(line: 4240, column: 14, scope: !9745)
!9802 = !DILocation(line: 4241, column: 2, scope: !9745)
!9803 = !DILocation(line: 4241, column: 7, scope: !9745)
!9804 = !DILocation(line: 4241, column: 14, scope: !9745)
!9805 = !DILocation(line: 4243, column: 6, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 4243, column: 6)
!9807 = !DILocation(line: 4243, column: 14, scope: !9806)
!9808 = !DILocation(line: 4243, column: 26, scope: !9806)
!9809 = !DILocation(line: 4243, column: 6, scope: !9745)
!9810 = !DILocation(line: 4244, column: 3, scope: !9806)
!9811 = !DILocation(line: 4244, column: 8, scope: !9806)
!9812 = !DILocation(line: 4244, column: 16, scope: !9806)
!9813 = !DILocation(line: 4245, column: 2, scope: !9745)
!9814 = !DILocation(line: 4245, column: 7, scope: !9745)
!9815 = !DILocation(line: 4245, column: 20, scope: !9745)
!9816 = !DILocation(line: 4247, column: 28, scope: !9745)
!9817 = !DILocation(line: 4247, column: 36, scope: !9745)
!9818 = !DILocation(line: 4247, column: 2, scope: !9745)
!9819 = !DILocation(line: 4247, column: 7, scope: !9745)
!9820 = !DILocation(line: 4247, column: 18, scope: !9745)
!9821 = !DILocation(line: 4247, column: 26, scope: !9745)
!9822 = !DILocation(line: 4248, column: 26, scope: !9745)
!9823 = !DILocation(line: 4248, column: 31, scope: !9745)
!9824 = !DILocation(line: 4248, column: 42, scope: !9745)
!9825 = !DILocation(line: 4248, column: 23, scope: !9745)
!9826 = !DILocation(line: 4248, column: 20, scope: !9745)
!9827 = !DILocation(line: 4248, column: 2, scope: !9745)
!9828 = !DILocation(line: 4248, column: 7, scope: !9745)
!9829 = !DILocation(line: 4248, column: 18, scope: !9745)
!9830 = !DILocation(line: 4250, column: 9, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 4250, column: 2)
!9832 = !DILocation(line: 4250, column: 7, scope: !9831)
!9833 = !DILocation(line: 4250, column: 14, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9831, file: !3, line: 4250, column: 2)
!9835 = !DILocation(line: 4250, column: 16, scope: !9834)
!9836 = !DILocation(line: 4250, column: 2, scope: !9831)
!9837 = !DILocation(line: 4251, column: 3, scope: !9834)
!9838 = !DILocation(line: 4251, column: 8, scope: !9834)
!9839 = !DILocation(line: 4251, column: 16, scope: !9834)
!9840 = !DILocation(line: 4251, column: 19, scope: !9834)
!9841 = !DILocation(line: 4250, column: 39, scope: !9834)
!9842 = !DILocation(line: 4250, column: 2, scope: !9834)
!9843 = distinct !{!9843, !9836, !9844}
!9844 = !DILocation(line: 4251, column: 21, scope: !9831)
!9845 = !DILocation(line: 4253, column: 2, scope: !9745)
!9846 = !DILocation(line: 4253, column: 7, scope: !9745)
!9847 = !DILocation(line: 4253, column: 15, scope: !9745)
!9848 = !DILocation(line: 4256, column: 9, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 4256, column: 2)
!9850 = !DILocation(line: 4256, column: 7, scope: !9849)
!9851 = !DILocation(line: 4256, column: 14, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9849, file: !3, line: 4256, column: 2)
!9853 = !DILocation(line: 4256, column: 18, scope: !9852)
!9854 = !DILocation(line: 4256, column: 23, scope: !9852)
!9855 = !DILocation(line: 4256, column: 33, scope: !9852)
!9856 = !DILocation(line: 4256, column: 16, scope: !9852)
!9857 = !DILocation(line: 4256, column: 2, scope: !9849)
!9858 = !DILocation(line: 4257, column: 18, scope: !9852)
!9859 = !DILocation(line: 4257, column: 23, scope: !9852)
!9860 = !DILocation(line: 4257, column: 33, scope: !9852)
!9861 = !DILocation(line: 4257, column: 36, scope: !9852)
!9862 = !DILocation(line: 4257, column: 43, scope: !9852)
!9863 = !DILocation(line: 4257, column: 48, scope: !9852)
!9864 = !DILocation(line: 4257, column: 3, scope: !9852)
!9865 = !DILocation(line: 4256, column: 39, scope: !9852)
!9866 = !DILocation(line: 4256, column: 2, scope: !9852)
!9867 = distinct !{!9867, !9857, !9868}
!9868 = !DILocation(line: 4257, column: 61, scope: !9849)
!9869 = !DILocation(line: 4258, column: 1, scope: !9745)
!9870 = distinct !DISubprogram(name: "adapter_print_config", scope: !3, file: !3, line: 4167, type: !6113, scopeLine: 4168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!9871 = !DILocalVariable(name: "acb", arg: 1, scope: !9870, file: !3, line: 4167, type: !185)
!9872 = !DILocation(line: 4167, column: 56, scope: !9870)
!9873 = !DILocalVariable(name: "bval", scope: !9870, file: !3, line: 4169, type: !410)
!9874 = !DILocation(line: 4169, column: 5, scope: !9870)
!9875 = !DILocation(line: 4171, column: 9, scope: !9870)
!9876 = !DILocation(line: 4171, column: 7, scope: !9870)
!9877 = !DILocation(line: 4172, column: 2, scope: !9870)
!9878 = !DILocation(line: 4174, column: 8, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9870, file: !3, line: 4174, column: 6)
!9880 = !DILocation(line: 4174, column: 13, scope: !9879)
!9881 = !DILocation(line: 4174, column: 6, scope: !9870)
!9882 = !DILocation(line: 4175, column: 22, scope: !9879)
!9883 = !DILocation(line: 4175, column: 27, scope: !9879)
!9884 = !DILocation(line: 4175, column: 20, scope: !9879)
!9885 = !DILocation(line: 4175, column: 3, scope: !9879)
!9886 = !DILocation(line: 4176, column: 8, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9870, file: !3, line: 4176, column: 6)
!9888 = !DILocation(line: 4176, column: 13, scope: !9887)
!9889 = !DILocation(line: 4176, column: 6, scope: !9870)
!9890 = !DILocation(line: 4177, column: 24, scope: !9887)
!9891 = !DILocation(line: 4177, column: 29, scope: !9887)
!9892 = !DILocation(line: 4177, column: 22, scope: !9887)
!9893 = !DILocation(line: 4177, column: 3, scope: !9887)
!9894 = !DILocation(line: 4178, column: 8, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9870, file: !3, line: 4178, column: 6)
!9896 = !DILocation(line: 4178, column: 13, scope: !9895)
!9897 = !DILocation(line: 4178, column: 6, scope: !9870)
!9898 = !DILocation(line: 4179, column: 3, scope: !9895)
!9899 = !DILocation(line: 4180, column: 7, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9870, file: !3, line: 4180, column: 6)
!9901 = !DILocation(line: 4180, column: 12, scope: !9900)
!9902 = !DILocation(line: 4180, column: 41, scope: !9900)
!9903 = !DILocation(line: 4180, column: 6, scope: !9870)
!9904 = !DILocation(line: 4182, column: 3, scope: !9900)
!9905 = !DILocation(line: 4183, column: 9, scope: !9870)
!9906 = !DILocation(line: 4183, column: 7, scope: !9870)
!9907 = !DILocation(line: 4184, column: 2, scope: !9870)
!9908 = !DILocation(line: 4185, column: 6, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9870, file: !3, line: 4185, column: 6)
!9910 = !DILocation(line: 4185, column: 11, scope: !9909)
!9911 = !DILocation(line: 4185, column: 6, scope: !9870)
!9912 = !DILocation(line: 4186, column: 3, scope: !9909)
!9913 = !DILocation(line: 4188, column: 7, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9915, file: !3, line: 4188, column: 7)
!9915 = distinct !DILexicalBlock(scope: !9909, file: !3, line: 4187, column: 7)
!9916 = !DILocation(line: 4188, column: 12, scope: !9914)
!9917 = !DILocation(line: 4188, column: 7, scope: !9915)
!9918 = !DILocation(line: 4189, column: 4, scope: !9914)
!9919 = !DILocation(line: 4190, column: 7, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9915, file: !3, line: 4190, column: 7)
!9921 = !DILocation(line: 4190, column: 12, scope: !9920)
!9922 = !DILocation(line: 4190, column: 7, scope: !9915)
!9923 = !DILocation(line: 4191, column: 4, scope: !9920)
!9924 = !DILocation(line: 4192, column: 7, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9915, file: !3, line: 4192, column: 7)
!9926 = !DILocation(line: 4192, column: 12, scope: !9925)
!9927 = !DILocation(line: 4192, column: 7, scope: !9915)
!9928 = !DILocation(line: 4193, column: 4, scope: !9925)
!9929 = !DILocation(line: 4194, column: 3, scope: !9915)
!9930 = !DILocation(line: 4196, column: 1, scope: !9870)
!9931 = distinct !DISubprogram(name: "adapter_sg_tables_alloc", scope: !3, file: !3, line: 4121, type: !9932, scopeLine: 4122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!9932 = !DISubroutineType(types: !9933)
!9933 = !{!267, !185}
!9934 = !DILocation(line: 445, column: 72, scope: !8834, inlinedAt: !9935)
!9935 = distinct !DILocation(line: 552, column: 10, scope: !8839, inlinedAt: !9936)
!9936 = distinct !DILocation(line: 4136, column: 9, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9931, file: !3, line: 4135, column: 18)
!9938 = !DILocation(line: 446, column: 9, scope: !8834, inlinedAt: !9935)
!9939 = !DILocation(line: 446, column: 23, scope: !8834, inlinedAt: !9935)
!9940 = !DILocation(line: 448, column: 8, scope: !8834, inlinedAt: !9935)
!9941 = !DILocation(line: 318, column: 67, scope: !8852, inlinedAt: !9942)
!9942 = distinct !DILocation(line: 553, column: 20, scope: !8839, inlinedAt: !9936)
!9943 = !DILocation(line: 346, column: 58, scope: !8858, inlinedAt: !9944)
!9944 = distinct !DILocation(line: 547, column: 11, scope: !8839, inlinedAt: !9936)
!9945 = !DILocation(line: 472, column: 28, scope: !8864, inlinedAt: !9946)
!9946 = distinct !DILocation(line: 481, column: 9, scope: !8869, inlinedAt: !9947)
!9947 = distinct !DILocation(line: 545, column: 11, scope: !8871, inlinedAt: !9936)
!9948 = !DILocation(line: 472, column: 40, scope: !8864, inlinedAt: !9946)
!9949 = !DILocation(line: 472, column: 60, scope: !8864, inlinedAt: !9946)
!9950 = !DILocation(line: 478, column: 51, scope: !8869, inlinedAt: !9947)
!9951 = !DILocation(line: 478, column: 63, scope: !8869, inlinedAt: !9947)
!9952 = !DILocation(line: 480, column: 15, scope: !8869, inlinedAt: !9947)
!9953 = !DILocation(line: 538, column: 45, scope: !8841, inlinedAt: !9936)
!9954 = !DILocation(line: 538, column: 57, scope: !8841, inlinedAt: !9936)
!9955 = !DILocation(line: 542, column: 16, scope: !8839, inlinedAt: !9936)
!9956 = !DILocalVariable(name: "acb", arg: 1, scope: !9931, file: !3, line: 4121, type: !185)
!9957 = !DILocation(line: 4121, column: 58, scope: !9931)
!9958 = !DILocalVariable(name: "mem_needed", scope: !9931, file: !3, line: 4123, type: !3001)
!9959 = !DILocation(line: 4123, column: 17, scope: !9931)
!9960 = !DILocalVariable(name: "pages", scope: !9931, file: !3, line: 4125, type: !267)
!9961 = !DILocation(line: 4125, column: 6, scope: !9931)
!9962 = !DILocalVariable(name: "srbs_per_page", scope: !9931, file: !3, line: 4126, type: !3001)
!9963 = !DILocation(line: 4126, column: 17, scope: !9931)
!9964 = !DILocalVariable(name: "srb_idx", scope: !9931, file: !3, line: 4127, type: !267)
!9965 = !DILocation(line: 4127, column: 6, scope: !9931)
!9966 = !DILocalVariable(name: "i", scope: !9931, file: !3, line: 4128, type: !7)
!9967 = !DILocation(line: 4128, column: 11, scope: !9931)
!9968 = !DILocalVariable(name: "ptr", scope: !9931, file: !3, line: 4129, type: !5241)
!9969 = !DILocation(line: 4129, column: 18, scope: !9931)
!9970 = !DILocation(line: 4131, column: 9, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9931, file: !3, line: 4131, column: 2)
!9972 = !DILocation(line: 4131, column: 7, scope: !9971)
!9973 = !DILocation(line: 4131, column: 14, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9971, file: !3, line: 4131, column: 2)
!9975 = !DILocation(line: 4131, column: 16, scope: !9974)
!9976 = !DILocation(line: 4131, column: 2, scope: !9971)
!9977 = !DILocation(line: 4132, column: 3, scope: !9974)
!9978 = !DILocation(line: 4132, column: 8, scope: !9974)
!9979 = !DILocation(line: 4132, column: 18, scope: !9974)
!9980 = !DILocation(line: 4132, column: 21, scope: !9974)
!9981 = !DILocation(line: 4132, column: 31, scope: !9974)
!9982 = !DILocation(line: 4131, column: 39, scope: !9974)
!9983 = !DILocation(line: 4131, column: 2, scope: !9974)
!9984 = distinct !{!9984, !9976, !9985}
!9985 = !DILocation(line: 4132, column: 33, scope: !9971)
!9986 = !DILocation(line: 4134, column: 2, scope: !9931)
!9987 = !DILocation(line: 4134, column: 2, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9931, file: !3, line: 4134, column: 2)
!9989 = !DILocation(line: 4135, column: 2, scope: !9931)
!9990 = !DILocation(line: 4135, column: 14, scope: !9931)
!9991 = !DILocation(line: 540, column: 27, scope: !8840, inlinedAt: !9936)
!9992 = !DILocation(line: 540, column: 6, scope: !8840, inlinedAt: !9936)
!9993 = !DILocation(line: 540, column: 6, scope: !8841, inlinedAt: !9936)
!9994 = !DILocation(line: 544, column: 7, scope: !8871, inlinedAt: !9936)
!9995 = !DILocation(line: 544, column: 12, scope: !8871, inlinedAt: !9936)
!9996 = !DILocation(line: 544, column: 7, scope: !8839, inlinedAt: !9936)
!9997 = !DILocation(line: 545, column: 25, scope: !8871, inlinedAt: !9936)
!9998 = !DILocation(line: 545, column: 31, scope: !8871, inlinedAt: !9936)
!9999 = !DILocation(line: 480, column: 33, scope: !8869, inlinedAt: !9947)
!10000 = !DILocation(line: 480, column: 23, scope: !8869, inlinedAt: !9947)
!10001 = !DILocation(line: 481, column: 29, scope: !8869, inlinedAt: !9947)
!10002 = !DILocation(line: 481, column: 35, scope: !8869, inlinedAt: !9947)
!10003 = !DILocation(line: 481, column: 42, scope: !8869, inlinedAt: !9947)
!10004 = !DILocation(line: 474, column: 23, scope: !8864, inlinedAt: !9946)
!10005 = !DILocation(line: 474, column: 29, scope: !8864, inlinedAt: !9946)
!10006 = !DILocation(line: 474, column: 36, scope: !8864, inlinedAt: !9946)
!10007 = !DILocation(line: 474, column: 9, scope: !8864, inlinedAt: !9946)
!10008 = !DILocation(line: 545, column: 4, scope: !8871, inlinedAt: !9936)
!10009 = !DILocation(line: 547, column: 25, scope: !8839, inlinedAt: !9936)
!10010 = !DILocation(line: 348, column: 7, scope: !8927, inlinedAt: !9944)
!10011 = !DILocation(line: 348, column: 6, scope: !8858, inlinedAt: !9944)
!10012 = !DILocation(line: 349, column: 3, scope: !8927, inlinedAt: !9944)
!10013 = !DILocation(line: 351, column: 6, scope: !8931, inlinedAt: !9944)
!10014 = !DILocation(line: 351, column: 11, scope: !8931, inlinedAt: !9944)
!10015 = !DILocation(line: 351, column: 6, scope: !8858, inlinedAt: !9944)
!10016 = !DILocation(line: 352, column: 3, scope: !8931, inlinedAt: !9944)
!10017 = !DILocation(line: 354, column: 32, scope: !8936, inlinedAt: !9944)
!10018 = !DILocation(line: 354, column: 37, scope: !8936, inlinedAt: !9944)
!10019 = !DILocation(line: 354, column: 42, scope: !8936, inlinedAt: !9944)
!10020 = !DILocation(line: 354, column: 45, scope: !8936, inlinedAt: !9944)
!10021 = !DILocation(line: 354, column: 50, scope: !8936, inlinedAt: !9944)
!10022 = !DILocation(line: 354, column: 6, scope: !8858, inlinedAt: !9944)
!10023 = !DILocation(line: 355, column: 3, scope: !8936, inlinedAt: !9944)
!10024 = !DILocation(line: 356, column: 32, scope: !8944, inlinedAt: !9944)
!10025 = !DILocation(line: 356, column: 37, scope: !8944, inlinedAt: !9944)
!10026 = !DILocation(line: 356, column: 43, scope: !8944, inlinedAt: !9944)
!10027 = !DILocation(line: 356, column: 46, scope: !8944, inlinedAt: !9944)
!10028 = !DILocation(line: 356, column: 51, scope: !8944, inlinedAt: !9944)
!10029 = !DILocation(line: 356, column: 6, scope: !8858, inlinedAt: !9944)
!10030 = !DILocation(line: 357, column: 3, scope: !8944, inlinedAt: !9944)
!10031 = !DILocation(line: 358, column: 6, scope: !8952, inlinedAt: !9944)
!10032 = !DILocation(line: 358, column: 11, scope: !8952, inlinedAt: !9944)
!10033 = !DILocation(line: 358, column: 6, scope: !8858, inlinedAt: !9944)
!10034 = !DILocation(line: 358, column: 26, scope: !8952, inlinedAt: !9944)
!10035 = !DILocation(line: 359, column: 6, scope: !8957, inlinedAt: !9944)
!10036 = !DILocation(line: 359, column: 11, scope: !8957, inlinedAt: !9944)
!10037 = !DILocation(line: 359, column: 6, scope: !8858, inlinedAt: !9944)
!10038 = !DILocation(line: 359, column: 26, scope: !8957, inlinedAt: !9944)
!10039 = !DILocation(line: 360, column: 6, scope: !8962, inlinedAt: !9944)
!10040 = !DILocation(line: 360, column: 11, scope: !8962, inlinedAt: !9944)
!10041 = !DILocation(line: 360, column: 6, scope: !8858, inlinedAt: !9944)
!10042 = !DILocation(line: 360, column: 26, scope: !8962, inlinedAt: !9944)
!10043 = !DILocation(line: 361, column: 6, scope: !8967, inlinedAt: !9944)
!10044 = !DILocation(line: 361, column: 11, scope: !8967, inlinedAt: !9944)
!10045 = !DILocation(line: 361, column: 6, scope: !8858, inlinedAt: !9944)
!10046 = !DILocation(line: 361, column: 26, scope: !8967, inlinedAt: !9944)
!10047 = !DILocation(line: 362, column: 6, scope: !8972, inlinedAt: !9944)
!10048 = !DILocation(line: 362, column: 11, scope: !8972, inlinedAt: !9944)
!10049 = !DILocation(line: 362, column: 6, scope: !8858, inlinedAt: !9944)
!10050 = !DILocation(line: 362, column: 26, scope: !8972, inlinedAt: !9944)
!10051 = !DILocation(line: 363, column: 6, scope: !8977, inlinedAt: !9944)
!10052 = !DILocation(line: 363, column: 11, scope: !8977, inlinedAt: !9944)
!10053 = !DILocation(line: 363, column: 6, scope: !8858, inlinedAt: !9944)
!10054 = !DILocation(line: 363, column: 26, scope: !8977, inlinedAt: !9944)
!10055 = !DILocation(line: 364, column: 6, scope: !8982, inlinedAt: !9944)
!10056 = !DILocation(line: 364, column: 11, scope: !8982, inlinedAt: !9944)
!10057 = !DILocation(line: 364, column: 6, scope: !8858, inlinedAt: !9944)
!10058 = !DILocation(line: 364, column: 26, scope: !8982, inlinedAt: !9944)
!10059 = !DILocation(line: 365, column: 6, scope: !8987, inlinedAt: !9944)
!10060 = !DILocation(line: 365, column: 11, scope: !8987, inlinedAt: !9944)
!10061 = !DILocation(line: 365, column: 6, scope: !8858, inlinedAt: !9944)
!10062 = !DILocation(line: 365, column: 26, scope: !8987, inlinedAt: !9944)
!10063 = !DILocation(line: 366, column: 6, scope: !8992, inlinedAt: !9944)
!10064 = !DILocation(line: 366, column: 11, scope: !8992, inlinedAt: !9944)
!10065 = !DILocation(line: 366, column: 6, scope: !8858, inlinedAt: !9944)
!10066 = !DILocation(line: 366, column: 26, scope: !8992, inlinedAt: !9944)
!10067 = !DILocation(line: 367, column: 6, scope: !8997, inlinedAt: !9944)
!10068 = !DILocation(line: 367, column: 11, scope: !8997, inlinedAt: !9944)
!10069 = !DILocation(line: 367, column: 6, scope: !8858, inlinedAt: !9944)
!10070 = !DILocation(line: 367, column: 26, scope: !8997, inlinedAt: !9944)
!10071 = !DILocation(line: 368, column: 6, scope: !9002, inlinedAt: !9944)
!10072 = !DILocation(line: 368, column: 11, scope: !9002, inlinedAt: !9944)
!10073 = !DILocation(line: 368, column: 6, scope: !8858, inlinedAt: !9944)
!10074 = !DILocation(line: 368, column: 26, scope: !9002, inlinedAt: !9944)
!10075 = !DILocation(line: 369, column: 6, scope: !9007, inlinedAt: !9944)
!10076 = !DILocation(line: 369, column: 11, scope: !9007, inlinedAt: !9944)
!10077 = !DILocation(line: 369, column: 6, scope: !8858, inlinedAt: !9944)
!10078 = !DILocation(line: 369, column: 26, scope: !9007, inlinedAt: !9944)
!10079 = !DILocation(line: 370, column: 6, scope: !9012, inlinedAt: !9944)
!10080 = !DILocation(line: 370, column: 11, scope: !9012, inlinedAt: !9944)
!10081 = !DILocation(line: 370, column: 6, scope: !8858, inlinedAt: !9944)
!10082 = !DILocation(line: 370, column: 26, scope: !9012, inlinedAt: !9944)
!10083 = !DILocation(line: 371, column: 6, scope: !9017, inlinedAt: !9944)
!10084 = !DILocation(line: 371, column: 11, scope: !9017, inlinedAt: !9944)
!10085 = !DILocation(line: 371, column: 6, scope: !8858, inlinedAt: !9944)
!10086 = !DILocation(line: 371, column: 26, scope: !9017, inlinedAt: !9944)
!10087 = !DILocation(line: 372, column: 6, scope: !9022, inlinedAt: !9944)
!10088 = !DILocation(line: 372, column: 11, scope: !9022, inlinedAt: !9944)
!10089 = !DILocation(line: 372, column: 6, scope: !8858, inlinedAt: !9944)
!10090 = !DILocation(line: 372, column: 26, scope: !9022, inlinedAt: !9944)
!10091 = !DILocation(line: 373, column: 6, scope: !9027, inlinedAt: !9944)
!10092 = !DILocation(line: 373, column: 11, scope: !9027, inlinedAt: !9944)
!10093 = !DILocation(line: 373, column: 6, scope: !8858, inlinedAt: !9944)
!10094 = !DILocation(line: 373, column: 26, scope: !9027, inlinedAt: !9944)
!10095 = !DILocation(line: 374, column: 6, scope: !9032, inlinedAt: !9944)
!10096 = !DILocation(line: 374, column: 11, scope: !9032, inlinedAt: !9944)
!10097 = !DILocation(line: 374, column: 6, scope: !8858, inlinedAt: !9944)
!10098 = !DILocation(line: 374, column: 26, scope: !9032, inlinedAt: !9944)
!10099 = !DILocation(line: 375, column: 6, scope: !9037, inlinedAt: !9944)
!10100 = !DILocation(line: 375, column: 11, scope: !9037, inlinedAt: !9944)
!10101 = !DILocation(line: 375, column: 6, scope: !8858, inlinedAt: !9944)
!10102 = !DILocation(line: 375, column: 27, scope: !9037, inlinedAt: !9944)
!10103 = !DILocation(line: 376, column: 6, scope: !9042, inlinedAt: !9944)
!10104 = !DILocation(line: 376, column: 11, scope: !9042, inlinedAt: !9944)
!10105 = !DILocation(line: 376, column: 6, scope: !8858, inlinedAt: !9944)
!10106 = !DILocation(line: 376, column: 32, scope: !9042, inlinedAt: !9944)
!10107 = !DILocation(line: 377, column: 6, scope: !9047, inlinedAt: !9944)
!10108 = !DILocation(line: 377, column: 11, scope: !9047, inlinedAt: !9944)
!10109 = !DILocation(line: 377, column: 6, scope: !8858, inlinedAt: !9944)
!10110 = !DILocation(line: 377, column: 32, scope: !9047, inlinedAt: !9944)
!10111 = !DILocation(line: 378, column: 6, scope: !9052, inlinedAt: !9944)
!10112 = !DILocation(line: 378, column: 11, scope: !9052, inlinedAt: !9944)
!10113 = !DILocation(line: 378, column: 6, scope: !8858, inlinedAt: !9944)
!10114 = !DILocation(line: 378, column: 32, scope: !9052, inlinedAt: !9944)
!10115 = !DILocation(line: 379, column: 6, scope: !9057, inlinedAt: !9944)
!10116 = !DILocation(line: 379, column: 11, scope: !9057, inlinedAt: !9944)
!10117 = !DILocation(line: 379, column: 6, scope: !8858, inlinedAt: !9944)
!10118 = !DILocation(line: 379, column: 33, scope: !9057, inlinedAt: !9944)
!10119 = !DILocation(line: 380, column: 6, scope: !9062, inlinedAt: !9944)
!10120 = !DILocation(line: 380, column: 11, scope: !9062, inlinedAt: !9944)
!10121 = !DILocation(line: 380, column: 6, scope: !8858, inlinedAt: !9944)
!10122 = !DILocation(line: 380, column: 33, scope: !9062, inlinedAt: !9944)
!10123 = !DILocation(line: 381, column: 6, scope: !9067, inlinedAt: !9944)
!10124 = !DILocation(line: 381, column: 11, scope: !9067, inlinedAt: !9944)
!10125 = !DILocation(line: 381, column: 6, scope: !8858, inlinedAt: !9944)
!10126 = !DILocation(line: 381, column: 33, scope: !9067, inlinedAt: !9944)
!10127 = !DILocation(line: 382, column: 2, scope: !9072, inlinedAt: !9944)
!10128 = !DILocation(line: 382, column: 2, scope: !9076, inlinedAt: !9944)
!10129 = !DILocation(line: 382, column: 2, scope: !9077, inlinedAt: !9944)
!10130 = !DILocation(line: 386, column: 1, scope: !8858, inlinedAt: !9944)
!10131 = !DILocation(line: 547, column: 9, scope: !8839, inlinedAt: !9936)
!10132 = !DILocation(line: 549, column: 8, scope: !9083, inlinedAt: !9936)
!10133 = !DILocation(line: 549, column: 7, scope: !8839, inlinedAt: !9936)
!10134 = !DILocation(line: 550, column: 4, scope: !9083, inlinedAt: !9936)
!10135 = !DILocation(line: 553, column: 33, scope: !8839, inlinedAt: !9936)
!10136 = !DILocation(line: 325, column: 6, scope: !9088, inlinedAt: !9942)
!10137 = !DILocation(line: 325, column: 6, scope: !8852, inlinedAt: !9942)
!10138 = !DILocation(line: 326, column: 3, scope: !9088, inlinedAt: !9942)
!10139 = !DILocation(line: 332, column: 9, scope: !8852, inlinedAt: !9942)
!10140 = !DILocation(line: 332, column: 15, scope: !8852, inlinedAt: !9942)
!10141 = !DILocation(line: 332, column: 2, scope: !8852, inlinedAt: !9942)
!10142 = !DILocation(line: 336, column: 1, scope: !8852, inlinedAt: !9942)
!10143 = !DILocation(line: 553, column: 5, scope: !8839, inlinedAt: !9936)
!10144 = !DILocation(line: 553, column: 41, scope: !8839, inlinedAt: !9936)
!10145 = !DILocation(line: 554, column: 5, scope: !8839, inlinedAt: !9936)
!10146 = !DILocation(line: 554, column: 12, scope: !8839, inlinedAt: !9936)
!10147 = !DILocation(line: 448, column: 31, scope: !8834, inlinedAt: !9935)
!10148 = !DILocation(line: 448, column: 34, scope: !8834, inlinedAt: !9935)
!10149 = !DILocation(line: 448, column: 14, scope: !8834, inlinedAt: !9935)
!10150 = !DILocation(line: 450, column: 22, scope: !8834, inlinedAt: !9935)
!10151 = !DILocation(line: 450, column: 25, scope: !8834, inlinedAt: !9935)
!10152 = !DILocation(line: 450, column: 30, scope: !8834, inlinedAt: !9935)
!10153 = !DILocation(line: 450, column: 36, scope: !8834, inlinedAt: !9935)
!10154 = !DILocation(line: 450, column: 8, scope: !8834, inlinedAt: !9935)
!10155 = !DILocation(line: 450, column: 6, scope: !8834, inlinedAt: !9935)
!10156 = !DILocation(line: 451, column: 9, scope: !8834, inlinedAt: !9935)
!10157 = !DILocation(line: 552, column: 3, scope: !8839, inlinedAt: !9936)
!10158 = !DILocation(line: 557, column: 19, scope: !8841, inlinedAt: !9936)
!10159 = !DILocation(line: 557, column: 25, scope: !8841, inlinedAt: !9936)
!10160 = !DILocation(line: 557, column: 9, scope: !8841, inlinedAt: !9936)
!10161 = !DILocation(line: 557, column: 2, scope: !8841, inlinedAt: !9936)
!10162 = !DILocation(line: 558, column: 1, scope: !8841, inlinedAt: !9936)
!10163 = !DILocation(line: 4136, column: 9, scope: !9937)
!10164 = !DILocation(line: 4136, column: 7, scope: !9937)
!10165 = !DILocation(line: 4137, column: 8, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 4137, column: 7)
!10167 = !DILocation(line: 4137, column: 7, scope: !9937)
!10168 = !DILocation(line: 4138, column: 27, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10166, file: !3, line: 4137, column: 13)
!10170 = !DILocation(line: 4138, column: 4, scope: !10169)
!10171 = !DILocation(line: 4139, column: 4, scope: !10169)
!10172 = !DILocation(line: 4141, column: 3, scope: !9937)
!10173 = !DILocation(line: 4141, column: 3, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 4141, column: 3)
!10175 = !DILocation(line: 4143, column: 5, scope: !9937)
!10176 = !DILocation(line: 4144, column: 3, scope: !9937)
!10177 = !DILocation(line: 4144, column: 10, scope: !9937)
!10178 = !DILocation(line: 4144, column: 12, scope: !9937)
!10179 = !DILocation(line: 4144, column: 28, scope: !9937)
!10180 = !DILocation(line: 4144, column: 31, scope: !9937)
!10181 = !DILocation(line: 4144, column: 39, scope: !9937)
!10182 = !DILocation(line: 0, scope: !9937)
!10183 = !DILocation(line: 4146, column: 8, scope: !9937)
!10184 = !DILocation(line: 4146, column: 16, scope: !9937)
!10185 = !DILocation(line: 4146, column: 19, scope: !9937)
!10186 = !DILocation(line: 4146, column: 12, scope: !9937)
!10187 = !DILocation(line: 4145, column: 4, scope: !9937)
!10188 = !DILocation(line: 4145, column: 9, scope: !9937)
!10189 = !DILocation(line: 4145, column: 26, scope: !9937)
!10190 = !DILocation(line: 4145, column: 30, scope: !9937)
!10191 = !DILocation(line: 4145, column: 40, scope: !9937)
!10192 = distinct !{!10192, !10176, !10193}
!10193 = !DILocation(line: 4146, column: 44, scope: !9937)
!10194 = distinct !{!10194, !9989, !10195}
!10195 = !DILocation(line: 4147, column: 2, scope: !9931)
!10196 = !DILocation(line: 4148, column: 6, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !9931, file: !3, line: 4148, column: 6)
!10198 = !DILocation(line: 4148, column: 8, scope: !10197)
!10199 = !DILocation(line: 4148, column: 6, scope: !9931)
!10200 = !DILocation(line: 4150, column: 7, scope: !10197)
!10201 = !DILocation(line: 4150, column: 14, scope: !10197)
!10202 = !DILocation(line: 4150, column: 16, scope: !10197)
!10203 = !DILocation(line: 4150, column: 11, scope: !10197)
!10204 = !DILocation(line: 4149, column: 3, scope: !10197)
!10205 = !DILocation(line: 4149, column: 8, scope: !10197)
!10206 = !DILocation(line: 4149, column: 12, scope: !10197)
!10207 = !DILocation(line: 4149, column: 22, scope: !10197)
!10208 = !DILocation(line: 4152, column: 3, scope: !10197)
!10209 = !DILocation(line: 4153, column: 2, scope: !9931)
!10210 = !DILocation(line: 4154, column: 1, scope: !9931)
!10211 = distinct !DISubprogram(name: "adapter_init_scsi_host", scope: !3, file: !3, line: 4273, type: !5087, scopeLine: 4274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!10212 = !DILocalVariable(name: "host", arg: 1, scope: !10211, file: !3, line: 4273, type: !189)
!10213 = !DILocation(line: 4273, column: 54, scope: !10211)
!10214 = !DILocalVariable(name: "acb", scope: !10211, file: !3, line: 4275, type: !185)
!10215 = !DILocation(line: 4275, column: 31, scope: !10211)
!10216 = !DILocation(line: 4275, column: 61, scope: !10211)
!10217 = !DILocation(line: 4275, column: 67, scope: !10211)
!10218 = !DILocation(line: 4275, column: 37, scope: !10211)
!10219 = !DILocalVariable(name: "eeprom", scope: !10211, file: !3, line: 4276, type: !8547)
!10220 = !DILocation(line: 4276, column: 20, scope: !10211)
!10221 = !DILocation(line: 4276, column: 30, scope: !10211)
!10222 = !DILocation(line: 4276, column: 35, scope: !10211)
!10223 = !DILocation(line: 4278, column: 2, scope: !10211)
!10224 = !DILocation(line: 4278, column: 8, scope: !10211)
!10225 = !DILocation(line: 4278, column: 20, scope: !10211)
!10226 = !DILocation(line: 4279, column: 2, scope: !10211)
!10227 = !DILocation(line: 4279, column: 8, scope: !10211)
!10228 = !DILocation(line: 4279, column: 18, scope: !10211)
!10229 = !DILocation(line: 4280, column: 2, scope: !10211)
!10230 = !DILocation(line: 4280, column: 8, scope: !10211)
!10231 = !DILocation(line: 4280, column: 20, scope: !10211)
!10232 = !DILocation(line: 4281, column: 23, scope: !10211)
!10233 = !DILocation(line: 4281, column: 31, scope: !10211)
!10234 = !DILocation(line: 4281, column: 18, scope: !10211)
!10235 = !DILocation(line: 4281, column: 2, scope: !10211)
!10236 = !DILocation(line: 4281, column: 8, scope: !10211)
!10237 = !DILocation(line: 4281, column: 16, scope: !10211)
!10238 = !DILocation(line: 4282, column: 18, scope: !10211)
!10239 = !DILocation(line: 4282, column: 23, scope: !10211)
!10240 = !DILocation(line: 4282, column: 2, scope: !10211)
!10241 = !DILocation(line: 4282, column: 8, scope: !10211)
!10242 = !DILocation(line: 4282, column: 16, scope: !10211)
!10243 = !DILocation(line: 4283, column: 20, scope: !10211)
!10244 = !DILocation(line: 4283, column: 25, scope: !10211)
!10245 = !DILocation(line: 4283, column: 2, scope: !10211)
!10246 = !DILocation(line: 4283, column: 8, scope: !10211)
!10247 = !DILocation(line: 4283, column: 18, scope: !10211)
!10248 = !DILocation(line: 4284, column: 2, scope: !10211)
!10249 = !DILocation(line: 4284, column: 8, scope: !10211)
!10250 = !DILocation(line: 4284, column: 20, scope: !10211)
!10251 = !DILocation(line: 4285, column: 20, scope: !10211)
!10252 = !DILocation(line: 4285, column: 25, scope: !10211)
!10253 = !DILocation(line: 4285, column: 2, scope: !10211)
!10254 = !DILocation(line: 4285, column: 8, scope: !10211)
!10255 = !DILocation(line: 4285, column: 18, scope: !10211)
!10256 = !DILocation(line: 4286, column: 14, scope: !10211)
!10257 = !DILocation(line: 4286, column: 19, scope: !10211)
!10258 = !DILocation(line: 4286, column: 2, scope: !10211)
!10259 = !DILocation(line: 4286, column: 8, scope: !10211)
!10260 = !DILocation(line: 4286, column: 12, scope: !10211)
!10261 = !DILocation(line: 4287, column: 20, scope: !10211)
!10262 = !DILocation(line: 4287, column: 2, scope: !10211)
!10263 = !DILocation(line: 4287, column: 7, scope: !10211)
!10264 = !DILocation(line: 4287, column: 18, scope: !10211)
!10265 = !DILocation(line: 4289, column: 2, scope: !10211)
!10266 = !DILocation(line: 4289, column: 8, scope: !10211)
!10267 = !DILocation(line: 4289, column: 15, scope: !10211)
!10268 = !DILocation(line: 4290, column: 6, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10211, file: !3, line: 4290, column: 6)
!10270 = !DILocation(line: 4290, column: 12, scope: !10269)
!10271 = !DILocation(line: 4290, column: 19, scope: !10269)
!10272 = !DILocation(line: 4290, column: 26, scope: !10269)
!10273 = !DILocation(line: 4290, column: 34, scope: !10269)
!10274 = !DILocation(line: 4290, column: 23, scope: !10269)
!10275 = !DILocation(line: 4290, column: 6, scope: !10211)
!10276 = !DILocation(line: 4291, column: 3, scope: !10269)
!10277 = !DILocation(line: 4291, column: 9, scope: !10269)
!10278 = !DILocation(line: 4291, column: 15, scope: !10269)
!10279 = !DILocation(line: 4293, column: 6, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10211, file: !3, line: 4293, column: 6)
!10281 = !DILocation(line: 4293, column: 14, scope: !10280)
!10282 = !DILocation(line: 4293, column: 26, scope: !10280)
!10283 = !DILocation(line: 4293, column: 6, scope: !10211)
!10284 = !DILocation(line: 4294, column: 3, scope: !10280)
!10285 = !DILocation(line: 4294, column: 9, scope: !10280)
!10286 = !DILocation(line: 4294, column: 17, scope: !10280)
!10287 = !DILocation(line: 4296, column: 3, scope: !10280)
!10288 = !DILocation(line: 4296, column: 9, scope: !10280)
!10289 = !DILocation(line: 4296, column: 17, scope: !10280)
!10290 = !DILocation(line: 4297, column: 1, scope: !10211)
!10291 = distinct !DISubprogram(name: "adapter_init_chip", scope: !3, file: !3, line: 4309, type: !6113, scopeLine: 4310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!10292 = !DILocalVariable(name: "acb", arg: 1, scope: !10291, file: !3, line: 4309, type: !185)
!10293 = !DILocation(line: 4309, column: 53, scope: !10291)
!10294 = !DILocalVariable(name: "eeprom", scope: !10291, file: !3, line: 4311, type: !8547)
!10295 = !DILocation(line: 4311, column: 27, scope: !10291)
!10296 = !DILocation(line: 4311, column: 37, scope: !10291)
!10297 = !DILocation(line: 4311, column: 42, scope: !10291)
!10298 = !DILocation(line: 4314, column: 2, scope: !10291)
!10299 = !DILocation(line: 4315, column: 2, scope: !10291)
!10300 = !DILocation(line: 4318, column: 2, scope: !10291)
!10301 = !DILocation(line: 4321, column: 2, scope: !10291)
!10302 = !DILocation(line: 4322, column: 2, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 4322, column: 2)
!10304 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 4322, column: 2)
!10305 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 4322, column: 2)
!10306 = distinct !DILexicalBlock(scope: !10291, file: !3, line: 4322, column: 2)
!10307 = !DILocation(line: 4325, column: 2, scope: !10291)
!10308 = !DILocation(line: 4325, column: 7, scope: !10291)
!10309 = !DILocation(line: 4325, column: 14, scope: !10291)
!10310 = !DILocation(line: 4326, column: 6, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10291, file: !3, line: 4326, column: 6)
!10312 = !DILocation(line: 4326, column: 46, scope: !10311)
!10313 = !DILocation(line: 4326, column: 6, scope: !10291)
!10314 = !DILocation(line: 4327, column: 3, scope: !10311)
!10315 = !DILocation(line: 4327, column: 8, scope: !10311)
!10316 = !DILocation(line: 4327, column: 15, scope: !10311)
!10317 = !DILocation(line: 4329, column: 6, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10291, file: !3, line: 4329, column: 6)
!10319 = !DILocation(line: 4329, column: 14, scope: !10318)
!10320 = !DILocation(line: 4329, column: 26, scope: !10318)
!10321 = !DILocation(line: 4329, column: 6, scope: !10291)
!10322 = !DILocation(line: 4330, column: 3, scope: !10318)
!10323 = !DILocation(line: 4330, column: 8, scope: !10318)
!10324 = !DILocation(line: 4330, column: 15, scope: !10318)
!10325 = !DILocation(line: 4332, column: 6, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10291, file: !3, line: 4332, column: 6)
!10327 = !DILocation(line: 4332, column: 11, scope: !10326)
!10328 = !DILocation(line: 4332, column: 18, scope: !10326)
!10329 = !DILocation(line: 4332, column: 6, scope: !10291)
!10330 = !DILocation(line: 4333, column: 3, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 4332, column: 36)
!10332 = !DILocation(line: 4334, column: 3, scope: !10331)
!10333 = !DILocation(line: 4338, column: 3, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10335, file: !3, line: 4338, column: 3)
!10335 = distinct !DILexicalBlock(scope: !10336, file: !3, line: 4338, column: 3)
!10336 = distinct !DILexicalBlock(scope: !10337, file: !3, line: 4338, column: 3)
!10337 = distinct !DILexicalBlock(scope: !10331, file: !3, line: 4338, column: 3)
!10338 = !DILocation(line: 4341, column: 7, scope: !10331)
!10339 = !DILocation(line: 4341, column: 15, scope: !10331)
!10340 = !DILocation(line: 4342, column: 12, scope: !10331)
!10341 = !DILocation(line: 4342, column: 17, scope: !10331)
!10342 = !DILocation(line: 4342, column: 24, scope: !10331)
!10343 = !DILocation(line: 4342, column: 10, scope: !10331)
!10344 = !DILocation(line: 4342, column: 7, scope: !10331)
!10345 = !DILocation(line: 4341, column: 24, scope: !10331)
!10346 = !DILocation(line: 4340, column: 3, scope: !10331)
!10347 = !DILocation(line: 4340, column: 8, scope: !10331)
!10348 = !DILocation(line: 4340, column: 19, scope: !10331)
!10349 = !DILocation(line: 4345, column: 2, scope: !10331)
!10350 = !DILocation(line: 4346, column: 1, scope: !10291)
!10351 = distinct !DISubprogram(name: "adapter_sg_tables_free", scope: !3, file: !3, line: 4108, type: !6113, scopeLine: 4109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!10352 = !DILocalVariable(name: "acb", arg: 1, scope: !10351, file: !3, line: 4108, type: !185)
!10353 = !DILocation(line: 4108, column: 58, scope: !10351)
!10354 = !DILocalVariable(name: "i", scope: !10351, file: !3, line: 4110, type: !267)
!10355 = !DILocation(line: 4110, column: 6, scope: !10351)
!10356 = !DILocalVariable(name: "srbs_per_page", scope: !10351, file: !3, line: 4111, type: !3001)
!10357 = !DILocation(line: 4111, column: 17, scope: !10351)
!10358 = !DILocation(line: 4113, column: 9, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 4113, column: 2)
!10360 = !DILocation(line: 4113, column: 7, scope: !10359)
!10361 = !DILocation(line: 4113, column: 14, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 4113, column: 2)
!10363 = !DILocation(line: 4113, column: 16, scope: !10362)
!10364 = !DILocation(line: 4113, column: 2, scope: !10359)
!10365 = !DILocation(line: 4114, column: 9, scope: !10362)
!10366 = !DILocation(line: 4114, column: 14, scope: !10362)
!10367 = !DILocation(line: 4114, column: 24, scope: !10362)
!10368 = !DILocation(line: 4114, column: 27, scope: !10362)
!10369 = !DILocation(line: 4114, column: 3, scope: !10362)
!10370 = !DILocation(line: 4113, column: 40, scope: !10362)
!10371 = !DILocation(line: 4113, column: 2, scope: !10362)
!10372 = distinct !{!10372, !10364, !10373}
!10373 = !DILocation(line: 4114, column: 36, scope: !10359)
!10374 = !DILocation(line: 4115, column: 1, scope: !10351)
!10375 = distinct !DISubprogram(name: "dc395x_handle_interrupt", scope: !3, file: !3, line: 1563, type: !10376, scopeLine: 1565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!10376 = !DISubroutineType(types: !10377)
!10377 = !{null, !185, !918}
!10378 = !DILocation(line: 407, column: 64, scope: !6116, inlinedAt: !10379)
!10379 = distinct !DILocation(line: 1663, column: 2, scope: !10375)
!10380 = !DILocation(line: 407, column: 84, scope: !6116, inlinedAt: !10379)
!10381 = !DILocation(line: 327, column: 67, scope: !6125, inlinedAt: !10382)
!10382 = distinct !DILocation(line: 1574, column: 2, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10384, file: !3, line: 1574, column: 2)
!10384 = distinct !DILexicalBlock(scope: !10385, file: !3, line: 1574, column: 2)
!10385 = distinct !DILexicalBlock(scope: !10386, file: !3, line: 1574, column: 2)
!10386 = distinct !DILexicalBlock(scope: !10387, file: !3, line: 1574, column: 2)
!10387 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1574, column: 2)
!10388 = !DILocalVariable(name: "acb", arg: 1, scope: !10375, file: !3, line: 1563, type: !185)
!10389 = !DILocation(line: 1563, column: 59, scope: !10375)
!10390 = !DILocalVariable(name: "scsi_status", arg: 2, scope: !10375, file: !3, line: 1564, type: !918)
!10391 = !DILocation(line: 1564, column: 7, scope: !10375)
!10392 = !DILocalVariable(name: "dcb", scope: !10375, file: !3, line: 1566, type: !5226)
!10393 = !DILocation(line: 1566, column: 23, scope: !10375)
!10394 = !DILocalVariable(name: "srb", scope: !10375, file: !3, line: 1567, type: !5234)
!10395 = !DILocation(line: 1567, column: 21, scope: !10375)
!10396 = !DILocalVariable(name: "phase", scope: !10375, file: !3, line: 1568, type: !918)
!10397 = !DILocation(line: 1568, column: 6, scope: !10375)
!10398 = !DILocalVariable(name: "scsi_intstatus", scope: !10375, file: !3, line: 1569, type: !410)
!10399 = !DILocation(line: 1569, column: 5, scope: !10375)
!10400 = !DILocalVariable(name: "flags", scope: !10375, file: !3, line: 1570, type: !248)
!10401 = !DILocation(line: 1570, column: 16, scope: !10375)
!10402 = !DILocalVariable(name: "dc395x_statev", scope: !10375, file: !3, line: 1571, type: !10403)
!10403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10404, size: 64)
!10404 = !DISubroutineType(types: !10405)
!10405 = !{null, !185, !5234, !5637}
!10406 = !DILocation(line: 1571, column: 9, scope: !10375)
!10407 = !DILocation(line: 1574, column: 2, scope: !10375)
!10408 = !DILocation(line: 1574, column: 2, scope: !10387)
!10409 = !DILocalVariable(name: "__dummy", scope: !10410, file: !3, line: 1574, type: !248)
!10410 = distinct !DILexicalBlock(scope: !10386, file: !3, line: 1574, column: 2)
!10411 = !DILocation(line: 1574, column: 2, scope: !10410)
!10412 = !DILocalVariable(name: "__dummy2", scope: !10410, file: !3, line: 1574, type: !248)
!10413 = !DILocation(line: 1574, column: 2, scope: !10386)
!10414 = !DILocation(line: 1574, column: 2, scope: !10385)
!10415 = !DILocation(line: 1574, column: 2, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10385, file: !3, line: 1574, column: 2)
!10417 = !DILocalVariable(name: "__dummy", scope: !10418, file: !3, line: 1574, type: !248)
!10418 = distinct !DILexicalBlock(scope: !10419, file: !3, line: 1574, column: 2)
!10419 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 1574, column: 2)
!10420 = !DILocation(line: 1574, column: 2, scope: !10418)
!10421 = !DILocalVariable(name: "__dummy2", scope: !10418, file: !3, line: 1574, type: !248)
!10422 = !DILocation(line: 1574, column: 2, scope: !10419)
!10423 = !DILocation(line: 1574, column: 2, scope: !10384)
!10424 = !{i32 -2140853957}
!10425 = !DILocation(line: 1574, column: 2, scope: !10383)
!10426 = !DILocation(line: 329, column: 10, scope: !6125, inlinedAt: !10382)
!10427 = !DILocation(line: 329, column: 16, scope: !6125, inlinedAt: !10382)
!10428 = !DILocation(line: 1577, column: 19, scope: !10375)
!10429 = !DILocation(line: 1577, column: 17, scope: !10375)
!10430 = !DILocation(line: 1578, column: 7, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1578, column: 6)
!10432 = !DILocation(line: 1578, column: 19, scope: !10431)
!10433 = !DILocation(line: 1578, column: 29, scope: !10431)
!10434 = !DILocation(line: 1578, column: 6, scope: !10375)
!10435 = !DILocation(line: 1579, column: 3, scope: !10431)
!10436 = !DILocation(line: 1587, column: 21, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1587, column: 6)
!10438 = !DILocation(line: 1587, column: 26, scope: !10437)
!10439 = !DILocation(line: 1587, column: 6, scope: !10437)
!10440 = !DILocation(line: 1587, column: 6, scope: !10375)
!10441 = !DILocation(line: 1588, column: 14, scope: !10437)
!10442 = !DILocation(line: 1588, column: 19, scope: !10437)
!10443 = !DILocation(line: 1588, column: 3, scope: !10437)
!10444 = !DILocation(line: 1590, column: 6, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1590, column: 6)
!10446 = !DILocation(line: 1590, column: 21, scope: !10445)
!10447 = !DILocation(line: 1590, column: 6, scope: !10375)
!10448 = !DILocation(line: 1591, column: 14, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 1590, column: 58)
!10450 = !DILocation(line: 1591, column: 3, scope: !10449)
!10451 = !DILocation(line: 1592, column: 3, scope: !10449)
!10452 = !DILocation(line: 1594, column: 6, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1594, column: 6)
!10454 = !DILocation(line: 1594, column: 21, scope: !10453)
!10455 = !DILocation(line: 1594, column: 6, scope: !10375)
!10456 = !DILocation(line: 1595, column: 12, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10453, file: !3, line: 1594, column: 39)
!10458 = !DILocation(line: 1595, column: 3, scope: !10457)
!10459 = !DILocation(line: 1596, column: 3, scope: !10457)
!10460 = !DILocation(line: 1598, column: 6, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1598, column: 6)
!10462 = !DILocation(line: 1598, column: 21, scope: !10461)
!10463 = !DILocation(line: 1598, column: 6, scope: !10375)
!10464 = !DILocation(line: 1599, column: 3, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 1598, column: 35)
!10466 = !DILocation(line: 1600, column: 3, scope: !10465)
!10467 = !DILocation(line: 1602, column: 6, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1602, column: 6)
!10469 = !DILocation(line: 1602, column: 21, scope: !10468)
!10470 = !DILocation(line: 1602, column: 6, scope: !10375)
!10471 = !DILocation(line: 1603, column: 21, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10468, file: !3, line: 1602, column: 38)
!10473 = !DILocation(line: 1603, column: 3, scope: !10472)
!10474 = !DILocation(line: 1604, column: 3, scope: !10472)
!10475 = !DILocation(line: 1606, column: 6, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1606, column: 6)
!10477 = !DILocation(line: 1606, column: 21, scope: !10476)
!10478 = !DILocation(line: 1606, column: 6, scope: !10375)
!10479 = !DILocation(line: 1607, column: 9, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 1606, column: 55)
!10481 = !DILocation(line: 1607, column: 14, scope: !10480)
!10482 = !DILocation(line: 1607, column: 7, scope: !10480)
!10483 = !DILocation(line: 1608, column: 8, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10480, file: !3, line: 1608, column: 7)
!10485 = !DILocation(line: 1608, column: 7, scope: !10480)
!10486 = !DILocation(line: 1609, column: 4, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 1608, column: 13)
!10488 = !DILocation(line: 1612, column: 4, scope: !10487)
!10489 = !DILocation(line: 1614, column: 9, scope: !10480)
!10490 = !DILocation(line: 1614, column: 14, scope: !10480)
!10491 = !DILocation(line: 1614, column: 7, scope: !10480)
!10492 = !DILocation(line: 1615, column: 7, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10480, file: !3, line: 1615, column: 7)
!10494 = !DILocation(line: 1615, column: 12, scope: !10493)
!10495 = !DILocation(line: 1615, column: 17, scope: !10493)
!10496 = !DILocation(line: 1615, column: 7, scope: !10480)
!10497 = !DILocation(line: 1616, column: 4, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10493, file: !3, line: 1615, column: 31)
!10499 = !DILocation(line: 1616, column: 4, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10498, file: !3, line: 1616, column: 4)
!10501 = !DILocation(line: 1617, column: 24, scope: !10498)
!10502 = !DILocation(line: 1617, column: 29, scope: !10498)
!10503 = !DILocation(line: 1617, column: 4, scope: !10498)
!10504 = !DILocation(line: 1618, column: 3, scope: !10498)
!10505 = !DILocation(line: 1621, column: 16, scope: !10480)
!10506 = !DILocation(line: 1621, column: 21, scope: !10480)
!10507 = !DILocation(line: 1621, column: 11, scope: !10480)
!10508 = !DILocation(line: 1621, column: 9, scope: !10480)
!10509 = !DILocation(line: 1636, column: 38, scope: !10480)
!10510 = !DILocation(line: 1636, column: 19, scope: !10480)
!10511 = !DILocation(line: 1636, column: 17, scope: !10480)
!10512 = !DILocation(line: 1637, column: 3, scope: !10480)
!10513 = !DILocation(line: 1637, column: 17, scope: !10480)
!10514 = !DILocation(line: 1637, column: 22, scope: !10480)
!10515 = !DILocation(line: 1644, column: 21, scope: !10480)
!10516 = !DILocation(line: 1644, column: 33, scope: !10480)
!10517 = !DILocation(line: 1644, column: 3, scope: !10480)
!10518 = !DILocation(line: 1644, column: 8, scope: !10480)
!10519 = !DILocation(line: 1644, column: 19, scope: !10480)
!10520 = !DILocation(line: 1645, column: 16, scope: !10480)
!10521 = !DILocation(line: 1645, column: 11, scope: !10480)
!10522 = !DILocation(line: 1645, column: 28, scope: !10480)
!10523 = !DILocation(line: 1645, column: 9, scope: !10480)
!10524 = !DILocation(line: 1659, column: 38, scope: !10480)
!10525 = !DILocation(line: 1659, column: 19, scope: !10480)
!10526 = !DILocation(line: 1659, column: 17, scope: !10480)
!10527 = !DILocation(line: 1660, column: 3, scope: !10480)
!10528 = !DILocation(line: 1660, column: 17, scope: !10480)
!10529 = !DILocation(line: 1660, column: 22, scope: !10480)
!10530 = !DILocation(line: 1661, column: 2, scope: !10480)
!10531 = !DILocation(line: 1606, column: 52, scope: !10476)
!10532 = !DILabel(scope: !10375, name: "out_unlock", file: !3, line: 1662)
!10533 = !DILocation(line: 1662, column: 7, scope: !10375)
!10534 = !DILocation(line: 1663, column: 2, scope: !10375)
!10535 = !DILocation(line: 409, column: 2, scope: !6183, inlinedAt: !10379)
!10536 = !DILocation(line: 409, column: 2, scope: !6188, inlinedAt: !10379)
!10537 = !DILocation(line: 409, column: 2, scope: !6189, inlinedAt: !10379)
!10538 = !DILocation(line: 409, column: 2, scope: !6196, inlinedAt: !10379)
!10539 = !DILocation(line: 409, column: 2, scope: !6199, inlinedAt: !10379)
!10540 = !DILocation(line: 1664, column: 1, scope: !10375)
!10541 = distinct !DISubprogram(name: "disconnect", scope: !3, file: !3, line: 2890, type: !6113, scopeLine: 2891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!10542 = !DILocalVariable(name: "acb", arg: 1, scope: !10541, file: !3, line: 2890, type: !185)
!10543 = !DILocation(line: 2890, column: 46, scope: !10541)
!10544 = !DILocalVariable(name: "dcb", scope: !10541, file: !3, line: 2892, type: !5226)
!10545 = !DILocation(line: 2892, column: 23, scope: !10541)
!10546 = !DILocation(line: 2892, column: 29, scope: !10541)
!10547 = !DILocation(line: 2892, column: 34, scope: !10541)
!10548 = !DILocalVariable(name: "srb", scope: !10541, file: !3, line: 2893, type: !5234)
!10549 = !DILocation(line: 2893, column: 21, scope: !10541)
!10550 = !DILocation(line: 2895, column: 7, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10541, file: !3, line: 2895, column: 6)
!10552 = !DILocation(line: 2895, column: 6, scope: !10541)
!10553 = !DILocation(line: 2896, column: 3, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10551, file: !3, line: 2895, column: 12)
!10555 = !DILocation(line: 2897, column: 3, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10557, file: !3, line: 2897, column: 3)
!10557 = distinct !DILexicalBlock(scope: !10558, file: !3, line: 2897, column: 3)
!10558 = distinct !DILexicalBlock(scope: !10559, file: !3, line: 2897, column: 3)
!10559 = distinct !DILexicalBlock(scope: !10554, file: !3, line: 2897, column: 3)
!10560 = !DILocation(line: 2900, column: 7, scope: !10554)
!10561 = !DILocation(line: 2900, column: 15, scope: !10554)
!10562 = !DILocation(line: 2901, column: 12, scope: !10554)
!10563 = !DILocation(line: 2901, column: 17, scope: !10554)
!10564 = !DILocation(line: 2901, column: 24, scope: !10554)
!10565 = !DILocation(line: 2901, column: 10, scope: !10554)
!10566 = !DILocation(line: 2901, column: 7, scope: !10554)
!10567 = !DILocation(line: 2900, column: 24, scope: !10554)
!10568 = !DILocation(line: 2899, column: 3, scope: !10554)
!10569 = !DILocation(line: 2899, column: 8, scope: !10554)
!10570 = !DILocation(line: 2899, column: 19, scope: !10554)
!10571 = !DILocation(line: 2902, column: 14, scope: !10554)
!10572 = !DILocation(line: 2902, column: 3, scope: !10554)
!10573 = !DILocation(line: 2903, column: 3, scope: !10554)
!10574 = !DILocation(line: 2904, column: 3, scope: !10554)
!10575 = !DILocation(line: 2906, column: 8, scope: !10541)
!10576 = !DILocation(line: 2906, column: 13, scope: !10541)
!10577 = !DILocation(line: 2906, column: 6, scope: !10541)
!10578 = !DILocation(line: 2907, column: 2, scope: !10541)
!10579 = !DILocation(line: 2907, column: 7, scope: !10541)
!10580 = !DILocation(line: 2907, column: 18, scope: !10541)
!10581 = !DILocation(line: 2908, column: 2, scope: !10541)
!10582 = !DILocation(line: 2908, column: 2, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10541, file: !3, line: 2908, column: 2)
!10584 = !DILocation(line: 2910, column: 2, scope: !10541)
!10585 = !DILocation(line: 2910, column: 7, scope: !10541)
!10586 = !DILocation(line: 2910, column: 18, scope: !10541)
!10587 = !DILocation(line: 2911, column: 13, scope: !10541)
!10588 = !DILocation(line: 2911, column: 2, scope: !10541)
!10589 = !DILocation(line: 2912, column: 2, scope: !10541)
!10590 = !DILocation(line: 2913, column: 6, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10541, file: !3, line: 2913, column: 6)
!10592 = !DILocation(line: 2913, column: 11, scope: !10591)
!10593 = !DILocation(line: 2913, column: 17, scope: !10591)
!10594 = !DILocation(line: 2913, column: 6, scope: !10541)
!10595 = !DILocation(line: 2914, column: 3, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10591, file: !3, line: 2913, column: 39)
!10597 = !DILocation(line: 2917, column: 3, scope: !10596)
!10598 = !DILocation(line: 2917, column: 8, scope: !10596)
!10599 = !DILocation(line: 2917, column: 14, scope: !10596)
!10600 = !DILocation(line: 2918, column: 24, scope: !10596)
!10601 = !DILocation(line: 2918, column: 3, scope: !10596)
!10602 = !DILocation(line: 2919, column: 2, scope: !10596)
!10603 = !DILocation(line: 2919, column: 13, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10591, file: !3, line: 2919, column: 13)
!10605 = !DILocation(line: 2919, column: 18, scope: !10604)
!10606 = !DILocation(line: 2919, column: 24, scope: !10604)
!10607 = !DILocation(line: 2919, column: 13, scope: !10591)
!10608 = !DILocation(line: 2920, column: 3, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 2919, column: 42)
!10610 = !DILocation(line: 2920, column: 8, scope: !10609)
!10611 = !DILocation(line: 2920, column: 13, scope: !10609)
!10612 = !DILocation(line: 2921, column: 21, scope: !10609)
!10613 = !DILocation(line: 2921, column: 29, scope: !10609)
!10614 = !DILocation(line: 2921, column: 38, scope: !10609)
!10615 = !DILocation(line: 2921, column: 3, scope: !10609)
!10616 = !DILocation(line: 2921, column: 8, scope: !10609)
!10617 = !DILocation(line: 2921, column: 19, scope: !10609)
!10618 = !DILocation(line: 2922, column: 3, scope: !10609)
!10619 = !DILocation(line: 2923, column: 18, scope: !10609)
!10620 = !DILocation(line: 2923, column: 34, scope: !10609)
!10621 = !DILocation(line: 2923, column: 39, scope: !10609)
!10622 = !DILocation(line: 2923, column: 3, scope: !10609)
!10623 = !DILocation(line: 2924, column: 24, scope: !10609)
!10624 = !DILocation(line: 2924, column: 3, scope: !10609)
!10625 = !DILocation(line: 2925, column: 2, scope: !10609)
!10626 = !DILocation(line: 2926, column: 8, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10628, file: !3, line: 2926, column: 7)
!10628 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 2925, column: 9)
!10629 = !DILocation(line: 2926, column: 13, scope: !10627)
!10630 = !DILocation(line: 2926, column: 19, scope: !10627)
!10631 = !DILocation(line: 2927, column: 7, scope: !10627)
!10632 = !DILocation(line: 2927, column: 12, scope: !10627)
!10633 = !DILocation(line: 2928, column: 5, scope: !10627)
!10634 = !DILocation(line: 2928, column: 11, scope: !10627)
!10635 = !DILocation(line: 2926, column: 7, scope: !10628)
!10636 = !DILocation(line: 2934, column: 8, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10638, file: !3, line: 2934, column: 8)
!10638 = distinct !DILexicalBlock(scope: !10627, file: !3, line: 2928, column: 48)
!10639 = !DILocation(line: 2934, column: 13, scope: !10637)
!10640 = !DILocation(line: 2934, column: 19, scope: !10637)
!10641 = !DILocation(line: 2935, column: 8, scope: !10637)
!10642 = !DILocation(line: 2935, column: 11, scope: !10637)
!10643 = !DILocation(line: 2935, column: 16, scope: !10637)
!10644 = !DILocation(line: 2935, column: 22, scope: !10637)
!10645 = !DILocation(line: 2934, column: 8, scope: !10638)
!10646 = !DILocation(line: 2936, column: 5, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10637, file: !3, line: 2935, column: 37)
!10648 = !DILocation(line: 2936, column: 10, scope: !10647)
!10649 = !DILocation(line: 2936, column: 16, scope: !10647)
!10650 = !DILocation(line: 2937, column: 5, scope: !10647)
!10651 = !DILocation(line: 2940, column: 5, scope: !10647)
!10652 = !DILocation(line: 2940, column: 10, scope: !10647)
!10653 = !DILocation(line: 2940, column: 24, scope: !10647)
!10654 = !DILocation(line: 2941, column: 5, scope: !10647)
!10655 = !DILocation(line: 2944, column: 5, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10637, file: !3, line: 2942, column: 11)
!10657 = !DILocation(line: 2944, column: 5, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 2944, column: 5)
!10659 = !DILocation(line: 2947, column: 9, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 2947, column: 9)
!10661 = !DILocation(line: 2947, column: 14, scope: !10660)
!10662 = !DILocation(line: 2947, column: 25, scope: !10660)
!10663 = !DILocation(line: 2947, column: 28, scope: !10660)
!10664 = !DILocation(line: 2948, column: 9, scope: !10660)
!10665 = !DILocation(line: 2948, column: 12, scope: !10660)
!10666 = !DILocation(line: 2948, column: 17, scope: !10660)
!10667 = !DILocation(line: 2947, column: 9, scope: !10656)
!10668 = !DILocation(line: 2949, column: 6, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 2948, column: 31)
!10670 = !DILocation(line: 2949, column: 11, scope: !10669)
!10671 = !DILocation(line: 2949, column: 25, scope: !10669)
!10672 = !DILocation(line: 2951, column: 6, scope: !10669)
!10673 = !DILocation(line: 2953, column: 14, scope: !10656)
!10674 = !DILocation(line: 2953, column: 19, scope: !10656)
!10675 = !DILocation(line: 2953, column: 5, scope: !10656)
!10676 = !DILocation(line: 2954, column: 16, scope: !10656)
!10677 = !DILocation(line: 2954, column: 21, scope: !10656)
!10678 = !DILocation(line: 2954, column: 28, scope: !10656)
!10679 = !DILocation(line: 2954, column: 33, scope: !10656)
!10680 = !DILocation(line: 2954, column: 5, scope: !10656)
!10681 = !DILocation(line: 2955, column: 5, scope: !10656)
!10682 = !DILocation(line: 2955, column: 5, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 2955, column: 5)
!10684 = !DILocation(line: 2958, column: 23, scope: !10656)
!10685 = !DILocation(line: 2958, column: 5, scope: !10656)
!10686 = !DILocation(line: 2960, column: 3, scope: !10638)
!10687 = !DILocation(line: 2960, column: 14, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10627, file: !3, line: 2960, column: 14)
!10689 = !DILocation(line: 2960, column: 19, scope: !10688)
!10690 = !DILocation(line: 2960, column: 25, scope: !10688)
!10691 = !DILocation(line: 2960, column: 14, scope: !10627)
!10692 = !DILocalVariable(name: "bval", scope: !10693, file: !3, line: 2961, type: !410)
!10693 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 2960, column: 43)
!10694 = !DILocation(line: 2961, column: 7, scope: !10693)
!10695 = !DILocation(line: 2961, column: 14, scope: !10693)
!10696 = !DILocation(line: 2965, column: 8, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10693, file: !3, line: 2965, column: 8)
!10698 = !DILocation(line: 2965, column: 13, scope: !10697)
!10699 = !DILocation(line: 2965, column: 8, scope: !10693)
!10700 = !DILocation(line: 2966, column: 5, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 2965, column: 21)
!10702 = !DILocation(line: 2966, column: 5, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10701, file: !3, line: 2966, column: 5)
!10704 = !DILocation(line: 2970, column: 4, scope: !10701)
!10705 = !DILocation(line: 2971, column: 26, scope: !10697)
!10706 = !DILocation(line: 2971, column: 5, scope: !10697)
!10707 = !DILocation(line: 2972, column: 3, scope: !10693)
!10708 = !DILocation(line: 2972, column: 14, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 2972, column: 14)
!10710 = !DILocation(line: 2972, column: 19, scope: !10709)
!10711 = !DILocation(line: 2972, column: 25, scope: !10709)
!10712 = !DILocation(line: 2972, column: 14, scope: !10688)
!10713 = !DILocation(line: 2972, column: 42, scope: !10709)
!10714 = !DILabel(scope: !10715, name: "disc1", file: !3, line: 2973)
!10715 = distinct !DILexicalBlock(scope: !10709, file: !3, line: 2972, column: 42)
!10716 = !DILocation(line: 2973, column: 9, scope: !10715)
!10717 = !DILocation(line: 2977, column: 13, scope: !10715)
!10718 = !DILocation(line: 2977, column: 18, scope: !10715)
!10719 = !DILocation(line: 2977, column: 4, scope: !10715)
!10720 = !DILocation(line: 2978, column: 4, scope: !10715)
!10721 = !DILocation(line: 2978, column: 9, scope: !10715)
!10722 = !DILocation(line: 2978, column: 20, scope: !10715)
!10723 = !DILocation(line: 2979, column: 4, scope: !10715)
!10724 = !DILocation(line: 2979, column: 9, scope: !10715)
!10725 = !DILocation(line: 2979, column: 15, scope: !10715)
!10726 = !DILocation(line: 2980, column: 13, scope: !10715)
!10727 = !DILocation(line: 2980, column: 18, scope: !10715)
!10728 = !DILocation(line: 2980, column: 23, scope: !10715)
!10729 = !DILocation(line: 2980, column: 4, scope: !10715)
!10730 = !DILocation(line: 2981, column: 3, scope: !10715)
!10731 = !DILocation(line: 2983, column: 1, scope: !10541)
!10732 = distinct !DISubprogram(name: "reselect", scope: !3, file: !3, line: 2986, type: !6113, scopeLine: 2987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!10733 = !DILocalVariable(name: "acb", arg: 1, scope: !10732, file: !3, line: 2986, type: !185)
!10734 = !DILocation(line: 2986, column: 44, scope: !10732)
!10735 = !DILocalVariable(name: "dcb", scope: !10732, file: !3, line: 2988, type: !5226)
!10736 = !DILocation(line: 2988, column: 23, scope: !10732)
!10737 = !DILocation(line: 2988, column: 29, scope: !10732)
!10738 = !DILocation(line: 2988, column: 34, scope: !10732)
!10739 = !DILocalVariable(name: "srb", scope: !10732, file: !3, line: 2989, type: !5234)
!10740 = !DILocation(line: 2989, column: 21, scope: !10732)
!10741 = !DILocalVariable(name: "rsel_tar_lun_id", scope: !10732, file: !3, line: 2990, type: !918)
!10742 = !DILocation(line: 2990, column: 6, scope: !10732)
!10743 = !DILocalVariable(name: "id", scope: !10732, file: !3, line: 2991, type: !410)
!10744 = !DILocation(line: 2991, column: 5, scope: !10732)
!10745 = !DILocalVariable(name: "lun", scope: !10732, file: !3, line: 2991, type: !410)
!10746 = !DILocation(line: 2991, column: 9, scope: !10732)
!10747 = !DILocalVariable(name: "arblostflag", scope: !10732, file: !3, line: 2992, type: !410)
!10748 = !DILocation(line: 2992, column: 5, scope: !10732)
!10749 = !DILocation(line: 2993, column: 2, scope: !10732)
!10750 = !DILocation(line: 2993, column: 2, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 2993, column: 2)
!10752 = !DILocation(line: 2995, column: 13, scope: !10732)
!10753 = !DILocation(line: 2995, column: 2, scope: !10732)
!10754 = !DILocation(line: 2998, column: 20, scope: !10732)
!10755 = !DILocation(line: 2998, column: 18, scope: !10732)
!10756 = !DILocation(line: 2999, column: 6, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 2999, column: 6)
!10758 = !DILocation(line: 2999, column: 6, scope: !10732)
!10759 = !DILocation(line: 3000, column: 9, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10757, file: !3, line: 2999, column: 11)
!10761 = !DILocation(line: 3000, column: 14, scope: !10760)
!10762 = !DILocation(line: 3000, column: 7, scope: !10760)
!10763 = !DILocation(line: 3001, column: 8, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10760, file: !3, line: 3001, column: 7)
!10765 = !DILocation(line: 3001, column: 7, scope: !10760)
!10766 = !DILocation(line: 3002, column: 4, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 3001, column: 13)
!10768 = !DILocation(line: 3004, column: 4, scope: !10767)
!10769 = !DILocation(line: 3005, column: 4, scope: !10767)
!10770 = !DILocation(line: 3008, column: 8, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10760, file: !3, line: 3008, column: 7)
!10772 = !DILocation(line: 3008, column: 13, scope: !10771)
!10773 = !DILocation(line: 3008, column: 7, scope: !10760)
!10774 = !DILocation(line: 3009, column: 4, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10771, file: !3, line: 3008, column: 27)
!10776 = !DILocation(line: 3009, column: 4, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10775, file: !3, line: 3009, column: 4)
!10778 = !DILocation(line: 3014, column: 16, scope: !10775)
!10779 = !DILocation(line: 3017, column: 4, scope: !10775)
!10780 = !DILocation(line: 3017, column: 9, scope: !10775)
!10781 = !DILocation(line: 3017, column: 15, scope: !10775)
!10782 = !DILocation(line: 3018, column: 13, scope: !10775)
!10783 = !DILocation(line: 3018, column: 18, scope: !10775)
!10784 = !DILocation(line: 3018, column: 4, scope: !10775)
!10785 = !DILocation(line: 3019, column: 15, scope: !10775)
!10786 = !DILocation(line: 3019, column: 20, scope: !10775)
!10787 = !DILocation(line: 3019, column: 27, scope: !10775)
!10788 = !DILocation(line: 3019, column: 32, scope: !10775)
!10789 = !DILocation(line: 3019, column: 4, scope: !10775)
!10790 = !DILocation(line: 3020, column: 22, scope: !10775)
!10791 = !DILocation(line: 3020, column: 4, scope: !10775)
!10792 = !DILocation(line: 3023, column: 3, scope: !10775)
!10793 = !DILocation(line: 3024, column: 2, scope: !10760)
!10794 = !DILocation(line: 3026, column: 8, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 3026, column: 6)
!10796 = !DILocation(line: 3026, column: 24, scope: !10795)
!10797 = !DILocation(line: 3026, column: 6, scope: !10732)
!10798 = !DILocation(line: 3027, column: 3, scope: !10795)
!10799 = !DILocation(line: 3029, column: 7, scope: !10732)
!10800 = !DILocation(line: 3029, column: 23, scope: !10732)
!10801 = !DILocation(line: 3029, column: 5, scope: !10732)
!10802 = !DILocation(line: 3030, column: 9, scope: !10732)
!10803 = !DILocation(line: 3030, column: 25, scope: !10732)
!10804 = !DILocation(line: 3030, column: 31, scope: !10732)
!10805 = !DILocation(line: 3030, column: 8, scope: !10732)
!10806 = !DILocation(line: 3030, column: 6, scope: !10732)
!10807 = !DILocation(line: 3031, column: 17, scope: !10732)
!10808 = !DILocation(line: 3031, column: 22, scope: !10732)
!10809 = !DILocation(line: 3031, column: 26, scope: !10732)
!10810 = !DILocation(line: 3031, column: 8, scope: !10732)
!10811 = !DILocation(line: 3031, column: 6, scope: !10732)
!10812 = !DILocation(line: 3032, column: 7, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 3032, column: 6)
!10814 = !DILocation(line: 3032, column: 6, scope: !10732)
!10815 = !DILocation(line: 3033, column: 3, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 3032, column: 12)
!10817 = !DILocation(line: 3035, column: 3, scope: !10816)
!10818 = !DILocation(line: 3036, column: 3, scope: !10816)
!10819 = !DILocation(line: 3038, column: 20, scope: !10732)
!10820 = !DILocation(line: 3038, column: 2, scope: !10732)
!10821 = !DILocation(line: 3038, column: 7, scope: !10732)
!10822 = !DILocation(line: 3038, column: 18, scope: !10732)
!10823 = !DILocation(line: 3040, column: 8, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 3040, column: 6)
!10825 = !DILocation(line: 3040, column: 13, scope: !10824)
!10826 = !DILocation(line: 3040, column: 22, scope: !10824)
!10827 = !DILocation(line: 3040, column: 6, scope: !10732)
!10828 = !DILocation(line: 3041, column: 3, scope: !10824)
!10829 = !DILocation(line: 3045, column: 6, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 3045, column: 6)
!10831 = !DILocation(line: 3045, column: 11, scope: !10830)
!10832 = !DILocation(line: 3045, column: 21, scope: !10830)
!10833 = !DILocation(line: 3045, column: 6, scope: !10732)
!10834 = !DILocation(line: 3046, column: 9, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 3045, column: 61)
!10836 = !DILocation(line: 3046, column: 14, scope: !10835)
!10837 = !DILocation(line: 3046, column: 7, scope: !10835)
!10838 = !DILocation(line: 3047, column: 21, scope: !10835)
!10839 = !DILocation(line: 3047, column: 3, scope: !10835)
!10840 = !DILocation(line: 3047, column: 8, scope: !10835)
!10841 = !DILocation(line: 3047, column: 19, scope: !10835)
!10842 = !DILocation(line: 3048, column: 2, scope: !10835)
!10843 = !DILocation(line: 3050, column: 9, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 3048, column: 9)
!10845 = !DILocation(line: 3050, column: 14, scope: !10844)
!10846 = !DILocation(line: 3050, column: 7, scope: !10844)
!10847 = !DILocation(line: 3051, column: 8, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10844, file: !3, line: 3051, column: 7)
!10849 = !DILocation(line: 3051, column: 12, scope: !10848)
!10850 = !DILocation(line: 3051, column: 17, scope: !10848)
!10851 = !DILocation(line: 3051, column: 22, scope: !10848)
!10852 = !DILocation(line: 3051, column: 28, scope: !10848)
!10853 = !DILocation(line: 3051, column: 7, scope: !10844)
!10854 = !DILocation(line: 3055, column: 4, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10848, file: !3, line: 3051, column: 47)
!10856 = !DILocation(line: 3058, column: 10, scope: !10855)
!10857 = !DILocation(line: 3058, column: 15, scope: !10855)
!10858 = !DILocation(line: 3058, column: 8, scope: !10855)
!10859 = !DILocation(line: 3059, column: 4, scope: !10855)
!10860 = !DILocation(line: 3059, column: 9, scope: !10855)
!10861 = !DILocation(line: 3059, column: 15, scope: !10855)
!10862 = !DILocation(line: 3060, column: 22, scope: !10855)
!10863 = !DILocation(line: 3060, column: 4, scope: !10855)
!10864 = !DILocation(line: 3060, column: 9, scope: !10855)
!10865 = !DILocation(line: 3060, column: 20, scope: !10855)
!10866 = !DILocation(line: 3061, column: 24, scope: !10855)
!10867 = !DILocation(line: 3061, column: 29, scope: !10855)
!10868 = !DILocation(line: 3061, column: 4, scope: !10855)
!10869 = !DILocation(line: 3062, column: 3, scope: !10855)
!10870 = !DILocation(line: 3063, column: 8, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 3063, column: 8)
!10872 = distinct !DILexicalBlock(scope: !10848, file: !3, line: 3062, column: 10)
!10873 = !DILocation(line: 3063, column: 13, scope: !10871)
!10874 = !DILocation(line: 3063, column: 18, scope: !10871)
!10875 = !DILocation(line: 3063, column: 8, scope: !10872)
!10876 = !DILocation(line: 3065, column: 25, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 3063, column: 32)
!10878 = !DILocation(line: 3065, column: 30, scope: !10877)
!10879 = !DILocation(line: 3065, column: 5, scope: !10877)
!10880 = !DILocation(line: 3066, column: 4, scope: !10877)
!10881 = !DILocation(line: 3067, column: 5, scope: !10871)
!10882 = !DILocation(line: 3067, column: 10, scope: !10871)
!10883 = !DILocation(line: 3067, column: 16, scope: !10871)
!10884 = !DILocation(line: 3071, column: 2, scope: !10732)
!10885 = !DILocation(line: 3071, column: 7, scope: !10732)
!10886 = !DILocation(line: 3071, column: 18, scope: !10732)
!10887 = !DILocation(line: 3074, column: 2, scope: !10732)
!10888 = !DILocation(line: 3074, column: 2, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 3074, column: 2)
!10890 = !DILocation(line: 3075, column: 2, scope: !10732)
!10891 = !DILocation(line: 3076, column: 2, scope: !10732)
!10892 = !DILocation(line: 3077, column: 2, scope: !10732)
!10893 = !DILocation(line: 3078, column: 2, scope: !10732)
!10894 = !DILocation(line: 3079, column: 2, scope: !10732)
!10895 = !DILocation(line: 3081, column: 2, scope: !10732)
!10896 = !DILocation(line: 3082, column: 1, scope: !10732)
!10897 = distinct !DISubprogram(name: "scsi_reset_detect", scope: !3, file: !3, line: 3498, type: !6113, scopeLine: 3499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!10898 = !DILocalVariable(name: "acb", arg: 1, scope: !10897, file: !3, line: 3498, type: !185)
!10899 = !DILocation(line: 3498, column: 53, scope: !10897)
!10900 = !DILocation(line: 3500, column: 2, scope: !10897)
!10901 = !DILocation(line: 3502, column: 21, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10897, file: !3, line: 3502, column: 6)
!10903 = !DILocation(line: 3502, column: 26, scope: !10902)
!10904 = !DILocation(line: 3502, column: 6, scope: !10902)
!10905 = !DILocation(line: 3502, column: 6, scope: !10897)
!10906 = !DILocation(line: 3503, column: 14, scope: !10902)
!10907 = !DILocation(line: 3503, column: 19, scope: !10902)
!10908 = !DILocation(line: 3503, column: 3, scope: !10902)
!10909 = !DILocation(line: 3505, column: 2, scope: !10897)
!10910 = !DILocation(line: 3506, column: 2, scope: !10897)
!10911 = !DILocation(line: 3508, column: 2, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10913, file: !3, line: 3508, column: 2)
!10913 = distinct !DILexicalBlock(scope: !10914, file: !3, line: 3508, column: 2)
!10914 = distinct !DILexicalBlock(scope: !10915, file: !3, line: 3508, column: 2)
!10915 = distinct !DILexicalBlock(scope: !10897, file: !3, line: 3508, column: 2)
!10916 = !DILocation(line: 3511, column: 6, scope: !10897)
!10917 = !DILocation(line: 3511, column: 14, scope: !10897)
!10918 = !DILocation(line: 3512, column: 11, scope: !10897)
!10919 = !DILocation(line: 3512, column: 16, scope: !10897)
!10920 = !DILocation(line: 3512, column: 23, scope: !10897)
!10921 = !DILocation(line: 3512, column: 9, scope: !10897)
!10922 = !DILocation(line: 3512, column: 6, scope: !10897)
!10923 = !DILocation(line: 3511, column: 27, scope: !10897)
!10924 = !DILocation(line: 3510, column: 2, scope: !10897)
!10925 = !DILocation(line: 3510, column: 7, scope: !10897)
!10926 = !DILocation(line: 3510, column: 18, scope: !10897)
!10927 = !DILocation(line: 3514, column: 13, scope: !10897)
!10928 = !DILocation(line: 3514, column: 2, scope: !10897)
!10929 = !DILocation(line: 3515, column: 19, scope: !10897)
!10930 = !DILocation(line: 3515, column: 2, scope: !10897)
!10931 = !DILocation(line: 3519, column: 6, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10897, file: !3, line: 3519, column: 6)
!10933 = !DILocation(line: 3519, column: 11, scope: !10932)
!10934 = !DILocation(line: 3519, column: 20, scope: !10932)
!10935 = !DILocation(line: 3519, column: 6, scope: !10897)
!10936 = !DILocation(line: 3520, column: 3, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10932, file: !3, line: 3519, column: 33)
!10938 = !DILocation(line: 3520, column: 8, scope: !10937)
!10939 = !DILocation(line: 3520, column: 17, scope: !10937)
!10940 = !DILocation(line: 3521, column: 2, scope: !10937)
!10941 = !DILocation(line: 3522, column: 3, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10932, file: !3, line: 3521, column: 9)
!10943 = !DILocation(line: 3522, column: 8, scope: !10942)
!10944 = !DILocation(line: 3522, column: 17, scope: !10942)
!10945 = !DILocation(line: 3523, column: 19, scope: !10942)
!10946 = !DILocation(line: 3523, column: 3, scope: !10942)
!10947 = !DILocation(line: 3524, column: 18, scope: !10942)
!10948 = !DILocation(line: 3524, column: 3, scope: !10942)
!10949 = !DILocation(line: 3526, column: 3, scope: !10942)
!10950 = !DILocation(line: 3526, column: 8, scope: !10942)
!10951 = !DILocation(line: 3526, column: 19, scope: !10942)
!10952 = !DILocation(line: 3527, column: 3, scope: !10942)
!10953 = !DILocation(line: 3527, column: 8, scope: !10942)
!10954 = !DILocation(line: 3527, column: 17, scope: !10942)
!10955 = !DILocation(line: 3528, column: 24, scope: !10942)
!10956 = !DILocation(line: 3528, column: 3, scope: !10942)
!10957 = !DILocation(line: 3530, column: 1, scope: !10897)
!10958 = distinct !DISubprogram(name: "enable_msgout_abort", scope: !3, file: !3, line: 1545, type: !7334, scopeLine: 1547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!10959 = !DILocalVariable(name: "acb", arg: 1, scope: !10958, file: !3, line: 1545, type: !185)
!10960 = !DILocation(line: 1545, column: 62, scope: !10958)
!10961 = !DILocalVariable(name: "srb", arg: 2, scope: !10958, file: !3, line: 1546, type: !5234)
!10962 = !DILocation(line: 1546, column: 22, scope: !10958)
!10963 = !DILocation(line: 1548, column: 2, scope: !10958)
!10964 = !DILocation(line: 1548, column: 7, scope: !10958)
!10965 = !DILocation(line: 1548, column: 21, scope: !10958)
!10966 = !DILocation(line: 1549, column: 2, scope: !10958)
!10967 = !DILocation(line: 1549, column: 7, scope: !10958)
!10968 = !DILocation(line: 1549, column: 17, scope: !10958)
!10969 = !DILocation(line: 1550, column: 2, scope: !10958)
!10970 = !DILocation(line: 1551, column: 2, scope: !10958)
!10971 = !DILocation(line: 1551, column: 7, scope: !10958)
!10972 = !DILocation(line: 1551, column: 13, scope: !10958)
!10973 = !DILocation(line: 1552, column: 2, scope: !10958)
!10974 = !DILocation(line: 1552, column: 7, scope: !10958)
!10975 = !DILocation(line: 1552, column: 13, scope: !10958)
!10976 = !DILocation(line: 1553, column: 1, scope: !10958)
!10977 = distinct !DISubprogram(name: "srb_done", scope: !3, file: !3, line: 3176, type: !8130, scopeLine: 3178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!10978 = !DILocalVariable(name: "acb", arg: 1, scope: !10977, file: !3, line: 3176, type: !185)
!10979 = !DILocation(line: 3176, column: 44, scope: !10977)
!10980 = !DILocalVariable(name: "dcb", arg: 2, scope: !10977, file: !3, line: 3176, type: !5226)
!10981 = !DILocation(line: 3176, column: 70, scope: !10977)
!10982 = !DILocalVariable(name: "srb", arg: 3, scope: !10977, file: !3, line: 3177, type: !5234)
!10983 = !DILocation(line: 3177, column: 22, scope: !10977)
!10984 = !DILocalVariable(name: "tempcnt", scope: !10977, file: !3, line: 3179, type: !410)
!10985 = !DILocation(line: 3179, column: 5, scope: !10977)
!10986 = !DILocalVariable(name: "status", scope: !10977, file: !3, line: 3179, type: !410)
!10987 = !DILocation(line: 3179, column: 14, scope: !10977)
!10988 = !DILocalVariable(name: "cmd", scope: !10977, file: !3, line: 3180, type: !4970)
!10989 = !DILocation(line: 3180, column: 20, scope: !10977)
!10990 = !DILocation(line: 3180, column: 26, scope: !10977)
!10991 = !DILocation(line: 3180, column: 31, scope: !10977)
!10992 = !DILocalVariable(name: "dir", scope: !10977, file: !3, line: 3181, type: !146)
!10993 = !DILocation(line: 3181, column: 26, scope: !10977)
!10994 = !DILocation(line: 3181, column: 32, scope: !10977)
!10995 = !DILocation(line: 3181, column: 37, scope: !10977)
!10996 = !DILocalVariable(name: "ckc_only", scope: !10977, file: !3, line: 3182, type: !267)
!10997 = !DILocation(line: 3182, column: 6, scope: !10977)
!10998 = !DILocation(line: 3184, column: 2, scope: !10977)
!10999 = !DILocation(line: 3184, column: 2, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 3184, column: 2)
!11001 = !DILocation(line: 3186, column: 2, scope: !10977)
!11002 = !DILocation(line: 3186, column: 2, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 3186, column: 2)
!11004 = !DILocation(line: 3189, column: 11, scope: !10977)
!11005 = !DILocation(line: 3189, column: 16, scope: !10977)
!11006 = !DILocation(line: 3189, column: 9, scope: !10977)
!11007 = !DILocation(line: 3190, column: 6, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 3190, column: 6)
!11009 = !DILocation(line: 3190, column: 11, scope: !11008)
!11010 = !DILocation(line: 3190, column: 16, scope: !11008)
!11011 = !DILocation(line: 3190, column: 6, scope: !10977)
!11012 = !DILocation(line: 3191, column: 3, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !11008, file: !3, line: 3190, column: 33)
!11014 = !DILocation(line: 3191, column: 3, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 3191, column: 3)
!11016 = !DILocation(line: 3192, column: 23, scope: !11013)
!11017 = !DILocation(line: 3192, column: 28, scope: !11013)
!11018 = !DILocation(line: 3192, column: 3, scope: !11013)
!11019 = !DILocation(line: 3196, column: 3, scope: !11013)
!11020 = !DILocation(line: 3196, column: 8, scope: !11013)
!11021 = !DILocation(line: 3196, column: 13, scope: !11013)
!11022 = !DILocation(line: 3197, column: 3, scope: !11013)
!11023 = !DILocation(line: 3197, column: 8, scope: !11013)
!11024 = !DILocation(line: 3197, column: 23, scope: !11013)
!11025 = !DILocation(line: 3198, column: 3, scope: !11013)
!11026 = !DILocation(line: 3198, column: 8, scope: !11013)
!11027 = !DILocation(line: 3198, column: 22, scope: !11013)
!11028 = !DILocation(line: 3245, column: 7, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 3245, column: 7)
!11030 = !DILocation(line: 3245, column: 14, scope: !11029)
!11031 = !DILocation(line: 3245, column: 7, scope: !11013)
!11032 = !DILocation(line: 3246, column: 4, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11029, file: !3, line: 3245, column: 41)
!11034 = !DILocation(line: 3246, column: 9, scope: !11033)
!11035 = !DILocation(line: 3246, column: 16, scope: !11033)
!11036 = !DILocation(line: 3247, column: 4, scope: !11033)
!11037 = !DILocation(line: 3249, column: 3, scope: !11013)
!11038 = !DILocation(line: 3249, column: 3, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 3249, column: 3)
!11040 = !DILocation(line: 3251, column: 7, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 3251, column: 7)
!11042 = !DILocation(line: 3251, column: 12, scope: !11041)
!11043 = !DILocation(line: 3252, column: 7, scope: !11041)
!11044 = !DILocation(line: 3252, column: 10, scope: !11041)
!11045 = !DILocation(line: 3252, column: 15, scope: !11041)
!11046 = !DILocation(line: 3252, column: 36, scope: !11041)
!11047 = !DILocation(line: 3252, column: 41, scope: !11041)
!11048 = !DILocation(line: 3252, column: 33, scope: !11041)
!11049 = !DILocation(line: 3251, column: 7, scope: !11013)
!11050 = !DILocation(line: 3254, column: 8, scope: !11041)
!11051 = !DILocation(line: 3253, column: 4, scope: !11041)
!11052 = !DILocation(line: 3253, column: 9, scope: !11041)
!11053 = !DILocation(line: 3253, column: 16, scope: !11041)
!11054 = !DILocation(line: 3259, column: 8, scope: !11041)
!11055 = !DILocation(line: 3258, column: 4, scope: !11041)
!11056 = !DILocation(line: 3258, column: 9, scope: !11041)
!11057 = !DILocation(line: 3258, column: 16, scope: !11041)
!11058 = !DILocation(line: 3262, column: 3, scope: !11013)
!11059 = !DILocation(line: 3266, column: 6, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 3266, column: 6)
!11061 = !DILocation(line: 3266, column: 6, scope: !10977)
!11062 = !DILocation(line: 3270, column: 7, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 3270, column: 7)
!11064 = distinct !DILexicalBlock(scope: !11060, file: !3, line: 3266, column: 14)
!11065 = !DILocation(line: 3270, column: 27, scope: !11063)
!11066 = !DILocation(line: 3270, column: 7, scope: !11064)
!11067 = !DILocation(line: 3271, column: 18, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11063, file: !3, line: 3270, column: 47)
!11069 = !DILocation(line: 3271, column: 23, scope: !11068)
!11070 = !DILocation(line: 3271, column: 28, scope: !11068)
!11071 = !DILocation(line: 3271, column: 4, scope: !11068)
!11072 = !DILocation(line: 3272, column: 4, scope: !11068)
!11073 = !DILocation(line: 3273, column: 14, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11063, file: !3, line: 3273, column: 14)
!11075 = !DILocation(line: 3273, column: 34, scope: !11074)
!11076 = !DILocation(line: 3273, column: 14, scope: !11063)
!11077 = !DILocation(line: 3274, column: 29, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 3273, column: 49)
!11079 = !DILocation(line: 3274, column: 34, scope: !11078)
!11080 = !DILocation(line: 3274, column: 18, scope: !11078)
!11081 = !DILocation(line: 3274, column: 14, scope: !11078)
!11082 = !DILocation(line: 3274, column: 12, scope: !11078)
!11083 = !DILocation(line: 3275, column: 4, scope: !11078)
!11084 = !DILocation(line: 3277, column: 8, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11078, file: !3, line: 3277, column: 8)
!11086 = !DILocation(line: 3277, column: 16, scope: !11085)
!11087 = !DILocation(line: 3277, column: 8, scope: !11078)
!11088 = !DILocation(line: 3278, column: 12, scope: !11085)
!11089 = !DILocation(line: 3278, column: 5, scope: !11085)
!11090 = !DILocation(line: 3279, column: 23, scope: !11078)
!11091 = !DILocation(line: 3279, column: 4, scope: !11078)
!11092 = !DILocation(line: 3279, column: 9, scope: !11078)
!11093 = !DILocation(line: 3279, column: 21, scope: !11078)
!11094 = !DILocation(line: 3280, column: 13, scope: !11078)
!11095 = !DILocation(line: 3280, column: 18, scope: !11078)
!11096 = !DILocation(line: 3280, column: 4, scope: !11078)
!11097 = !DILocation(line: 3281, column: 15, scope: !11078)
!11098 = !DILocation(line: 3281, column: 20, scope: !11078)
!11099 = !DILocation(line: 3281, column: 27, scope: !11078)
!11100 = !DILocation(line: 3281, column: 32, scope: !11078)
!11101 = !DILocation(line: 3281, column: 4, scope: !11078)
!11102 = !DILocation(line: 3282, column: 22, scope: !11078)
!11103 = !DILocation(line: 3282, column: 4, scope: !11078)
!11104 = !DILocation(line: 3283, column: 4, scope: !11078)
!11105 = !DILocation(line: 3283, column: 9, scope: !11078)
!11106 = !DILocation(line: 3283, column: 24, scope: !11078)
!11107 = !DILocation(line: 3284, column: 4, scope: !11078)
!11108 = !DILocation(line: 3284, column: 9, scope: !11078)
!11109 = !DILocation(line: 3284, column: 23, scope: !11078)
!11110 = !DILocation(line: 3285, column: 4, scope: !11078)
!11111 = !DILocation(line: 3286, column: 14, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 3286, column: 14)
!11113 = !DILocation(line: 3286, column: 21, scope: !11112)
!11114 = !DILocation(line: 3286, column: 14, scope: !11074)
!11115 = !DILocation(line: 3287, column: 4, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11112, file: !3, line: 3286, column: 47)
!11117 = !DILocation(line: 3287, column: 9, scope: !11116)
!11118 = !DILocation(line: 3287, column: 24, scope: !11116)
!11119 = !DILocation(line: 3288, column: 4, scope: !11116)
!11120 = !DILocation(line: 3288, column: 9, scope: !11116)
!11121 = !DILocation(line: 3288, column: 23, scope: !11116)
!11122 = !DILocation(line: 3289, column: 4, scope: !11116)
!11123 = !DILocation(line: 3289, column: 9, scope: !11116)
!11124 = !DILocation(line: 3289, column: 16, scope: !11116)
!11125 = !DILocation(line: 3290, column: 3, scope: !11116)
!11126 = !DILocation(line: 3291, column: 4, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11112, file: !3, line: 3290, column: 10)
!11128 = !DILocation(line: 3291, column: 9, scope: !11127)
!11129 = !DILocation(line: 3291, column: 24, scope: !11127)
!11130 = !DILocation(line: 3292, column: 4, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11127, file: !3, line: 3292, column: 4)
!11132 = !DILocation(line: 3293, column: 4, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11127, file: !3, line: 3293, column: 4)
!11134 = !DILocation(line: 3294, column: 4, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11127, file: !3, line: 3294, column: 4)
!11136 = !DILocation(line: 3297, column: 2, scope: !11064)
!11137 = !DILocation(line: 3301, column: 12, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11060, file: !3, line: 3297, column: 9)
!11139 = !DILocation(line: 3301, column: 17, scope: !11138)
!11140 = !DILocation(line: 3301, column: 10, scope: !11138)
!11141 = !DILocation(line: 3302, column: 7, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11138, file: !3, line: 3302, column: 7)
!11143 = !DILocation(line: 3302, column: 14, scope: !11142)
!11144 = !DILocation(line: 3302, column: 7, scope: !11138)
!11145 = !DILocation(line: 3303, column: 4, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11142, file: !3, line: 3302, column: 34)
!11147 = !DILocation(line: 3303, column: 9, scope: !11146)
!11148 = !DILocation(line: 3303, column: 23, scope: !11146)
!11149 = !DILocation(line: 3304, column: 4, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11146, file: !3, line: 3304, column: 4)
!11151 = !DILocation(line: 3305, column: 4, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11146, file: !3, line: 3305, column: 4)
!11153 = !DILocation(line: 3306, column: 3, scope: !11146)
!11154 = !DILocation(line: 3306, column: 14, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11142, file: !3, line: 3306, column: 14)
!11156 = !DILocation(line: 3306, column: 19, scope: !11155)
!11157 = !DILocation(line: 3306, column: 26, scope: !11155)
!11158 = !DILocation(line: 3306, column: 14, scope: !11142)
!11159 = !DILocation(line: 3307, column: 4, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11161, file: !3, line: 3307, column: 4)
!11161 = distinct !DILexicalBlock(scope: !11155, file: !3, line: 3306, column: 42)
!11162 = !DILocation(line: 3308, column: 4, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11161, file: !3, line: 3308, column: 4)
!11164 = !DILocation(line: 3309, column: 3, scope: !11161)
!11165 = !DILocation(line: 3311, column: 4, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11155, file: !3, line: 3309, column: 10)
!11167 = !DILocation(line: 3311, column: 9, scope: !11166)
!11168 = !DILocation(line: 3311, column: 24, scope: !11166)
!11169 = !DILocation(line: 3312, column: 4, scope: !11166)
!11170 = !DILocation(line: 3312, column: 9, scope: !11166)
!11171 = !DILocation(line: 3312, column: 23, scope: !11166)
!11172 = !DILocation(line: 3313, column: 4, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11166, file: !3, line: 3313, column: 4)
!11174 = !DILocation(line: 3317, column: 11, scope: !10977)
!11175 = !DILocation(line: 3317, column: 2, scope: !10977)
!11176 = !DILabel(scope: !10977, name: "ckc_e", file: !3, line: 3319)
!11177 = !DILocation(line: 3319, column: 7, scope: !10977)
!11178 = !DILocation(line: 3321, column: 16, scope: !10977)
!11179 = !DILocation(line: 3321, column: 21, scope: !10977)
!11180 = !DILocation(line: 3321, column: 2, scope: !10977)
!11181 = !DILocation(line: 3323, column: 6, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 3323, column: 6)
!11183 = !DILocation(line: 3323, column: 11, scope: !11182)
!11184 = !DILocation(line: 3323, column: 19, scope: !11182)
!11185 = !DILocation(line: 3323, column: 6, scope: !10977)
!11186 = !DILocalVariable(name: "base", scope: !11187, file: !3, line: 3324, type: !4848)
!11187 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 3323, column: 31)
!11188 = !DILocation(line: 3324, column: 18, scope: !11187)
!11189 = !DILocalVariable(name: "ptr", scope: !11187, file: !3, line: 3325, type: !5620)
!11190 = !DILocation(line: 3325, column: 23, scope: !11187)
!11191 = !DILocalVariable(name: "flags", scope: !11187, file: !3, line: 3326, type: !248)
!11192 = !DILocation(line: 3326, column: 17, scope: !11187)
!11193 = !DILocalVariable(name: "sg", scope: !11187, file: !3, line: 3327, type: !5009)
!11194 = !DILocation(line: 3327, column: 23, scope: !11187)
!11195 = !DILocation(line: 3327, column: 40, scope: !11187)
!11196 = !DILocation(line: 3327, column: 28, scope: !11187)
!11197 = !DILocalVariable(name: "offset", scope: !11187, file: !3, line: 3328, type: !823)
!11198 = !DILocation(line: 3328, column: 10, scope: !11187)
!11199 = !DILocalVariable(name: "len", scope: !11187, file: !3, line: 3328, type: !823)
!11200 = !DILocation(line: 3328, column: 22, scope: !11187)
!11201 = !DILocation(line: 3330, column: 3, scope: !11187)
!11202 = !DILocation(line: 3330, column: 3, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11187, file: !3, line: 3330, column: 3)
!11204 = !DILocalVariable(name: "__dummy", scope: !11205, file: !3, line: 3330, type: !248)
!11205 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 3330, column: 3)
!11206 = distinct !DILexicalBlock(scope: !11203, file: !3, line: 3330, column: 3)
!11207 = !DILocation(line: 3330, column: 3, scope: !11205)
!11208 = !DILocalVariable(name: "__dummy2", scope: !11205, file: !3, line: 3330, type: !248)
!11209 = !DILocation(line: 3330, column: 3, scope: !11206)
!11210 = !DILocation(line: 3331, column: 30, scope: !11187)
!11211 = !DILocation(line: 3331, column: 48, scope: !11187)
!11212 = !DILocation(line: 3331, column: 34, scope: !11187)
!11213 = !DILocation(line: 3331, column: 10, scope: !11187)
!11214 = !DILocation(line: 3331, column: 8, scope: !11187)
!11215 = !DILocation(line: 3332, column: 32, scope: !11187)
!11216 = !DILocation(line: 3332, column: 39, scope: !11187)
!11217 = !DILocation(line: 3332, column: 37, scope: !11187)
!11218 = !DILocation(line: 3332, column: 9, scope: !11187)
!11219 = !DILocation(line: 3332, column: 7, scope: !11187)
!11220 = !DILocation(line: 3334, column: 8, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11187, file: !3, line: 3334, column: 7)
!11222 = !DILocation(line: 3334, column: 17, scope: !11221)
!11223 = !DILocation(line: 3334, column: 21, scope: !11221)
!11224 = !DILocation(line: 3334, column: 26, scope: !11221)
!11225 = !DILocation(line: 3334, column: 33, scope: !11221)
!11226 = !DILocation(line: 3334, column: 44, scope: !11221)
!11227 = !DILocation(line: 3335, column: 7, scope: !11221)
!11228 = !DILocation(line: 3335, column: 10, scope: !11221)
!11229 = !DILocation(line: 3335, column: 15, scope: !11221)
!11230 = !DILocation(line: 3335, column: 23, scope: !11221)
!11231 = !DILocation(line: 3335, column: 28, scope: !11221)
!11232 = !DILocation(line: 3335, column: 44, scope: !11221)
!11233 = !DILocation(line: 3335, column: 31, scope: !11221)
!11234 = !DILocation(line: 3335, column: 49, scope: !11221)
!11235 = !DILocation(line: 3336, column: 7, scope: !11221)
!11236 = !DILocation(line: 3336, column: 10, scope: !11221)
!11237 = !DILocation(line: 3336, column: 14, scope: !11221)
!11238 = !DILocation(line: 3336, column: 26, scope: !11221)
!11239 = !DILocation(line: 3336, column: 29, scope: !11221)
!11240 = !DILocation(line: 3336, column: 33, scope: !11221)
!11241 = !DILocation(line: 3336, column: 37, scope: !11221)
!11242 = !DILocation(line: 3336, column: 42, scope: !11221)
!11243 = !DILocation(line: 3336, column: 47, scope: !11221)
!11244 = !DILocation(line: 3336, column: 55, scope: !11221)
!11245 = !DILocation(line: 3334, column: 7, scope: !11187)
!11246 = !DILocation(line: 3337, column: 20, scope: !11221)
!11247 = !DILocation(line: 3337, column: 25, scope: !11221)
!11248 = !DILocation(line: 3337, column: 4, scope: !11221)
!11249 = !DILocation(line: 3337, column: 9, scope: !11221)
!11250 = !DILocation(line: 3337, column: 18, scope: !11221)
!11251 = !DILocation(line: 3341, column: 8, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11187, file: !3, line: 3341, column: 7)
!11253 = !DILocation(line: 3341, column: 13, scope: !11252)
!11254 = !DILocation(line: 3341, column: 20, scope: !11252)
!11255 = !DILocation(line: 3341, column: 38, scope: !11252)
!11256 = !DILocation(line: 3342, column: 8, scope: !11252)
!11257 = !DILocation(line: 3342, column: 33, scope: !11252)
!11258 = !DILocation(line: 3341, column: 7, scope: !11187)
!11259 = !DILocation(line: 3343, column: 9, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11261, file: !3, line: 3343, column: 8)
!11261 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 3342, column: 54)
!11262 = !DILocation(line: 3343, column: 14, scope: !11260)
!11263 = !DILocation(line: 3343, column: 8, scope: !11261)
!11264 = !DILocation(line: 3344, column: 13, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11260, file: !3, line: 3343, column: 29)
!11266 = !DILocation(line: 3344, column: 18, scope: !11265)
!11267 = !DILocation(line: 3344, column: 23, scope: !11265)
!11268 = !DILocation(line: 3344, column: 5, scope: !11265)
!11269 = !DILocation(line: 3345, column: 5, scope: !11265)
!11270 = !DILocation(line: 3345, column: 10, scope: !11265)
!11271 = !DILocation(line: 3345, column: 24, scope: !11265)
!11272 = !DILocation(line: 3346, column: 4, scope: !11265)
!11273 = !DILocation(line: 3347, column: 3, scope: !11261)
!11274 = !DILocation(line: 3349, column: 25, scope: !11187)
!11275 = !DILocation(line: 3349, column: 3, scope: !11187)
!11276 = !DILocation(line: 3350, column: 3, scope: !11187)
!11277 = !DILocation(line: 3350, column: 3, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11187, file: !3, line: 3350, column: 3)
!11279 = !DILocalVariable(name: "__dummy", scope: !11280, file: !3, line: 3350, type: !248)
!11280 = distinct !DILexicalBlock(scope: !11281, file: !3, line: 3350, column: 3)
!11281 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 3350, column: 3)
!11282 = !DILocation(line: 3350, column: 3, scope: !11280)
!11283 = !DILocalVariable(name: "__dummy2", scope: !11280, file: !3, line: 3350, type: !248)
!11284 = !DILocation(line: 3350, column: 3, scope: !11281)
!11285 = !DILocation(line: 3351, column: 2, scope: !11187)
!11286 = !DILocation(line: 3354, column: 17, scope: !10977)
!11287 = !DILocation(line: 3354, column: 22, scope: !10977)
!11288 = !DILocation(line: 3354, column: 27, scope: !10977)
!11289 = !DILocation(line: 3354, column: 2, scope: !10977)
!11290 = !DILocation(line: 3356, column: 27, scope: !10977)
!11291 = !DILocation(line: 3356, column: 32, scope: !10977)
!11292 = !DILocation(line: 3356, column: 2, scope: !10977)
!11293 = !DILocation(line: 3356, column: 7, scope: !10977)
!11294 = !DILocation(line: 3356, column: 11, scope: !10977)
!11295 = !DILocation(line: 3356, column: 25, scope: !10977)
!11296 = !DILocation(line: 3357, column: 2, scope: !10977)
!11297 = !DILocation(line: 3357, column: 7, scope: !10977)
!11298 = !DILocation(line: 3357, column: 11, scope: !10977)
!11299 = !DILocation(line: 3357, column: 28, scope: !10977)
!11300 = !DILocation(line: 3366, column: 6, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 3366, column: 6)
!11302 = !DILocation(line: 3366, column: 13, scope: !11301)
!11303 = !DILocation(line: 3366, column: 18, scope: !11301)
!11304 = !DILocation(line: 3366, column: 10, scope: !11301)
!11305 = !DILocation(line: 3366, column: 6, scope: !10977)
!11306 = !DILocation(line: 3368, column: 3, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 3366, column: 27)
!11308 = !DILocation(line: 3368, column: 3, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11307, file: !3, line: 3368, column: 3)
!11310 = !DILocation(line: 3370, column: 19, scope: !11307)
!11311 = !DILocation(line: 3370, column: 24, scope: !11307)
!11312 = !DILocation(line: 3370, column: 31, scope: !11307)
!11313 = !DILocation(line: 3370, column: 36, scope: !11307)
!11314 = !DILocation(line: 3370, column: 3, scope: !11307)
!11315 = !DILocation(line: 3371, column: 2, scope: !11307)
!11316 = !DILocation(line: 3372, column: 3, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 3371, column: 9)
!11318 = !DILocation(line: 3375, column: 2, scope: !10977)
!11319 = !DILocation(line: 3375, column: 7, scope: !10977)
!11320 = !DILocation(line: 3375, column: 17, scope: !10977)
!11321 = !DILocation(line: 3376, column: 23, scope: !10977)
!11322 = !DILocation(line: 3376, column: 2, scope: !10977)
!11323 = !DILocation(line: 3377, column: 1, scope: !10977)
!11324 = distinct !DISubprogram(name: "request_sense", scope: !3, file: !3, line: 3533, type: !8130, scopeLine: 3535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!11325 = !DILocalVariable(name: "acb", arg: 1, scope: !11324, file: !3, line: 3533, type: !185)
!11326 = !DILocation(line: 3533, column: 49, scope: !11324)
!11327 = !DILocalVariable(name: "dcb", arg: 2, scope: !11324, file: !3, line: 3533, type: !5226)
!11328 = !DILocation(line: 3533, column: 75, scope: !11324)
!11329 = !DILocalVariable(name: "srb", arg: 3, scope: !11324, file: !3, line: 3534, type: !5234)
!11330 = !DILocation(line: 3534, column: 22, scope: !11324)
!11331 = !DILocalVariable(name: "cmd", scope: !11324, file: !3, line: 3536, type: !4970)
!11332 = !DILocation(line: 3536, column: 20, scope: !11324)
!11333 = !DILocation(line: 3536, column: 26, scope: !11324)
!11334 = !DILocation(line: 3536, column: 31, scope: !11324)
!11335 = !DILocation(line: 3537, column: 2, scope: !11324)
!11336 = !DILocation(line: 3537, column: 2, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 3537, column: 2)
!11338 = !DILocation(line: 3540, column: 2, scope: !11324)
!11339 = !DILocation(line: 3540, column: 7, scope: !11324)
!11340 = !DILocation(line: 3540, column: 12, scope: !11324)
!11341 = !DILocation(line: 3541, column: 2, scope: !11324)
!11342 = !DILocation(line: 3541, column: 7, scope: !11324)
!11343 = !DILocation(line: 3541, column: 22, scope: !11324)
!11344 = !DILocation(line: 3542, column: 2, scope: !11324)
!11345 = !DILocation(line: 3542, column: 7, scope: !11324)
!11346 = !DILocation(line: 3542, column: 21, scope: !11324)
!11347 = !DILocation(line: 3545, column: 9, scope: !11324)
!11348 = !DILocation(line: 3545, column: 14, scope: !11324)
!11349 = !DILocation(line: 3545, column: 2, scope: !11324)
!11350 = !DILocation(line: 3549, column: 6, scope: !11324)
!11351 = !DILocation(line: 3549, column: 11, scope: !11324)
!11352 = !DILocation(line: 3549, column: 24, scope: !11324)
!11353 = !DILocation(line: 3548, column: 2, scope: !11324)
!11354 = !DILocation(line: 3548, column: 7, scope: !11324)
!11355 = !DILocation(line: 3548, column: 46, scope: !11324)
!11356 = !DILocation(line: 3548, column: 54, scope: !11324)
!11357 = !DILocation(line: 3551, column: 6, scope: !11324)
!11358 = !DILocation(line: 3551, column: 11, scope: !11324)
!11359 = !DILocation(line: 3551, column: 24, scope: !11324)
!11360 = !DILocation(line: 3550, column: 2, scope: !11324)
!11361 = !DILocation(line: 3550, column: 7, scope: !11324)
!11362 = !DILocation(line: 3550, column: 46, scope: !11324)
!11363 = !DILocation(line: 3550, column: 53, scope: !11324)
!11364 = !DILocation(line: 3552, column: 17, scope: !11324)
!11365 = !DILocation(line: 3552, column: 22, scope: !11324)
!11366 = !DILocation(line: 3552, column: 2, scope: !11324)
!11367 = !DILocation(line: 3552, column: 7, scope: !11324)
!11368 = !DILocation(line: 3552, column: 15, scope: !11324)
!11369 = !DILocation(line: 3554, column: 2, scope: !11324)
!11370 = !DILocation(line: 3554, column: 7, scope: !11324)
!11371 = !DILocation(line: 3554, column: 25, scope: !11324)
!11372 = !DILocation(line: 3555, column: 2, scope: !11324)
!11373 = !DILocation(line: 3555, column: 7, scope: !11324)
!11374 = !DILocation(line: 3555, column: 20, scope: !11324)
!11375 = !DILocation(line: 3555, column: 27, scope: !11324)
!11376 = !DILocation(line: 3557, column: 30, scope: !11324)
!11377 = !DILocation(line: 3557, column: 2, scope: !11324)
!11378 = !DILocation(line: 3557, column: 7, scope: !11324)
!11379 = !DILocation(line: 3557, column: 20, scope: !11324)
!11380 = !DILocation(line: 3557, column: 28, scope: !11324)
!11381 = !DILocation(line: 3560, column: 2, scope: !11324)
!11382 = !DILocation(line: 3560, column: 2, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 3560, column: 2)
!11384 = !DILocation(line: 3563, column: 2, scope: !11324)
!11385 = !DILocation(line: 3563, column: 7, scope: !11324)
!11386 = !DILocation(line: 3563, column: 16, scope: !11324)
!11387 = !DILocation(line: 3564, column: 2, scope: !11324)
!11388 = !DILocation(line: 3564, column: 7, scope: !11324)
!11389 = !DILocation(line: 3564, column: 16, scope: !11324)
!11390 = !DILocation(line: 3566, column: 17, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 3566, column: 6)
!11392 = !DILocation(line: 3566, column: 22, scope: !11391)
!11393 = !DILocation(line: 3566, column: 27, scope: !11391)
!11394 = !DILocation(line: 3566, column: 6, scope: !11391)
!11395 = !DILocation(line: 3566, column: 6, scope: !11324)
!11396 = !DILocation(line: 3567, column: 3, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11391, file: !3, line: 3566, column: 33)
!11398 = !DILocation(line: 3570, column: 14, scope: !11397)
!11399 = !DILocation(line: 3570, column: 19, scope: !11397)
!11400 = !DILocation(line: 3570, column: 26, scope: !11397)
!11401 = !DILocation(line: 3570, column: 31, scope: !11397)
!11402 = !DILocation(line: 3570, column: 3, scope: !11397)
!11403 = !DILocation(line: 3571, column: 21, scope: !11397)
!11404 = !DILocation(line: 3571, column: 3, scope: !11397)
!11405 = !DILocation(line: 3572, column: 2, scope: !11397)
!11406 = !DILocation(line: 3573, column: 1, scope: !11324)
!11407 = distinct !DISubprogram(name: "add_dev", scope: !3, file: !3, line: 3122, type: !11408, scopeLine: 3124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!11408 = !DISubroutineType(types: !11409)
!11409 = !{null, !185, !5226, !5620}
!11410 = !DILocalVariable(name: "acb", arg: 1, scope: !11407, file: !3, line: 3122, type: !185)
!11411 = !DILocation(line: 3122, column: 43, scope: !11407)
!11412 = !DILocalVariable(name: "dcb", arg: 2, scope: !11407, file: !3, line: 3122, type: !5226)
!11413 = !DILocation(line: 3122, column: 69, scope: !11407)
!11414 = !DILocalVariable(name: "ptr", arg: 3, scope: !11407, file: !3, line: 3123, type: !5620)
!11415 = !DILocation(line: 3123, column: 23, scope: !11407)
!11416 = !DILocalVariable(name: "bval1", scope: !11407, file: !3, line: 3125, type: !410)
!11417 = !DILocation(line: 3125, column: 5, scope: !11407)
!11418 = !DILocation(line: 3125, column: 13, scope: !11407)
!11419 = !DILocation(line: 3125, column: 18, scope: !11407)
!11420 = !DILocation(line: 3125, column: 26, scope: !11407)
!11421 = !DILocation(line: 3126, column: 18, scope: !11407)
!11422 = !DILocation(line: 3126, column: 2, scope: !11407)
!11423 = !DILocation(line: 3126, column: 7, scope: !11407)
!11424 = !DILocation(line: 3126, column: 16, scope: !11407)
!11425 = !DILocation(line: 3128, column: 16, scope: !11407)
!11426 = !DILocation(line: 3128, column: 21, scope: !11407)
!11427 = !DILocation(line: 3128, column: 2, scope: !11407)
!11428 = !DILocation(line: 3129, column: 1, scope: !11407)
!11429 = distinct !DISubprogram(name: "scsi_set_resid", scope: !4972, file: !4972, line: 194, type: !11430, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!11430 = !DISubroutineType(types: !11431)
!11431 = !{null, !4970, !7}
!11432 = !DILocalVariable(name: "cmd", arg: 1, scope: !11429, file: !4972, line: 194, type: !4970)
!11433 = !DILocation(line: 194, column: 53, scope: !11429)
!11434 = !DILocalVariable(name: "resid", arg: 2, scope: !11429, file: !4972, line: 194, type: !7)
!11435 = !DILocation(line: 194, column: 71, scope: !11429)
!11436 = !DILocation(line: 196, column: 23, scope: !11429)
!11437 = !DILocation(line: 196, column: 2, scope: !11429)
!11438 = !DILocation(line: 196, column: 7, scope: !11429)
!11439 = !DILocation(line: 196, column: 11, scope: !11429)
!11440 = !DILocation(line: 196, column: 21, scope: !11429)
!11441 = !DILocation(line: 197, column: 1, scope: !11429)
!11442 = distinct !DISubprogram(name: "disc_tagq_set", scope: !3, file: !3, line: 3101, type: !11443, scopeLine: 3102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!11443 = !DISubroutineType(types: !11444)
!11444 = !{null, !5226, !5620}
!11445 = !DILocalVariable(name: "dcb", arg: 1, scope: !11442, file: !3, line: 3101, type: !5226)
!11446 = !DILocation(line: 3101, column: 48, scope: !11442)
!11447 = !DILocalVariable(name: "ptr", arg: 2, scope: !11442, file: !3, line: 3101, type: !5620)
!11448 = !DILocation(line: 3101, column: 73, scope: !11442)
!11449 = !DILocation(line: 3104, column: 7, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11442, file: !3, line: 3104, column: 6)
!11451 = !DILocation(line: 3104, column: 12, scope: !11450)
!11452 = !DILocation(line: 3104, column: 17, scope: !11450)
!11453 = !DILocation(line: 3104, column: 25, scope: !11450)
!11454 = !DILocation(line: 3104, column: 30, scope: !11450)
!11455 = !DILocation(line: 3104, column: 34, scope: !11450)
!11456 = !DILocation(line: 3104, column: 39, scope: !11450)
!11457 = !DILocation(line: 3104, column: 43, scope: !11450)
!11458 = !DILocation(line: 3104, column: 51, scope: !11450)
!11459 = !DILocation(line: 3104, column: 6, scope: !11442)
!11460 = !DILocation(line: 3105, column: 8, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11462, file: !3, line: 3105, column: 7)
!11462 = distinct !DILexicalBlock(scope: !11450, file: !3, line: 3104, column: 57)
!11463 = !DILocation(line: 3105, column: 13, scope: !11461)
!11464 = !DILocation(line: 3105, column: 19, scope: !11461)
!11465 = !DILocation(line: 3106, column: 7, scope: !11461)
!11466 = !DILocation(line: 3106, column: 11, scope: !11461)
!11467 = !DILocation(line: 3106, column: 16, scope: !11461)
!11468 = !DILocation(line: 3106, column: 25, scope: !11461)
!11469 = !DILocation(line: 3106, column: 48, scope: !11461)
!11470 = !DILocation(line: 3110, column: 32, scope: !11461)
!11471 = !DILocation(line: 3110, column: 24, scope: !11461)
!11472 = !DILocation(line: 3110, column: 37, scope: !11461)
!11473 = !DILocation(line: 3110, column: 8, scope: !11461)
!11474 = !DILocation(line: 3105, column: 7, scope: !11462)
!11475 = !DILocation(line: 3111, column: 8, scope: !11476)
!11476 = distinct !DILexicalBlock(scope: !11477, file: !3, line: 3111, column: 8)
!11477 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 3110, column: 43)
!11478 = !DILocation(line: 3111, column: 13, scope: !11476)
!11479 = !DILocation(line: 3111, column: 25, scope: !11476)
!11480 = !DILocation(line: 3111, column: 8, scope: !11477)
!11481 = !DILocation(line: 3113, column: 9, scope: !11476)
!11482 = !DILocation(line: 3113, column: 14, scope: !11476)
!11483 = !DILocation(line: 3113, column: 19, scope: !11476)
!11484 = !DILocation(line: 3112, column: 5, scope: !11476)
!11485 = !DILocation(line: 3112, column: 10, scope: !11476)
!11486 = !DILocation(line: 3112, column: 22, scope: !11476)
!11487 = !DILocation(line: 3114, column: 4, scope: !11477)
!11488 = !DILocation(line: 3114, column: 9, scope: !11477)
!11489 = !DILocation(line: 3114, column: 19, scope: !11477)
!11490 = !DILocation(line: 3116, column: 3, scope: !11477)
!11491 = !DILocation(line: 3117, column: 4, scope: !11461)
!11492 = !DILocation(line: 3117, column: 9, scope: !11461)
!11493 = !DILocation(line: 3117, column: 21, scope: !11461)
!11494 = !DILocation(line: 3118, column: 2, scope: !11462)
!11495 = !DILocation(line: 3119, column: 1, scope: !11442)
!11496 = distinct !DISubprogram(name: "tagq_blacklist", scope: !3, file: !3, line: 3085, type: !11497, scopeLine: 3086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!11497 = !DISubroutineType(types: !11498)
!11498 = !{!410, !671}
!11499 = !DILocalVariable(name: "name", arg: 1, scope: !11496, file: !3, line: 3085, type: !671)
!11500 = !DILocation(line: 3085, column: 39, scope: !11496)
!11501 = !DILocation(line: 3094, column: 2, scope: !11496)
!11502 = distinct !DISubprogram(name: "data_out_phase0", scope: !3, file: !3, line: 1902, type: !10404, scopeLine: 1904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!11503 = !DILocalVariable(name: "acb", arg: 1, scope: !11502, file: !3, line: 1902, type: !185)
!11504 = !DILocation(line: 1902, column: 51, scope: !11502)
!11505 = !DILocalVariable(name: "srb", arg: 2, scope: !11502, file: !3, line: 1902, type: !5234)
!11506 = !DILocation(line: 1902, column: 75, scope: !11502)
!11507 = !DILocalVariable(name: "pscsi_status", arg: 3, scope: !11502, file: !3, line: 1903, type: !5637)
!11508 = !DILocation(line: 1903, column: 8, scope: !11502)
!11509 = !DILocalVariable(name: "dcb", scope: !11502, file: !3, line: 1905, type: !5226)
!11510 = !DILocation(line: 1905, column: 23, scope: !11502)
!11511 = !DILocation(line: 1905, column: 29, scope: !11502)
!11512 = !DILocation(line: 1905, column: 34, scope: !11502)
!11513 = !DILocalVariable(name: "scsi_status", scope: !11502, file: !3, line: 1906, type: !918)
!11514 = !DILocation(line: 1906, column: 6, scope: !11502)
!11515 = !DILocation(line: 1906, column: 21, scope: !11502)
!11516 = !DILocation(line: 1906, column: 20, scope: !11502)
!11517 = !DILocalVariable(name: "d_left_counter", scope: !11502, file: !3, line: 1907, type: !250)
!11518 = !DILocation(line: 1907, column: 6, scope: !11502)
!11519 = !DILocation(line: 1908, column: 2, scope: !11502)
!11520 = !DILocation(line: 1908, column: 2, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11502, file: !3, line: 1908, column: 2)
!11522 = !DILocation(line: 1923, column: 2, scope: !11502)
!11523 = !DILocation(line: 1923, column: 2, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11502, file: !3, line: 1923, column: 2)
!11525 = !DILocation(line: 1931, column: 2, scope: !11502)
!11526 = !DILocation(line: 1933, column: 8, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11502, file: !3, line: 1933, column: 6)
!11528 = !DILocation(line: 1933, column: 13, scope: !11527)
!11529 = !DILocation(line: 1933, column: 19, scope: !11527)
!11530 = !DILocation(line: 1933, column: 6, scope: !11502)
!11531 = !DILocation(line: 1934, column: 7, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11533, file: !3, line: 1934, column: 7)
!11533 = distinct !DILexicalBlock(scope: !11527, file: !3, line: 1933, column: 35)
!11534 = !DILocation(line: 1934, column: 19, scope: !11532)
!11535 = !DILocation(line: 1934, column: 7, scope: !11533)
!11536 = !DILocation(line: 1935, column: 4, scope: !11532)
!11537 = !DILocation(line: 1935, column: 9, scope: !11532)
!11538 = !DILocation(line: 1935, column: 16, scope: !11532)
!11539 = !DILocation(line: 1943, column: 9, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11533, file: !3, line: 1943, column: 7)
!11541 = !DILocation(line: 1943, column: 21, scope: !11540)
!11542 = !DILocation(line: 1943, column: 7, scope: !11533)
!11543 = !DILocation(line: 1949, column: 14, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 1943, column: 38)
!11545 = !DILocation(line: 1949, column: 56, scope: !11544)
!11546 = !DILocation(line: 1948, column: 19, scope: !11544)
!11547 = !DILocation(line: 1951, column: 8, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11544, file: !3, line: 1951, column: 8)
!11549 = !DILocation(line: 1951, column: 13, scope: !11548)
!11550 = !DILocation(line: 1951, column: 25, scope: !11548)
!11551 = !DILocation(line: 1951, column: 8, scope: !11544)
!11552 = !DILocation(line: 1952, column: 20, scope: !11548)
!11553 = !DILocation(line: 1952, column: 5, scope: !11548)
!11554 = !DILocation(line: 1954, column: 4, scope: !11544)
!11555 = !DILocation(line: 1954, column: 4, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11544, file: !3, line: 1954, column: 4)
!11557 = !DILocation(line: 1964, column: 3, scope: !11544)
!11558 = !DILocation(line: 1974, column: 7, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11533, file: !3, line: 1974, column: 7)
!11560 = !DILocation(line: 1974, column: 12, scope: !11559)
!11561 = !DILocation(line: 1974, column: 30, scope: !11559)
!11562 = !DILocation(line: 1974, column: 7, scope: !11533)
!11563 = !DILocation(line: 1976, column: 8, scope: !11559)
!11564 = !DILocation(line: 1975, column: 19, scope: !11559)
!11565 = !DILocation(line: 1975, column: 4, scope: !11559)
!11566 = !DILocation(line: 1981, column: 7, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11533, file: !3, line: 1981, column: 7)
!11568 = !DILocation(line: 1981, column: 22, scope: !11567)
!11569 = !DILocation(line: 1981, column: 27, scope: !11567)
!11570 = !DILocation(line: 1981, column: 30, scope: !11567)
!11571 = !DILocation(line: 1981, column: 35, scope: !11567)
!11572 = !DILocation(line: 1981, column: 47, scope: !11567)
!11573 = !DILocation(line: 1982, column: 7, scope: !11567)
!11574 = !DILocation(line: 1982, column: 23, scope: !11567)
!11575 = !DILocation(line: 1982, column: 28, scope: !11567)
!11576 = !DILocation(line: 1982, column: 10, scope: !11567)
!11577 = !DILocation(line: 1982, column: 33, scope: !11567)
!11578 = !DILocation(line: 1981, column: 7, scope: !11533)
!11579 = !DILocation(line: 1983, column: 19, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11567, file: !3, line: 1982, column: 38)
!11581 = !DILocation(line: 1984, column: 4, scope: !11580)
!11582 = !DILocation(line: 1987, column: 3, scope: !11580)
!11583 = !DILocation(line: 1998, column: 7, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11533, file: !3, line: 1998, column: 7)
!11585 = !DILocation(line: 1998, column: 22, scope: !11584)
!11586 = !DILocation(line: 1998, column: 7, scope: !11533)
!11587 = !DILocation(line: 1999, column: 4, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11584, file: !3, line: 1998, column: 28)
!11589 = !DILocation(line: 1999, column: 9, scope: !11588)
!11590 = !DILocation(line: 1999, column: 27, scope: !11588)
!11591 = !DILocation(line: 2000, column: 3, scope: !11588)
!11592 = !DILocalVariable(name: "oldxferred", scope: !11593, file: !3, line: 2006, type: !254)
!11593 = distinct !DILexicalBlock(scope: !11584, file: !3, line: 2000, column: 10)
!11594 = !DILocation(line: 2006, column: 9, scope: !11593)
!11595 = !DILocation(line: 2007, column: 8, scope: !11593)
!11596 = !DILocation(line: 2007, column: 13, scope: !11593)
!11597 = !DILocation(line: 2007, column: 33, scope: !11593)
!11598 = !DILocation(line: 2007, column: 31, scope: !11593)
!11599 = !DILocalVariable(name: "diff", scope: !11593, file: !3, line: 2008, type: !11600)
!11600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !267)
!11601 = !DILocation(line: 2008, column: 14, scope: !11593)
!11602 = !DILocation(line: 2009, column: 9, scope: !11593)
!11603 = !DILocation(line: 2009, column: 14, scope: !11593)
!11604 = !DILocation(line: 2009, column: 26, scope: !11593)
!11605 = !DILocation(line: 2009, column: 8, scope: !11593)
!11606 = !DILocation(line: 2010, column: 19, scope: !11593)
!11607 = !DILocation(line: 2010, column: 24, scope: !11593)
!11608 = !DILocation(line: 2010, column: 4, scope: !11593)
!11609 = !DILocation(line: 2012, column: 9, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11593, file: !3, line: 2012, column: 8)
!11611 = !DILocation(line: 2012, column: 14, scope: !11610)
!11612 = !DILocation(line: 2012, column: 24, scope: !11610)
!11613 = !DILocation(line: 2012, column: 29, scope: !11610)
!11614 = !DILocation(line: 2012, column: 39, scope: !11610)
!11615 = !DILocation(line: 2013, column: 9, scope: !11610)
!11616 = !DILocation(line: 2012, column: 46, scope: !11610)
!11617 = !DILocation(line: 2013, column: 14, scope: !11610)
!11618 = !DILocation(line: 2013, column: 31, scope: !11610)
!11619 = !DILocation(line: 2013, column: 36, scope: !11610)
!11620 = !DILocation(line: 2013, column: 17, scope: !11610)
!11621 = !DILocation(line: 2014, column: 8, scope: !11610)
!11622 = !DILocation(line: 2014, column: 13, scope: !11610)
!11623 = !DILocation(line: 2014, column: 24, scope: !11610)
!11624 = !DILocation(line: 2015, column: 18, scope: !11610)
!11625 = !DILocation(line: 2015, column: 16, scope: !11610)
!11626 = !DILocation(line: 2014, column: 38, scope: !11610)
!11627 = !DILocation(line: 2012, column: 8, scope: !11593)
!11628 = !DILocation(line: 2017, column: 5, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11610, file: !3, line: 2016, column: 10)
!11630 = !DILocation(line: 2020, column: 9, scope: !11629)
!11631 = !DILocation(line: 2020, column: 14, scope: !11629)
!11632 = !DILocation(line: 2020, column: 34, scope: !11629)
!11633 = !DILocation(line: 2020, column: 32, scope: !11629)
!11634 = !DILocation(line: 2019, column: 20, scope: !11629)
!11635 = !DILocation(line: 2021, column: 20, scope: !11629)
!11636 = !DILocation(line: 2021, column: 25, scope: !11629)
!11637 = !DILocation(line: 2021, column: 5, scope: !11629)
!11638 = !DILocation(line: 2026, column: 4, scope: !11629)
!11639 = !DILocation(line: 2028, column: 2, scope: !11533)
!11640 = !DILocation(line: 2029, column: 8, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11502, file: !3, line: 2029, column: 6)
!11642 = !DILocation(line: 2029, column: 7, scope: !11641)
!11643 = !DILocation(line: 2029, column: 21, scope: !11641)
!11644 = !DILocation(line: 2029, column: 34, scope: !11641)
!11645 = !DILocation(line: 2029, column: 6, scope: !11502)
!11646 = !DILocation(line: 2030, column: 26, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 2029, column: 50)
!11648 = !DILocation(line: 2030, column: 31, scope: !11647)
!11649 = !DILocation(line: 2030, column: 3, scope: !11647)
!11650 = !DILocation(line: 2031, column: 2, scope: !11647)
!11651 = !DILocation(line: 2032, column: 1, scope: !11502)
!11652 = distinct !DISubprogram(name: "data_in_phase0", scope: !3, file: !3, line: 2045, type: !10404, scopeLine: 2047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!11653 = !DILocalVariable(name: "acb", arg: 1, scope: !11652, file: !3, line: 2045, type: !185)
!11654 = !DILocation(line: 2045, column: 50, scope: !11652)
!11655 = !DILocalVariable(name: "srb", arg: 2, scope: !11652, file: !3, line: 2045, type: !5234)
!11656 = !DILocation(line: 2045, column: 74, scope: !11652)
!11657 = !DILocalVariable(name: "pscsi_status", arg: 3, scope: !11652, file: !3, line: 2046, type: !5637)
!11658 = !DILocation(line: 2046, column: 8, scope: !11652)
!11659 = !DILocalVariable(name: "scsi_status", scope: !11652, file: !3, line: 2048, type: !918)
!11660 = !DILocation(line: 2048, column: 6, scope: !11652)
!11661 = !DILocation(line: 2048, column: 21, scope: !11652)
!11662 = !DILocation(line: 2048, column: 20, scope: !11652)
!11663 = !DILocation(line: 2050, column: 2, scope: !11652)
!11664 = !DILocation(line: 2050, column: 2, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11652, file: !3, line: 2050, column: 2)
!11666 = !DILocation(line: 2066, column: 8, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11652, file: !3, line: 2066, column: 6)
!11668 = !DILocation(line: 2066, column: 13, scope: !11667)
!11669 = !DILocation(line: 2066, column: 19, scope: !11667)
!11670 = !DILocation(line: 2066, column: 6, scope: !11652)
!11671 = !DILocalVariable(name: "d_left_counter", scope: !11672, file: !3, line: 2067, type: !250)
!11672 = distinct !DILexicalBlock(scope: !11667, file: !3, line: 2066, column: 35)
!11673 = !DILocation(line: 2067, column: 7, scope: !11672)
!11674 = !DILocalVariable(name: "sc", scope: !11672, file: !3, line: 2068, type: !7)
!11675 = !DILocation(line: 2068, column: 16, scope: !11672)
!11676 = !DILocalVariable(name: "fc", scope: !11672, file: !3, line: 2068, type: !7)
!11677 = !DILocation(line: 2068, column: 20, scope: !11672)
!11678 = !DILocation(line: 2070, column: 7, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11672, file: !3, line: 2070, column: 7)
!11680 = !DILocation(line: 2070, column: 19, scope: !11679)
!11681 = !DILocation(line: 2070, column: 7, scope: !11672)
!11682 = !DILocation(line: 2071, column: 4, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11679, file: !3, line: 2070, column: 34)
!11684 = !DILocation(line: 2073, column: 4, scope: !11683)
!11685 = !DILocation(line: 2073, column: 9, scope: !11683)
!11686 = !DILocation(line: 2073, column: 16, scope: !11683)
!11687 = !DILocation(line: 2074, column: 3, scope: !11683)
!11688 = !DILocation(line: 2081, column: 9, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11672, file: !3, line: 2081, column: 7)
!11690 = !DILocation(line: 2081, column: 51, scope: !11689)
!11691 = !DILocation(line: 2081, column: 7, scope: !11672)
!11692 = !DILocation(line: 2100, column: 4, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11689, file: !3, line: 2081, column: 60)
!11694 = !DILocation(line: 2100, column: 4, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11693, file: !3, line: 2100, column: 4)
!11696 = !DILocation(line: 2104, column: 3, scope: !11693)
!11697 = !DILocation(line: 2106, column: 8, scope: !11672)
!11698 = !DILocation(line: 2106, column: 6, scope: !11672)
!11699 = !DILocation(line: 2107, column: 8, scope: !11672)
!11700 = !DILocation(line: 2107, column: 6, scope: !11672)
!11701 = !DILocation(line: 2108, column: 20, scope: !11672)
!11702 = !DILocation(line: 2108, column: 27, scope: !11672)
!11703 = !DILocation(line: 2108, column: 30, scope: !11672)
!11704 = !DILocation(line: 2109, column: 15, scope: !11672)
!11705 = !DILocation(line: 2109, column: 20, scope: !11672)
!11706 = !DILocation(line: 2109, column: 25, scope: !11672)
!11707 = !DILocation(line: 2109, column: 37, scope: !11672)
!11708 = !DILocation(line: 2109, column: 14, scope: !11672)
!11709 = !DILocation(line: 2109, column: 10, scope: !11672)
!11710 = !DILocation(line: 2108, column: 23, scope: !11672)
!11711 = !DILocation(line: 2108, column: 18, scope: !11672)
!11712 = !DILocation(line: 2111, column: 3, scope: !11672)
!11713 = !DILocation(line: 2111, column: 3, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11672, file: !3, line: 2111, column: 3)
!11715 = !DILocation(line: 2124, column: 7, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11672, file: !3, line: 2124, column: 7)
!11717 = !DILocation(line: 2125, column: 7, scope: !11716)
!11718 = !DILocation(line: 2125, column: 10, scope: !11716)
!11719 = !DILocation(line: 2125, column: 15, scope: !11716)
!11720 = !DILocation(line: 2125, column: 33, scope: !11716)
!11721 = !DILocation(line: 2124, column: 7, scope: !11672)
!11722 = !DILocalVariable(name: "left_io", scope: !11723, file: !3, line: 2126, type: !823)
!11723 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 2125, column: 52)
!11724 = !DILocation(line: 2126, column: 11, scope: !11723)
!11725 = !DILocation(line: 2126, column: 21, scope: !11723)
!11726 = !DILocation(line: 2126, column: 26, scope: !11723)
!11727 = !DILocation(line: 2130, column: 4, scope: !11723)
!11728 = !DILocation(line: 2130, column: 4, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11723, file: !3, line: 2130, column: 4)
!11730 = !DILocation(line: 2136, column: 8, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11723, file: !3, line: 2136, column: 8)
!11732 = !DILocation(line: 2136, column: 13, scope: !11731)
!11733 = !DILocation(line: 2136, column: 18, scope: !11731)
!11734 = !DILocation(line: 2136, column: 30, scope: !11731)
!11735 = !DILocation(line: 2136, column: 8, scope: !11723)
!11736 = !DILocation(line: 2137, column: 5, scope: !11731)
!11737 = !DILocation(line: 2139, column: 4, scope: !11723)
!11738 = !DILocation(line: 2139, column: 11, scope: !11723)
!11739 = !DILocalVariable(name: "virt", scope: !11740, file: !3, line: 2140, type: !4848)
!11740 = distinct !DILexicalBlock(scope: !11723, file: !3, line: 2139, column: 20)
!11741 = !DILocation(line: 2140, column: 20, scope: !11740)
!11742 = !DILocalVariable(name: "base", scope: !11740, file: !3, line: 2140, type: !4848)
!11743 = !DILocation(line: 2140, column: 27, scope: !11740)
!11744 = !DILocalVariable(name: "flags", scope: !11740, file: !3, line: 2141, type: !248)
!11745 = !DILocation(line: 2141, column: 19, scope: !11740)
!11746 = !DILocalVariable(name: "len", scope: !11740, file: !3, line: 2142, type: !823)
!11747 = !DILocation(line: 2142, column: 12, scope: !11740)
!11748 = !DILocation(line: 2142, column: 18, scope: !11740)
!11749 = !DILocalVariable(name: "offset", scope: !11740, file: !3, line: 2143, type: !823)
!11750 = !DILocation(line: 2143, column: 12, scope: !11740)
!11751 = !DILocation(line: 2143, column: 21, scope: !11740)
!11752 = !DILocation(line: 2143, column: 26, scope: !11740)
!11753 = !DILocation(line: 2143, column: 43, scope: !11740)
!11754 = !DILocation(line: 2143, column: 41, scope: !11740)
!11755 = !DILocation(line: 2145, column: 5, scope: !11740)
!11756 = !DILocation(line: 2145, column: 5, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 2145, column: 5)
!11758 = !DILocalVariable(name: "__dummy", scope: !11759, file: !3, line: 2145, type: !248)
!11759 = distinct !DILexicalBlock(scope: !11760, file: !3, line: 2145, column: 5)
!11760 = distinct !DILexicalBlock(scope: !11757, file: !3, line: 2145, column: 5)
!11761 = !DILocation(line: 2145, column: 5, scope: !11759)
!11762 = !DILocalVariable(name: "__dummy2", scope: !11759, file: !3, line: 2145, type: !248)
!11763 = !DILocation(line: 2145, column: 5, scope: !11760)
!11764 = !DILocation(line: 2148, column: 44, scope: !11740)
!11765 = !DILocation(line: 2148, column: 49, scope: !11740)
!11766 = !DILocation(line: 2148, column: 32, scope: !11740)
!11767 = !DILocation(line: 2149, column: 11, scope: !11740)
!11768 = !DILocation(line: 2149, column: 16, scope: !11740)
!11769 = !DILocation(line: 2148, column: 12, scope: !11740)
!11770 = !DILocation(line: 2148, column: 10, scope: !11740)
!11771 = !DILocation(line: 2150, column: 12, scope: !11740)
!11772 = !DILocation(line: 2150, column: 19, scope: !11740)
!11773 = !DILocation(line: 2150, column: 17, scope: !11740)
!11774 = !DILocation(line: 2150, column: 10, scope: !11740)
!11775 = !DILocation(line: 2152, column: 16, scope: !11740)
!11776 = !DILocation(line: 2152, column: 13, scope: !11740)
!11777 = !DILocation(line: 2154, column: 5, scope: !11740)
!11778 = !DILocation(line: 2154, column: 12, scope: !11740)
!11779 = !DILocalVariable(name: "byte", scope: !11780, file: !3, line: 2155, type: !410)
!11780 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 2154, column: 17)
!11781 = !DILocation(line: 2155, column: 9, scope: !11780)
!11782 = !DILocation(line: 2156, column: 13, scope: !11780)
!11783 = !DILocation(line: 2156, column: 11, scope: !11780)
!11784 = !DILocation(line: 2157, column: 16, scope: !11780)
!11785 = !DILocation(line: 2157, column: 11, scope: !11780)
!11786 = !DILocation(line: 2157, column: 14, scope: !11780)
!11787 = !DILocation(line: 2162, column: 20, scope: !11780)
!11788 = !DILocation(line: 2163, column: 22, scope: !11780)
!11789 = !DILocation(line: 2163, column: 6, scope: !11780)
!11790 = !DILocation(line: 2165, column: 9, scope: !11780)
!11791 = !DILocation(line: 2167, column: 11, scope: !11780)
!11792 = !DILocation(line: 2167, column: 9, scope: !11780)
!11793 = !DILocation(line: 2169, column: 10, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11780, file: !3, line: 2169, column: 10)
!11795 = !DILocation(line: 2169, column: 13, scope: !11794)
!11796 = !DILocation(line: 2169, column: 10, scope: !11780)
!11797 = !DILocation(line: 2170, column: 15, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11794, file: !3, line: 2169, column: 22)
!11799 = !DILocation(line: 2171, column: 7, scope: !11798)
!11800 = distinct !{!11800, !11777, !11801}
!11801 = !DILocation(line: 2173, column: 5, scope: !11740)
!11802 = !DILocalVariable(name: "__ret_warn_on", scope: !11803, file: !3, line: 2175, type: !267)
!11803 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 2175, column: 5)
!11804 = !DILocation(line: 2175, column: 5, scope: !11803)
!11805 = !DILocation(line: 2175, column: 5, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11803, file: !3, line: 2175, column: 5)
!11807 = !DILocation(line: 2175, column: 5, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11806, file: !3, line: 2175, column: 5)
!11809 = !DILocation(line: 2175, column: 5, scope: !11810)
!11810 = distinct !DILexicalBlock(scope: !11808, file: !3, line: 2175, column: 5)
!11811 = !DILocation(line: 2175, column: 5, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11808, file: !3, line: 2175, column: 5)
!11813 = !{i32 -2140848266, i32 -2140848237, i32 -2140848191, i32 -2140848133, i32 -2140848079, i32 -2140848025, i32 -2140847970, i32 -2140847939}
!11814 = !DILocation(line: 2175, column: 5, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11808, file: !3, line: 2175, column: 5)
!11816 = !{i32 -2140847535, i32 -2140847528, i32 -2140847476, i32 -2140847445, i32 -2140847415}
!11817 = !DILocation(line: 2175, column: 5, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11808, file: !3, line: 2175, column: 5)
!11819 = !DILocation(line: 2177, column: 9, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 2177, column: 9)
!11821 = !DILocation(line: 2177, column: 12, scope: !11820)
!11822 = !DILocation(line: 2177, column: 20, scope: !11820)
!11823 = !DILocation(line: 2177, column: 24, scope: !11820)
!11824 = !DILocation(line: 2177, column: 29, scope: !11820)
!11825 = !DILocation(line: 2177, column: 34, scope: !11820)
!11826 = !DILocation(line: 2177, column: 46, scope: !11820)
!11827 = !DILocation(line: 2177, column: 9, scope: !11740)
!11828 = !DILocation(line: 2179, column: 10, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11830, file: !3, line: 2179, column: 10)
!11830 = distinct !DILexicalBlock(scope: !11820, file: !3, line: 2177, column: 60)
!11831 = !DILocation(line: 2179, column: 15, scope: !11829)
!11832 = !DILocation(line: 2179, column: 33, scope: !11829)
!11833 = !DILocation(line: 2179, column: 10, scope: !11830)
!11834 = !DILocalVariable(name: "byte", scope: !11835, file: !3, line: 2180, type: !410)
!11835 = distinct !DILexicalBlock(scope: !11829, file: !3, line: 2179, column: 38)
!11836 = !DILocation(line: 2180, column: 10, scope: !11835)
!11837 = !DILocation(line: 2180, column: 17, scope: !11835)
!11838 = !DILocation(line: 2182, column: 17, scope: !11835)
!11839 = !DILocation(line: 2182, column: 12, scope: !11835)
!11840 = !DILocation(line: 2182, column: 15, scope: !11835)
!11841 = !DILocation(line: 2183, column: 7, scope: !11835)
!11842 = !DILocation(line: 2183, column: 12, scope: !11835)
!11843 = !DILocation(line: 2183, column: 29, scope: !11835)
!11844 = !DILocation(line: 2186, column: 6, scope: !11835)
!11845 = !DILocation(line: 2188, column: 6, scope: !11830)
!11846 = !DILocation(line: 2189, column: 5, scope: !11830)
!11847 = !DILocation(line: 2191, column: 27, scope: !11740)
!11848 = !DILocation(line: 2191, column: 5, scope: !11740)
!11849 = !DILocation(line: 2192, column: 5, scope: !11740)
!11850 = !DILocation(line: 2192, column: 5, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 2192, column: 5)
!11852 = !DILocalVariable(name: "__dummy", scope: !11853, file: !3, line: 2192, type: !248)
!11853 = distinct !DILexicalBlock(scope: !11854, file: !3, line: 2192, column: 5)
!11854 = distinct !DILexicalBlock(scope: !11851, file: !3, line: 2192, column: 5)
!11855 = !DILocation(line: 2192, column: 5, scope: !11853)
!11856 = !DILocalVariable(name: "__dummy2", scope: !11853, file: !3, line: 2192, type: !248)
!11857 = !DILocation(line: 2192, column: 5, scope: !11854)
!11858 = distinct !{!11858, !11737, !11859}
!11859 = !DILocation(line: 2193, column: 4, scope: !11723)
!11860 = !DILocation(line: 2198, column: 3, scope: !11723)
!11861 = !DILocation(line: 2224, column: 7, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11672, file: !3, line: 2224, column: 7)
!11863 = !DILocation(line: 2224, column: 22, scope: !11862)
!11864 = !DILocation(line: 2225, column: 7, scope: !11862)
!11865 = !DILocation(line: 2225, column: 11, scope: !11862)
!11866 = !DILocation(line: 2225, column: 23, scope: !11862)
!11867 = !DILocation(line: 2224, column: 7, scope: !11672)
!11868 = !DILocation(line: 2238, column: 29, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11862, file: !3, line: 2225, column: 46)
!11870 = !DILocation(line: 2238, column: 4, scope: !11869)
!11871 = !DILocation(line: 2238, column: 9, scope: !11869)
!11872 = !DILocation(line: 2238, column: 27, scope: !11869)
!11873 = !DILocation(line: 2239, column: 3, scope: !11869)
!11874 = !DILocation(line: 2248, column: 19, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11862, file: !3, line: 2239, column: 10)
!11876 = !DILocation(line: 2248, column: 24, scope: !11875)
!11877 = !DILocation(line: 2248, column: 4, scope: !11875)
!11878 = !DILocation(line: 2250, column: 2, scope: !11672)
!11879 = !DILocation(line: 2252, column: 8, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11652, file: !3, line: 2252, column: 6)
!11881 = !DILocation(line: 2252, column: 7, scope: !11880)
!11882 = !DILocation(line: 2252, column: 21, scope: !11880)
!11883 = !DILocation(line: 2252, column: 34, scope: !11880)
!11884 = !DILocation(line: 2252, column: 6, scope: !11652)
!11885 = !DILocation(line: 2253, column: 26, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11880, file: !3, line: 2252, column: 49)
!11887 = !DILocation(line: 2253, column: 31, scope: !11886)
!11888 = !DILocation(line: 2253, column: 3, scope: !11886)
!11889 = !DILocation(line: 2254, column: 2, scope: !11886)
!11890 = !DILocation(line: 2255, column: 1, scope: !11652)
!11891 = distinct !DISubprogram(name: "command_phase0", scope: !3, file: !3, line: 1751, type: !10404, scopeLine: 1753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!11892 = !DILocalVariable(name: "acb", arg: 1, scope: !11891, file: !3, line: 1751, type: !185)
!11893 = !DILocation(line: 1751, column: 50, scope: !11891)
!11894 = !DILocalVariable(name: "srb", arg: 2, scope: !11891, file: !3, line: 1751, type: !5234)
!11895 = !DILocation(line: 1751, column: 74, scope: !11891)
!11896 = !DILocalVariable(name: "pscsi_status", arg: 3, scope: !11891, file: !3, line: 1752, type: !5637)
!11897 = !DILocation(line: 1752, column: 8, scope: !11891)
!11898 = !DILocation(line: 1754, column: 2, scope: !11891)
!11899 = !DILocation(line: 1754, column: 2, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11891, file: !3, line: 1754, column: 2)
!11901 = !DILocation(line: 1755, column: 2, scope: !11891)
!11902 = !DILocation(line: 1756, column: 1, scope: !11891)
!11903 = distinct !DISubprogram(name: "status_phase0", scope: !3, file: !3, line: 2443, type: !10404, scopeLine: 2445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!11904 = !DILocalVariable(name: "acb", arg: 1, scope: !11903, file: !3, line: 2443, type: !185)
!11905 = !DILocation(line: 2443, column: 49, scope: !11903)
!11906 = !DILocalVariable(name: "srb", arg: 2, scope: !11903, file: !3, line: 2443, type: !5234)
!11907 = !DILocation(line: 2443, column: 73, scope: !11903)
!11908 = !DILocalVariable(name: "pscsi_status", arg: 3, scope: !11903, file: !3, line: 2444, type: !5637)
!11909 = !DILocation(line: 2444, column: 8, scope: !11903)
!11910 = !DILocation(line: 2446, column: 2, scope: !11903)
!11911 = !DILocation(line: 2446, column: 2, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11903, file: !3, line: 2446, column: 2)
!11913 = !DILocation(line: 2448, column: 23, scope: !11903)
!11914 = !DILocation(line: 2448, column: 2, scope: !11903)
!11915 = !DILocation(line: 2448, column: 7, scope: !11903)
!11916 = !DILocation(line: 2448, column: 21, scope: !11903)
!11917 = !DILocation(line: 2449, column: 21, scope: !11903)
!11918 = !DILocation(line: 2449, column: 2, scope: !11903)
!11919 = !DILocation(line: 2449, column: 7, scope: !11903)
!11920 = !DILocation(line: 2449, column: 19, scope: !11903)
!11921 = !DILocation(line: 2450, column: 2, scope: !11903)
!11922 = !DILocation(line: 2450, column: 7, scope: !11903)
!11923 = !DILocation(line: 2450, column: 13, scope: !11903)
!11924 = !DILocation(line: 2451, column: 3, scope: !11903)
!11925 = !DILocation(line: 2451, column: 16, scope: !11903)
!11926 = !DILocation(line: 2452, column: 2, scope: !11903)
!11927 = !DILocation(line: 2453, column: 2, scope: !11903)
!11928 = !DILocation(line: 2454, column: 1, scope: !11903)
!11929 = distinct !DISubprogram(name: "nop0", scope: !3, file: !3, line: 2855, type: !10404, scopeLine: 2857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!11930 = !DILocalVariable(name: "acb", arg: 1, scope: !11929, file: !3, line: 2855, type: !185)
!11931 = !DILocation(line: 2855, column: 40, scope: !11929)
!11932 = !DILocalVariable(name: "srb", arg: 2, scope: !11929, file: !3, line: 2855, type: !5234)
!11933 = !DILocation(line: 2855, column: 64, scope: !11929)
!11934 = !DILocalVariable(name: "pscsi_status", arg: 3, scope: !11929, file: !3, line: 2856, type: !5637)
!11935 = !DILocation(line: 2856, column: 8, scope: !11929)
!11936 = !DILocation(line: 2858, column: 1, scope: !11929)
!11937 = distinct !DISubprogram(name: "msgout_phase0", scope: !3, file: !3, line: 1706, type: !10404, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!11938 = !DILocalVariable(name: "acb", arg: 1, scope: !11937, file: !3, line: 1706, type: !185)
!11939 = !DILocation(line: 1706, column: 49, scope: !11937)
!11940 = !DILocalVariable(name: "srb", arg: 2, scope: !11937, file: !3, line: 1706, type: !5234)
!11941 = !DILocation(line: 1706, column: 73, scope: !11937)
!11942 = !DILocalVariable(name: "pscsi_status", arg: 3, scope: !11937, file: !3, line: 1707, type: !5637)
!11943 = !DILocation(line: 1707, column: 8, scope: !11937)
!11944 = !DILocation(line: 1709, column: 2, scope: !11937)
!11945 = !DILocation(line: 1709, column: 2, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11937, file: !3, line: 1709, column: 2)
!11947 = !DILocation(line: 1710, column: 6, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11937, file: !3, line: 1710, column: 6)
!11949 = !DILocation(line: 1710, column: 11, scope: !11948)
!11950 = !DILocation(line: 1710, column: 17, scope: !11948)
!11951 = !DILocation(line: 1710, column: 6, scope: !11937)
!11952 = !DILocation(line: 1711, column: 4, scope: !11948)
!11953 = !DILocation(line: 1711, column: 17, scope: !11948)
!11954 = !DILocation(line: 1711, column: 3, scope: !11948)
!11955 = !DILocation(line: 1713, column: 2, scope: !11937)
!11956 = !DILocation(line: 1714, column: 2, scope: !11937)
!11957 = !DILocation(line: 1714, column: 7, scope: !11937)
!11958 = !DILocation(line: 1714, column: 13, scope: !11937)
!11959 = !DILocation(line: 1715, column: 1, scope: !11937)
!11960 = distinct !DISubprogram(name: "msgin_phase0", scope: !3, file: !3, line: 2728, type: !10404, scopeLine: 2730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!11961 = !DILocalVariable(name: "acb", arg: 1, scope: !11960, file: !3, line: 2728, type: !185)
!11962 = !DILocation(line: 2728, column: 48, scope: !11960)
!11963 = !DILocalVariable(name: "srb", arg: 2, scope: !11960, file: !3, line: 2728, type: !5234)
!11964 = !DILocation(line: 2728, column: 72, scope: !11960)
!11965 = !DILocalVariable(name: "pscsi_status", arg: 3, scope: !11960, file: !3, line: 2729, type: !5637)
!11966 = !DILocation(line: 2729, column: 8, scope: !11960)
!11967 = !DILocalVariable(name: "dcb", scope: !11960, file: !3, line: 2731, type: !5226)
!11968 = !DILocation(line: 2731, column: 23, scope: !11960)
!11969 = !DILocation(line: 2731, column: 29, scope: !11960)
!11970 = !DILocation(line: 2731, column: 34, scope: !11960)
!11971 = !DILocation(line: 2732, column: 2, scope: !11960)
!11972 = !DILocation(line: 2732, column: 2, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11960, file: !3, line: 2732, column: 2)
!11974 = !DILocation(line: 2734, column: 35, scope: !11960)
!11975 = !DILocation(line: 2734, column: 2, scope: !11960)
!11976 = !DILocation(line: 2734, column: 7, scope: !11960)
!11977 = !DILocation(line: 2734, column: 17, scope: !11960)
!11978 = !DILocation(line: 2734, column: 22, scope: !11960)
!11979 = !DILocation(line: 2734, column: 29, scope: !11960)
!11980 = !DILocation(line: 2734, column: 33, scope: !11960)
!11981 = !DILocation(line: 2735, column: 22, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11960, file: !3, line: 2735, column: 6)
!11983 = !DILocation(line: 2735, column: 27, scope: !11982)
!11984 = !DILocation(line: 2735, column: 38, scope: !11982)
!11985 = !DILocation(line: 2735, column: 43, scope: !11982)
!11986 = !DILocation(line: 2735, column: 6, scope: !11982)
!11987 = !DILocation(line: 2735, column: 6, scope: !11960)
!11988 = !DILocation(line: 2737, column: 11, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11982, file: !3, line: 2735, column: 53)
!11990 = !DILocation(line: 2737, column: 16, scope: !11989)
!11991 = !DILocation(line: 2737, column: 3, scope: !11989)
!11992 = !DILocation(line: 2739, column: 4, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11989, file: !3, line: 2737, column: 30)
!11994 = !DILocation(line: 2739, column: 9, scope: !11993)
!11995 = !DILocation(line: 2739, column: 15, scope: !11993)
!11996 = !DILocation(line: 2740, column: 4, scope: !11993)
!11997 = !DILocation(line: 2746, column: 19, scope: !11993)
!11998 = !DILocation(line: 2746, column: 24, scope: !11993)
!11999 = !DILocation(line: 2747, column: 12, scope: !11993)
!12000 = !DILocation(line: 2747, column: 17, scope: !11993)
!12001 = !DILocation(line: 2746, column: 8, scope: !11993)
!12002 = !DILocation(line: 2745, column: 8, scope: !11993)
!12003 = !DILocation(line: 2748, column: 4, scope: !11993)
!12004 = !DILocation(line: 2751, column: 4, scope: !11993)
!12005 = !DILocation(line: 2754, column: 8, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 2754, column: 8)
!12007 = !DILocation(line: 2754, column: 13, scope: !12006)
!12008 = !DILocation(line: 2754, column: 19, scope: !12006)
!12009 = !DILocation(line: 2754, column: 8, scope: !11993)
!12010 = !DILocation(line: 2755, column: 21, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12006, file: !3, line: 2754, column: 39)
!12012 = !DILocation(line: 2755, column: 26, scope: !12011)
!12013 = !DILocation(line: 2755, column: 5, scope: !12011)
!12014 = !DILocation(line: 2756, column: 5, scope: !12011)
!12015 = !DILocation(line: 2759, column: 8, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 2759, column: 8)
!12017 = !DILocation(line: 2759, column: 13, scope: !12016)
!12018 = !DILocation(line: 2759, column: 19, scope: !12016)
!12019 = !DILocation(line: 2759, column: 8, scope: !11993)
!12020 = !DILocation(line: 2760, column: 22, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12016, file: !3, line: 2759, column: 39)
!12022 = !DILocation(line: 2760, column: 27, scope: !12021)
!12023 = !DILocation(line: 2760, column: 5, scope: !12021)
!12024 = !DILocation(line: 2761, column: 5, scope: !12021)
!12025 = !DILocation(line: 2763, column: 24, scope: !11993)
!12026 = !DILocation(line: 2763, column: 29, scope: !11993)
!12027 = !DILocation(line: 2763, column: 4, scope: !11993)
!12028 = !DILocation(line: 2765, column: 4, scope: !11993)
!12029 = !DILocation(line: 2769, column: 8, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 2769, column: 8)
!12031 = !DILocation(line: 2769, column: 13, scope: !12030)
!12032 = !DILocation(line: 2769, column: 26, scope: !12030)
!12033 = !DILocation(line: 2770, column: 8, scope: !12030)
!12034 = !DILocation(line: 2770, column: 11, scope: !12030)
!12035 = !DILocation(line: 2770, column: 16, scope: !12030)
!12036 = !DILocation(line: 2770, column: 29, scope: !12030)
!12037 = !DILocation(line: 2769, column: 8, scope: !11993)
!12038 = !DILocation(line: 2771, column: 20, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12030, file: !3, line: 2770, column: 47)
!12040 = !DILocation(line: 2771, column: 25, scope: !12039)
!12041 = !DILocation(line: 2771, column: 5, scope: !12039)
!12042 = !DILocation(line: 2772, column: 5, scope: !12039)
!12043 = !DILocation(line: 2775, column: 8, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 2775, column: 8)
!12045 = !DILocation(line: 2775, column: 13, scope: !12044)
!12046 = !DILocation(line: 2775, column: 26, scope: !12044)
!12047 = !DILocation(line: 2776, column: 8, scope: !12044)
!12048 = !DILocation(line: 2776, column: 11, scope: !12044)
!12049 = !DILocation(line: 2776, column: 16, scope: !12044)
!12050 = !DILocation(line: 2776, column: 29, scope: !12044)
!12051 = !DILocation(line: 2777, column: 8, scope: !12044)
!12052 = !DILocation(line: 2777, column: 11, scope: !12044)
!12053 = !DILocation(line: 2777, column: 16, scope: !12044)
!12054 = !DILocation(line: 2777, column: 29, scope: !12044)
!12055 = !DILocation(line: 2775, column: 8, scope: !11993)
!12056 = !DILocation(line: 2778, column: 20, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12044, file: !3, line: 2777, column: 35)
!12058 = !DILocation(line: 2778, column: 25, scope: !12057)
!12059 = !DILocation(line: 2778, column: 5, scope: !12057)
!12060 = !DILocation(line: 2779, column: 5, scope: !12057)
!12061 = !DILocation(line: 2781, column: 17, scope: !11993)
!12062 = !DILocation(line: 2781, column: 22, scope: !11993)
!12063 = !DILocation(line: 2781, column: 4, scope: !11993)
!12064 = !DILocation(line: 2782, column: 4, scope: !11993)
!12065 = !DILocation(line: 2786, column: 4, scope: !11993)
!12066 = !DILocation(line: 2786, column: 4, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 2786, column: 4)
!12068 = !DILocation(line: 2787, column: 4, scope: !11993)
!12069 = !DILocation(line: 2791, column: 4, scope: !11993)
!12070 = !DILocation(line: 2798, column: 4, scope: !11993)
!12071 = !DILocation(line: 2798, column: 4, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 2798, column: 4)
!12073 = !DILocation(line: 2801, column: 4, scope: !11993)
!12074 = !DILocation(line: 2804, column: 4, scope: !11993)
!12075 = !DILocation(line: 2804, column: 4, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 2804, column: 4)
!12077 = !DILocation(line: 2805, column: 4, scope: !11993)
!12078 = !DILocation(line: 2808, column: 4, scope: !11993)
!12079 = !DILocation(line: 2808, column: 4, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 2808, column: 4)
!12081 = !DILocation(line: 2812, column: 4, scope: !11993)
!12082 = !DILocation(line: 2812, column: 9, scope: !11993)
!12083 = !DILocation(line: 2812, column: 14, scope: !11993)
!12084 = !DILocation(line: 2813, column: 24, scope: !11993)
!12085 = !DILocation(line: 2813, column: 29, scope: !11993)
!12086 = !DILocation(line: 2813, column: 4, scope: !11993)
!12087 = !DILocation(line: 2814, column: 4, scope: !11993)
!12088 = !DILocation(line: 2818, column: 8, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 2818, column: 8)
!12090 = !DILocation(line: 2818, column: 13, scope: !12089)
!12091 = !DILocation(line: 2818, column: 26, scope: !12089)
!12092 = !DILocation(line: 2818, column: 8, scope: !11993)
!12093 = !DILocation(line: 2819, column: 5, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 2818, column: 43)
!12095 = !DILocation(line: 2819, column: 5, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12094, file: !3, line: 2819, column: 5)
!12097 = !DILocation(line: 2820, column: 5, scope: !12094)
!12098 = !DILocation(line: 2820, column: 10, scope: !12094)
!12099 = !DILocation(line: 2820, column: 20, scope: !12094)
!12100 = !DILocation(line: 2821, column: 26, scope: !12094)
!12101 = !DILocation(line: 2821, column: 31, scope: !12094)
!12102 = !DILocation(line: 2821, column: 5, scope: !12094)
!12103 = !DILocation(line: 2821, column: 10, scope: !12094)
!12104 = !DILocation(line: 2821, column: 24, scope: !12094)
!12105 = !DILocation(line: 2822, column: 5, scope: !12094)
!12106 = !DILocation(line: 2823, column: 5, scope: !12094)
!12107 = !DILocation(line: 2823, column: 10, scope: !12094)
!12108 = !DILocation(line: 2823, column: 16, scope: !12094)
!12109 = !DILocation(line: 2825, column: 4, scope: !12094)
!12110 = !DILocation(line: 2826, column: 17, scope: !11993)
!12111 = !DILocation(line: 2826, column: 22, scope: !11993)
!12112 = !DILocation(line: 2826, column: 4, scope: !11993)
!12113 = !DILocation(line: 2827, column: 3, scope: !11993)
!12114 = !DILocation(line: 2830, column: 3, scope: !11989)
!12115 = !DILocation(line: 2830, column: 8, scope: !11989)
!12116 = !DILocation(line: 2830, column: 14, scope: !11989)
!12117 = !DILocation(line: 2831, column: 3, scope: !11989)
!12118 = !DILocation(line: 2831, column: 8, scope: !11989)
!12119 = !DILocation(line: 2831, column: 16, scope: !11989)
!12120 = !DILocation(line: 2832, column: 2, scope: !11989)
!12121 = !DILocation(line: 2833, column: 3, scope: !11960)
!12122 = !DILocation(line: 2833, column: 16, scope: !11960)
!12123 = !DILocation(line: 2834, column: 2, scope: !11960)
!12124 = !DILocation(line: 2835, column: 2, scope: !11960)
!12125 = !DILocation(line: 2836, column: 1, scope: !11960)
!12126 = distinct !DISubprogram(name: "inl", scope: !8099, file: !8099, line: 336, type: !12127, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12127 = !DISubroutineType(types: !12128)
!12128 = !{!7, !267}
!12129 = !DILocalVariable(name: "port", arg: 1, scope: !12126, file: !8099, line: 336, type: !267)
!12130 = !DILocation(line: 336, column: 1, scope: !12126)
!12131 = !DILocalVariable(name: "value", scope: !12126, file: !8099, line: 336, type: !7)
!12132 = !{i32 -2141640957}
!12133 = distinct !DISubprogram(name: "sg_update_list", scope: !3, file: !3, line: 1817, type: !12134, scopeLine: 1818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12134 = !DISubroutineType(types: !12135)
!12135 = !{null, !5234, !250}
!12136 = !DILocalVariable(name: "srb", arg: 1, scope: !12133, file: !3, line: 1817, type: !5234)
!12137 = !DILocation(line: 1817, column: 47, scope: !12133)
!12138 = !DILocalVariable(name: "left", arg: 2, scope: !12133, file: !3, line: 1817, type: !250)
!12139 = !DILocation(line: 1817, column: 56, scope: !12133)
!12140 = !DILocalVariable(name: "idx", scope: !12133, file: !3, line: 1819, type: !410)
!12141 = !DILocation(line: 1819, column: 5, scope: !12133)
!12142 = !DILocalVariable(name: "xferred", scope: !12133, file: !3, line: 1820, type: !250)
!12143 = !DILocation(line: 1820, column: 6, scope: !12133)
!12144 = !DILocation(line: 1820, column: 16, scope: !12133)
!12145 = !DILocation(line: 1820, column: 21, scope: !12133)
!12146 = !DILocation(line: 1820, column: 41, scope: !12133)
!12147 = !DILocation(line: 1820, column: 39, scope: !12133)
!12148 = !DILocalVariable(name: "psge", scope: !12133, file: !3, line: 1821, type: !5241)
!12149 = !DILocation(line: 1821, column: 18, scope: !12133)
!12150 = !DILocation(line: 1821, column: 25, scope: !12133)
!12151 = !DILocation(line: 1821, column: 30, scope: !12133)
!12152 = !DILocation(line: 1821, column: 42, scope: !12133)
!12153 = !DILocation(line: 1821, column: 47, scope: !12133)
!12154 = !DILocation(line: 1821, column: 40, scope: !12133)
!12155 = !DILocation(line: 1823, column: 2, scope: !12133)
!12156 = !DILocation(line: 1823, column: 2, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12133, file: !3, line: 1823, column: 2)
!12158 = !DILocation(line: 1826, column: 6, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12133, file: !3, line: 1826, column: 6)
!12160 = !DILocation(line: 1826, column: 14, scope: !12159)
!12161 = !DILocation(line: 1826, column: 6, scope: !12133)
!12162 = !DILocation(line: 1828, column: 3, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12159, file: !3, line: 1826, column: 20)
!12164 = !DILocation(line: 1831, column: 19, scope: !12133)
!12165 = !DILocation(line: 1831, column: 2, scope: !12133)
!12166 = !DILocation(line: 1832, column: 27, scope: !12133)
!12167 = !DILocation(line: 1832, column: 2, scope: !12133)
!12168 = !DILocation(line: 1832, column: 7, scope: !12133)
!12169 = !DILocation(line: 1832, column: 25, scope: !12133)
!12170 = !DILocation(line: 1833, column: 13, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12133, file: !3, line: 1833, column: 2)
!12172 = !DILocation(line: 1833, column: 18, scope: !12171)
!12173 = !DILocation(line: 1833, column: 11, scope: !12171)
!12174 = !DILocation(line: 1833, column: 7, scope: !12171)
!12175 = !DILocation(line: 1833, column: 28, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12171, file: !3, line: 1833, column: 2)
!12177 = !DILocation(line: 1833, column: 34, scope: !12176)
!12178 = !DILocation(line: 1833, column: 39, scope: !12176)
!12179 = !DILocation(line: 1833, column: 32, scope: !12176)
!12180 = !DILocation(line: 1833, column: 2, scope: !12171)
!12181 = !DILocation(line: 1834, column: 7, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12183, file: !3, line: 1834, column: 7)
!12183 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1833, column: 56)
!12184 = !DILocation(line: 1834, column: 18, scope: !12182)
!12185 = !DILocation(line: 1834, column: 24, scope: !12182)
!12186 = !DILocation(line: 1834, column: 15, scope: !12182)
!12187 = !DILocation(line: 1834, column: 7, scope: !12183)
!12188 = !DILocation(line: 1836, column: 15, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12182, file: !3, line: 1834, column: 32)
!12190 = !DILocation(line: 1836, column: 21, scope: !12189)
!12191 = !DILocation(line: 1836, column: 12, scope: !12189)
!12192 = !DILocation(line: 1837, column: 3, scope: !12189)
!12193 = !DILocation(line: 1839, column: 29, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12182, file: !3, line: 1837, column: 10)
!12195 = !DILocation(line: 1839, column: 34, scope: !12194)
!12196 = !DILocation(line: 1839, column: 39, scope: !12194)
!12197 = !DILocation(line: 1839, column: 44, scope: !12194)
!12198 = !DILocation(line: 1839, column: 49, scope: !12194)
!12199 = !DILocation(line: 1840, column: 6, scope: !12194)
!12200 = !DILocation(line: 1840, column: 11, scope: !12194)
!12201 = !DILocation(line: 1839, column: 4, scope: !12194)
!12202 = !DILocation(line: 1842, column: 20, scope: !12194)
!12203 = !DILocation(line: 1842, column: 4, scope: !12194)
!12204 = !DILocation(line: 1842, column: 10, scope: !12194)
!12205 = !DILocation(line: 1842, column: 17, scope: !12194)
!12206 = !DILocation(line: 1843, column: 21, scope: !12194)
!12207 = !DILocation(line: 1843, column: 4, scope: !12194)
!12208 = !DILocation(line: 1843, column: 10, scope: !12194)
!12209 = !DILocation(line: 1843, column: 18, scope: !12194)
!12210 = !DILocation(line: 1844, column: 20, scope: !12194)
!12211 = !DILocation(line: 1844, column: 4, scope: !12194)
!12212 = !DILocation(line: 1844, column: 9, scope: !12194)
!12213 = !DILocation(line: 1844, column: 18, scope: !12194)
!12214 = !DILocation(line: 1845, column: 32, scope: !12194)
!12215 = !DILocation(line: 1845, column: 37, scope: !12194)
!12216 = !DILocation(line: 1845, column: 42, scope: !12194)
!12217 = !DILocation(line: 1845, column: 47, scope: !12194)
!12218 = !DILocation(line: 1845, column: 52, scope: !12194)
!12219 = !DILocation(line: 1846, column: 6, scope: !12194)
!12220 = !DILocation(line: 1846, column: 11, scope: !12194)
!12221 = !DILocation(line: 1845, column: 4, scope: !12194)
!12222 = !DILocation(line: 1848, column: 4, scope: !12194)
!12223 = !DILocation(line: 1850, column: 7, scope: !12183)
!12224 = !DILocation(line: 1851, column: 2, scope: !12183)
!12225 = !DILocation(line: 1833, column: 52, scope: !12176)
!12226 = !DILocation(line: 1833, column: 2, scope: !12176)
!12227 = distinct !{!12227, !12180, !12228}
!12228 = !DILocation(line: 1851, column: 2, scope: !12171)
!12229 = !DILocation(line: 1852, column: 19, scope: !12133)
!12230 = !DILocation(line: 1852, column: 2, scope: !12133)
!12231 = !DILocation(line: 1853, column: 1, scope: !12133)
!12232 = distinct !DISubprogram(name: "cleanup_after_transfer", scope: !3, file: !3, line: 1876, type: !7334, scopeLine: 1878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12233 = !DILocalVariable(name: "acb", arg: 1, scope: !12232, file: !3, line: 1876, type: !185)
!12234 = !DILocation(line: 1876, column: 58, scope: !12232)
!12235 = !DILocalVariable(name: "srb", arg: 2, scope: !12232, file: !3, line: 1877, type: !5234)
!12236 = !DILocation(line: 1877, column: 22, scope: !12232)
!12237 = !DILocation(line: 1880, column: 6, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12232, file: !3, line: 1880, column: 6)
!12239 = !DILocation(line: 1880, column: 48, scope: !12238)
!12240 = !DILocation(line: 1880, column: 6, scope: !12232)
!12241 = !DILocation(line: 1881, column: 9, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12243, file: !3, line: 1881, column: 7)
!12243 = distinct !DILexicalBlock(scope: !12238, file: !3, line: 1880, column: 58)
!12244 = !DILocation(line: 1881, column: 51, scope: !12242)
!12245 = !DILocation(line: 1881, column: 7, scope: !12243)
!12246 = !DILocation(line: 1882, column: 15, scope: !12242)
!12247 = !DILocation(line: 1882, column: 4, scope: !12242)
!12248 = !DILocation(line: 1883, column: 9, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12243, file: !3, line: 1883, column: 7)
!12250 = !DILocation(line: 1883, column: 51, scope: !12249)
!12251 = !DILocation(line: 1883, column: 7, scope: !12243)
!12252 = !DILocation(line: 1884, column: 4, scope: !12249)
!12253 = !DILocation(line: 1885, column: 2, scope: !12243)
!12254 = !DILocation(line: 1886, column: 9, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 1886, column: 7)
!12256 = distinct !DILexicalBlock(scope: !12238, file: !3, line: 1885, column: 9)
!12257 = !DILocation(line: 1886, column: 51, scope: !12255)
!12258 = !DILocation(line: 1886, column: 7, scope: !12256)
!12259 = !DILocation(line: 1887, column: 4, scope: !12255)
!12260 = !DILocation(line: 1888, column: 9, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 1888, column: 7)
!12262 = !DILocation(line: 1888, column: 51, scope: !12261)
!12263 = !DILocation(line: 1888, column: 7, scope: !12256)
!12264 = !DILocation(line: 1889, column: 15, scope: !12261)
!12265 = !DILocation(line: 1889, column: 4, scope: !12261)
!12266 = !DILocation(line: 1891, column: 2, scope: !12232)
!12267 = !DILocation(line: 1892, column: 1, scope: !12232)
!12268 = distinct !DISubprogram(name: "sg_verify_length", scope: !3, file: !3, line: 1797, type: !12269, scopeLine: 1798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12269 = !DISubroutineType(types: !12270)
!12270 = !{null, !5234}
!12271 = !DILocalVariable(name: "srb", arg: 1, scope: !12268, file: !3, line: 1797, type: !5234)
!12272 = !DILocation(line: 1797, column: 49, scope: !12268)
!12273 = !DILocation(line: 1810, column: 1, scope: !12268)
!12274 = distinct !DISubprogram(name: "sg_subtract_one", scope: !3, file: !3, line: 1862, type: !12269, scopeLine: 1863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12275 = !DILocalVariable(name: "srb", arg: 1, scope: !12274, file: !3, line: 1862, type: !5234)
!12276 = !DILocation(line: 1862, column: 48, scope: !12274)
!12277 = !DILocation(line: 1864, column: 17, scope: !12274)
!12278 = !DILocation(line: 1864, column: 22, scope: !12274)
!12279 = !DILocation(line: 1864, column: 27, scope: !12274)
!12280 = !DILocation(line: 1864, column: 45, scope: !12274)
!12281 = !DILocation(line: 1864, column: 2, scope: !12274)
!12282 = !DILocation(line: 1865, column: 1, scope: !12274)
!12283 = distinct !DISubprogram(name: "msgin_completed", scope: !3, file: !3, line: 2469, type: !12284, scopeLine: 2470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12284 = !DISubroutineType(types: !12285)
!12285 = !{!410, !5619, !250}
!12286 = !DILocalVariable(name: "msgbuf", arg: 1, scope: !12283, file: !3, line: 2469, type: !5619)
!12287 = !DILocation(line: 2469, column: 39, scope: !12283)
!12288 = !DILocalVariable(name: "len", arg: 2, scope: !12283, file: !3, line: 2469, type: !250)
!12289 = !DILocation(line: 2469, column: 51, scope: !12283)
!12290 = !DILocation(line: 2471, column: 7, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12283, file: !3, line: 2471, column: 6)
!12292 = !DILocation(line: 2471, column: 6, scope: !12291)
!12293 = !DILocation(line: 2471, column: 14, scope: !12291)
!12294 = !DILocation(line: 2471, column: 6, scope: !12283)
!12295 = !DILocation(line: 2472, column: 7, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12297, file: !3, line: 2472, column: 7)
!12297 = distinct !DILexicalBlock(scope: !12291, file: !3, line: 2471, column: 35)
!12298 = !DILocation(line: 2472, column: 11, scope: !12296)
!12299 = !DILocation(line: 2472, column: 7, scope: !12297)
!12300 = !DILocation(line: 2473, column: 4, scope: !12296)
!12301 = !DILocation(line: 2474, column: 7, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !12297, file: !3, line: 2474, column: 7)
!12303 = !DILocation(line: 2474, column: 13, scope: !12302)
!12304 = !DILocation(line: 2474, column: 23, scope: !12302)
!12305 = !DILocation(line: 2474, column: 11, scope: !12302)
!12306 = !DILocation(line: 2474, column: 7, scope: !12297)
!12307 = !DILocation(line: 2475, column: 4, scope: !12302)
!12308 = !DILocation(line: 2476, column: 2, scope: !12297)
!12309 = !DILocation(line: 2476, column: 14, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12291, file: !3, line: 2476, column: 13)
!12311 = !DILocation(line: 2476, column: 13, scope: !12310)
!12312 = !DILocation(line: 2476, column: 21, scope: !12310)
!12313 = !DILocation(line: 2476, column: 29, scope: !12310)
!12314 = !DILocation(line: 2476, column: 33, scope: !12310)
!12315 = !DILocation(line: 2476, column: 32, scope: !12310)
!12316 = !DILocation(line: 2476, column: 40, scope: !12310)
!12317 = !DILocation(line: 2476, column: 13, scope: !12291)
!12318 = !DILocation(line: 2477, column: 7, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12310, file: !3, line: 2477, column: 7)
!12320 = !DILocation(line: 2477, column: 11, scope: !12319)
!12321 = !DILocation(line: 2477, column: 7, scope: !12310)
!12322 = !DILocation(line: 2478, column: 4, scope: !12319)
!12323 = !DILocation(line: 2477, column: 13, scope: !12319)
!12324 = !DILocation(line: 2479, column: 2, scope: !12283)
!12325 = !DILocation(line: 2480, column: 1, scope: !12283)
!12326 = distinct !DISubprogram(name: "msgin_qtag", scope: !3, file: !3, line: 2497, type: !12327, scopeLine: 2499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12327 = !DISubroutineType(types: !12328)
!12328 = !{!5234, !185, !5226, !410}
!12329 = !DILocalVariable(name: "acb", arg: 1, scope: !12326, file: !3, line: 2497, type: !185)
!12330 = !DILocation(line: 2497, column: 60, scope: !12326)
!12331 = !DILocalVariable(name: "dcb", arg: 2, scope: !12326, file: !3, line: 2498, type: !5226)
!12332 = !DILocation(line: 2498, column: 24, scope: !12326)
!12333 = !DILocalVariable(name: "tag", arg: 3, scope: !12326, file: !3, line: 2498, type: !410)
!12334 = !DILocation(line: 2498, column: 32, scope: !12326)
!12335 = !DILocalVariable(name: "srb", scope: !12326, file: !3, line: 2500, type: !5234)
!12336 = !DILocation(line: 2500, column: 21, scope: !12326)
!12337 = !DILocalVariable(name: "i", scope: !12326, file: !3, line: 2501, type: !5234)
!12338 = !DILocation(line: 2501, column: 21, scope: !12326)
!12339 = !DILocation(line: 2502, column: 2, scope: !12326)
!12340 = !DILocation(line: 2502, column: 2, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 2502, column: 2)
!12342 = !DILocation(line: 2505, column: 8, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 2505, column: 6)
!12344 = !DILocation(line: 2505, column: 13, scope: !12343)
!12345 = !DILocation(line: 2505, column: 30, scope: !12343)
!12346 = !DILocation(line: 2505, column: 27, scope: !12343)
!12347 = !DILocation(line: 2505, column: 22, scope: !12343)
!12348 = !DILocation(line: 2505, column: 6, scope: !12326)
!12349 = !DILocation(line: 2506, column: 3, scope: !12343)
!12350 = !DILocation(line: 2510, column: 18, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 2510, column: 6)
!12352 = !DILocation(line: 2510, column: 23, scope: !12351)
!12353 = !DILocation(line: 2510, column: 6, scope: !12351)
!12354 = !DILocation(line: 2510, column: 6, scope: !12326)
!12355 = !DILocation(line: 2511, column: 3, scope: !12351)
!12356 = !DILocalVariable(name: "__mptr", scope: !12357, file: !3, line: 2512, type: !256)
!12357 = distinct !DILexicalBlock(scope: !12358, file: !3, line: 2512, column: 2)
!12358 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 2512, column: 2)
!12359 = !DILocation(line: 2512, column: 2, scope: !12357)
!12360 = !DILocation(line: 2512, column: 2, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12357, file: !3, line: 2512, column: 2)
!12362 = !DILocation(line: 2512, column: 2, scope: !12358)
!12363 = !DILocation(line: 2512, column: 2, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12358, file: !3, line: 2512, column: 2)
!12365 = !DILocation(line: 2513, column: 7, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12367, file: !3, line: 2513, column: 7)
!12367 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 2512, column: 53)
!12368 = !DILocation(line: 2513, column: 10, scope: !12366)
!12369 = !DILocation(line: 2513, column: 24, scope: !12366)
!12370 = !DILocation(line: 2513, column: 21, scope: !12366)
!12371 = !DILocation(line: 2513, column: 7, scope: !12367)
!12372 = !DILocation(line: 2514, column: 10, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12366, file: !3, line: 2513, column: 29)
!12374 = !DILocation(line: 2514, column: 8, scope: !12373)
!12375 = !DILocation(line: 2515, column: 4, scope: !12373)
!12376 = !DILocation(line: 2517, column: 2, scope: !12367)
!12377 = !DILocalVariable(name: "__mptr", scope: !12378, file: !3, line: 2512, type: !256)
!12378 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 2512, column: 2)
!12379 = !DILocation(line: 2512, column: 2, scope: !12378)
!12380 = !DILocation(line: 2512, column: 2, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12378, file: !3, line: 2512, column: 2)
!12382 = distinct !{!12382, !12362, !12383}
!12383 = !DILocation(line: 2517, column: 2, scope: !12358)
!12384 = !DILocation(line: 2518, column: 7, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 2518, column: 6)
!12386 = !DILocation(line: 2518, column: 6, scope: !12326)
!12387 = !DILocation(line: 2519, column: 3, scope: !12385)
!12388 = !DILocation(line: 2521, column: 2, scope: !12326)
!12389 = !DILocation(line: 2521, column: 2, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 2521, column: 2)
!12391 = !DILocation(line: 2523, column: 6, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 2523, column: 6)
!12393 = !DILocation(line: 2523, column: 11, scope: !12392)
!12394 = !DILocation(line: 2523, column: 16, scope: !12392)
!12395 = !DILocation(line: 2523, column: 6, scope: !12326)
!12396 = !DILocation(line: 2525, column: 23, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 2523, column: 30)
!12398 = !DILocation(line: 2525, column: 28, scope: !12397)
!12399 = !DILocation(line: 2525, column: 3, scope: !12397)
!12400 = !DILocation(line: 2526, column: 2, scope: !12397)
!12401 = !DILocation(line: 2528, column: 8, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 2528, column: 6)
!12403 = !DILocation(line: 2528, column: 13, scope: !12402)
!12404 = !DILocation(line: 2528, column: 19, scope: !12402)
!12405 = !DILocation(line: 2528, column: 6, scope: !12326)
!12406 = !DILocation(line: 2529, column: 3, scope: !12402)
!12407 = !DILocation(line: 2531, column: 9, scope: !12326)
!12408 = !DILocation(line: 2531, column: 14, scope: !12326)
!12409 = !DILocation(line: 2531, column: 2, scope: !12326)
!12410 = !DILocation(line: 2531, column: 25, scope: !12326)
!12411 = !DILocation(line: 2531, column: 30, scope: !12326)
!12412 = !DILocation(line: 2531, column: 42, scope: !12326)
!12413 = !DILocation(line: 2531, column: 53, scope: !12326)
!12414 = !DILocation(line: 2531, column: 58, scope: !12326)
!12415 = !DILocation(line: 2532, column: 16, scope: !12326)
!12416 = !DILocation(line: 2532, column: 21, scope: !12326)
!12417 = !DILocation(line: 2532, column: 33, scope: !12326)
!12418 = !DILocation(line: 2532, column: 2, scope: !12326)
!12419 = !DILocation(line: 2532, column: 7, scope: !12326)
!12420 = !DILocation(line: 2532, column: 13, scope: !12326)
!12421 = !DILocation(line: 2533, column: 2, scope: !12326)
!12422 = !DILocation(line: 2533, column: 7, scope: !12326)
!12423 = !DILocation(line: 2533, column: 13, scope: !12326)
!12424 = !DILocation(line: 2534, column: 20, scope: !12326)
!12425 = !DILocation(line: 2534, column: 2, scope: !12326)
!12426 = !DILocation(line: 2534, column: 7, scope: !12326)
!12427 = !DILocation(line: 2534, column: 18, scope: !12326)
!12428 = !DILocation(line: 2536, column: 9, scope: !12326)
!12429 = !DILocation(line: 2536, column: 2, scope: !12326)
!12430 = !DILabel(scope: !12326, name: "mingx0", file: !3, line: 2538)
!12431 = !DILocation(line: 2538, column: 7, scope: !12326)
!12432 = !DILocation(line: 2539, column: 8, scope: !12326)
!12433 = !DILocation(line: 2539, column: 13, scope: !12326)
!12434 = !DILocation(line: 2539, column: 6, scope: !12326)
!12435 = !DILocation(line: 2540, column: 2, scope: !12326)
!12436 = !DILocation(line: 2540, column: 7, scope: !12326)
!12437 = !DILocation(line: 2540, column: 13, scope: !12326)
!12438 = !DILocation(line: 2541, column: 20, scope: !12326)
!12439 = !DILocation(line: 2541, column: 2, scope: !12326)
!12440 = !DILocation(line: 2541, column: 7, scope: !12326)
!12441 = !DILocation(line: 2541, column: 18, scope: !12326)
!12442 = !DILocation(line: 2542, column: 2, scope: !12326)
!12443 = !DILocation(line: 2542, column: 7, scope: !12326)
!12444 = !DILocation(line: 2542, column: 21, scope: !12326)
!12445 = !DILocation(line: 2543, column: 2, scope: !12326)
!12446 = !DILocation(line: 2543, column: 7, scope: !12326)
!12447 = !DILocation(line: 2543, column: 17, scope: !12326)
!12448 = !DILocation(line: 2544, column: 2, scope: !12326)
!12449 = !DILocation(line: 2545, column: 2, scope: !12326)
!12450 = !DILocation(line: 2546, column: 9, scope: !12326)
!12451 = !DILocation(line: 2546, column: 2, scope: !12326)
!12452 = !DILocation(line: 2547, column: 1, scope: !12326)
!12453 = distinct !DISubprogram(name: "msgin_set_async", scope: !3, file: !3, line: 2561, type: !7334, scopeLine: 2562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12454 = !DILocalVariable(name: "acb", arg: 1, scope: !12453, file: !3, line: 2561, type: !185)
!12455 = !DILocation(line: 2561, column: 51, scope: !12453)
!12456 = !DILocalVariable(name: "srb", arg: 2, scope: !12453, file: !3, line: 2561, type: !5234)
!12457 = !DILocation(line: 2561, column: 75, scope: !12453)
!12458 = !DILocalVariable(name: "dcb", scope: !12453, file: !3, line: 2563, type: !5226)
!12459 = !DILocation(line: 2563, column: 23, scope: !12453)
!12460 = !DILocation(line: 2563, column: 29, scope: !12453)
!12461 = !DILocation(line: 2563, column: 34, scope: !12453)
!12462 = !DILocation(line: 2564, column: 2, scope: !12453)
!12463 = !DILocation(line: 2567, column: 2, scope: !12453)
!12464 = !DILocation(line: 2567, column: 7, scope: !12453)
!12465 = !DILocation(line: 2567, column: 17, scope: !12453)
!12466 = !DILocation(line: 2568, column: 2, scope: !12453)
!12467 = !DILocation(line: 2568, column: 7, scope: !12453)
!12468 = !DILocation(line: 2568, column: 17, scope: !12453)
!12469 = !DILocation(line: 2570, column: 2, scope: !12453)
!12470 = !DILocation(line: 2570, column: 7, scope: !12453)
!12471 = !DILocation(line: 2570, column: 19, scope: !12453)
!12472 = !DILocation(line: 2571, column: 2, scope: !12453)
!12473 = !DILocation(line: 2571, column: 7, scope: !12453)
!12474 = !DILocation(line: 2571, column: 23, scope: !12453)
!12475 = !DILocation(line: 2572, column: 2, scope: !12453)
!12476 = !DILocation(line: 2572, column: 7, scope: !12453)
!12477 = !DILocation(line: 2572, column: 13, scope: !12453)
!12478 = !DILocation(line: 2573, column: 17, scope: !12453)
!12479 = !DILocation(line: 2573, column: 22, scope: !12453)
!12480 = !DILocation(line: 2573, column: 2, scope: !12453)
!12481 = !DILocation(line: 2574, column: 7, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12453, file: !3, line: 2574, column: 6)
!12483 = !DILocation(line: 2574, column: 12, scope: !12482)
!12484 = !DILocation(line: 2574, column: 22, scope: !12482)
!12485 = !DILocation(line: 2575, column: 6, scope: !12482)
!12486 = !DILocation(line: 2575, column: 11, scope: !12482)
!12487 = !DILocation(line: 2575, column: 16, scope: !12482)
!12488 = !DILocation(line: 2575, column: 26, scope: !12482)
!12489 = !DILocation(line: 2574, column: 6, scope: !12453)
!12490 = !DILocation(line: 2576, column: 14, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12482, file: !3, line: 2575, column: 45)
!12492 = !DILocation(line: 2576, column: 19, scope: !12491)
!12493 = !DILocation(line: 2576, column: 24, scope: !12491)
!12494 = !DILocation(line: 2576, column: 3, scope: !12491)
!12495 = !DILocation(line: 2577, column: 3, scope: !12491)
!12496 = !DILocation(line: 2578, column: 3, scope: !12491)
!12497 = !DILocation(line: 2578, column: 3, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12491, file: !3, line: 2578, column: 3)
!12499 = !DILocation(line: 2579, column: 2, scope: !12491)
!12500 = !DILocation(line: 2580, column: 1, scope: !12453)
!12501 = distinct !DISubprogram(name: "msgin_set_nowide", scope: !3, file: !3, line: 2657, type: !7334, scopeLine: 2659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12502 = !DILocalVariable(name: "acb", arg: 1, scope: !12501, file: !3, line: 2657, type: !185)
!12503 = !DILocation(line: 2657, column: 59, scope: !12501)
!12504 = !DILocalVariable(name: "srb", arg: 2, scope: !12501, file: !3, line: 2658, type: !5234)
!12505 = !DILocation(line: 2658, column: 22, scope: !12501)
!12506 = !DILocalVariable(name: "dcb", scope: !12501, file: !3, line: 2660, type: !5226)
!12507 = !DILocation(line: 2660, column: 23, scope: !12501)
!12508 = !DILocation(line: 2660, column: 29, scope: !12501)
!12509 = !DILocation(line: 2660, column: 34, scope: !12501)
!12510 = !DILocation(line: 2661, column: 2, scope: !12501)
!12511 = !DILocation(line: 2661, column: 2, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12501, file: !3, line: 2661, column: 2)
!12513 = !DILocation(line: 2663, column: 2, scope: !12501)
!12514 = !DILocation(line: 2663, column: 7, scope: !12501)
!12515 = !DILocation(line: 2663, column: 19, scope: !12501)
!12516 = !DILocation(line: 2664, column: 2, scope: !12501)
!12517 = !DILocation(line: 2664, column: 7, scope: !12501)
!12518 = !DILocation(line: 2664, column: 17, scope: !12501)
!12519 = !DILocation(line: 2665, column: 2, scope: !12501)
!12520 = !DILocation(line: 2665, column: 7, scope: !12501)
!12521 = !DILocation(line: 2665, column: 17, scope: !12501)
!12522 = !DILocation(line: 2666, column: 2, scope: !12501)
!12523 = !DILocation(line: 2666, column: 7, scope: !12501)
!12524 = !DILocation(line: 2666, column: 13, scope: !12501)
!12525 = !DILocation(line: 2667, column: 17, scope: !12501)
!12526 = !DILocation(line: 2667, column: 22, scope: !12501)
!12527 = !DILocation(line: 2667, column: 2, scope: !12501)
!12528 = !DILocation(line: 2668, column: 7, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12501, file: !3, line: 2668, column: 6)
!12530 = !DILocation(line: 2668, column: 12, scope: !12529)
!12531 = !DILocation(line: 2668, column: 22, scope: !12529)
!12532 = !DILocation(line: 2669, column: 6, scope: !12529)
!12533 = !DILocation(line: 2669, column: 11, scope: !12529)
!12534 = !DILocation(line: 2669, column: 16, scope: !12529)
!12535 = !DILocation(line: 2669, column: 26, scope: !12529)
!12536 = !DILocation(line: 2668, column: 6, scope: !12501)
!12537 = !DILocation(line: 2670, column: 14, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12529, file: !3, line: 2669, column: 45)
!12539 = !DILocation(line: 2670, column: 19, scope: !12538)
!12540 = !DILocation(line: 2670, column: 24, scope: !12538)
!12541 = !DILocation(line: 2670, column: 3, scope: !12538)
!12542 = !DILocation(line: 2671, column: 3, scope: !12538)
!12543 = !DILocation(line: 2672, column: 3, scope: !12538)
!12544 = !DILocation(line: 2672, column: 3, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12538, file: !3, line: 2672, column: 3)
!12546 = !DILocation(line: 2673, column: 2, scope: !12538)
!12547 = !DILocation(line: 2674, column: 1, scope: !12501)
!12548 = distinct !DISubprogram(name: "msgin_set_sync", scope: !3, file: !3, line: 2584, type: !7334, scopeLine: 2585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12549 = !DILocalVariable(name: "acb", arg: 1, scope: !12548, file: !3, line: 2584, type: !185)
!12550 = !DILocation(line: 2584, column: 50, scope: !12548)
!12551 = !DILocalVariable(name: "srb", arg: 2, scope: !12548, file: !3, line: 2584, type: !5234)
!12552 = !DILocation(line: 2584, column: 74, scope: !12548)
!12553 = !DILocalVariable(name: "dcb", scope: !12548, file: !3, line: 2586, type: !5226)
!12554 = !DILocation(line: 2586, column: 23, scope: !12548)
!12555 = !DILocation(line: 2586, column: 29, scope: !12548)
!12556 = !DILocation(line: 2586, column: 34, scope: !12548)
!12557 = !DILocalVariable(name: "bval", scope: !12548, file: !3, line: 2587, type: !410)
!12558 = !DILocation(line: 2587, column: 5, scope: !12548)
!12559 = !DILocalVariable(name: "fact", scope: !12548, file: !3, line: 2588, type: !267)
!12560 = !DILocation(line: 2588, column: 6, scope: !12548)
!12561 = !DILocation(line: 2589, column: 2, scope: !12548)
!12562 = !DILocation(line: 2589, column: 2, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12548, file: !3, line: 2589, column: 2)
!12564 = !DILocation(line: 2596, column: 6, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12548, file: !3, line: 2596, column: 6)
!12566 = !DILocation(line: 2596, column: 11, scope: !12565)
!12567 = !DILocation(line: 2596, column: 24, scope: !12565)
!12568 = !DILocation(line: 2596, column: 6, scope: !12548)
!12569 = !DILocation(line: 2597, column: 3, scope: !12565)
!12570 = !DILocation(line: 2597, column: 8, scope: !12565)
!12571 = !DILocation(line: 2597, column: 21, scope: !12565)
!12572 = !DILocation(line: 2598, column: 8, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12548, file: !3, line: 2598, column: 6)
!12574 = !DILocation(line: 2598, column: 13, scope: !12573)
!12575 = !DILocation(line: 2598, column: 22, scope: !12573)
!12576 = !DILocation(line: 2598, column: 6, scope: !12548)
!12577 = !DILocation(line: 2599, column: 3, scope: !12573)
!12578 = !DILocation(line: 2599, column: 8, scope: !12573)
!12579 = !DILocation(line: 2599, column: 20, scope: !12573)
!12580 = !DILocation(line: 2600, column: 11, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12573, file: !3, line: 2600, column: 11)
!12582 = !DILocation(line: 2600, column: 16, scope: !12581)
!12583 = !DILocation(line: 2600, column: 28, scope: !12581)
!12584 = !DILocation(line: 2600, column: 11, scope: !12573)
!12585 = !DILocation(line: 2601, column: 22, scope: !12581)
!12586 = !DILocation(line: 2601, column: 27, scope: !12581)
!12587 = !DILocation(line: 2601, column: 3, scope: !12581)
!12588 = !DILocation(line: 2601, column: 8, scope: !12581)
!12589 = !DILocation(line: 2601, column: 20, scope: !12581)
!12590 = !DILocation(line: 2602, column: 6, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12548, file: !3, line: 2602, column: 6)
!12592 = !DILocation(line: 2602, column: 11, scope: !12591)
!12593 = !DILocation(line: 2602, column: 26, scope: !12591)
!12594 = !DILocation(line: 2602, column: 31, scope: !12591)
!12595 = !DILocation(line: 2602, column: 24, scope: !12591)
!12596 = !DILocation(line: 2602, column: 6, scope: !12548)
!12597 = !DILocation(line: 2603, column: 23, scope: !12591)
!12598 = !DILocation(line: 2603, column: 28, scope: !12591)
!12599 = !DILocation(line: 2603, column: 3, scope: !12591)
!12600 = !DILocation(line: 2603, column: 8, scope: !12591)
!12601 = !DILocation(line: 2603, column: 21, scope: !12591)
!12602 = !DILocation(line: 2605, column: 22, scope: !12591)
!12603 = !DILocation(line: 2605, column: 27, scope: !12591)
!12604 = !DILocation(line: 2605, column: 3, scope: !12591)
!12605 = !DILocation(line: 2605, column: 8, scope: !12591)
!12606 = !DILocation(line: 2605, column: 20, scope: !12591)
!12607 = !DILocation(line: 2606, column: 7, scope: !12548)
!12608 = !DILocation(line: 2607, column: 2, scope: !12548)
!12609 = !DILocation(line: 2607, column: 9, scope: !12548)
!12610 = !DILocation(line: 2607, column: 14, scope: !12548)
!12611 = !DILocation(line: 2607, column: 18, scope: !12548)
!12612 = !DILocation(line: 2607, column: 22, scope: !12548)
!12613 = !DILocation(line: 2607, column: 27, scope: !12548)
!12614 = !DILocation(line: 2607, column: 55, scope: !12548)
!12615 = !DILocation(line: 2607, column: 42, scope: !12548)
!12616 = !DILocation(line: 2607, column: 40, scope: !12548)
!12617 = !DILocation(line: 2608, column: 8, scope: !12548)
!12618 = !DILocation(line: 2608, column: 11, scope: !12548)
!12619 = !DILocation(line: 2608, column: 16, scope: !12548)
!12620 = !DILocation(line: 2609, column: 21, scope: !12548)
!12621 = !DILocation(line: 2609, column: 8, scope: !12548)
!12622 = !DILocation(line: 2608, column: 32, scope: !12548)
!12623 = !DILocation(line: 0, scope: !12548)
!12624 = !DILocation(line: 2610, column: 7, scope: !12548)
!12625 = distinct !{!12625, !12608, !12624}
!12626 = !DILocation(line: 2611, column: 6, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12548, file: !3, line: 2611, column: 6)
!12628 = !DILocation(line: 2611, column: 11, scope: !12627)
!12629 = !DILocation(line: 2611, column: 39, scope: !12627)
!12630 = !DILocation(line: 2611, column: 26, scope: !12627)
!12631 = !DILocation(line: 2611, column: 24, scope: !12627)
!12632 = !DILocation(line: 2611, column: 6, scope: !12548)
!12633 = !DILocation(line: 2612, column: 3, scope: !12627)
!12634 = !DILocation(line: 2615, column: 35, scope: !12548)
!12635 = !DILocation(line: 2615, column: 22, scope: !12548)
!12636 = !DILocation(line: 2615, column: 2, scope: !12548)
!12637 = !DILocation(line: 2615, column: 7, scope: !12548)
!12638 = !DILocation(line: 2615, column: 20, scope: !12548)
!12639 = !DILocation(line: 2616, column: 2, scope: !12548)
!12640 = !DILocation(line: 2616, column: 7, scope: !12548)
!12641 = !DILocation(line: 2616, column: 19, scope: !12548)
!12642 = !DILocation(line: 2617, column: 33, scope: !12548)
!12643 = !DILocation(line: 2617, column: 31, scope: !12548)
!12644 = !DILocation(line: 2617, column: 2, scope: !12548)
!12645 = !DILocation(line: 2617, column: 7, scope: !12548)
!12646 = !DILocation(line: 2617, column: 19, scope: !12548)
!12647 = !DILocation(line: 2618, column: 25, scope: !12548)
!12648 = !DILocation(line: 2618, column: 30, scope: !12548)
!12649 = !DILocation(line: 2618, column: 2, scope: !12548)
!12650 = !DILocation(line: 2618, column: 7, scope: !12548)
!12651 = !DILocation(line: 2618, column: 23, scope: !12548)
!12652 = !DILocation(line: 2620, column: 6, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12548, file: !3, line: 2620, column: 6)
!12654 = !DILocation(line: 2620, column: 11, scope: !12653)
!12655 = !DILocation(line: 2620, column: 23, scope: !12653)
!12656 = !DILocation(line: 2620, column: 6, scope: !12548)
!12657 = !DILocation(line: 2621, column: 8, scope: !12653)
!12658 = !DILocation(line: 2621, column: 3, scope: !12653)
!12659 = !DILocation(line: 2623, column: 8, scope: !12653)
!12660 = !DILocation(line: 2625, column: 2, scope: !12548)
!12661 = !DILocation(line: 2633, column: 8, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12548, file: !3, line: 2633, column: 6)
!12663 = !DILocation(line: 2633, column: 13, scope: !12662)
!12664 = !DILocation(line: 2633, column: 19, scope: !12662)
!12665 = !DILocation(line: 2633, column: 6, scope: !12548)
!12666 = !DILocation(line: 2635, column: 3, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12662, file: !3, line: 2633, column: 40)
!12668 = !DILocation(line: 2638, column: 10, scope: !12667)
!12669 = !DILocation(line: 2638, column: 15, scope: !12667)
!12670 = !DILocation(line: 2638, column: 3, scope: !12667)
!12671 = !DILocation(line: 2638, column: 27, scope: !12667)
!12672 = !DILocation(line: 2638, column: 32, scope: !12667)
!12673 = !DILocation(line: 2639, column: 3, scope: !12667)
!12674 = !DILocation(line: 2639, column: 8, scope: !12667)
!12675 = !DILocation(line: 2639, column: 18, scope: !12667)
!12676 = !DILocation(line: 2640, column: 3, scope: !12667)
!12677 = !DILocation(line: 2641, column: 3, scope: !12667)
!12678 = !DILocation(line: 2641, column: 8, scope: !12667)
!12679 = !DILocation(line: 2641, column: 18, scope: !12667)
!12680 = !DILocation(line: 2642, column: 2, scope: !12667)
!12681 = !DILocation(line: 2643, column: 8, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12683, file: !3, line: 2643, column: 7)
!12683 = distinct !DILexicalBlock(scope: !12662, file: !3, line: 2642, column: 9)
!12684 = !DILocation(line: 2643, column: 13, scope: !12682)
!12685 = !DILocation(line: 2643, column: 23, scope: !12682)
!12686 = !DILocation(line: 2644, column: 7, scope: !12682)
!12687 = !DILocation(line: 2644, column: 12, scope: !12682)
!12688 = !DILocation(line: 2644, column: 17, scope: !12682)
!12689 = !DILocation(line: 2644, column: 27, scope: !12682)
!12690 = !DILocation(line: 2643, column: 7, scope: !12683)
!12691 = !DILocation(line: 2645, column: 15, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12682, file: !3, line: 2644, column: 46)
!12693 = !DILocation(line: 2645, column: 20, scope: !12692)
!12694 = !DILocation(line: 2645, column: 25, scope: !12692)
!12695 = !DILocation(line: 2645, column: 4, scope: !12692)
!12696 = !DILocation(line: 2646, column: 4, scope: !12692)
!12697 = !DILocation(line: 2647, column: 4, scope: !12692)
!12698 = !DILocation(line: 2647, column: 4, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12692, file: !3, line: 2647, column: 4)
!12700 = !DILocation(line: 2648, column: 3, scope: !12692)
!12701 = !DILocation(line: 2650, column: 2, scope: !12548)
!12702 = !DILocation(line: 2650, column: 7, scope: !12548)
!12703 = !DILocation(line: 2650, column: 13, scope: !12548)
!12704 = !DILocation(line: 2651, column: 2, scope: !12548)
!12705 = !DILocation(line: 2651, column: 7, scope: !12548)
!12706 = !DILocation(line: 2651, column: 17, scope: !12548)
!12707 = !DILocation(line: 2653, column: 17, scope: !12548)
!12708 = !DILocation(line: 2653, column: 22, scope: !12548)
!12709 = !DILocation(line: 2653, column: 2, scope: !12548)
!12710 = !DILocation(line: 2654, column: 1, scope: !12548)
!12711 = distinct !DISubprogram(name: "msgin_set_wide", scope: !3, file: !3, line: 2676, type: !7334, scopeLine: 2677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12712 = !DILocalVariable(name: "acb", arg: 1, scope: !12711, file: !3, line: 2676, type: !185)
!12713 = !DILocation(line: 2676, column: 50, scope: !12711)
!12714 = !DILocalVariable(name: "srb", arg: 2, scope: !12711, file: !3, line: 2676, type: !5234)
!12715 = !DILocation(line: 2676, column: 74, scope: !12711)
!12716 = !DILocalVariable(name: "dcb", scope: !12711, file: !3, line: 2678, type: !5226)
!12717 = !DILocation(line: 2678, column: 23, scope: !12711)
!12718 = !DILocation(line: 2678, column: 29, scope: !12711)
!12719 = !DILocation(line: 2678, column: 34, scope: !12711)
!12720 = !DILocalVariable(name: "wide", scope: !12711, file: !3, line: 2679, type: !410)
!12721 = !DILocation(line: 2679, column: 5, scope: !12711)
!12722 = !DILocation(line: 2679, column: 13, scope: !12711)
!12723 = !DILocation(line: 2679, column: 18, scope: !12711)
!12724 = !DILocation(line: 2679, column: 27, scope: !12711)
!12725 = !DILocation(line: 2680, column: 6, scope: !12711)
!12726 = !DILocation(line: 2680, column: 9, scope: !12711)
!12727 = !DILocation(line: 2680, column: 14, scope: !12711)
!12728 = !DILocation(line: 2680, column: 21, scope: !12711)
!12729 = !DILocation(line: 0, scope: !12711)
!12730 = !DILocation(line: 2679, column: 12, scope: !12711)
!12731 = !DILocation(line: 2681, column: 2, scope: !12711)
!12732 = !DILocation(line: 2681, column: 2, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12711, file: !3, line: 2681, column: 2)
!12734 = !DILocation(line: 2683, column: 6, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12711, file: !3, line: 2683, column: 6)
!12736 = !DILocation(line: 2683, column: 11, scope: !12735)
!12737 = !DILocation(line: 2683, column: 26, scope: !12735)
!12738 = !DILocation(line: 2683, column: 24, scope: !12735)
!12739 = !DILocation(line: 2683, column: 6, scope: !12711)
!12740 = !DILocation(line: 2684, column: 23, scope: !12735)
!12741 = !DILocation(line: 2684, column: 3, scope: !12735)
!12742 = !DILocation(line: 2684, column: 8, scope: !12735)
!12743 = !DILocation(line: 2684, column: 21, scope: !12735)
!12744 = !DILocation(line: 2686, column: 8, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12711, file: !3, line: 2686, column: 6)
!12746 = !DILocation(line: 2686, column: 13, scope: !12745)
!12747 = !DILocation(line: 2686, column: 19, scope: !12745)
!12748 = !DILocation(line: 2686, column: 6, scope: !12711)
!12749 = !DILocation(line: 2687, column: 3, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12745, file: !3, line: 2686, column: 40)
!12751 = !DILocation(line: 2690, column: 10, scope: !12750)
!12752 = !DILocation(line: 2690, column: 15, scope: !12750)
!12753 = !DILocation(line: 2690, column: 3, scope: !12750)
!12754 = !DILocation(line: 2690, column: 27, scope: !12750)
!12755 = !DILocation(line: 2690, column: 32, scope: !12750)
!12756 = !DILocation(line: 2691, column: 3, scope: !12750)
!12757 = !DILocation(line: 2691, column: 8, scope: !12750)
!12758 = !DILocation(line: 2691, column: 18, scope: !12750)
!12759 = !DILocation(line: 2692, column: 3, scope: !12750)
!12760 = !DILocation(line: 2692, column: 8, scope: !12750)
!12761 = !DILocation(line: 2692, column: 14, scope: !12750)
!12762 = !DILocation(line: 2693, column: 3, scope: !12750)
!12763 = !DILocation(line: 2694, column: 2, scope: !12750)
!12764 = !DILocation(line: 2696, column: 2, scope: !12711)
!12765 = !DILocation(line: 2696, column: 7, scope: !12711)
!12766 = !DILocation(line: 2696, column: 17, scope: !12711)
!12767 = !DILocation(line: 2697, column: 6, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12711, file: !3, line: 2697, column: 6)
!12769 = !DILocation(line: 2697, column: 11, scope: !12768)
!12770 = !DILocation(line: 2697, column: 24, scope: !12768)
!12771 = !DILocation(line: 2697, column: 6, scope: !12711)
!12772 = !DILocation(line: 2698, column: 3, scope: !12768)
!12773 = !DILocation(line: 2698, column: 8, scope: !12768)
!12774 = !DILocation(line: 2698, column: 20, scope: !12768)
!12775 = !DILocation(line: 2700, column: 3, scope: !12768)
!12776 = !DILocation(line: 2700, column: 8, scope: !12768)
!12777 = !DILocation(line: 2700, column: 20, scope: !12768)
!12778 = !DILocation(line: 2701, column: 2, scope: !12711)
!12779 = !DILocation(line: 2701, column: 7, scope: !12711)
!12780 = !DILocation(line: 2701, column: 13, scope: !12711)
!12781 = !DILocation(line: 2703, column: 2, scope: !12711)
!12782 = !DILocation(line: 2703, column: 2, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12711, file: !3, line: 2703, column: 2)
!12784 = !DILocation(line: 2706, column: 17, scope: !12711)
!12785 = !DILocation(line: 2706, column: 22, scope: !12711)
!12786 = !DILocation(line: 2706, column: 2, scope: !12711)
!12787 = !DILocation(line: 2707, column: 7, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12711, file: !3, line: 2707, column: 6)
!12789 = !DILocation(line: 2707, column: 12, scope: !12788)
!12790 = !DILocation(line: 2707, column: 22, scope: !12788)
!12791 = !DILocation(line: 2708, column: 6, scope: !12788)
!12792 = !DILocation(line: 2708, column: 11, scope: !12788)
!12793 = !DILocation(line: 2708, column: 16, scope: !12788)
!12794 = !DILocation(line: 2708, column: 26, scope: !12788)
!12795 = !DILocation(line: 2707, column: 6, scope: !12711)
!12796 = !DILocation(line: 2709, column: 14, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12788, file: !3, line: 2708, column: 45)
!12798 = !DILocation(line: 2709, column: 19, scope: !12797)
!12799 = !DILocation(line: 2709, column: 24, scope: !12797)
!12800 = !DILocation(line: 2709, column: 3, scope: !12797)
!12801 = !DILocation(line: 2710, column: 3, scope: !12797)
!12802 = !DILocation(line: 2711, column: 3, scope: !12797)
!12803 = !DILocation(line: 2711, column: 3, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12797, file: !3, line: 2711, column: 3)
!12805 = !DILocation(line: 2712, column: 2, scope: !12797)
!12806 = !DILocation(line: 2713, column: 1, scope: !12711)
!12807 = distinct !DISubprogram(name: "msgin_reject", scope: !3, file: !3, line: 2483, type: !7334, scopeLine: 2485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12808 = !DILocalVariable(name: "acb", arg: 1, scope: !12807, file: !3, line: 2483, type: !185)
!12809 = !DILocation(line: 2483, column: 55, scope: !12807)
!12810 = !DILocalVariable(name: "srb", arg: 2, scope: !12807, file: !3, line: 2484, type: !5234)
!12811 = !DILocation(line: 2484, column: 22, scope: !12807)
!12812 = !DILocation(line: 2486, column: 2, scope: !12807)
!12813 = !DILocation(line: 2486, column: 7, scope: !12807)
!12814 = !DILocation(line: 2486, column: 21, scope: !12807)
!12815 = !DILocation(line: 2487, column: 2, scope: !12807)
!12816 = !DILocation(line: 2487, column: 7, scope: !12807)
!12817 = !DILocation(line: 2487, column: 17, scope: !12807)
!12818 = !DILocation(line: 2488, column: 2, scope: !12807)
!12819 = !DILocation(line: 2489, column: 2, scope: !12807)
!12820 = !DILocation(line: 2489, column: 7, scope: !12807)
!12821 = !DILocation(line: 2489, column: 13, scope: !12807)
!12822 = !DILocation(line: 2490, column: 2, scope: !12807)
!12823 = !DILocation(line: 2490, column: 7, scope: !12807)
!12824 = !DILocation(line: 2490, column: 13, scope: !12807)
!12825 = !DILocation(line: 2491, column: 2, scope: !12807)
!12826 = !DILocation(line: 2494, column: 1, scope: !12807)
!12827 = distinct !DISubprogram(name: "reprogram_regs", scope: !3, file: !3, line: 2550, type: !9272, scopeLine: 2552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12828 = !DILocalVariable(name: "acb", arg: 1, scope: !12827, file: !3, line: 2550, type: !185)
!12829 = !DILocation(line: 2550, column: 57, scope: !12827)
!12830 = !DILocalVariable(name: "dcb", arg: 2, scope: !12827, file: !3, line: 2551, type: !5226)
!12831 = !DILocation(line: 2551, column: 24, scope: !12827)
!12832 = !DILocation(line: 2553, column: 2, scope: !12827)
!12833 = !DILocation(line: 2554, column: 2, scope: !12827)
!12834 = !DILocation(line: 2555, column: 2, scope: !12827)
!12835 = !DILocation(line: 2556, column: 16, scope: !12827)
!12836 = !DILocation(line: 2556, column: 21, scope: !12827)
!12837 = !DILocation(line: 2556, column: 2, scope: !12827)
!12838 = !DILocation(line: 2557, column: 1, scope: !12827)
!12839 = distinct !DISubprogram(name: "set_xfer_rate", scope: !3, file: !3, line: 2867, type: !9272, scopeLine: 2868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12840 = !DILocalVariable(name: "acb", arg: 1, scope: !12839, file: !3, line: 2867, type: !185)
!12841 = !DILocation(line: 2867, column: 49, scope: !12839)
!12842 = !DILocalVariable(name: "dcb", arg: 2, scope: !12839, file: !3, line: 2867, type: !5226)
!12843 = !DILocation(line: 2867, column: 75, scope: !12839)
!12844 = !DILocalVariable(name: "i", scope: !12839, file: !3, line: 2869, type: !5226)
!12845 = !DILocation(line: 2869, column: 23, scope: !12839)
!12846 = !DILocation(line: 2872, column: 6, scope: !12847)
!12847 = distinct !DILexicalBlock(scope: !12839, file: !3, line: 2872, column: 6)
!12848 = !DILocation(line: 2872, column: 11, scope: !12847)
!12849 = !DILocation(line: 2872, column: 24, scope: !12847)
!12850 = !DILocation(line: 2872, column: 6, scope: !12839)
!12851 = !DILocation(line: 2873, column: 3, scope: !12847)
!12852 = !DILocation(line: 2875, column: 6, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12839, file: !3, line: 2875, column: 6)
!12854 = !DILocation(line: 2875, column: 11, scope: !12853)
!12855 = !DILocation(line: 2875, column: 6, scope: !12839)
!12856 = !DILocation(line: 2876, column: 25, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12853, file: !3, line: 2875, column: 25)
!12858 = !DILocation(line: 2876, column: 30, scope: !12857)
!12859 = !DILocation(line: 2876, column: 23, scope: !12857)
!12860 = !DILocation(line: 2877, column: 3, scope: !12857)
!12861 = !DILocalVariable(name: "__mptr", scope: !12862, file: !3, line: 2880, type: !256)
!12862 = distinct !DILexicalBlock(scope: !12863, file: !3, line: 2880, column: 2)
!12863 = distinct !DILexicalBlock(scope: !12839, file: !3, line: 2880, column: 2)
!12864 = !DILocation(line: 2880, column: 2, scope: !12862)
!12865 = !DILocation(line: 2880, column: 2, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12862, file: !3, line: 2880, column: 2)
!12867 = !DILocation(line: 2880, column: 2, scope: !12863)
!12868 = !DILocation(line: 2880, column: 2, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12863, file: !3, line: 2880, column: 2)
!12870 = !DILocation(line: 2881, column: 7, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12869, file: !3, line: 2881, column: 7)
!12872 = !DILocation(line: 2881, column: 10, scope: !12871)
!12873 = !DILocation(line: 2881, column: 23, scope: !12871)
!12874 = !DILocation(line: 2881, column: 28, scope: !12871)
!12875 = !DILocation(line: 2881, column: 20, scope: !12871)
!12876 = !DILocation(line: 2881, column: 7, scope: !12869)
!12877 = !DILocation(line: 2882, column: 21, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12871, file: !3, line: 2881, column: 39)
!12879 = !DILocation(line: 2882, column: 26, scope: !12878)
!12880 = !DILocation(line: 2882, column: 4, scope: !12878)
!12881 = !DILocation(line: 2882, column: 7, scope: !12878)
!12882 = !DILocation(line: 2882, column: 19, scope: !12878)
!12883 = !DILocation(line: 2883, column: 21, scope: !12878)
!12884 = !DILocation(line: 2883, column: 26, scope: !12878)
!12885 = !DILocation(line: 2883, column: 4, scope: !12878)
!12886 = !DILocation(line: 2883, column: 7, scope: !12878)
!12887 = !DILocation(line: 2883, column: 19, scope: !12878)
!12888 = !DILocation(line: 2884, column: 19, scope: !12878)
!12889 = !DILocation(line: 2884, column: 24, scope: !12878)
!12890 = !DILocation(line: 2884, column: 4, scope: !12878)
!12891 = !DILocation(line: 2884, column: 7, scope: !12878)
!12892 = !DILocation(line: 2884, column: 17, scope: !12878)
!12893 = !DILocation(line: 2885, column: 25, scope: !12878)
!12894 = !DILocation(line: 2885, column: 30, scope: !12878)
!12895 = !DILocation(line: 2885, column: 4, scope: !12878)
!12896 = !DILocation(line: 2885, column: 7, scope: !12878)
!12897 = !DILocation(line: 2885, column: 23, scope: !12878)
!12898 = !DILocation(line: 2886, column: 3, scope: !12878)
!12899 = !DILocalVariable(name: "__mptr", scope: !12900, file: !3, line: 2880, type: !256)
!12900 = distinct !DILexicalBlock(scope: !12869, file: !3, line: 2880, column: 2)
!12901 = !DILocation(line: 2880, column: 2, scope: !12900)
!12902 = !DILocation(line: 2880, column: 2, scope: !12903)
!12903 = distinct !DILexicalBlock(scope: !12900, file: !3, line: 2880, column: 2)
!12904 = distinct !{!12904, !12867, !12905}
!12905 = !DILocation(line: 2886, column: 3, scope: !12863)
!12906 = !DILocation(line: 2887, column: 1, scope: !12839)
!12907 = distinct !DISubprogram(name: "data_out_phase1", scope: !3, file: !3, line: 2035, type: !10404, scopeLine: 2037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12908 = !DILocalVariable(name: "acb", arg: 1, scope: !12907, file: !3, line: 2035, type: !185)
!12909 = !DILocation(line: 2035, column: 51, scope: !12907)
!12910 = !DILocalVariable(name: "srb", arg: 2, scope: !12907, file: !3, line: 2035, type: !5234)
!12911 = !DILocation(line: 2035, column: 75, scope: !12907)
!12912 = !DILocalVariable(name: "pscsi_status", arg: 3, scope: !12907, file: !3, line: 2036, type: !5637)
!12913 = !DILocation(line: 2036, column: 8, scope: !12907)
!12914 = !DILocation(line: 2038, column: 2, scope: !12907)
!12915 = !DILocation(line: 2038, column: 2, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12907, file: !3, line: 2038, column: 2)
!12917 = !DILocation(line: 2040, column: 13, scope: !12907)
!12918 = !DILocation(line: 2040, column: 2, scope: !12907)
!12919 = !DILocation(line: 2042, column: 19, scope: !12907)
!12920 = !DILocation(line: 2042, column: 24, scope: !12907)
!12921 = !DILocation(line: 2042, column: 2, scope: !12907)
!12922 = !DILocation(line: 2043, column: 1, scope: !12907)
!12923 = distinct !DISubprogram(name: "data_in_phase1", scope: !3, file: !3, line: 2258, type: !10404, scopeLine: 2260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12924 = !DILocalVariable(name: "acb", arg: 1, scope: !12923, file: !3, line: 2258, type: !185)
!12925 = !DILocation(line: 2258, column: 50, scope: !12923)
!12926 = !DILocalVariable(name: "srb", arg: 2, scope: !12923, file: !3, line: 2258, type: !5234)
!12927 = !DILocation(line: 2258, column: 74, scope: !12923)
!12928 = !DILocalVariable(name: "pscsi_status", arg: 3, scope: !12923, file: !3, line: 2259, type: !5637)
!12929 = !DILocation(line: 2259, column: 8, scope: !12923)
!12930 = !DILocation(line: 2261, column: 2, scope: !12923)
!12931 = !DILocation(line: 2261, column: 2, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 2261, column: 2)
!12933 = !DILocation(line: 2263, column: 19, scope: !12923)
!12934 = !DILocation(line: 2263, column: 24, scope: !12923)
!12935 = !DILocation(line: 2263, column: 2, scope: !12923)
!12936 = !DILocation(line: 2264, column: 1, scope: !12923)
!12937 = distinct !DISubprogram(name: "command_phase1", scope: !3, file: !3, line: 1759, type: !10404, scopeLine: 1761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!12938 = !DILocalVariable(name: "acb", arg: 1, scope: !12937, file: !3, line: 1759, type: !185)
!12939 = !DILocation(line: 1759, column: 50, scope: !12937)
!12940 = !DILocalVariable(name: "srb", arg: 2, scope: !12937, file: !3, line: 1759, type: !5234)
!12941 = !DILocation(line: 1759, column: 74, scope: !12937)
!12942 = !DILocalVariable(name: "pscsi_status", arg: 3, scope: !12937, file: !3, line: 1760, type: !5637)
!12943 = !DILocation(line: 1760, column: 8, scope: !12937)
!12944 = !DILocalVariable(name: "dcb", scope: !12937, file: !3, line: 1762, type: !5226)
!12945 = !DILocation(line: 1762, column: 23, scope: !12937)
!12946 = !DILocalVariable(name: "ptr", scope: !12937, file: !3, line: 1763, type: !5619)
!12947 = !DILocation(line: 1763, column: 6, scope: !12937)
!12948 = !DILocalVariable(name: "i", scope: !12937, file: !3, line: 1764, type: !918)
!12949 = !DILocation(line: 1764, column: 6, scope: !12937)
!12950 = !DILocation(line: 1765, column: 2, scope: !12937)
!12951 = !DILocation(line: 1765, column: 2, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12937, file: !3, line: 1765, column: 2)
!12953 = !DILocation(line: 1767, column: 13, scope: !12937)
!12954 = !DILocation(line: 1767, column: 2, scope: !12937)
!12955 = !DILocation(line: 1768, column: 2, scope: !12937)
!12956 = !DILocation(line: 1769, column: 8, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12937, file: !3, line: 1769, column: 6)
!12958 = !DILocation(line: 1769, column: 13, scope: !12957)
!12959 = !DILocation(line: 1769, column: 18, scope: !12957)
!12960 = !DILocation(line: 1769, column: 6, scope: !12937)
!12961 = !DILocation(line: 1770, column: 15, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12957, file: !3, line: 1769, column: 36)
!12963 = !DILocation(line: 1770, column: 20, scope: !12962)
!12964 = !DILocation(line: 1770, column: 25, scope: !12962)
!12965 = !DILocation(line: 1770, column: 7, scope: !12962)
!12966 = !DILocation(line: 1771, column: 10, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12962, file: !3, line: 1771, column: 3)
!12968 = !DILocation(line: 1771, column: 8, scope: !12967)
!12969 = !DILocation(line: 1771, column: 15, scope: !12970)
!12970 = distinct !DILexicalBlock(scope: !12967, file: !3, line: 1771, column: 3)
!12971 = !DILocation(line: 1771, column: 19, scope: !12970)
!12972 = !DILocation(line: 1771, column: 24, scope: !12970)
!12973 = !DILocation(line: 1771, column: 29, scope: !12970)
!12974 = !DILocation(line: 1771, column: 17, scope: !12970)
!12975 = !DILocation(line: 1771, column: 3, scope: !12967)
!12976 = !DILocation(line: 1772, column: 4, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12970, file: !3, line: 1771, column: 43)
!12978 = !DILocation(line: 1773, column: 7, scope: !12977)
!12979 = !DILocation(line: 1774, column: 3, scope: !12977)
!12980 = !DILocation(line: 1771, column: 39, scope: !12970)
!12981 = !DILocation(line: 1771, column: 3, scope: !12970)
!12982 = distinct !{!12982, !12975, !12983}
!12983 = !DILocation(line: 1774, column: 3, scope: !12967)
!12984 = !DILocation(line: 1775, column: 2, scope: !12962)
!12985 = !DILocation(line: 1776, column: 3, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12957, file: !3, line: 1775, column: 9)
!12987 = !DILocation(line: 1777, column: 9, scope: !12986)
!12988 = !DILocation(line: 1777, column: 14, scope: !12986)
!12989 = !DILocation(line: 1777, column: 7, scope: !12986)
!12990 = !DILocation(line: 1779, column: 3, scope: !12986)
!12991 = !DILocation(line: 1780, column: 3, scope: !12986)
!12992 = !DILocation(line: 1781, column: 3, scope: !12986)
!12993 = !DILocation(line: 1782, column: 3, scope: !12986)
!12994 = !DILocation(line: 1783, column: 3, scope: !12986)
!12995 = !DILocation(line: 1785, column: 2, scope: !12937)
!12996 = !DILocation(line: 1785, column: 7, scope: !12937)
!12997 = !DILocation(line: 1785, column: 13, scope: !12937)
!12998 = !DILocation(line: 1787, column: 2, scope: !12937)
!12999 = !DILocation(line: 1789, column: 2, scope: !12937)
!13000 = !DILocation(line: 1790, column: 1, scope: !12937)
!13001 = distinct !DISubprogram(name: "status_phase1", scope: !3, file: !3, line: 2457, type: !10404, scopeLine: 2459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13002 = !DILocalVariable(name: "acb", arg: 1, scope: !13001, file: !3, line: 2457, type: !185)
!13003 = !DILocation(line: 2457, column: 49, scope: !13001)
!13004 = !DILocalVariable(name: "srb", arg: 2, scope: !13001, file: !3, line: 2457, type: !5234)
!13005 = !DILocation(line: 2457, column: 73, scope: !13001)
!13006 = !DILocalVariable(name: "pscsi_status", arg: 3, scope: !13001, file: !3, line: 2458, type: !5637)
!13007 = !DILocation(line: 2458, column: 8, scope: !13001)
!13008 = !DILocation(line: 2460, column: 2, scope: !13001)
!13009 = !DILocation(line: 2460, column: 2, scope: !13010)
!13010 = distinct !DILexicalBlock(scope: !13001, file: !3, line: 2460, column: 2)
!13011 = !DILocation(line: 2462, column: 2, scope: !13001)
!13012 = !DILocation(line: 2462, column: 7, scope: !13001)
!13013 = !DILocation(line: 2462, column: 13, scope: !13001)
!13014 = !DILocation(line: 2463, column: 2, scope: !13001)
!13015 = !DILocation(line: 2464, column: 2, scope: !13001)
!13016 = !DILocation(line: 2465, column: 1, scope: !13001)
!13017 = distinct !DISubprogram(name: "nop1", scope: !3, file: !3, line: 2861, type: !10404, scopeLine: 2863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13018 = !DILocalVariable(name: "acb", arg: 1, scope: !13017, file: !3, line: 2861, type: !185)
!13019 = !DILocation(line: 2861, column: 40, scope: !13017)
!13020 = !DILocalVariable(name: "srb", arg: 2, scope: !13017, file: !3, line: 2861, type: !5234)
!13021 = !DILocation(line: 2861, column: 64, scope: !13017)
!13022 = !DILocalVariable(name: "pscsi_status", arg: 3, scope: !13017, file: !3, line: 2862, type: !5637)
!13023 = !DILocation(line: 2862, column: 8, scope: !13017)
!13024 = !DILocation(line: 2864, column: 1, scope: !13017)
!13025 = distinct !DISubprogram(name: "msgout_phase1", scope: !3, file: !3, line: 1718, type: !10404, scopeLine: 1720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13026 = !DILocalVariable(name: "acb", arg: 1, scope: !13025, file: !3, line: 1718, type: !185)
!13027 = !DILocation(line: 1718, column: 49, scope: !13025)
!13028 = !DILocalVariable(name: "srb", arg: 2, scope: !13025, file: !3, line: 1718, type: !5234)
!13029 = !DILocation(line: 1718, column: 73, scope: !13025)
!13030 = !DILocalVariable(name: "pscsi_status", arg: 3, scope: !13025, file: !3, line: 1719, type: !5637)
!13031 = !DILocation(line: 1719, column: 8, scope: !13025)
!13032 = !DILocalVariable(name: "i", scope: !13025, file: !3, line: 1721, type: !918)
!13033 = !DILocation(line: 1721, column: 6, scope: !13025)
!13034 = !DILocalVariable(name: "ptr", scope: !13025, file: !3, line: 1722, type: !5619)
!13035 = !DILocation(line: 1722, column: 6, scope: !13025)
!13036 = !DILocation(line: 1723, column: 2, scope: !13025)
!13037 = !DILocation(line: 1723, column: 2, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13025, file: !3, line: 1723, column: 2)
!13039 = !DILocation(line: 1725, column: 13, scope: !13025)
!13040 = !DILocation(line: 1725, column: 2, scope: !13025)
!13041 = !DILocation(line: 1726, column: 8, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13025, file: !3, line: 1726, column: 6)
!13043 = !DILocation(line: 1726, column: 13, scope: !13042)
!13044 = !DILocation(line: 1726, column: 19, scope: !13042)
!13045 = !DILocation(line: 1726, column: 6, scope: !13025)
!13046 = !DILocation(line: 1727, column: 3, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13042, file: !3, line: 1726, column: 34)
!13048 = !DILocation(line: 1727, column: 8, scope: !13047)
!13049 = !DILocation(line: 1727, column: 14, scope: !13047)
!13050 = !DILocation(line: 1728, column: 3, scope: !13047)
!13051 = !DILocation(line: 1731, column: 2, scope: !13047)
!13052 = !DILocation(line: 1732, column: 7, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13025, file: !3, line: 1732, column: 6)
!13054 = !DILocation(line: 1732, column: 12, scope: !13053)
!13055 = !DILocation(line: 1732, column: 6, scope: !13025)
!13056 = !DILocation(line: 1733, column: 3, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13053, file: !3, line: 1732, column: 23)
!13058 = !DILocation(line: 1733, column: 3, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13057, file: !3, line: 1733, column: 3)
!13060 = !DILocation(line: 1735, column: 3, scope: !13057)
!13061 = !DILocation(line: 1736, column: 3, scope: !13057)
!13062 = !DILocation(line: 1737, column: 3, scope: !13057)
!13063 = !DILocation(line: 1738, column: 3, scope: !13057)
!13064 = !DILocation(line: 1740, column: 14, scope: !13025)
!13065 = !DILocation(line: 1740, column: 19, scope: !13025)
!13066 = !DILocation(line: 1740, column: 6, scope: !13025)
!13067 = !DILocation(line: 1741, column: 9, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13025, file: !3, line: 1741, column: 2)
!13069 = !DILocation(line: 1741, column: 7, scope: !13068)
!13070 = !DILocation(line: 1741, column: 14, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13068, file: !3, line: 1741, column: 2)
!13072 = !DILocation(line: 1741, column: 18, scope: !13071)
!13073 = !DILocation(line: 1741, column: 23, scope: !13071)
!13074 = !DILocation(line: 1741, column: 16, scope: !13071)
!13075 = !DILocation(line: 1741, column: 2, scope: !13068)
!13076 = !DILocation(line: 1742, column: 3, scope: !13071)
!13077 = !DILocation(line: 1741, column: 35, scope: !13071)
!13078 = !DILocation(line: 1741, column: 2, scope: !13071)
!13079 = distinct !{!13079, !13075, !13080}
!13080 = !DILocation(line: 1742, column: 3, scope: !13068)
!13081 = !DILocation(line: 1743, column: 2, scope: !13025)
!13082 = !DILocation(line: 1743, column: 7, scope: !13025)
!13083 = !DILocation(line: 1743, column: 17, scope: !13025)
!13084 = !DILocation(line: 1744, column: 6, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13025, file: !3, line: 1744, column: 6)
!13086 = !DILocation(line: 1744, column: 11, scope: !13085)
!13087 = !DILocation(line: 1744, column: 25, scope: !13085)
!13088 = !DILocation(line: 1744, column: 6, scope: !13025)
!13089 = !DILocation(line: 1745, column: 3, scope: !13085)
!13090 = !DILocation(line: 1745, column: 8, scope: !13085)
!13091 = !DILocation(line: 1745, column: 14, scope: !13085)
!13092 = !DILocation(line: 1747, column: 2, scope: !13025)
!13093 = !DILocation(line: 1748, column: 1, scope: !13025)
!13094 = distinct !DISubprogram(name: "msgin_phase1", scope: !3, file: !3, line: 2839, type: !10404, scopeLine: 2841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13095 = !DILocalVariable(name: "acb", arg: 1, scope: !13094, file: !3, line: 2839, type: !185)
!13096 = !DILocation(line: 2839, column: 48, scope: !13094)
!13097 = !DILocalVariable(name: "srb", arg: 2, scope: !13094, file: !3, line: 2839, type: !5234)
!13098 = !DILocation(line: 2839, column: 72, scope: !13094)
!13099 = !DILocalVariable(name: "pscsi_status", arg: 3, scope: !13094, file: !3, line: 2840, type: !5637)
!13100 = !DILocation(line: 2840, column: 8, scope: !13094)
!13101 = !DILocation(line: 2842, column: 2, scope: !13094)
!13102 = !DILocation(line: 2842, column: 2, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13094, file: !3, line: 2842, column: 2)
!13104 = !DILocation(line: 2843, column: 13, scope: !13094)
!13105 = !DILocation(line: 2843, column: 2, scope: !13094)
!13106 = !DILocation(line: 2844, column: 2, scope: !13094)
!13107 = !DILocation(line: 2845, column: 8, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13094, file: !3, line: 2845, column: 6)
!13109 = !DILocation(line: 2845, column: 13, scope: !13108)
!13110 = !DILocation(line: 2845, column: 19, scope: !13108)
!13111 = !DILocation(line: 2845, column: 6, scope: !13094)
!13112 = !DILocation(line: 2846, column: 3, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13108, file: !3, line: 2845, column: 33)
!13114 = !DILocation(line: 2846, column: 8, scope: !13113)
!13115 = !DILocation(line: 2846, column: 14, scope: !13113)
!13116 = !DILocation(line: 2847, column: 3, scope: !13113)
!13117 = !DILocation(line: 2847, column: 8, scope: !13113)
!13118 = !DILocation(line: 2847, column: 14, scope: !13113)
!13119 = !DILocation(line: 2848, column: 2, scope: !13113)
!13120 = !DILocation(line: 2849, column: 2, scope: !13094)
!13121 = !DILocation(line: 2851, column: 2, scope: !13094)
!13122 = !DILocation(line: 2852, column: 1, scope: !13094)
!13123 = distinct !DISubprogram(name: "data_io_transfer", scope: !3, file: !3, line: 2267, type: !13124, scopeLine: 2269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13124 = !DISubroutineType(types: !13125)
!13125 = !{null, !185, !5234, !918}
!13126 = !DILocalVariable(name: "acb", arg: 1, scope: !13123, file: !3, line: 2267, type: !185)
!13127 = !DILocation(line: 2267, column: 52, scope: !13123)
!13128 = !DILocalVariable(name: "srb", arg: 2, scope: !13123, file: !3, line: 2268, type: !5234)
!13129 = !DILocation(line: 2268, column: 22, scope: !13123)
!13130 = !DILocalVariable(name: "io_dir", arg: 3, scope: !13123, file: !3, line: 2268, type: !918)
!13131 = !DILocation(line: 2268, column: 31, scope: !13123)
!13132 = !DILocalVariable(name: "dcb", scope: !13123, file: !3, line: 2270, type: !5226)
!13133 = !DILocation(line: 2270, column: 23, scope: !13123)
!13134 = !DILocation(line: 2270, column: 29, scope: !13123)
!13135 = !DILocation(line: 2270, column: 34, scope: !13123)
!13136 = !DILocalVariable(name: "bval", scope: !13123, file: !3, line: 2271, type: !410)
!13137 = !DILocation(line: 2271, column: 5, scope: !13123)
!13138 = !DILocation(line: 2272, column: 2, scope: !13123)
!13139 = !DILocation(line: 2272, column: 2, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 2272, column: 2)
!13141 = !DILocation(line: 2277, column: 6, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 2277, column: 6)
!13143 = !DILocation(line: 2277, column: 13, scope: !13142)
!13144 = !DILocation(line: 2277, column: 18, scope: !13142)
!13145 = !DILocation(line: 2277, column: 10, scope: !13142)
!13146 = !DILocation(line: 2277, column: 6, scope: !13123)
!13147 = !DILocation(line: 2278, column: 3, scope: !13142)
!13148 = !DILocation(line: 2279, column: 6, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 2279, column: 6)
!13150 = !DILocation(line: 2279, column: 11, scope: !13149)
!13151 = !DILocation(line: 2279, column: 23, scope: !13149)
!13152 = !DILocation(line: 2279, column: 28, scope: !13149)
!13153 = !DILocation(line: 2279, column: 20, scope: !13149)
!13154 = !DILocation(line: 2279, column: 6, scope: !13123)
!13155 = !DILocation(line: 2281, column: 3, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13149, file: !3, line: 2279, column: 38)
!13157 = !DILocation(line: 2284, column: 6, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 2284, column: 6)
!13159 = !DILocation(line: 2284, column: 11, scope: !13158)
!13160 = !DILocation(line: 2284, column: 29, scope: !13158)
!13161 = !DILocation(line: 2284, column: 6, scope: !13123)
!13162 = !DILocalVariable(name: "dma_status", scope: !13163, file: !3, line: 2285, type: !410)
!13163 = distinct !DILexicalBlock(scope: !13158, file: !3, line: 2284, column: 47)
!13164 = !DILocation(line: 2285, column: 6, scope: !13163)
!13165 = !DILocation(line: 2285, column: 19, scope: !13163)
!13166 = !DILocation(line: 2290, column: 7, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13163, file: !3, line: 2290, column: 7)
!13168 = !DILocation(line: 2290, column: 18, scope: !13167)
!13169 = !DILocation(line: 2290, column: 7, scope: !13163)
!13170 = !DILocation(line: 2291, column: 4, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13167, file: !3, line: 2290, column: 33)
!13172 = !DILocation(line: 2293, column: 23, scope: !13171)
!13173 = !DILocation(line: 2293, column: 28, scope: !13171)
!13174 = !DILocation(line: 2293, column: 33, scope: !13171)
!13175 = !DILocation(line: 2293, column: 4, scope: !13171)
!13176 = !DILocation(line: 2294, column: 4, scope: !13171)
!13177 = !DILocation(line: 2295, column: 3, scope: !13171)
!13178 = !DILocation(line: 2301, column: 3, scope: !13163)
!13179 = !DILocation(line: 2301, column: 8, scope: !13163)
!13180 = !DILocation(line: 2301, column: 14, scope: !13163)
!13181 = !DILocation(line: 2302, column: 3, scope: !13163)
!13182 = !DILocation(line: 2303, column: 21, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13163, file: !3, line: 2303, column: 7)
!13184 = !DILocation(line: 2303, column: 26, scope: !13183)
!13185 = !DILocation(line: 2303, column: 7, scope: !13183)
!13186 = !DILocation(line: 2303, column: 7, scope: !13163)
!13187 = !DILocation(line: 2304, column: 11, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13183, file: !3, line: 2303, column: 32)
!13189 = !DILocation(line: 2305, column: 4, scope: !13188)
!13190 = !DILocation(line: 2310, column: 4, scope: !13188)
!13191 = !DILocation(line: 2313, column: 3, scope: !13188)
!13192 = !DILocation(line: 2314, column: 11, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13183, file: !3, line: 2313, column: 10)
!13194 = !DILocation(line: 2315, column: 4, scope: !13193)
!13195 = !DILocation(line: 2317, column: 4, scope: !13193)
!13196 = !DILocation(line: 2321, column: 3, scope: !13163)
!13197 = !DILocation(line: 2323, column: 3, scope: !13163)
!13198 = !DILocation(line: 2324, column: 7, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13163, file: !3, line: 2324, column: 7)
!13200 = !DILocation(line: 2324, column: 14, scope: !13199)
!13201 = !DILocation(line: 2324, column: 7, scope: !13163)
!13202 = !DILocation(line: 2325, column: 4, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13199, file: !3, line: 2324, column: 28)
!13204 = !DILocation(line: 2327, column: 4, scope: !13203)
!13205 = !DILocation(line: 2328, column: 3, scope: !13203)
!13206 = !DILocation(line: 2329, column: 4, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13199, file: !3, line: 2328, column: 10)
!13208 = !DILocation(line: 2330, column: 4, scope: !13207)
!13209 = !DILocation(line: 2334, column: 2, scope: !13163)
!13210 = !DILocation(line: 2336, column: 11, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13158, file: !3, line: 2336, column: 11)
!13212 = !DILocation(line: 2336, column: 16, scope: !13211)
!13213 = !DILocation(line: 2336, column: 34, scope: !13211)
!13214 = !DILocation(line: 2336, column: 11, scope: !13158)
!13215 = !DILocation(line: 2341, column: 3, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13211, file: !3, line: 2336, column: 39)
!13217 = !DILocation(line: 2341, column: 8, scope: !13216)
!13218 = !DILocation(line: 2341, column: 14, scope: !13216)
!13219 = !DILocation(line: 2343, column: 3, scope: !13216)
!13220 = !DILocation(line: 2345, column: 3, scope: !13216)
!13221 = !DILocation(line: 2346, column: 7, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13216, file: !3, line: 2346, column: 7)
!13223 = !DILocation(line: 2346, column: 14, scope: !13222)
!13224 = !DILocation(line: 2346, column: 7, scope: !13216)
!13225 = !DILocation(line: 2347, column: 4, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 2346, column: 28)
!13227 = !DILocation(line: 2349, column: 3, scope: !13226)
!13228 = !DILocalVariable(name: "ln", scope: !13229, file: !3, line: 2350, type: !267)
!13229 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 2349, column: 10)
!13230 = !DILocation(line: 2350, column: 8, scope: !13229)
!13231 = !DILocation(line: 2350, column: 13, scope: !13229)
!13232 = !DILocation(line: 2350, column: 18, scope: !13229)
!13233 = !DILocalVariable(name: "left_io", scope: !13229, file: !3, line: 2351, type: !823)
!13234 = !DILocation(line: 2351, column: 11, scope: !13229)
!13235 = !DILocation(line: 2351, column: 21, scope: !13229)
!13236 = !DILocation(line: 2351, column: 26, scope: !13229)
!13237 = !DILocation(line: 2353, column: 8, scope: !13238)
!13238 = distinct !DILexicalBlock(scope: !13229, file: !3, line: 2353, column: 8)
!13239 = !DILocation(line: 2353, column: 13, scope: !13238)
!13240 = !DILocation(line: 2353, column: 18, scope: !13238)
!13241 = !DILocation(line: 2353, column: 30, scope: !13238)
!13242 = !DILocation(line: 2353, column: 8, scope: !13229)
!13243 = !DILocation(line: 2354, column: 5, scope: !13238)
!13244 = !DILocation(line: 2357, column: 4, scope: !13229)
!13245 = !DILocation(line: 2357, column: 11, scope: !13229)
!13246 = !DILocalVariable(name: "virt", scope: !13247, file: !3, line: 2358, type: !4848)
!13247 = distinct !DILexicalBlock(scope: !13229, file: !3, line: 2357, column: 20)
!13248 = !DILocation(line: 2358, column: 20, scope: !13247)
!13249 = !DILocalVariable(name: "base", scope: !13247, file: !3, line: 2358, type: !4848)
!13250 = !DILocation(line: 2358, column: 27, scope: !13247)
!13251 = !DILocalVariable(name: "flags", scope: !13247, file: !3, line: 2359, type: !248)
!13252 = !DILocation(line: 2359, column: 19, scope: !13247)
!13253 = !DILocalVariable(name: "len", scope: !13247, file: !3, line: 2360, type: !823)
!13254 = !DILocation(line: 2360, column: 12, scope: !13247)
!13255 = !DILocation(line: 2360, column: 18, scope: !13247)
!13256 = !DILocalVariable(name: "offset", scope: !13247, file: !3, line: 2361, type: !823)
!13257 = !DILocation(line: 2361, column: 12, scope: !13247)
!13258 = !DILocation(line: 2361, column: 21, scope: !13247)
!13259 = !DILocation(line: 2361, column: 26, scope: !13247)
!13260 = !DILocation(line: 2361, column: 43, scope: !13247)
!13261 = !DILocation(line: 2361, column: 41, scope: !13247)
!13262 = !DILocation(line: 2363, column: 5, scope: !13247)
!13263 = !DILocation(line: 2363, column: 5, scope: !13264)
!13264 = distinct !DILexicalBlock(scope: !13247, file: !3, line: 2363, column: 5)
!13265 = !DILocalVariable(name: "__dummy", scope: !13266, file: !3, line: 2363, type: !248)
!13266 = distinct !DILexicalBlock(scope: !13267, file: !3, line: 2363, column: 5)
!13267 = distinct !DILexicalBlock(scope: !13264, file: !3, line: 2363, column: 5)
!13268 = !DILocation(line: 2363, column: 5, scope: !13266)
!13269 = !DILocalVariable(name: "__dummy2", scope: !13266, file: !3, line: 2363, type: !248)
!13270 = !DILocation(line: 2363, column: 5, scope: !13267)
!13271 = !DILocation(line: 2365, column: 44, scope: !13247)
!13272 = !DILocation(line: 2365, column: 49, scope: !13247)
!13273 = !DILocation(line: 2365, column: 32, scope: !13247)
!13274 = !DILocation(line: 2366, column: 11, scope: !13247)
!13275 = !DILocation(line: 2366, column: 16, scope: !13247)
!13276 = !DILocation(line: 2365, column: 12, scope: !13247)
!13277 = !DILocation(line: 2365, column: 10, scope: !13247)
!13278 = !DILocation(line: 2367, column: 12, scope: !13247)
!13279 = !DILocation(line: 2367, column: 19, scope: !13247)
!13280 = !DILocation(line: 2367, column: 17, scope: !13247)
!13281 = !DILocation(line: 2367, column: 10, scope: !13247)
!13282 = !DILocation(line: 2369, column: 16, scope: !13247)
!13283 = !DILocation(line: 2369, column: 13, scope: !13247)
!13284 = !DILocation(line: 2371, column: 5, scope: !13247)
!13285 = !DILocation(line: 2371, column: 15, scope: !13247)
!13286 = !DILocation(line: 2375, column: 6, scope: !13287)
!13287 = distinct !DILexicalBlock(scope: !13247, file: !3, line: 2371, column: 19)
!13288 = !DILocation(line: 2377, column: 22, scope: !13287)
!13289 = !DILocation(line: 2377, column: 6, scope: !13287)
!13290 = distinct !{!13290, !13284, !13291}
!13291 = !DILocation(line: 2378, column: 5, scope: !13247)
!13292 = !DILocation(line: 2380, column: 27, scope: !13247)
!13293 = !DILocation(line: 2380, column: 5, scope: !13247)
!13294 = !DILocation(line: 2381, column: 5, scope: !13247)
!13295 = !DILocation(line: 2381, column: 5, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13247, file: !3, line: 2381, column: 5)
!13297 = !DILocalVariable(name: "__dummy", scope: !13298, file: !3, line: 2381, type: !248)
!13298 = distinct !DILexicalBlock(scope: !13299, file: !3, line: 2381, column: 5)
!13299 = distinct !DILexicalBlock(scope: !13296, file: !3, line: 2381, column: 5)
!13300 = !DILocation(line: 2381, column: 5, scope: !13298)
!13301 = !DILocalVariable(name: "__dummy2", scope: !13298, file: !3, line: 2381, type: !248)
!13302 = !DILocation(line: 2381, column: 5, scope: !13299)
!13303 = distinct !{!13303, !13244, !13304}
!13304 = !DILocation(line: 2382, column: 4, scope: !13229)
!13305 = !DILocation(line: 2383, column: 8, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13229, file: !3, line: 2383, column: 8)
!13307 = !DILocation(line: 2383, column: 13, scope: !13306)
!13308 = !DILocation(line: 2383, column: 18, scope: !13306)
!13309 = !DILocation(line: 2383, column: 30, scope: !13306)
!13310 = !DILocation(line: 2383, column: 8, scope: !13229)
!13311 = !DILocation(line: 2384, column: 9, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 2384, column: 9)
!13313 = distinct !DILexicalBlock(scope: !13306, file: !3, line: 2383, column: 43)
!13314 = !DILocation(line: 2384, column: 12, scope: !13312)
!13315 = !DILocation(line: 2384, column: 9, scope: !13313)
!13316 = !DILocation(line: 2385, column: 6, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13312, file: !3, line: 2384, column: 17)
!13318 = !DILocation(line: 2388, column: 5, scope: !13317)
!13319 = !DILocation(line: 2389, column: 5, scope: !13313)
!13320 = !DILocation(line: 2390, column: 4, scope: !13313)
!13321 = !DILocation(line: 2394, column: 4, scope: !13229)
!13322 = !DILocation(line: 2397, column: 2, scope: !13216)
!13323 = !DILocalVariable(name: "data", scope: !13324, file: !3, line: 2400, type: !410)
!13324 = distinct !DILexicalBlock(scope: !13211, file: !3, line: 2399, column: 7)
!13325 = !DILocation(line: 2400, column: 6, scope: !13324)
!13326 = !DILocalVariable(name: "data2", scope: !13324, file: !3, line: 2400, type: !410)
!13327 = !DILocation(line: 2400, column: 16, scope: !13324)
!13328 = !DILocation(line: 2401, column: 7, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13324, file: !3, line: 2401, column: 7)
!13330 = !DILocation(line: 2401, column: 12, scope: !13329)
!13331 = !DILocation(line: 2401, column: 7, scope: !13324)
!13332 = !DILocation(line: 2402, column: 4, scope: !13333)
!13333 = distinct !DILexicalBlock(scope: !13329, file: !3, line: 2401, column: 22)
!13334 = !DILocation(line: 2402, column: 9, scope: !13333)
!13335 = !DILocation(line: 2402, column: 24, scope: !13333)
!13336 = !DILocation(line: 2403, column: 4, scope: !13333)
!13337 = !DILocation(line: 2403, column: 9, scope: !13333)
!13338 = !DILocation(line: 2403, column: 16, scope: !13333)
!13339 = !DILocation(line: 2404, column: 3, scope: !13333)
!13340 = !DILocation(line: 2410, column: 7, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13324, file: !3, line: 2410, column: 7)
!13342 = !DILocation(line: 2410, column: 12, scope: !13341)
!13343 = !DILocation(line: 2410, column: 24, scope: !13341)
!13344 = !DILocation(line: 2410, column: 7, scope: !13324)
!13345 = !DILocation(line: 2411, column: 4, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13341, file: !3, line: 2410, column: 37)
!13347 = !DILocation(line: 2412, column: 4, scope: !13346)
!13348 = !DILocation(line: 2414, column: 8, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !13346, file: !3, line: 2414, column: 8)
!13350 = !DILocation(line: 2414, column: 15, scope: !13349)
!13351 = !DILocation(line: 2414, column: 8, scope: !13346)
!13352 = !DILocation(line: 2415, column: 12, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13349, file: !3, line: 2414, column: 29)
!13354 = !DILocation(line: 2415, column: 10, scope: !13353)
!13355 = !DILocation(line: 2416, column: 13, scope: !13353)
!13356 = !DILocation(line: 2416, column: 11, scope: !13353)
!13357 = !DILocation(line: 2417, column: 4, scope: !13353)
!13358 = !DILocation(line: 2421, column: 5, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13349, file: !3, line: 2417, column: 11)
!13360 = !DILocation(line: 2422, column: 5, scope: !13359)
!13361 = !DILocation(line: 2424, column: 4, scope: !13346)
!13362 = !DILocation(line: 2425, column: 3, scope: !13346)
!13363 = !DILocation(line: 2426, column: 4, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13341, file: !3, line: 2425, column: 10)
!13365 = !DILocation(line: 2429, column: 8, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13364, file: !3, line: 2429, column: 8)
!13367 = !DILocation(line: 2429, column: 15, scope: !13366)
!13368 = !DILocation(line: 2429, column: 8, scope: !13364)
!13369 = !DILocation(line: 2430, column: 12, scope: !13366)
!13370 = !DILocation(line: 2430, column: 10, scope: !13366)
!13371 = !DILocation(line: 2430, column: 5, scope: !13366)
!13372 = !DILocation(line: 2432, column: 5, scope: !13366)
!13373 = !DILocation(line: 2434, column: 3, scope: !13324)
!13374 = !DILocation(line: 2434, column: 8, scope: !13324)
!13375 = !DILocation(line: 2434, column: 14, scope: !13324)
!13376 = !DILocation(line: 2435, column: 3, scope: !13324)
!13377 = !DILocation(line: 2437, column: 11, scope: !13324)
!13378 = !DILocation(line: 2437, column: 18, scope: !13324)
!13379 = !DILocation(line: 2437, column: 10, scope: !13324)
!13380 = !DILocation(line: 2437, column: 8, scope: !13324)
!13381 = !DILocation(line: 2438, column: 3, scope: !13324)
!13382 = !DILocation(line: 2440, column: 1, scope: !13123)
!13383 = distinct !DISubprogram(name: "dump_register_info", scope: !3, file: !3, line: 1055, type: !8130, scopeLine: 1057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13384 = !DILocalVariable(name: "acb", arg: 1, scope: !13383, file: !3, line: 1055, type: !185)
!13385 = !DILocation(line: 1055, column: 54, scope: !13383)
!13386 = !DILocalVariable(name: "dcb", arg: 2, scope: !13383, file: !3, line: 1056, type: !5226)
!13387 = !DILocation(line: 1056, column: 24, scope: !13383)
!13388 = !DILocalVariable(name: "srb", arg: 3, scope: !13383, file: !3, line: 1056, type: !5234)
!13389 = !DILocation(line: 1056, column: 48, scope: !13383)
!13390 = !DILocalVariable(name: "pstat", scope: !13383, file: !3, line: 1058, type: !918)
!13391 = !DILocation(line: 1058, column: 6, scope: !13383)
!13392 = !DILocalVariable(name: "dev", scope: !13383, file: !3, line: 1059, type: !5301)
!13393 = !DILocation(line: 1059, column: 18, scope: !13383)
!13394 = !DILocation(line: 1059, column: 24, scope: !13383)
!13395 = !DILocation(line: 1059, column: 29, scope: !13383)
!13396 = !DILocation(line: 1060, column: 23, scope: !13383)
!13397 = !DILocation(line: 1060, column: 2, scope: !13383)
!13398 = !DILocation(line: 1061, column: 7, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13383, file: !3, line: 1061, column: 6)
!13400 = !DILocation(line: 1061, column: 6, scope: !13383)
!13401 = !DILocation(line: 1062, column: 9, scope: !13399)
!13402 = !DILocation(line: 1062, column: 14, scope: !13399)
!13403 = !DILocation(line: 1062, column: 7, scope: !13399)
!13404 = !DILocation(line: 1062, column: 3, scope: !13399)
!13405 = !DILocation(line: 1063, column: 7, scope: !13406)
!13406 = distinct !DILexicalBlock(scope: !13383, file: !3, line: 1063, column: 6)
!13407 = !DILocation(line: 1063, column: 11, scope: !13406)
!13408 = !DILocation(line: 1063, column: 14, scope: !13406)
!13409 = !DILocation(line: 1063, column: 6, scope: !13383)
!13410 = !DILocation(line: 1064, column: 9, scope: !13406)
!13411 = !DILocation(line: 1064, column: 14, scope: !13406)
!13412 = !DILocation(line: 1064, column: 7, scope: !13406)
!13413 = !DILocation(line: 1064, column: 3, scope: !13406)
!13414 = !DILocation(line: 1065, column: 6, scope: !13415)
!13415 = distinct !DILexicalBlock(scope: !13383, file: !3, line: 1065, column: 6)
!13416 = !DILocation(line: 1065, column: 6, scope: !13383)
!13417 = !DILocation(line: 1066, column: 8, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13419, file: !3, line: 1066, column: 7)
!13419 = distinct !DILexicalBlock(scope: !13415, file: !3, line: 1065, column: 11)
!13420 = !DILocation(line: 1066, column: 13, scope: !13418)
!13421 = !DILocation(line: 1066, column: 7, scope: !13419)
!13422 = !DILocation(line: 1067, column: 4, scope: !13418)
!13423 = !DILocation(line: 1070, column: 4, scope: !13418)
!13424 = !DILocation(line: 1076, column: 10, scope: !13419)
!13425 = !DILocation(line: 1076, column: 15, scope: !13419)
!13426 = !DILocation(line: 1076, column: 26, scope: !13419)
!13427 = !DILocation(line: 1076, column: 31, scope: !13419)
!13428 = !DILocation(line: 1076, column: 41, scope: !13419)
!13429 = !DILocation(line: 1076, column: 46, scope: !13419)
!13430 = !DILocation(line: 1077, column: 10, scope: !13419)
!13431 = !DILocation(line: 1077, column: 15, scope: !13419)
!13432 = !DILocation(line: 1075, column: 3, scope: !13419)
!13433 = !DILocation(line: 1079, column: 10, scope: !13419)
!13434 = !DILocation(line: 1079, column: 15, scope: !13419)
!13435 = !DILocation(line: 1079, column: 22, scope: !13419)
!13436 = !DILocation(line: 1079, column: 27, scope: !13419)
!13437 = !DILocation(line: 1079, column: 35, scope: !13419)
!13438 = !DILocation(line: 1079, column: 40, scope: !13419)
!13439 = !DILocation(line: 1080, column: 11, scope: !13419)
!13440 = !DILocation(line: 1080, column: 16, scope: !13419)
!13441 = !DILocation(line: 1080, column: 10, scope: !13419)
!13442 = !DILocation(line: 1078, column: 3, scope: !13419)
!13443 = !DILocation(line: 1081, column: 2, scope: !13419)
!13444 = !DILocation(line: 1082, column: 2, scope: !13383)
!13445 = !DILocation(line: 1099, column: 2, scope: !13383)
!13446 = !DILocation(line: 1112, column: 2, scope: !13383)
!13447 = !DILocation(line: 1118, column: 1, scope: !13383)
!13448 = distinct !DISubprogram(name: "outl", scope: !8099, file: !8099, line: 336, type: !13449, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13449 = !DISubroutineType(types: !13450)
!13450 = !{null, !7, !267}
!13451 = !DILocalVariable(name: "value", arg: 1, scope: !13448, file: !8099, line: 336, type: !7)
!13452 = !DILocation(line: 336, column: 1, scope: !13448)
!13453 = !DILocalVariable(name: "port", arg: 2, scope: !13448, file: !8099, line: 336, type: !267)
!13454 = !{i32 -2141641159}
!13455 = distinct !DISubprogram(name: "trms1040_read_all", scope: !3, file: !3, line: 3993, type: !9574, scopeLine: 3994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13456 = !DILocalVariable(name: "eeprom", arg: 1, scope: !13455, file: !3, line: 3993, type: !8547)
!13457 = !DILocation(line: 3993, column: 49, scope: !13455)
!13458 = !DILocalVariable(name: "io_port", arg: 2, scope: !13455, file: !3, line: 3993, type: !248)
!13459 = !DILocation(line: 3993, column: 71, scope: !13455)
!13460 = !DILocalVariable(name: "b_eeprom", scope: !13455, file: !3, line: 3995, type: !5619)
!13461 = !DILocation(line: 3995, column: 6, scope: !13455)
!13462 = !DILocation(line: 3995, column: 23, scope: !13455)
!13463 = !DILocation(line: 3995, column: 17, scope: !13455)
!13464 = !DILocalVariable(name: "addr", scope: !13455, file: !3, line: 3996, type: !410)
!13465 = !DILocation(line: 3996, column: 5, scope: !13455)
!13466 = !DILocation(line: 3999, column: 12, scope: !13455)
!13467 = !DILocation(line: 3999, column: 20, scope: !13455)
!13468 = !DILocation(line: 3999, column: 8, scope: !13455)
!13469 = !DILocation(line: 3999, column: 45, scope: !13455)
!13470 = !DILocation(line: 3999, column: 7, scope: !13455)
!13471 = !DILocation(line: 4000, column: 7, scope: !13455)
!13472 = !DILocation(line: 4000, column: 15, scope: !13455)
!13473 = !DILocation(line: 3999, column: 2, scope: !13455)
!13474 = !DILocation(line: 4003, column: 12, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 4003, column: 2)
!13476 = !DILocation(line: 4003, column: 7, scope: !13475)
!13477 = !DILocation(line: 4003, column: 17, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13475, file: !3, line: 4003, column: 2)
!13479 = !DILocation(line: 4003, column: 22, scope: !13478)
!13480 = !DILocation(line: 4003, column: 2, scope: !13475)
!13481 = !DILocation(line: 4004, column: 33, scope: !13478)
!13482 = !DILocation(line: 4004, column: 42, scope: !13478)
!13483 = !DILocation(line: 4004, column: 15, scope: !13478)
!13484 = !DILocation(line: 4004, column: 4, scope: !13478)
!13485 = !DILocation(line: 4004, column: 13, scope: !13478)
!13486 = !DILocation(line: 4004, column: 3, scope: !13478)
!13487 = !DILocation(line: 4003, column: 33, scope: !13478)
!13488 = !DILocation(line: 4003, column: 45, scope: !13478)
!13489 = !DILocation(line: 4003, column: 2, scope: !13478)
!13490 = distinct !{!13490, !13480, !13491}
!13491 = !DILocation(line: 4004, column: 46, scope: !13475)
!13492 = !DILocation(line: 4007, column: 12, scope: !13455)
!13493 = !DILocation(line: 4007, column: 20, scope: !13455)
!13494 = !DILocation(line: 4007, column: 8, scope: !13455)
!13495 = !DILocation(line: 4007, column: 45, scope: !13455)
!13496 = !DILocation(line: 4007, column: 7, scope: !13455)
!13497 = !DILocation(line: 4008, column: 7, scope: !13455)
!13498 = !DILocation(line: 4008, column: 15, scope: !13455)
!13499 = !DILocation(line: 4007, column: 2, scope: !13455)
!13500 = !DILocation(line: 4009, column: 1, scope: !13455)
!13501 = distinct !DISubprogram(name: "set_safe_settings", scope: !3, file: !3, line: 576, type: !4414, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13502 = !DILocation(line: 578, column: 6, scope: !13503)
!13503 = distinct !DILexicalBlock(scope: !13501, file: !3, line: 578, column: 6)
!13504 = !DILocation(line: 578, column: 6, scope: !13501)
!13505 = !DILocalVariable(name: "i", scope: !13506, file: !3, line: 580, type: !267)
!13506 = distinct !DILexicalBlock(scope: !13503, file: !3, line: 579, column: 2)
!13507 = !DILocation(line: 580, column: 7, scope: !13506)
!13508 = !DILocation(line: 582, column: 3, scope: !13506)
!13509 = !DILocation(line: 583, column: 10, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13506, file: !3, line: 583, column: 3)
!13511 = !DILocation(line: 583, column: 8, scope: !13510)
!13512 = !DILocation(line: 583, column: 15, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13510, file: !3, line: 583, column: 3)
!13514 = !DILocation(line: 583, column: 17, scope: !13513)
!13515 = !DILocation(line: 583, column: 3, scope: !13510)
!13516 = !DILocation(line: 585, column: 33, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13513, file: !3, line: 584, column: 3)
!13518 = !DILocation(line: 585, column: 24, scope: !13517)
!13519 = !DILocation(line: 585, column: 36, scope: !13517)
!13520 = !DILocation(line: 585, column: 13, scope: !13517)
!13521 = !DILocation(line: 585, column: 4, scope: !13517)
!13522 = !DILocation(line: 585, column: 16, scope: !13517)
!13523 = !DILocation(line: 585, column: 22, scope: !13517)
!13524 = !DILocation(line: 586, column: 3, scope: !13517)
!13525 = !DILocation(line: 583, column: 29, scope: !13513)
!13526 = !DILocation(line: 583, column: 3, scope: !13513)
!13527 = distinct !{!13527, !13515, !13528}
!13528 = !DILocation(line: 586, column: 3, scope: !13510)
!13529 = !DILocation(line: 587, column: 2, scope: !13506)
!13530 = !DILocation(line: 588, column: 1, scope: !13501)
!13531 = distinct !DISubprogram(name: "fix_settings", scope: !3, file: !3, line: 595, type: !4414, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13532 = !DILocalVariable(name: "i", scope: !13531, file: !3, line: 597, type: !267)
!13533 = !DILocation(line: 597, column: 6, scope: !13531)
!13534 = !DILocation(line: 599, column: 2, scope: !13531)
!13535 = !DILocation(line: 599, column: 2, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13531, file: !3, line: 599, column: 2)
!13537 = !DILocation(line: 608, column: 9, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13531, file: !3, line: 608, column: 2)
!13539 = !DILocation(line: 608, column: 7, scope: !13538)
!13540 = !DILocation(line: 608, column: 14, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13538, file: !3, line: 608, column: 2)
!13542 = !DILocation(line: 608, column: 16, scope: !13541)
!13543 = !DILocation(line: 608, column: 2, scope: !13538)
!13544 = !DILocation(line: 610, column: 16, scope: !13545)
!13545 = distinct !DILexicalBlock(scope: !13546, file: !3, line: 610, column: 7)
!13546 = distinct !DILexicalBlock(scope: !13541, file: !3, line: 609, column: 2)
!13547 = !DILocation(line: 610, column: 7, scope: !13545)
!13548 = !DILocation(line: 610, column: 19, scope: !13545)
!13549 = !DILocation(line: 610, column: 36, scope: !13545)
!13550 = !DILocation(line: 610, column: 27, scope: !13545)
!13551 = !DILocation(line: 610, column: 39, scope: !13545)
!13552 = !DILocation(line: 610, column: 25, scope: !13545)
!13553 = !DILocation(line: 611, column: 7, scope: !13545)
!13554 = !DILocation(line: 611, column: 19, scope: !13545)
!13555 = !DILocation(line: 611, column: 10, scope: !13545)
!13556 = !DILocation(line: 611, column: 22, scope: !13545)
!13557 = !DILocation(line: 611, column: 39, scope: !13545)
!13558 = !DILocation(line: 611, column: 30, scope: !13545)
!13559 = !DILocation(line: 611, column: 42, scope: !13545)
!13560 = !DILocation(line: 611, column: 28, scope: !13545)
!13561 = !DILocation(line: 610, column: 7, scope: !13546)
!13562 = !DILocation(line: 612, column: 33, scope: !13545)
!13563 = !DILocation(line: 612, column: 24, scope: !13545)
!13564 = !DILocation(line: 612, column: 36, scope: !13545)
!13565 = !DILocation(line: 612, column: 13, scope: !13545)
!13566 = !DILocation(line: 612, column: 4, scope: !13545)
!13567 = !DILocation(line: 612, column: 16, scope: !13545)
!13568 = !DILocation(line: 612, column: 22, scope: !13545)
!13569 = !DILocation(line: 613, column: 2, scope: !13546)
!13570 = !DILocation(line: 608, column: 28, scope: !13541)
!13571 = !DILocation(line: 608, column: 2, scope: !13541)
!13572 = distinct !{!13572, !13543, !13573}
!13573 = !DILocation(line: 613, column: 2, scope: !13538)
!13574 = !DILocation(line: 614, column: 1, scope: !13531)
!13575 = distinct !DISubprogram(name: "eeprom_override", scope: !3, file: !3, line: 661, type: !9738, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13576 = !DILocalVariable(name: "eeprom", arg: 1, scope: !13575, file: !3, line: 661, type: !8547)
!13577 = !DILocation(line: 661, column: 47, scope: !13575)
!13578 = !DILocalVariable(name: "id", scope: !13575, file: !3, line: 663, type: !410)
!13579 = !DILocation(line: 663, column: 5, scope: !13575)
!13580 = !DILocation(line: 666, column: 31, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 666, column: 6)
!13582 = !DILocation(line: 666, column: 37, scope: !13581)
!13583 = !DILocation(line: 666, column: 6, scope: !13575)
!13584 = !DILocation(line: 667, column: 50, scope: !13581)
!13585 = !DILocation(line: 667, column: 21, scope: !13581)
!13586 = !DILocation(line: 667, column: 3, scope: !13581)
!13587 = !DILocation(line: 667, column: 11, scope: !13581)
!13588 = !DILocation(line: 667, column: 19, scope: !13581)
!13589 = !DILocation(line: 669, column: 33, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 669, column: 6)
!13591 = !DILocation(line: 669, column: 39, scope: !13590)
!13592 = !DILocation(line: 669, column: 6, scope: !13575)
!13593 = !DILocation(line: 670, column: 56, scope: !13590)
!13594 = !DILocation(line: 670, column: 25, scope: !13590)
!13595 = !DILocation(line: 670, column: 3, scope: !13590)
!13596 = !DILocation(line: 670, column: 11, scope: !13590)
!13597 = !DILocation(line: 670, column: 23, scope: !13590)
!13598 = !DILocation(line: 672, column: 32, scope: !13599)
!13599 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 672, column: 6)
!13600 = !DILocation(line: 672, column: 38, scope: !13599)
!13601 = !DILocation(line: 672, column: 6, scope: !13575)
!13602 = !DILocation(line: 674, column: 32, scope: !13599)
!13603 = !DILocation(line: 673, column: 24, scope: !13599)
!13604 = !DILocation(line: 673, column: 3, scope: !13599)
!13605 = !DILocation(line: 673, column: 11, scope: !13599)
!13606 = !DILocation(line: 673, column: 22, scope: !13599)
!13607 = !DILocation(line: 676, column: 25, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 676, column: 6)
!13609 = !DILocation(line: 676, column: 31, scope: !13608)
!13610 = !DILocation(line: 676, column: 6, scope: !13575)
!13611 = !DILocation(line: 677, column: 44, scope: !13608)
!13612 = !DILocation(line: 677, column: 21, scope: !13608)
!13613 = !DILocation(line: 677, column: 3, scope: !13608)
!13614 = !DILocation(line: 677, column: 11, scope: !13608)
!13615 = !DILocation(line: 677, column: 19, scope: !13608)
!13616 = !DILocation(line: 680, column: 10, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13575, file: !3, line: 680, column: 2)
!13618 = !DILocation(line: 680, column: 7, scope: !13617)
!13619 = !DILocation(line: 680, column: 15, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13617, file: !3, line: 680, column: 2)
!13621 = !DILocation(line: 680, column: 18, scope: !13620)
!13622 = !DILocation(line: 680, column: 2, scope: !13617)
!13623 = !DILocation(line: 681, column: 30, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13625, file: !3, line: 681, column: 7)
!13625 = distinct !DILexicalBlock(scope: !13620, file: !3, line: 680, column: 46)
!13626 = !DILocation(line: 681, column: 36, scope: !13624)
!13627 = !DILocation(line: 681, column: 7, scope: !13625)
!13628 = !DILocation(line: 683, column: 32, scope: !13624)
!13629 = !DILocation(line: 683, column: 5, scope: !13624)
!13630 = !DILocation(line: 682, column: 4, scope: !13624)
!13631 = !DILocation(line: 682, column: 12, scope: !13624)
!13632 = !DILocation(line: 682, column: 19, scope: !13624)
!13633 = !DILocation(line: 682, column: 23, scope: !13624)
!13634 = !DILocation(line: 682, column: 28, scope: !13624)
!13635 = !DILocation(line: 685, column: 31, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13625, file: !3, line: 685, column: 7)
!13637 = !DILocation(line: 685, column: 37, scope: !13636)
!13638 = !DILocation(line: 685, column: 7, scope: !13625)
!13639 = !DILocation(line: 687, column: 33, scope: !13636)
!13640 = !DILocation(line: 687, column: 5, scope: !13636)
!13641 = !DILocation(line: 686, column: 4, scope: !13636)
!13642 = !DILocation(line: 686, column: 12, scope: !13636)
!13643 = !DILocation(line: 686, column: 19, scope: !13636)
!13644 = !DILocation(line: 686, column: 23, scope: !13636)
!13645 = !DILocation(line: 686, column: 30, scope: !13636)
!13646 = !DILocation(line: 689, column: 2, scope: !13625)
!13647 = !DILocation(line: 680, column: 42, scope: !13620)
!13648 = !DILocation(line: 680, column: 2, scope: !13620)
!13649 = distinct !{!13649, !13622, !13650}
!13650 = !DILocation(line: 689, column: 2, scope: !13617)
!13651 = !DILocation(line: 690, column: 1, scope: !13575)
!13652 = distinct !DISubprogram(name: "trms1040_write_all", scope: !3, file: !3, line: 3915, type: !9574, scopeLine: 3916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13653 = !DILocalVariable(name: "eeprom", arg: 1, scope: !13652, file: !3, line: 3915, type: !8547)
!13654 = !DILocation(line: 3915, column: 50, scope: !13652)
!13655 = !DILocalVariable(name: "io_port", arg: 2, scope: !13652, file: !3, line: 3915, type: !248)
!13656 = !DILocation(line: 3915, column: 72, scope: !13652)
!13657 = !DILocalVariable(name: "b_eeprom", scope: !13652, file: !3, line: 3917, type: !5619)
!13658 = !DILocation(line: 3917, column: 6, scope: !13652)
!13659 = !DILocation(line: 3917, column: 23, scope: !13652)
!13660 = !DILocation(line: 3917, column: 17, scope: !13652)
!13661 = !DILocalVariable(name: "addr", scope: !13652, file: !3, line: 3918, type: !410)
!13662 = !DILocation(line: 3918, column: 5, scope: !13652)
!13663 = !DILocation(line: 3921, column: 12, scope: !13652)
!13664 = !DILocation(line: 3921, column: 20, scope: !13652)
!13665 = !DILocation(line: 3921, column: 8, scope: !13652)
!13666 = !DILocation(line: 3921, column: 45, scope: !13652)
!13667 = !DILocation(line: 3921, column: 7, scope: !13652)
!13668 = !DILocation(line: 3922, column: 7, scope: !13652)
!13669 = !DILocation(line: 3922, column: 15, scope: !13652)
!13670 = !DILocation(line: 3921, column: 2, scope: !13652)
!13671 = !DILocation(line: 3925, column: 21, scope: !13652)
!13672 = !DILocation(line: 3925, column: 2, scope: !13652)
!13673 = !DILocation(line: 3926, column: 10, scope: !13652)
!13674 = !DILocation(line: 3926, column: 18, scope: !13652)
!13675 = !DILocation(line: 3926, column: 2, scope: !13652)
!13676 = !DILocation(line: 3927, column: 21, scope: !13652)
!13677 = !DILocation(line: 3927, column: 2, scope: !13652)
!13678 = !DILocation(line: 3930, column: 12, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13652, file: !3, line: 3930, column: 2)
!13680 = !DILocation(line: 3930, column: 7, scope: !13679)
!13681 = !DILocation(line: 3930, column: 17, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13679, file: !3, line: 3930, column: 2)
!13683 = !DILocation(line: 3930, column: 22, scope: !13682)
!13684 = !DILocation(line: 3930, column: 2, scope: !13679)
!13685 = !DILocation(line: 3931, column: 21, scope: !13682)
!13686 = !DILocation(line: 3931, column: 30, scope: !13682)
!13687 = !DILocation(line: 3931, column: 37, scope: !13682)
!13688 = !DILocation(line: 3931, column: 36, scope: !13682)
!13689 = !DILocation(line: 3931, column: 3, scope: !13682)
!13690 = !DILocation(line: 3930, column: 33, scope: !13682)
!13691 = !DILocation(line: 3930, column: 45, scope: !13682)
!13692 = !DILocation(line: 3930, column: 2, scope: !13682)
!13693 = distinct !{!13693, !13684, !13694}
!13694 = !DILocation(line: 3931, column: 45, scope: !13679)
!13695 = !DILocation(line: 3934, column: 21, scope: !13652)
!13696 = !DILocation(line: 3934, column: 2, scope: !13652)
!13697 = !DILocation(line: 3935, column: 10, scope: !13652)
!13698 = !DILocation(line: 3935, column: 18, scope: !13652)
!13699 = !DILocation(line: 3935, column: 2, scope: !13652)
!13700 = !DILocation(line: 3936, column: 21, scope: !13652)
!13701 = !DILocation(line: 3936, column: 2, scope: !13652)
!13702 = !DILocation(line: 3939, column: 12, scope: !13652)
!13703 = !DILocation(line: 3939, column: 20, scope: !13652)
!13704 = !DILocation(line: 3939, column: 8, scope: !13652)
!13705 = !DILocation(line: 3939, column: 45, scope: !13652)
!13706 = !DILocation(line: 3939, column: 7, scope: !13652)
!13707 = !DILocation(line: 3940, column: 7, scope: !13652)
!13708 = !DILocation(line: 3940, column: 15, scope: !13652)
!13709 = !DILocation(line: 3939, column: 2, scope: !13652)
!13710 = !DILocation(line: 3941, column: 1, scope: !13652)
!13711 = distinct !DISubprogram(name: "eeprom_index_to_delay", scope: !3, file: !3, line: 632, type: !9738, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13712 = !DILocalVariable(name: "eeprom", arg: 1, scope: !13711, file: !3, line: 632, type: !8547)
!13713 = !DILocation(line: 632, column: 53, scope: !13711)
!13714 = !DILocation(line: 634, column: 49, scope: !13711)
!13715 = !DILocation(line: 634, column: 57, scope: !13711)
!13716 = !DILocation(line: 634, column: 23, scope: !13711)
!13717 = !DILocation(line: 634, column: 2, scope: !13711)
!13718 = !DILocation(line: 634, column: 10, scope: !13711)
!13719 = !DILocation(line: 634, column: 21, scope: !13711)
!13720 = !DILocation(line: 635, column: 1, scope: !13711)
!13721 = distinct !DISubprogram(name: "trms1040_get_data", scope: !3, file: !3, line: 3955, type: !13722, scopeLine: 3956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13722 = !DISubroutineType(types: !13723)
!13723 = !{!410, !248, !410}
!13724 = !DILocalVariable(name: "io_port", arg: 1, scope: !13721, file: !3, line: 3955, type: !248)
!13725 = !DILocation(line: 3955, column: 43, scope: !13721)
!13726 = !DILocalVariable(name: "addr", arg: 2, scope: !13721, file: !3, line: 3955, type: !410)
!13727 = !DILocation(line: 3955, column: 55, scope: !13721)
!13728 = !DILocalVariable(name: "i", scope: !13721, file: !3, line: 3957, type: !267)
!13729 = !DILocation(line: 3957, column: 6, scope: !13721)
!13730 = !DILocalVariable(name: "read_byte", scope: !13721, file: !3, line: 3958, type: !410)
!13731 = !DILocation(line: 3958, column: 5, scope: !13721)
!13732 = !DILocalVariable(name: "result", scope: !13721, file: !3, line: 3959, type: !410)
!13733 = !DILocation(line: 3959, column: 5, scope: !13721)
!13734 = !DILocation(line: 3962, column: 21, scope: !13721)
!13735 = !DILocation(line: 3962, column: 36, scope: !13721)
!13736 = !DILocation(line: 3962, column: 2, scope: !13721)
!13737 = !DILocation(line: 3965, column: 9, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13721, file: !3, line: 3965, column: 2)
!13739 = !DILocation(line: 3965, column: 7, scope: !13738)
!13740 = !DILocation(line: 3965, column: 14, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13738, file: !3, line: 3965, column: 2)
!13742 = !DILocation(line: 3965, column: 16, scope: !13741)
!13743 = !DILocation(line: 3965, column: 2, scope: !13738)
!13744 = !DILocation(line: 3966, column: 34, scope: !13745)
!13745 = distinct !DILexicalBlock(scope: !13741, file: !3, line: 3965, column: 26)
!13746 = !DILocation(line: 3966, column: 42, scope: !13745)
!13747 = !DILocation(line: 3966, column: 3, scope: !13745)
!13748 = !DILocation(line: 3967, column: 22, scope: !13745)
!13749 = !DILocation(line: 3967, column: 3, scope: !13745)
!13750 = !DILocation(line: 3968, column: 20, scope: !13745)
!13751 = !DILocation(line: 3968, column: 28, scope: !13745)
!13752 = !DILocation(line: 3968, column: 3, scope: !13745)
!13753 = !DILocation(line: 3971, column: 19, scope: !13745)
!13754 = !DILocation(line: 3971, column: 27, scope: !13745)
!13755 = !DILocation(line: 3971, column: 15, scope: !13745)
!13756 = !DILocation(line: 3971, column: 13, scope: !13745)
!13757 = !DILocation(line: 3972, column: 10, scope: !13745)
!13758 = !DILocation(line: 3973, column: 7, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13745, file: !3, line: 3973, column: 7)
!13760 = !DILocation(line: 3973, column: 17, scope: !13759)
!13761 = !DILocation(line: 3973, column: 7, scope: !13745)
!13762 = !DILocation(line: 3974, column: 11, scope: !13759)
!13763 = !DILocation(line: 3974, column: 4, scope: !13759)
!13764 = !DILocation(line: 3976, column: 22, scope: !13745)
!13765 = !DILocation(line: 3976, column: 3, scope: !13745)
!13766 = !DILocation(line: 3977, column: 2, scope: !13745)
!13767 = !DILocation(line: 3965, column: 22, scope: !13741)
!13768 = !DILocation(line: 3965, column: 2, scope: !13741)
!13769 = distinct !{!13769, !13743, !13770}
!13770 = !DILocation(line: 3977, column: 2, scope: !13738)
!13771 = !DILocation(line: 3980, column: 10, scope: !13721)
!13772 = !DILocation(line: 3980, column: 18, scope: !13721)
!13773 = !DILocation(line: 3980, column: 2, scope: !13721)
!13774 = !DILocation(line: 3981, column: 9, scope: !13721)
!13775 = !DILocation(line: 3981, column: 2, scope: !13721)
!13776 = distinct !DISubprogram(name: "trms1040_write_cmd", scope: !3, file: !3, line: 3816, type: !13777, scopeLine: 3817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13777 = !DISubroutineType(types: !13778)
!13778 = !{null, !248, !410, !410}
!13779 = !DILocalVariable(name: "io_port", arg: 1, scope: !13776, file: !3, line: 3816, type: !248)
!13780 = !DILocation(line: 3816, column: 46, scope: !13776)
!13781 = !DILocalVariable(name: "cmd", arg: 2, scope: !13776, file: !3, line: 3816, type: !410)
!13782 = !DILocation(line: 3816, column: 58, scope: !13776)
!13783 = !DILocalVariable(name: "addr", arg: 3, scope: !13776, file: !3, line: 3816, type: !410)
!13784 = !DILocation(line: 3816, column: 66, scope: !13776)
!13785 = !DILocalVariable(name: "i", scope: !13776, file: !3, line: 3818, type: !267)
!13786 = !DILocation(line: 3818, column: 6, scope: !13776)
!13787 = !DILocalVariable(name: "send_data", scope: !13776, file: !3, line: 3819, type: !410)
!13788 = !DILocation(line: 3819, column: 5, scope: !13776)
!13789 = !DILocation(line: 3822, column: 9, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13776, file: !3, line: 3822, column: 2)
!13791 = !DILocation(line: 3822, column: 7, scope: !13790)
!13792 = !DILocation(line: 3822, column: 14, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !13790, file: !3, line: 3822, column: 2)
!13794 = !DILocation(line: 3822, column: 16, scope: !13793)
!13795 = !DILocation(line: 3822, column: 2, scope: !13790)
!13796 = !DILocation(line: 3823, column: 13, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13793, file: !3, line: 3822, column: 37)
!13798 = !DILocation(line: 3824, column: 7, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13797, file: !3, line: 3824, column: 7)
!13800 = !DILocation(line: 3824, column: 11, scope: !13799)
!13801 = !DILocation(line: 3824, column: 7, scope: !13797)
!13802 = !DILocation(line: 3825, column: 14, scope: !13799)
!13803 = !DILocation(line: 3825, column: 4, scope: !13799)
!13804 = !DILocation(line: 3827, column: 8, scope: !13797)
!13805 = !DILocation(line: 3827, column: 19, scope: !13797)
!13806 = !DILocation(line: 3827, column: 27, scope: !13797)
!13807 = !DILocation(line: 3827, column: 3, scope: !13797)
!13808 = !DILocation(line: 3828, column: 22, scope: !13797)
!13809 = !DILocation(line: 3828, column: 3, scope: !13797)
!13810 = !DILocation(line: 3829, column: 9, scope: !13797)
!13811 = !DILocation(line: 3829, column: 19, scope: !13797)
!13812 = !DILocation(line: 3829, column: 8, scope: !13797)
!13813 = !DILocation(line: 3830, column: 8, scope: !13797)
!13814 = !DILocation(line: 3830, column: 16, scope: !13797)
!13815 = !DILocation(line: 3829, column: 3, scope: !13797)
!13816 = !DILocation(line: 3831, column: 22, scope: !13797)
!13817 = !DILocation(line: 3831, column: 3, scope: !13797)
!13818 = !DILocation(line: 3832, column: 2, scope: !13797)
!13819 = !DILocation(line: 3822, column: 22, scope: !13793)
!13820 = !DILocation(line: 3822, column: 30, scope: !13793)
!13821 = !DILocation(line: 3822, column: 2, scope: !13793)
!13822 = distinct !{!13822, !13795, !13823}
!13823 = !DILocation(line: 3832, column: 2, scope: !13790)
!13824 = !DILocation(line: 3835, column: 9, scope: !13825)
!13825 = distinct !DILexicalBlock(scope: !13776, file: !3, line: 3835, column: 2)
!13826 = !DILocation(line: 3835, column: 7, scope: !13825)
!13827 = !DILocation(line: 3835, column: 14, scope: !13828)
!13828 = distinct !DILexicalBlock(scope: !13825, file: !3, line: 3835, column: 2)
!13829 = !DILocation(line: 3835, column: 16, scope: !13828)
!13830 = !DILocation(line: 3835, column: 2, scope: !13825)
!13831 = !DILocation(line: 3836, column: 13, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13828, file: !3, line: 3835, column: 38)
!13833 = !DILocation(line: 3837, column: 7, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13832, file: !3, line: 3837, column: 7)
!13835 = !DILocation(line: 3837, column: 12, scope: !13834)
!13836 = !DILocation(line: 3837, column: 7, scope: !13832)
!13837 = !DILocation(line: 3838, column: 14, scope: !13834)
!13838 = !DILocation(line: 3838, column: 4, scope: !13834)
!13839 = !DILocation(line: 3840, column: 8, scope: !13832)
!13840 = !DILocation(line: 3840, column: 19, scope: !13832)
!13841 = !DILocation(line: 3840, column: 27, scope: !13832)
!13842 = !DILocation(line: 3840, column: 3, scope: !13832)
!13843 = !DILocation(line: 3841, column: 22, scope: !13832)
!13844 = !DILocation(line: 3841, column: 3, scope: !13832)
!13845 = !DILocation(line: 3842, column: 9, scope: !13832)
!13846 = !DILocation(line: 3842, column: 19, scope: !13832)
!13847 = !DILocation(line: 3842, column: 8, scope: !13832)
!13848 = !DILocation(line: 3843, column: 8, scope: !13832)
!13849 = !DILocation(line: 3843, column: 16, scope: !13832)
!13850 = !DILocation(line: 3842, column: 3, scope: !13832)
!13851 = !DILocation(line: 3844, column: 22, scope: !13832)
!13852 = !DILocation(line: 3844, column: 3, scope: !13832)
!13853 = !DILocation(line: 3845, column: 2, scope: !13832)
!13854 = !DILocation(line: 3835, column: 22, scope: !13828)
!13855 = !DILocation(line: 3835, column: 31, scope: !13828)
!13856 = !DILocation(line: 3835, column: 2, scope: !13828)
!13857 = distinct !{!13857, !13830, !13858}
!13858 = !DILocation(line: 3845, column: 2, scope: !13825)
!13859 = !DILocation(line: 3846, column: 19, scope: !13776)
!13860 = !DILocation(line: 3846, column: 27, scope: !13776)
!13861 = !DILocation(line: 3846, column: 2, scope: !13776)
!13862 = !DILocation(line: 3847, column: 21, scope: !13776)
!13863 = !DILocation(line: 3847, column: 2, scope: !13776)
!13864 = !DILocation(line: 3848, column: 1, scope: !13776)
!13865 = distinct !DISubprogram(name: "trms1040_wait_30us", scope: !3, file: !3, line: 3799, type: !8287, scopeLine: 3800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13866 = !DILocalVariable(name: "io_port", arg: 1, scope: !13865, file: !3, line: 3799, type: !248)
!13867 = !DILocation(line: 3799, column: 46, scope: !13865)
!13868 = !DILocation(line: 3802, column: 10, scope: !13865)
!13869 = !DILocation(line: 3802, column: 18, scope: !13865)
!13870 = !DILocation(line: 3802, column: 2, scope: !13865)
!13871 = !DILocation(line: 3803, column: 2, scope: !13865)
!13872 = !DILocation(line: 3803, column: 15, scope: !13865)
!13873 = !DILocation(line: 3803, column: 23, scope: !13865)
!13874 = !DILocation(line: 3803, column: 11, scope: !13865)
!13875 = !DILocation(line: 3803, column: 47, scope: !13865)
!13876 = !DILocation(line: 3803, column: 9, scope: !13865)
!13877 = distinct !{!13877, !13871, !13878}
!13878 = !DILocation(line: 3804, column: 17, scope: !13865)
!13879 = !DILocation(line: 3805, column: 1, scope: !13865)
!13880 = distinct !DISubprogram(name: "delay_to_eeprom_index", scope: !3, file: !3, line: 645, type: !1127, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13881 = !DILocalVariable(name: "delay", arg: 1, scope: !13880, file: !3, line: 645, type: !267)
!13882 = !DILocation(line: 645, column: 38, scope: !13880)
!13883 = !DILocalVariable(name: "idx", scope: !13880, file: !3, line: 647, type: !410)
!13884 = !DILocation(line: 647, column: 5, scope: !13880)
!13885 = !DILocation(line: 648, column: 2, scope: !13880)
!13886 = !DILocation(line: 648, column: 9, scope: !13880)
!13887 = !DILocation(line: 648, column: 13, scope: !13880)
!13888 = !DILocation(line: 648, column: 17, scope: !13880)
!13889 = !DILocation(line: 648, column: 46, scope: !13880)
!13890 = !DILocation(line: 648, column: 20, scope: !13880)
!13891 = !DILocation(line: 648, column: 53, scope: !13880)
!13892 = !DILocation(line: 648, column: 51, scope: !13880)
!13893 = !DILocation(line: 0, scope: !13880)
!13894 = !DILocation(line: 649, column: 6, scope: !13880)
!13895 = distinct !{!13895, !13885, !13894}
!13896 = !DILocation(line: 650, column: 9, scope: !13880)
!13897 = !DILocation(line: 650, column: 2, scope: !13880)
!13898 = distinct !DISubprogram(name: "trms1040_set_data", scope: !3, file: !3, line: 3861, type: !13777, scopeLine: 3862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13899 = !DILocalVariable(name: "io_port", arg: 1, scope: !13898, file: !3, line: 3861, type: !248)
!13900 = !DILocation(line: 3861, column: 45, scope: !13898)
!13901 = !DILocalVariable(name: "addr", arg: 2, scope: !13898, file: !3, line: 3861, type: !410)
!13902 = !DILocation(line: 3861, column: 57, scope: !13898)
!13903 = !DILocalVariable(name: "byte", arg: 3, scope: !13898, file: !3, line: 3861, type: !410)
!13904 = !DILocation(line: 3861, column: 66, scope: !13898)
!13905 = !DILocalVariable(name: "i", scope: !13898, file: !3, line: 3863, type: !267)
!13906 = !DILocation(line: 3863, column: 6, scope: !13898)
!13907 = !DILocalVariable(name: "send_data", scope: !13898, file: !3, line: 3864, type: !410)
!13908 = !DILocation(line: 3864, column: 5, scope: !13898)
!13909 = !DILocation(line: 3867, column: 21, scope: !13898)
!13910 = !DILocation(line: 3867, column: 36, scope: !13898)
!13911 = !DILocation(line: 3867, column: 2, scope: !13898)
!13912 = !DILocation(line: 3870, column: 9, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13898, file: !3, line: 3870, column: 2)
!13914 = !DILocation(line: 3870, column: 7, scope: !13913)
!13915 = !DILocation(line: 3870, column: 14, scope: !13916)
!13916 = distinct !DILexicalBlock(scope: !13913, file: !3, line: 3870, column: 2)
!13917 = !DILocation(line: 3870, column: 16, scope: !13916)
!13918 = !DILocation(line: 3870, column: 2, scope: !13913)
!13919 = !DILocation(line: 3871, column: 13, scope: !13920)
!13920 = distinct !DILexicalBlock(scope: !13916, file: !3, line: 3870, column: 38)
!13921 = !DILocation(line: 3872, column: 7, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13920, file: !3, line: 3872, column: 7)
!13923 = !DILocation(line: 3872, column: 12, scope: !13922)
!13924 = !DILocation(line: 3872, column: 7, scope: !13920)
!13925 = !DILocation(line: 3873, column: 14, scope: !13922)
!13926 = !DILocation(line: 3873, column: 4, scope: !13922)
!13927 = !DILocation(line: 3875, column: 8, scope: !13920)
!13928 = !DILocation(line: 3875, column: 19, scope: !13920)
!13929 = !DILocation(line: 3875, column: 27, scope: !13920)
!13930 = !DILocation(line: 3875, column: 3, scope: !13920)
!13931 = !DILocation(line: 3876, column: 22, scope: !13920)
!13932 = !DILocation(line: 3876, column: 3, scope: !13920)
!13933 = !DILocation(line: 3877, column: 9, scope: !13920)
!13934 = !DILocation(line: 3877, column: 19, scope: !13920)
!13935 = !DILocation(line: 3877, column: 8, scope: !13920)
!13936 = !DILocation(line: 3877, column: 33, scope: !13920)
!13937 = !DILocation(line: 3877, column: 41, scope: !13920)
!13938 = !DILocation(line: 3877, column: 3, scope: !13920)
!13939 = !DILocation(line: 3878, column: 22, scope: !13920)
!13940 = !DILocation(line: 3878, column: 3, scope: !13920)
!13941 = !DILocation(line: 3879, column: 2, scope: !13920)
!13942 = !DILocation(line: 3870, column: 22, scope: !13916)
!13943 = !DILocation(line: 3870, column: 31, scope: !13916)
!13944 = !DILocation(line: 3870, column: 2, scope: !13916)
!13945 = distinct !{!13945, !13918, !13946}
!13946 = !DILocation(line: 3879, column: 2, scope: !13913)
!13947 = !DILocation(line: 3880, column: 19, scope: !13898)
!13948 = !DILocation(line: 3880, column: 27, scope: !13898)
!13949 = !DILocation(line: 3880, column: 2, scope: !13898)
!13950 = !DILocation(line: 3881, column: 21, scope: !13898)
!13951 = !DILocation(line: 3881, column: 2, scope: !13898)
!13952 = !DILocation(line: 3884, column: 10, scope: !13898)
!13953 = !DILocation(line: 3884, column: 18, scope: !13898)
!13954 = !DILocation(line: 3884, column: 2, scope: !13898)
!13955 = !DILocation(line: 3885, column: 21, scope: !13898)
!13956 = !DILocation(line: 3885, column: 2, scope: !13898)
!13957 = !DILocation(line: 3887, column: 19, scope: !13898)
!13958 = !DILocation(line: 3887, column: 27, scope: !13898)
!13959 = !DILocation(line: 3887, column: 2, scope: !13898)
!13960 = !DILocation(line: 3888, column: 21, scope: !13898)
!13961 = !DILocation(line: 3888, column: 2, scope: !13898)
!13962 = !DILocation(line: 3891, column: 2, scope: !13898)
!13963 = !DILocation(line: 3892, column: 34, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13898, file: !3, line: 3891, column: 12)
!13965 = !DILocation(line: 3892, column: 42, scope: !13964)
!13966 = !DILocation(line: 3892, column: 3, scope: !13964)
!13967 = !DILocation(line: 3893, column: 22, scope: !13964)
!13968 = !DILocation(line: 3893, column: 3, scope: !13964)
!13969 = !DILocation(line: 3895, column: 20, scope: !13964)
!13970 = !DILocation(line: 3895, column: 28, scope: !13964)
!13971 = !DILocation(line: 3895, column: 3, scope: !13964)
!13972 = !DILocation(line: 3896, column: 22, scope: !13964)
!13973 = !DILocation(line: 3896, column: 3, scope: !13964)
!13974 = !DILocation(line: 3898, column: 11, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13964, file: !3, line: 3898, column: 7)
!13976 = !DILocation(line: 3898, column: 19, scope: !13975)
!13977 = !DILocation(line: 3898, column: 7, scope: !13975)
!13978 = !DILocation(line: 3898, column: 42, scope: !13975)
!13979 = !DILocation(line: 3898, column: 7, scope: !13964)
!13980 = !DILocation(line: 3899, column: 4, scope: !13975)
!13981 = distinct !{!13981, !13962, !13982}
!13982 = !DILocation(line: 3900, column: 2, scope: !13898)
!13983 = !DILocation(line: 3903, column: 10, scope: !13898)
!13984 = !DILocation(line: 3903, column: 18, scope: !13898)
!13985 = !DILocation(line: 3903, column: 2, scope: !13898)
!13986 = !DILocation(line: 3904, column: 1, scope: !13898)
!13987 = distinct !DISubprogram(name: "waiting_timeout", scope: !3, file: !3, line: 836, type: !2186, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!13988 = !DILocation(line: 407, column: 64, scope: !6116, inlinedAt: !13989)
!13989 = distinct !DILocation(line: 844, column: 2, scope: !13987)
!13990 = !DILocation(line: 407, column: 84, scope: !6116, inlinedAt: !13989)
!13991 = !DILocation(line: 327, column: 67, scope: !6125, inlinedAt: !13992)
!13992 = distinct !DILocation(line: 842, column: 2, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !13994, file: !3, line: 842, column: 2)
!13994 = distinct !DILexicalBlock(scope: !13995, file: !3, line: 842, column: 2)
!13995 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 842, column: 2)
!13996 = distinct !DILexicalBlock(scope: !13997, file: !3, line: 842, column: 2)
!13997 = distinct !DILexicalBlock(scope: !13987, file: !3, line: 842, column: 2)
!13998 = !DILocalVariable(name: "t", arg: 1, scope: !13987, file: !3, line: 836, type: !2188)
!13999 = !DILocation(line: 836, column: 48, scope: !13987)
!14000 = !DILocalVariable(name: "flags", scope: !13987, file: !3, line: 838, type: !248)
!14001 = !DILocation(line: 838, column: 16, scope: !13987)
!14002 = !DILocalVariable(name: "acb", scope: !13987, file: !3, line: 839, type: !185)
!14003 = !DILocation(line: 839, column: 24, scope: !13987)
!14004 = !DILocalVariable(name: "__mptr", scope: !14005, file: !3, line: 839, type: !256)
!14005 = distinct !DILexicalBlock(scope: !13987, file: !3, line: 839, column: 30)
!14006 = !DILocation(line: 839, column: 30, scope: !14005)
!14007 = !DILocation(line: 839, column: 30, scope: !14008)
!14008 = distinct !DILexicalBlock(scope: !14005, file: !3, line: 839, column: 30)
!14009 = !DILocation(line: 840, column: 2, scope: !13987)
!14010 = !DILocation(line: 840, column: 2, scope: !14011)
!14011 = distinct !DILexicalBlock(scope: !13987, file: !3, line: 840, column: 2)
!14012 = !DILocation(line: 842, column: 2, scope: !13987)
!14013 = !DILocation(line: 842, column: 2, scope: !13997)
!14014 = !DILocalVariable(name: "__dummy", scope: !14015, file: !3, line: 842, type: !248)
!14015 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 842, column: 2)
!14016 = !DILocation(line: 842, column: 2, scope: !14015)
!14017 = !DILocalVariable(name: "__dummy2", scope: !14015, file: !3, line: 842, type: !248)
!14018 = !DILocation(line: 842, column: 2, scope: !13996)
!14019 = !DILocation(line: 842, column: 2, scope: !13995)
!14020 = !DILocation(line: 842, column: 2, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !13995, file: !3, line: 842, column: 2)
!14022 = !DILocalVariable(name: "__dummy", scope: !14023, file: !3, line: 842, type: !248)
!14023 = distinct !DILexicalBlock(scope: !14024, file: !3, line: 842, column: 2)
!14024 = distinct !DILexicalBlock(scope: !14021, file: !3, line: 842, column: 2)
!14025 = !DILocation(line: 842, column: 2, scope: !14023)
!14026 = !DILocalVariable(name: "__dummy2", scope: !14023, file: !3, line: 842, type: !248)
!14027 = !DILocation(line: 842, column: 2, scope: !14024)
!14028 = !DILocation(line: 842, column: 2, scope: !13994)
!14029 = !{i32 -2140875930}
!14030 = !DILocation(line: 842, column: 2, scope: !13993)
!14031 = !DILocation(line: 329, column: 10, scope: !6125, inlinedAt: !13992)
!14032 = !DILocation(line: 329, column: 16, scope: !6125, inlinedAt: !13992)
!14033 = !DILocation(line: 843, column: 23, scope: !13987)
!14034 = !DILocation(line: 843, column: 2, scope: !13987)
!14035 = !DILocation(line: 844, column: 2, scope: !13987)
!14036 = !DILocation(line: 409, column: 2, scope: !6183, inlinedAt: !13989)
!14037 = !DILocation(line: 409, column: 2, scope: !6188, inlinedAt: !13989)
!14038 = !DILocation(line: 409, column: 2, scope: !6189, inlinedAt: !13989)
!14039 = !DILocation(line: 409, column: 2, scope: !6196, inlinedAt: !13989)
!14040 = !DILocation(line: 409, column: 2, scope: !6199, inlinedAt: !13989)
!14041 = !DILocation(line: 845, column: 1, scope: !13987)
!14042 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !114, file: !114, line: 660, type: !14043, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!14043 = !DISubroutineType(types: !14044)
!14044 = !{null, !1977, !256}
!14045 = !DILocalVariable(name: "dev", arg: 1, scope: !14042, file: !114, line: 660, type: !1977)
!14046 = !DILocation(line: 660, column: 51, scope: !14042)
!14047 = !DILocalVariable(name: "data", arg: 2, scope: !14042, file: !114, line: 660, type: !256)
!14048 = !DILocation(line: 660, column: 62, scope: !14042)
!14049 = !DILocation(line: 662, column: 21, scope: !14042)
!14050 = !DILocation(line: 662, column: 2, scope: !14042)
!14051 = !DILocation(line: 662, column: 7, scope: !14042)
!14052 = !DILocation(line: 662, column: 19, scope: !14042)
!14053 = !DILocation(line: 663, column: 1, scope: !14042)
!14054 = distinct !DISubprogram(name: "adapter_uninit_chip", scope: !3, file: !3, line: 4424, type: !6113, scopeLine: 4425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!14055 = !DILocalVariable(name: "acb", arg: 1, scope: !14054, file: !3, line: 4424, type: !185)
!14056 = !DILocation(line: 4424, column: 55, scope: !14054)
!14057 = !DILocation(line: 4427, column: 2, scope: !14054)
!14058 = !DILocation(line: 4428, column: 2, scope: !14054)
!14059 = !DILocation(line: 4431, column: 6, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14054, file: !3, line: 4431, column: 6)
!14061 = !DILocation(line: 4431, column: 11, scope: !14060)
!14062 = !DILocation(line: 4431, column: 18, scope: !14060)
!14063 = !DILocation(line: 4431, column: 6, scope: !14054)
!14064 = !DILocation(line: 4432, column: 18, scope: !14060)
!14065 = !DILocation(line: 4432, column: 3, scope: !14060)
!14066 = !DILocation(line: 4435, column: 2, scope: !14054)
!14067 = !DILocation(line: 4436, column: 1, scope: !14054)
!14068 = distinct !DISubprogram(name: "adapter_remove_and_free_all_devices", scope: !3, file: !3, line: 3742, type: !6113, scopeLine: 3743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!14069 = !DILocalVariable(name: "acb", arg: 1, scope: !14068, file: !3, line: 3742, type: !185)
!14070 = !DILocation(line: 3742, column: 71, scope: !14068)
!14071 = !DILocalVariable(name: "dcb", scope: !14068, file: !3, line: 3744, type: !5226)
!14072 = !DILocation(line: 3744, column: 23, scope: !14068)
!14073 = !DILocalVariable(name: "tmp", scope: !14068, file: !3, line: 3745, type: !5226)
!14074 = !DILocation(line: 3745, column: 23, scope: !14068)
!14075 = !DILocation(line: 3746, column: 2, scope: !14068)
!14076 = !DILocation(line: 3746, column: 2, scope: !14077)
!14077 = distinct !DILexicalBlock(scope: !14068, file: !3, line: 3746, column: 2)
!14078 = !DILocalVariable(name: "__mptr", scope: !14079, file: !3, line: 3749, type: !256)
!14079 = distinct !DILexicalBlock(scope: !14080, file: !3, line: 3749, column: 2)
!14080 = distinct !DILexicalBlock(scope: !14068, file: !3, line: 3749, column: 2)
!14081 = !DILocation(line: 3749, column: 2, scope: !14079)
!14082 = !DILocation(line: 3749, column: 2, scope: !14083)
!14083 = distinct !DILexicalBlock(scope: !14079, file: !3, line: 3749, column: 2)
!14084 = !DILocation(line: 3749, column: 2, scope: !14080)
!14085 = !DILocalVariable(name: "__mptr", scope: !14086, file: !3, line: 3749, type: !256)
!14086 = distinct !DILexicalBlock(scope: !14080, file: !3, line: 3749, column: 2)
!14087 = !DILocation(line: 3749, column: 2, scope: !14086)
!14088 = !DILocation(line: 3749, column: 2, scope: !14089)
!14089 = distinct !DILexicalBlock(scope: !14086, file: !3, line: 3749, column: 2)
!14090 = !DILocation(line: 3749, column: 2, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14080, file: !3, line: 3749, column: 2)
!14092 = !DILocation(line: 3750, column: 34, scope: !14091)
!14093 = !DILocation(line: 3750, column: 39, scope: !14091)
!14094 = !DILocation(line: 3750, column: 3, scope: !14091)
!14095 = !DILocalVariable(name: "__mptr", scope: !14096, file: !3, line: 3749, type: !256)
!14096 = distinct !DILexicalBlock(scope: !14091, file: !3, line: 3749, column: 2)
!14097 = !DILocation(line: 3749, column: 2, scope: !14096)
!14098 = !DILocation(line: 3749, column: 2, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14096, file: !3, line: 3749, column: 2)
!14100 = distinct !{!14100, !14084, !14101}
!14101 = !DILocation(line: 3750, column: 42, scope: !14080)
!14102 = !DILocation(line: 3751, column: 1, scope: !14068)
!14103 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !5303, file: !5303, line: 1865, type: !14104, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!14104 = !DISubroutineType(types: !14105)
!14105 = !{!256, !5301}
!14106 = !DILocalVariable(name: "pdev", arg: 1, scope: !14103, file: !5303, line: 1865, type: !5301)
!14107 = !DILocation(line: 1865, column: 53, scope: !14103)
!14108 = !DILocation(line: 1867, column: 26, scope: !14103)
!14109 = !DILocation(line: 1867, column: 32, scope: !14103)
!14110 = !DILocation(line: 1867, column: 9, scope: !14103)
!14111 = !DILocation(line: 1867, column: 2, scope: !14103)
!14112 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !114, file: !114, line: 655, type: !14113, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !216)
!14113 = !DISubroutineType(types: !14114)
!14114 = !{!256, !2337}
!14115 = !DILocalVariable(name: "dev", arg: 1, scope: !14112, file: !114, line: 655, type: !2337)
!14116 = !DILocation(line: 655, column: 58, scope: !14112)
!14117 = !DILocation(line: 657, column: 9, scope: !14112)
!14118 = !DILocation(line: 657, column: 14, scope: !14112)
!14119 = !DILocation(line: 657, column: 2, scope: !14112)
