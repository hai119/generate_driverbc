; ModuleID = '../bcout/drivers/scsi/megaraid.llvm.bc'
source_filename = "drivers/scsi/megaraid.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_megaraid_init6:\09\09\09"
module asm ".long\09megaraid_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.module_version_attribute = type { %struct.module_attribute, i8*, i8* }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.attribute = type { i8*, i16 }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.63, %struct.list_head, %struct.list_head, %union.anon.64 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.61 }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.2, %union.anon.53, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.53 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.54, i32 }
%union.anon.54 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic_t = type { i32 }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.kgid_t = type { i32 }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rb_root = type { %struct.rb_node* }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.31, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.31 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.67, %union.anon.68, %union.anon.69, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.72, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type { %struct.anon.66, %struct.delayed_work, [1 x %struct.cpumask], i32, i32, i64, i8*, %struct.request_queue*, %struct.blk_flush_queue*, i8*, %struct.sbitmap, %struct.blk_mq_ctx*, i32, i16, i16, %struct.blk_mq_ctx**, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, %struct.blk_mq_tags*, %struct.blk_mq_tags*, i64, i64, [7 x i64], i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, i64, i64, i64, %struct.list_head, [0 x %struct.srcu_struct] }
%struct.anon.66 = type { %struct.spinlock, %struct.list_head, i64 }
%struct.cpumask = type { [1 x i64] }
%struct.sbitmap = type { i32, i32, i32, %struct.sbitmap_word* }
%struct.sbitmap_word = type { i64, i64, i64, %struct.spinlock }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.blk_mq_tags = type opaque
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%union.anon.67 = type { %struct.hlist_node }
%union.anon.68 = type { %struct.rb_node }
%union.anon.69 = type { %struct.anon.71 }
%struct.anon.71 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.72 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.73, void (i8*)*, i8* }
%union.anon.73 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.74, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.74 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.32, %union.anon.33, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%union.anon.32 = type { %struct.list_head }
%union.anon.33 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*)*, void (%struct.request_queue*)*, i32 (%struct.request*, i1)*, i32 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*)*, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)*, void (%struct.blk_mq_tag_set*, %struct.request*, i32)*, void (%struct.request*)*, void (%struct.request*)*, i1 (%struct.request_queue*)*, i32 (%struct.blk_mq_tag_set*)* }
%struct.blk_mq_queue_data = type { %struct.request*, i8 }
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, %struct.blk_mq_ops*, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, %struct.blk_mq_tags**, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { i32*, i32, i32 }
%struct.sbitmap_queue = type { %struct.sbitmap, i32*, i32, %struct.atomic_t, %struct.sbq_wait_state*, %struct.atomic_t, i8, i32 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.46, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.34 }
%struct.anon.34 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.45, i32, [12 x i8] }
%union.anon.45 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.46 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.47, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.50 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, i64 }
%union.anon.50 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.63 = type { %struct.list_head }
%union.anon.64 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.55, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.56, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.57, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.60, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.55 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.56 = type { %struct.callback_head }
%union.anon.57 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.60 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.58 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.58 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.65, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.65 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.module = type opaque
%struct.module_param_attrs = type opaque
%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon.76 }
%union.anon.76 = type { i8* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.77, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.77 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.mega_hbas = type { i32, %struct.adapter_t* }
%struct.adapter_t = type { i32, i32, i64, i8*, %struct.mbox64_t*, i64, %struct.mbox64_t*, %struct.mbox_t*, i64, %struct.pci_dev*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.Scsi_Host*, i8*, i64, %struct.mega_product_info, i8, %struct.scb_t*, %struct.atomic_t, i8, [7 x i8], [7 x i8], %struct.proc_dir_entry*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.atomic_t, %struct.spinlock, [9 x i8], i32, i8, %struct.scb_t, %struct.mutex, i32, %struct.completion, i32 }
%struct.mbox64_t = type <{ i32, i32, %struct.mbox_t }>
%struct.mbox_t = type { %struct.mbox_out, %struct.mbox_in }
%struct.mbox_out = type <{ i8, i8, i16, i32, i32, i8, i8, i8 }>
%struct.mbox_in = type { i8, i8, i8, [46 x i8], i8, i8 }
%struct.Scsi_Host = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.spinlock*, %struct.mutex, %struct.list_head, %struct.task_struct*, %struct.completion*, %struct.wait_queue_head, %struct.scsi_host_template*, %struct.scsi_transport_template*, %struct.blk_mq_tag_set, %struct.atomic_t, i32, i32, i32, i32, i64, i32, i32, i64, i32, i16, i32, i32, i16, i16, i16, i32, i32, i64, i64, i32, i16, [20 x i8], %struct.workqueue_struct*, %struct.workqueue_struct*, i32, i32, i8, i64, i64, i8, i8, i32, i32, %struct.device, %struct.device, i8*, %struct.device*, [0 x i64] }
%struct.scsi_host_template = type { %struct.module*, i8*, {}*, i32 (%struct.scsi_device*, i32, i8*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, void (%struct.Scsi_Host*, i16)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_device*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_target*)*, void (%struct.scsi_target*)*, i32 (%struct.Scsi_Host*, i64)*, void (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32)*, i32 (%struct.Scsi_Host*)*, i1 (%struct.request*)*, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)*, void (%struct.scsi_device*)*, i32 (%struct.seq_file*, %struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*, i8*, i32)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, i32)*, i8*, %struct.proc_dir_entry*, i32, i32, i16, i16, i32, i32, i64, i64, i16, i8, i32, i8, i32, %struct.device_attribute**, %struct.device_attribute**, %struct.attribute_group**, i64, i32, %struct.scsi_host_cmd_pool*, i32 }
%struct.scsi_device = type { %struct.Scsi_Host*, %struct.request_queue*, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, %struct.list_head, i16, i16, i16, i16, i64, i64, i64, i32, i32, i64, i32, i32, i8*, i8, i8, i8, %struct.mutex, i8, i8*, i8*, i8*, i8*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, i8, %struct.scsi_target*, i64, i32, [6 x i8], i8, %struct.atomic_t, [1 x i64], [1 x i64], %struct.list_head, %struct.work_struct, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.device, %struct.device, %struct.execute_work, %struct.work_struct, %struct.scsi_device_handler*, i8*, i64, i8*, i8, %struct.mutex, i32, %struct.task_struct*, [0 x i64] }
%struct.scsi_vpd = type { %struct.callback_head, i32, [0 x i8] }
%struct.scsi_target = type { %struct.scsi_device*, %struct.list_head, %struct.list_head, %struct.device, %struct.kref, i32, i32, i8, %struct.atomic_t, %struct.atomic_t, i32, i32, i8, i32, i8*, [0 x i64] }
%struct.execute_work = type { %struct.work_struct }
%struct.scsi_device_handler = type opaque
%struct.scsi_cmnd = type { %struct.scsi_request, %struct.scsi_device*, %struct.list_head, %struct.delayed_work, %struct.callback_head, i32, i64, i32, i32, i8, i8, i8, i16, i32, i8*, %struct.scsi_data_buffer, %struct.scsi_data_buffer*, i32, i32, %struct.request*, i8*, void (%struct.scsi_cmnd*)*, %struct.scsi_pointer, i8*, i32, i32, i64, i8, i32 }
%struct.scsi_request = type { [16 x i8], i8*, i16, i32, i32, i32, i32, i8* }
%struct.scsi_data_buffer = type { %struct.sg_table, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.scsi_pointer = type { i8*, i32, %struct.scatterlist*, i32, i64, i32, i32, i32, i32, i32 }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.scsi_host_cmd_pool = type opaque
%struct.scsi_transport_template = type opaque
%struct.mega_product_info = type { i32, i32, [16 x i8], [16 x i8], [80 x i8], i8, i8, i8, i8, i32, i16, i16, i16, i8, [889 x i8] }
%struct.scb_t = type { i32, i32, %struct.list_head, [66 x i8], i32, i32, %struct.scsi_cmnd*, i64, i64, %struct.mega_sglist*, %struct.mega_sgl64*, i64, %struct.mega_passthru*, i64, %struct.mega_ext_passthru*, i64 }
%struct.mega_sglist = type { i32, i32 }
%struct.mega_sgl64 = type <{ i64, i32 }>
%struct.mega_passthru = type { i8, i8, i8, i8, i8, i8, [10 x i8], i8, i8, [32 x i8], i8, i8, i32, i32 }
%struct.mega_ext_passthru = type { i8, i8, i8, i8, i8, i8, i8, i8, [16 x i8], i8, i8, i8, [32 x i8], i8, i32, i32 }
%struct.mcontroller = type { i64, i8, i8, i8, i16, i8, i16, i16, i8, i32 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.mega_inquiry3 = type <{ i32, %struct.notify, [88 x i8], i8, i8, i8, i8, i8, i8, [5 x i8], [5 x i16], [40 x i32], [40 x i8], [40 x i8], [256 x i8], [16 x i16], [80 x i8], [263 x i8] }>
%struct.notify = type { i32, i8, i8, i16, i8, [3 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.mraid_ext_inquiry = type <{ %struct.mraid_inquiry, [5 x i16], i8, i8, [2 x i8] }>
%struct.mraid_inquiry = type { %struct.mega_adp_info, %struct.mega_ldrv_info, %struct.mega_pdrv_info }
%struct.mega_adp_info = type { i8, i8, i8, i8, [4 x i8], i16, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, i8, i8 }
%struct.mega_ldrv_info = type { i8, [3 x i8], [8 x i32], [8 x i8], [8 x i8] }
%struct.mega_pdrv_info = type { [75 x i8], i8 }
%struct.private_bios_data = type { i8, i8, [12 x i8], i16 }
%struct.megacmd_t = type <{ i8, i8, i8, i8, i32, i32, i8, [3 x i8], i8, i8 }>
%struct.logdrv_param = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.disk_array_40ld = type { i8, [3 x i8], [40 x %struct.logdrv_40ld], [75 x %struct.phys_drv] }
%struct.logdrv_40ld = type { %struct.logdrv_param, [8 x %struct.adp_span_40ld] }
%struct.adp_span_40ld = type { i32, i32, [32 x %struct.adp_device] }
%struct.adp_device = type { i8, i8 }
%struct.phys_drv = type { i8, i8, i8, i8, i32 }
%struct.disk_array_8ld = type { i8, [3 x i8], [8 x %struct.logdrv_8ld], [75 x %struct.phys_drv] }
%struct.logdrv_8ld = type { %struct.logdrv_param, [8 x %struct.adp_span_8ld] }
%struct.adp_span_8ld = type { i32, i32, [8 x %struct.adp_device] }
%struct.nitioctl_t = type { [8 x i8], i32, i32, %union.anon.78, i32, i32 }
%union.anon.78 = type { i8*, [16 x i8] }
%struct.uioctl_t = type <{ i32, i32, %union.anon.79, [18 x i8], %struct.mega_passthru, i8* }>
%union.anon.79 = type { [16 x i8] }
%struct.anon.80 = type <{ i8, i8, i16, i8*, i32 }>

@__UNIQUE_ID_author296 = internal constant [29 x i8] c"megaraid.author=sju@lsil.com\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_description297 = internal constant [54 x i8] c"megaraid.description=LSI Logic MegaRAID legacy driver\00", section ".modinfo", align 1, !dbg !5930
@__UNIQUE_ID_file298 = internal constant [36 x i8] c"megaraid.file=drivers/scsi/megaraid\00", section ".modinfo", align 1, !dbg !5935
@__UNIQUE_ID_license299 = internal constant [21 x i8] c"megaraid.license=GPL\00", section ".modinfo", align 1, !dbg !5940
@__UNIQUE_ID_version300 = internal constant [24 x i8] c"megaraid.version=2.00.4\00", section ".modinfo", align 1, !dbg !5945
@___modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i16 292 }, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)* @__modver_version_show, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)* null, void (%struct.module*, i8*)* null, i32 (%struct.module*)* null, void (%struct.module*)* null }, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0) }, align 8, !dbg !6089
@__modver_attr = internal constant %struct.module_version_attribute* @___modver_attr, section "__modver", align 8, !dbg !5948
@__param_str_max_cmd_per_lun = internal constant [25 x i8] c"megaraid.max_cmd_per_lun\00", align 16, !dbg !6091
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 8
@max_cmd_per_lun = internal global i32 63, align 4, !dbg !6096
@__param_max_cmd_per_lun = internal constant %struct.kernel_param { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__param_str_max_cmd_per_lun, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 0, i8 -1, i8 0, %union.anon.76 { i8* bitcast (i32* @max_cmd_per_lun to i8*) } }, section "__param", align 8, !dbg !5993
@__UNIQUE_ID_max_cmd_per_luntype301 = internal constant [39 x i8] c"megaraid.parmtype=max_cmd_per_lun:uint\00", section ".modinfo", align 1, !dbg !6045
@__UNIQUE_ID_max_cmd_per_lun302 = internal constant [122 x i8] c"megaraid.parm=max_cmd_per_lun:Maximum number of commands which can be issued to a single LUN (default=DEF_CMD_PER_LUN=63)\00", section ".modinfo", align 1, !dbg !6050
@__param_str_max_sectors_per_io = internal constant [28 x i8] c"megaraid.max_sectors_per_io\00", align 16, !dbg !6098
@param_ops_ushort = external dso_local constant %struct.kernel_param_ops, align 8
@max_sectors_per_io = internal global i16 128, align 2, !dbg !6103
@__param_max_sectors_per_io = internal constant %struct.kernel_param { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__param_str_max_sectors_per_io, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_ushort, i16 0, i8 -1, i8 0, %union.anon.76 { i8* bitcast (i16* @max_sectors_per_io to i8*) } }, section "__param", align 8, !dbg !6055
@__UNIQUE_ID_max_sectors_per_iotype303 = internal constant [44 x i8] c"megaraid.parmtype=max_sectors_per_io:ushort\00", section ".modinfo", align 1, !dbg !6057
@__UNIQUE_ID_max_sectors_per_io304 = internal constant [108 x i8] c"megaraid.parm=max_sectors_per_io:Maximum number of sectors per I/O request (default=MAX_SECTORS_PER_IO=128)\00", section ".modinfo", align 1, !dbg !6060
@__param_str_max_mbox_busy_wait = internal constant [28 x i8] c"megaraid.max_mbox_busy_wait\00", align 16, !dbg !6105
@max_mbox_busy_wait = internal global i16 10, align 2, !dbg !6107
@__param_max_mbox_busy_wait = internal constant %struct.kernel_param { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__param_str_max_mbox_busy_wait, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_ushort, i16 0, i8 -1, i8 0, %union.anon.76 { i8* bitcast (i16* @max_mbox_busy_wait to i8*) } }, section "__param", align 8, !dbg !6065
@__UNIQUE_ID_max_mbox_busy_waittype305 = internal constant [44 x i8] c"megaraid.parmtype=max_mbox_busy_wait:ushort\00", section ".modinfo", align 1, !dbg !6067
@__UNIQUE_ID_max_mbox_busy_wait306 = internal constant [110 x i8] c"megaraid.parm=max_mbox_busy_wait:Maximum wait for mailbox in microseconds if busy (default=MBOX_BUSY_WAIT=10)\00", section ".modinfo", align 1, !dbg !6069
@megaraid_info.buffer = internal global [512 x i8] zeroinitializer, align 16, !dbg !6074
@.str = private unnamed_addr constant [60 x i8] c"LSI Logic MegaRAID %s %d commands %d targs %d chans %d luns\00", align 1
@major = internal global i32 0, align 4, !dbg !6087
@.str.1 = private unnamed_addr constant [15 x i8] c"megadev_legacy\00", align 1
@megaraid_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([4 x %struct.pci_device_id], [4 x %struct.pci_device_id]* @megaraid_pci_tbl, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @megaraid_probe_one, void (%struct.pci_dev*)* @megaraid_remove_one, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* @megaraid_shutdown, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !6109
@.str.2 = private unnamed_addr constant [9 x i8] c"megaraid\00", align 1
@__UNIQUE_ID___addressable_megaraid_init314 = internal global i8* bitcast (i32 ()* @megaraid_init to i8*), section ".discard.addressable", align 8, !dbg !6080
@__exitcall_megaraid_exit = internal global void ()* @megaraid_exit, section ".exitcall.exit", align 8, !dbg !6082
@.str.3 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"2.00.4\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"megaraid_legacy\00", align 1
@megaraid_pci_tbl = internal global [4 x %struct.pci_device_id] [%struct.pci_device_id { i32 4126, i32 36880, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4126, i32 36960, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 32902, i32 6496, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !6111
@hba_count = internal global i32 0, align 4, !dbg !6117
@.str.6 = private unnamed_addr constant [25 x i8] c"found 0x%4.04x:0x%4.04x\0A\00", align 1
@iomem_resource = external dso_local global %struct.resource, align 8
@.str.7 = private unnamed_addr constant [18 x i8] c"mem region busy!\0A\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"could not map hba memory\0A\00", align 1
@ioport_resource = external dso_local global %struct.resource, align 8
@.str.9 = private unnamed_addr constant [51 x i8] c"scsi%d:Found MegaRAID controller at 0x%lx, IRQ:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"out of RAM\0A\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"Couldn't register IRQ %d!\0A\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"3.00\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"3.01\00", align 1
@.str.14 = private unnamed_addr constant [435 x i8] c"Your card is a Dell PERC 2/SC RAID controller with firmware\0Amegaraid: 3.00 or 3.01.  This driver is known to have corruption issues\0Amegaraid: with those firmware versions on this specific card.  In order\0Amegaraid: to protect your data, please upgrade your firmware to version\0Amegaraid: 3.10 or later, available from the Dell Technical Support web\0Amegaraid: site at\0Ahttp://support.dell.com/us/en/filelib/download/index.asp?fileid=2940\0A\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"H01.07\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"H01.08\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"H01.09\00", align 1
@.str.18 = private unnamed_addr constant [121 x i8] c"Firmware H.01.07, H.01.08, and H.01.09 on 1M/2M controllers\0Ado not support 64 bit addressing.\0ADISABLING 64 bit support.\0A\00", align 1
@mega_hbas = internal global [32 x %struct.mega_hbas] zeroinitializer, align 16, !dbg !6129
@hba_soft_state = internal global [32 x %struct.adapter_t*] zeroinitializer, align 16, !dbg !6136
@mcontroller = internal global [32 x %struct.mcontroller] zeroinitializer, align 16, !dbg !6139
@megaraid_probe_one.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !6114
@.str.19 = private unnamed_addr constant [18 x i8] c"&adapter->int_mtx\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"Cluster driver, initiator id:%d\0A\00", align 1
@mega_proc_dir_entry = internal global %struct.proc_dir_entry* null, align 8, !dbg !6159
@.str.21 = private unnamed_addr constant [9 x i8] c"MegaRAID\00", align 1
@megaraid_template = internal global { %struct.module*, i8*, i8* (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32, i8*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, void (%struct.Scsi_Host*, i16)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_device*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_target*)*, void (%struct.scsi_target*)*, i32 (%struct.Scsi_Host*, i64)*, void (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32)*, i32 (%struct.Scsi_Host*)*, i1 (%struct.request*)*, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)*, void (%struct.scsi_device*)*, i32 (%struct.seq_file*, %struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*, i8*, i32)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, i32)*, i8*, %struct.proc_dir_entry*, i32, i32, i16, i16, i32, i32, i64, i64, i16, i8, i32, i8, i32, %struct.device_attribute**, %struct.device_attribute**, %struct.attribute_group**, i64, i32, %struct.scsi_host_cmd_pool*, i32 } { %struct.module* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i32 0, i32 0), i8* (%struct.Scsi_Host*)* @megaraid_info, i32 (%struct.scsi_device*, i32, i8*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)* @megaraid_queue, void (%struct.Scsi_Host*, i16)* null, i32 (%struct.scsi_cmnd*)* @megaraid_abort, i32 (%struct.scsi_cmnd*)* @megaraid_reset, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.scsi_cmnd*)* @megaraid_reset, i32 (%struct.scsi_cmnd*)* @megaraid_reset, i32 (%struct.scsi_device*)* null, i32 (%struct.scsi_device*)* null, void (%struct.scsi_device*)* null, i32 (%struct.scsi_target*)* null, void (%struct.scsi_target*)* null, i32 (%struct.Scsi_Host*, i64)* null, void (%struct.Scsi_Host*)* null, i32 (%struct.scsi_device*, i32)* null, i32 (%struct.Scsi_Host*)* null, i1 (%struct.request*)* null, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)* @megaraid_biosparam, void (%struct.scsi_device*)* null, i32 (%struct.seq_file*, %struct.Scsi_Host*)* null, i32 (%struct.Scsi_Host*, i8*, i32)* null, i32 (%struct.scsi_cmnd*)* null, i32 (%struct.Scsi_Host*, i32)* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), %struct.proc_dir_entry* null, i32 126, i32 7, i16 64, i16 0, i32 128, i32 0, i64 0, i64 0, i16 63, i8 0, i32 0, i8 64, i32 0, %struct.device_attribute** null, %struct.device_attribute** null, %struct.attribute_group** null, i64 0, i32 0, %struct.scsi_host_cmd_pool* null, i32 0 }, align 8, !dbg !6119
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.23 = private unnamed_addr constant [53 x i8] c"scsi%d: scanning scsi channel %d for logical drives\0A\00", align 1
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@vmemmap_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@.str.24 = private unnamed_addr constant [24 x i8] c"drivers/scsi/megaraid.c\00", align 1
@.str.25 = private unnamed_addr constant [61 x i8] c"scsi%d: scanning scsi channel %d [P%d] for physical devices\0A\00", align 1
@.str.26 = private unnamed_addr constant [28 x i8] c"%s cmd=%x <c=%d t=%d l=%d>\0A\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"ABORTING\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"RESET\00", align 1
@.str.29 = private unnamed_addr constant [18 x i8] c"%s[%x], fw owner\0A\00", align 1
@.str.30 = private unnamed_addr constant [23 x i8] c"%s-[%x], driver owner\0A\00", align 1
@.str.31 = private unnamed_addr constant [26 x i8] c"reservation reset failed\0A\00", align 1
@.str.32 = private unnamed_addr constant [19 x i8] c"reservation reset\0A\00", align 1
@trace_level = internal global i32 0, align 4, !dbg !6121
@.str.33 = private unnamed_addr constant [30 x i8] c"cmd [%x, %x, %x] status:[%x]\0A\00", align 1
@.str.34 = private unnamed_addr constant [46 x i8] c"invalid partition on this disk on channel %d\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.35 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.36 = private unnamed_addr constant [51 x i8] c"invalid command Id %d, scb->state:%x, scsi cmd:%p\0A\00", align 1
@.str.37 = private unnamed_addr constant [27 x i8] c"aborted cmd [%x] complete\0A\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"reset cmd [%x] complete\0A\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c"invalid sg\0A\00", align 1
@.str.40 = private unnamed_addr constant [40 x i8] c"Product_info cmd failed with error: %d\0A\00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c"%c%d%d.%d%d\00", align 1
@.str.42 = private unnamed_addr constant [36 x i8] c"[%s:%s] detected %d logical drives\0A\00", align 1
@.str.43 = private unnamed_addr constant [24 x i8] c"supports extended CDBs\0A\00", align 1
@.str.44 = private unnamed_addr constant [25 x i8] c"Blocked mailbox......!!\0A\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !6123
@.str.45 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.46 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@phys_base = external dso_local global i64, align 8
@.str.47 = private unnamed_addr constant [21 x i8] c"channel[%d] is raid\0A\00", align 1
@.str.48 = private unnamed_addr constant [21 x i8] c"channel[%d] is scsi\0A\00", align 1
@.str.49 = private unnamed_addr constant [29 x i8] c"RAID: Can't allocate sglist\0A\00", align 1
@.str.50 = private unnamed_addr constant [31 x i8] c"RAID: Can't allocate passthru\0A\00", align 1
@.str.51 = private unnamed_addr constant [34 x i8] c"Can't allocate extended passthru\0A\00", align 1
@__init_completion.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !6154
@.str.52 = private unnamed_addr constant [9 x i8] c"&x->wait\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"hba%d\00", align 1
@.str.54 = private unnamed_addr constant [19 x i8] c"proc_mkdir failed\0A\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"config\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"stat\00", align 1
@.str.57 = private unnamed_addr constant [8 x i8] c"mailbox\00", align 1
@.str.58 = private unnamed_addr constant [13 x i8] c"rebuild-rate\00", align 1
@.str.59 = private unnamed_addr constant [15 x i8] c"battery-status\00", align 1
@.str.60 = private unnamed_addr constant [15 x i8] c"diskdrives-ch0\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"diskdrives-ch1\00", align 1
@.str.62 = private unnamed_addr constant [15 x i8] c"diskdrives-ch2\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"diskdrives-ch3\00", align 1
@.str.64 = private unnamed_addr constant [15 x i8] c"raiddrives-0-9\00", align 1
@.str.65 = private unnamed_addr constant [17 x i8] c"raiddrives-10-19\00", align 1
@.str.66 = private unnamed_addr constant [17 x i8] c"raiddrives-20-29\00", align 1
@.str.67 = private unnamed_addr constant [17 x i8] c"raiddrives-30-39\00", align 1
@.str.68 = private unnamed_addr constant [53 x i8] c"v2.00.4 (Release Date: Thu Feb 9 08:51:30 EST 2006)\0A\00", align 1
@.str.69 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.70 = private unnamed_addr constant [18 x i8] c"Controller Type: \00", align 1
@.str.71 = private unnamed_addr constant [37 x i8] c"438/466/467/471/493/518/520/531/532\0A\00", align 1
@.str.72 = private unnamed_addr constant [13 x i8] c"418/428/434\0A\00", align 1
@.str.73 = private unnamed_addr constant [39 x i8] c"Controller Supports 40 Logical Drives\0A\00", align 1
@.str.74 = private unnamed_addr constant [48 x i8] c"Controller capable of 64-bit memory addressing\0A\00", align 1
@.str.75 = private unnamed_addr constant [43 x i8] c"Controller using 64-bit memory addressing\0A\00", align 1
@.str.76 = private unnamed_addr constant [50 x i8] c"Controller is not using 64-bit memory addressing\0A\00", align 1
@.str.77 = private unnamed_addr constant [25 x i8] c"Base = %08lx, Irq = %d, \00", align 1
@.str.78 = private unnamed_addr constant [36 x i8] c"Logical Drives = %d, Channels = %d\0A\00", align 1
@.str.79 = private unnamed_addr constant [29 x i8] c"Version =%s:%s, DRAM = %dMb\0A\00", align 1
@.str.80 = private unnamed_addr constant [54 x i8] c"Controller Queue Depth = %d, Driver Queue Depth = %d\0A\00", align 1
@.str.81 = private unnamed_addr constant [25 x i8] c"support_ext_cdb    = %d\0A\00", align 1
@.str.82 = private unnamed_addr constant [25 x i8] c"support_random_del = %d\0A\00", align 1
@.str.83 = private unnamed_addr constant [25 x i8] c"boot_ldrv_enabled  = %d\0A\00", align 1
@.str.84 = private unnamed_addr constant [25 x i8] c"boot_ldrv          = %d\0A\00", align 1
@.str.85 = private unnamed_addr constant [25 x i8] c"boot_pdrv_enabled  = %d\0A\00", align 1
@.str.86 = private unnamed_addr constant [25 x i8] c"boot_pdrv_ch       = %d\0A\00", align 1
@.str.87 = private unnamed_addr constant [25 x i8] c"boot_pdrv_tgt      = %d\0A\00", align 1
@.str.88 = private unnamed_addr constant [25 x i8] c"quiescent          = %d\0A\00", align 1
@.str.89 = private unnamed_addr constant [25 x i8] c"has_cluster        = %d\0A\00", align 1
@.str.90 = private unnamed_addr constant [21 x i8] c"\0AModule Parameters:\0A\00", align 1
@.str.91 = private unnamed_addr constant [25 x i8] c"max_cmd_per_lun    = %d\0A\00", align 1
@.str.92 = private unnamed_addr constant [25 x i8] c"max_sectors_per_io = %d\0A\00", align 1
@.str.93 = private unnamed_addr constant [45 x i8] c"Statistical Information for this controller\0A\00", align 1
@.str.94 = private unnamed_addr constant [16 x i8] c"pend_cmds = %d\0A\00", align 1
@.str.95 = private unnamed_addr constant [47 x i8] c"IO and error counters not compiled in driver.\0A\00", align 1
@.str.96 = private unnamed_addr constant [32 x i8] c"Contents of Mail Box Structure\0A\00", align 1
@.str.97 = private unnamed_addr constant [25 x i8] c"  Fw Command   = 0x%02x\0A\00", align 1
@.str.98 = private unnamed_addr constant [25 x i8] c"  Cmd Sequence = 0x%02x\0A\00", align 1
@.str.99 = private unnamed_addr constant [23 x i8] c"  No of Sectors= %04d\0A\00", align 1
@.str.100 = private unnamed_addr constant [25 x i8] c"  LBA          = 0x%02x\0A\00", align 1
@.str.101 = private unnamed_addr constant [25 x i8] c"  DTA          = 0x%08x\0A\00", align 1
@.str.102 = private unnamed_addr constant [25 x i8] c"  Logical Drive= 0x%02x\0A\00", align 1
@.str.103 = private unnamed_addr constant [25 x i8] c"  No of SG Elmt= 0x%02x\0A\00", align 1
@.str.104 = private unnamed_addr constant [23 x i8] c"  Busy         = %01x\0A\00", align 1
@.str.105 = private unnamed_addr constant [25 x i8] c"  Status       = 0x%02x\0A\00", align 1
@.str.106 = private unnamed_addr constant [25 x i8] c"Adapter inquiry failed.\0A\00", align 1
@.str.107 = private unnamed_addr constant [16 x i8] c"inquiry failed\0A\00", align 1
@.str.108 = private unnamed_addr constant [22 x i8] c"Rebuild Rate: [%d%%]\0A\00", align 1
@.str.109 = private unnamed_addr constant [20 x i8] c"Battery Status:[%d]\00", align 1
@.str.110 = private unnamed_addr constant [13 x i8] c" Charge Done\00", align 1
@.str.111 = private unnamed_addr constant [16 x i8] c" Module Missing\00", align 1
@.str.112 = private unnamed_addr constant [13 x i8] c" Low Voltage\00", align 1
@.str.113 = private unnamed_addr constant [18 x i8] c" Temperature High\00", align 1
@.str.114 = private unnamed_addr constant [14 x i8] c" Pack Missing\00", align 1
@.str.115 = private unnamed_addr constant [20 x i8] c" Charge In-progress\00", align 1
@.str.116 = private unnamed_addr constant [13 x i8] c" Charge Fail\00", align 1
@.str.117 = private unnamed_addr constant [17 x i8] c" Cycles Exceeded\00", align 1
@.str.118 = private unnamed_addr constant [36 x i8] c"memory not available for scsi inq.\0A\00", align 1
@.str.119 = private unnamed_addr constant [33 x i8] c"Channel:%2d Id:%2d State: Online\00", align 1
@.str.120 = private unnamed_addr constant [33 x i8] c"Channel:%2d Id:%2d State: Failed\00", align 1
@.str.121 = private unnamed_addr constant [34 x i8] c"Channel:%2d Id:%2d State: Rebuild\00", align 1
@.str.122 = private unnamed_addr constant [36 x i8] c"Channel:%2d Id:%2d State: Hot spare\00", align 1
@.str.123 = private unnamed_addr constant [40 x i8] c"Channel:%2d Id:%2d State: Un-configured\00", align 1
@.str.124 = private unnamed_addr constant [3 x i8] c".\0A\00", align 1
@.str.125 = private unnamed_addr constant [11 x i8] c"  Vendor: \00", align 1
@.str.126 = private unnamed_addr constant [10 x i8] c"  Model: \00", align 1
@.str.127 = private unnamed_addr constant [8 x i8] c"  Rev: \00", align 1
@.str.128 = private unnamed_addr constant [14 x i8] c"  Type:   %s \00", align 1
@.str.129 = private unnamed_addr constant [42 x i8] c"                 ANSI SCSI revision: %02x\00", align 1
@.str.130 = private unnamed_addr constant [6 x i8] c" CCS\0A\00", align 1
@.str.131 = private unnamed_addr constant [23 x i8] c"memory not available.\0A\00", align 1
@.str.132 = private unnamed_addr constant [26 x i8] c"40LD read config failed.\0A\00", align 1
@.str.133 = private unnamed_addr constant [25 x i8] c"8LD read config failed.\0A\00", align 1
@.str.134 = private unnamed_addr constant [21 x i8] c"Logical drive:%2d:, \00", align 1
@.str.135 = private unnamed_addr constant [15 x i8] c"state: offline\00", align 1
@.str.136 = private unnamed_addr constant [16 x i8] c"state: degraded\00", align 1
@.str.137 = private unnamed_addr constant [15 x i8] c"state: optimal\00", align 1
@.str.138 = private unnamed_addr constant [15 x i8] c"state: deleted\00", align 1
@.str.139 = private unnamed_addr constant [15 x i8] c"state: unknown\00", align 1
@.str.140 = private unnamed_addr constant [32 x i8] c", check-consistency in progress\00", align 1
@.str.141 = private unnamed_addr constant [29 x i8] c", initialization in progress\00", align 1
@.str.142 = private unnamed_addr constant [17 x i8] c"Span depth:%3d, \00", align 1
@.str.143 = private unnamed_addr constant [17 x i8] c"RAID level:%3d, \00", align 1
@.str.144 = private unnamed_addr constant [18 x i8] c"Stripe size:%3d, \00", align 1
@.str.145 = private unnamed_addr constant [14 x i8] c"Row size:%3d\0A\00", align 1
@.str.146 = private unnamed_addr constant [14 x i8] c"Read Policy: \00", align 1
@.str.147 = private unnamed_addr constant [16 x i8] c"No read ahead, \00", align 1
@.str.148 = private unnamed_addr constant [13 x i8] c"Read ahead, \00", align 1
@.str.149 = private unnamed_addr constant [11 x i8] c"Adaptive, \00", align 1
@.str.150 = private unnamed_addr constant [15 x i8] c"Write Policy: \00", align 1
@.str.151 = private unnamed_addr constant [13 x i8] c"Write thru, \00", align 1
@.str.152 = private unnamed_addr constant [13 x i8] c"Write back, \00", align 1
@.str.153 = private unnamed_addr constant [15 x i8] c"Cache Policy: \00", align 1
@.str.154 = private unnamed_addr constant [12 x i8] c"Cached IO\0A\0A\00", align 1
@.str.155 = private unnamed_addr constant [12 x i8] c"Direct IO\0A\0A\00", align 1
@.str.156 = private unnamed_addr constant [20 x i8] c"pending commands!!\0A\00", align 1
@.str.157 = private unnamed_addr constant [44 x i8] c"\014megaraid: failed to create megaraid root\0A\00", align 1
@megadev_fops = internal constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @noop_llseek, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* null, i64 (%struct.file*, i32, i64)* @megadev_unlocked_ioctl, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i64 0, i32 (%struct.inode*, %struct.file*)* @megadev_open, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* null, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !6161
@.str.158 = private unnamed_addr constant [44 x i8] c"\014megaraid: failed to register char device\0A\00", align 1
@megadev_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @megadev_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @megadev_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !6163
@driver_ver = internal global i32 33554432, align 4, !dbg !6165
@.str.159 = private unnamed_addr constant [37 x i8] c"logdrv delete on non-supporting F/W\0A\00", align 1
@.str.160 = private unnamed_addr constant [19 x i8] c"rejected passthru\0A\00", align 1
@.str.161 = private unnamed_addr constant [8 x i8] c"MEGANIT\00", align 1
@.str.162 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.163 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.164 = private unnamed_addr constant [20 x i8] c"Delete LD-%d failed\00", align 1
@llvm.used = appending global [18 x i8*] [i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_author296, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__UNIQUE_ID_description297, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__UNIQUE_ID_file298, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_license299, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__UNIQUE_ID_version300, i32 0, i32 0), i8* bitcast (%struct.module_version_attribute** @__modver_attr to i8*), i8* bitcast (%struct.kernel_param* @__param_max_cmd_per_lun to i8*), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_max_cmd_per_luntype301, i32 0, i32 0), i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__UNIQUE_ID_max_cmd_per_lun302, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_max_sectors_per_io to i8*), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__UNIQUE_ID_max_sectors_per_iotype303, i32 0, i32 0), i8* getelementptr inbounds ([108 x i8], [108 x i8]* @__UNIQUE_ID_max_sectors_per_io304, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_max_mbox_busy_wait to i8*), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__UNIQUE_ID_max_mbox_busy_waittype305, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @__UNIQUE_ID_max_mbox_busy_wait306, i32 0, i32 0), i8* bitcast (void ()* @megaraid_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_megaraid_init314 to i8*), i8* bitcast (void ()** @__exitcall_megaraid_exit to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @megaraid_info(%struct.Scsi_Host* %host) #0 !dbg !6076 {
entry:
  %host.addr = alloca %struct.Scsi_Host*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !6176, metadata !DIExpression()), !dbg !6177
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !6178, metadata !DIExpression()), !dbg !6179
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !6180
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 51, !dbg !6181
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !6180
  %1 = bitcast i64* %arraydecay to %struct.adapter_t*, !dbg !6182
  store %struct.adapter_t* %1, %struct.adapter_t** %adapter, align 8, !dbg !6183
  %2 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6184
  %fw_version = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %2, i32 0, i32 21, !dbg !6185
  %arraydecay1 = getelementptr inbounds [7 x i8], [7 x i8]* %fw_version, i64 0, i64 0, !dbg !6184
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6186
  %product_info = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %3, i32 0, i32 16, !dbg !6187
  %max_commands = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info, i32 0, i32 5, !dbg !6188
  %4 = load i8, i8* %max_commands, align 8, !dbg !6188
  %conv = zext i8 %4 to i32, !dbg !6186
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6189
  %host2 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %5, i32 0, i32 13, !dbg !6190
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host2, align 8, !dbg !6190
  %max_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %6, i32 0, i32 20, !dbg !6191
  %7 = load i32, i32* %max_id, align 4, !dbg !6191
  %8 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6192
  %host3 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %8, i32 0, i32 13, !dbg !6193
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host3, align 8, !dbg !6193
  %max_channel = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 19, !dbg !6194
  %10 = load i32, i32* %max_channel, align 8, !dbg !6194
  %11 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6195
  %host4 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %11, i32 0, i32 13, !dbg !6196
  %12 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host4, align 8, !dbg !6196
  %max_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %12, i32 0, i32 21, !dbg !6197
  %13 = load i64, i64* %max_lun, align 8, !dbg !6197
  %conv5 = trunc i64 %13 to i32, !dbg !6198
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @megaraid_info.buffer, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i8* %arraydecay1, i32 %conv, i32 %7, i32 %10, i32 %conv5) #11, !dbg !6199
  ret i8* getelementptr inbounds ([512 x i8], [512 x i8]* @megaraid_info.buffer, i64 0, i64 0), !dbg !6200
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @megaraid_exit() #3 section ".exit.text" !dbg !6201 {
entry:
  %0 = load i32, i32* @major, align 4, !dbg !6202
  call void @unregister_chrdev(i32 %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #11, !dbg !6203
  call void @pci_unregister_driver(%struct.pci_driver* @megaraid_pci_driver) #11, !dbg !6204
  call void @remove_proc_entry(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), %struct.proc_dir_entry* null) #11, !dbg !6205
  ret void, !dbg !6206
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @unregister_chrdev(i32 %major, i8* %name) #0 !dbg !6207 {
entry:
  %major.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  store i32 %major, i32* %major.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %major.addr, metadata !6210, metadata !DIExpression()), !dbg !6211
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6212, metadata !DIExpression()), !dbg !6213
  %0 = load i32, i32* %major.addr, align 4, !dbg !6214
  %1 = load i8*, i8** %name.addr, align 8, !dbg !6215
  call void @__unregister_chrdev(i32 %0, i32 0, i32 256, i8* %1) #11, !dbg !6216
  ret void, !dbg !6217
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #2

; Function Attrs: noredzone
declare dso_local void @remove_proc_entry(i8*, %struct.proc_dir_entry*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @megaraid_init() #3 section ".init.text" !dbg !6218 {
entry:
  %retval = alloca i32, align 4
  %error = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %error, metadata !6221, metadata !DIExpression()), !dbg !6222
  %0 = load i32, i32* @max_cmd_per_lun, align 4, !dbg !6223
  %cmp = icmp ule i32 %0, 0, !dbg !6225
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6226

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @max_cmd_per_lun, align 4, !dbg !6227
  %cmp1 = icmp ugt i32 %1, 126, !dbg !6228
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6229

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 126, i32* @max_cmd_per_lun, align 4, !dbg !6230
  br label %if.end, !dbg !6231

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load i16, i16* @max_mbox_busy_wait, align 2, !dbg !6232
  %conv = zext i16 %2 to i32, !dbg !6232
  %cmp2 = icmp sgt i32 %conv, 10, !dbg !6234
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !6235

if.then4:                                         ; preds = %if.end
  store i16 10, i16* @max_mbox_busy_wait, align 2, !dbg !6236
  br label %if.end5, !dbg !6237

if.end5:                                          ; preds = %if.then4, %if.end
  %call = call %struct.proc_dir_entry* @proc_mkdir(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), %struct.proc_dir_entry* null) #11, !dbg !6238
  store %struct.proc_dir_entry* %call, %struct.proc_dir_entry** @mega_proc_dir_entry, align 8, !dbg !6239
  %3 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** @mega_proc_dir_entry, align 8, !dbg !6240
  %tobool = icmp ne %struct.proc_dir_entry* %3, null, !dbg !6240
  br i1 %tobool, label %if.end8, label %if.then6, !dbg !6242

if.then6:                                         ; preds = %if.end5
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.157, i64 0, i64 0)) #12, !dbg !6243
  br label %if.end8, !dbg !6245

if.end8:                                          ; preds = %if.then6, %if.end5
  %call9 = call i32 @__pci_register_driver(%struct.pci_driver* @megaraid_pci_driver, %struct.module* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #11, !dbg !6246
  store i32 %call9, i32* %error, align 4, !dbg !6247
  %4 = load i32, i32* %error, align 4, !dbg !6248
  %tobool10 = icmp ne i32 %4, 0, !dbg !6248
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !6250

if.then11:                                        ; preds = %if.end8
  call void @remove_proc_entry(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), %struct.proc_dir_entry* null) #11, !dbg !6251
  %5 = load i32, i32* %error, align 4, !dbg !6253
  store i32 %5, i32* %retval, align 4, !dbg !6254
  br label %return, !dbg !6254

if.end12:                                         ; preds = %if.end8
  %call13 = call i32 @register_chrdev(i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), %struct.file_operations* @megadev_fops) #11, !dbg !6255
  store i32 %call13, i32* @major, align 4, !dbg !6256
  %6 = load i32, i32* @major, align 4, !dbg !6257
  %tobool14 = icmp ne i32 %6, 0, !dbg !6257
  br i1 %tobool14, label %if.end17, label %if.then15, !dbg !6259

if.then15:                                        ; preds = %if.end12
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.158, i64 0, i64 0)) #12, !dbg !6260
  br label %if.end17, !dbg !6262

if.end17:                                         ; preds = %if.then15, %if.end12
  store i32 0, i32* %retval, align 4, !dbg !6263
  br label %return, !dbg !6263

return:                                           ; preds = %if.end17, %if.then11
  %7 = load i32, i32* %retval, align 4, !dbg !6264
  ret i32 %7, !dbg !6264
}

; Function Attrs: noredzone
declare dso_local i64 @__modver_version_show(%struct.module_attribute*, %struct.module_kobject*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @__unregister_chrdev(i32, i32, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @megaraid_probe_one(%struct.pci_dev* %pdev, %struct.pci_device_id* %id) #0 !dbg !6116 {
entry:
  %v.addr.i1.i319 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i319, metadata !6265, metadata !DIExpression()), !dbg !6271
  %i.addr.i.i320 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i320, metadata !6276, metadata !DIExpression()), !dbg !6277
  %v.addr.i.i321 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i321, metadata !6278, metadata !DIExpression()), !dbg !6286
  %size.addr.i.i322 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i322, metadata !6288, metadata !DIExpression()), !dbg !6289
  %v.addr.i323 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i323, metadata !6290, metadata !DIExpression()), !dbg !6291
  %i.addr.i324 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i324, metadata !6292, metadata !DIExpression()), !dbg !6293
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6265, metadata !DIExpression()), !dbg !6294
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !6276, metadata !DIExpression()), !dbg !6297
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6278, metadata !DIExpression()), !dbg !6298
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6288, metadata !DIExpression()), !dbg !6300
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6290, metadata !DIExpression()), !dbg !6301
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !6292, metadata !DIExpression()), !dbg !6302
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6303, metadata !DIExpression()), !dbg !6309
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %id.addr = alloca %struct.pci_device_id*, align 8
  %host = alloca %struct.Scsi_Host*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  %mega_baseport = alloca i64, align 8
  %tbase = alloca i64, align 8
  %flag = alloca i64, align 8
  %subsysid = alloca i16, align 2
  %subsysvid = alloca i16, align 2
  %pci_bus = alloca i8, align 1
  %pci_dev_func = alloca i8, align 1
  %irq = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %error = alloca i32, align 4
  %magic = alloca i16, align 2
  %magic64 = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6312, metadata !DIExpression()), !dbg !6313
  store %struct.pci_device_id* %id, %struct.pci_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %id.addr, metadata !6314, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host, metadata !6316, metadata !DIExpression()), !dbg !6317
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !6318, metadata !DIExpression()), !dbg !6319
  call void @llvm.dbg.declare(metadata i64* %mega_baseport, metadata !6320, metadata !DIExpression()), !dbg !6321
  call void @llvm.dbg.declare(metadata i64* %tbase, metadata !6322, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.declare(metadata i64* %flag, metadata !6324, metadata !DIExpression()), !dbg !6325
  store i64 0, i64* %flag, align 8, !dbg !6325
  call void @llvm.dbg.declare(metadata i16* %subsysid, metadata !6326, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.declare(metadata i16* %subsysvid, metadata !6328, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.declare(metadata i8* %pci_bus, metadata !6330, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.declare(metadata i8* %pci_dev_func, metadata !6332, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !6334, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6336, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6338, metadata !DIExpression()), !dbg !6339
  call void @llvm.dbg.declare(metadata i32* %error, metadata !6340, metadata !DIExpression()), !dbg !6341
  store i32 -19, i32* %error, align 4, !dbg !6341
  %0 = load i32, i32* @hba_count, align 4, !dbg !6342
  %cmp = icmp sge i32 %0, 32, !dbg !6344
  br i1 %cmp, label %if.then, label %if.end, !dbg !6345

if.then:                                          ; preds = %entry
  br label %out, !dbg !6346

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6347
  %call = call i32 @pci_enable_device(%struct.pci_dev* %1) #11, !dbg !6349
  %tobool = icmp ne i32 %call, 0, !dbg !6349
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !6350

if.then1:                                         ; preds = %if.end
  br label %out, !dbg !6351

if.end2:                                          ; preds = %if.end
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6352
  call void @pci_set_master(%struct.pci_dev* %2) #11, !dbg !6353
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6354
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 1, !dbg !6355
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6355
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 13, !dbg !6356
  %5 = load i8, i8* %number, align 8, !dbg !6356
  store i8 %5, i8* %pci_bus, align 1, !dbg !6357
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6358
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 6, !dbg !6359
  %7 = load i32, i32* %devfn, align 8, !dbg !6359
  %conv = trunc i32 %7 to i8, !dbg !6358
  store i8 %conv, i8* %pci_dev_func, align 1, !dbg !6360
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6361
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 7, !dbg !6363
  %9 = load i16, i16* %vendor, align 4, !dbg !6363
  %conv3 = zext i16 %9 to i32, !dbg !6361
  %cmp4 = icmp eq i32 %conv3, 32902, !dbg !6364
  br i1 %cmp4, label %if.then6, label %if.end25, !dbg !6365

if.then6:                                         ; preds = %if.end2
  call void @llvm.dbg.declare(metadata i16* %magic, metadata !6366, metadata !DIExpression()), !dbg !6368
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6369
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 9, !dbg !6371
  %11 = load i16, i16* %subsystem_vendor, align 8, !dbg !6371
  %conv7 = zext i16 %11 to i32, !dbg !6369
  %cmp8 = icmp eq i32 %conv7, 3601, !dbg !6372
  br i1 %cmp8, label %land.lhs.true, label %if.end14, !dbg !6373

land.lhs.true:                                    ; preds = %if.then6
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6374
  %subsystem_device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 10, !dbg !6375
  %13 = load i16, i16* %subsystem_device, align 2, !dbg !6375
  %conv10 = zext i16 %13 to i32, !dbg !6374
  %cmp11 = icmp eq i32 %conv10, 49152, !dbg !6376
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !6377

if.then13:                                        ; preds = %land.lhs.true
  br label %out_disable_device, !dbg !6378

if.end14:                                         ; preds = %land.lhs.true, %if.then6
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6379
  %call15 = call i32 @pci_read_config_word(%struct.pci_dev* %14, i32 160, i16* %magic) #11, !dbg !6380
  %15 = load i16, i16* %magic, align 2, !dbg !6381
  %conv16 = zext i16 %15 to i32, !dbg !6381
  %cmp17 = icmp ne i32 %conv16, 52428, !dbg !6383
  br i1 %cmp17, label %land.lhs.true19, label %if.end24, !dbg !6384

land.lhs.true19:                                  ; preds = %if.end14
  %16 = load i16, i16* %magic, align 2, !dbg !6385
  %conv20 = zext i16 %16 to i32, !dbg !6385
  %cmp21 = icmp ne i32 %conv20, 13124, !dbg !6386
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !6387

if.then23:                                        ; preds = %land.lhs.true19
  br label %out_disable_device, !dbg !6388

if.end24:                                         ; preds = %land.lhs.true19, %if.end14
  br label %if.end25, !dbg !6389

if.end25:                                         ; preds = %if.end24, %if.end2
  %17 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !6390
  %driver_data = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %17, i32 0, i32 6, !dbg !6392
  %18 = load i64, i64* %driver_data, align 8, !dbg !6392
  %and = and i64 %18, 67108864, !dbg !6393
  %tobool26 = icmp ne i64 %and, 0, !dbg !6393
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !6394

if.then27:                                        ; preds = %if.end25
  %19 = load i64, i64* %flag, align 8, !dbg !6395
  %or = or i64 %19, 67108864, !dbg !6395
  store i64 %or, i64* %flag, align 8, !dbg !6395
  br label %if.end34, !dbg !6396

if.else:                                          ; preds = %if.end25
  call void @llvm.dbg.declare(metadata i32* %magic64, metadata !6397, metadata !DIExpression()), !dbg !6399
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6400
  %call28 = call i32 @pci_read_config_dword(%struct.pci_dev* %20, i32 164, i32* %magic64) #11, !dbg !6401
  %21 = load i32, i32* %magic64, align 4, !dbg !6402
  %cmp29 = icmp eq i32 %21, 665, !dbg !6404
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !6405

if.then31:                                        ; preds = %if.else
  %22 = load i64, i64* %flag, align 8, !dbg !6406
  %or32 = or i64 %22, 67108864, !dbg !6406
  store i64 %or32, i64* %flag, align 8, !dbg !6406
  br label %if.end33, !dbg !6407

if.end33:                                         ; preds = %if.then31, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then27
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6408
  %subsystem_vendor35 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 9, !dbg !6409
  %24 = load i16, i16* %subsystem_vendor35, align 8, !dbg !6409
  store i16 %24, i16* %subsysvid, align 2, !dbg !6410
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6411
  %subsystem_device36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 10, !dbg !6412
  %26 = load i16, i16* %subsystem_device36, align 2, !dbg !6412
  store i16 %26, i16* %subsysid, align 2, !dbg !6413
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6414
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 41, !dbg !6414
  %28 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !6414
  %vendor37 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %28, i32 0, i32 0, !dbg !6414
  %29 = load i32, i32* %vendor37, align 8, !dbg !6414
  %30 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !6414
  %device = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %30, i32 0, i32 1, !dbg !6414
  %31 = load i32, i32* %device, align 4, !dbg !6414
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i32 %29, i32 %31) #12, !dbg !6414
  %32 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6415
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 44, !dbg !6415
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !6415
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !6415
  %33 = load i64, i64* %start, align 8, !dbg !6415
  store i64 %33, i64* %mega_baseport, align 8, !dbg !6416
  %34 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6417
  %irq38 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 43, !dbg !6418
  %35 = load i32, i32* %irq38, align 4, !dbg !6418
  store i32 %35, i32* %irq, align 4, !dbg !6419
  %36 = load i64, i64* %mega_baseport, align 8, !dbg !6420
  store i64 %36, i64* %tbase, align 8, !dbg !6421
  %37 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6422
  %resource39 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 44, !dbg !6422
  %arrayidx40 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource39, i64 0, i64 0, !dbg !6422
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx40, i32 0, i32 3, !dbg !6422
  %38 = load i64, i64* %flags, align 8, !dbg !6422
  %and41 = and i64 %38, 512, !dbg !6424
  %tobool42 = icmp ne i64 %and41, 0, !dbg !6424
  br i1 %tobool42, label %if.then43, label %if.else55, !dbg !6425

if.then43:                                        ; preds = %if.end34
  %39 = load i64, i64* %flag, align 8, !dbg !6426
  %or44 = or i64 %39, 536870912, !dbg !6426
  store i64 %or44, i64* %flag, align 8, !dbg !6426
  %40 = load i64, i64* %mega_baseport, align 8, !dbg !6428
  %call45 = call %struct.resource* @__request_region(%struct.resource* @iomem_resource, i64 %40, i64 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32 0) #11, !dbg !6428
  %tobool46 = icmp ne %struct.resource* %call45, null, !dbg !6428
  br i1 %tobool46, label %if.end49, label %if.then47, !dbg !6430

if.then47:                                        ; preds = %if.then43
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6431
  %dev48 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %41, i32 0, i32 41, !dbg !6431
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev48, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0)) #12, !dbg !6431
  br label %out_disable_device, !dbg !6433

if.end49:                                         ; preds = %if.then43
  %42 = load i64, i64* %mega_baseport, align 8, !dbg !6434
  %call50 = call i8* @ioremap(i64 %42, i64 128) #11, !dbg !6435
  %43 = ptrtoint i8* %call50 to i64, !dbg !6436
  store i64 %43, i64* %mega_baseport, align 8, !dbg !6437
  %44 = load i64, i64* %mega_baseport, align 8, !dbg !6438
  %tobool51 = icmp ne i64 %44, 0, !dbg !6438
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !6440

if.then52:                                        ; preds = %if.end49
  %45 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6441
  %dev53 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %45, i32 0, i32 41, !dbg !6441
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev53, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0)) #12, !dbg !6441
  br label %out_release_region, !dbg !6443

if.end54:                                         ; preds = %if.end49
  br label %if.end61, !dbg !6444

if.else55:                                        ; preds = %if.end34
  %46 = load i64, i64* %flag, align 8, !dbg !6445
  %or56 = or i64 %46, 268435456, !dbg !6445
  store i64 %or56, i64* %flag, align 8, !dbg !6445
  %47 = load i64, i64* %mega_baseport, align 8, !dbg !6447
  %add = add i64 %47, 16, !dbg !6447
  store i64 %add, i64* %mega_baseport, align 8, !dbg !6447
  %48 = load i64, i64* %mega_baseport, align 8, !dbg !6448
  %call57 = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %48, i64 16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32 0) #11, !dbg !6448
  %tobool58 = icmp ne %struct.resource* %call57, null, !dbg !6448
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !6450

if.then59:                                        ; preds = %if.else55
  br label %out_disable_device, !dbg !6451

if.end60:                                         ; preds = %if.else55
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.end54
  %call62 = call %struct.Scsi_Host* @scsi_host_alloc(%struct.scsi_host_template* bitcast ({ %struct.module*, i8*, i8* (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32, i8*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, void (%struct.Scsi_Host*, i16)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_device*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_target*)*, void (%struct.scsi_target*)*, i32 (%struct.Scsi_Host*, i64)*, void (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32)*, i32 (%struct.Scsi_Host*)*, i1 (%struct.request*)*, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)*, void (%struct.scsi_device*)*, i32 (%struct.seq_file*, %struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*, i8*, i32)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, i32)*, i8*, %struct.proc_dir_entry*, i32, i32, i16, i16, i32, i32, i64, i64, i16, i8, i32, i8, i32, %struct.device_attribute**, %struct.device_attribute**, %struct.attribute_group**, i64, i32, %struct.scsi_host_cmd_pool*, i32 }* @megaraid_template to %struct.scsi_host_template*), i32 1528) #11, !dbg !6452
  store %struct.Scsi_Host* %call62, %struct.Scsi_Host** %host, align 8, !dbg !6453
  %49 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6454
  %tobool63 = icmp ne %struct.Scsi_Host* %49, null, !dbg !6454
  br i1 %tobool63, label %if.end65, label %if.then64, !dbg !6456

if.then64:                                        ; preds = %if.end61
  br label %out_iounmap, !dbg !6457

if.end65:                                         ; preds = %if.end61
  %50 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6458
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %50, i32 0, i32 51, !dbg !6459
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !6458
  %51 = bitcast i64* %arraydecay to %struct.adapter_t*, !dbg !6460
  store %struct.adapter_t* %51, %struct.adapter_t** %adapter, align 8, !dbg !6461
  %52 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6462
  %53 = bitcast %struct.adapter_t* %52 to i8*, !dbg !6463
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 1528, i1 false), !dbg !6463
  %54 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6464
  %dev66 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 41, !dbg !6464
  %55 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6464
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %55, i32 0, i32 16, !dbg !6464
  %56 = load i32, i32* %host_no, align 4, !dbg !6464
  %57 = load i64, i64* %mega_baseport, align 8, !dbg !6464
  %58 = load i32, i32* %irq, align 4, !dbg !6464
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev66, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.9, i64 0, i64 0), i32 %56, i64 %57, i32 %58) #12, !dbg !6464
  %59 = load i64, i64* %mega_baseport, align 8, !dbg !6465
  %60 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6466
  %base = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %60, i32 0, i32 2, !dbg !6467
  store i64 %59, i64* %base, align 8, !dbg !6468
  %61 = load i64, i64* %flag, align 8, !dbg !6469
  %and67 = and i64 %61, 536870912, !dbg !6471
  %tobool68 = icmp ne i64 %and67, 0, !dbg !6471
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !6472

if.then69:                                        ; preds = %if.end65
  %62 = load i64, i64* %mega_baseport, align 8, !dbg !6473
  %63 = inttoptr i64 %62 to i8*, !dbg !6474
  %64 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6475
  %mmio_base = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %64, i32 0, i32 3, !dbg !6476
  store i8* %63, i8** %mmio_base, align 8, !dbg !6477
  br label %if.end70, !dbg !6475

if.end70:                                         ; preds = %if.then69, %if.end65
  %65 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6478
  %free_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %65, i32 0, i32 10, !dbg !6479
  call void @INIT_LIST_HEAD(%struct.list_head* %free_list) #11, !dbg !6480
  %66 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6481
  %pending_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %66, i32 0, i32 11, !dbg !6482
  call void @INIT_LIST_HEAD(%struct.list_head* %pending_list) #11, !dbg !6483
  %67 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6484
  %completed_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %67, i32 0, i32 12, !dbg !6485
  call void @INIT_LIST_HEAD(%struct.list_head* %completed_list) #11, !dbg !6486
  %68 = load i64, i64* %flag, align 8, !dbg !6487
  %conv71 = trunc i64 %68 to i32, !dbg !6487
  %69 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6488
  %flag72 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %69, i32 0, i32 1, !dbg !6489
  store i32 %conv71, i32* %flag72, align 4, !dbg !6490
  br label %do.body, !dbg !6491

do.body:                                          ; preds = %if.end70
  %70 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6492
  %lock = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %70, i32 0, i32 34, !dbg !6492
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %71 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6493
  %72 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %71, i32 0, i32 0, !dbg !6494
  %rlock.i = bitcast %union.anon.1* %72 to %struct.raw_spinlock*, !dbg !6494
  %73 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6492
  %lock74 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %73, i32 0, i32 34, !dbg !6492
  %74 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !6492
  %rlock = bitcast %union.anon.1* %74 to %struct.raw_spinlock*, !dbg !6492
  %75 = bitcast %struct.spinlock* %lock74 to i8*, !dbg !6492
  %76 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !6492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 1 %76, i64 0, i1 false), !dbg !6492
  br label %do.end, !dbg !6492

do.end:                                           ; preds = %do.body
  %77 = load i32, i32* @max_cmd_per_lun, align 4, !dbg !6495
  %conv75 = trunc i32 %77 to i16, !dbg !6495
  %78 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6496
  %cmd_per_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %78, i32 0, i32 26, !dbg !6497
  store i16 %conv75, i16* %cmd_per_lun, align 8, !dbg !6498
  %79 = load i16, i16* @max_sectors_per_io, align 2, !dbg !6499
  %conv76 = zext i16 %79 to i32, !dbg !6499
  %80 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6500
  %max_sectors = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %80, i32 0, i32 29, !dbg !6501
  store i32 %conv76, i32* %max_sectors, align 8, !dbg !6502
  %81 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6503
  %82 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6504
  %dev77 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %82, i32 0, i32 9, !dbg !6505
  store %struct.pci_dev* %81, %struct.pci_dev** %dev77, align 8, !dbg !6506
  %83 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6507
  %84 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6508
  %host78 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %84, i32 0, i32 13, !dbg !6509
  store %struct.Scsi_Host* %83, %struct.Scsi_Host** %host78, align 8, !dbg !6510
  %85 = load i32, i32* %irq, align 4, !dbg !6511
  %86 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6512
  %host79 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %86, i32 0, i32 13, !dbg !6513
  %87 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host79, align 8, !dbg !6513
  %irq80 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %87, i32 0, i32 45, !dbg !6514
  store i32 %85, i32* %irq80, align 4, !dbg !6515
  %88 = load i64, i64* %flag, align 8, !dbg !6516
  %and81 = and i64 %88, 536870912, !dbg !6518
  %tobool82 = icmp ne i64 %and81, 0, !dbg !6518
  br i1 %tobool82, label %if.then83, label %if.else86, !dbg !6519

if.then83:                                        ; preds = %do.end
  %89 = load i64, i64* %tbase, align 8, !dbg !6520
  %90 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6521
  %host84 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %90, i32 0, i32 13, !dbg !6522
  %91 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host84, align 8, !dbg !6522
  %base85 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %91, i32 0, i32 41, !dbg !6523
  store i64 %89, i64* %base85, align 8, !dbg !6524
  br label %if.end89, !dbg !6521

if.else86:                                        ; preds = %do.end
  %92 = load i64, i64* %tbase, align 8, !dbg !6525
  %93 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6527
  %host87 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %93, i32 0, i32 13, !dbg !6528
  %94 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host87, align 8, !dbg !6528
  %io_port = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %94, i32 0, i32 42, !dbg !6529
  store i64 %92, i64* %io_port, align 8, !dbg !6530
  %95 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6531
  %host88 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %95, i32 0, i32 13, !dbg !6532
  %96 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host88, align 8, !dbg !6532
  %n_io_port = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %96, i32 0, i32 43, !dbg !6533
  store i8 16, i8* %n_io_port, align 8, !dbg !6534
  br label %if.end89

if.end89:                                         ; preds = %if.else86, %if.then83
  %97 = load i8, i8* %pci_bus, align 1, !dbg !6535
  %conv90 = zext i8 %97 to i32, !dbg !6535
  %shl = shl i32 %conv90, 8, !dbg !6536
  %98 = load i8, i8* %pci_dev_func, align 1, !dbg !6537
  %conv91 = zext i8 %98 to i32, !dbg !6537
  %or92 = or i32 %shl, %conv91, !dbg !6538
  %99 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6539
  %host93 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %99, i32 0, i32 13, !dbg !6540
  %100 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host93, align 8, !dbg !6540
  %unique_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %100, i32 0, i32 22, !dbg !6541
  store i32 %or92, i32* %unique_id, align 8, !dbg !6542
  %101 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6543
  %dev94 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %101, i32 0, i32 9, !dbg !6544
  %102 = load %struct.pci_dev*, %struct.pci_dev** %dev94, align 8, !dbg !6544
  %dev95 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %102, i32 0, i32 41, !dbg !6545
  %103 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6546
  %buf_dma_handle = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %103, i32 0, i32 15, !dbg !6547
  %call96 = call i8* @dma_alloc_coherent(%struct.device* %dev95, i64 2048, i64* %buf_dma_handle, i32 3264) #11, !dbg !6548
  %104 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6549
  %mega_buffer = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %104, i32 0, i32 14, !dbg !6550
  store i8* %call96, i8** %mega_buffer, align 8, !dbg !6551
  %105 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6552
  %mega_buffer97 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %105, i32 0, i32 14, !dbg !6554
  %106 = load i8*, i8** %mega_buffer97, align 8, !dbg !6554
  %tobool98 = icmp ne i8* %106, null, !dbg !6552
  br i1 %tobool98, label %if.end101, label %if.then99, !dbg !6555

if.then99:                                        ; preds = %if.end89
  %107 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6556
  %dev100 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %107, i32 0, i32 41, !dbg !6556
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev100, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)) #12, !dbg !6556
  br label %out_host_put, !dbg !6558

if.end101:                                        ; preds = %if.end89
  %call102 = call i8* @kmalloc_array(i64 126, i64 184, i32 3264) #11, !dbg !6559
  %108 = bitcast i8* %call102 to %struct.scb_t*, !dbg !6559
  %109 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6560
  %scb_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %109, i32 0, i32 18, !dbg !6561
  store %struct.scb_t* %108, %struct.scb_t** %scb_list, align 8, !dbg !6562
  %110 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6563
  %scb_list103 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %110, i32 0, i32 18, !dbg !6565
  %111 = load %struct.scb_t*, %struct.scb_t** %scb_list103, align 8, !dbg !6565
  %tobool104 = icmp ne %struct.scb_t* %111, null, !dbg !6563
  br i1 %tobool104, label %if.end107, label %if.then105, !dbg !6566

if.then105:                                       ; preds = %if.end101
  %112 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6567
  %dev106 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %112, i32 0, i32 41, !dbg !6567
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev106, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)) #12, !dbg !6567
  br label %out_free_cmd_buffer, !dbg !6569

if.end107:                                        ; preds = %if.end101
  %113 = load i32, i32* %irq, align 4, !dbg !6570
  %114 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6572
  %flag108 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %114, i32 0, i32 1, !dbg !6573
  %115 = load i32, i32* %flag108, align 4, !dbg !6573
  %conv109 = zext i32 %115 to i64, !dbg !6572
  %and110 = and i64 %conv109, 536870912, !dbg !6574
  %tobool111 = icmp ne i64 %and110, 0, !dbg !6575
  %116 = zext i1 %tobool111 to i64, !dbg !6575
  %cond = select i1 %tobool111, i32 (i32, i8*)* @megaraid_isr_memmapped, i32 (i32, i8*)* @megaraid_isr_iomapped, !dbg !6575
  %117 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6576
  %118 = bitcast %struct.adapter_t* %117 to i8*, !dbg !6576
  %call112 = call i32 @request_irq(i32 %113, i32 (i32, i8*)* %cond, i64 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* %118) #11, !dbg !6577
  %tobool113 = icmp ne i32 %call112, 0, !dbg !6577
  br i1 %tobool113, label %if.then114, label %if.end116, !dbg !6578

if.then114:                                       ; preds = %if.end107
  %119 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6579
  %dev115 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %119, i32 0, i32 41, !dbg !6579
  %120 = load i32, i32* %irq, align 4, !dbg !6579
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev115, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i32 %120) #12, !dbg !6579
  br label %out_free_scb_list, !dbg !6581

if.end116:                                        ; preds = %if.end107
  %121 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6582
  %call117 = call i32 @mega_setup_mailbox(%struct.adapter_t* %121) #11, !dbg !6584
  %tobool118 = icmp ne i32 %call117, 0, !dbg !6584
  br i1 %tobool118, label %if.then119, label %if.end120, !dbg !6585

if.then119:                                       ; preds = %if.end116
  br label %out_free_irq, !dbg !6586

if.end120:                                        ; preds = %if.end116
  %122 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6587
  %call121 = call i32 @mega_query_adapter(%struct.adapter_t* %122) #11, !dbg !6589
  %tobool122 = icmp ne i32 %call121, 0, !dbg !6589
  br i1 %tobool122, label %if.then123, label %if.end124, !dbg !6590

if.then123:                                       ; preds = %if.end120
  br label %out_free_mbox, !dbg !6591

if.end124:                                        ; preds = %if.end120
  %123 = load i16, i16* %subsysid, align 2, !dbg !6592
  %conv125 = zext i16 %123 to i32, !dbg !6592
  %cmp126 = icmp eq i32 %conv125, 4369, !dbg !6594
  br i1 %cmp126, label %land.lhs.true128, label %if.end143, !dbg !6595

land.lhs.true128:                                 ; preds = %if.end124
  %124 = load i16, i16* %subsysvid, align 2, !dbg !6596
  %conv129 = zext i16 %124 to i32, !dbg !6596
  %cmp130 = icmp eq i32 %conv129, 4369, !dbg !6597
  br i1 %cmp130, label %if.then132, label %if.end143, !dbg !6598

if.then132:                                       ; preds = %land.lhs.true128
  %125 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6599
  %fw_version = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %125, i32 0, i32 21, !dbg !6602
  %arraydecay133 = getelementptr inbounds [7 x i8], [7 x i8]* %fw_version, i64 0, i64 0, !dbg !6599
  %call134 = call i32 @strcmp(i8* %arraydecay133, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)) #11, !dbg !6603
  %tobool135 = icmp ne i32 %call134, 0, !dbg !6603
  br i1 %tobool135, label %lor.lhs.false, label %if.then140, !dbg !6604

lor.lhs.false:                                    ; preds = %if.then132
  %126 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6605
  %fw_version136 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %126, i32 0, i32 21, !dbg !6606
  %arraydecay137 = getelementptr inbounds [7 x i8], [7 x i8]* %fw_version136, i64 0, i64 0, !dbg !6605
  %call138 = call i32 @strcmp(i8* %arraydecay137, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #11, !dbg !6607
  %tobool139 = icmp ne i32 %call138, 0, !dbg !6607
  br i1 %tobool139, label %if.end142, label %if.then140, !dbg !6608

if.then140:                                       ; preds = %lor.lhs.false, %if.then132
  %127 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6609
  %dev141 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %127, i32 0, i32 41, !dbg !6609
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev141, i8* getelementptr inbounds ([435 x i8], [435 x i8]* @.str.14, i64 0, i64 0)) #12, !dbg !6609
  br label %if.end142, !dbg !6611

if.end142:                                        ; preds = %if.then140, %lor.lhs.false
  br label %if.end143, !dbg !6612

if.end143:                                        ; preds = %if.end142, %land.lhs.true128, %if.end124
  %128 = load i16, i16* %subsysvid, align 2, !dbg !6613
  %conv144 = zext i16 %128 to i32, !dbg !6613
  %cmp145 = icmp eq i32 %conv144, 4156, !dbg !6615
  br i1 %cmp145, label %land.lhs.true147, label %if.end177, !dbg !6616

land.lhs.true147:                                 ; preds = %if.end143
  %129 = load i16, i16* %subsysid, align 2, !dbg !6617
  %conv148 = zext i16 %129 to i32, !dbg !6617
  %cmp149 = icmp eq i32 %conv148, 24807, !dbg !6618
  br i1 %cmp149, label %if.then155, label %lor.lhs.false151, !dbg !6619

lor.lhs.false151:                                 ; preds = %land.lhs.true147
  %130 = load i16, i16* %subsysid, align 2, !dbg !6620
  %conv152 = zext i16 %130 to i32, !dbg !6620
  %cmp153 = icmp eq i32 %conv152, 24808, !dbg !6621
  br i1 %cmp153, label %if.then155, label %if.end177, !dbg !6622

if.then155:                                       ; preds = %lor.lhs.false151, %land.lhs.true147
  %131 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6623
  %fw_version156 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %131, i32 0, i32 21, !dbg !6626
  %arraydecay157 = getelementptr inbounds [7 x i8], [7 x i8]* %fw_version156, i64 0, i64 0, !dbg !6623
  %call158 = call i32 @strcmp(i8* %arraydecay157, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0)) #11, !dbg !6627
  %tobool159 = icmp ne i32 %call158, 0, !dbg !6627
  br i1 %tobool159, label %lor.lhs.false160, label %if.then170, !dbg !6628

lor.lhs.false160:                                 ; preds = %if.then155
  %132 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6629
  %fw_version161 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %132, i32 0, i32 21, !dbg !6630
  %arraydecay162 = getelementptr inbounds [7 x i8], [7 x i8]* %fw_version161, i64 0, i64 0, !dbg !6629
  %call163 = call i32 @strcmp(i8* %arraydecay162, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0)) #11, !dbg !6631
  %tobool164 = icmp ne i32 %call163, 0, !dbg !6631
  br i1 %tobool164, label %lor.lhs.false165, label %if.then170, !dbg !6632

lor.lhs.false165:                                 ; preds = %lor.lhs.false160
  %133 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6633
  %fw_version166 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %133, i32 0, i32 21, !dbg !6634
  %arraydecay167 = getelementptr inbounds [7 x i8], [7 x i8]* %fw_version166, i64 0, i64 0, !dbg !6633
  %call168 = call i32 @strcmp(i8* %arraydecay167, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0)) #11, !dbg !6635
  %tobool169 = icmp ne i32 %call168, 0, !dbg !6635
  br i1 %tobool169, label %if.end176, label %if.then170, !dbg !6636

if.then170:                                       ; preds = %lor.lhs.false165, %lor.lhs.false160, %if.then155
  %134 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6637
  %dev171 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %134, i32 0, i32 41, !dbg !6637
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev171, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.18, i64 0, i64 0)) #12, !dbg !6637
  %135 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6639
  %flag172 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %135, i32 0, i32 1, !dbg !6640
  %136 = load i32, i32* %flag172, align 4, !dbg !6641
  %conv173 = zext i32 %136 to i64, !dbg !6641
  %and174 = and i64 %conv173, -67108865, !dbg !6641
  %conv175 = trunc i64 %and174 to i32, !dbg !6641
  store i32 %conv175, i32* %flag172, align 4, !dbg !6641
  br label %if.end176, !dbg !6642

if.end176:                                        ; preds = %if.then170, %lor.lhs.false165
  br label %if.end177, !dbg !6643

if.end177:                                        ; preds = %if.end176, %lor.lhs.false151, %if.end143
  %137 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6644
  %call178 = call i32 @mega_is_bios_enabled(%struct.adapter_t* %137) #11, !dbg !6646
  %tobool179 = icmp ne i32 %call178, 0, !dbg !6646
  br i1 %tobool179, label %if.then180, label %if.end182, !dbg !6647

if.then180:                                       ; preds = %if.end177
  %138 = load i32, i32* @hba_count, align 4, !dbg !6648
  %idxprom = sext i32 %138 to i64, !dbg !6649
  %arrayidx181 = getelementptr [32 x %struct.mega_hbas], [32 x %struct.mega_hbas]* @mega_hbas, i64 0, i64 %idxprom, !dbg !6649
  %is_bios_enabled = getelementptr inbounds %struct.mega_hbas, %struct.mega_hbas* %arrayidx181, i32 0, i32 0, !dbg !6650
  store i32 1, i32* %is_bios_enabled, align 16, !dbg !6651
  br label %if.end182, !dbg !6649

if.end182:                                        ; preds = %if.then180, %if.end177
  %139 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6652
  %140 = load i32, i32* @hba_count, align 4, !dbg !6653
  %idxprom183 = sext i32 %140 to i64, !dbg !6654
  %arrayidx184 = getelementptr [32 x %struct.mega_hbas], [32 x %struct.mega_hbas]* @mega_hbas, i64 0, i64 %idxprom183, !dbg !6654
  %hostdata_addr = getelementptr inbounds %struct.mega_hbas, %struct.mega_hbas* %arrayidx184, i32 0, i32 1, !dbg !6655
  store %struct.adapter_t* %139, %struct.adapter_t** %hostdata_addr, align 8, !dbg !6656
  %141 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6657
  call void @mega_enum_raid_scsi(%struct.adapter_t* %141) #11, !dbg !6658
  %142 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6659
  call void @mega_get_boot_drv(%struct.adapter_t* %142) #11, !dbg !6660
  %143 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6661
  %boot_pdrv_enabled = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %143, i32 0, i32 28, !dbg !6663
  %144 = load i32, i32* %boot_pdrv_enabled, align 8, !dbg !6663
  %tobool185 = icmp ne i32 %144, 0, !dbg !6661
  br i1 %tobool185, label %if.then186, label %if.else203, !dbg !6664

if.then186:                                       ; preds = %if.end182
  %145 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6665
  %product_info = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %145, i32 0, i32 16, !dbg !6667
  %nchannels = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info, i32 0, i32 6, !dbg !6668
  %146 = load i8, i8* %nchannels, align 1, !dbg !6668
  %conv187 = zext i8 %146 to i32, !dbg !6665
  store i32 %conv187, i32* %j, align 4, !dbg !6669
  store i32 0, i32* %i, align 4, !dbg !6670
  br label %for.cond, !dbg !6672

for.cond:                                         ; preds = %for.inc, %if.then186
  %147 = load i32, i32* %i, align 4, !dbg !6673
  %148 = load i32, i32* %j, align 4, !dbg !6675
  %cmp188 = icmp slt i32 %147, %148, !dbg !6676
  br i1 %cmp188, label %for.body, label %for.end, !dbg !6677

for.body:                                         ; preds = %for.cond
  %149 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6678
  %logdrv_chan = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %149, i32 0, i32 35, !dbg !6679
  %150 = load i32, i32* %i, align 4, !dbg !6680
  %idxprom190 = sext i32 %150 to i64, !dbg !6678
  %arrayidx191 = getelementptr [9 x i8], [9 x i8]* %logdrv_chan, i64 0, i64 %idxprom190, !dbg !6678
  store i8 0, i8* %arrayidx191, align 1, !dbg !6681
  br label %for.inc, !dbg !6678

for.inc:                                          ; preds = %for.body
  %151 = load i32, i32* %i, align 4, !dbg !6682
  %inc = add i32 %151, 1, !dbg !6682
  store i32 %inc, i32* %i, align 4, !dbg !6682
  br label %for.cond, !dbg !6683, !llvm.loop !6684

for.end:                                          ; preds = %for.cond
  %152 = load i32, i32* %j, align 4, !dbg !6686
  store i32 %152, i32* %i, align 4, !dbg !6688
  br label %for.cond192, !dbg !6689

for.cond192:                                      ; preds = %for.inc200, %for.end
  %153 = load i32, i32* %i, align 4, !dbg !6690
  %154 = load i32, i32* %j, align 4, !dbg !6692
  %add193 = add i32 4, %154, !dbg !6693
  %cmp194 = icmp slt i32 %153, %add193, !dbg !6694
  br i1 %cmp194, label %for.body196, label %for.end202, !dbg !6695

for.body196:                                      ; preds = %for.cond192
  %155 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6696
  %logdrv_chan197 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %155, i32 0, i32 35, !dbg !6697
  %156 = load i32, i32* %i, align 4, !dbg !6698
  %idxprom198 = sext i32 %156 to i64, !dbg !6696
  %arrayidx199 = getelementptr [9 x i8], [9 x i8]* %logdrv_chan197, i64 0, i64 %idxprom198, !dbg !6696
  store i8 1, i8* %arrayidx199, align 1, !dbg !6699
  br label %for.inc200, !dbg !6696

for.inc200:                                       ; preds = %for.body196
  %157 = load i32, i32* %i, align 4, !dbg !6700
  %inc201 = add i32 %157, 1, !dbg !6700
  store i32 %inc201, i32* %i, align 4, !dbg !6700
  br label %for.cond192, !dbg !6701, !llvm.loop !6702

for.end202:                                       ; preds = %for.cond192
  br label %if.end225, !dbg !6704

if.else203:                                       ; preds = %if.end182
  store i32 0, i32* %i, align 4, !dbg !6705
  br label %for.cond204, !dbg !6708

for.cond204:                                      ; preds = %for.inc211, %if.else203
  %158 = load i32, i32* %i, align 4, !dbg !6709
  %cmp205 = icmp slt i32 %158, 4, !dbg !6711
  br i1 %cmp205, label %for.body207, label %for.end213, !dbg !6712

for.body207:                                      ; preds = %for.cond204
  %159 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6713
  %logdrv_chan208 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %159, i32 0, i32 35, !dbg !6714
  %160 = load i32, i32* %i, align 4, !dbg !6715
  %idxprom209 = sext i32 %160 to i64, !dbg !6713
  %arrayidx210 = getelementptr [9 x i8], [9 x i8]* %logdrv_chan208, i64 0, i64 %idxprom209, !dbg !6713
  store i8 1, i8* %arrayidx210, align 1, !dbg !6716
  br label %for.inc211, !dbg !6713

for.inc211:                                       ; preds = %for.body207
  %161 = load i32, i32* %i, align 4, !dbg !6717
  %inc212 = add i32 %161, 1, !dbg !6717
  store i32 %inc212, i32* %i, align 4, !dbg !6717
  br label %for.cond204, !dbg !6718, !llvm.loop !6719

for.end213:                                       ; preds = %for.cond204
  store i32 4, i32* %i, align 4, !dbg !6721
  br label %for.cond214, !dbg !6723

for.cond214:                                      ; preds = %for.inc221, %for.end213
  %162 = load i32, i32* %i, align 4, !dbg !6724
  %cmp215 = icmp slt i32 %162, 9, !dbg !6726
  br i1 %cmp215, label %for.body217, label %for.end223, !dbg !6727

for.body217:                                      ; preds = %for.cond214
  %163 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6728
  %logdrv_chan218 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %163, i32 0, i32 35, !dbg !6729
  %164 = load i32, i32* %i, align 4, !dbg !6730
  %idxprom219 = sext i32 %164 to i64, !dbg !6728
  %arrayidx220 = getelementptr [9 x i8], [9 x i8]* %logdrv_chan218, i64 0, i64 %idxprom219, !dbg !6728
  store i8 0, i8* %arrayidx220, align 1, !dbg !6731
  br label %for.inc221, !dbg !6728

for.inc221:                                       ; preds = %for.body217
  %165 = load i32, i32* %i, align 4, !dbg !6732
  %inc222 = add i32 %165, 1, !dbg !6732
  store i32 %inc222, i32* %i, align 4, !dbg !6732
  br label %for.cond214, !dbg !6733, !llvm.loop !6734

for.end223:                                       ; preds = %for.cond214
  %166 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6736
  %mega_ch_class = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %166, i32 0, i32 36, !dbg !6737
  %167 = load i32, i32* %mega_ch_class, align 4, !dbg !6738
  %shl224 = shl i32 %167, 4, !dbg !6738
  store i32 %shl224, i32* %mega_ch_class, align 4, !dbg !6738
  br label %if.end225

if.end225:                                        ; preds = %for.end223, %for.end202
  %168 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6739
  %read_ldidmap = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %168, i32 0, i32 32, !dbg !6740
  store i32 0, i32* %read_ldidmap, align 8, !dbg !6741
  %169 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6742
  %call226 = call i32 @mega_support_random_del(%struct.adapter_t* %169) #11, !dbg !6743
  %170 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6744
  %support_random_del = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %170, i32 0, i32 31, !dbg !6745
  store i32 %call226, i32* %support_random_del, align 4, !dbg !6746
  %171 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6747
  %call227 = call i32 @mega_init_scb(%struct.adapter_t* %171) #11, !dbg !6749
  %tobool228 = icmp ne i32 %call227, 0, !dbg !6749
  br i1 %tobool228, label %if.then229, label %if.end230, !dbg !6750

if.then229:                                       ; preds = %if.end225
  br label %out_free_mbox, !dbg !6751

if.end230:                                        ; preds = %if.end225
  %172 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6752
  %pend_cmds = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %172, i32 0, i32 19, !dbg !6753
  store %struct.atomic_t* %pend_cmds, %struct.atomic_t** %v.addr.i, align 8
  store i32 0, i32* %i.addr.i, align 4
  %173 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6754
  %174 = bitcast %struct.atomic_t* %173 to i8*, !dbg !6754
  store i8* %174, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %175 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6755
  %176 = load i64, i64* %size.addr.i.i, align 8, !dbg !6756
  %conv.i.i = trunc i64 %176 to i32, !dbg !6756
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %175, i32 %conv.i.i) #13, !dbg !6757
  %177 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6758
  %178 = load i64, i64* %size.addr.i.i, align 8, !dbg !6758
  call void @kcsan_check_access(i8* %177, i64 %178, i32 5) #13, !dbg !6758
  %179 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6759
  %180 = load i32, i32* %i.addr.i, align 4, !dbg !6760
  store %struct.atomic_t* %179, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %180, i32* %i.addr.i.i, align 4
  %181 = load i32, i32* %i.addr.i.i, align 4, !dbg !6761
  %182 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6761
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %182, i32 0, i32 0, !dbg !6761
  store volatile i32 %181, i32* %counter.i.i, align 4, !dbg !6761
  %183 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6763
  %quiescent = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %183, i32 0, i32 33, !dbg !6764
  store %struct.atomic_t* %quiescent, %struct.atomic_t** %v.addr.i323, align 8
  store i32 0, i32* %i.addr.i324, align 4
  %184 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i323, align 8, !dbg !6765
  %185 = bitcast %struct.atomic_t* %184 to i8*, !dbg !6765
  store i8* %185, i8** %v.addr.i.i321, align 8
  store i64 4, i64* %size.addr.i.i322, align 8
  %186 = load i8*, i8** %v.addr.i.i321, align 8, !dbg !6766
  %187 = load i64, i64* %size.addr.i.i322, align 8, !dbg !6767
  %conv.i.i325 = trunc i64 %187 to i32, !dbg !6767
  %call.i.i326 = call zeroext i1 @kasan_check_write(i8* %186, i32 %conv.i.i325) #13, !dbg !6768
  %188 = load i8*, i8** %v.addr.i.i321, align 8, !dbg !6769
  %189 = load i64, i64* %size.addr.i.i322, align 8, !dbg !6769
  call void @kcsan_check_access(i8* %188, i64 %189, i32 5) #13, !dbg !6769
  %190 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i323, align 8, !dbg !6770
  %191 = load i32, i32* %i.addr.i324, align 4, !dbg !6771
  store %struct.atomic_t* %190, %struct.atomic_t** %v.addr.i1.i319, align 8
  store i32 %191, i32* %i.addr.i.i320, align 4
  %192 = load i32, i32* %i.addr.i.i320, align 4, !dbg !6772
  %193 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i319, align 8, !dbg !6772
  %counter.i.i327 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %193, i32 0, i32 0, !dbg !6772
  store volatile i32 %192, i32* %counter.i.i327, align 4, !dbg !6772
  %194 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6773
  %195 = load i32, i32* @hba_count, align 4, !dbg !6774
  %idxprom231 = sext i32 %195 to i64, !dbg !6775
  %arrayidx232 = getelementptr [32 x %struct.adapter_t*], [32 x %struct.adapter_t*]* @hba_soft_state, i64 0, i64 %idxprom231, !dbg !6775
  store %struct.adapter_t* %194, %struct.adapter_t** %arrayidx232, align 8, !dbg !6776
  %196 = load i32, i32* @hba_count, align 4, !dbg !6777
  store i32 %196, i32* %i, align 4, !dbg !6778
  %197 = load i64, i64* %mega_baseport, align 8, !dbg !6779
  %198 = load i32, i32* %i, align 4, !dbg !6780
  %idxprom233 = sext i32 %198 to i64, !dbg !6781
  %arrayidx234 = getelementptr [32 x %struct.mcontroller], [32 x %struct.mcontroller]* @mcontroller, i64 0, i64 %idxprom233, !dbg !6781
  %base235 = getelementptr inbounds %struct.mcontroller, %struct.mcontroller* %arrayidx234, i32 0, i32 0, !dbg !6782
  store i64 %197, i64* %base235, align 16, !dbg !6783
  %199 = load i32, i32* %irq, align 4, !dbg !6784
  %conv236 = trunc i32 %199 to i8, !dbg !6784
  %200 = load i32, i32* %i, align 4, !dbg !6785
  %idxprom237 = sext i32 %200 to i64, !dbg !6786
  %arrayidx238 = getelementptr [32 x %struct.mcontroller], [32 x %struct.mcontroller]* @mcontroller, i64 0, i64 %idxprom237, !dbg !6786
  %irq239 = getelementptr inbounds %struct.mcontroller, %struct.mcontroller* %arrayidx238, i32 0, i32 1, !dbg !6787
  store i8 %conv236, i8* %irq239, align 8, !dbg !6788
  %201 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6789
  %numldrv = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %201, i32 0, i32 20, !dbg !6790
  %202 = load i8, i8* %numldrv, align 4, !dbg !6790
  %203 = load i32, i32* %i, align 4, !dbg !6791
  %idxprom240 = sext i32 %203 to i64, !dbg !6792
  %arrayidx241 = getelementptr [32 x %struct.mcontroller], [32 x %struct.mcontroller]* @mcontroller, i64 0, i64 %idxprom240, !dbg !6792
  %numldrv242 = getelementptr inbounds %struct.mcontroller, %struct.mcontroller* %arrayidx241, i32 0, i32 2, !dbg !6793
  store i8 %202, i8* %numldrv242, align 1, !dbg !6794
  %204 = load i8, i8* %pci_bus, align 1, !dbg !6795
  %205 = load i32, i32* %i, align 4, !dbg !6796
  %idxprom243 = sext i32 %205 to i64, !dbg !6797
  %arrayidx244 = getelementptr [32 x %struct.mcontroller], [32 x %struct.mcontroller]* @mcontroller, i64 0, i64 %idxprom243, !dbg !6797
  %pcibus = getelementptr inbounds %struct.mcontroller, %struct.mcontroller* %arrayidx244, i32 0, i32 3, !dbg !6798
  store i8 %204, i8* %pcibus, align 2, !dbg !6799
  %206 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !6800
  %device245 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %206, i32 0, i32 1, !dbg !6801
  %207 = load i32, i32* %device245, align 4, !dbg !6801
  %conv246 = trunc i32 %207 to i16, !dbg !6800
  %208 = load i32, i32* %i, align 4, !dbg !6802
  %idxprom247 = sext i32 %208 to i64, !dbg !6803
  %arrayidx248 = getelementptr [32 x %struct.mcontroller], [32 x %struct.mcontroller]* @mcontroller, i64 0, i64 %idxprom247, !dbg !6803
  %pcidev = getelementptr inbounds %struct.mcontroller, %struct.mcontroller* %arrayidx248, i32 0, i32 4, !dbg !6804
  store i16 %conv246, i16* %pcidev, align 4, !dbg !6805
  %209 = load i8, i8* %pci_dev_func, align 1, !dbg !6806
  %conv249 = zext i8 %209 to i32, !dbg !6806
  %and250 = and i32 %conv249, 7, !dbg !6806
  %conv251 = trunc i32 %and250 to i8, !dbg !6806
  %210 = load i32, i32* %i, align 4, !dbg !6807
  %idxprom252 = sext i32 %210 to i64, !dbg !6808
  %arrayidx253 = getelementptr [32 x %struct.mcontroller], [32 x %struct.mcontroller]* @mcontroller, i64 0, i64 %idxprom252, !dbg !6808
  %pcifun = getelementptr inbounds %struct.mcontroller, %struct.mcontroller* %arrayidx253, i32 0, i32 5, !dbg !6809
  store i8 %conv251, i8* %pcifun, align 2, !dbg !6810
  %211 = load i32, i32* %i, align 4, !dbg !6811
  %idxprom254 = sext i32 %211 to i64, !dbg !6812
  %arrayidx255 = getelementptr [32 x %struct.mcontroller], [32 x %struct.mcontroller]* @mcontroller, i64 0, i64 %idxprom254, !dbg !6812
  %pciid = getelementptr inbounds %struct.mcontroller, %struct.mcontroller* %arrayidx255, i32 0, i32 6, !dbg !6813
  store i16 -1, i16* %pciid, align 16, !dbg !6814
  %212 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !6815
  %vendor256 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %212, i32 0, i32 0, !dbg !6816
  %213 = load i32, i32* %vendor256, align 8, !dbg !6816
  %conv257 = trunc i32 %213 to i16, !dbg !6815
  %214 = load i32, i32* %i, align 4, !dbg !6817
  %idxprom258 = sext i32 %214 to i64, !dbg !6818
  %arrayidx259 = getelementptr [32 x %struct.mcontroller], [32 x %struct.mcontroller]* @mcontroller, i64 0, i64 %idxprom258, !dbg !6818
  %pcivendor = getelementptr inbounds %struct.mcontroller, %struct.mcontroller* %arrayidx259, i32 0, i32 7, !dbg !6819
  store i16 %conv257, i16* %pcivendor, align 2, !dbg !6820
  %215 = load i8, i8* %pci_dev_func, align 1, !dbg !6821
  %conv260 = zext i8 %215 to i32, !dbg !6821
  %shr = ashr i32 %conv260, 3, !dbg !6821
  %and261 = and i32 %shr, 31, !dbg !6821
  %conv262 = trunc i32 %and261 to i8, !dbg !6821
  %216 = load i32, i32* %i, align 4, !dbg !6822
  %idxprom263 = sext i32 %216 to i64, !dbg !6823
  %arrayidx264 = getelementptr [32 x %struct.mcontroller], [32 x %struct.mcontroller]* @mcontroller, i64 0, i64 %idxprom263, !dbg !6823
  %pcislot = getelementptr inbounds %struct.mcontroller, %struct.mcontroller* %arrayidx264, i32 0, i32 8, !dbg !6824
  store i8 %conv262, i8* %pcislot, align 4, !dbg !6825
  %217 = load i8, i8* %pci_bus, align 1, !dbg !6826
  %conv265 = zext i8 %217 to i32, !dbg !6826
  %shl266 = shl i32 %conv265, 8, !dbg !6827
  %218 = load i8, i8* %pci_dev_func, align 1, !dbg !6828
  %conv267 = zext i8 %218 to i32, !dbg !6828
  %or268 = or i32 %shl266, %conv267, !dbg !6829
  %219 = load i32, i32* %i, align 4, !dbg !6830
  %idxprom269 = sext i32 %219 to i64, !dbg !6831
  %arrayidx270 = getelementptr [32 x %struct.mcontroller], [32 x %struct.mcontroller]* @mcontroller, i64 0, i64 %idxprom269, !dbg !6831
  %uid = getelementptr inbounds %struct.mcontroller, %struct.mcontroller* %arrayidx270, i32 0, i32 9, !dbg !6832
  store i32 %or268, i32* %uid, align 8, !dbg !6833
  %220 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6834
  %flag271 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %220, i32 0, i32 1, !dbg !6836
  %221 = load i32, i32* %flag271, align 4, !dbg !6836
  %conv272 = zext i32 %221 to i64, !dbg !6834
  %and273 = and i64 %conv272, 67108864, !dbg !6837
  %tobool274 = icmp ne i64 %and273, 0, !dbg !6837
  br i1 %tobool274, label %if.then275, label %if.else278, !dbg !6838

if.then275:                                       ; preds = %if.end230
  %222 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6839
  %dev276 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %222, i32 0, i32 41, !dbg !6841
  %call277 = call i32 @dma_set_mask(%struct.device* %dev276, i64 -1) #11, !dbg !6842
  %223 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6843
  %has_64bit_addr = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %223, i32 0, i32 24, !dbg !6844
  store i32 1, i32* %has_64bit_addr, align 8, !dbg !6845
  br label %if.end282, !dbg !6846

if.else278:                                       ; preds = %if.end230
  %224 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6847
  %dev279 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %224, i32 0, i32 41, !dbg !6849
  %call280 = call i32 @dma_set_mask(%struct.device* %dev279, i64 4294967295) #11, !dbg !6850
  %225 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6851
  %has_64bit_addr281 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %225, i32 0, i32 24, !dbg !6852
  store i32 0, i32* %has_64bit_addr281, align 8, !dbg !6853
  br label %if.end282

if.end282:                                        ; preds = %if.else278, %if.then275
  br label %do.body283, !dbg !6854

do.body283:                                       ; preds = %if.end282
  %226 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6855
  %int_mtx = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %226, i32 0, i32 39, !dbg !6855
  call void @__mutex_init(%struct.mutex* %int_mtx, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), %struct.lock_class_key* @megaraid_probe_one.__key) #11, !dbg !6855
  br label %do.end284, !dbg !6855

do.end284:                                        ; preds = %do.body283
  %227 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6857
  %int_waitq = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %227, i32 0, i32 41, !dbg !6857
  call void @__init_completion(%struct.completion* %int_waitq) #11, !dbg !6857
  %228 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6858
  %this_id = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %228, i32 0, i32 0, !dbg !6859
  store i32 7, i32* %this_id, align 8, !dbg !6860
  %229 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6861
  %host285 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %229, i32 0, i32 13, !dbg !6862
  %230 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host285, align 8, !dbg !6862
  %this_id286 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %230, i32 0, i32 24, !dbg !6863
  store i32 7, i32* %this_id286, align 8, !dbg !6864
  %231 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6865
  %call287 = call i32 @mega_support_cluster(%struct.adapter_t* %231) #11, !dbg !6866
  %232 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6867
  %has_cluster = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %232, i32 0, i32 42, !dbg !6868
  store i32 %call287, i32* %has_cluster, align 8, !dbg !6869
  %233 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6870
  %has_cluster288 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %233, i32 0, i32 42, !dbg !6872
  %234 = load i32, i32* %has_cluster288, align 8, !dbg !6872
  %tobool289 = icmp ne i32 %234, 0, !dbg !6870
  br i1 %tobool289, label %if.then290, label %if.end293, !dbg !6873

if.then290:                                       ; preds = %do.end284
  %235 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6874
  %dev291 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %235, i32 0, i32 41, !dbg !6874
  %236 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6874
  %this_id292 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %236, i32 0, i32 0, !dbg !6874
  %237 = load i32, i32* %this_id292, align 8, !dbg !6874
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev291, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0), i32 %237) #12, !dbg !6874
  br label %if.end293, !dbg !6876

if.end293:                                        ; preds = %if.then290, %do.end284
  %238 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6877
  %239 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6878
  %240 = bitcast %struct.Scsi_Host* %239 to i8*, !dbg !6878
  call void @pci_set_drvdata(%struct.pci_dev* %238, i8* %240) #11, !dbg !6879
  %241 = load i32, i32* @hba_count, align 4, !dbg !6880
  %242 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** @mega_proc_dir_entry, align 8, !dbg !6881
  call void @mega_create_proc_entry(i32 %241, %struct.proc_dir_entry* %242) #11, !dbg !6882
  %243 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6883
  %244 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6884
  %dev294 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %244, i32 0, i32 41, !dbg !6885
  %call295 = call i32 @scsi_add_host(%struct.Scsi_Host* %243, %struct.device* %dev294) #11, !dbg !6886
  store i32 %call295, i32* %error, align 4, !dbg !6887
  %245 = load i32, i32* %error, align 4, !dbg !6888
  %tobool296 = icmp ne i32 %245, 0, !dbg !6888
  br i1 %tobool296, label %if.then297, label %if.end298, !dbg !6890

if.then297:                                       ; preds = %if.end293
  br label %out_free_mbox, !dbg !6891

if.end298:                                        ; preds = %if.end293
  %246 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6892
  call void @scsi_scan_host(%struct.Scsi_Host* %246) #11, !dbg !6893
  %247 = load i32, i32* @hba_count, align 4, !dbg !6894
  %inc299 = add i32 %247, 1, !dbg !6894
  store i32 %inc299, i32* @hba_count, align 4, !dbg !6894
  store i32 0, i32* %retval, align 4, !dbg !6895
  br label %return, !dbg !6895

out_free_mbox:                                    ; preds = %if.then297, %if.then229, %if.then123
  call void @llvm.dbg.label(metadata !6896), !dbg !6897
  %248 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6898
  %dev300 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %248, i32 0, i32 9, !dbg !6899
  %249 = load %struct.pci_dev*, %struct.pci_dev** %dev300, align 8, !dbg !6899
  %dev301 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %249, i32 0, i32 41, !dbg !6900
  %250 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6901
  %una_mbox64 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %250, i32 0, i32 4, !dbg !6902
  %251 = load %struct.mbox64_t*, %struct.mbox64_t** %una_mbox64, align 8, !dbg !6902
  %252 = bitcast %struct.mbox64_t* %251 to i8*, !dbg !6901
  %253 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6903
  %una_mbox64_dma = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %253, i32 0, i32 5, !dbg !6904
  %254 = load i64, i64* %una_mbox64_dma, align 8, !dbg !6904
  call void @dma_free_coherent(%struct.device* %dev301, i64 74, i8* %252, i64 %254) #11, !dbg !6905
  br label %out_free_irq, !dbg !6905

out_free_irq:                                     ; preds = %out_free_mbox, %if.then119
  call void @llvm.dbg.label(metadata !6906), !dbg !6907
  %255 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6908
  %host302 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %255, i32 0, i32 13, !dbg !6909
  %256 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host302, align 8, !dbg !6909
  %irq303 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %256, i32 0, i32 45, !dbg !6910
  %257 = load i32, i32* %irq303, align 4, !dbg !6910
  %258 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6911
  %259 = bitcast %struct.adapter_t* %258 to i8*, !dbg !6911
  %call304 = call i8* @free_irq(i32 %257, i8* %259) #11, !dbg !6912
  br label %out_free_scb_list, !dbg !6912

out_free_scb_list:                                ; preds = %out_free_irq, %if.then114
  call void @llvm.dbg.label(metadata !6913), !dbg !6914
  %260 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6915
  %scb_list305 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %260, i32 0, i32 18, !dbg !6916
  %261 = load %struct.scb_t*, %struct.scb_t** %scb_list305, align 8, !dbg !6916
  %262 = bitcast %struct.scb_t* %261 to i8*, !dbg !6915
  call void @kfree(i8* %262) #11, !dbg !6917
  br label %out_free_cmd_buffer, !dbg !6917

out_free_cmd_buffer:                              ; preds = %out_free_scb_list, %if.then105
  call void @llvm.dbg.label(metadata !6918), !dbg !6919
  %263 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6920
  %dev306 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %263, i32 0, i32 9, !dbg !6921
  %264 = load %struct.pci_dev*, %struct.pci_dev** %dev306, align 8, !dbg !6921
  %dev307 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %264, i32 0, i32 41, !dbg !6922
  %265 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6923
  %mega_buffer308 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %265, i32 0, i32 14, !dbg !6924
  %266 = load i8*, i8** %mega_buffer308, align 8, !dbg !6924
  %267 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6925
  %buf_dma_handle309 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %267, i32 0, i32 15, !dbg !6926
  %268 = load i64, i64* %buf_dma_handle309, align 8, !dbg !6926
  call void @dma_free_coherent(%struct.device* %dev307, i64 2048, i8* %266, i64 %268) #11, !dbg !6927
  br label %out_host_put, !dbg !6927

out_host_put:                                     ; preds = %out_free_cmd_buffer, %if.then99
  call void @llvm.dbg.label(metadata !6928), !dbg !6929
  %269 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6930
  call void @scsi_host_put(%struct.Scsi_Host* %269) #11, !dbg !6931
  br label %out_iounmap, !dbg !6931

out_iounmap:                                      ; preds = %out_host_put, %if.then64
  call void @llvm.dbg.label(metadata !6932), !dbg !6933
  %270 = load i64, i64* %flag, align 8, !dbg !6934
  %and310 = and i64 %270, 536870912, !dbg !6936
  %tobool311 = icmp ne i64 %and310, 0, !dbg !6936
  br i1 %tobool311, label %if.then312, label %if.end313, !dbg !6937

if.then312:                                       ; preds = %out_iounmap
  %271 = load i64, i64* %mega_baseport, align 8, !dbg !6938
  %272 = inttoptr i64 %271 to i8*, !dbg !6939
  call void @iounmap(i8* %272) #11, !dbg !6940
  br label %if.end313, !dbg !6940

if.end313:                                        ; preds = %if.then312, %out_iounmap
  br label %out_release_region, !dbg !6941

out_release_region:                               ; preds = %if.end313, %if.then52
  call void @llvm.dbg.label(metadata !6942), !dbg !6943
  %273 = load i64, i64* %flag, align 8, !dbg !6944
  %and314 = and i64 %273, 536870912, !dbg !6946
  %tobool315 = icmp ne i64 %and314, 0, !dbg !6946
  br i1 %tobool315, label %if.then316, label %if.else317, !dbg !6947

if.then316:                                       ; preds = %out_release_region
  %274 = load i64, i64* %tbase, align 8, !dbg !6948
  call void @__release_region(%struct.resource* @iomem_resource, i64 %274, i64 128) #11, !dbg !6948
  br label %if.end318, !dbg !6948

if.else317:                                       ; preds = %out_release_region
  %275 = load i64, i64* %mega_baseport, align 8, !dbg !6949
  call void @__release_region(%struct.resource* @ioport_resource, i64 %275, i64 16) #11, !dbg !6949
  br label %if.end318

if.end318:                                        ; preds = %if.else317, %if.then316
  br label %out_disable_device, !dbg !6950

out_disable_device:                               ; preds = %if.end318, %if.then59, %if.then47, %if.then23, %if.then13
  call void @llvm.dbg.label(metadata !6951), !dbg !6952
  %276 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6953
  call void @pci_disable_device(%struct.pci_dev* %276) #11, !dbg !6954
  br label %out, !dbg !6954

out:                                              ; preds = %out_disable_device, %if.then1, %if.then
  call void @llvm.dbg.label(metadata !6955), !dbg !6956
  %277 = load i32, i32* %error, align 4, !dbg !6957
  store i32 %277, i32* %retval, align 4, !dbg !6958
  br label %return, !dbg !6958

return:                                           ; preds = %out, %if.end298
  %278 = load i32, i32* %retval, align 4, !dbg !6959
  ret i32 %278, !dbg !6959
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @megaraid_remove_one(%struct.pci_dev* %pdev) #0 !dbg !6960 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %host = alloca %struct.Scsi_Host*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  %buf = alloca [12 x i8], align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6961, metadata !DIExpression()), !dbg !6962
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host, metadata !6963, metadata !DIExpression()), !dbg !6964
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6965
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #11, !dbg !6966
  %1 = bitcast i8* %call to %struct.Scsi_Host*, !dbg !6966
  store %struct.Scsi_Host* %1, %struct.Scsi_Host** %host, align 8, !dbg !6964
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !6967, metadata !DIExpression()), !dbg !6968
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6969
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 51, !dbg !6970
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !6969
  %3 = bitcast i64* %arraydecay to %struct.adapter_t*, !dbg !6971
  store %struct.adapter_t* %3, %struct.adapter_t** %adapter, align 8, !dbg !6968
  call void @llvm.dbg.declare(metadata [12 x i8]* %buf, metadata !6972, metadata !DIExpression()), !dbg !6974
  %4 = bitcast [12 x i8]* %buf to i8*, !dbg !6974
  call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 0, i64 12, i1 false), !dbg !6974
  %5 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !6975
  call void @scsi_remove_host(%struct.Scsi_Host* %5) #11, !dbg !6976
  %6 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6977
  call void @__megaraid_shutdown(%struct.adapter_t* %6) #11, !dbg !6978
  %7 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6979
  %flag = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %7, i32 0, i32 1, !dbg !6981
  %8 = load i32, i32* %flag, align 4, !dbg !6981
  %conv = zext i32 %8 to i64, !dbg !6979
  %and = and i64 %conv, 536870912, !dbg !6982
  %tobool = icmp ne i64 %and, 0, !dbg !6982
  br i1 %tobool, label %if.then, label %if.else, !dbg !6983

if.then:                                          ; preds = %entry
  %9 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6984
  %base = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %9, i32 0, i32 2, !dbg !6986
  %10 = load i64, i64* %base, align 8, !dbg !6986
  %11 = inttoptr i64 %10 to i8*, !dbg !6987
  call void @iounmap(i8* %11) #11, !dbg !6988
  %12 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6989
  %host1 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %12, i32 0, i32 13, !dbg !6989
  %13 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host1, align 8, !dbg !6989
  %base2 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %13, i32 0, i32 41, !dbg !6989
  %14 = load i64, i64* %base2, align 8, !dbg !6989
  call void @__release_region(%struct.resource* @iomem_resource, i64 %14, i64 128) #11, !dbg !6989
  br label %if.end, !dbg !6990

if.else:                                          ; preds = %entry
  %15 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6991
  %base3 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %15, i32 0, i32 2, !dbg !6991
  %16 = load i64, i64* %base3, align 8, !dbg !6991
  call void @__release_region(%struct.resource* @ioport_resource, i64 %16, i64 16) #11, !dbg !6991
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6992
  call void @mega_free_sgl(%struct.adapter_t* %17) #11, !dbg !6993
  %arraydecay4 = getelementptr inbounds [12 x i8], [12 x i8]* %buf, i64 0, i64 0, !dbg !6994
  %18 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !6995
  %host5 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %18, i32 0, i32 13, !dbg !6996
  %19 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host5, align 8, !dbg !6996
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %19, i32 0, i32 16, !dbg !6997
  %20 = load i32, i32* %host_no, align 4, !dbg !6997
  %call6 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0), i32 %20) #11, !dbg !6998
  %arraydecay7 = getelementptr inbounds [12 x i8], [12 x i8]* %buf, i64 0, i64 0, !dbg !6999
  %21 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** @mega_proc_dir_entry, align 8, !dbg !7000
  %call8 = call i32 @remove_proc_subtree(i8* %arraydecay7, %struct.proc_dir_entry* %21) #11, !dbg !7001
  %22 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7002
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %22, i32 0, i32 9, !dbg !7003
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7003
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 41, !dbg !7004
  %24 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7005
  %mega_buffer = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %24, i32 0, i32 14, !dbg !7006
  %25 = load i8*, i8** %mega_buffer, align 8, !dbg !7006
  %26 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7007
  %buf_dma_handle = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %26, i32 0, i32 15, !dbg !7008
  %27 = load i64, i64* %buf_dma_handle, align 8, !dbg !7008
  call void @dma_free_coherent(%struct.device* %dev9, i64 2048, i8* %25, i64 %27) #11, !dbg !7009
  %28 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7010
  %scb_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %28, i32 0, i32 18, !dbg !7011
  %29 = load %struct.scb_t*, %struct.scb_t** %scb_list, align 8, !dbg !7011
  %30 = bitcast %struct.scb_t* %29 to i8*, !dbg !7010
  call void @kfree(i8* %30) #11, !dbg !7012
  %31 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7013
  %dev10 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %31, i32 0, i32 9, !dbg !7014
  %32 = load %struct.pci_dev*, %struct.pci_dev** %dev10, align 8, !dbg !7014
  %dev11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 41, !dbg !7015
  %33 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7016
  %una_mbox64 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %33, i32 0, i32 4, !dbg !7017
  %34 = load %struct.mbox64_t*, %struct.mbox64_t** %una_mbox64, align 8, !dbg !7017
  %35 = bitcast %struct.mbox64_t* %34 to i8*, !dbg !7016
  %36 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7018
  %una_mbox64_dma = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %36, i32 0, i32 5, !dbg !7019
  %37 = load i64, i64* %una_mbox64_dma, align 8, !dbg !7019
  call void @dma_free_coherent(%struct.device* %dev11, i64 74, i8* %35, i64 %37) #11, !dbg !7020
  %38 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7021
  call void @scsi_host_put(%struct.Scsi_Host* %38) #11, !dbg !7022
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7023
  call void @pci_disable_device(%struct.pci_dev* %39) #11, !dbg !7024
  %40 = load i32, i32* @hba_count, align 4, !dbg !7025
  %dec = add i32 %40, -1, !dbg !7025
  store i32 %dec, i32* @hba_count, align 4, !dbg !7025
  ret void, !dbg !7026
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @megaraid_shutdown(%struct.pci_dev* %pdev) #0 !dbg !7027 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %host = alloca %struct.Scsi_Host*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7028, metadata !DIExpression()), !dbg !7029
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host, metadata !7030, metadata !DIExpression()), !dbg !7031
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7032
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #11, !dbg !7033
  %1 = bitcast i8* %call to %struct.Scsi_Host*, !dbg !7033
  store %struct.Scsi_Host* %1, %struct.Scsi_Host** %host, align 8, !dbg !7031
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !7034, metadata !DIExpression()), !dbg !7035
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7036
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 51, !dbg !7037
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !7036
  %3 = bitcast i64* %arraydecay to %struct.adapter_t*, !dbg !7038
  store %struct.adapter_t* %3, %struct.adapter_t** %adapter, align 8, !dbg !7035
  %4 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7039
  call void @__megaraid_shutdown(%struct.adapter_t* %4) #11, !dbg !7040
  ret void, !dbg !7041
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_word(%struct.pci_dev*, i32, i16*) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_dword(%struct.pci_dev*, i32, i32*) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_notice(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #2

; Function Attrs: noredzone
declare dso_local %struct.Scsi_Host* @scsi_host_alloc(%struct.scsi_host_template*, i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !7042 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !7046, metadata !DIExpression()), !dbg !7047
  br label %do.body, !dbg !7048

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7049

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !7051

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !7049

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7053
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7053
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !7053
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !7053
  br label %do.end3, !dbg !7053

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !7049

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7055
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7056
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !7057
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !7058
  ret void, !dbg !7059
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #0 !dbg !7060 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7064, metadata !DIExpression()), !dbg !7065
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7066, metadata !DIExpression()), !dbg !7067
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !7068, metadata !DIExpression()), !dbg !7069
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !7070, metadata !DIExpression()), !dbg !7071
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7072
  %1 = load i64, i64* %size.addr, align 8, !dbg !7073
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !7074
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !7075
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !7076
  %and = and i32 %4, 8192, !dbg !7077
  %tobool = icmp ne i32 %and, 0, !dbg !7078
  %5 = zext i1 %tobool to i64, !dbg !7078
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !7078
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #11, !dbg !7079
  ret i8* %call, !dbg !7080
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !7081 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7084, metadata !DIExpression()), !dbg !7088
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7097, metadata !DIExpression()), !dbg !7098
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7099, metadata !DIExpression()), !dbg !7100
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7101, metadata !DIExpression()), !dbg !7102
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7103, metadata !DIExpression()), !dbg !7107
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7109, metadata !DIExpression()), !dbg !7113
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7115, metadata !DIExpression()), !dbg !7119
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7124, metadata !DIExpression()), !dbg !7125
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7126, metadata !DIExpression()), !dbg !7127
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7128, metadata !DIExpression()), !dbg !7129
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7130, metadata !DIExpression()), !dbg !7131
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7132, metadata !DIExpression()), !dbg !7133
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7134, metadata !DIExpression()), !dbg !7135
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7136, metadata !DIExpression()), !dbg !7137
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7138, metadata !DIExpression()), !dbg !7139
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7140, metadata !DIExpression()), !dbg !7141
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7142, metadata !DIExpression()), !dbg !7143
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7144, metadata !DIExpression()), !dbg !7145
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !7146, metadata !DIExpression()), !dbg !7147
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !7148, metadata !DIExpression()), !dbg !7151
  %0 = load i64, i64* %n.addr, align 8, !dbg !7151
  store i64 %0, i64* %__a, align 8, !dbg !7151
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !7152, metadata !DIExpression()), !dbg !7151
  %1 = load i64, i64* %size.addr, align 8, !dbg !7151
  store i64 %1, i64* %__b, align 8, !dbg !7151
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !7153, metadata !DIExpression()), !dbg !7151
  store i64* %bytes, i64** %__d, align 8, !dbg !7151
  %cmp = icmp eq i64* %__a, %__b, !dbg !7151
  %conv = zext i1 %cmp to i32, !dbg !7151
  %2 = load i64*, i64** %__d, align 8, !dbg !7151
  %cmp1 = icmp eq i64* %__a, %2, !dbg !7151
  %conv2 = zext i1 %cmp1 to i32, !dbg !7151
  %3 = load i64, i64* %__a, align 8, !dbg !7151
  %4 = load i64, i64* %__b, align 8, !dbg !7151
  %5 = load i64*, i64** %__d, align 8, !dbg !7151
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !7151
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !7151
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !7151
  store i64 %8, i64* %5, align 8, !dbg !7151
  %frombool = zext i1 %7 to i8, !dbg !7151
  store i8 %frombool, i8* %tmp, align 1, !dbg !7151
  %9 = load i8, i8* %tmp, align 1, !dbg !7151
  %tobool = trunc i8 %9 to i1, !dbg !7151
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !7155
  %lnot = xor i1 %call, true, !dbg !7155
  %lnot3 = xor i1 %lnot, true, !dbg !7155
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7155
  %conv4 = sext i32 %lnot.ext to i64, !dbg !7155
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !7155
  br i1 %tobool5, label %if.then, label %if.end, !dbg !7156

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !7157
  br label %return, !dbg !7157

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !7158
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !7159
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !7160

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !7161
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !7162
  br i1 %13, label %if.then6, label %if.end8, !dbg !7163

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !7164
  %15 = load i32, i32* %flags.addr, align 4, !dbg !7165
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !7166
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #7, !dbg !7167
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !7168

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !7169
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !7170
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7171

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !7172
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !7173
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !7174
  %call.i.i = call i32 @get_order(i64 %21) #14, !dbg !7175
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7133
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !7176
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7177
  %24 = load i32, i32* %order.i.i, align 4, !dbg !7178
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7179
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7180
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7181
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #13, !dbg !7182
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7182
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7182
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7182
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !7182
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7183
  br label %kmalloc.exit, !dbg !7183

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !7184
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7185
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !7185
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7187

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7188
  br label %kmalloc_index.exit.i, !dbg !7188

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7189
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !7191
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7192

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7193
  br label %kmalloc_index.exit.i, !dbg !7193

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7194
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !7196
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7197

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7198
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !7199
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7200

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7201
  br label %kmalloc_index.exit.i, !dbg !7201

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7202
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !7204
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7205

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7206
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !7207
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7208

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7209
  br label %kmalloc_index.exit.i, !dbg !7209

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7210
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !7212
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7213

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7214
  br label %kmalloc_index.exit.i, !dbg !7214

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7215
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !7217
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7218

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7219
  br label %kmalloc_index.exit.i, !dbg !7219

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7220
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !7222
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7223

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7224
  br label %kmalloc_index.exit.i, !dbg !7224

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7225
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !7227
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7228

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7229
  br label %kmalloc_index.exit.i, !dbg !7229

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7230
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !7232
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7233

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7234
  br label %kmalloc_index.exit.i, !dbg !7234

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7235
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !7237
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7238

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7239
  br label %kmalloc_index.exit.i, !dbg !7239

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7240
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !7242
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7243

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7244
  br label %kmalloc_index.exit.i, !dbg !7244

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7245
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !7247
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7248

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7249
  br label %kmalloc_index.exit.i, !dbg !7249

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7250
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !7252
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7253

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7254
  br label %kmalloc_index.exit.i, !dbg !7254

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7255
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !7257
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7258

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7259
  br label %kmalloc_index.exit.i, !dbg !7259

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7260
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !7262
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7263

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7264
  br label %kmalloc_index.exit.i, !dbg !7264

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7265
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !7267
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7268

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7269
  br label %kmalloc_index.exit.i, !dbg !7269

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7270
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !7272
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7273

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7274
  br label %kmalloc_index.exit.i, !dbg !7274

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7275
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !7277
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7278

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7279
  br label %kmalloc_index.exit.i, !dbg !7279

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7280
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !7282
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7283

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7284
  br label %kmalloc_index.exit.i, !dbg !7284

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7285
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !7287
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7288

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7289
  br label %kmalloc_index.exit.i, !dbg !7289

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7290
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !7292
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7293

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7294
  br label %kmalloc_index.exit.i, !dbg !7294

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7295
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !7297
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7298

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7299
  br label %kmalloc_index.exit.i, !dbg !7299

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7300
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !7302
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7303

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7304
  br label %kmalloc_index.exit.i, !dbg !7304

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7305
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !7307
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7308

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7309
  br label %kmalloc_index.exit.i, !dbg !7309

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7310
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !7312
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7313

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7314
  br label %kmalloc_index.exit.i, !dbg !7314

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7315
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !7317
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7318

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7319
  br label %kmalloc_index.exit.i, !dbg !7319

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7320
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !7322
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7323

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7324
  br label %kmalloc_index.exit.i, !dbg !7324

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7325
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !7327
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7328

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7329
  br label %kmalloc_index.exit.i, !dbg !7329

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !7330, !srcloc !7333
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 214) #7, !dbg !7334, !srcloc !7337
  unreachable, !dbg !7338

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !7339
  store i32 %59, i32* %index.i, align 4, !dbg !7340
  %60 = load i32, i32* %index.i, align 4, !dbg !7341
  %tobool.i = icmp ne i32 %60, 0, !dbg !7341
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7343

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7344
  br label %kmalloc.exit, !dbg !7344

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !7345
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7346
  %and.i.i = and i32 %62, 17, !dbg !7346
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7346
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7346
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7346
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7346
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7348

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7349
  br label %kmalloc_type.exit.i, !dbg !7349

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7350
  %and2.i.i = and i32 %63, 1, !dbg !7351
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7350
  %64 = zext i1 %tobool3.i.i to i64, !dbg !7350
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7350
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7352
  br label %kmalloc_type.exit.i, !dbg !7352

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !7353
  %idxprom.i = zext i32 %65 to i64, !dbg !7354
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7354
  %66 = load i32, i32* %index.i, align 4, !dbg !7355
  %idxprom6.i = zext i32 %66 to i64, !dbg !7354
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7354
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7354
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !7356
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !7357
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7358
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7359
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #13, !dbg !7360
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7360
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7360
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7360
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !7360
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7102
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7361
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !7362
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7363
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7364
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #13, !dbg !7365
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7366
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !7367
  store i8* %76, i8** %retval.i, align 8, !dbg !7368
  br label %kmalloc.exit, !dbg !7368

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !7369
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !7370
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #13, !dbg !7371
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7371
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7371
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7371
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !7371
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7372
  br label %kmalloc.exit, !dbg !7372

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !7373
  store i8* %79, i8** %retval, align 8, !dbg !7374
  br label %return, !dbg !7374

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !7375
  %81 = load i32, i32* %flags.addr, align 4, !dbg !7376
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !7377
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !7377
  %maskedptr = and i64 %ptrint, 7, !dbg !7377
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !7377
  call void @llvm.assume(i1 %maskcond), !dbg !7377
  store i8* %call9, i8** %retval, align 8, !dbg !7378
  br label %return, !dbg !7378

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !7379
  ret i8* %82, !dbg !7379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #0 !dbg !7380 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7389, metadata !DIExpression()), !dbg !7390
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !7391, metadata !DIExpression()), !dbg !7392
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !7393, metadata !DIExpression()), !dbg !7394
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7395, metadata !DIExpression()), !dbg !7396
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !7397, metadata !DIExpression()), !dbg !7398
  %0 = load i32, i32* %irq.addr, align 4, !dbg !7399
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !7400
  %2 = load i64, i64* %flags.addr, align 8, !dbg !7401
  %3 = load i8*, i8** %name.addr, align 8, !dbg !7402
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !7403
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #11, !dbg !7404
  ret i32 %call, !dbg !7405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @megaraid_isr_memmapped(i32 %irq, i8* %devp) #0 !dbg !7406 {
entry:
  %v.addr.i1.i61 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i61, metadata !7407, metadata !DIExpression()), !dbg !7413
  %v.addr.i.i62 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i62, metadata !7419, metadata !DIExpression()), !dbg !7421
  %size.addr.i.i63 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i63, metadata !7423, metadata !DIExpression()), !dbg !7424
  %v.addr.i64 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i64, metadata !7425, metadata !DIExpression()), !dbg !7426
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !7427, metadata !DIExpression()), !dbg !7431
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7435, metadata !DIExpression()), !dbg !7436
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7437, metadata !DIExpression()), !dbg !7439
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7441, metadata !DIExpression()), !dbg !7442
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !7443, metadata !DIExpression()), !dbg !7444
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7445, metadata !DIExpression()), !dbg !7446
  %lock.addr.i59 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i59, metadata !7447, metadata !DIExpression()), !dbg !7451
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7453, metadata !DIExpression()), !dbg !7454
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6303, metadata !DIExpression()), !dbg !7455
  %irq.addr = alloca i32, align 4
  %devp.addr = alloca i8*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  %flags = alloca i64, align 8
  %status = alloca i8, align 1
  %dword = alloca i32, align 4
  %nstatus = alloca i8, align 1
  %completed = alloca [46 x i8], align 16
  %handled = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7462, metadata !DIExpression()), !dbg !7463
  store i8* %devp, i8** %devp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devp.addr, metadata !7464, metadata !DIExpression()), !dbg !7465
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !7466, metadata !DIExpression()), !dbg !7467
  %0 = load i8*, i8** %devp.addr, align 8, !dbg !7468
  %1 = bitcast i8* %0 to %struct.adapter_t*, !dbg !7468
  store %struct.adapter_t* %1, %struct.adapter_t** %adapter, align 8, !dbg !7467
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7469, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.declare(metadata i8* %status, metadata !7471, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.declare(metadata i32* %dword, metadata !7473, metadata !DIExpression()), !dbg !7474
  store i32 0, i32* %dword, align 4, !dbg !7474
  call void @llvm.dbg.declare(metadata i8* %nstatus, metadata !7475, metadata !DIExpression()), !dbg !7476
  call void @llvm.dbg.declare(metadata [46 x i8]* %completed, metadata !7477, metadata !DIExpression()), !dbg !7479
  call void @llvm.dbg.declare(metadata i32* %handled, metadata !7480, metadata !DIExpression()), !dbg !7481
  store i32 0, i32* %handled, align 4, !dbg !7481
  br label %do.body, !dbg !7482

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7483

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7484, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7487, metadata !DIExpression()), !dbg !7486
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7486
  %conv = zext i1 %cmp to i32, !dbg !7486
  store i32 1, i32* %tmp, align 4, !dbg !7486
  %2 = load i32, i32* %tmp, align 4, !dbg !7486
  br label %do.body2, !dbg !7488

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7489

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7490

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7492, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7496, metadata !DIExpression()), !dbg !7495
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7495
  %conv8 = zext i1 %cmp7 to i32, !dbg !7495
  store i32 1, i32* %tmp9, align 4, !dbg !7495
  %3 = load i32, i32* %tmp9, align 4, !dbg !7495
  %call = call i64 @arch_local_irq_save() #11, !dbg !7497
  store i64 %call, i64* %flags, align 8, !dbg !7497
  br label %do.end, !dbg !7497

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7490

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7489

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7498, !srcloc !7499
  br label %do.body12, !dbg !7498

do.body12:                                        ; preds = %do.body11
  %4 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7500
  %lock = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %4, i32 0, i32 34, !dbg !7500
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7501
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !7502
  %rlock.i = bitcast %union.anon.1* %6 to %struct.raw_spinlock*, !dbg !7502
  br label %do.end14, !dbg !7500

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7498

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7489

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7488

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7483

do.end18:                                         ; preds = %do.end17
  br label %do.body19, !dbg !7503

do.body19:                                        ; preds = %do.cond, %do.end18
  %7 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7504
  %mmio_base = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %7, i32 0, i32 3, !dbg !7504
  %8 = load i8*, i8** %mmio_base, align 8, !dbg !7504
  %add.ptr = getelementptr i8, i8* %8, i64 44, !dbg !7504
  %call20 = call i32 @readl(i8* %add.ptr) #11, !dbg !7504
  store i32 %call20, i32* %dword, align 4, !dbg !7505
  %9 = load i32, i32* %dword, align 4, !dbg !7506
  %cmp21 = icmp ne i32 %9, 268440116, !dbg !7508
  br i1 %cmp21, label %if.then, label %if.end, !dbg !7509

if.then:                                          ; preds = %do.body19
  br label %out_unlock, !dbg !7510

if.end:                                           ; preds = %do.body19
  %10 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7512
  %mmio_base23 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %10, i32 0, i32 3, !dbg !7512
  %11 = load i8*, i8** %mmio_base23, align 8, !dbg !7512
  %add.ptr24 = getelementptr i8, i8* %11, i64 44, !dbg !7512
  call void @writel(i32 268440116, i8* %add.ptr24) #11, !dbg !7512
  br label %while.cond, !dbg !7513

while.cond:                                       ; preds = %while.body, %if.end
  %12 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7514
  %mbox = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %12, i32 0, i32 7, !dbg !7515
  %13 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !7515
  %m_in = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %13, i32 0, i32 1, !dbg !7516
  %numstatus = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in, i32 0, i32 1, !dbg !7517
  %14 = load volatile i8, i8* %numstatus, align 1, !dbg !7517
  store i8 %14, i8* %nstatus, align 1, !dbg !7518
  %conv25 = zext i8 %14 to i32, !dbg !7519
  %cmp26 = icmp eq i32 %conv25, 255, !dbg !7520
  br i1 %cmp26, label %while.body, label %while.end, !dbg !7513

while.body:                                       ; preds = %while.cond
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7521, !srcloc !7528
  br label %while.cond, !dbg !7513, !llvm.loop !7529

while.end:                                        ; preds = %while.cond
  %15 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7531
  %mbox28 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %15, i32 0, i32 7, !dbg !7532
  %16 = load %struct.mbox_t*, %struct.mbox_t** %mbox28, align 8, !dbg !7532
  %m_in29 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %16, i32 0, i32 1, !dbg !7533
  %numstatus30 = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in29, i32 0, i32 1, !dbg !7534
  store volatile i8 -1, i8* %numstatus30, align 1, !dbg !7535
  %17 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7536
  %mbox31 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %17, i32 0, i32 7, !dbg !7537
  %18 = load %struct.mbox_t*, %struct.mbox_t** %mbox31, align 8, !dbg !7537
  %m_in32 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %18, i32 0, i32 1, !dbg !7538
  %status33 = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in32, i32 0, i32 2, !dbg !7539
  %19 = load volatile i8, i8* %status33, align 1, !dbg !7539
  store i8 %19, i8* %status, align 1, !dbg !7540
  %20 = load i8, i8* %nstatus, align 1, !dbg !7541
  %conv34 = zext i8 %20 to i32, !dbg !7541
  %21 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7542
  %pend_cmds = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %21, i32 0, i32 19, !dbg !7543
  store i32 %conv34, i32* %i.addr.i, align 4
  store %struct.atomic_t* %pend_cmds, %struct.atomic_t** %v.addr.i, align 8
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7544
  %23 = bitcast %struct.atomic_t* %22 to i8*, !dbg !7544
  store i8* %23, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %24 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7545
  %25 = load i64, i64* %size.addr.i.i, align 8, !dbg !7546
  %conv.i.i = trunc i64 %25 to i32, !dbg !7546
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %24, i32 %conv.i.i) #13, !dbg !7547
  %26 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7548
  %27 = load i64, i64* %size.addr.i.i, align 8, !dbg !7548
  call void @kcsan_check_access(i8* %26, i64 %27, i32 7) #13, !dbg !7548
  %28 = load i32, i32* %i.addr.i, align 4, !dbg !7549
  %29 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7550
  store i32 %28, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %29, %struct.atomic_t** %v.addr.i1.i, align 8
  %30 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7551
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %30, i32 0, i32 0, !dbg !7552
  %31 = load i32, i32* %i.addr.i.i, align 4, !dbg !7553
  call void asm sideeffect "subl $1,$0", "=*m,ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %31, i32* %counter.i.i) #7, !dbg !7554, !srcloc !7555
  %arraydecay = getelementptr inbounds [46 x i8], [46 x i8]* %completed, i64 0, i64 0, !dbg !7556
  %32 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7557
  %mbox35 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %32, i32 0, i32 7, !dbg !7558
  %33 = load %struct.mbox_t*, %struct.mbox_t** %mbox35, align 8, !dbg !7558
  %m_in36 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %33, i32 0, i32 1, !dbg !7559
  %completed37 = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in36, i32 0, i32 3, !dbg !7560
  %arraydecay38 = getelementptr inbounds [46 x i8], [46 x i8]* %completed37, i64 0, i64 0, !dbg !7557
  %34 = load i8, i8* %nstatus, align 1, !dbg !7561
  %conv39 = zext i8 %34 to i64, !dbg !7561
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %arraydecay, i8* align 1 %arraydecay38, i64 %conv39, i1 false), !dbg !7556
  %35 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7562
  %mmio_base40 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %35, i32 0, i32 3, !dbg !7562
  %36 = load i8*, i8** %mmio_base40, align 8, !dbg !7562
  %add.ptr41 = getelementptr i8, i8* %36, i64 32, !dbg !7562
  call void @writel(i32 2, i8* %add.ptr41) #11, !dbg !7562
  store i32 1, i32* %handled, align 4, !dbg !7563
  br label %while.cond42, !dbg !7564

while.cond42:                                     ; preds = %while.body46, %while.end
  %37 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7565
  %mmio_base43 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %37, i32 0, i32 3, !dbg !7565
  %38 = load i8*, i8** %mmio_base43, align 8, !dbg !7565
  %add.ptr44 = getelementptr i8, i8* %38, i64 32, !dbg !7565
  %call45 = call i32 @readl(i8* %add.ptr44) #11, !dbg !7565
  %and = and i32 %call45, 2, !dbg !7566
  %tobool = icmp ne i32 %and, 0, !dbg !7564
  br i1 %tobool, label %while.body46, label %while.end47, !dbg !7564

while.body46:                                     ; preds = %while.cond42
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7567, !srcloc !7528
  br label %while.cond42, !dbg !7564, !llvm.loop !7570

while.end47:                                      ; preds = %while.cond42
  %39 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7572
  %arraydecay48 = getelementptr inbounds [46 x i8], [46 x i8]* %completed, i64 0, i64 0, !dbg !7573
  %40 = load i8, i8* %nstatus, align 1, !dbg !7574
  %conv49 = zext i8 %40 to i32, !dbg !7574
  %41 = load i8, i8* %status, align 1, !dbg !7575
  %conv50 = zext i8 %41 to i32, !dbg !7575
  call void @mega_cmd_done(%struct.adapter_t* %39, i8* %arraydecay48, i32 %conv49, i32 %conv50) #11, !dbg !7576
  %42 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7577
  call void @mega_rundoneq(%struct.adapter_t* %42) #11, !dbg !7578
  %43 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7579
  %quiescent = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %43, i32 0, i32 33, !dbg !7580
  store %struct.atomic_t* %quiescent, %struct.atomic_t** %v.addr.i64, align 8
  %44 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i64, align 8, !dbg !7581
  %45 = bitcast %struct.atomic_t* %44 to i8*, !dbg !7581
  store i8* %45, i8** %v.addr.i.i62, align 8
  store i64 4, i64* %size.addr.i.i63, align 8
  %46 = load i8*, i8** %v.addr.i.i62, align 8, !dbg !7582
  %47 = load i64, i64* %size.addr.i.i63, align 8, !dbg !7583
  %conv.i.i65 = trunc i64 %47 to i32, !dbg !7583
  %call.i.i66 = call zeroext i1 @kasan_check_read(i8* %46, i32 %conv.i.i65) #13, !dbg !7584
  %48 = load i8*, i8** %v.addr.i.i62, align 8, !dbg !7585
  %49 = load i64, i64* %size.addr.i.i63, align 8, !dbg !7585
  call void @kcsan_check_access(i8* %48, i64 %49, i32 4) #13, !dbg !7585
  %50 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i64, align 8, !dbg !7586
  store %struct.atomic_t* %50, %struct.atomic_t** %v.addr.i1.i61, align 8
  %51 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i61, align 8, !dbg !7587
  %counter.i.i67 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %51, i32 0, i32 0, !dbg !7587
  %52 = load volatile i32, i32* %counter.i.i67, align 4, !dbg !7587
  %cmp52 = icmp eq i32 %52, 0, !dbg !7588
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !7589

if.then54:                                        ; preds = %while.end47
  %53 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7590
  call void @mega_runpendq(%struct.adapter_t* %53) #11, !dbg !7592
  br label %if.end55, !dbg !7593

if.end55:                                         ; preds = %if.then54, %while.end47
  br label %do.cond, !dbg !7594

do.cond:                                          ; preds = %if.end55
  br i1 true, label %do.body19, label %do.end56, !dbg !7594, !llvm.loop !7595

do.end56:                                         ; preds = %do.cond
  br label %out_unlock, !dbg !7594

out_unlock:                                       ; preds = %do.end56, %if.then
  call void @llvm.dbg.label(metadata !7597), !dbg !7598
  %54 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7599
  %lock57 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %54, i32 0, i32 34, !dbg !7600
  %55 = load i64, i64* %flags, align 8, !dbg !7601
  store %struct.spinlock* %lock57, %struct.spinlock** %lock.addr.i59, align 8
  store i64 %55, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !7602, metadata !DIExpression()) #7, !dbg !7605
  call void @llvm.dbg.declare(metadata !372, metadata !7606, metadata !DIExpression()) #7, !dbg !7605
  store i32 1, i32* %tmp.i, align 4, !dbg !7605
  %56 = load i32, i32* %tmp.i, align 4, !dbg !7605
  call void @llvm.dbg.declare(metadata !372, metadata !7607, metadata !DIExpression()) #7, !dbg !7612
  call void @llvm.dbg.declare(metadata !372, metadata !7613, metadata !DIExpression()) #7, !dbg !7612
  store i32 1, i32* %tmp8.i, align 4, !dbg !7612
  %57 = load i32, i32* %tmp8.i, align 4, !dbg !7612
  %58 = load i64, i64* %flags.addr.i, align 8, !dbg !7614
  call void @arch_local_irq_restore(i64 %58) #13, !dbg !7614
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7615, !srcloc !7617
  %59 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i59, align 8, !dbg !7618
  %60 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %59, i32 0, i32 0, !dbg !7618
  %rlock.i60 = bitcast %union.anon.1* %60 to %struct.raw_spinlock*, !dbg !7618
  %61 = load i32, i32* %handled, align 4, !dbg !7620
  %tobool58 = icmp ne i32 %61, 0, !dbg !7620
  %62 = zext i1 %tobool58 to i64, !dbg !7620
  %cond = select i1 %tobool58, i32 1, i32 0, !dbg !7620
  ret i32 %cond, !dbg !7621
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @megaraid_isr_iomapped(i32 %irq, i8* %devp) #0 !dbg !7622 {
entry:
  %v.addr.i1.i58 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i58, metadata !7407, metadata !DIExpression()), !dbg !7623
  %v.addr.i.i59 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i59, metadata !7419, metadata !DIExpression()), !dbg !7628
  %size.addr.i.i60 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i60, metadata !7423, metadata !DIExpression()), !dbg !7630
  %v.addr.i61 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i61, metadata !7425, metadata !DIExpression()), !dbg !7631
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !7427, metadata !DIExpression()), !dbg !7632
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7435, metadata !DIExpression()), !dbg !7635
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7437, metadata !DIExpression()), !dbg !7636
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7441, metadata !DIExpression()), !dbg !7638
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !7443, metadata !DIExpression()), !dbg !7639
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7445, metadata !DIExpression()), !dbg !7640
  %lock.addr.i56 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i56, metadata !7447, metadata !DIExpression()), !dbg !7641
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7453, metadata !DIExpression()), !dbg !7643
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6303, metadata !DIExpression()), !dbg !7644
  %irq.addr = alloca i32, align 4
  %devp.addr = alloca i8*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  %flags = alloca i64, align 8
  %status = alloca i8, align 1
  %nstatus = alloca i8, align 1
  %completed = alloca [46 x i8], align 16
  %byte = alloca i8, align 1
  %handled = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7651, metadata !DIExpression()), !dbg !7652
  store i8* %devp, i8** %devp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devp.addr, metadata !7653, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !7655, metadata !DIExpression()), !dbg !7656
  %0 = load i8*, i8** %devp.addr, align 8, !dbg !7657
  %1 = bitcast i8* %0 to %struct.adapter_t*, !dbg !7657
  store %struct.adapter_t* %1, %struct.adapter_t** %adapter, align 8, !dbg !7656
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7658, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.declare(metadata i8* %status, metadata !7660, metadata !DIExpression()), !dbg !7661
  call void @llvm.dbg.declare(metadata i8* %nstatus, metadata !7662, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.declare(metadata [46 x i8]* %completed, metadata !7664, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.declare(metadata i8* %byte, metadata !7666, metadata !DIExpression()), !dbg !7667
  call void @llvm.dbg.declare(metadata i32* %handled, metadata !7668, metadata !DIExpression()), !dbg !7669
  store i32 0, i32* %handled, align 4, !dbg !7669
  br label %do.body, !dbg !7670

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7671

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7672, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7675, metadata !DIExpression()), !dbg !7674
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7674
  %conv = zext i1 %cmp to i32, !dbg !7674
  store i32 1, i32* %tmp, align 4, !dbg !7674
  %2 = load i32, i32* %tmp, align 4, !dbg !7674
  br label %do.body2, !dbg !7676

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7677

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7678

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7680, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7684, metadata !DIExpression()), !dbg !7683
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7683
  %conv8 = zext i1 %cmp7 to i32, !dbg !7683
  store i32 1, i32* %tmp9, align 4, !dbg !7683
  %3 = load i32, i32* %tmp9, align 4, !dbg !7683
  %call = call i64 @arch_local_irq_save() #11, !dbg !7685
  store i64 %call, i64* %flags, align 8, !dbg !7685
  br label %do.end, !dbg !7685

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7678

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7677

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7686, !srcloc !7687
  br label %do.body12, !dbg !7686

do.body12:                                        ; preds = %do.body11
  %4 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7688
  %lock = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %4, i32 0, i32 34, !dbg !7688
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7689
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !7690
  %rlock.i = bitcast %union.anon.1* %6 to %struct.raw_spinlock*, !dbg !7690
  br label %do.end14, !dbg !7688

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7686

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7677

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7676

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7671

do.end18:                                         ; preds = %do.end17
  br label %do.body19, !dbg !7691

do.body19:                                        ; preds = %do.cond, %do.end18
  %7 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7692
  %base = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %7, i32 0, i32 2, !dbg !7692
  %8 = load i64, i64* %base, align 8, !dbg !7692
  %add = add i64 %8, 10, !dbg !7692
  %conv20 = trunc i64 %add to i32, !dbg !7692
  %call21 = call zeroext i8 @inb_p(i32 %conv20) #11, !dbg !7692
  store i8 %call21, i8* %byte, align 1, !dbg !7693
  %9 = load i8, i8* %byte, align 1, !dbg !7694
  %conv22 = zext i8 %9 to i32, !dbg !7694
  %and = and i32 %conv22, 64, !dbg !7696
  %cmp23 = icmp eq i32 %and, 0, !dbg !7697
  br i1 %cmp23, label %if.then, label %if.end, !dbg !7698

if.then:                                          ; preds = %do.body19
  br label %out_unlock, !dbg !7699

if.end:                                           ; preds = %do.body19
  %10 = load i8, i8* %byte, align 1, !dbg !7701
  %11 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7701
  %base25 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %11, i32 0, i32 2, !dbg !7701
  %12 = load i64, i64* %base25, align 8, !dbg !7701
  %add26 = add i64 %12, 10, !dbg !7701
  %conv27 = trunc i64 %add26 to i32, !dbg !7701
  call void @outb_p(i8 zeroext %10, i32 %conv27) #11, !dbg !7701
  br label %while.cond, !dbg !7702

while.cond:                                       ; preds = %while.body, %if.end
  %13 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7703
  %mbox = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %13, i32 0, i32 7, !dbg !7704
  %14 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !7704
  %m_in = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %14, i32 0, i32 1, !dbg !7705
  %numstatus = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in, i32 0, i32 1, !dbg !7706
  %15 = load volatile i8, i8* %numstatus, align 1, !dbg !7706
  store i8 %15, i8* %nstatus, align 1, !dbg !7707
  %conv28 = zext i8 %15 to i32, !dbg !7708
  %cmp29 = icmp eq i32 %conv28, 255, !dbg !7709
  br i1 %cmp29, label %while.body, label %while.end, !dbg !7702

while.body:                                       ; preds = %while.cond
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7710, !srcloc !7528
  br label %while.cond, !dbg !7702, !llvm.loop !7713

while.end:                                        ; preds = %while.cond
  %16 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7715
  %mbox31 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %16, i32 0, i32 7, !dbg !7716
  %17 = load %struct.mbox_t*, %struct.mbox_t** %mbox31, align 8, !dbg !7716
  %m_in32 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %17, i32 0, i32 1, !dbg !7717
  %numstatus33 = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in32, i32 0, i32 1, !dbg !7718
  store volatile i8 -1, i8* %numstatus33, align 1, !dbg !7719
  %18 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7720
  %mbox34 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %18, i32 0, i32 7, !dbg !7721
  %19 = load %struct.mbox_t*, %struct.mbox_t** %mbox34, align 8, !dbg !7721
  %m_in35 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %19, i32 0, i32 1, !dbg !7722
  %status36 = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in35, i32 0, i32 2, !dbg !7723
  %20 = load volatile i8, i8* %status36, align 1, !dbg !7723
  store i8 %20, i8* %status, align 1, !dbg !7724
  %21 = load i8, i8* %nstatus, align 1, !dbg !7725
  %conv37 = zext i8 %21 to i32, !dbg !7725
  %22 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7726
  %pend_cmds = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %22, i32 0, i32 19, !dbg !7727
  store i32 %conv37, i32* %i.addr.i, align 4
  store %struct.atomic_t* %pend_cmds, %struct.atomic_t** %v.addr.i, align 8
  %23 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7728
  %24 = bitcast %struct.atomic_t* %23 to i8*, !dbg !7728
  store i8* %24, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %25 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7729
  %26 = load i64, i64* %size.addr.i.i, align 8, !dbg !7730
  %conv.i.i = trunc i64 %26 to i32, !dbg !7730
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %25, i32 %conv.i.i) #13, !dbg !7731
  %27 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7732
  %28 = load i64, i64* %size.addr.i.i, align 8, !dbg !7732
  call void @kcsan_check_access(i8* %27, i64 %28, i32 7) #13, !dbg !7732
  %29 = load i32, i32* %i.addr.i, align 4, !dbg !7733
  %30 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7734
  store i32 %29, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %30, %struct.atomic_t** %v.addr.i1.i, align 8
  %31 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7735
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %31, i32 0, i32 0, !dbg !7736
  %32 = load i32, i32* %i.addr.i.i, align 4, !dbg !7737
  call void asm sideeffect "subl $1,$0", "=*m,ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %32, i32* %counter.i.i) #7, !dbg !7738, !srcloc !7555
  %arraydecay = getelementptr inbounds [46 x i8], [46 x i8]* %completed, i64 0, i64 0, !dbg !7739
  %33 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7740
  %mbox38 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %33, i32 0, i32 7, !dbg !7741
  %34 = load %struct.mbox_t*, %struct.mbox_t** %mbox38, align 8, !dbg !7741
  %m_in39 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %34, i32 0, i32 1, !dbg !7742
  %completed40 = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in39, i32 0, i32 3, !dbg !7743
  %arraydecay41 = getelementptr inbounds [46 x i8], [46 x i8]* %completed40, i64 0, i64 0, !dbg !7740
  %35 = load i8, i8* %nstatus, align 1, !dbg !7744
  %conv42 = zext i8 %35 to i64, !dbg !7744
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %arraydecay, i8* align 1 %arraydecay41, i64 %conv42, i1 false), !dbg !7739
  %36 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7745
  %base43 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %36, i32 0, i32 2, !dbg !7745
  %37 = load i64, i64* %base43, align 8, !dbg !7745
  %add44 = add i64 %37, 0, !dbg !7745
  %conv45 = trunc i64 %add44 to i32, !dbg !7745
  call void @outb_p(i8 zeroext 8, i32 %conv45) #11, !dbg !7745
  %38 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7746
  %arraydecay46 = getelementptr inbounds [46 x i8], [46 x i8]* %completed, i64 0, i64 0, !dbg !7747
  %39 = load i8, i8* %nstatus, align 1, !dbg !7748
  %conv47 = zext i8 %39 to i32, !dbg !7748
  %40 = load i8, i8* %status, align 1, !dbg !7749
  %conv48 = zext i8 %40 to i32, !dbg !7749
  call void @mega_cmd_done(%struct.adapter_t* %38, i8* %arraydecay46, i32 %conv47, i32 %conv48) #11, !dbg !7750
  %41 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7751
  call void @mega_rundoneq(%struct.adapter_t* %41) #11, !dbg !7752
  store i32 1, i32* %handled, align 4, !dbg !7753
  %42 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7754
  %quiescent = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %42, i32 0, i32 33, !dbg !7755
  store %struct.atomic_t* %quiescent, %struct.atomic_t** %v.addr.i61, align 8
  %43 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i61, align 8, !dbg !7756
  %44 = bitcast %struct.atomic_t* %43 to i8*, !dbg !7756
  store i8* %44, i8** %v.addr.i.i59, align 8
  store i64 4, i64* %size.addr.i.i60, align 8
  %45 = load i8*, i8** %v.addr.i.i59, align 8, !dbg !7757
  %46 = load i64, i64* %size.addr.i.i60, align 8, !dbg !7758
  %conv.i.i62 = trunc i64 %46 to i32, !dbg !7758
  %call.i.i63 = call zeroext i1 @kasan_check_read(i8* %45, i32 %conv.i.i62) #13, !dbg !7759
  %47 = load i8*, i8** %v.addr.i.i59, align 8, !dbg !7760
  %48 = load i64, i64* %size.addr.i.i60, align 8, !dbg !7760
  call void @kcsan_check_access(i8* %47, i64 %48, i32 4) #13, !dbg !7760
  %49 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i61, align 8, !dbg !7761
  store %struct.atomic_t* %49, %struct.atomic_t** %v.addr.i1.i58, align 8
  %50 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i58, align 8, !dbg !7762
  %counter.i.i64 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %50, i32 0, i32 0, !dbg !7762
  %51 = load volatile i32, i32* %counter.i.i64, align 4, !dbg !7762
  %cmp50 = icmp eq i32 %51, 0, !dbg !7763
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !7764

if.then52:                                        ; preds = %while.end
  %52 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7765
  call void @mega_runpendq(%struct.adapter_t* %52) #11, !dbg !7767
  br label %if.end53, !dbg !7768

if.end53:                                         ; preds = %if.then52, %while.end
  br label %do.cond, !dbg !7769

do.cond:                                          ; preds = %if.end53
  br i1 true, label %do.body19, label %do.end54, !dbg !7769, !llvm.loop !7770

do.end54:                                         ; preds = %do.cond
  br label %out_unlock, !dbg !7769

out_unlock:                                       ; preds = %do.end54, %if.then
  call void @llvm.dbg.label(metadata !7772), !dbg !7773
  %53 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !7774
  %lock55 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %53, i32 0, i32 34, !dbg !7775
  %54 = load i64, i64* %flags, align 8, !dbg !7776
  store %struct.spinlock* %lock55, %struct.spinlock** %lock.addr.i56, align 8
  store i64 %54, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !7602, metadata !DIExpression()) #7, !dbg !7777
  call void @llvm.dbg.declare(metadata !372, metadata !7606, metadata !DIExpression()) #7, !dbg !7777
  store i32 1, i32* %tmp.i, align 4, !dbg !7777
  %55 = load i32, i32* %tmp.i, align 4, !dbg !7777
  call void @llvm.dbg.declare(metadata !372, metadata !7607, metadata !DIExpression()) #7, !dbg !7778
  call void @llvm.dbg.declare(metadata !372, metadata !7613, metadata !DIExpression()) #7, !dbg !7778
  store i32 1, i32* %tmp8.i, align 4, !dbg !7778
  %56 = load i32, i32* %tmp8.i, align 4, !dbg !7778
  %57 = load i64, i64* %flags.addr.i, align 8, !dbg !7779
  call void @arch_local_irq_restore(i64 %57) #13, !dbg !7779
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7780, !srcloc !7617
  %58 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i56, align 8, !dbg !7781
  %59 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %58, i32 0, i32 0, !dbg !7781
  %rlock.i57 = bitcast %union.anon.1* %59 to %struct.raw_spinlock*, !dbg !7781
  %60 = load i32, i32* %handled, align 4, !dbg !7782
  %tobool = icmp ne i32 %60, 0, !dbg !7782
  %61 = zext i1 %tobool to i64, !dbg !7782
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !7782
  ret i32 %cond, !dbg !7783
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_setup_mailbox(%struct.adapter_t* %adapter) #0 !dbg !7784 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %align = alloca i64, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !7787, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.declare(metadata i64* %align, metadata !7789, metadata !DIExpression()), !dbg !7790
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7791
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %0, i32 0, i32 9, !dbg !7792
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7792
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !7793
  %2 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7794
  %una_mbox64_dma = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %2, i32 0, i32 5, !dbg !7795
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev1, i64 74, i64* %una_mbox64_dma, i32 3264) #11, !dbg !7796
  %3 = bitcast i8* %call to %struct.mbox64_t*, !dbg !7796
  %4 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7797
  %una_mbox64 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %4, i32 0, i32 4, !dbg !7798
  store %struct.mbox64_t* %3, %struct.mbox64_t** %una_mbox64, align 8, !dbg !7799
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7800
  %una_mbox642 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %5, i32 0, i32 4, !dbg !7802
  %6 = load %struct.mbox64_t*, %struct.mbox64_t** %una_mbox642, align 8, !dbg !7802
  %tobool = icmp ne %struct.mbox64_t* %6, null, !dbg !7800
  br i1 %tobool, label %if.end, label %if.then, !dbg !7803

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !7804
  br label %return, !dbg !7804

if.end:                                           ; preds = %entry
  %7 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7805
  %una_mbox643 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %7, i32 0, i32 4, !dbg !7806
  %8 = load %struct.mbox64_t*, %struct.mbox64_t** %una_mbox643, align 8, !dbg !7806
  %mbox = getelementptr inbounds %struct.mbox64_t, %struct.mbox64_t* %8, i32 0, i32 2, !dbg !7807
  %9 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7808
  %mbox4 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %9, i32 0, i32 7, !dbg !7809
  store %struct.mbox_t* %mbox, %struct.mbox_t** %mbox4, align 8, !dbg !7810
  %10 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7811
  %mbox5 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %10, i32 0, i32 7, !dbg !7812
  %11 = load %struct.mbox_t*, %struct.mbox_t** %mbox5, align 8, !dbg !7812
  %12 = ptrtoint %struct.mbox_t* %11 to i64, !dbg !7813
  %add = add i64 %12, 15, !dbg !7814
  %and = and i64 %add, -16, !dbg !7815
  %13 = inttoptr i64 %and to %struct.mbox_t*, !dbg !7816
  %14 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7817
  %mbox6 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %14, i32 0, i32 7, !dbg !7818
  store %struct.mbox_t* %13, %struct.mbox_t** %mbox6, align 8, !dbg !7819
  %15 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7820
  %mbox7 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %15, i32 0, i32 7, !dbg !7821
  %16 = load %struct.mbox_t*, %struct.mbox_t** %mbox7, align 8, !dbg !7821
  %17 = ptrtoint %struct.mbox_t* %16 to i64, !dbg !7822
  %sub = sub i64 %17, 8, !dbg !7823
  %18 = inttoptr i64 %sub to %struct.mbox64_t*, !dbg !7824
  %19 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7825
  %mbox64 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %19, i32 0, i32 6, !dbg !7826
  store %struct.mbox64_t* %18, %struct.mbox64_t** %mbox64, align 8, !dbg !7827
  %20 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7828
  %mbox8 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %20, i32 0, i32 7, !dbg !7829
  %21 = load %struct.mbox_t*, %struct.mbox_t** %mbox8, align 8, !dbg !7829
  %22 = bitcast %struct.mbox_t* %21 to i8*, !dbg !7830
  %23 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7831
  %una_mbox649 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %23, i32 0, i32 4, !dbg !7832
  %24 = load %struct.mbox64_t*, %struct.mbox64_t** %una_mbox649, align 8, !dbg !7832
  %mbox10 = getelementptr inbounds %struct.mbox64_t, %struct.mbox64_t* %24, i32 0, i32 2, !dbg !7833
  %25 = bitcast %struct.mbox_t* %mbox10 to i8*, !dbg !7834
  %sub.ptr.lhs.cast = ptrtoint i8* %22 to i64, !dbg !7835
  %sub.ptr.rhs.cast = ptrtoint i8* %25 to i64, !dbg !7835
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7835
  store i64 %sub.ptr.sub, i64* %align, align 8, !dbg !7836
  %26 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7837
  %una_mbox64_dma11 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %26, i32 0, i32 5, !dbg !7838
  %27 = load i64, i64* %una_mbox64_dma11, align 8, !dbg !7838
  %add12 = add i64 %27, 8, !dbg !7839
  %28 = load i64, i64* %align, align 8, !dbg !7840
  %add13 = add i64 %add12, %28, !dbg !7841
  %29 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7842
  %mbox_dma = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %29, i32 0, i32 8, !dbg !7843
  store i64 %add13, i64* %mbox_dma, align 8, !dbg !7844
  %30 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7845
  %flag = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %30, i32 0, i32 1, !dbg !7847
  %31 = load i32, i32* %flag, align 4, !dbg !7847
  %conv = zext i32 %31 to i64, !dbg !7845
  %and14 = and i64 %conv, 268435456, !dbg !7848
  %tobool15 = icmp ne i64 %and14, 0, !dbg !7848
  br i1 %tobool15, label %if.then16, label %if.end54, !dbg !7849

if.then16:                                        ; preds = %if.end
  %32 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7850
  %mbox_dma17 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %32, i32 0, i32 8, !dbg !7852
  %33 = load i64, i64* %mbox_dma17, align 8, !dbg !7852
  %and18 = and i64 %33, 255, !dbg !7853
  %conv19 = trunc i64 %and18 to i8, !dbg !7850
  %34 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7854
  %host = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %34, i32 0, i32 13, !dbg !7855
  %35 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !7855
  %io_port = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %35, i32 0, i32 42, !dbg !7856
  %36 = load i64, i64* %io_port, align 8, !dbg !7856
  %add20 = add i64 %36, 4, !dbg !7857
  %conv21 = trunc i64 %add20 to i32, !dbg !7854
  call void @outb(i8 zeroext %conv19, i32 %conv21) #11, !dbg !7858
  %37 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7859
  %mbox_dma22 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %37, i32 0, i32 8, !dbg !7860
  %38 = load i64, i64* %mbox_dma22, align 8, !dbg !7860
  %shr = lshr i64 %38, 8, !dbg !7861
  %and23 = and i64 %shr, 255, !dbg !7862
  %conv24 = trunc i64 %and23 to i8, !dbg !7863
  %39 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7864
  %host25 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %39, i32 0, i32 13, !dbg !7865
  %40 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host25, align 8, !dbg !7865
  %io_port26 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %40, i32 0, i32 42, !dbg !7866
  %41 = load i64, i64* %io_port26, align 8, !dbg !7866
  %add27 = add i64 %41, 5, !dbg !7867
  %conv28 = trunc i64 %add27 to i32, !dbg !7864
  call void @outb(i8 zeroext %conv24, i32 %conv28) #11, !dbg !7868
  %42 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7869
  %mbox_dma29 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %42, i32 0, i32 8, !dbg !7870
  %43 = load i64, i64* %mbox_dma29, align 8, !dbg !7870
  %shr30 = lshr i64 %43, 16, !dbg !7871
  %and31 = and i64 %shr30, 255, !dbg !7872
  %conv32 = trunc i64 %and31 to i8, !dbg !7873
  %44 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7874
  %host33 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %44, i32 0, i32 13, !dbg !7875
  %45 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host33, align 8, !dbg !7875
  %io_port34 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %45, i32 0, i32 42, !dbg !7876
  %46 = load i64, i64* %io_port34, align 8, !dbg !7876
  %add35 = add i64 %46, 6, !dbg !7877
  %conv36 = trunc i64 %add35 to i32, !dbg !7874
  call void @outb(i8 zeroext %conv32, i32 %conv36) #11, !dbg !7878
  %47 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7879
  %mbox_dma37 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %47, i32 0, i32 8, !dbg !7880
  %48 = load i64, i64* %mbox_dma37, align 8, !dbg !7880
  %shr38 = lshr i64 %48, 24, !dbg !7881
  %and39 = and i64 %shr38, 255, !dbg !7882
  %conv40 = trunc i64 %and39 to i8, !dbg !7883
  %49 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7884
  %host41 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %49, i32 0, i32 13, !dbg !7885
  %50 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host41, align 8, !dbg !7885
  %io_port42 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %50, i32 0, i32 42, !dbg !7886
  %51 = load i64, i64* %io_port42, align 8, !dbg !7886
  %add43 = add i64 %51, 7, !dbg !7887
  %conv44 = trunc i64 %add43 to i32, !dbg !7884
  call void @outb(i8 zeroext %conv40, i32 %conv44) #11, !dbg !7888
  %52 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7889
  %host45 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %52, i32 0, i32 13, !dbg !7890
  %53 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host45, align 8, !dbg !7890
  %io_port46 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %53, i32 0, i32 42, !dbg !7891
  %54 = load i64, i64* %io_port46, align 8, !dbg !7891
  %add47 = add i64 %54, 11, !dbg !7892
  %conv48 = trunc i64 %add47 to i32, !dbg !7889
  call void @outb(i8 zeroext 0, i32 %conv48) #11, !dbg !7893
  %55 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7894
  %base = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %55, i32 0, i32 2, !dbg !7894
  %56 = load i64, i64* %base, align 8, !dbg !7894
  %add49 = add i64 %56, 0, !dbg !7894
  %conv50 = trunc i64 %add49 to i32, !dbg !7894
  call void @outb_p(i8 zeroext 8, i32 %conv50) #11, !dbg !7894
  %57 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7895
  %base51 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %57, i32 0, i32 2, !dbg !7895
  %58 = load i64, i64* %base51, align 8, !dbg !7895
  %add52 = add i64 %58, 1, !dbg !7895
  %conv53 = trunc i64 %add52 to i32, !dbg !7895
  call void @outb_p(i8 zeroext -64, i32 %conv53) #11, !dbg !7895
  br label %if.end54, !dbg !7896

if.end54:                                         ; preds = %if.then16, %if.end
  store i32 0, i32* %retval, align 4, !dbg !7897
  br label %return, !dbg !7897

return:                                           ; preds = %if.end54, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !7898
  ret i32 %59, !dbg !7898
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_query_adapter(%struct.adapter_t* %adapter) #0 !dbg !7899 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %prod_info_dma_handle = alloca i64, align 8
  %inquiry3 = alloca %struct.mega_inquiry3*, align 8
  %raw_mbox = alloca [15 x i8], align 1
  %mbox = alloca %struct.mbox_t*, align 8
  %retval1 = alloca i32, align 4
  %ext_inq = alloca %struct.mraid_ext_inquiry*, align 8
  %inq = alloca %struct.mraid_inquiry*, align 8
  %dma_handle = alloca i64, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !7900, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.declare(metadata i64* %prod_info_dma_handle, metadata !7902, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.declare(metadata %struct.mega_inquiry3** %inquiry3, metadata !7904, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.declare(metadata [15 x i8]* %raw_mbox, metadata !7906, metadata !DIExpression()), !dbg !7910
  call void @llvm.dbg.declare(metadata %struct.mbox_t** %mbox, metadata !7911, metadata !DIExpression()), !dbg !7912
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !7913, metadata !DIExpression()), !dbg !7914
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !7915
  %0 = bitcast i8* %arraydecay to %struct.mbox_t*, !dbg !7916
  store %struct.mbox_t* %0, %struct.mbox_t** %mbox, align 8, !dbg !7917
  %1 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7918
  %mega_buffer = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %1, i32 0, i32 14, !dbg !7919
  %2 = load i8*, i8** %mega_buffer, align 8, !dbg !7919
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 2048, i1 false), !dbg !7920
  %3 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !7921
  %m_out = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %3, i32 0, i32 0, !dbg !7922
  %4 = bitcast %struct.mbox_out* %m_out to i8*, !dbg !7923
  call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 0, i64 15, i1 false), !dbg !7923
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7924
  %buf_dma_handle = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %5, i32 0, i32 15, !dbg !7925
  %6 = load i64, i64* %buf_dma_handle, align 8, !dbg !7925
  %conv = trunc i64 %6 to i32, !dbg !7926
  %7 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !7927
  %m_out2 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %7, i32 0, i32 0, !dbg !7928
  %xferaddr = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out2, i32 0, i32 4, !dbg !7929
  store i32 %conv, i32* %xferaddr, align 1, !dbg !7930
  %8 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7931
  %mega_buffer3 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %8, i32 0, i32 14, !dbg !7932
  %9 = load i8*, i8** %mega_buffer3, align 8, !dbg !7932
  %10 = bitcast i8* %9 to %struct.mega_inquiry3*, !dbg !7933
  store %struct.mega_inquiry3* %10, %struct.mega_inquiry3** %inquiry3, align 8, !dbg !7934
  %arrayidx = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !7935
  store i8 -95, i8* %arrayidx, align 1, !dbg !7936
  %arrayidx4 = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 2, !dbg !7937
  store i8 15, i8* %arrayidx4, align 1, !dbg !7938
  %arrayidx5 = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 3, !dbg !7939
  store i8 2, i8* %arrayidx5, align 1, !dbg !7940
  %11 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7941
  %arraydecay6 = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !7943
  %call = call i32 @issue_scb_block(%struct.adapter_t* %11, i8* %arraydecay6) #11, !dbg !7944
  store i32 %call, i32* %retval1, align 4, !dbg !7945
  %tobool = icmp ne i32 %call, 0, !dbg !7945
  br i1 %tobool, label %if.then, label %if.else, !dbg !7946

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.mraid_ext_inquiry** %ext_inq, metadata !7947, metadata !DIExpression()), !dbg !7949
  call void @llvm.dbg.declare(metadata %struct.mraid_inquiry** %inq, metadata !7950, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.declare(metadata i64* %dma_handle, metadata !7953, metadata !DIExpression()), !dbg !7954
  %12 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7955
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %12, i32 0, i32 9, !dbg !7956
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7956
  %dev7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !7957
  %call8 = call i8* @dma_alloc_coherent(%struct.device* %dev7, i64 166, i64* %dma_handle, i32 3264) #11, !dbg !7958
  %14 = bitcast i8* %call8 to %struct.mraid_ext_inquiry*, !dbg !7958
  store %struct.mraid_ext_inquiry* %14, %struct.mraid_ext_inquiry** %ext_inq, align 8, !dbg !7959
  %15 = load %struct.mraid_ext_inquiry*, %struct.mraid_ext_inquiry** %ext_inq, align 8, !dbg !7960
  %cmp = icmp eq %struct.mraid_ext_inquiry* %15, null, !dbg !7962
  br i1 %cmp, label %if.then10, label %if.end, !dbg !7963

if.then10:                                        ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !7964
  br label %return, !dbg !7964

if.end:                                           ; preds = %if.then
  %16 = load %struct.mraid_ext_inquiry*, %struct.mraid_ext_inquiry** %ext_inq, align 8, !dbg !7965
  %raid_inq = getelementptr inbounds %struct.mraid_ext_inquiry, %struct.mraid_ext_inquiry* %16, i32 0, i32 0, !dbg !7966
  store %struct.mraid_inquiry* %raid_inq, %struct.mraid_inquiry** %inq, align 8, !dbg !7967
  %17 = load i64, i64* %dma_handle, align 8, !dbg !7968
  %conv11 = trunc i64 %17 to i32, !dbg !7969
  %18 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !7970
  %m_out12 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %18, i32 0, i32 0, !dbg !7971
  %xferaddr13 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out12, i32 0, i32 4, !dbg !7972
  store i32 %conv11, i32* %xferaddr13, align 1, !dbg !7973
  %19 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !7974
  %m_out14 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %19, i32 0, i32 0, !dbg !7975
  %cmd = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out14, i32 0, i32 0, !dbg !7976
  store i8 4, i8* %cmd, align 1, !dbg !7977
  %20 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7978
  %arraydecay15 = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !7979
  %call16 = call i32 @issue_scb_block(%struct.adapter_t* %20, i8* %arraydecay15) #11, !dbg !7980
  %21 = load %struct.mraid_inquiry*, %struct.mraid_inquiry** %inq, align 8, !dbg !7981
  %22 = load %struct.mega_inquiry3*, %struct.mega_inquiry3** %inquiry3, align 8, !dbg !7982
  %23 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7983
  %product_info = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %23, i32 0, i32 16, !dbg !7984
  call void @mega_8_to_40ld(%struct.mraid_inquiry* %21, %struct.mega_inquiry3* %22, %struct.mega_product_info* %product_info) #11, !dbg !7985
  %24 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7986
  %dev17 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %24, i32 0, i32 9, !dbg !7987
  %25 = load %struct.pci_dev*, %struct.pci_dev** %dev17, align 8, !dbg !7987
  %dev18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !7988
  %26 = load %struct.mraid_ext_inquiry*, %struct.mraid_ext_inquiry** %ext_inq, align 8, !dbg !7989
  %27 = bitcast %struct.mraid_ext_inquiry* %26 to i8*, !dbg !7989
  %28 = load i64, i64* %dma_handle, align 8, !dbg !7990
  call void @dma_free_coherent(%struct.device* %dev18, i64 166, i8* %27, i64 %28) #11, !dbg !7991
  br label %if.end39, !dbg !7992

if.else:                                          ; preds = %entry
  %29 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7993
  %flag = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %29, i32 0, i32 1, !dbg !7995
  %30 = load i32, i32* %flag, align 4, !dbg !7996
  %conv19 = zext i32 %30 to i64, !dbg !7996
  %or = or i64 %conv19, 134217728, !dbg !7996
  %conv20 = trunc i64 %or to i32, !dbg !7996
  store i32 %conv20, i32* %flag, align 4, !dbg !7996
  %31 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7997
  %dev21 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %31, i32 0, i32 9, !dbg !7997
  %32 = load %struct.pci_dev*, %struct.pci_dev** %dev21, align 8, !dbg !7997
  %dev22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 41, !dbg !7997
  %33 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !7997
  %product_info23 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %33, i32 0, i32 16, !dbg !7997
  %34 = bitcast %struct.mega_product_info* %product_info23 to i8*, !dbg !7997
  %call24 = call i64 @dma_map_single_attrs(%struct.device* %dev22, i8* %34, i64 1024, i32 2, i64 0) #11, !dbg !7997
  store i64 %call24, i64* %prod_info_dma_handle, align 8, !dbg !7998
  %35 = load i64, i64* %prod_info_dma_handle, align 8, !dbg !7999
  %conv25 = trunc i64 %35 to i32, !dbg !7999
  %36 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !8000
  %m_out26 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %36, i32 0, i32 0, !dbg !8001
  %xferaddr27 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out26, i32 0, i32 4, !dbg !8002
  store i32 %conv25, i32* %xferaddr27, align 1, !dbg !8003
  %arrayidx28 = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8004
  store i8 -95, i8* %arrayidx28, align 1, !dbg !8005
  %arrayidx29 = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 2, !dbg !8006
  store i8 14, i8* %arrayidx29, align 1, !dbg !8007
  %37 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8008
  %arraydecay30 = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8010
  %call31 = call i32 @issue_scb_block(%struct.adapter_t* %37, i8* %arraydecay30) #11, !dbg !8011
  store i32 %call31, i32* %retval1, align 4, !dbg !8012
  %tobool32 = icmp ne i32 %call31, 0, !dbg !8012
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !8013

if.then33:                                        ; preds = %if.else
  %38 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8014
  %dev34 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %38, i32 0, i32 9, !dbg !8014
  %39 = load %struct.pci_dev*, %struct.pci_dev** %dev34, align 8, !dbg !8014
  %dev35 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 41, !dbg !8014
  %40 = load i32, i32* %retval1, align 4, !dbg !8014
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev35, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.40, i64 0, i64 0), i32 %40) #12, !dbg !8014
  br label %if.end36, !dbg !8014

if.end36:                                         ; preds = %if.then33, %if.else
  %41 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8015
  %dev37 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %41, i32 0, i32 9, !dbg !8015
  %42 = load %struct.pci_dev*, %struct.pci_dev** %dev37, align 8, !dbg !8015
  %dev38 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %42, i32 0, i32 41, !dbg !8015
  %43 = load i64, i64* %prod_info_dma_handle, align 8, !dbg !8015
  call void @dma_unmap_single_attrs(%struct.device* %dev38, i64 %43, i64 1024, i32 2, i64 0) #11, !dbg !8015
  br label %if.end39

if.end39:                                         ; preds = %if.end36, %if.end
  %44 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8016
  %product_info40 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %44, i32 0, i32 16, !dbg !8017
  %nchannels = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info40, i32 0, i32 6, !dbg !8018
  %45 = load i8, i8* %nchannels, align 1, !dbg !8018
  %conv41 = zext i8 %45 to i32, !dbg !8016
  %add = add i32 %conv41, 4, !dbg !8019
  %sub = sub i32 %add, 1, !dbg !8020
  %46 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8021
  %host = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %46, i32 0, i32 13, !dbg !8022
  %47 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !8022
  %max_channel = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %47, i32 0, i32 19, !dbg !8023
  store i32 %sub, i32* %max_channel, align 8, !dbg !8024
  %48 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8025
  %host42 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %48, i32 0, i32 13, !dbg !8026
  %49 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host42, align 8, !dbg !8026
  %max_id = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %49, i32 0, i32 20, !dbg !8027
  store i32 16, i32* %max_id, align 4, !dbg !8028
  %50 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8029
  %host43 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %50, i32 0, i32 13, !dbg !8030
  %51 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host43, align 8, !dbg !8030
  %max_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %51, i32 0, i32 21, !dbg !8031
  store i64 7, i64* %max_lun, align 8, !dbg !8032
  %52 = load i32, i32* @max_cmd_per_lun, align 4, !dbg !8033
  %conv44 = trunc i32 %52 to i16, !dbg !8033
  %53 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8034
  %host45 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %53, i32 0, i32 13, !dbg !8035
  %54 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host45, align 8, !dbg !8035
  %cmd_per_lun = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %54, i32 0, i32 26, !dbg !8036
  store i16 %conv44, i16* %cmd_per_lun, align 8, !dbg !8037
  %55 = load %struct.mega_inquiry3*, %struct.mega_inquiry3** %inquiry3, align 8, !dbg !8038
  %num_ldrv = getelementptr inbounds %struct.mega_inquiry3, %struct.mega_inquiry3* %55, i32 0, i32 8, !dbg !8039
  %56 = load i8, i8* %num_ldrv, align 1, !dbg !8039
  %57 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8040
  %numldrv = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %57, i32 0, i32 20, !dbg !8041
  store i8 %56, i8* %numldrv, align 4, !dbg !8042
  %58 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8043
  %product_info46 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %58, i32 0, i32 16, !dbg !8044
  %max_commands = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info46, i32 0, i32 5, !dbg !8045
  %59 = load i8, i8* %max_commands, align 8, !dbg !8045
  %60 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8046
  %max_cmds = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %60, i32 0, i32 17, !dbg !8047
  store i8 %59, i8* %max_cmds, align 8, !dbg !8048
  %61 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8049
  %max_cmds47 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %61, i32 0, i32 17, !dbg !8051
  %62 = load i8, i8* %max_cmds47, align 8, !dbg !8051
  %conv48 = zext i8 %62 to i32, !dbg !8049
  %cmp49 = icmp sgt i32 %conv48, 126, !dbg !8052
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !8053

if.then51:                                        ; preds = %if.end39
  %63 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8054
  %max_cmds52 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %63, i32 0, i32 17, !dbg !8055
  store i8 126, i8* %max_cmds52, align 8, !dbg !8056
  br label %if.end53, !dbg !8054

if.end53:                                         ; preds = %if.then51, %if.end39
  %64 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8057
  %max_cmds54 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %64, i32 0, i32 17, !dbg !8058
  %65 = load i8, i8* %max_cmds54, align 8, !dbg !8058
  %conv55 = zext i8 %65 to i32, !dbg !8057
  %sub56 = sub i32 %conv55, 1, !dbg !8059
  %66 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8060
  %host57 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %66, i32 0, i32 13, !dbg !8061
  %67 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host57, align 8, !dbg !8061
  %can_queue = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %67, i32 0, i32 25, !dbg !8062
  store i32 %sub56, i32* %can_queue, align 4, !dbg !8063
  %68 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8064
  call void @mega_get_max_sgl(%struct.adapter_t* %68) #11, !dbg !8065
  %69 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8066
  %sglen = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %69, i32 0, i32 37, !dbg !8067
  %70 = load i8, i8* %sglen, align 8, !dbg !8067
  %conv58 = zext i8 %70 to i16, !dbg !8066
  %71 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8068
  %host59 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %71, i32 0, i32 13, !dbg !8069
  %72 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host59, align 8, !dbg !8069
  %sg_tablesize = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %72, i32 0, i32 27, !dbg !8070
  store i16 %conv58, i16* %sg_tablesize, align 2, !dbg !8071
  %73 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8072
  %product_info60 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %73, i32 0, i32 16, !dbg !8074
  %subsysvid = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info60, i32 0, i32 12, !dbg !8075
  %74 = load i16, i16* %subsysvid, align 4, !dbg !8075
  %conv61 = zext i16 %74 to i32, !dbg !8072
  %cmp62 = icmp eq i32 %conv61, 4156, !dbg !8076
  br i1 %cmp62, label %if.then64, label %if.else96, !dbg !8077

if.then64:                                        ; preds = %if.end53
  %75 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8078
  %fw_version = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %75, i32 0, i32 21, !dbg !8080
  %arraydecay65 = getelementptr inbounds [7 x i8], [7 x i8]* %fw_version, i64 0, i64 0, !dbg !8078
  %76 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8081
  %product_info66 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %76, i32 0, i32 16, !dbg !8082
  %fw_version67 = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info66, i32 0, i32 2, !dbg !8083
  %arrayidx68 = getelementptr [16 x i8], [16 x i8]* %fw_version67, i64 0, i64 2, !dbg !8081
  %77 = load i8, i8* %arrayidx68, align 2, !dbg !8081
  %conv69 = zext i8 %77 to i32, !dbg !8081
  %78 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8084
  %product_info70 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %78, i32 0, i32 16, !dbg !8085
  %fw_version71 = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info70, i32 0, i32 2, !dbg !8086
  %arrayidx72 = getelementptr [16 x i8], [16 x i8]* %fw_version71, i64 0, i64 1, !dbg !8084
  %79 = load i8, i8* %arrayidx72, align 1, !dbg !8084
  %conv73 = zext i8 %79 to i32, !dbg !8084
  %and = and i32 %conv73, 15, !dbg !8087
  %80 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8088
  %product_info74 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %80, i32 0, i32 16, !dbg !8089
  %fw_version75 = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info74, i32 0, i32 2, !dbg !8090
  %arrayidx76 = getelementptr [16 x i8], [16 x i8]* %fw_version75, i64 0, i64 0, !dbg !8088
  %81 = load i8, i8* %arrayidx76, align 8, !dbg !8088
  %conv77 = zext i8 %81 to i32, !dbg !8088
  %and78 = and i32 %conv77, 15, !dbg !8091
  %call79 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay65, i64 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i32 %conv69, i32 0, i32 %and, i32 0, i32 %and78) #11, !dbg !8092
  %82 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8093
  %bios_version = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %82, i32 0, i32 22, !dbg !8094
  %arraydecay80 = getelementptr inbounds [7 x i8], [7 x i8]* %bios_version, i64 0, i64 0, !dbg !8093
  %83 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8095
  %product_info81 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %83, i32 0, i32 16, !dbg !8096
  %bios_version82 = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info81, i32 0, i32 3, !dbg !8097
  %arrayidx83 = getelementptr [16 x i8], [16 x i8]* %bios_version82, i64 0, i64 2, !dbg !8095
  %84 = load i8, i8* %arrayidx83, align 2, !dbg !8095
  %conv84 = zext i8 %84 to i32, !dbg !8095
  %85 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8098
  %product_info85 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %85, i32 0, i32 16, !dbg !8099
  %bios_version86 = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info85, i32 0, i32 3, !dbg !8100
  %arrayidx87 = getelementptr [16 x i8], [16 x i8]* %bios_version86, i64 0, i64 1, !dbg !8098
  %86 = load i8, i8* %arrayidx87, align 1, !dbg !8098
  %conv88 = zext i8 %86 to i32, !dbg !8098
  %and89 = and i32 %conv88, 15, !dbg !8101
  %87 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8102
  %product_info90 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %87, i32 0, i32 16, !dbg !8103
  %bios_version91 = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info90, i32 0, i32 3, !dbg !8104
  %arrayidx92 = getelementptr [16 x i8], [16 x i8]* %bios_version91, i64 0, i64 0, !dbg !8102
  %88 = load i8, i8* %arrayidx92, align 8, !dbg !8102
  %conv93 = zext i8 %88 to i32, !dbg !8102
  %and94 = and i32 %conv93, 15, !dbg !8105
  %call95 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay80, i64 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i32 %conv84, i32 0, i32 %and89, i32 0, i32 %and94) #11, !dbg !8106
  br label %if.end111, !dbg !8107

if.else96:                                        ; preds = %if.end53
  %89 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8108
  %fw_version97 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %89, i32 0, i32 21, !dbg !8110
  %arraydecay98 = getelementptr inbounds [7 x i8], [7 x i8]* %fw_version97, i64 0, i64 0, !dbg !8111
  %90 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8112
  %product_info99 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %90, i32 0, i32 16, !dbg !8113
  %fw_version100 = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info99, i32 0, i32 2, !dbg !8114
  %arraydecay101 = getelementptr inbounds [16 x i8], [16 x i8]* %fw_version100, i64 0, i64 0, !dbg !8111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay98, i8* align 8 %arraydecay101, i64 4, i1 false), !dbg !8111
  %91 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8115
  %fw_version102 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %91, i32 0, i32 21, !dbg !8116
  %arrayidx103 = getelementptr [7 x i8], [7 x i8]* %fw_version102, i64 0, i64 4, !dbg !8115
  store i8 0, i8* %arrayidx103, align 1, !dbg !8117
  %92 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8118
  %bios_version104 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %92, i32 0, i32 22, !dbg !8119
  %arraydecay105 = getelementptr inbounds [7 x i8], [7 x i8]* %bios_version104, i64 0, i64 0, !dbg !8120
  %93 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8121
  %product_info106 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %93, i32 0, i32 16, !dbg !8122
  %bios_version107 = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info106, i32 0, i32 3, !dbg !8123
  %arraydecay108 = getelementptr inbounds [16 x i8], [16 x i8]* %bios_version107, i64 0, i64 0, !dbg !8120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay105, i8* align 8 %arraydecay108, i64 4, i1 false), !dbg !8120
  %94 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8124
  %bios_version109 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %94, i32 0, i32 22, !dbg !8125
  %arrayidx110 = getelementptr [7 x i8], [7 x i8]* %bios_version109, i64 0, i64 4, !dbg !8124
  store i8 0, i8* %arrayidx110, align 4, !dbg !8126
  br label %if.end111

if.end111:                                        ; preds = %if.else96, %if.then64
  %95 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8127
  %dev112 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %95, i32 0, i32 9, !dbg !8127
  %96 = load %struct.pci_dev*, %struct.pci_dev** %dev112, align 8, !dbg !8127
  %dev113 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %96, i32 0, i32 41, !dbg !8127
  %97 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8127
  %fw_version114 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %97, i32 0, i32 21, !dbg !8127
  %arraydecay115 = getelementptr inbounds [7 x i8], [7 x i8]* %fw_version114, i64 0, i64 0, !dbg !8127
  %98 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8127
  %bios_version116 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %98, i32 0, i32 22, !dbg !8127
  %arraydecay117 = getelementptr inbounds [7 x i8], [7 x i8]* %bios_version116, i64 0, i64 0, !dbg !8127
  %99 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8127
  %numldrv118 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %99, i32 0, i32 20, !dbg !8127
  %100 = load i8, i8* %numldrv118, align 4, !dbg !8127
  %conv119 = zext i8 %100 to i32, !dbg !8127
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev113, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.42, i64 0, i64 0), i8* %arraydecay115, i8* %arraydecay117, i32 %conv119) #12, !dbg !8127
  %101 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8128
  %call120 = call i32 @mega_support_ext_cdb(%struct.adapter_t* %101) #11, !dbg !8129
  %102 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8130
  %support_ext_cdb = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %102, i32 0, i32 25, !dbg !8131
  store i32 %call120, i32* %support_ext_cdb, align 4, !dbg !8132
  %103 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8133
  %support_ext_cdb121 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %103, i32 0, i32 25, !dbg !8135
  %104 = load i32, i32* %support_ext_cdb121, align 4, !dbg !8135
  %tobool122 = icmp ne i32 %104, 0, !dbg !8133
  br i1 %tobool122, label %if.then123, label %if.end126, !dbg !8136

if.then123:                                       ; preds = %if.end111
  %105 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8137
  %dev124 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %105, i32 0, i32 9, !dbg !8137
  %106 = load %struct.pci_dev*, %struct.pci_dev** %dev124, align 8, !dbg !8137
  %dev125 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %106, i32 0, i32 41, !dbg !8137
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev125, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.43, i64 0, i64 0)) #12, !dbg !8137
  br label %if.end126, !dbg !8137

if.end126:                                        ; preds = %if.then123, %if.end111
  store i32 0, i32* %retval, align 4, !dbg !8138
  br label %return, !dbg !8138

return:                                           ; preds = %if.end126, %if.then10
  %107 = load i32, i32* %retval, align 4, !dbg !8139
  ret i32 %107, !dbg !8139
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_is_bios_enabled(%struct.adapter_t* %adapter) #0 !dbg !8140 {
entry:
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %raw_mbox = alloca [15 x i8], align 1
  %mbox = alloca %struct.mbox_t*, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !8141, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.declare(metadata [15 x i8]* %raw_mbox, metadata !8143, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.declare(metadata %struct.mbox_t** %mbox, metadata !8146, metadata !DIExpression()), !dbg !8147
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8148
  %0 = bitcast i8* %arraydecay to %struct.mbox_t*, !dbg !8149
  store %struct.mbox_t* %0, %struct.mbox_t** %mbox, align 8, !dbg !8150
  %1 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !8151
  %m_out = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %1, i32 0, i32 0, !dbg !8152
  %2 = bitcast %struct.mbox_out* %m_out to i8*, !dbg !8153
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 15, i1 false), !dbg !8153
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8154
  %mega_buffer = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %3, i32 0, i32 14, !dbg !8155
  %4 = load i8*, i8** %mega_buffer, align 8, !dbg !8155
  call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 0, i64 2048, i1 false), !dbg !8156
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8157
  %buf_dma_handle = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %5, i32 0, i32 15, !dbg !8158
  %6 = load i64, i64* %buf_dma_handle, align 8, !dbg !8158
  %conv = trunc i64 %6 to i32, !dbg !8159
  %7 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !8160
  %m_out1 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %7, i32 0, i32 0, !dbg !8161
  %xferaddr = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out1, i32 0, i32 4, !dbg !8162
  store i32 %conv, i32* %xferaddr, align 1, !dbg !8163
  %arrayidx = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8164
  store i8 98, i8* %arrayidx, align 1, !dbg !8165
  %arrayidx2 = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 2, !dbg !8166
  store i8 1, i8* %arrayidx2, align 1, !dbg !8167
  %8 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8168
  %arraydecay3 = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8169
  %call = call i32 @issue_scb_block(%struct.adapter_t* %8, i8* %arraydecay3) #11, !dbg !8170
  %9 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8171
  %mega_buffer4 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %9, i32 0, i32 14, !dbg !8172
  %10 = load i8*, i8** %mega_buffer4, align 8, !dbg !8172
  %11 = load i8, i8* %10, align 1, !dbg !8173
  %conv5 = sext i8 %11 to i32, !dbg !8173
  ret i32 %conv5, !dbg !8174
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mega_enum_raid_scsi(%struct.adapter_t* %adapter) #0 !dbg !8175 {
entry:
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %raw_mbox = alloca [15 x i8], align 1
  %mbox = alloca %struct.mbox_t*, align 8
  %i = alloca i32, align 4
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !8178, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.declare(metadata [15 x i8]* %raw_mbox, metadata !8180, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.declare(metadata %struct.mbox_t** %mbox, metadata !8182, metadata !DIExpression()), !dbg !8183
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8184, metadata !DIExpression()), !dbg !8185
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8186
  %0 = bitcast i8* %arraydecay to %struct.mbox_t*, !dbg !8187
  store %struct.mbox_t* %0, %struct.mbox_t** %mbox, align 8, !dbg !8188
  %1 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !8189
  %m_out = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %1, i32 0, i32 0, !dbg !8190
  %2 = bitcast %struct.mbox_out* %m_out to i8*, !dbg !8191
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 15, i1 false), !dbg !8191
  %arrayidx = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8192
  store i8 -87, i8* %arrayidx, align 1, !dbg !8193
  %arrayidx1 = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 2, !dbg !8194
  store i8 0, i8* %arrayidx1, align 1, !dbg !8195
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8196
  %mega_buffer = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %3, i32 0, i32 14, !dbg !8197
  %4 = load i8*, i8** %mega_buffer, align 8, !dbg !8197
  call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 0, i64 2048, i1 false), !dbg !8198
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8199
  %buf_dma_handle = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %5, i32 0, i32 15, !dbg !8200
  %6 = load i64, i64* %buf_dma_handle, align 8, !dbg !8200
  %conv = trunc i64 %6 to i32, !dbg !8201
  %7 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !8202
  %m_out2 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %7, i32 0, i32 0, !dbg !8203
  %xferaddr = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out2, i32 0, i32 4, !dbg !8204
  store i32 %conv, i32* %xferaddr, align 1, !dbg !8205
  %8 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8206
  %mega_ch_class = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %8, i32 0, i32 36, !dbg !8207
  store i32 255, i32* %mega_ch_class, align 4, !dbg !8208
  %9 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8209
  %arraydecay3 = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8211
  %call = call i32 @issue_scb_block(%struct.adapter_t* %9, i8* %arraydecay3) #11, !dbg !8212
  %tobool = icmp ne i32 %call, 0, !dbg !8212
  br i1 %tobool, label %if.end, label %if.then, !dbg !8213

if.then:                                          ; preds = %entry
  %10 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8214
  %mega_buffer4 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %10, i32 0, i32 14, !dbg !8216
  %11 = load i8*, i8** %mega_buffer4, align 8, !dbg !8216
  %12 = load i8, i8* %11, align 1, !dbg !8217
  %conv5 = sext i8 %12 to i32, !dbg !8217
  %13 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8218
  %mega_ch_class6 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %13, i32 0, i32 36, !dbg !8219
  store i32 %conv5, i32* %mega_ch_class6, align 4, !dbg !8220
  br label %if.end, !dbg !8221

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !8222
  br label %for.cond, !dbg !8224

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i, align 4, !dbg !8225
  %15 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8227
  %product_info = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %15, i32 0, i32 16, !dbg !8228
  %nchannels = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info, i32 0, i32 6, !dbg !8229
  %16 = load i8, i8* %nchannels, align 1, !dbg !8229
  %conv7 = zext i8 %16 to i32, !dbg !8227
  %cmp = icmp slt i32 %14, %conv7, !dbg !8230
  br i1 %cmp, label %for.body, label %for.end, !dbg !8231

for.body:                                         ; preds = %for.cond
  %17 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8232
  %mega_ch_class9 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %17, i32 0, i32 36, !dbg !8235
  %18 = load i32, i32* %mega_ch_class9, align 4, !dbg !8235
  %19 = load i32, i32* %i, align 4, !dbg !8236
  %shr = ashr i32 %18, %19, !dbg !8237
  %and = and i32 %shr, 1, !dbg !8238
  %tobool10 = icmp ne i32 %and, 0, !dbg !8238
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !8239

if.then11:                                        ; preds = %for.body
  %20 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8240
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %20, i32 0, i32 9, !dbg !8240
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8240
  %dev12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 41, !dbg !8240
  %22 = load i32, i32* %i, align 4, !dbg !8240
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47, i64 0, i64 0), i32 %22) #12, !dbg !8240
  br label %if.end15, !dbg !8242

if.else:                                          ; preds = %for.body
  %23 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8243
  %dev13 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %23, i32 0, i32 9, !dbg !8243
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev13, align 8, !dbg !8243
  %dev14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 41, !dbg !8243
  %25 = load i32, i32* %i, align 4, !dbg !8243
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev14, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.48, i64 0, i64 0), i32 %25) #12, !dbg !8243
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !8245

for.inc:                                          ; preds = %if.end15
  %26 = load i32, i32* %i, align 4, !dbg !8246
  %inc = add i32 %26, 1, !dbg !8246
  store i32 %inc, i32* %i, align 4, !dbg !8246
  br label %for.cond, !dbg !8247, !llvm.loop !8248

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8250
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mega_get_boot_drv(%struct.adapter_t* %adapter) #0 !dbg !8251 {
entry:
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %prv_bios_data = alloca %struct.private_bios_data*, align 8
  %raw_mbox = alloca [15 x i8], align 1
  %mbox = alloca %struct.mbox_t*, align 8
  %cksum = alloca i16, align 2
  %cksum_p = alloca i8*, align 8
  %boot_pdrv = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !8252, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.declare(metadata %struct.private_bios_data** %prv_bios_data, metadata !8254, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.declare(metadata [15 x i8]* %raw_mbox, metadata !8256, metadata !DIExpression()), !dbg !8257
  call void @llvm.dbg.declare(metadata %struct.mbox_t** %mbox, metadata !8258, metadata !DIExpression()), !dbg !8259
  call void @llvm.dbg.declare(metadata i16* %cksum, metadata !8260, metadata !DIExpression()), !dbg !8261
  store i16 0, i16* %cksum, align 2, !dbg !8261
  call void @llvm.dbg.declare(metadata i8** %cksum_p, metadata !8262, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.declare(metadata i8* %boot_pdrv, metadata !8264, metadata !DIExpression()), !dbg !8265
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8266, metadata !DIExpression()), !dbg !8267
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8268
  %0 = bitcast i8* %arraydecay to %struct.mbox_t*, !dbg !8269
  store %struct.mbox_t* %0, %struct.mbox_t** %mbox, align 8, !dbg !8270
  %1 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !8271
  %m_out = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %1, i32 0, i32 0, !dbg !8272
  %2 = bitcast %struct.mbox_out* %m_out to i8*, !dbg !8273
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 15, i1 false), !dbg !8273
  %arrayidx = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8274
  store i8 64, i8* %arrayidx, align 1, !dbg !8275
  %arrayidx1 = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 2, !dbg !8276
  store i8 0, i8* %arrayidx1, align 1, !dbg !8277
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8278
  %mega_buffer = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %3, i32 0, i32 14, !dbg !8279
  %4 = load i8*, i8** %mega_buffer, align 8, !dbg !8279
  call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 0, i64 2048, i1 false), !dbg !8280
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8281
  %buf_dma_handle = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %5, i32 0, i32 15, !dbg !8282
  %6 = load i64, i64* %buf_dma_handle, align 8, !dbg !8282
  %conv = trunc i64 %6 to i32, !dbg !8283
  %7 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !8284
  %m_out2 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %7, i32 0, i32 0, !dbg !8285
  %xferaddr = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out2, i32 0, i32 4, !dbg !8286
  store i32 %conv, i32* %xferaddr, align 1, !dbg !8287
  %8 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8288
  %boot_ldrv_enabled = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %8, i32 0, i32 26, !dbg !8289
  store i32 0, i32* %boot_ldrv_enabled, align 8, !dbg !8290
  %9 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8291
  %boot_ldrv = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %9, i32 0, i32 27, !dbg !8292
  store i32 0, i32* %boot_ldrv, align 4, !dbg !8293
  %10 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8294
  %boot_pdrv_enabled = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %10, i32 0, i32 28, !dbg !8295
  store i32 0, i32* %boot_pdrv_enabled, align 8, !dbg !8296
  %11 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8297
  %boot_pdrv_ch = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %11, i32 0, i32 29, !dbg !8298
  store i32 0, i32* %boot_pdrv_ch, align 4, !dbg !8299
  %12 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8300
  %boot_pdrv_tgt = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %12, i32 0, i32 30, !dbg !8301
  store i32 0, i32* %boot_pdrv_tgt, align 8, !dbg !8302
  %13 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8303
  %arraydecay3 = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8305
  %call = call i32 @issue_scb_block(%struct.adapter_t* %13, i8* %arraydecay3) #11, !dbg !8306
  %cmp = icmp eq i32 %call, 0, !dbg !8307
  br i1 %cmp, label %if.then, label %if.end36, !dbg !8308

if.then:                                          ; preds = %entry
  %14 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8309
  %mega_buffer5 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %14, i32 0, i32 14, !dbg !8311
  %15 = load i8*, i8** %mega_buffer5, align 8, !dbg !8311
  %16 = bitcast i8* %15 to %struct.private_bios_data*, !dbg !8312
  store %struct.private_bios_data* %16, %struct.private_bios_data** %prv_bios_data, align 8, !dbg !8313
  store i16 0, i16* %cksum, align 2, !dbg !8314
  %17 = load %struct.private_bios_data*, %struct.private_bios_data** %prv_bios_data, align 8, !dbg !8315
  %18 = bitcast %struct.private_bios_data* %17 to i8*, !dbg !8316
  store i8* %18, i8** %cksum_p, align 8, !dbg !8317
  store i32 0, i32* %i, align 4, !dbg !8318
  br label %for.cond, !dbg !8320

for.cond:                                         ; preds = %for.inc, %if.then
  %19 = load i32, i32* %i, align 4, !dbg !8321
  %cmp6 = icmp slt i32 %19, 14, !dbg !8323
  br i1 %cmp6, label %for.body, label %for.end, !dbg !8324

for.body:                                         ; preds = %for.cond
  %20 = load i8*, i8** %cksum_p, align 8, !dbg !8325
  %incdec.ptr = getelementptr i8, i8* %20, i32 1, !dbg !8325
  store i8* %incdec.ptr, i8** %cksum_p, align 8, !dbg !8325
  %21 = load i8, i8* %20, align 1, !dbg !8327
  %conv8 = zext i8 %21 to i16, !dbg !8328
  %conv9 = zext i16 %conv8 to i32, !dbg !8328
  %22 = load i16, i16* %cksum, align 2, !dbg !8329
  %conv10 = zext i16 %22 to i32, !dbg !8329
  %add = add i32 %conv10, %conv9, !dbg !8329
  %conv11 = trunc i32 %add to i16, !dbg !8329
  store i16 %conv11, i16* %cksum, align 2, !dbg !8329
  br label %for.inc, !dbg !8330

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !8331
  %inc = add i32 %23, 1, !dbg !8331
  store i32 %inc, i32* %i, align 4, !dbg !8331
  br label %for.cond, !dbg !8332, !llvm.loop !8333

for.end:                                          ; preds = %for.cond
  %24 = load %struct.private_bios_data*, %struct.private_bios_data** %prv_bios_data, align 8, !dbg !8335
  %cksum12 = getelementptr inbounds %struct.private_bios_data, %struct.private_bios_data* %24, i32 0, i32 3, !dbg !8337
  %25 = load i16, i16* %cksum12, align 1, !dbg !8337
  %conv13 = zext i16 %25 to i32, !dbg !8335
  %26 = load i16, i16* %cksum, align 2, !dbg !8338
  %conv14 = zext i16 %26 to i32, !dbg !8338
  %sub = sub i32 0, %conv14, !dbg !8339
  %conv15 = trunc i32 %sub to i16, !dbg !8340
  %conv16 = zext i16 %conv15 to i32, !dbg !8340
  %cmp17 = icmp eq i32 %conv13, %conv16, !dbg !8341
  br i1 %cmp17, label %if.then19, label %if.end35, !dbg !8342

if.then19:                                        ; preds = %for.end
  %27 = load %struct.private_bios_data*, %struct.private_bios_data** %prv_bios_data, align 8, !dbg !8343
  %boot_drv = getelementptr inbounds %struct.private_bios_data, %struct.private_bios_data* %27, i32 0, i32 1, !dbg !8346
  %28 = load i8, i8* %boot_drv, align 1, !dbg !8346
  %conv20 = zext i8 %28 to i32, !dbg !8343
  %and = and i32 %conv20, 128, !dbg !8347
  %tobool = icmp ne i32 %and, 0, !dbg !8347
  br i1 %tobool, label %if.then21, label %if.else, !dbg !8348

if.then21:                                        ; preds = %if.then19
  %29 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8349
  %boot_pdrv_enabled22 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %29, i32 0, i32 28, !dbg !8351
  store i32 1, i32* %boot_pdrv_enabled22, align 8, !dbg !8352
  %30 = load %struct.private_bios_data*, %struct.private_bios_data** %prv_bios_data, align 8, !dbg !8353
  %boot_drv23 = getelementptr inbounds %struct.private_bios_data, %struct.private_bios_data* %30, i32 0, i32 1, !dbg !8354
  %31 = load i8, i8* %boot_drv23, align 1, !dbg !8354
  %conv24 = zext i8 %31 to i32, !dbg !8353
  %and25 = and i32 %conv24, 127, !dbg !8355
  %conv26 = trunc i32 %and25 to i8, !dbg !8353
  store i8 %conv26, i8* %boot_pdrv, align 1, !dbg !8356
  %32 = load i8, i8* %boot_pdrv, align 1, !dbg !8357
  %conv27 = zext i8 %32 to i32, !dbg !8357
  %div = sdiv i32 %conv27, 16, !dbg !8358
  %33 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8359
  %boot_pdrv_ch28 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %33, i32 0, i32 29, !dbg !8360
  store i32 %div, i32* %boot_pdrv_ch28, align 4, !dbg !8361
  %34 = load i8, i8* %boot_pdrv, align 1, !dbg !8362
  %conv29 = zext i8 %34 to i32, !dbg !8362
  %rem = srem i32 %conv29, 16, !dbg !8363
  %35 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8364
  %boot_pdrv_tgt30 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %35, i32 0, i32 30, !dbg !8365
  store i32 %rem, i32* %boot_pdrv_tgt30, align 8, !dbg !8366
  br label %if.end, !dbg !8367

if.else:                                          ; preds = %if.then19
  %36 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8368
  %boot_ldrv_enabled31 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %36, i32 0, i32 26, !dbg !8370
  store i32 1, i32* %boot_ldrv_enabled31, align 8, !dbg !8371
  %37 = load %struct.private_bios_data*, %struct.private_bios_data** %prv_bios_data, align 8, !dbg !8372
  %boot_drv32 = getelementptr inbounds %struct.private_bios_data, %struct.private_bios_data* %37, i32 0, i32 1, !dbg !8373
  %38 = load i8, i8* %boot_drv32, align 1, !dbg !8373
  %conv33 = zext i8 %38 to i32, !dbg !8372
  %39 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8374
  %boot_ldrv34 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %39, i32 0, i32 27, !dbg !8375
  store i32 %conv33, i32* %boot_ldrv34, align 4, !dbg !8376
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then21
  br label %if.end35, !dbg !8377

if.end35:                                         ; preds = %if.end, %for.end
  br label %if.end36, !dbg !8378

if.end36:                                         ; preds = %if.end35, %entry
  ret void, !dbg !8379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_support_random_del(%struct.adapter_t* %adapter) #0 !dbg !8380 {
entry:
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %raw_mbox = alloca [15 x i8], align 1
  %mbox = alloca %struct.mbox_t*, align 8
  %rval = alloca i32, align 4
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !8381, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.declare(metadata [15 x i8]* %raw_mbox, metadata !8383, metadata !DIExpression()), !dbg !8384
  call void @llvm.dbg.declare(metadata %struct.mbox_t** %mbox, metadata !8385, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.declare(metadata i32* %rval, metadata !8387, metadata !DIExpression()), !dbg !8388
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8389
  %0 = bitcast i8* %arraydecay to %struct.mbox_t*, !dbg !8390
  store %struct.mbox_t* %0, %struct.mbox_t** %mbox, align 8, !dbg !8391
  %1 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !8392
  %m_out = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %1, i32 0, i32 0, !dbg !8393
  %2 = bitcast %struct.mbox_out* %m_out to i8*, !dbg !8394
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 15, i1 false), !dbg !8394
  %arrayidx = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8395
  store i8 -92, i8* %arrayidx, align 1, !dbg !8396
  %arrayidx1 = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 2, !dbg !8397
  store i8 42, i8* %arrayidx1, align 1, !dbg !8398
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8399
  %arraydecay2 = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8400
  %call = call i32 @issue_scb_block(%struct.adapter_t* %3, i8* %arraydecay2) #11, !dbg !8401
  store i32 %call, i32* %rval, align 4, !dbg !8402
  %4 = load i32, i32* %rval, align 4, !dbg !8403
  %tobool = icmp ne i32 %4, 0, !dbg !8404
  %lnot = xor i1 %tobool, true, !dbg !8404
  %lnot.ext = zext i1 %lnot to i32, !dbg !8404
  ret i32 %lnot.ext, !dbg !8405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_init_scb(%struct.adapter_t* %adapter) #0 !dbg !8406 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %scb = alloca %struct.scb_t*, align 8
  %i = alloca i32, align 4
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !8407, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.declare(metadata %struct.scb_t** %scb, metadata !8409, metadata !DIExpression()), !dbg !8410
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8411, metadata !DIExpression()), !dbg !8412
  store i32 0, i32* %i, align 4, !dbg !8413
  br label %for.cond, !dbg !8415

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8416
  %1 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8418
  %max_cmds = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %1, i32 0, i32 17, !dbg !8419
  %2 = load i8, i8* %max_cmds, align 8, !dbg !8419
  %conv = zext i8 %2 to i32, !dbg !8418
  %cmp = icmp slt i32 %0, %conv, !dbg !8420
  br i1 %cmp, label %for.body, label %for.end, !dbg !8421

for.body:                                         ; preds = %for.cond
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8422
  %scb_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %3, i32 0, i32 18, !dbg !8424
  %4 = load %struct.scb_t*, %struct.scb_t** %scb_list, align 8, !dbg !8424
  %5 = load i32, i32* %i, align 4, !dbg !8425
  %idxprom = sext i32 %5 to i64, !dbg !8422
  %arrayidx = getelementptr %struct.scb_t, %struct.scb_t* %4, i64 %idxprom, !dbg !8422
  store %struct.scb_t* %arrayidx, %struct.scb_t** %scb, align 8, !dbg !8426
  %6 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8427
  %sgl64 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %6, i32 0, i32 10, !dbg !8428
  store %struct.mega_sgl64* null, %struct.mega_sgl64** %sgl64, align 8, !dbg !8429
  %7 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8430
  %sgl = getelementptr inbounds %struct.scb_t, %struct.scb_t* %7, i32 0, i32 9, !dbg !8431
  store %struct.mega_sglist* null, %struct.mega_sglist** %sgl, align 8, !dbg !8432
  %8 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8433
  %pthru = getelementptr inbounds %struct.scb_t, %struct.scb_t* %8, i32 0, i32 12, !dbg !8434
  store %struct.mega_passthru* null, %struct.mega_passthru** %pthru, align 8, !dbg !8435
  %9 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8436
  %epthru = getelementptr inbounds %struct.scb_t, %struct.scb_t* %9, i32 0, i32 14, !dbg !8437
  store %struct.mega_ext_passthru* null, %struct.mega_ext_passthru** %epthru, align 8, !dbg !8438
  br label %for.inc, !dbg !8439

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !8440
  %inc = add i32 %10, 1, !dbg !8440
  store i32 %inc, i32* %i, align 4, !dbg !8440
  br label %for.cond, !dbg !8441, !llvm.loop !8442

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8444
  br label %for.cond2, !dbg !8446

for.cond2:                                        ; preds = %for.inc39, %for.end
  %11 = load i32, i32* %i, align 4, !dbg !8447
  %12 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8449
  %max_cmds3 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %12, i32 0, i32 17, !dbg !8450
  %13 = load i8, i8* %max_cmds3, align 8, !dbg !8450
  %conv4 = zext i8 %13 to i32, !dbg !8449
  %cmp5 = icmp slt i32 %11, %conv4, !dbg !8451
  br i1 %cmp5, label %for.body7, label %for.end41, !dbg !8452

for.body7:                                        ; preds = %for.cond2
  %14 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8453
  %scb_list8 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %14, i32 0, i32 18, !dbg !8455
  %15 = load %struct.scb_t*, %struct.scb_t** %scb_list8, align 8, !dbg !8455
  %16 = load i32, i32* %i, align 4, !dbg !8456
  %idxprom9 = sext i32 %16 to i64, !dbg !8453
  %arrayidx10 = getelementptr %struct.scb_t, %struct.scb_t* %15, i64 %idxprom9, !dbg !8453
  store %struct.scb_t* %arrayidx10, %struct.scb_t** %scb, align 8, !dbg !8457
  %17 = load i32, i32* %i, align 4, !dbg !8458
  %18 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8459
  %idx = getelementptr inbounds %struct.scb_t, %struct.scb_t* %18, i32 0, i32 0, !dbg !8460
  store i32 %17, i32* %idx, align 8, !dbg !8461
  %19 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8462
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %19, i32 0, i32 9, !dbg !8463
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8463
  %dev11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !8464
  %21 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8465
  %sglen = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %21, i32 0, i32 37, !dbg !8466
  %22 = load i8, i8* %sglen, align 8, !dbg !8466
  %conv12 = zext i8 %22 to i64, !dbg !8465
  %mul = mul i64 12, %conv12, !dbg !8467
  %23 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8468
  %sgl_dma_addr = getelementptr inbounds %struct.scb_t, %struct.scb_t* %23, i32 0, i32 11, !dbg !8469
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev11, i64 %mul, i64* %sgl_dma_addr, i32 3264) #11, !dbg !8470
  %24 = bitcast i8* %call to %struct.mega_sgl64*, !dbg !8470
  %25 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8471
  %sgl6413 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %25, i32 0, i32 10, !dbg !8472
  store %struct.mega_sgl64* %24, %struct.mega_sgl64** %sgl6413, align 8, !dbg !8473
  %26 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8474
  %sgl6414 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %26, i32 0, i32 10, !dbg !8475
  %27 = load %struct.mega_sgl64*, %struct.mega_sgl64** %sgl6414, align 8, !dbg !8475
  %28 = bitcast %struct.mega_sgl64* %27 to %struct.mega_sglist*, !dbg !8476
  %29 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8477
  %sgl15 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %29, i32 0, i32 9, !dbg !8478
  store %struct.mega_sglist* %28, %struct.mega_sglist** %sgl15, align 8, !dbg !8479
  %30 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8480
  %sgl16 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %30, i32 0, i32 9, !dbg !8482
  %31 = load %struct.mega_sglist*, %struct.mega_sglist** %sgl16, align 8, !dbg !8482
  %tobool = icmp ne %struct.mega_sglist* %31, null, !dbg !8480
  br i1 %tobool, label %if.end, label %if.then, !dbg !8483

if.then:                                          ; preds = %for.body7
  %32 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8484
  %dev17 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %32, i32 0, i32 9, !dbg !8484
  %33 = load %struct.pci_dev*, %struct.pci_dev** %dev17, align 8, !dbg !8484
  %dev18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 41, !dbg !8484
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev18, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.49, i64 0, i64 0)) #12, !dbg !8484
  %34 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8486
  call void @mega_free_sgl(%struct.adapter_t* %34) #11, !dbg !8487
  store i32 -1, i32* %retval, align 4, !dbg !8488
  br label %return, !dbg !8488

if.end:                                           ; preds = %for.body7
  %35 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8489
  %dev19 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %35, i32 0, i32 9, !dbg !8490
  %36 = load %struct.pci_dev*, %struct.pci_dev** %dev19, align 8, !dbg !8490
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 41, !dbg !8491
  %37 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8492
  %pthru_dma_addr = getelementptr inbounds %struct.scb_t, %struct.scb_t* %37, i32 0, i32 13, !dbg !8493
  %call21 = call i8* @dma_alloc_coherent(%struct.device* %dev20, i64 60, i64* %pthru_dma_addr, i32 3264) #11, !dbg !8494
  %38 = bitcast i8* %call21 to %struct.mega_passthru*, !dbg !8494
  %39 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8495
  %pthru22 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %39, i32 0, i32 12, !dbg !8496
  store %struct.mega_passthru* %38, %struct.mega_passthru** %pthru22, align 8, !dbg !8497
  %40 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8498
  %pthru23 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %40, i32 0, i32 12, !dbg !8500
  %41 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru23, align 8, !dbg !8500
  %tobool24 = icmp ne %struct.mega_passthru* %41, null, !dbg !8498
  br i1 %tobool24, label %if.end28, label %if.then25, !dbg !8501

if.then25:                                        ; preds = %if.end
  %42 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8502
  %dev26 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %42, i32 0, i32 9, !dbg !8502
  %43 = load %struct.pci_dev*, %struct.pci_dev** %dev26, align 8, !dbg !8502
  %dev27 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 41, !dbg !8502
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev27, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.50, i64 0, i64 0)) #12, !dbg !8502
  %44 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8504
  call void @mega_free_sgl(%struct.adapter_t* %44) #11, !dbg !8505
  store i32 -1, i32* %retval, align 4, !dbg !8506
  br label %return, !dbg !8506

if.end28:                                         ; preds = %if.end
  %45 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8507
  %dev29 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %45, i32 0, i32 9, !dbg !8508
  %46 = load %struct.pci_dev*, %struct.pci_dev** %dev29, align 8, !dbg !8508
  %dev30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 41, !dbg !8509
  %47 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8510
  %epthru_dma_addr = getelementptr inbounds %struct.scb_t, %struct.scb_t* %47, i32 0, i32 15, !dbg !8511
  %call31 = call i8* @dma_alloc_coherent(%struct.device* %dev30, i64 68, i64* %epthru_dma_addr, i32 3264) #11, !dbg !8512
  %48 = bitcast i8* %call31 to %struct.mega_ext_passthru*, !dbg !8512
  %49 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8513
  %epthru32 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %49, i32 0, i32 14, !dbg !8514
  store %struct.mega_ext_passthru* %48, %struct.mega_ext_passthru** %epthru32, align 8, !dbg !8515
  %50 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8516
  %epthru33 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %50, i32 0, i32 14, !dbg !8518
  %51 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru33, align 8, !dbg !8518
  %tobool34 = icmp ne %struct.mega_ext_passthru* %51, null, !dbg !8516
  br i1 %tobool34, label %if.end38, label %if.then35, !dbg !8519

if.then35:                                        ; preds = %if.end28
  %52 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8520
  %dev36 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %52, i32 0, i32 9, !dbg !8520
  %53 = load %struct.pci_dev*, %struct.pci_dev** %dev36, align 8, !dbg !8520
  %dev37 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %53, i32 0, i32 41, !dbg !8520
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev37, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.51, i64 0, i64 0)) #12, !dbg !8520
  %54 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8522
  call void @mega_free_sgl(%struct.adapter_t* %54) #11, !dbg !8523
  store i32 -1, i32* %retval, align 4, !dbg !8524
  br label %return, !dbg !8524

if.end38:                                         ; preds = %if.end28
  %55 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8525
  %dma_type = getelementptr inbounds %struct.scb_t, %struct.scb_t* %55, i32 0, i32 4, !dbg !8526
  store i32 65535, i32* %dma_type, align 4, !dbg !8527
  %56 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8528
  %state = getelementptr inbounds %struct.scb_t, %struct.scb_t* %56, i32 0, i32 1, !dbg !8529
  store i32 0, i32* %state, align 4, !dbg !8530
  %57 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8531
  %cmd = getelementptr inbounds %struct.scb_t, %struct.scb_t* %57, i32 0, i32 6, !dbg !8532
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %cmd, align 8, !dbg !8533
  %58 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !8534
  %list = getelementptr inbounds %struct.scb_t, %struct.scb_t* %58, i32 0, i32 2, !dbg !8535
  %59 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8536
  %free_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %59, i32 0, i32 10, !dbg !8537
  call void @list_add(%struct.list_head* %list, %struct.list_head* %free_list) #11, !dbg !8538
  br label %for.inc39, !dbg !8539

for.inc39:                                        ; preds = %if.end38
  %60 = load i32, i32* %i, align 4, !dbg !8540
  %inc40 = add i32 %60, 1, !dbg !8540
  store i32 %inc40, i32* %i, align 4, !dbg !8540
  br label %for.cond2, !dbg !8541, !llvm.loop !8542

for.end41:                                        ; preds = %for.cond2
  store i32 0, i32* %retval, align 4, !dbg !8544
  br label %return, !dbg !8544

return:                                           ; preds = %for.end41, %if.then35, %if.then25, %if.then
  %61 = load i32, i32* %retval, align 4, !dbg !8545
  ret i32 %61, !dbg !8545
}

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #2

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_completion(%struct.completion* %x) #0 !dbg !6156 {
entry:
  %x.addr = alloca %struct.completion*, align 8
  store %struct.completion* %x, %struct.completion** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.completion** %x.addr, metadata !8546, metadata !DIExpression()), !dbg !8547
  %0 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !8548
  %done = getelementptr inbounds %struct.completion, %struct.completion* %0, i32 0, i32 0, !dbg !8549
  store i32 0, i32* %done, align 8, !dbg !8550
  br label %do.body, !dbg !8551

do.body:                                          ; preds = %entry
  %1 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !8552
  %wait = getelementptr inbounds %struct.completion, %struct.completion* %1, i32 0, i32 1, !dbg !8552
  call void @__init_swait_queue_head(%struct.swait_queue_head* %wait, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i64 0, i64 0), %struct.lock_class_key* @__init_completion.__key) #11, !dbg !8552
  br label %do.end, !dbg !8552

do.end:                                           ; preds = %do.body
  ret void, !dbg !8554
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_support_cluster(%struct.adapter_t* %adapter) #0 !dbg !8555 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %raw_mbox = alloca [15 x i8], align 1
  %mbox = alloca %struct.mbox_t*, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !8556, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.declare(metadata [15 x i8]* %raw_mbox, metadata !8558, metadata !DIExpression()), !dbg !8559
  call void @llvm.dbg.declare(metadata %struct.mbox_t** %mbox, metadata !8560, metadata !DIExpression()), !dbg !8561
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8562
  %0 = bitcast i8* %arraydecay to %struct.mbox_t*, !dbg !8563
  store %struct.mbox_t* %0, %struct.mbox_t** %mbox, align 8, !dbg !8564
  %1 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !8565
  %2 = bitcast %struct.mbox_t* %1 to i8*, !dbg !8566
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 15, i1 false), !dbg !8566
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8567
  %mega_buffer = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %3, i32 0, i32 14, !dbg !8568
  %4 = load i8*, i8** %mega_buffer, align 8, !dbg !8568
  call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 0, i64 2048, i1 false), !dbg !8569
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8570
  %buf_dma_handle = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %5, i32 0, i32 15, !dbg !8571
  %6 = load i64, i64* %buf_dma_handle, align 8, !dbg !8571
  %conv = trunc i64 %6 to i32, !dbg !8572
  %7 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !8573
  %m_out = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %7, i32 0, i32 0, !dbg !8574
  %xferaddr = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out, i32 0, i32 4, !dbg !8575
  store i32 %conv, i32* %xferaddr, align 1, !dbg !8576
  %arrayidx = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8577
  store i8 125, i8* %arrayidx, align 1, !dbg !8578
  %8 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8579
  %arraydecay1 = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !8581
  %call = call i32 @issue_scb_block(%struct.adapter_t* %8, i8* %arraydecay1) #11, !dbg !8582
  %cmp = icmp eq i32 %call, 0, !dbg !8583
  br i1 %cmp, label %if.then, label %if.end, !dbg !8584

if.then:                                          ; preds = %entry
  %9 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8585
  %mega_buffer3 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %9, i32 0, i32 14, !dbg !8587
  %10 = load i8*, i8** %mega_buffer3, align 8, !dbg !8587
  %11 = bitcast i8* %10 to i32*, !dbg !8588
  %12 = load i32, i32* %11, align 4, !dbg !8588
  %13 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8589
  %this_id = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %13, i32 0, i32 0, !dbg !8590
  store i32 %12, i32* %this_id, align 8, !dbg !8591
  %14 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8592
  %this_id4 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %14, i32 0, i32 0, !dbg !8593
  %15 = load i32, i32* %this_id4, align 8, !dbg !8593
  %16 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !8594
  %host = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %16, i32 0, i32 13, !dbg !8595
  %17 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !8595
  %this_id5 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %17, i32 0, i32 24, !dbg !8596
  store i32 %15, i32* %this_id5, align 8, !dbg !8597
  store i32 1, i32* %retval, align 4, !dbg !8598
  br label %return, !dbg !8598

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8599
  br label %return, !dbg !8599

return:                                           ; preds = %if.end, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !8600
  ret i32 %18, !dbg !8600
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #0 !dbg !8601 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8604, metadata !DIExpression()), !dbg !8605
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8606, metadata !DIExpression()), !dbg !8607
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8608
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !8609
  %1 = load i8*, i8** %data.addr, align 8, !dbg !8610
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #11, !dbg !8611
  ret void, !dbg !8612
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mega_create_proc_entry(i32 %index, %struct.proc_dir_entry* %parent) #0 !dbg !8613 {
entry:
  %index.addr = alloca i32, align 4
  %parent.addr = alloca %struct.proc_dir_entry*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  %dir = alloca %struct.proc_dir_entry*, align 8
  %string = alloca [16 x i8], align 16
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8616, metadata !DIExpression()), !dbg !8617
  store %struct.proc_dir_entry* %parent, %struct.proc_dir_entry** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.proc_dir_entry** %parent.addr, metadata !8618, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !8620, metadata !DIExpression()), !dbg !8621
  %0 = load i32, i32* %index.addr, align 4, !dbg !8622
  %idxprom = sext i32 %0 to i64, !dbg !8623
  %arrayidx = getelementptr [32 x %struct.adapter_t*], [32 x %struct.adapter_t*]* @hba_soft_state, i64 0, i64 %idxprom, !dbg !8623
  %1 = load %struct.adapter_t*, %struct.adapter_t** %arrayidx, align 8, !dbg !8623
  store %struct.adapter_t* %1, %struct.adapter_t** %adapter, align 8, !dbg !8621
  call void @llvm.dbg.declare(metadata %struct.proc_dir_entry** %dir, metadata !8624, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.declare(metadata [16 x i8]* %string, metadata !8626, metadata !DIExpression()), !dbg !8627
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %string, i64 0, i64 0, !dbg !8628
  %2 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8629
  %host = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %2, i32 0, i32 13, !dbg !8630
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !8630
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 16, !dbg !8631
  %4 = load i32, i32* %host_no, align 4, !dbg !8631
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0), i32 %4) #11, !dbg !8632
  %arraydecay1 = getelementptr inbounds [16 x i8], [16 x i8]* %string, i64 0, i64 0, !dbg !8633
  %5 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %parent.addr, align 8, !dbg !8634
  %6 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8635
  %7 = bitcast %struct.adapter_t* %6 to i8*, !dbg !8635
  %call2 = call %struct.proc_dir_entry* @proc_mkdir_data(i8* %arraydecay1, i16 zeroext 0, %struct.proc_dir_entry* %5, i8* %7) #11, !dbg !8636
  store %struct.proc_dir_entry* %call2, %struct.proc_dir_entry** %dir, align 8, !dbg !8637
  %8 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %dir, align 8, !dbg !8638
  %tobool = icmp ne %struct.proc_dir_entry* %8, null, !dbg !8638
  br i1 %tobool, label %if.end, label %if.then, !dbg !8640

if.then:                                          ; preds = %entry
  %9 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8641
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %9, i32 0, i32 9, !dbg !8641
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8641
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !8641
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.54, i64 0, i64 0)) #12, !dbg !8641
  br label %return, !dbg !8643

if.end:                                           ; preds = %entry
  %11 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %dir, align 8, !dbg !8644
  %12 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8645
  %13 = bitcast %struct.adapter_t* %12 to i8*, !dbg !8645
  %call4 = call %struct.proc_dir_entry* @proc_create_single_data(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i64 0, i64 0), i16 zeroext 256, %struct.proc_dir_entry* %11, i32 (%struct.seq_file*, i8*)* @proc_show_config, i8* %13) #11, !dbg !8646
  %14 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %dir, align 8, !dbg !8647
  %15 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8648
  %16 = bitcast %struct.adapter_t* %15 to i8*, !dbg !8648
  %call5 = call %struct.proc_dir_entry* @proc_create_single_data(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0), i16 zeroext 256, %struct.proc_dir_entry* %14, i32 (%struct.seq_file*, i8*)* @proc_show_stat, i8* %16) #11, !dbg !8649
  %17 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %dir, align 8, !dbg !8650
  %18 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8651
  %19 = bitcast %struct.adapter_t* %18 to i8*, !dbg !8651
  %call6 = call %struct.proc_dir_entry* @proc_create_single_data(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i64 0, i64 0), i16 zeroext 256, %struct.proc_dir_entry* %17, i32 (%struct.seq_file*, i8*)* @proc_show_mbox, i8* %19) #11, !dbg !8652
  %20 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %dir, align 8, !dbg !8653
  %21 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8654
  %22 = bitcast %struct.adapter_t* %21 to i8*, !dbg !8654
  %call7 = call %struct.proc_dir_entry* @proc_create_single_data(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.58, i64 0, i64 0), i16 zeroext 256, %struct.proc_dir_entry* %20, i32 (%struct.seq_file*, i8*)* @proc_show_rebuild_rate, i8* %22) #11, !dbg !8655
  %23 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %dir, align 8, !dbg !8656
  %24 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8657
  %25 = bitcast %struct.adapter_t* %24 to i8*, !dbg !8657
  %call8 = call %struct.proc_dir_entry* @proc_create_single_data(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i64 0, i64 0), i16 zeroext 256, %struct.proc_dir_entry* %23, i32 (%struct.seq_file*, i8*)* @proc_show_battery, i8* %25) #11, !dbg !8658
  %26 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %dir, align 8, !dbg !8659
  %27 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8660
  %28 = bitcast %struct.adapter_t* %27 to i8*, !dbg !8660
  %call9 = call %struct.proc_dir_entry* @proc_create_single_data(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i64 0, i64 0), i16 zeroext 256, %struct.proc_dir_entry* %26, i32 (%struct.seq_file*, i8*)* @proc_show_pdrv_ch0, i8* %28) #11, !dbg !8661
  %29 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %dir, align 8, !dbg !8662
  %30 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8663
  %31 = bitcast %struct.adapter_t* %30 to i8*, !dbg !8663
  %call10 = call %struct.proc_dir_entry* @proc_create_single_data(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0), i16 zeroext 256, %struct.proc_dir_entry* %29, i32 (%struct.seq_file*, i8*)* @proc_show_pdrv_ch1, i8* %31) #11, !dbg !8664
  %32 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %dir, align 8, !dbg !8665
  %33 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8666
  %34 = bitcast %struct.adapter_t* %33 to i8*, !dbg !8666
  %call11 = call %struct.proc_dir_entry* @proc_create_single_data(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62, i64 0, i64 0), i16 zeroext 256, %struct.proc_dir_entry* %32, i32 (%struct.seq_file*, i8*)* @proc_show_pdrv_ch2, i8* %34) #11, !dbg !8667
  %35 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %dir, align 8, !dbg !8668
  %36 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8669
  %37 = bitcast %struct.adapter_t* %36 to i8*, !dbg !8669
  %call12 = call %struct.proc_dir_entry* @proc_create_single_data(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i64 0, i64 0), i16 zeroext 256, %struct.proc_dir_entry* %35, i32 (%struct.seq_file*, i8*)* @proc_show_pdrv_ch3, i8* %37) #11, !dbg !8670
  %38 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %dir, align 8, !dbg !8671
  %39 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8672
  %40 = bitcast %struct.adapter_t* %39 to i8*, !dbg !8672
  %call13 = call %struct.proc_dir_entry* @proc_create_single_data(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64, i64 0, i64 0), i16 zeroext 256, %struct.proc_dir_entry* %38, i32 (%struct.seq_file*, i8*)* @proc_show_rdrv_10, i8* %40) #11, !dbg !8673
  %41 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %dir, align 8, !dbg !8674
  %42 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8675
  %43 = bitcast %struct.adapter_t* %42 to i8*, !dbg !8675
  %call14 = call %struct.proc_dir_entry* @proc_create_single_data(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.65, i64 0, i64 0), i16 zeroext 256, %struct.proc_dir_entry* %41, i32 (%struct.seq_file*, i8*)* @proc_show_rdrv_20, i8* %43) #11, !dbg !8676
  %44 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %dir, align 8, !dbg !8677
  %45 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8678
  %46 = bitcast %struct.adapter_t* %45 to i8*, !dbg !8678
  %call15 = call %struct.proc_dir_entry* @proc_create_single_data(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.66, i64 0, i64 0), i16 zeroext 256, %struct.proc_dir_entry* %44, i32 (%struct.seq_file*, i8*)* @proc_show_rdrv_30, i8* %46) #11, !dbg !8679
  %47 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %dir, align 8, !dbg !8680
  %48 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8681
  %49 = bitcast %struct.adapter_t* %48 to i8*, !dbg !8681
  %call16 = call %struct.proc_dir_entry* @proc_create_single_data(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.67, i64 0, i64 0), i16 zeroext 256, %struct.proc_dir_entry* %47, i32 (%struct.seq_file*, i8*)* @proc_show_rdrv_40, i8* %49) #11, !dbg !8682
  br label %return, !dbg !8683

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_add_host(%struct.Scsi_Host* %host, %struct.device* %dev) #0 !dbg !8684 {
entry:
  %host.addr = alloca %struct.Scsi_Host*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !8687, metadata !DIExpression()), !dbg !8688
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8689, metadata !DIExpression()), !dbg !8690
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !8691
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8692
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8693
  %call = call i32 @scsi_add_host_with_dma(%struct.Scsi_Host* %0, %struct.device* %1, %struct.device* %2) #11, !dbg !8694
  ret i32 %call, !dbg !8695
}

; Function Attrs: noredzone
declare dso_local void @scsi_scan_host(%struct.Scsi_Host*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #0 !dbg !8696 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8699, metadata !DIExpression()), !dbg !8700
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8701, metadata !DIExpression()), !dbg !8702
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !8703, metadata !DIExpression()), !dbg !8704
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !8705, metadata !DIExpression()), !dbg !8706
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8707
  %1 = load i64, i64* %size.addr, align 8, !dbg !8708
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !8709
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !8710
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #11, !dbg !8711
  ret void, !dbg !8712
}

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noredzone
declare dso_local void @scsi_host_put(%struct.Scsi_Host*) #2

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #2

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #2

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @megaraid_queue(%struct.Scsi_Host* %shost, %struct.scsi_cmnd* %cmd) #0 !dbg !8713 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !7447, metadata !DIExpression()), !dbg !8714
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7453, metadata !DIExpression()), !dbg !8716
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6303, metadata !DIExpression()), !dbg !8717
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %irq_flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !8724, metadata !DIExpression()), !dbg !8725
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !8726, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.declare(metadata i64* %irq_flags, metadata !8727, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8728, metadata !DIExpression()), !dbg !8725
  br label %do.body, !dbg !8725

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8729

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8730, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8733, metadata !DIExpression()), !dbg !8732
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8732
  %conv = zext i1 %cmp to i32, !dbg !8732
  store i32 1, i32* %tmp, align 4, !dbg !8732
  %0 = load i32, i32* %tmp, align 4, !dbg !8732
  br label %do.body2, !dbg !8734

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8735

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8736

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8738, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8742, metadata !DIExpression()), !dbg !8741
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8741
  %conv8 = zext i1 %cmp7 to i32, !dbg !8741
  store i32 1, i32* %tmp9, align 4, !dbg !8741
  %1 = load i32, i32* %tmp9, align 4, !dbg !8741
  %call = call i64 @arch_local_irq_save() #11, !dbg !8743
  store i64 %call, i64* %irq_flags, align 8, !dbg !8743
  br label %do.end, !dbg !8743

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8736

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8735

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8744, !srcloc !8745
  br label %do.body12, !dbg !8744

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8746
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 4, !dbg !8746
  %3 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !8746
  store %struct.spinlock* %3, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8747
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !8748
  %rlock.i = bitcast %union.anon.1* %5 to %struct.raw_spinlock*, !dbg !8748
  br label %do.end14, !dbg !8746

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8744

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8735

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8734

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8729

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8725
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8725
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 21, !dbg !8725
  %8 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !8725
  %call19 = call i32 @megaraid_queue_lck(%struct.scsi_cmnd* %6, void (%struct.scsi_cmnd*)* %8) #11, !dbg !8725
  store i32 %call19, i32* %rc, align 4, !dbg !8725
  %9 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8725
  %host_lock20 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %9, i32 0, i32 4, !dbg !8725
  %10 = load %struct.spinlock*, %struct.spinlock** %host_lock20, align 8, !dbg !8725
  %11 = load i64, i64* %irq_flags, align 8, !dbg !8725
  store %struct.spinlock* %10, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !7602, metadata !DIExpression()) #7, !dbg !8749
  call void @llvm.dbg.declare(metadata !372, metadata !7606, metadata !DIExpression()) #7, !dbg !8749
  store i32 1, i32* %tmp.i, align 4, !dbg !8749
  %12 = load i32, i32* %tmp.i, align 4, !dbg !8749
  call void @llvm.dbg.declare(metadata !372, metadata !7607, metadata !DIExpression()) #7, !dbg !8750
  call void @llvm.dbg.declare(metadata !372, metadata !7613, metadata !DIExpression()) #7, !dbg !8750
  store i32 1, i32* %tmp8.i, align 4, !dbg !8750
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !8750
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !8751
  call void @arch_local_irq_restore(i64 %14) #13, !dbg !8751
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8752, !srcloc !7617
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !8753
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !8753
  %rlock.i22 = bitcast %union.anon.1* %16 to %struct.raw_spinlock*, !dbg !8753
  %17 = load i32, i32* %rc, align 4, !dbg !8725
  ret i32 %17, !dbg !8725
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @megaraid_abort(%struct.scsi_cmnd* %cmd) #0 !dbg !8754 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  %rval = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !8755, metadata !DIExpression()), !dbg !8756
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !8757, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.declare(metadata i32* %rval, metadata !8759, metadata !DIExpression()), !dbg !8760
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8761
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !8762
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !8762
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !8763
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !8763
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 51, !dbg !8764
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !8761
  %3 = bitcast i64* %arraydecay to %struct.adapter_t*, !dbg !8765
  store %struct.adapter_t* %3, %struct.adapter_t** %adapter, align 8, !dbg !8766
  %4 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8767
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8768
  %call = call i32 @megaraid_abort_and_reset(%struct.adapter_t* %4, %struct.scsi_cmnd* %5, i32 8) #11, !dbg !8769
  store i32 %call, i32* %rval, align 4, !dbg !8770
  %6 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8771
  call void @mega_rundoneq(%struct.adapter_t* %6) #11, !dbg !8772
  %7 = load i32, i32* %rval, align 4, !dbg !8773
  ret i32 %7, !dbg !8774
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @megaraid_reset(%struct.scsi_cmnd* %cmd) #0 !dbg !8775 {
entry:
  %lock.addr.i7 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i7, metadata !8776, metadata !DIExpression()), !dbg !8780
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8782, metadata !DIExpression()), !dbg !8784
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  %mc = alloca %struct.megacmd_t, align 1
  %rval = alloca i32, align 4
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !8786, metadata !DIExpression()), !dbg !8787
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !8788, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.declare(metadata %struct.megacmd_t* %mc, metadata !8790, metadata !DIExpression()), !dbg !8791
  call void @llvm.dbg.declare(metadata i32* %rval, metadata !8792, metadata !DIExpression()), !dbg !8793
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8794
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !8795
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !8795
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !8796
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !8796
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 51, !dbg !8797
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !8794
  %3 = bitcast i64* %arraydecay to %struct.adapter_t*, !dbg !8798
  store %struct.adapter_t* %3, %struct.adapter_t** %adapter, align 8, !dbg !8799
  %cmd1 = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 0, !dbg !8800
  store i8 110, i8* %cmd1, align 1, !dbg !8801
  %opcode = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 2, !dbg !8802
  store i8 3, i8* %opcode, align 1, !dbg !8803
  %4 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8804
  %call = call i32 @mega_internal_command(%struct.adapter_t* %4, %struct.megacmd_t* %mc, %struct.mega_passthru* null) #11, !dbg !8806
  %cmp = icmp ne i32 %call, 0, !dbg !8807
  br i1 %cmp, label %if.then, label %if.else, !dbg !8808

if.then:                                          ; preds = %entry
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8809
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %5, i32 0, i32 9, !dbg !8809
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8809
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !8809
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i64 0, i64 0)) #12, !dbg !8809
  br label %if.end, !dbg !8811

if.else:                                          ; preds = %entry
  %7 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8812
  %dev3 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %7, i32 0, i32 9, !dbg !8812
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev3, align 8, !dbg !8812
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !8812
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.32, i64 0, i64 0)) #12, !dbg !8812
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8814
  %lock = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %9, i32 0, i32 34, !dbg !8815
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !8816
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8819, !srcloc !8821
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8822
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !8822
  %rlock.i = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !8822
  %12 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8824
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !8825
  %call5 = call i32 @megaraid_abort_and_reset(%struct.adapter_t* %12, %struct.scsi_cmnd* %13, i32 16) #11, !dbg !8826
  store i32 %call5, i32* %rval, align 4, !dbg !8827
  %14 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8828
  call void @mega_rundoneq(%struct.adapter_t* %14) #11, !dbg !8829
  %15 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8830
  %lock6 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %15, i32 0, i32 34, !dbg !8831
  store %struct.spinlock* %lock6, %struct.spinlock** %lock.addr.i7, align 8
  call void @arch_local_irq_enable() #13, !dbg !8832
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8835, !srcloc !8837
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i7, align 8, !dbg !8838
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !8838
  %rlock.i8 = bitcast %union.anon.1* %17 to %struct.raw_spinlock*, !dbg !8838
  %18 = load i32, i32* %rval, align 4, !dbg !8840
  ret i32 %18, !dbg !8841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @megaraid_biosparam(%struct.scsi_device* %sdev, %struct.block_device* %bdev, i64 %capacity, i32* %geom) #0 !dbg !8842 {
entry:
  %retval = alloca i32, align 4
  %sdev.addr = alloca %struct.scsi_device*, align 8
  %bdev.addr = alloca %struct.block_device*, align 8
  %capacity.addr = alloca i64, align 8
  %geom.addr = alloca i32*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  %heads = alloca i32, align 4
  %sectors = alloca i32, align 4
  %cylinders = alloca i32, align 4
  store %struct.scsi_device* %sdev, %struct.scsi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_device** %sdev.addr, metadata !8843, metadata !DIExpression()), !dbg !8844
  store %struct.block_device* %bdev, %struct.block_device** %bdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.block_device** %bdev.addr, metadata !8845, metadata !DIExpression()), !dbg !8846
  store i64 %capacity, i64* %capacity.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.addr, metadata !8847, metadata !DIExpression()), !dbg !8848
  store i32* %geom, i32** %geom.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %geom.addr, metadata !8849, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !8851, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.declare(metadata i32* %heads, metadata !8853, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.declare(metadata i32* %sectors, metadata !8855, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.declare(metadata i32* %cylinders, metadata !8857, metadata !DIExpression()), !dbg !8858
  %0 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8859
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %0, i32 0, i32 0, !dbg !8860
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !8860
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %1, i32 0, i32 51, !dbg !8861
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !8859
  %2 = bitcast i64* %arraydecay to %struct.adapter_t*, !dbg !8862
  store %struct.adapter_t* %2, %struct.adapter_t** %adapter, align 8, !dbg !8863
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8864
  %mega_ch_class = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %3, i32 0, i32 36, !dbg !8864
  %4 = load i32, i32* %mega_ch_class, align 4, !dbg !8864
  %5 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8864
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %5, i32 0, i32 17, !dbg !8864
  %6 = load i32, i32* %channel, align 4, !dbg !8864
  %shr = ashr i32 %4, %6, !dbg !8864
  %and = and i32 %shr, 1, !dbg !8864
  %tobool = icmp ne i32 %and, 0, !dbg !8864
  br i1 %tobool, label %if.then, label %if.else, !dbg !8866

if.then:                                          ; preds = %entry
  store i32 64, i32* %heads, align 4, !dbg !8867
  store i32 32, i32* %sectors, align 4, !dbg !8869
  %7 = load i64, i64* %capacity.addr, align 8, !dbg !8870
  %8 = load i32, i32* %heads, align 4, !dbg !8871
  %9 = load i32, i32* %sectors, align 4, !dbg !8872
  %mul = mul i32 %8, %9, !dbg !8873
  %conv = sext i32 %mul to i64, !dbg !8874
  %div = udiv i64 %7, %conv, !dbg !8875
  %conv1 = trunc i64 %div to i32, !dbg !8876
  store i32 %conv1, i32* %cylinders, align 4, !dbg !8877
  %10 = load i64, i64* %capacity.addr, align 8, !dbg !8878
  %cmp = icmp uge i64 %10, 2097152, !dbg !8880
  br i1 %cmp, label %if.then3, label %if.end, !dbg !8881

if.then3:                                         ; preds = %if.then
  store i32 255, i32* %heads, align 4, !dbg !8882
  store i32 63, i32* %sectors, align 4, !dbg !8884
  %11 = load i64, i64* %capacity.addr, align 8, !dbg !8885
  %12 = load i32, i32* %heads, align 4, !dbg !8886
  %13 = load i32, i32* %sectors, align 4, !dbg !8887
  %mul4 = mul i32 %12, %13, !dbg !8888
  %conv5 = sext i32 %mul4 to i64, !dbg !8889
  %div6 = udiv i64 %11, %conv5, !dbg !8890
  %conv7 = trunc i64 %div6 to i32, !dbg !8891
  store i32 %conv7, i32* %cylinders, align 4, !dbg !8892
  br label %if.end, !dbg !8893

if.end:                                           ; preds = %if.then3, %if.then
  %14 = load i32, i32* %heads, align 4, !dbg !8894
  %15 = load i32*, i32** %geom.addr, align 8, !dbg !8895
  %arrayidx = getelementptr i32, i32* %15, i64 0, !dbg !8895
  store i32 %14, i32* %arrayidx, align 4, !dbg !8896
  %16 = load i32, i32* %sectors, align 4, !dbg !8897
  %17 = load i32*, i32** %geom.addr, align 8, !dbg !8898
  %arrayidx8 = getelementptr i32, i32* %17, i64 1, !dbg !8898
  store i32 %16, i32* %arrayidx8, align 4, !dbg !8899
  %18 = load i32, i32* %cylinders, align 4, !dbg !8900
  %19 = load i32*, i32** %geom.addr, align 8, !dbg !8901
  %arrayidx9 = getelementptr i32, i32* %19, i64 2, !dbg !8901
  store i32 %18, i32* %arrayidx9, align 4, !dbg !8902
  br label %if.end29, !dbg !8903

if.else:                                          ; preds = %entry
  %20 = load %struct.block_device*, %struct.block_device** %bdev.addr, align 8, !dbg !8904
  %21 = load i64, i64* %capacity.addr, align 8, !dbg !8907
  %22 = load i32*, i32** %geom.addr, align 8, !dbg !8908
  %call = call zeroext i1 @scsi_partsize(%struct.block_device* %20, i64 %21, i32* %22) #11, !dbg !8909
  br i1 %call, label %if.then10, label %if.end11, !dbg !8910

if.then10:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !8911
  br label %return, !dbg !8911

if.end11:                                         ; preds = %if.else
  %23 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !8912
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %23, i32 0, i32 9, !dbg !8912
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8912
  %dev12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 41, !dbg !8912
  %25 = load %struct.scsi_device*, %struct.scsi_device** %sdev.addr, align 8, !dbg !8912
  %channel13 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %25, i32 0, i32 17, !dbg !8912
  %26 = load i32, i32* %channel13, align 4, !dbg !8912
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev12, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.34, i64 0, i64 0), i32 %26) #12, !dbg !8912
  store i32 64, i32* %heads, align 4, !dbg !8913
  store i32 32, i32* %sectors, align 4, !dbg !8914
  %27 = load i64, i64* %capacity.addr, align 8, !dbg !8915
  %28 = load i32, i32* %heads, align 4, !dbg !8916
  %29 = load i32, i32* %sectors, align 4, !dbg !8917
  %mul14 = mul i32 %28, %29, !dbg !8918
  %conv15 = sext i32 %mul14 to i64, !dbg !8919
  %div16 = udiv i64 %27, %conv15, !dbg !8920
  %conv17 = trunc i64 %div16 to i32, !dbg !8921
  store i32 %conv17, i32* %cylinders, align 4, !dbg !8922
  %30 = load i64, i64* %capacity.addr, align 8, !dbg !8923
  %cmp18 = icmp uge i64 %30, 2097152, !dbg !8925
  br i1 %cmp18, label %if.then20, label %if.end25, !dbg !8926

if.then20:                                        ; preds = %if.end11
  store i32 255, i32* %heads, align 4, !dbg !8927
  store i32 63, i32* %sectors, align 4, !dbg !8929
  %31 = load i64, i64* %capacity.addr, align 8, !dbg !8930
  %32 = load i32, i32* %heads, align 4, !dbg !8931
  %33 = load i32, i32* %sectors, align 4, !dbg !8932
  %mul21 = mul i32 %32, %33, !dbg !8933
  %conv22 = sext i32 %mul21 to i64, !dbg !8934
  %div23 = udiv i64 %31, %conv22, !dbg !8935
  %conv24 = trunc i64 %div23 to i32, !dbg !8936
  store i32 %conv24, i32* %cylinders, align 4, !dbg !8937
  br label %if.end25, !dbg !8938

if.end25:                                         ; preds = %if.then20, %if.end11
  %34 = load i32, i32* %heads, align 4, !dbg !8939
  %35 = load i32*, i32** %geom.addr, align 8, !dbg !8940
  %arrayidx26 = getelementptr i32, i32* %35, i64 0, !dbg !8940
  store i32 %34, i32* %arrayidx26, align 4, !dbg !8941
  %36 = load i32, i32* %sectors, align 4, !dbg !8942
  %37 = load i32*, i32** %geom.addr, align 8, !dbg !8943
  %arrayidx27 = getelementptr i32, i32* %37, i64 1, !dbg !8943
  store i32 %36, i32* %arrayidx27, align 4, !dbg !8944
  %38 = load i32, i32* %cylinders, align 4, !dbg !8945
  %39 = load i32*, i32** %geom.addr, align 8, !dbg !8946
  %arrayidx28 = getelementptr i32, i32* %39, i64 2, !dbg !8946
  store i32 %38, i32* %arrayidx28, align 4, !dbg !8947
  br label %if.end29

if.end29:                                         ; preds = %if.end25, %if.end
  store i32 0, i32* %retval, align 4, !dbg !8948
  br label %return, !dbg !8948

return:                                           ; preds = %if.end29, %if.then10
  %40 = load i32, i32* %retval, align 4, !dbg !8949
  ret i32 %40, !dbg !8949
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !8950 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !8954, metadata !DIExpression()), !dbg !8955
  %call = call i64 @arch_local_save_flags() #11, !dbg !8956
  store i64 %call, i64* %f, align 8, !dbg !8957
  call void @arch_local_irq_disable() #11, !dbg !8958
  %0 = load i64, i64* %f, align 8, !dbg !8959
  ret i64 %0, !dbg !8960
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @megaraid_queue_lck(%struct.scsi_cmnd* %scmd, void (%struct.scsi_cmnd*)* %done) #0 !dbg !8961 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7407, metadata !DIExpression()), !dbg !8964
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7419, metadata !DIExpression()), !dbg !8968
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7423, metadata !DIExpression()), !dbg !8970
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7425, metadata !DIExpression()), !dbg !8971
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !7447, metadata !DIExpression()), !dbg !8972
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7453, metadata !DIExpression()), !dbg !8974
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6303, metadata !DIExpression()), !dbg !8975
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  %done.addr = alloca void (%struct.scsi_cmnd*)*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  %scb = alloca %struct.scb_t*, align 8
  %busy = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !8982, metadata !DIExpression()), !dbg !8983
  store void (%struct.scsi_cmnd*)* %done, void (%struct.scsi_cmnd*)** %done.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.scsi_cmnd*)** %done.addr, metadata !8984, metadata !DIExpression()), !dbg !8985
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !8986, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.declare(metadata %struct.scb_t** %scb, metadata !8988, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.declare(metadata i32* %busy, metadata !8990, metadata !DIExpression()), !dbg !8991
  store i32 0, i32* %busy, align 4, !dbg !8991
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8992, metadata !DIExpression()), !dbg !8993
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !8994
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !8995
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !8995
  %host = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 0, !dbg !8996
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !8996
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 51, !dbg !8997
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !8994
  %3 = bitcast i64* %arraydecay to %struct.adapter_t*, !dbg !8998
  store %struct.adapter_t* %3, %struct.adapter_t** %adapter, align 8, !dbg !8999
  %4 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %done.addr, align 8, !dbg !9000
  %5 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9001
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %5, i32 0, i32 21, !dbg !9002
  store void (%struct.scsi_cmnd*)* %4, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !9003
  br label %do.body, !dbg !9004

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9005

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9006, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9009, metadata !DIExpression()), !dbg !9008
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9008
  %conv = zext i1 %cmp to i32, !dbg !9008
  store i32 1, i32* %tmp, align 4, !dbg !9008
  %6 = load i32, i32* %tmp, align 4, !dbg !9008
  br label %do.body2, !dbg !9010

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9011

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9012

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9014, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9018, metadata !DIExpression()), !dbg !9017
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9017
  %conv8 = zext i1 %cmp7 to i32, !dbg !9017
  store i32 1, i32* %tmp9, align 4, !dbg !9017
  %7 = load i32, i32* %tmp9, align 4, !dbg !9017
  %call = call i64 @arch_local_irq_save() #11, !dbg !9019
  store i64 %call, i64* %flags, align 8, !dbg !9019
  br label %do.end, !dbg !9019

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9012

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9011

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9020, !srcloc !9021
  br label %do.body12, !dbg !9020

do.body12:                                        ; preds = %do.body11
  %8 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !9022
  %lock = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %8, i32 0, i32 34, !dbg !9022
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9023
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !9024
  %rlock.i = bitcast %union.anon.1* %10 to %struct.raw_spinlock*, !dbg !9024
  br label %do.end14, !dbg !9022

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9020

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9011

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9010

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9005

do.end18:                                         ; preds = %do.end17
  %11 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !9025
  %12 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd.addr, align 8, !dbg !9026
  %call19 = call %struct.scb_t* @mega_build_cmd(%struct.adapter_t* %11, %struct.scsi_cmnd* %12, i32* %busy) #11, !dbg !9027
  store %struct.scb_t* %call19, %struct.scb_t** %scb, align 8, !dbg !9028
  %13 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9029
  %tobool = icmp ne %struct.scb_t* %13, null, !dbg !9029
  br i1 %tobool, label %if.end, label %if.then, !dbg !9031

if.then:                                          ; preds = %do.end18
  br label %out, !dbg !9032

if.end:                                           ; preds = %do.end18
  %14 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9033
  %state = getelementptr inbounds %struct.scb_t, %struct.scb_t* %14, i32 0, i32 1, !dbg !9034
  %15 = load i32, i32* %state, align 4, !dbg !9035
  %or = or i32 %15, 2, !dbg !9035
  store i32 %or, i32* %state, align 4, !dbg !9035
  %16 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9036
  %list = getelementptr inbounds %struct.scb_t, %struct.scb_t* %16, i32 0, i32 2, !dbg !9037
  %17 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !9038
  %pending_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %17, i32 0, i32 11, !dbg !9039
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %pending_list) #11, !dbg !9040
  %18 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !9041
  %quiescent = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %18, i32 0, i32 33, !dbg !9042
  store %struct.atomic_t* %quiescent, %struct.atomic_t** %v.addr.i, align 8
  %19 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9043
  %20 = bitcast %struct.atomic_t* %19 to i8*, !dbg !9043
  store i8* %20, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %21 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9044
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !9045
  %conv.i.i = trunc i64 %22 to i32, !dbg !9045
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %21, i32 %conv.i.i) #13, !dbg !9046
  %23 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9047
  %24 = load i64, i64* %size.addr.i.i, align 8, !dbg !9047
  call void @kcsan_check_access(i8* %23, i64 %24, i32 4) #13, !dbg !9047
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9048
  store %struct.atomic_t* %25, %struct.atomic_t** %v.addr.i1.i, align 8
  %26 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9049
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %26, i32 0, i32 0, !dbg !9049
  %27 = load volatile i32, i32* %counter.i.i, align 4, !dbg !9049
  %cmp21 = icmp eq i32 %27, 0, !dbg !9050
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !9051

if.then23:                                        ; preds = %if.end
  %28 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !9052
  call void @mega_runpendq(%struct.adapter_t* %28) #11, !dbg !9053
  br label %if.end24, !dbg !9053

if.end24:                                         ; preds = %if.then23, %if.end
  store i32 0, i32* %busy, align 4, !dbg !9054
  br label %out, !dbg !9055

out:                                              ; preds = %if.end24, %if.then
  call void @llvm.dbg.label(metadata !9056), !dbg !9057
  %29 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !9058
  %lock25 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %29, i32 0, i32 34, !dbg !9059
  %30 = load i64, i64* %flags, align 8, !dbg !9060
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %30, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !7602, metadata !DIExpression()) #7, !dbg !9061
  call void @llvm.dbg.declare(metadata !372, metadata !7606, metadata !DIExpression()) #7, !dbg !9061
  store i32 1, i32* %tmp.i, align 4, !dbg !9061
  %31 = load i32, i32* %tmp.i, align 4, !dbg !9061
  call void @llvm.dbg.declare(metadata !372, metadata !7607, metadata !DIExpression()) #7, !dbg !9062
  call void @llvm.dbg.declare(metadata !372, metadata !7613, metadata !DIExpression()) #7, !dbg !9062
  store i32 1, i32* %tmp8.i, align 4, !dbg !9062
  %32 = load i32, i32* %tmp8.i, align 4, !dbg !9062
  %33 = load i64, i64* %flags.addr.i, align 8, !dbg !9063
  call void @arch_local_irq_restore(i64 %33) #13, !dbg !9063
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9064, !srcloc !7617
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !9065
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !9065
  %rlock.i27 = bitcast %union.anon.1* %35 to %struct.raw_spinlock*, !dbg !9065
  %36 = load i32, i32* %busy, align 4, !dbg !9066
  ret i32 %36, !dbg !9067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !9068 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !9069, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9072, metadata !DIExpression()), !dbg !9071
  %0 = load i64, i64* %__edi, align 8, !dbg !9071
  store i64 %0, i64* %__edi, align 8, !dbg !9071
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9073, metadata !DIExpression()), !dbg !9071
  %1 = load i64, i64* %__esi, align 8, !dbg !9071
  store i64 %1, i64* %__esi, align 8, !dbg !9071
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9074, metadata !DIExpression()), !dbg !9071
  %2 = load i64, i64* %__edx, align 8, !dbg !9071
  store i64 %2, i64* %__edx, align 8, !dbg !9071
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9075, metadata !DIExpression()), !dbg !9071
  %3 = load i64, i64* %__ecx, align 8, !dbg !9071
  store i64 %3, i64* %__ecx, align 8, !dbg !9071
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9076, metadata !DIExpression()), !dbg !9071
  %4 = load i64, i64* %__eax, align 8, !dbg !9071
  store i64 %4, i64* %__eax, align 8, !dbg !9071
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !9071
  %6 = call i64 @llvm.read_register.i64(metadata !6170), !dbg !9077
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !9077, !srcloc !9080
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9077
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9077
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9077
  call void @llvm.write_register.i64(metadata !6170, i64 %asmresult1), !dbg !9077
  %8 = load i64, i64* %__eax, align 8, !dbg !9077
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !9081, metadata !DIExpression()), !dbg !9083
  store i64 -1, i64* %__mask, align 8, !dbg !9083
  %9 = load i64, i64* %__mask, align 8, !dbg !9083
  store i64 %9, i64* %tmp, align 8, !dbg !9083
  %10 = load i64, i64* %tmp, align 8, !dbg !9083
  %and = and i64 %8, %10, !dbg !9077
  store i64 %and, i64* %__ret, align 8, !dbg !9077
  %11 = load i64, i64* %__ret, align 8, !dbg !9071
  store i64 %11, i64* %tmp2, align 8, !dbg !9084
  %12 = load i64, i64* %tmp2, align 8, !dbg !9071
  ret i64 %12, !dbg !9085
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !9086 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9087, metadata !DIExpression()), !dbg !9089
  %0 = load i64, i64* %__edi, align 8, !dbg !9089
  store i64 %0, i64* %__edi, align 8, !dbg !9089
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9090, metadata !DIExpression()), !dbg !9089
  %1 = load i64, i64* %__esi, align 8, !dbg !9089
  store i64 %1, i64* %__esi, align 8, !dbg !9089
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9091, metadata !DIExpression()), !dbg !9089
  %2 = load i64, i64* %__edx, align 8, !dbg !9089
  store i64 %2, i64* %__edx, align 8, !dbg !9089
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9092, metadata !DIExpression()), !dbg !9089
  %3 = load i64, i64* %__ecx, align 8, !dbg !9089
  store i64 %3, i64* %__ecx, align 8, !dbg !9089
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9093, metadata !DIExpression()), !dbg !9089
  %4 = load i64, i64* %__eax, align 8, !dbg !9089
  store i64 %4, i64* %__eax, align 8, !dbg !9089
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !9089
  %6 = call i64 @llvm.read_register.i64(metadata !6170), !dbg !9089
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !9089, !srcloc !9094
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9089
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9089
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9089
  call void @llvm.write_register.i64(metadata !6170, i64 %asmresult1), !dbg !9089
  ret void, !dbg !9095
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scb_t* @mega_build_cmd(%struct.adapter_t* %adapter, %struct.scsi_cmnd* %cmd, i32* %busy) #0 !dbg !9096 {
entry:
  %retval = alloca %struct.scb_t*, align 8
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %busy.addr = alloca i32*, align 8
  %pthru = alloca %struct.mega_passthru*, align 8
  %scb = alloca %struct.scb_t*, align 8
  %mbox = alloca %struct.mbox_t*, align 8
  %seg = alloca i32, align 4
  %islogical = alloca i8, align 1
  %max_ldrv_num = alloca i32, align 4
  %channel = alloca i32, align 4
  %target = alloca i32, align 4
  %ldrv_num = alloca i32, align 4
  %buf = alloca i8*, align 8
  %sg = alloca %struct.scatterlist*, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !9099, metadata !DIExpression()), !dbg !9100
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !9101, metadata !DIExpression()), !dbg !9102
  store i32* %busy, i32** %busy.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %busy.addr, metadata !9103, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.declare(metadata %struct.mega_passthru** %pthru, metadata !9105, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.declare(metadata %struct.scb_t** %scb, metadata !9107, metadata !DIExpression()), !dbg !9108
  call void @llvm.dbg.declare(metadata %struct.mbox_t** %mbox, metadata !9109, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.declare(metadata i32* %seg, metadata !9111, metadata !DIExpression()), !dbg !9112
  call void @llvm.dbg.declare(metadata i8* %islogical, metadata !9113, metadata !DIExpression()), !dbg !9114
  call void @llvm.dbg.declare(metadata i32* %max_ldrv_num, metadata !9115, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !9117, metadata !DIExpression()), !dbg !9118
  store i32 0, i32* %channel, align 4, !dbg !9118
  call void @llvm.dbg.declare(metadata i32* %target, metadata !9119, metadata !DIExpression()), !dbg !9120
  store i32 0, i32* %target, align 4, !dbg !9120
  call void @llvm.dbg.declare(metadata i32* %ldrv_num, metadata !9121, metadata !DIExpression()), !dbg !9122
  store i32 0, i32* %ldrv_num, align 4, !dbg !9122
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9123
  %logdrv_chan = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %0, i32 0, i32 35, !dbg !9124
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9125
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %1, i32 0, i32 1, !dbg !9126
  %2 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !9126
  %channel1 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %2, i32 0, i32 17, !dbg !9127
  %3 = load i32, i32* %channel1, align 4, !dbg !9127
  %idxprom = zext i32 %3 to i64, !dbg !9123
  %arrayidx = getelementptr [9 x i8], [9 x i8]* %logdrv_chan, i64 0, i64 %idxprom, !dbg !9123
  %4 = load i8, i8* %arrayidx, align 1, !dbg !9123
  store i8 %4, i8* %islogical, align 1, !dbg !9128
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9129
  %boot_pdrv_enabled = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %5, i32 0, i32 28, !dbg !9131
  %6 = load i32, i32* %boot_pdrv_enabled, align 8, !dbg !9131
  %tobool = icmp ne i32 %6, 0, !dbg !9129
  br i1 %tobool, label %if.then, label %if.else18, !dbg !9132

if.then:                                          ; preds = %entry
  %7 = load i8, i8* %islogical, align 1, !dbg !9133
  %tobool2 = icmp ne i8 %7, 0, !dbg !9133
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !9136

if.then3:                                         ; preds = %if.then
  %8 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9137
  %device4 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %8, i32 0, i32 1, !dbg !9139
  %9 = load %struct.scsi_device*, %struct.scsi_device** %device4, align 8, !dbg !9139
  %channel5 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %9, i32 0, i32 17, !dbg !9140
  %10 = load i32, i32* %channel5, align 4, !dbg !9140
  %11 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9141
  %product_info = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %11, i32 0, i32 16, !dbg !9142
  %nchannels = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info, i32 0, i32 6, !dbg !9143
  %12 = load i8, i8* %nchannels, align 1, !dbg !9143
  %conv = zext i8 %12 to i32, !dbg !9141
  %sub = sub i32 %10, %conv, !dbg !9144
  store i32 %sub, i32* %channel, align 4, !dbg !9145
  br label %if.end17, !dbg !9146

if.else:                                          ; preds = %if.then
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9147
  %device6 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %13, i32 0, i32 1, !dbg !9149
  %14 = load %struct.scsi_device*, %struct.scsi_device** %device6, align 8, !dbg !9149
  %channel7 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %14, i32 0, i32 17, !dbg !9150
  %15 = load i32, i32* %channel7, align 4, !dbg !9150
  store i32 %15, i32* %channel, align 4, !dbg !9151
  %16 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9152
  %device8 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %16, i32 0, i32 1, !dbg !9153
  %17 = load %struct.scsi_device*, %struct.scsi_device** %device8, align 8, !dbg !9153
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %17, i32 0, i32 16, !dbg !9154
  %18 = load i32, i32* %id, align 8, !dbg !9154
  store i32 %18, i32* %target, align 4, !dbg !9155
  %19 = load i32, i32* %target, align 4, !dbg !9156
  %cmp = icmp eq i32 %19, 0, !dbg !9158
  br i1 %cmp, label %if.then10, label %if.else11, !dbg !9159

if.then10:                                        ; preds = %if.else
  %20 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9160
  %boot_pdrv_tgt = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %20, i32 0, i32 30, !dbg !9162
  %21 = load i32, i32* %boot_pdrv_tgt, align 8, !dbg !9162
  store i32 %21, i32* %target, align 4, !dbg !9163
  br label %if.end16, !dbg !9164

if.else11:                                        ; preds = %if.else
  %22 = load i32, i32* %target, align 4, !dbg !9165
  %23 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9167
  %boot_pdrv_tgt12 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %23, i32 0, i32 30, !dbg !9168
  %24 = load i32, i32* %boot_pdrv_tgt12, align 8, !dbg !9168
  %cmp13 = icmp eq i32 %22, %24, !dbg !9169
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !9170

if.then15:                                        ; preds = %if.else11
  store i32 0, i32* %target, align 4, !dbg !9171
  br label %if.end, !dbg !9173

if.end:                                           ; preds = %if.then15, %if.else11
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then10
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then3
  br label %if.end30, !dbg !9174

if.else18:                                        ; preds = %entry
  %25 = load i8, i8* %islogical, align 1, !dbg !9175
  %tobool19 = icmp ne i8 %25, 0, !dbg !9175
  br i1 %tobool19, label %if.then20, label %if.else23, !dbg !9178

if.then20:                                        ; preds = %if.else18
  %26 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9179
  %device21 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %26, i32 0, i32 1, !dbg !9181
  %27 = load %struct.scsi_device*, %struct.scsi_device** %device21, align 8, !dbg !9181
  %channel22 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %27, i32 0, i32 17, !dbg !9182
  %28 = load i32, i32* %channel22, align 4, !dbg !9182
  store i32 %28, i32* %channel, align 4, !dbg !9183
  br label %if.end29, !dbg !9184

if.else23:                                        ; preds = %if.else18
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9185
  %device24 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %29, i32 0, i32 1, !dbg !9187
  %30 = load %struct.scsi_device*, %struct.scsi_device** %device24, align 8, !dbg !9187
  %channel25 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %30, i32 0, i32 17, !dbg !9188
  %31 = load i32, i32* %channel25, align 4, !dbg !9188
  %sub26 = sub i32 %31, 4, !dbg !9189
  store i32 %sub26, i32* %channel, align 4, !dbg !9190
  %32 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9191
  %device27 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %32, i32 0, i32 1, !dbg !9192
  %33 = load %struct.scsi_device*, %struct.scsi_device** %device27, align 8, !dbg !9192
  %id28 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %33, i32 0, i32 16, !dbg !9193
  %34 = load i32, i32* %id28, align 8, !dbg !9193
  store i32 %34, i32* %target, align 4, !dbg !9194
  br label %if.end29

if.end29:                                         ; preds = %if.else23, %if.then20
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end17
  %35 = load i8, i8* %islogical, align 1, !dbg !9195
  %tobool31 = icmp ne i8 %35, 0, !dbg !9195
  br i1 %tobool31, label %if.then32, label %if.else48, !dbg !9197

if.then32:                                        ; preds = %if.end30
  %36 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9198
  %device33 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %36, i32 0, i32 1, !dbg !9201
  %37 = load %struct.scsi_device*, %struct.scsi_device** %device33, align 8, !dbg !9201
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %37, i32 0, i32 18, !dbg !9202
  %38 = load i64, i64* %lun, align 8, !dbg !9202
  %tobool34 = icmp ne i64 %38, 0, !dbg !9198
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !9203

if.then35:                                        ; preds = %if.then32
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9204
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %39, i32 0, i32 24, !dbg !9206
  store i32 262144, i32* %result, align 8, !dbg !9207
  %40 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9208
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %40, i32 0, i32 21, !dbg !9209
  %41 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !9209
  %42 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9210
  call void %41(%struct.scsi_cmnd* %42) #11, !dbg !9208
  store %struct.scb_t* null, %struct.scb_t** %retval, align 8, !dbg !9211
  br label %return, !dbg !9211

if.end36:                                         ; preds = %if.then32
  %43 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9212
  %44 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9213
  %45 = load i32, i32* %channel, align 4, !dbg !9214
  %call = call i32 @mega_get_ldrv_num(%struct.adapter_t* %43, %struct.scsi_cmnd* %44, i32 %45) #11, !dbg !9215
  store i32 %call, i32* %ldrv_num, align 4, !dbg !9216
  %46 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9217
  %flag = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %46, i32 0, i32 1, !dbg !9218
  %47 = load i32, i32* %flag, align 4, !dbg !9218
  %conv37 = zext i32 %47 to i64, !dbg !9217
  %and = and i64 %conv37, 134217728, !dbg !9219
  %tobool38 = icmp ne i64 %and, 0, !dbg !9220
  %48 = zext i1 %tobool38 to i64, !dbg !9220
  %cond = select i1 %tobool38, i32 40, i32 8, !dbg !9220
  store i32 %cond, i32* %max_ldrv_num, align 4, !dbg !9221
  %49 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9222
  %read_ldidmap = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %49, i32 0, i32 32, !dbg !9224
  %50 = load i32, i32* %read_ldidmap, align 8, !dbg !9224
  %tobool39 = icmp ne i32 %50, 0, !dbg !9222
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !9225

if.then40:                                        ; preds = %if.end36
  %51 = load i32, i32* %max_ldrv_num, align 4, !dbg !9226
  %add = add i32 %51, 128, !dbg !9226
  store i32 %add, i32* %max_ldrv_num, align 4, !dbg !9226
  br label %if.end41, !dbg !9227

if.end41:                                         ; preds = %if.then40, %if.end36
  %52 = load i32, i32* %ldrv_num, align 4, !dbg !9228
  %53 = load i32, i32* %max_ldrv_num, align 4, !dbg !9230
  %cmp42 = icmp sgt i32 %52, %53, !dbg !9231
  br i1 %cmp42, label %if.then44, label %if.end47, !dbg !9232

if.then44:                                        ; preds = %if.end41
  %54 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9233
  %result45 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %54, i32 0, i32 24, !dbg !9235
  store i32 262144, i32* %result45, align 8, !dbg !9236
  %55 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9237
  %scsi_done46 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %55, i32 0, i32 21, !dbg !9238
  %56 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done46, align 8, !dbg !9238
  %57 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9239
  call void %56(%struct.scsi_cmnd* %57) #11, !dbg !9237
  store %struct.scb_t* null, %struct.scb_t** %retval, align 8, !dbg !9240
  br label %return, !dbg !9240

if.end47:                                         ; preds = %if.end41
  br label %if.end57, !dbg !9241

if.else48:                                        ; preds = %if.end30
  %58 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9242
  %device49 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %58, i32 0, i32 1, !dbg !9245
  %59 = load %struct.scsi_device*, %struct.scsi_device** %device49, align 8, !dbg !9245
  %lun50 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %59, i32 0, i32 18, !dbg !9246
  %60 = load i64, i64* %lun50, align 8, !dbg !9246
  %cmp51 = icmp ugt i64 %60, 7, !dbg !9247
  br i1 %cmp51, label %if.then53, label %if.end56, !dbg !9248

if.then53:                                        ; preds = %if.else48
  %61 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9249
  %result54 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %61, i32 0, i32 24, !dbg !9251
  store i32 262144, i32* %result54, align 8, !dbg !9252
  %62 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9253
  %scsi_done55 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %62, i32 0, i32 21, !dbg !9254
  %63 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done55, align 8, !dbg !9254
  %64 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9255
  call void %63(%struct.scsi_cmnd* %64) #11, !dbg !9253
  store %struct.scb_t* null, %struct.scb_t** %retval, align 8, !dbg !9256
  br label %return, !dbg !9256

if.end56:                                         ; preds = %if.else48
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.end47
  %65 = load i8, i8* %islogical, align 1, !dbg !9257
  %tobool58 = icmp ne i8 %65, 0, !dbg !9257
  br i1 %tobool58, label %if.then59, label %if.else325, !dbg !9259

if.then59:                                        ; preds = %if.end57
  %66 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9260
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %66, i32 0, i32 14, !dbg !9262
  %67 = load i8*, i8** %cmnd, align 8, !dbg !9262
  %arrayidx60 = getelementptr i8, i8* %67, i64 0, !dbg !9260
  %68 = load i8, i8* %arrayidx60, align 1, !dbg !9260
  %conv61 = zext i8 %68 to i32, !dbg !9260
  switch i32 %conv61, label %sw.default [
    i32 0, label %sw.bb
    i32 26, label %sw.bb77
    i32 37, label %sw.bb91
    i32 18, label %sw.bb91
    i32 8, label %sw.bb139
    i32 10, label %sw.bb139
    i32 40, label %sw.bb139
    i32 42, label %sw.bb139
    i32 168, label %sw.bb139
    i32 170, label %sw.bb139
    i32 22, label %sw.bb298
    i32 23, label %sw.bb298
  ], !dbg !9263

sw.bb:                                            ; preds = %if.then59
  %69 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9264
  %has_cluster = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %69, i32 0, i32 42, !dbg !9267
  %70 = load i32, i32* %has_cluster, align 8, !dbg !9267
  %tobool62 = icmp ne i32 %70, 0, !dbg !9264
  br i1 %tobool62, label %if.end66, label %if.then63, !dbg !9268

if.then63:                                        ; preds = %sw.bb
  %71 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9269
  %result64 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %71, i32 0, i32 24, !dbg !9271
  store i32 0, i32* %result64, align 8, !dbg !9272
  %72 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9273
  %scsi_done65 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %72, i32 0, i32 21, !dbg !9274
  %73 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done65, align 8, !dbg !9274
  %74 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9275
  call void %73(%struct.scsi_cmnd* %74) #11, !dbg !9273
  store %struct.scb_t* null, %struct.scb_t** %retval, align 8, !dbg !9276
  br label %return, !dbg !9276

if.end66:                                         ; preds = %sw.bb
  %75 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9277
  %76 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9279
  %call67 = call %struct.scb_t* @mega_allocate_scb(%struct.adapter_t* %75, %struct.scsi_cmnd* %76) #11, !dbg !9280
  store %struct.scb_t* %call67, %struct.scb_t** %scb, align 8, !dbg !9281
  %tobool68 = icmp ne %struct.scb_t* %call67, null, !dbg !9281
  br i1 %tobool68, label %if.end70, label %if.then69, !dbg !9282

if.then69:                                        ; preds = %if.end66
  %77 = load i32*, i32** %busy.addr, align 8, !dbg !9283
  store i32 1, i32* %77, align 4, !dbg !9285
  store %struct.scb_t* null, %struct.scb_t** %retval, align 8, !dbg !9286
  br label %return, !dbg !9286

if.end70:                                         ; preds = %if.end66
  %78 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9287
  %raw_mbox = getelementptr inbounds %struct.scb_t, %struct.scb_t* %78, i32 0, i32 3, !dbg !9288
  %arrayidx71 = getelementptr [66 x i8], [66 x i8]* %raw_mbox, i64 0, i64 0, !dbg !9287
  store i8 110, i8* %arrayidx71, align 8, !dbg !9289
  %79 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9290
  %raw_mbox72 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %79, i32 0, i32 3, !dbg !9291
  %arrayidx73 = getelementptr [66 x i8], [66 x i8]* %raw_mbox72, i64 0, i64 2, !dbg !9290
  store i8 4, i8* %arrayidx73, align 2, !dbg !9292
  %80 = load i32, i32* %ldrv_num, align 4, !dbg !9293
  %conv74 = trunc i32 %80 to i8, !dbg !9293
  %81 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9294
  %raw_mbox75 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %81, i32 0, i32 3, !dbg !9295
  %arrayidx76 = getelementptr [66 x i8], [66 x i8]* %raw_mbox75, i64 0, i64 3, !dbg !9294
  store i8 %conv74, i8* %arrayidx76, align 1, !dbg !9296
  %82 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9297
  %dma_direction = getelementptr inbounds %struct.scb_t, %struct.scb_t* %82, i32 0, i32 5, !dbg !9298
  store i32 3, i32* %dma_direction, align 8, !dbg !9299
  %83 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9300
  store %struct.scb_t* %83, %struct.scb_t** %retval, align 8, !dbg !9301
  br label %return, !dbg !9301

sw.bb77:                                          ; preds = %if.then59
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9302, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !9305, metadata !DIExpression()), !dbg !9306
  %84 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9307
  %call78 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %84) #11, !dbg !9308
  store %struct.scatterlist* %call78, %struct.scatterlist** %sg, align 8, !dbg !9309
  %85 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9310
  %call79 = call %struct.page* @sg_page(%struct.scatterlist* %85) #11, !dbg !9311
  %call80 = call i8* @kmap_atomic(%struct.page* %call79) #11, !dbg !9312
  %86 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9313
  %offset = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %86, i32 0, i32 1, !dbg !9314
  %87 = load i32, i32* %offset, align 8, !dbg !9314
  %idx.ext = zext i32 %87 to i64, !dbg !9315
  %add.ptr = getelementptr i8, i8* %call80, i64 %idx.ext, !dbg !9315
  store i8* %add.ptr, i8** %buf, align 8, !dbg !9316
  %88 = load i8*, i8** %buf, align 8, !dbg !9317
  %89 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9318
  %cmnd81 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %89, i32 0, i32 14, !dbg !9319
  %90 = load i8*, i8** %cmnd81, align 8, !dbg !9319
  %arrayidx82 = getelementptr i8, i8* %90, i64 4, !dbg !9318
  %91 = load i8, i8* %arrayidx82, align 1, !dbg !9318
  %conv83 = zext i8 %91 to i64, !dbg !9318
  call void @llvm.memset.p0i8.i64(i8* align 1 %88, i8 0, i64 %conv83, i1 false), !dbg !9320
  br label %do.body, !dbg !9321

do.body:                                          ; preds = %sw.bb77
  br label %do.body84, !dbg !9322

do.body84:                                        ; preds = %do.body
  br label %do.end, !dbg !9324

do.end:                                           ; preds = %do.body84
  %92 = load i8*, i8** %buf, align 8, !dbg !9322
  %93 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9322
  %offset85 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %93, i32 0, i32 1, !dbg !9322
  %94 = load i32, i32* %offset85, align 8, !dbg !9322
  %idx.ext86 = zext i32 %94 to i64, !dbg !9322
  %idx.neg = sub i64 0, %idx.ext86, !dbg !9322
  %add.ptr87 = getelementptr i8, i8* %92, i64 %idx.neg, !dbg !9322
  call void @kunmap_atomic_high(i8* %add.ptr87) #11, !dbg !9322
  call void @pagefault_enable() #11, !dbg !9322
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9322, !srcloc !9326
  br label %do.end88, !dbg !9322

do.end88:                                         ; preds = %do.end
  %95 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9327
  %result89 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %95, i32 0, i32 24, !dbg !9328
  store i32 0, i32* %result89, align 8, !dbg !9329
  %96 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9330
  %scsi_done90 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %96, i32 0, i32 21, !dbg !9331
  %97 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done90, align 8, !dbg !9331
  %98 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9332
  call void %97(%struct.scsi_cmnd* %98) #11, !dbg !9330
  store %struct.scb_t* null, %struct.scb_t** %retval, align 8, !dbg !9333
  br label %return, !dbg !9333

sw.bb91:                                          ; preds = %if.then59, %if.then59
  %99 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9334
  %flag92 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %99, i32 0, i32 1, !dbg !9336
  %100 = load i32, i32* %flag92, align 4, !dbg !9336
  %conv93 = zext i32 %100 to i64, !dbg !9334
  %101 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9337
  %device94 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %101, i32 0, i32 1, !dbg !9338
  %102 = load %struct.scsi_device*, %struct.scsi_device** %device94, align 8, !dbg !9338
  %channel95 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %102, i32 0, i32 17, !dbg !9339
  %103 = load i32, i32* %channel95, align 4, !dbg !9339
  %sh_prom = zext i32 %103 to i64, !dbg !9340
  %shl = shl i64 1, %sh_prom, !dbg !9340
  %and96 = and i64 %conv93, %shl, !dbg !9341
  %tobool97 = icmp ne i64 %and96, 0, !dbg !9341
  br i1 %tobool97, label %if.end109, label %if.then98, !dbg !9342

if.then98:                                        ; preds = %sw.bb91
  %104 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9343
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %104, i32 0, i32 9, !dbg !9343
  %105 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9343
  %dev99 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %105, i32 0, i32 41, !dbg !9343
  %106 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9343
  %host = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %106, i32 0, i32 13, !dbg !9343
  %107 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !9343
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %107, i32 0, i32 16, !dbg !9343
  %108 = load i32, i32* %host_no, align 4, !dbg !9343
  %109 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9343
  %device100 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %109, i32 0, i32 1, !dbg !9343
  %110 = load %struct.scsi_device*, %struct.scsi_device** %device100, align 8, !dbg !9343
  %channel101 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %110, i32 0, i32 17, !dbg !9343
  %111 = load i32, i32* %channel101, align 4, !dbg !9343
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev99, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.23, i64 0, i64 0), i32 %108, i32 %111) #12, !dbg !9343
  %112 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9345
  %device102 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %112, i32 0, i32 1, !dbg !9346
  %113 = load %struct.scsi_device*, %struct.scsi_device** %device102, align 8, !dbg !9346
  %channel103 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %113, i32 0, i32 17, !dbg !9347
  %114 = load i32, i32* %channel103, align 4, !dbg !9347
  %sh_prom104 = zext i32 %114 to i64, !dbg !9348
  %shl105 = shl i64 1, %sh_prom104, !dbg !9348
  %115 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9349
  %flag106 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %115, i32 0, i32 1, !dbg !9350
  %116 = load i32, i32* %flag106, align 4, !dbg !9351
  %conv107 = zext i32 %116 to i64, !dbg !9351
  %or = or i64 %conv107, %shl105, !dbg !9351
  %conv108 = trunc i64 %or to i32, !dbg !9351
  store i32 %conv108, i32* %flag106, align 4, !dbg !9351
  br label %if.end109, !dbg !9352

if.end109:                                        ; preds = %if.then98, %sw.bb91
  %117 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9353
  %118 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9355
  %call110 = call %struct.scb_t* @mega_allocate_scb(%struct.adapter_t* %117, %struct.scsi_cmnd* %118) #11, !dbg !9356
  store %struct.scb_t* %call110, %struct.scb_t** %scb, align 8, !dbg !9357
  %tobool111 = icmp ne %struct.scb_t* %call110, null, !dbg !9357
  br i1 %tobool111, label %if.end113, label %if.then112, !dbg !9358

if.then112:                                       ; preds = %if.end109
  %119 = load i32*, i32** %busy.addr, align 8, !dbg !9359
  store i32 1, i32* %119, align 4, !dbg !9361
  store %struct.scb_t* null, %struct.scb_t** %retval, align 8, !dbg !9362
  br label %return, !dbg !9362

if.end113:                                        ; preds = %if.end109
  %120 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9363
  %pthru114 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %120, i32 0, i32 12, !dbg !9364
  %121 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru114, align 8, !dbg !9364
  store %struct.mega_passthru* %121, %struct.mega_passthru** %pthru, align 8, !dbg !9365
  %122 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9366
  %raw_mbox115 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %122, i32 0, i32 3, !dbg !9367
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %raw_mbox115, i64 0, i64 0, !dbg !9366
  %123 = bitcast i8* %arraydecay to %struct.mbox_t*, !dbg !9368
  store %struct.mbox_t* %123, %struct.mbox_t** %mbox, align 8, !dbg !9369
  %124 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9370
  %125 = bitcast %struct.mbox_t* %124 to i8*, !dbg !9371
  call void @llvm.memset.p0i8.i64(i8* align 1 %125, i8 0, i64 66, i1 false), !dbg !9371
  %126 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !9372
  %127 = bitcast %struct.mega_passthru* %126 to i8*, !dbg !9373
  call void @llvm.memset.p0i8.i64(i8* align 1 %127, i8 0, i64 60, i1 false), !dbg !9373
  %128 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !9374
  %129 = bitcast %struct.mega_passthru* %128 to i8*, !dbg !9375
  %bf.load = load i8, i8* %129, align 1, !dbg !9376
  %bf.clear = and i8 %bf.load, -8, !dbg !9376
  store i8 %bf.clear, i8* %129, align 1, !dbg !9376
  %130 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !9377
  %131 = bitcast %struct.mega_passthru* %130 to i8*, !dbg !9378
  %bf.load116 = load i8, i8* %131, align 1, !dbg !9379
  %bf.clear117 = and i8 %bf.load116, -9, !dbg !9379
  %bf.set = or i8 %bf.clear117, 8, !dbg !9379
  store i8 %bf.set, i8* %131, align 1, !dbg !9379
  %132 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !9380
  %reqsenselen = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %132, i32 0, i32 8, !dbg !9381
  store i8 14, i8* %reqsenselen, align 1, !dbg !9382
  %133 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !9383
  %134 = bitcast %struct.mega_passthru* %133 to i8*, !dbg !9384
  %bf.load118 = load i8, i8* %134, align 1, !dbg !9385
  %bf.clear119 = and i8 %bf.load118, 127, !dbg !9385
  %bf.set120 = or i8 %bf.clear119, -128, !dbg !9385
  store i8 %bf.set120, i8* %134, align 1, !dbg !9385
  %135 = load i32, i32* %ldrv_num, align 4, !dbg !9386
  %conv121 = trunc i32 %135 to i8, !dbg !9386
  %136 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !9387
  %logdrv = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %136, i32 0, i32 1, !dbg !9388
  store i8 %conv121, i8* %logdrv, align 1, !dbg !9389
  %137 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9390
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %137, i32 0, i32 12, !dbg !9391
  %138 = load i16, i16* %cmd_len, align 4, !dbg !9391
  %conv122 = trunc i16 %138 to i8, !dbg !9390
  %139 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !9392
  %cdblen = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %139, i32 0, i32 7, !dbg !9393
  store i8 %conv122, i8* %cdblen, align 1, !dbg !9394
  %140 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !9395
  %cdb = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %140, i32 0, i32 6, !dbg !9396
  %arraydecay123 = getelementptr inbounds [10 x i8], [10 x i8]* %cdb, i64 0, i64 0, !dbg !9397
  %141 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9398
  %cmnd124 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %141, i32 0, i32 14, !dbg !9399
  %142 = load i8*, i8** %cmnd124, align 8, !dbg !9399
  %143 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9400
  %cmd_len125 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %143, i32 0, i32 12, !dbg !9401
  %144 = load i16, i16* %cmd_len125, align 4, !dbg !9401
  %conv126 = zext i16 %144 to i64, !dbg !9400
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay123, i8* align 1 %142, i64 %conv126, i1 false), !dbg !9397
  %145 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9402
  %has_64bit_addr = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %145, i32 0, i32 24, !dbg !9404
  %146 = load i32, i32* %has_64bit_addr, align 8, !dbg !9404
  %tobool127 = icmp ne i32 %146, 0, !dbg !9402
  br i1 %tobool127, label %if.then128, label %if.else130, !dbg !9405

if.then128:                                       ; preds = %if.end113
  %147 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9406
  %m_out = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %147, i32 0, i32 0, !dbg !9408
  %cmd129 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out, i32 0, i32 0, !dbg !9409
  store i8 -61, i8* %cmd129, align 1, !dbg !9410
  br label %if.end133, !dbg !9411

if.else130:                                       ; preds = %if.end113
  %148 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9412
  %m_out131 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %148, i32 0, i32 0, !dbg !9414
  %cmd132 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out131, i32 0, i32 0, !dbg !9415
  store i8 3, i8* %cmd132, align 1, !dbg !9416
  br label %if.end133

if.end133:                                        ; preds = %if.else130, %if.then128
  %149 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9417
  %dma_direction134 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %149, i32 0, i32 5, !dbg !9418
  store i32 2, i32* %dma_direction134, align 8, !dbg !9419
  %150 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9420
  %151 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9421
  %152 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !9422
  %dataxferaddr = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %152, i32 0, i32 12, !dbg !9423
  %153 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !9424
  %dataxferlen = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %153, i32 0, i32 13, !dbg !9425
  %call135 = call i32 @mega_build_sglist(%struct.adapter_t* %150, %struct.scb_t* %151, i32* %dataxferaddr, i32* %dataxferlen) #11, !dbg !9426
  %conv136 = trunc i32 %call135 to i8, !dbg !9426
  %154 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !9427
  %numsgelements = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %154, i32 0, i32 10, !dbg !9428
  store i8 %conv136, i8* %numsgelements, align 1, !dbg !9429
  %155 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9430
  %pthru_dma_addr = getelementptr inbounds %struct.scb_t, %struct.scb_t* %155, i32 0, i32 13, !dbg !9431
  %156 = load i64, i64* %pthru_dma_addr, align 8, !dbg !9431
  %conv137 = trunc i64 %156 to i32, !dbg !9430
  %157 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9432
  %m_out138 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %157, i32 0, i32 0, !dbg !9433
  %xferaddr = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out138, i32 0, i32 4, !dbg !9434
  store i32 %conv137, i32* %xferaddr, align 1, !dbg !9435
  %158 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9436
  store %struct.scb_t* %158, %struct.scb_t** %retval, align 8, !dbg !9437
  br label %return, !dbg !9437

sw.bb139:                                         ; preds = %if.then59, %if.then59, %if.then59, %if.then59, %if.then59, %if.then59
  %159 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9438
  %160 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9440
  %call140 = call %struct.scb_t* @mega_allocate_scb(%struct.adapter_t* %159, %struct.scsi_cmnd* %160) #11, !dbg !9441
  store %struct.scb_t* %call140, %struct.scb_t** %scb, align 8, !dbg !9442
  %tobool141 = icmp ne %struct.scb_t* %call140, null, !dbg !9442
  br i1 %tobool141, label %if.end143, label %if.then142, !dbg !9443

if.then142:                                       ; preds = %sw.bb139
  %161 = load i32*, i32** %busy.addr, align 8, !dbg !9444
  store i32 1, i32* %161, align 4, !dbg !9446
  store %struct.scb_t* null, %struct.scb_t** %retval, align 8, !dbg !9447
  br label %return, !dbg !9447

if.end143:                                        ; preds = %sw.bb139
  %162 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9448
  %raw_mbox144 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %162, i32 0, i32 3, !dbg !9449
  %arraydecay145 = getelementptr inbounds [66 x i8], [66 x i8]* %raw_mbox144, i64 0, i64 0, !dbg !9448
  %163 = bitcast i8* %arraydecay145 to %struct.mbox_t*, !dbg !9450
  store %struct.mbox_t* %163, %struct.mbox_t** %mbox, align 8, !dbg !9451
  %164 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9452
  %165 = bitcast %struct.mbox_t* %164 to i8*, !dbg !9453
  call void @llvm.memset.p0i8.i64(i8* align 1 %165, i8 0, i64 66, i1 false), !dbg !9453
  %166 = load i32, i32* %ldrv_num, align 4, !dbg !9454
  %conv146 = trunc i32 %166 to i8, !dbg !9454
  %167 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9455
  %m_out147 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %167, i32 0, i32 0, !dbg !9456
  %logdrv148 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out147, i32 0, i32 5, !dbg !9457
  store i8 %conv146, i8* %logdrv148, align 1, !dbg !9458
  %168 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9459
  %has_64bit_addr149 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %168, i32 0, i32 24, !dbg !9461
  %169 = load i32, i32* %has_64bit_addr149, align 8, !dbg !9461
  %tobool150 = icmp ne i32 %169, 0, !dbg !9459
  br i1 %tobool150, label %if.then151, label %if.else160, !dbg !9462

if.then151:                                       ; preds = %if.end143
  %170 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9463
  %cmnd152 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %170, i32 0, i32 14, !dbg !9465
  %171 = load i8*, i8** %cmnd152, align 8, !dbg !9465
  %172 = load i8, i8* %171, align 1, !dbg !9466
  %conv153 = zext i8 %172 to i32, !dbg !9466
  %and154 = and i32 %conv153, 2, !dbg !9467
  %tobool155 = icmp ne i32 %and154, 0, !dbg !9468
  %173 = zext i1 %tobool155 to i64, !dbg !9468
  %cond156 = select i1 %tobool155, i32 168, i32 167, !dbg !9468
  %conv157 = trunc i32 %cond156 to i8, !dbg !9468
  %174 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9469
  %m_out158 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %174, i32 0, i32 0, !dbg !9470
  %cmd159 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out158, i32 0, i32 0, !dbg !9471
  store i8 %conv157, i8* %cmd159, align 1, !dbg !9472
  br label %if.end169, !dbg !9473

if.else160:                                       ; preds = %if.end143
  %175 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9474
  %cmnd161 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %175, i32 0, i32 14, !dbg !9476
  %176 = load i8*, i8** %cmnd161, align 8, !dbg !9476
  %177 = load i8, i8* %176, align 1, !dbg !9477
  %conv162 = zext i8 %177 to i32, !dbg !9477
  %and163 = and i32 %conv162, 2, !dbg !9478
  %tobool164 = icmp ne i32 %and163, 0, !dbg !9479
  %178 = zext i1 %tobool164 to i64, !dbg !9479
  %cond165 = select i1 %tobool164, i32 2, i32 1, !dbg !9479
  %conv166 = trunc i32 %cond165 to i8, !dbg !9479
  %179 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9480
  %m_out167 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %179, i32 0, i32 0, !dbg !9481
  %cmd168 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out167, i32 0, i32 0, !dbg !9482
  store i8 %conv166, i8* %cmd168, align 1, !dbg !9483
  br label %if.end169

if.end169:                                        ; preds = %if.else160, %if.then151
  %180 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9484
  %cmd_len170 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %180, i32 0, i32 12, !dbg !9486
  %181 = load i16, i16* %cmd_len170, align 4, !dbg !9486
  %conv171 = zext i16 %181 to i32, !dbg !9484
  %cmp172 = icmp eq i32 %conv171, 6, !dbg !9487
  br i1 %cmp172, label %if.then174, label %if.end197, !dbg !9488

if.then174:                                       ; preds = %if.end169
  %182 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9489
  %cmnd175 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %182, i32 0, i32 14, !dbg !9491
  %183 = load i8*, i8** %cmnd175, align 8, !dbg !9491
  %arrayidx176 = getelementptr i8, i8* %183, i64 4, !dbg !9489
  %184 = load i8, i8* %arrayidx176, align 1, !dbg !9489
  %conv177 = zext i8 %184 to i32, !dbg !9492
  %conv178 = trunc i32 %conv177 to i16, !dbg !9492
  %185 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9493
  %m_out179 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %185, i32 0, i32 0, !dbg !9494
  %numsectors = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out179, i32 0, i32 2, !dbg !9495
  store i16 %conv178, i16* %numsectors, align 1, !dbg !9496
  %186 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9497
  %cmnd180 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %186, i32 0, i32 14, !dbg !9498
  %187 = load i8*, i8** %cmnd180, align 8, !dbg !9498
  %arrayidx181 = getelementptr i8, i8* %187, i64 1, !dbg !9497
  %188 = load i8, i8* %arrayidx181, align 1, !dbg !9497
  %conv182 = zext i8 %188 to i32, !dbg !9499
  %shl183 = shl i32 %conv182, 16, !dbg !9500
  %189 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9501
  %cmnd184 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %189, i32 0, i32 14, !dbg !9502
  %190 = load i8*, i8** %cmnd184, align 8, !dbg !9502
  %arrayidx185 = getelementptr i8, i8* %190, i64 2, !dbg !9501
  %191 = load i8, i8* %arrayidx185, align 1, !dbg !9501
  %conv186 = zext i8 %191 to i32, !dbg !9503
  %shl187 = shl i32 %conv186, 8, !dbg !9504
  %or188 = or i32 %shl183, %shl187, !dbg !9505
  %192 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9506
  %cmnd189 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %192, i32 0, i32 14, !dbg !9507
  %193 = load i8*, i8** %cmnd189, align 8, !dbg !9507
  %arrayidx190 = getelementptr i8, i8* %193, i64 3, !dbg !9506
  %194 = load i8, i8* %arrayidx190, align 1, !dbg !9506
  %conv191 = zext i8 %194 to i32, !dbg !9508
  %or192 = or i32 %or188, %conv191, !dbg !9509
  %195 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9510
  %m_out193 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %195, i32 0, i32 0, !dbg !9511
  %lba = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out193, i32 0, i32 3, !dbg !9512
  store i32 %or192, i32* %lba, align 1, !dbg !9513
  %196 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9514
  %m_out194 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %196, i32 0, i32 0, !dbg !9515
  %lba195 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out194, i32 0, i32 3, !dbg !9516
  %197 = load i32, i32* %lba195, align 1, !dbg !9517
  %and196 = and i32 %197, 2097151, !dbg !9517
  store i32 %and196, i32* %lba195, align 1, !dbg !9517
  br label %if.end197, !dbg !9518

if.end197:                                        ; preds = %if.then174, %if.end169
  %198 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9519
  %cmd_len198 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %198, i32 0, i32 12, !dbg !9521
  %199 = load i16, i16* %cmd_len198, align 4, !dbg !9521
  %conv199 = zext i16 %199 to i32, !dbg !9519
  %cmp200 = icmp eq i32 %conv199, 10, !dbg !9522
  br i1 %cmp200, label %if.then202, label %if.end234, !dbg !9523

if.then202:                                       ; preds = %if.end197
  %200 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9524
  %cmnd203 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %200, i32 0, i32 14, !dbg !9526
  %201 = load i8*, i8** %cmnd203, align 8, !dbg !9526
  %arrayidx204 = getelementptr i8, i8* %201, i64 8, !dbg !9524
  %202 = load i8, i8* %arrayidx204, align 1, !dbg !9524
  %conv205 = zext i8 %202 to i32, !dbg !9527
  %203 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9528
  %cmnd206 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %203, i32 0, i32 14, !dbg !9529
  %204 = load i8*, i8** %cmnd206, align 8, !dbg !9529
  %arrayidx207 = getelementptr i8, i8* %204, i64 7, !dbg !9528
  %205 = load i8, i8* %arrayidx207, align 1, !dbg !9528
  %conv208 = zext i8 %205 to i32, !dbg !9530
  %shl209 = shl i32 %conv208, 8, !dbg !9531
  %or210 = or i32 %conv205, %shl209, !dbg !9532
  %conv211 = trunc i32 %or210 to i16, !dbg !9527
  %206 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9533
  %m_out212 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %206, i32 0, i32 0, !dbg !9534
  %numsectors213 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out212, i32 0, i32 2, !dbg !9535
  store i16 %conv211, i16* %numsectors213, align 1, !dbg !9536
  %207 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9537
  %cmnd214 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %207, i32 0, i32 14, !dbg !9538
  %208 = load i8*, i8** %cmnd214, align 8, !dbg !9538
  %arrayidx215 = getelementptr i8, i8* %208, i64 2, !dbg !9537
  %209 = load i8, i8* %arrayidx215, align 1, !dbg !9537
  %conv216 = zext i8 %209 to i32, !dbg !9539
  %shl217 = shl i32 %conv216, 24, !dbg !9540
  %210 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9541
  %cmnd218 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %210, i32 0, i32 14, !dbg !9542
  %211 = load i8*, i8** %cmnd218, align 8, !dbg !9542
  %arrayidx219 = getelementptr i8, i8* %211, i64 3, !dbg !9541
  %212 = load i8, i8* %arrayidx219, align 1, !dbg !9541
  %conv220 = zext i8 %212 to i32, !dbg !9543
  %shl221 = shl i32 %conv220, 16, !dbg !9544
  %or222 = or i32 %shl217, %shl221, !dbg !9545
  %213 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9546
  %cmnd223 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %213, i32 0, i32 14, !dbg !9547
  %214 = load i8*, i8** %cmnd223, align 8, !dbg !9547
  %arrayidx224 = getelementptr i8, i8* %214, i64 4, !dbg !9546
  %215 = load i8, i8* %arrayidx224, align 1, !dbg !9546
  %conv225 = zext i8 %215 to i32, !dbg !9548
  %shl226 = shl i32 %conv225, 8, !dbg !9549
  %or227 = or i32 %or222, %shl226, !dbg !9550
  %216 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9551
  %cmnd228 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %216, i32 0, i32 14, !dbg !9552
  %217 = load i8*, i8** %cmnd228, align 8, !dbg !9552
  %arrayidx229 = getelementptr i8, i8* %217, i64 5, !dbg !9551
  %218 = load i8, i8* %arrayidx229, align 1, !dbg !9551
  %conv230 = zext i8 %218 to i32, !dbg !9553
  %or231 = or i32 %or227, %conv230, !dbg !9554
  %219 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9555
  %m_out232 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %219, i32 0, i32 0, !dbg !9556
  %lba233 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out232, i32 0, i32 3, !dbg !9557
  store i32 %or231, i32* %lba233, align 1, !dbg !9558
  br label %if.end234, !dbg !9559

if.end234:                                        ; preds = %if.then202, %if.end197
  %220 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9560
  %cmd_len235 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %220, i32 0, i32 12, !dbg !9562
  %221 = load i16, i16* %cmd_len235, align 4, !dbg !9562
  %conv236 = zext i16 %221 to i32, !dbg !9560
  %cmp237 = icmp eq i32 %conv236, 12, !dbg !9563
  br i1 %cmp237, label %if.then239, label %if.end281, !dbg !9564

if.then239:                                       ; preds = %if.end234
  %222 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9565
  %cmnd240 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %222, i32 0, i32 14, !dbg !9567
  %223 = load i8*, i8** %cmnd240, align 8, !dbg !9567
  %arrayidx241 = getelementptr i8, i8* %223, i64 2, !dbg !9565
  %224 = load i8, i8* %arrayidx241, align 1, !dbg !9565
  %conv242 = zext i8 %224 to i32, !dbg !9568
  %shl243 = shl i32 %conv242, 24, !dbg !9569
  %225 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9570
  %cmnd244 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %225, i32 0, i32 14, !dbg !9571
  %226 = load i8*, i8** %cmnd244, align 8, !dbg !9571
  %arrayidx245 = getelementptr i8, i8* %226, i64 3, !dbg !9570
  %227 = load i8, i8* %arrayidx245, align 1, !dbg !9570
  %conv246 = zext i8 %227 to i32, !dbg !9572
  %shl247 = shl i32 %conv246, 16, !dbg !9573
  %or248 = or i32 %shl243, %shl247, !dbg !9574
  %228 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9575
  %cmnd249 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %228, i32 0, i32 14, !dbg !9576
  %229 = load i8*, i8** %cmnd249, align 8, !dbg !9576
  %arrayidx250 = getelementptr i8, i8* %229, i64 4, !dbg !9575
  %230 = load i8, i8* %arrayidx250, align 1, !dbg !9575
  %conv251 = zext i8 %230 to i32, !dbg !9577
  %shl252 = shl i32 %conv251, 8, !dbg !9578
  %or253 = or i32 %or248, %shl252, !dbg !9579
  %231 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9580
  %cmnd254 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %231, i32 0, i32 14, !dbg !9581
  %232 = load i8*, i8** %cmnd254, align 8, !dbg !9581
  %arrayidx255 = getelementptr i8, i8* %232, i64 5, !dbg !9580
  %233 = load i8, i8* %arrayidx255, align 1, !dbg !9580
  %conv256 = zext i8 %233 to i32, !dbg !9582
  %or257 = or i32 %or253, %conv256, !dbg !9583
  %234 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9584
  %m_out258 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %234, i32 0, i32 0, !dbg !9585
  %lba259 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out258, i32 0, i32 3, !dbg !9586
  store i32 %or257, i32* %lba259, align 1, !dbg !9587
  %235 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9588
  %cmnd260 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %235, i32 0, i32 14, !dbg !9589
  %236 = load i8*, i8** %cmnd260, align 8, !dbg !9589
  %arrayidx261 = getelementptr i8, i8* %236, i64 6, !dbg !9588
  %237 = load i8, i8* %arrayidx261, align 1, !dbg !9588
  %conv262 = zext i8 %237 to i32, !dbg !9590
  %shl263 = shl i32 %conv262, 24, !dbg !9591
  %238 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9592
  %cmnd264 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %238, i32 0, i32 14, !dbg !9593
  %239 = load i8*, i8** %cmnd264, align 8, !dbg !9593
  %arrayidx265 = getelementptr i8, i8* %239, i64 7, !dbg !9592
  %240 = load i8, i8* %arrayidx265, align 1, !dbg !9592
  %conv266 = zext i8 %240 to i32, !dbg !9594
  %shl267 = shl i32 %conv266, 16, !dbg !9595
  %or268 = or i32 %shl263, %shl267, !dbg !9596
  %241 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9597
  %cmnd269 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %241, i32 0, i32 14, !dbg !9598
  %242 = load i8*, i8** %cmnd269, align 8, !dbg !9598
  %arrayidx270 = getelementptr i8, i8* %242, i64 8, !dbg !9597
  %243 = load i8, i8* %arrayidx270, align 1, !dbg !9597
  %conv271 = zext i8 %243 to i32, !dbg !9599
  %shl272 = shl i32 %conv271, 8, !dbg !9600
  %or273 = or i32 %or268, %shl272, !dbg !9601
  %244 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9602
  %cmnd274 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %244, i32 0, i32 14, !dbg !9603
  %245 = load i8*, i8** %cmnd274, align 8, !dbg !9603
  %arrayidx275 = getelementptr i8, i8* %245, i64 9, !dbg !9602
  %246 = load i8, i8* %arrayidx275, align 1, !dbg !9602
  %conv276 = zext i8 %246 to i32, !dbg !9604
  %or277 = or i32 %or273, %conv276, !dbg !9605
  %conv278 = trunc i32 %or277 to i16, !dbg !9606
  %247 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9607
  %m_out279 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %247, i32 0, i32 0, !dbg !9608
  %numsectors280 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out279, i32 0, i32 2, !dbg !9609
  store i16 %conv278, i16* %numsectors280, align 1, !dbg !9610
  br label %if.end281, !dbg !9611

if.end281:                                        ; preds = %if.then239, %if.end234
  %248 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9612
  %cmnd282 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %248, i32 0, i32 14, !dbg !9614
  %249 = load i8*, i8** %cmnd282, align 8, !dbg !9614
  %250 = load i8, i8* %249, align 1, !dbg !9615
  %conv283 = zext i8 %250 to i32, !dbg !9615
  %and284 = and i32 %conv283, 15, !dbg !9616
  %cmp285 = icmp eq i32 %and284, 8, !dbg !9617
  br i1 %cmp285, label %if.then287, label %if.else289, !dbg !9618

if.then287:                                       ; preds = %if.end281
  %251 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9619
  %dma_direction288 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %251, i32 0, i32 5, !dbg !9621
  store i32 2, i32* %dma_direction288, align 8, !dbg !9622
  br label %if.end291, !dbg !9623

if.else289:                                       ; preds = %if.end281
  %252 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9624
  %dma_direction290 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %252, i32 0, i32 5, !dbg !9626
  store i32 1, i32* %dma_direction290, align 8, !dbg !9627
  br label %if.end291

if.end291:                                        ; preds = %if.else289, %if.then287
  %253 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9628
  %254 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9629
  %255 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9630
  %m_out292 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %255, i32 0, i32 0, !dbg !9631
  %xferaddr293 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out292, i32 0, i32 4, !dbg !9632
  %call294 = call i32 @mega_build_sglist(%struct.adapter_t* %253, %struct.scb_t* %254, i32* %xferaddr293, i32* %seg) #11, !dbg !9633
  %conv295 = trunc i32 %call294 to i8, !dbg !9633
  %256 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9634
  %m_out296 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %256, i32 0, i32 0, !dbg !9635
  %numsgelements297 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out296, i32 0, i32 6, !dbg !9636
  store i8 %conv295, i8* %numsgelements297, align 1, !dbg !9637
  %257 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9638
  store %struct.scb_t* %257, %struct.scb_t** %retval, align 8, !dbg !9639
  br label %return, !dbg !9639

sw.bb298:                                         ; preds = %if.then59, %if.then59
  %258 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9640
  %has_cluster299 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %258, i32 0, i32 42, !dbg !9642
  %259 = load i32, i32* %has_cluster299, align 8, !dbg !9642
  %tobool300 = icmp ne i32 %259, 0, !dbg !9640
  br i1 %tobool300, label %if.end304, label %if.then301, !dbg !9643

if.then301:                                       ; preds = %sw.bb298
  %260 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9644
  %result302 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %260, i32 0, i32 24, !dbg !9646
  store i32 262144, i32* %result302, align 8, !dbg !9647
  %261 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9648
  %scsi_done303 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %261, i32 0, i32 21, !dbg !9649
  %262 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done303, align 8, !dbg !9649
  %263 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9650
  call void %262(%struct.scsi_cmnd* %263) #11, !dbg !9648
  store %struct.scb_t* null, %struct.scb_t** %retval, align 8, !dbg !9651
  br label %return, !dbg !9651

if.end304:                                        ; preds = %sw.bb298
  %264 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9652
  %265 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9654
  %call305 = call %struct.scb_t* @mega_allocate_scb(%struct.adapter_t* %264, %struct.scsi_cmnd* %265) #11, !dbg !9655
  store %struct.scb_t* %call305, %struct.scb_t** %scb, align 8, !dbg !9656
  %tobool306 = icmp ne %struct.scb_t* %call305, null, !dbg !9656
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !9657

if.then307:                                       ; preds = %if.end304
  %266 = load i32*, i32** %busy.addr, align 8, !dbg !9658
  store i32 1, i32* %266, align 4, !dbg !9660
  store %struct.scb_t* null, %struct.scb_t** %retval, align 8, !dbg !9661
  br label %return, !dbg !9661

if.end308:                                        ; preds = %if.end304
  %267 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9662
  %raw_mbox309 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %267, i32 0, i32 3, !dbg !9663
  %arrayidx310 = getelementptr [66 x i8], [66 x i8]* %raw_mbox309, i64 0, i64 0, !dbg !9662
  store i8 110, i8* %arrayidx310, align 8, !dbg !9664
  %268 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9665
  %cmnd311 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %268, i32 0, i32 14, !dbg !9666
  %269 = load i8*, i8** %cmnd311, align 8, !dbg !9666
  %270 = load i8, i8* %269, align 1, !dbg !9667
  %conv312 = zext i8 %270 to i32, !dbg !9667
  %cmp313 = icmp eq i32 %conv312, 22, !dbg !9668
  %271 = zext i1 %cmp313 to i64, !dbg !9669
  %cond315 = select i1 %cmp313, i32 1, i32 2, !dbg !9669
  %conv316 = trunc i32 %cond315 to i8, !dbg !9669
  %272 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9670
  %raw_mbox317 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %272, i32 0, i32 3, !dbg !9671
  %arrayidx318 = getelementptr [66 x i8], [66 x i8]* %raw_mbox317, i64 0, i64 2, !dbg !9670
  store i8 %conv316, i8* %arrayidx318, align 2, !dbg !9672
  %273 = load i32, i32* %ldrv_num, align 4, !dbg !9673
  %conv319 = trunc i32 %273 to i8, !dbg !9673
  %274 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9674
  %raw_mbox320 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %274, i32 0, i32 3, !dbg !9675
  %arrayidx321 = getelementptr [66 x i8], [66 x i8]* %raw_mbox320, i64 0, i64 3, !dbg !9674
  store i8 %conv319, i8* %arrayidx321, align 1, !dbg !9676
  %275 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9677
  %dma_direction322 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %275, i32 0, i32 5, !dbg !9678
  store i32 3, i32* %dma_direction322, align 8, !dbg !9679
  %276 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9680
  store %struct.scb_t* %276, %struct.scb_t** %retval, align 8, !dbg !9681
  br label %return, !dbg !9681

sw.default:                                       ; preds = %if.then59
  %277 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9682
  %result323 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %277, i32 0, i32 24, !dbg !9683
  store i32 262144, i32* %result323, align 8, !dbg !9684
  %278 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9685
  %scsi_done324 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %278, i32 0, i32 21, !dbg !9686
  %279 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done324, align 8, !dbg !9686
  %280 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9687
  call void %279(%struct.scsi_cmnd* %280) #11, !dbg !9685
  store %struct.scb_t* null, %struct.scb_t** %retval, align 8, !dbg !9688
  br label %return, !dbg !9688

if.else325:                                       ; preds = %if.end57
  %281 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9689
  %282 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9692
  %call326 = call %struct.scb_t* @mega_allocate_scb(%struct.adapter_t* %281, %struct.scsi_cmnd* %282) #11, !dbg !9693
  store %struct.scb_t* %call326, %struct.scb_t** %scb, align 8, !dbg !9694
  %tobool327 = icmp ne %struct.scb_t* %call326, null, !dbg !9694
  br i1 %tobool327, label %if.end329, label %if.then328, !dbg !9695

if.then328:                                       ; preds = %if.else325
  %283 = load i32*, i32** %busy.addr, align 8, !dbg !9696
  store i32 1, i32* %283, align 4, !dbg !9698
  store %struct.scb_t* null, %struct.scb_t** %retval, align 8, !dbg !9699
  br label %return, !dbg !9699

if.end329:                                        ; preds = %if.else325
  %284 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9700
  %raw_mbox330 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %284, i32 0, i32 3, !dbg !9701
  %arraydecay331 = getelementptr inbounds [66 x i8], [66 x i8]* %raw_mbox330, i64 0, i64 0, !dbg !9700
  %285 = bitcast i8* %arraydecay331 to %struct.mbox_t*, !dbg !9702
  store %struct.mbox_t* %285, %struct.mbox_t** %mbox, align 8, !dbg !9703
  %286 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9704
  %287 = bitcast %struct.mbox_t* %286 to i8*, !dbg !9705
  call void @llvm.memset.p0i8.i64(i8* align 1 %287, i8 0, i64 66, i1 false), !dbg !9705
  %288 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9706
  %support_ext_cdb = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %288, i32 0, i32 25, !dbg !9708
  %289 = load i32, i32* %support_ext_cdb, align 4, !dbg !9708
  %tobool332 = icmp ne i32 %289, 0, !dbg !9706
  br i1 %tobool332, label %if.then333, label %if.else340, !dbg !9709

if.then333:                                       ; preds = %if.end329
  %290 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9710
  %291 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9712
  %292 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9713
  %293 = load i32, i32* %channel, align 4, !dbg !9714
  %294 = load i32, i32* %target, align 4, !dbg !9715
  %call334 = call %struct.mega_ext_passthru* @mega_prepare_extpassthru(%struct.adapter_t* %290, %struct.scb_t* %291, %struct.scsi_cmnd* %292, i32 %293, i32 %294) #11, !dbg !9716
  %295 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9717
  %m_out335 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %295, i32 0, i32 0, !dbg !9718
  %cmd336 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out335, i32 0, i32 0, !dbg !9719
  store i8 -29, i8* %cmd336, align 1, !dbg !9720
  %296 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9721
  %epthru_dma_addr = getelementptr inbounds %struct.scb_t, %struct.scb_t* %296, i32 0, i32 15, !dbg !9722
  %297 = load i64, i64* %epthru_dma_addr, align 8, !dbg !9722
  %conv337 = trunc i64 %297 to i32, !dbg !9721
  %298 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9723
  %m_out338 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %298, i32 0, i32 0, !dbg !9724
  %xferaddr339 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out338, i32 0, i32 4, !dbg !9725
  store i32 %conv337, i32* %xferaddr339, align 1, !dbg !9726
  br label %if.end355, !dbg !9727

if.else340:                                       ; preds = %if.end329
  %299 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9728
  %300 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9730
  %301 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9731
  %302 = load i32, i32* %channel, align 4, !dbg !9732
  %303 = load i32, i32* %target, align 4, !dbg !9733
  %call341 = call %struct.mega_passthru* @mega_prepare_passthru(%struct.adapter_t* %299, %struct.scb_t* %300, %struct.scsi_cmnd* %301, i32 %302, i32 %303) #11, !dbg !9734
  store %struct.mega_passthru* %call341, %struct.mega_passthru** %pthru, align 8, !dbg !9735
  %304 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9736
  %has_64bit_addr342 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %304, i32 0, i32 24, !dbg !9738
  %305 = load i32, i32* %has_64bit_addr342, align 8, !dbg !9738
  %tobool343 = icmp ne i32 %305, 0, !dbg !9736
  br i1 %tobool343, label %if.then344, label %if.else347, !dbg !9739

if.then344:                                       ; preds = %if.else340
  %306 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9740
  %m_out345 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %306, i32 0, i32 0, !dbg !9742
  %cmd346 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out345, i32 0, i32 0, !dbg !9743
  store i8 -61, i8* %cmd346, align 1, !dbg !9744
  br label %if.end350, !dbg !9745

if.else347:                                       ; preds = %if.else340
  %307 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9746
  %m_out348 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %307, i32 0, i32 0, !dbg !9748
  %cmd349 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out348, i32 0, i32 0, !dbg !9749
  store i8 3, i8* %cmd349, align 1, !dbg !9750
  br label %if.end350

if.end350:                                        ; preds = %if.else347, %if.then344
  %308 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9751
  %pthru_dma_addr351 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %308, i32 0, i32 13, !dbg !9752
  %309 = load i64, i64* %pthru_dma_addr351, align 8, !dbg !9752
  %conv352 = trunc i64 %309 to i32, !dbg !9751
  %310 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !9753
  %m_out353 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %310, i32 0, i32 0, !dbg !9754
  %xferaddr354 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out353, i32 0, i32 4, !dbg !9755
  store i32 %conv352, i32* %xferaddr354, align 1, !dbg !9756
  br label %if.end355

if.end355:                                        ; preds = %if.end350, %if.then333
  %311 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9757
  store %struct.scb_t* %311, %struct.scb_t** %retval, align 8, !dbg !9758
  br label %return, !dbg !9758

return:                                           ; preds = %if.end355, %if.then328, %sw.default, %if.end308, %if.then307, %if.then301, %if.end291, %if.then142, %if.end133, %if.then112, %do.end88, %if.end70, %if.then69, %if.then63, %if.then53, %if.then44, %if.then35
  %312 = load %struct.scb_t*, %struct.scb_t** %retval, align 8, !dbg !9759
  ret %struct.scb_t* %312, !dbg !9759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !9760 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !9763, metadata !DIExpression()), !dbg !9764
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !9765, metadata !DIExpression()), !dbg !9766
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9767
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9768
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9769
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !9769
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9770
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !9771
  ret void, !dbg !9772
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mega_runpendq(%struct.adapter_t* %adapter) #0 !dbg !9773 {
entry:
  %adapter.addr = alloca %struct.adapter_t*, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !9774, metadata !DIExpression()), !dbg !9775
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9776
  %pending_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %0, i32 0, i32 11, !dbg !9778
  %call = call i32 @list_empty(%struct.list_head* %pending_list) #11, !dbg !9779
  %tobool = icmp ne i32 %call, 0, !dbg !9779
  br i1 %tobool, label %if.end, label %if.then, !dbg !9780

if.then:                                          ; preds = %entry
  %1 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9781
  call void @__mega_runpendq(%struct.adapter_t* %1) #11, !dbg !9782
  br label %if.end, !dbg !9782

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9783
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_get_ldrv_num(%struct.adapter_t* %adapter, %struct.scsi_cmnd* %cmd, i32 %channel) #0 !dbg !9784 {
entry:
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %channel.addr = alloca i32, align 4
  %tgt = alloca i32, align 4
  %ldrv_num = alloca i32, align 4
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !9787, metadata !DIExpression()), !dbg !9788
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !9789, metadata !DIExpression()), !dbg !9790
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !9791, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.declare(metadata i32* %tgt, metadata !9793, metadata !DIExpression()), !dbg !9794
  call void @llvm.dbg.declare(metadata i32* %ldrv_num, metadata !9795, metadata !DIExpression()), !dbg !9796
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9797
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 1, !dbg !9798
  %1 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !9798
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %1, i32 0, i32 16, !dbg !9799
  %2 = load i32, i32* %id, align 8, !dbg !9799
  store i32 %2, i32* %tgt, align 4, !dbg !9800
  %3 = load i32, i32* %tgt, align 4, !dbg !9801
  %4 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9803
  %this_id = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %4, i32 0, i32 0, !dbg !9804
  %5 = load i32, i32* %this_id, align 8, !dbg !9804
  %cmp = icmp sgt i32 %3, %5, !dbg !9805
  br i1 %cmp, label %if.then, label %if.end, !dbg !9806

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %tgt, align 4, !dbg !9807
  %dec = add i32 %6, -1, !dbg !9807
  store i32 %dec, i32* %tgt, align 4, !dbg !9807
  br label %if.end, !dbg !9808

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %channel.addr, align 4, !dbg !9809
  %mul = mul i32 %7, 15, !dbg !9810
  %8 = load i32, i32* %tgt, align 4, !dbg !9811
  %add = add i32 %mul, %8, !dbg !9812
  store i32 %add, i32* %ldrv_num, align 4, !dbg !9813
  %9 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9814
  %boot_ldrv_enabled = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %9, i32 0, i32 26, !dbg !9816
  %10 = load i32, i32* %boot_ldrv_enabled, align 8, !dbg !9816
  %tobool = icmp ne i32 %10, 0, !dbg !9814
  br i1 %tobool, label %if.then1, label %if.end10, !dbg !9817

if.then1:                                         ; preds = %if.end
  %11 = load i32, i32* %ldrv_num, align 4, !dbg !9818
  %cmp2 = icmp eq i32 %11, 0, !dbg !9821
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !9822

if.then3:                                         ; preds = %if.then1
  %12 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9823
  %boot_ldrv = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %12, i32 0, i32 27, !dbg !9825
  %13 = load i32, i32* %boot_ldrv, align 4, !dbg !9825
  store i32 %13, i32* %ldrv_num, align 4, !dbg !9826
  br label %if.end9, !dbg !9827

if.else:                                          ; preds = %if.then1
  %14 = load i32, i32* %ldrv_num, align 4, !dbg !9828
  %15 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9831
  %boot_ldrv4 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %15, i32 0, i32 27, !dbg !9832
  %16 = load i32, i32* %boot_ldrv4, align 4, !dbg !9832
  %cmp5 = icmp sle i32 %14, %16, !dbg !9833
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !9834

if.then6:                                         ; preds = %if.else
  %17 = load i32, i32* %ldrv_num, align 4, !dbg !9835
  %dec7 = add i32 %17, -1, !dbg !9835
  store i32 %dec7, i32* %ldrv_num, align 4, !dbg !9835
  br label %if.end8, !dbg !9837

if.end8:                                          ; preds = %if.then6, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.then3
  br label %if.end10, !dbg !9838

if.end10:                                         ; preds = %if.end9, %if.end
  %18 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9839
  %support_random_del = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %18, i32 0, i32 31, !dbg !9841
  %19 = load i32, i32* %support_random_del, align 4, !dbg !9841
  %tobool11 = icmp ne i32 %19, 0, !dbg !9839
  br i1 %tobool11, label %land.lhs.true, label %if.end15, !dbg !9842

land.lhs.true:                                    ; preds = %if.end10
  %20 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9843
  %read_ldidmap = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %20, i32 0, i32 32, !dbg !9844
  %21 = load i32, i32* %read_ldidmap, align 8, !dbg !9844
  %tobool12 = icmp ne i32 %21, 0, !dbg !9843
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !9845

if.then13:                                        ; preds = %land.lhs.true
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9846
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %22, i32 0, i32 14, !dbg !9847
  %23 = load i8*, i8** %cmnd, align 8, !dbg !9847
  %arrayidx = getelementptr i8, i8* %23, i64 0, !dbg !9846
  %24 = load i8, i8* %arrayidx, align 1, !dbg !9846
  %conv = zext i8 %24 to i32, !dbg !9846
  switch i32 %conv, label %sw.epilog [
    i32 8, label %sw.bb
    i32 10, label %sw.bb
    i32 40, label %sw.bb
    i32 42, label %sw.bb
  ], !dbg !9848

sw.bb:                                            ; preds = %if.then13, %if.then13, %if.then13, %if.then13
  %25 = load i32, i32* %ldrv_num, align 4, !dbg !9849
  %add14 = add i32 %25, 128, !dbg !9849
  store i32 %add14, i32* %ldrv_num, align 4, !dbg !9849
  br label %sw.epilog, !dbg !9851

sw.epilog:                                        ; preds = %sw.bb, %if.then13
  br label %if.end15, !dbg !9851

if.end15:                                         ; preds = %sw.epilog, %land.lhs.true, %if.end10
  %26 = load i32, i32* %ldrv_num, align 4, !dbg !9852
  ret i32 %26, !dbg !9853
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scb_t* @mega_allocate_scb(%struct.adapter_t* %adapter, %struct.scsi_cmnd* %cmd) #0 !dbg !9854 {
entry:
  %retval = alloca %struct.scb_t*, align 8
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %head = alloca %struct.list_head*, align 8
  %scb = alloca %struct.scb_t*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scb_t*, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !9857, metadata !DIExpression()), !dbg !9858
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !9859, metadata !DIExpression()), !dbg !9860
  call void @llvm.dbg.declare(metadata %struct.list_head** %head, metadata !9861, metadata !DIExpression()), !dbg !9862
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9863
  %free_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %0, i32 0, i32 10, !dbg !9864
  store %struct.list_head* %free_list, %struct.list_head** %head, align 8, !dbg !9862
  call void @llvm.dbg.declare(metadata %struct.scb_t** %scb, metadata !9865, metadata !DIExpression()), !dbg !9866
  %1 = load %struct.list_head*, %struct.list_head** %head, align 8, !dbg !9867
  %call = call i32 @list_empty(%struct.list_head* %1) #11, !dbg !9869
  %tobool = icmp ne i32 %call, 0, !dbg !9869
  br i1 %tobool, label %if.end, label %if.then, !dbg !9870

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9871, metadata !DIExpression()), !dbg !9874
  %2 = load %struct.list_head*, %struct.list_head** %head, align 8, !dbg !9874
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !9874
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9874
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !9874
  store i8* %4, i8** %__mptr, align 8, !dbg !9874
  br label %do.body, !dbg !9874

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !9875

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !9874
  %add.ptr = getelementptr i8, i8* %5, i64 -8, !dbg !9874
  %6 = bitcast i8* %add.ptr to %struct.scb_t*, !dbg !9874
  store %struct.scb_t* %6, %struct.scb_t** %tmp, align 8, !dbg !9875
  %7 = load %struct.scb_t*, %struct.scb_t** %tmp, align 8, !dbg !9874
  store %struct.scb_t* %7, %struct.scb_t** %scb, align 8, !dbg !9877
  %8 = load %struct.list_head*, %struct.list_head** %head, align 8, !dbg !9878
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 0, !dbg !9879
  %9 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !9879
  call void @list_del_init(%struct.list_head* %9) #11, !dbg !9880
  %10 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9881
  %state = getelementptr inbounds %struct.scb_t, %struct.scb_t* %10, i32 0, i32 1, !dbg !9882
  store i32 1, i32* %state, align 4, !dbg !9883
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9884
  %12 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9885
  %cmd2 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %12, i32 0, i32 6, !dbg !9886
  store %struct.scsi_cmnd* %11, %struct.scsi_cmnd** %cmd2, align 8, !dbg !9887
  %13 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9888
  %dma_type = getelementptr inbounds %struct.scb_t, %struct.scb_t* %13, i32 0, i32 4, !dbg !9889
  store i32 65535, i32* %dma_type, align 4, !dbg !9890
  %14 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !9891
  store %struct.scb_t* %14, %struct.scb_t** %retval, align 8, !dbg !9892
  br label %return, !dbg !9892

if.end:                                           ; preds = %entry
  store %struct.scb_t* null, %struct.scb_t** %retval, align 8, !dbg !9893
  br label %return, !dbg !9893

return:                                           ; preds = %if.end, %do.end
  %15 = load %struct.scb_t*, %struct.scb_t** %retval, align 8, !dbg !9894
  ret %struct.scb_t* %15, !dbg !9894
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %cmd) #0 !dbg !9895 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !9898, metadata !DIExpression()), !dbg !9899
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !9900
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !9901
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !9902
  %sgl = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 0, !dbg !9903
  %1 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !9903
  ret %struct.scatterlist* %1, !dbg !9904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmap_atomic(%struct.page* %page) #0 !dbg !9905 {
entry:
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !9909, metadata !DIExpression()), !dbg !9915
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !9917, metadata !DIExpression()), !dbg !9918
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9919, !srcloc !9920
  call void @pagefault_disable() #11, !dbg !9921
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !9922
  store %struct.page* %0, %struct.page** %page.addr.i, align 8
  %1 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !9923
  %2 = load i64, i64* @vmemmap_base, align 8, !dbg !9923
  %3 = inttoptr i64 %2 to %struct.page*, !dbg !9923
  %sub.ptr.lhs.cast.i = ptrtoint %struct.page* %1 to i64, !dbg !9923
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %2, !dbg !9923
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 64, !dbg !9923
  %shl.i = shl i64 %sub.ptr.div.i, 12, !dbg !9923
  %4 = load i64, i64* @page_offset_base, align 8, !dbg !9923
  %add.i = add i64 %shl.i, %4, !dbg !9923
  %5 = inttoptr i64 %add.i to i8*, !dbg !9923
  ret i8* %5, !dbg !9924
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @sg_page(%struct.scatterlist* %sg) #0 !dbg !9925 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !9928, metadata !DIExpression()), !dbg !9929
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !9930
  %page_link = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0, !dbg !9931
  %1 = load i64, i64* %page_link, align 8, !dbg !9931
  %and = and i64 %1, -4, !dbg !9932
  %2 = inttoptr i64 %and to %struct.page*, !dbg !9933
  ret %struct.page* %2, !dbg !9934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kunmap_atomic_high(i8* %addr) #0 !dbg !9935 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9936, metadata !DIExpression()), !dbg !9937
  ret void, !dbg !9938
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pagefault_enable() #0 !dbg !9939 {
entry:
  %pscr_ret__.i.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i.i, metadata !9941, metadata !DIExpression()), !dbg !9947
  %__vpp_verify.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i.i, metadata !9951, metadata !DIExpression()), !dbg !9953
  %pfo_val__.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i.i, metadata !9954, metadata !DIExpression()), !dbg !9956
  %tmp.i.i = alloca %struct.task_struct*, align 8
  %tmp1.i.i = alloca %struct.task_struct*, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9957, !srcloc !9958
  store i8* null, i8** %__vpp_verify.i.i, align 8, !dbg !9953
  %0 = load i8*, i8** %__vpp_verify.i.i, align 8, !dbg !9953
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !9956, !srcloc !9959
  store i64 %1, i64* %pfo_val__.i.i, align 8, !dbg !9956
  %2 = load i64, i64* %pfo_val__.i.i, align 8, !dbg !9956
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !9956
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i.i, align 8, !dbg !9956
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i.i, align 8, !dbg !9956
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !9947
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !9947
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i.i, align 8, !dbg !9947
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i.i, align 8, !dbg !9947
  %pagefault_disabled.i = getelementptr inbounds %struct.task_struct, %struct.task_struct* %6, i32 0, i32 123, !dbg !9960
  %7 = load i32, i32* %pagefault_disabled.i, align 8, !dbg !9961
  %dec.i = add i32 %7, -1, !dbg !9961
  store i32 %dec.i, i32* %pagefault_disabled.i, align 8, !dbg !9961
  ret void, !dbg !9962
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_build_sglist(%struct.adapter_t* %adapter, %struct.scb_t* %scb, i32* %buf, i32* %len) #0 !dbg !9963 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %scb.addr = alloca %struct.scb_t*, align 8
  %buf.addr = alloca i32*, align 8
  %len.addr = alloca i32*, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %sgcnt = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !9966, metadata !DIExpression()), !dbg !9967
  store %struct.scb_t* %scb, %struct.scb_t** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scb_t** %scb.addr, metadata !9968, metadata !DIExpression()), !dbg !9969
  store i32* %buf, i32** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %buf.addr, metadata !9970, metadata !DIExpression()), !dbg !9971
  store i32* %len, i32** %len.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %len.addr, metadata !9972, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !9974, metadata !DIExpression()), !dbg !9975
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !9976, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.declare(metadata i32* %sgcnt, metadata !9978, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !9980, metadata !DIExpression()), !dbg !9981
  %0 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !9982
  %cmd1 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %0, i32 0, i32 6, !dbg !9983
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd1, align 8, !dbg !9983
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %cmd, align 8, !dbg !9984
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !9985
  %call = call i32 @scsi_dma_map(%struct.scsi_cmnd* %2) #11, !dbg !9986
  store i32 %call, i32* %sgcnt, align 4, !dbg !9987
  %3 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !9988
  %dma_type = getelementptr inbounds %struct.scb_t, %struct.scb_t* %3, i32 0, i32 4, !dbg !9989
  store i32 2, i32* %dma_type, align 4, !dbg !9990
  br label %do.body, !dbg !9991

do.body:                                          ; preds = %entry
  %4 = load i32, i32* %sgcnt, align 4, !dbg !9992
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !9992
  %sglen = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %5, i32 0, i32 37, !dbg !9992
  %6 = load i8, i8* %sglen, align 8, !dbg !9992
  %conv = zext i8 %6 to i32, !dbg !9992
  %cmp = icmp sgt i32 %4, %conv, !dbg !9992
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9992

lor.rhs:                                          ; preds = %do.body
  %7 = load i32, i32* %sgcnt, align 4, !dbg !9992
  %cmp3 = icmp slt i32 %7, 0, !dbg !9992
  br label %lor.end, !dbg !9992

lor.end:                                          ; preds = %lor.rhs, %do.body
  %8 = phi i1 [ true, %do.body ], [ %cmp3, %lor.rhs ]
  %lnot = xor i1 %8, true, !dbg !9992
  %lnot5 = xor i1 %lnot, true, !dbg !9992
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !9992
  %conv6 = sext i32 %lnot.ext to i64, !dbg !9992
  %tobool = icmp ne i64 %conv6, 0, !dbg !9992
  br i1 %tobool, label %if.then, label %if.end, !dbg !9995

if.then:                                          ; preds = %lor.end
  br label %do.body7, !dbg !9992

do.body7:                                         ; preds = %if.then
  br label %do.body8, !dbg !9996

do.body8:                                         ; preds = %do.body7
  br label %do.end, !dbg !9998

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !9996

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24, i64 0, i64 0), i32 1740, i32 0, i64 12) #7, !dbg !10000, !srcloc !10002
  br label %do.end10, !dbg !10000

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !9996

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 311) #7, !dbg !10003, !srcloc !10006
  unreachable, !dbg !10007

do.end12:                                         ; No predecessors!
  br label %do.end13, !dbg !9996

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !9996

if.end:                                           ; preds = %do.end13, %lor.end
  br label %do.end14, !dbg !9995

do.end14:                                         ; preds = %if.end
  %9 = load i32*, i32** %len.addr, align 8, !dbg !10008
  store i32 0, i32* %9, align 4, !dbg !10009
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10010
  %call15 = call i32 @scsi_sg_count(%struct.scsi_cmnd* %10) #11, !dbg !10012
  %cmp16 = icmp eq i32 %call15, 1, !dbg !10013
  br i1 %cmp16, label %land.lhs.true, label %if.end23, !dbg !10014

land.lhs.true:                                    ; preds = %do.end14
  %11 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10015
  %has_64bit_addr = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %11, i32 0, i32 24, !dbg !10016
  %12 = load i32, i32* %has_64bit_addr, align 8, !dbg !10016
  %tobool18 = icmp ne i32 %12, 0, !dbg !10015
  br i1 %tobool18, label %if.end23, label %if.then19, !dbg !10017

if.then19:                                        ; preds = %land.lhs.true
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10018
  %call20 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %13) #11, !dbg !10020
  store %struct.scatterlist* %call20, %struct.scatterlist** %sg, align 8, !dbg !10021
  %14 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10022
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %14, i32 0, i32 3, !dbg !10022
  %15 = load i64, i64* %dma_address, align 8, !dbg !10022
  %16 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10023
  %dma_h_bulkdata = getelementptr inbounds %struct.scb_t, %struct.scb_t* %16, i32 0, i32 7, !dbg !10024
  store i64 %15, i64* %dma_h_bulkdata, align 8, !dbg !10025
  %17 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10026
  %dma_h_bulkdata21 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %17, i32 0, i32 7, !dbg !10027
  %18 = load i64, i64* %dma_h_bulkdata21, align 8, !dbg !10027
  %conv22 = trunc i64 %18 to i32, !dbg !10028
  %19 = load i32*, i32** %buf.addr, align 8, !dbg !10029
  store i32 %conv22, i32* %19, align 4, !dbg !10030
  %20 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10031
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %20, i32 0, i32 4, !dbg !10031
  %21 = load i32, i32* %dma_length, align 8, !dbg !10031
  %22 = load i32*, i32** %len.addr, align 8, !dbg !10032
  store i32 %21, i32* %22, align 4, !dbg !10033
  store i32 0, i32* %retval, align 4, !dbg !10034
  br label %return, !dbg !10034

if.end23:                                         ; preds = %land.lhs.true, %do.end14
  store i32 0, i32* %idx, align 4, !dbg !10035
  %23 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10035
  %call24 = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %23) #11, !dbg !10035
  store %struct.scatterlist* %call24, %struct.scatterlist** %sg, align 8, !dbg !10035
  br label %for.cond, !dbg !10035

for.cond:                                         ; preds = %for.inc, %if.end23
  %24 = load i32, i32* %idx, align 4, !dbg !10037
  %25 = load i32, i32* %sgcnt, align 4, !dbg !10037
  %cmp25 = icmp slt i32 %24, %25, !dbg !10037
  br i1 %cmp25, label %for.body, label %for.end, !dbg !10035

for.body:                                         ; preds = %for.cond
  %26 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10039
  %has_64bit_addr27 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %26, i32 0, i32 24, !dbg !10042
  %27 = load i32, i32* %has_64bit_addr27, align 8, !dbg !10042
  %tobool28 = icmp ne i32 %27, 0, !dbg !10039
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !10043

if.then29:                                        ; preds = %for.body
  %28 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10044
  %dma_address30 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %28, i32 0, i32 3, !dbg !10044
  %29 = load i64, i64* %dma_address30, align 8, !dbg !10044
  %30 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10046
  %sgl64 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %30, i32 0, i32 10, !dbg !10047
  %31 = load %struct.mega_sgl64*, %struct.mega_sgl64** %sgl64, align 8, !dbg !10047
  %32 = load i32, i32* %idx, align 4, !dbg !10048
  %idxprom = sext i32 %32 to i64, !dbg !10046
  %arrayidx = getelementptr %struct.mega_sgl64, %struct.mega_sgl64* %31, i64 %idxprom, !dbg !10046
  %address = getelementptr inbounds %struct.mega_sgl64, %struct.mega_sgl64* %arrayidx, i32 0, i32 0, !dbg !10049
  store i64 %29, i64* %address, align 1, !dbg !10050
  %33 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10051
  %dma_length31 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %33, i32 0, i32 4, !dbg !10051
  %34 = load i32, i32* %dma_length31, align 8, !dbg !10051
  %35 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10052
  %sgl6432 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %35, i32 0, i32 10, !dbg !10053
  %36 = load %struct.mega_sgl64*, %struct.mega_sgl64** %sgl6432, align 8, !dbg !10053
  %37 = load i32, i32* %idx, align 4, !dbg !10054
  %idxprom33 = sext i32 %37 to i64, !dbg !10052
  %arrayidx34 = getelementptr %struct.mega_sgl64, %struct.mega_sgl64* %36, i64 %idxprom33, !dbg !10052
  %length = getelementptr inbounds %struct.mega_sgl64, %struct.mega_sgl64* %arrayidx34, i32 0, i32 1, !dbg !10055
  store i32 %34, i32* %length, align 1, !dbg !10056
  %38 = load i32*, i32** %len.addr, align 8, !dbg !10057
  %39 = load i32, i32* %38, align 4, !dbg !10058
  %add = add i32 %39, %34, !dbg !10058
  store i32 %add, i32* %38, align 4, !dbg !10058
  br label %if.end46, !dbg !10059

if.else:                                          ; preds = %for.body
  %40 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10060
  %dma_address35 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %40, i32 0, i32 3, !dbg !10060
  %41 = load i64, i64* %dma_address35, align 8, !dbg !10060
  %conv36 = trunc i64 %41 to i32, !dbg !10060
  %42 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10062
  %sgl = getelementptr inbounds %struct.scb_t, %struct.scb_t* %42, i32 0, i32 9, !dbg !10063
  %43 = load %struct.mega_sglist*, %struct.mega_sglist** %sgl, align 8, !dbg !10063
  %44 = load i32, i32* %idx, align 4, !dbg !10064
  %idxprom37 = sext i32 %44 to i64, !dbg !10062
  %arrayidx38 = getelementptr %struct.mega_sglist, %struct.mega_sglist* %43, i64 %idxprom37, !dbg !10062
  %address39 = getelementptr inbounds %struct.mega_sglist, %struct.mega_sglist* %arrayidx38, i32 0, i32 0, !dbg !10065
  store i32 %conv36, i32* %address39, align 1, !dbg !10066
  %45 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10067
  %dma_length40 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %45, i32 0, i32 4, !dbg !10067
  %46 = load i32, i32* %dma_length40, align 8, !dbg !10067
  %47 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10068
  %sgl41 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %47, i32 0, i32 9, !dbg !10069
  %48 = load %struct.mega_sglist*, %struct.mega_sglist** %sgl41, align 8, !dbg !10069
  %49 = load i32, i32* %idx, align 4, !dbg !10070
  %idxprom42 = sext i32 %49 to i64, !dbg !10068
  %arrayidx43 = getelementptr %struct.mega_sglist, %struct.mega_sglist* %48, i64 %idxprom42, !dbg !10068
  %length44 = getelementptr inbounds %struct.mega_sglist, %struct.mega_sglist* %arrayidx43, i32 0, i32 1, !dbg !10071
  store i32 %46, i32* %length44, align 1, !dbg !10072
  %50 = load i32*, i32** %len.addr, align 8, !dbg !10073
  %51 = load i32, i32* %50, align 4, !dbg !10074
  %add45 = add i32 %51, %46, !dbg !10074
  store i32 %add45, i32* %50, align 4, !dbg !10074
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then29
  br label %for.inc, !dbg !10075

for.inc:                                          ; preds = %if.end46
  %52 = load i32, i32* %idx, align 4, !dbg !10037
  %inc = add i32 %52, 1, !dbg !10037
  store i32 %inc, i32* %idx, align 4, !dbg !10037
  %53 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10037
  %call47 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %53) #11, !dbg !10037
  store %struct.scatterlist* %call47, %struct.scatterlist** %sg, align 8, !dbg !10037
  br label %for.cond, !dbg !10037, !llvm.loop !10076

for.end:                                          ; preds = %for.cond
  %54 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10078
  %sgl_dma_addr = getelementptr inbounds %struct.scb_t, %struct.scb_t* %54, i32 0, i32 11, !dbg !10079
  %55 = load i64, i64* %sgl_dma_addr, align 8, !dbg !10079
  %conv48 = trunc i64 %55 to i32, !dbg !10078
  %56 = load i32*, i32** %buf.addr, align 8, !dbg !10080
  store i32 %conv48, i32* %56, align 4, !dbg !10081
  %57 = load i32, i32* %sgcnt, align 4, !dbg !10082
  store i32 %57, i32* %retval, align 4, !dbg !10083
  br label %return, !dbg !10083

return:                                           ; preds = %for.end, %if.then19
  %58 = load i32, i32* %retval, align 4, !dbg !10084
  ret i32 %58, !dbg !10084
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mega_ext_passthru* @mega_prepare_extpassthru(%struct.adapter_t* %adapter, %struct.scb_t* %scb, %struct.scsi_cmnd* %cmd, i32 %channel, i32 %target) #0 !dbg !10085 {
entry:
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %scb.addr = alloca %struct.scb_t*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %channel.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %epthru = alloca %struct.mega_ext_passthru*, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !10088, metadata !DIExpression()), !dbg !10089
  store %struct.scb_t* %scb, %struct.scb_t** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scb_t** %scb.addr, metadata !10090, metadata !DIExpression()), !dbg !10091
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !10092, metadata !DIExpression()), !dbg !10093
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !10094, metadata !DIExpression()), !dbg !10095
  store i32 %target, i32* %target.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !10096, metadata !DIExpression()), !dbg !10097
  call void @llvm.dbg.declare(metadata %struct.mega_ext_passthru** %epthru, metadata !10098, metadata !DIExpression()), !dbg !10099
  %0 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10100
  %epthru1 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %0, i32 0, i32 14, !dbg !10101
  %1 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru1, align 8, !dbg !10101
  store %struct.mega_ext_passthru* %1, %struct.mega_ext_passthru** %epthru, align 8, !dbg !10102
  %2 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !10103
  %3 = bitcast %struct.mega_ext_passthru* %2 to i8*, !dbg !10104
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 68, i1 false), !dbg !10104
  %4 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !10105
  %5 = bitcast %struct.mega_ext_passthru* %4 to i8*, !dbg !10106
  %bf.load = load i8, i8* %5, align 1, !dbg !10107
  %bf.clear = and i8 %bf.load, -8, !dbg !10107
  %bf.set = or i8 %bf.clear, 2, !dbg !10107
  store i8 %bf.set, i8* %5, align 1, !dbg !10107
  %6 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !10108
  %7 = bitcast %struct.mega_ext_passthru* %6 to i8*, !dbg !10109
  %bf.load2 = load i8, i8* %7, align 1, !dbg !10110
  %bf.clear3 = and i8 %bf.load2, -9, !dbg !10110
  %bf.set4 = or i8 %bf.clear3, 8, !dbg !10110
  store i8 %bf.set4, i8* %7, align 1, !dbg !10110
  %8 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !10111
  %reqsenselen = getelementptr inbounds %struct.mega_ext_passthru, %struct.mega_ext_passthru* %8, i32 0, i32 11, !dbg !10112
  store i8 14, i8* %reqsenselen, align 1, !dbg !10113
  %9 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !10114
  %10 = bitcast %struct.mega_ext_passthru* %9 to i8*, !dbg !10115
  %bf.load5 = load i8, i8* %10, align 1, !dbg !10116
  %bf.clear6 = and i8 %bf.load5, 127, !dbg !10116
  store i8 %bf.clear6, i8* %10, align 1, !dbg !10116
  %11 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10117
  %flag = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %11, i32 0, i32 1, !dbg !10118
  %12 = load i32, i32* %flag, align 4, !dbg !10118
  %conv = zext i32 %12 to i64, !dbg !10117
  %and = and i64 %conv, 134217728, !dbg !10119
  %tobool = icmp ne i64 %and, 0, !dbg !10119
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10120

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10120

cond.false:                                       ; preds = %entry
  %13 = load i32, i32* %channel.addr, align 4, !dbg !10121
  br label %cond.end, !dbg !10120

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %13, %cond.false ], !dbg !10120
  %conv7 = trunc i32 %cond to i8, !dbg !10120
  %14 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !10122
  %channel8 = getelementptr inbounds %struct.mega_ext_passthru, %struct.mega_ext_passthru* %14, i32 0, i32 2, !dbg !10123
  store i8 %conv7, i8* %channel8, align 1, !dbg !10124
  %15 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10125
  %flag9 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %15, i32 0, i32 1, !dbg !10126
  %16 = load i32, i32* %flag9, align 4, !dbg !10126
  %conv10 = zext i32 %16 to i64, !dbg !10125
  %and11 = and i64 %conv10, 134217728, !dbg !10127
  %tobool12 = icmp ne i64 %and11, 0, !dbg !10127
  br i1 %tobool12, label %cond.true13, label %cond.false14, !dbg !10128

cond.true13:                                      ; preds = %cond.end
  %17 = load i32, i32* %channel.addr, align 4, !dbg !10129
  %shl = shl i32 %17, 4, !dbg !10130
  %18 = load i32, i32* %target.addr, align 4, !dbg !10131
  %or = or i32 %shl, %18, !dbg !10132
  br label %cond.end15, !dbg !10128

cond.false14:                                     ; preds = %cond.end
  %19 = load i32, i32* %target.addr, align 4, !dbg !10133
  br label %cond.end15, !dbg !10128

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i32 [ %or, %cond.true13 ], [ %19, %cond.false14 ], !dbg !10128
  %conv17 = trunc i32 %cond16 to i8, !dbg !10128
  %20 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !10134
  %target18 = getelementptr inbounds %struct.mega_ext_passthru, %struct.mega_ext_passthru* %20, i32 0, i32 3, !dbg !10135
  store i8 %conv17, i8* %target18, align 1, !dbg !10136
  %21 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10137
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %21, i32 0, i32 12, !dbg !10138
  %22 = load i16, i16* %cmd_len, align 4, !dbg !10138
  %conv19 = trunc i16 %22 to i8, !dbg !10137
  %23 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !10139
  %cdblen = getelementptr inbounds %struct.mega_ext_passthru, %struct.mega_ext_passthru* %23, i32 0, i32 6, !dbg !10140
  store i8 %conv19, i8* %cdblen, align 1, !dbg !10141
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10142
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %24, i32 0, i32 1, !dbg !10143
  %25 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !10143
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %25, i32 0, i32 18, !dbg !10144
  %26 = load i64, i64* %lun, align 8, !dbg !10144
  %conv20 = trunc i64 %26 to i8, !dbg !10142
  %27 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !10145
  %logdrv = getelementptr inbounds %struct.mega_ext_passthru, %struct.mega_ext_passthru* %27, i32 0, i32 1, !dbg !10146
  store i8 %conv20, i8* %logdrv, align 1, !dbg !10147
  %28 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !10148
  %cdb = getelementptr inbounds %struct.mega_ext_passthru, %struct.mega_ext_passthru* %28, i32 0, i32 8, !dbg !10149
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %cdb, i64 0, i64 0, !dbg !10150
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10151
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %29, i32 0, i32 14, !dbg !10152
  %30 = load i8*, i8** %cmnd, align 8, !dbg !10152
  %31 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10153
  %cmd_len21 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %31, i32 0, i32 12, !dbg !10154
  %32 = load i16, i16* %cmd_len21, align 4, !dbg !10154
  %conv22 = zext i16 %32 to i64, !dbg !10153
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %30, i64 %conv22, i1 false), !dbg !10150
  %33 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10155
  %dma_direction = getelementptr inbounds %struct.scb_t, %struct.scb_t* %33, i32 0, i32 5, !dbg !10156
  store i32 0, i32* %dma_direction, align 8, !dbg !10157
  %34 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10158
  %cmnd23 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %34, i32 0, i32 14, !dbg !10159
  %35 = load i8*, i8** %cmnd23, align 8, !dbg !10159
  %arrayidx = getelementptr i8, i8* %35, i64 0, !dbg !10158
  %36 = load i8, i8* %arrayidx, align 1, !dbg !10158
  %conv24 = zext i8 %36 to i32, !dbg !10158
  switch i32 %conv24, label %sw.default [
    i32 18, label %sw.bb
    i32 37, label %sw.bb
  ], !dbg !10160

sw.bb:                                            ; preds = %cond.end15, %cond.end15
  %37 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10161
  %flag25 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %37, i32 0, i32 1, !dbg !10164
  %38 = load i32, i32* %flag25, align 4, !dbg !10164
  %conv26 = zext i32 %38 to i64, !dbg !10161
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10165
  %device27 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %39, i32 0, i32 1, !dbg !10166
  %40 = load %struct.scsi_device*, %struct.scsi_device** %device27, align 8, !dbg !10166
  %channel28 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %40, i32 0, i32 17, !dbg !10167
  %41 = load i32, i32* %channel28, align 4, !dbg !10167
  %sh_prom = zext i32 %41 to i64, !dbg !10168
  %shl29 = shl i64 1, %sh_prom, !dbg !10168
  %and30 = and i64 %conv26, %shl29, !dbg !10169
  %tobool31 = icmp ne i64 %and30, 0, !dbg !10169
  br i1 %tobool31, label %if.end, label %if.then, !dbg !10170

if.then:                                          ; preds = %sw.bb
  %42 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10171
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %42, i32 0, i32 9, !dbg !10171
  %43 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !10171
  %dev32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 41, !dbg !10171
  %44 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10171
  %host = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %44, i32 0, i32 13, !dbg !10171
  %45 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !10171
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %45, i32 0, i32 16, !dbg !10171
  %46 = load i32, i32* %host_no, align 4, !dbg !10171
  %47 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10171
  %device33 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %47, i32 0, i32 1, !dbg !10171
  %48 = load %struct.scsi_device*, %struct.scsi_device** %device33, align 8, !dbg !10171
  %channel34 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %48, i32 0, i32 17, !dbg !10171
  %49 = load i32, i32* %channel34, align 4, !dbg !10171
  %50 = load i32, i32* %channel.addr, align 4, !dbg !10171
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev32, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.25, i64 0, i64 0), i32 %46, i32 %49, i32 %50) #12, !dbg !10171
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10173
  %device35 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %51, i32 0, i32 1, !dbg !10174
  %52 = load %struct.scsi_device*, %struct.scsi_device** %device35, align 8, !dbg !10174
  %channel36 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %52, i32 0, i32 17, !dbg !10175
  %53 = load i32, i32* %channel36, align 4, !dbg !10175
  %sh_prom37 = zext i32 %53 to i64, !dbg !10176
  %shl38 = shl i64 1, %sh_prom37, !dbg !10176
  %54 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10177
  %flag39 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %54, i32 0, i32 1, !dbg !10178
  %55 = load i32, i32* %flag39, align 4, !dbg !10179
  %conv40 = zext i32 %55 to i64, !dbg !10179
  %or41 = or i64 %conv40, %shl38, !dbg !10179
  %conv42 = trunc i64 %or41 to i32, !dbg !10179
  store i32 %conv42, i32* %flag39, align 4, !dbg !10179
  br label %if.end, !dbg !10180

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.default, !dbg !10181

sw.default:                                       ; preds = %cond.end15, %if.end
  %56 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10182
  %57 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10183
  %58 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !10184
  %dataxferaddr = getelementptr inbounds %struct.mega_ext_passthru, %struct.mega_ext_passthru* %58, i32 0, i32 14, !dbg !10185
  %59 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !10186
  %dataxferlen = getelementptr inbounds %struct.mega_ext_passthru, %struct.mega_ext_passthru* %59, i32 0, i32 15, !dbg !10187
  %call = call i32 @mega_build_sglist(%struct.adapter_t* %56, %struct.scb_t* %57, i32* %dataxferaddr, i32* %dataxferlen) #11, !dbg !10188
  %conv43 = trunc i32 %call to i8, !dbg !10188
  %60 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !10189
  %numsgelements = getelementptr inbounds %struct.mega_ext_passthru, %struct.mega_ext_passthru* %60, i32 0, i32 9, !dbg !10190
  store i8 %conv43, i8* %numsgelements, align 1, !dbg !10191
  br label %sw.epilog, !dbg !10192

sw.epilog:                                        ; preds = %sw.default
  %61 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !10193
  ret %struct.mega_ext_passthru* %61, !dbg !10194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mega_passthru* @mega_prepare_passthru(%struct.adapter_t* %adapter, %struct.scb_t* %scb, %struct.scsi_cmnd* %cmd, i32 %channel, i32 %target) #0 !dbg !10195 {
entry:
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %scb.addr = alloca %struct.scb_t*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %channel.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %pthru = alloca %struct.mega_passthru*, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !10198, metadata !DIExpression()), !dbg !10199
  store %struct.scb_t* %scb, %struct.scb_t** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scb_t** %scb.addr, metadata !10200, metadata !DIExpression()), !dbg !10201
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !10202, metadata !DIExpression()), !dbg !10203
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !10204, metadata !DIExpression()), !dbg !10205
  store i32 %target, i32* %target.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !10206, metadata !DIExpression()), !dbg !10207
  call void @llvm.dbg.declare(metadata %struct.mega_passthru** %pthru, metadata !10208, metadata !DIExpression()), !dbg !10209
  %0 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10210
  %pthru1 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %0, i32 0, i32 12, !dbg !10211
  %1 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru1, align 8, !dbg !10211
  store %struct.mega_passthru* %1, %struct.mega_passthru** %pthru, align 8, !dbg !10212
  %2 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !10213
  %3 = bitcast %struct.mega_passthru* %2 to i8*, !dbg !10214
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 60, i1 false), !dbg !10214
  %4 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !10215
  %5 = bitcast %struct.mega_passthru* %4 to i8*, !dbg !10216
  %bf.load = load i8, i8* %5, align 1, !dbg !10217
  %bf.clear = and i8 %bf.load, -8, !dbg !10217
  %bf.set = or i8 %bf.clear, 2, !dbg !10217
  store i8 %bf.set, i8* %5, align 1, !dbg !10217
  %6 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !10218
  %7 = bitcast %struct.mega_passthru* %6 to i8*, !dbg !10219
  %bf.load2 = load i8, i8* %7, align 1, !dbg !10220
  %bf.clear3 = and i8 %bf.load2, -9, !dbg !10220
  %bf.set4 = or i8 %bf.clear3, 8, !dbg !10220
  store i8 %bf.set4, i8* %7, align 1, !dbg !10220
  %8 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !10221
  %reqsenselen = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %8, i32 0, i32 8, !dbg !10222
  store i8 14, i8* %reqsenselen, align 1, !dbg !10223
  %9 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !10224
  %10 = bitcast %struct.mega_passthru* %9 to i8*, !dbg !10225
  %bf.load5 = load i8, i8* %10, align 1, !dbg !10226
  %bf.clear6 = and i8 %bf.load5, 127, !dbg !10226
  store i8 %bf.clear6, i8* %10, align 1, !dbg !10226
  %11 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10227
  %flag = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %11, i32 0, i32 1, !dbg !10228
  %12 = load i32, i32* %flag, align 4, !dbg !10228
  %conv = zext i32 %12 to i64, !dbg !10227
  %and = and i64 %conv, 134217728, !dbg !10229
  %tobool = icmp ne i64 %and, 0, !dbg !10229
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10230

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10230

cond.false:                                       ; preds = %entry
  %13 = load i32, i32* %channel.addr, align 4, !dbg !10231
  br label %cond.end, !dbg !10230

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %13, %cond.false ], !dbg !10230
  %conv7 = trunc i32 %cond to i8, !dbg !10230
  %14 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !10232
  %channel8 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %14, i32 0, i32 2, !dbg !10233
  store i8 %conv7, i8* %channel8, align 1, !dbg !10234
  %15 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10235
  %flag9 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %15, i32 0, i32 1, !dbg !10236
  %16 = load i32, i32* %flag9, align 4, !dbg !10236
  %conv10 = zext i32 %16 to i64, !dbg !10235
  %and11 = and i64 %conv10, 134217728, !dbg !10237
  %tobool12 = icmp ne i64 %and11, 0, !dbg !10237
  br i1 %tobool12, label %cond.true13, label %cond.false14, !dbg !10238

cond.true13:                                      ; preds = %cond.end
  %17 = load i32, i32* %channel.addr, align 4, !dbg !10239
  %shl = shl i32 %17, 4, !dbg !10240
  %18 = load i32, i32* %target.addr, align 4, !dbg !10241
  %or = or i32 %shl, %18, !dbg !10242
  br label %cond.end15, !dbg !10238

cond.false14:                                     ; preds = %cond.end
  %19 = load i32, i32* %target.addr, align 4, !dbg !10243
  br label %cond.end15, !dbg !10238

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i32 [ %or, %cond.true13 ], [ %19, %cond.false14 ], !dbg !10238
  %conv17 = trunc i32 %cond16 to i8, !dbg !10238
  %20 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !10244
  %target18 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %20, i32 0, i32 3, !dbg !10245
  store i8 %conv17, i8* %target18, align 1, !dbg !10246
  %21 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10247
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %21, i32 0, i32 12, !dbg !10248
  %22 = load i16, i16* %cmd_len, align 4, !dbg !10248
  %conv19 = trunc i16 %22 to i8, !dbg !10247
  %23 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !10249
  %cdblen = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %23, i32 0, i32 7, !dbg !10250
  store i8 %conv19, i8* %cdblen, align 1, !dbg !10251
  %24 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10252
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %24, i32 0, i32 1, !dbg !10253
  %25 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !10253
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %25, i32 0, i32 18, !dbg !10254
  %26 = load i64, i64* %lun, align 8, !dbg !10254
  %conv20 = trunc i64 %26 to i8, !dbg !10252
  %27 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !10255
  %logdrv = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %27, i32 0, i32 1, !dbg !10256
  store i8 %conv20, i8* %logdrv, align 1, !dbg !10257
  %28 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !10258
  %cdb = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %28, i32 0, i32 6, !dbg !10259
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %cdb, i64 0, i64 0, !dbg !10260
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10261
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %29, i32 0, i32 14, !dbg !10262
  %30 = load i8*, i8** %cmnd, align 8, !dbg !10262
  %31 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10263
  %cmd_len21 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %31, i32 0, i32 12, !dbg !10264
  %32 = load i16, i16* %cmd_len21, align 4, !dbg !10264
  %conv22 = zext i16 %32 to i64, !dbg !10263
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %30, i64 %conv22, i1 false), !dbg !10260
  %33 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10265
  %dma_direction = getelementptr inbounds %struct.scb_t, %struct.scb_t* %33, i32 0, i32 5, !dbg !10266
  store i32 0, i32* %dma_direction, align 8, !dbg !10267
  %34 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10268
  %cmnd23 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %34, i32 0, i32 14, !dbg !10269
  %35 = load i8*, i8** %cmnd23, align 8, !dbg !10269
  %arrayidx = getelementptr i8, i8* %35, i64 0, !dbg !10268
  %36 = load i8, i8* %arrayidx, align 1, !dbg !10268
  %conv24 = zext i8 %36 to i32, !dbg !10268
  switch i32 %conv24, label %sw.default [
    i32 18, label %sw.bb
    i32 37, label %sw.bb
  ], !dbg !10270

sw.bb:                                            ; preds = %cond.end15, %cond.end15
  %37 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10271
  %flag25 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %37, i32 0, i32 1, !dbg !10274
  %38 = load i32, i32* %flag25, align 4, !dbg !10274
  %conv26 = zext i32 %38 to i64, !dbg !10271
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10275
  %device27 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %39, i32 0, i32 1, !dbg !10276
  %40 = load %struct.scsi_device*, %struct.scsi_device** %device27, align 8, !dbg !10276
  %channel28 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %40, i32 0, i32 17, !dbg !10277
  %41 = load i32, i32* %channel28, align 4, !dbg !10277
  %sh_prom = zext i32 %41 to i64, !dbg !10278
  %shl29 = shl i64 1, %sh_prom, !dbg !10278
  %and30 = and i64 %conv26, %shl29, !dbg !10279
  %tobool31 = icmp ne i64 %and30, 0, !dbg !10279
  br i1 %tobool31, label %if.end, label %if.then, !dbg !10280

if.then:                                          ; preds = %sw.bb
  %42 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10281
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %42, i32 0, i32 9, !dbg !10281
  %43 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !10281
  %dev32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 41, !dbg !10281
  %44 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10281
  %host = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %44, i32 0, i32 13, !dbg !10281
  %45 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !10281
  %host_no = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %45, i32 0, i32 16, !dbg !10281
  %46 = load i32, i32* %host_no, align 4, !dbg !10281
  %47 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10281
  %device33 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %47, i32 0, i32 1, !dbg !10281
  %48 = load %struct.scsi_device*, %struct.scsi_device** %device33, align 8, !dbg !10281
  %channel34 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %48, i32 0, i32 17, !dbg !10281
  %49 = load i32, i32* %channel34, align 4, !dbg !10281
  %50 = load i32, i32* %channel.addr, align 4, !dbg !10281
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %dev32, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.25, i64 0, i64 0), i32 %46, i32 %49, i32 %50) #12, !dbg !10281
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10283
  %device35 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %51, i32 0, i32 1, !dbg !10284
  %52 = load %struct.scsi_device*, %struct.scsi_device** %device35, align 8, !dbg !10284
  %channel36 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %52, i32 0, i32 17, !dbg !10285
  %53 = load i32, i32* %channel36, align 4, !dbg !10285
  %sh_prom37 = zext i32 %53 to i64, !dbg !10286
  %shl38 = shl i64 1, %sh_prom37, !dbg !10286
  %54 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10287
  %flag39 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %54, i32 0, i32 1, !dbg !10288
  %55 = load i32, i32* %flag39, align 4, !dbg !10289
  %conv40 = zext i32 %55 to i64, !dbg !10289
  %or41 = or i64 %conv40, %shl38, !dbg !10289
  %conv42 = trunc i64 %or41 to i32, !dbg !10289
  store i32 %conv42, i32* %flag39, align 4, !dbg !10289
  br label %if.end, !dbg !10290

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.default, !dbg !10291

sw.default:                                       ; preds = %cond.end15, %if.end
  %56 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10292
  %57 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10293
  %58 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !10294
  %dataxferaddr = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %58, i32 0, i32 12, !dbg !10295
  %59 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !10296
  %dataxferlen = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %59, i32 0, i32 13, !dbg !10297
  %call = call i32 @mega_build_sglist(%struct.adapter_t* %56, %struct.scb_t* %57, i32* %dataxferaddr, i32* %dataxferlen) #11, !dbg !10298
  %conv43 = trunc i32 %call to i8, !dbg !10298
  %60 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !10299
  %numsgelements = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %60, i32 0, i32 10, !dbg !10300
  store i8 %conv43, i8* %numsgelements, align 1, !dbg !10301
  br label %sw.epilog, !dbg !10302

sw.epilog:                                        ; preds = %sw.default
  %61 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !10303
  ret %struct.mega_passthru* %61, !dbg !10304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !10305 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !10310, metadata !DIExpression()), !dbg !10311
  br label %do.body, !dbg !10312

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10314

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10312
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !10312
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10312
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !10314
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !10312
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10316
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !10317
  %conv = zext i1 %cmp to i32, !dbg !10317
  ret i32 %conv, !dbg !10318
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #0 !dbg !10319 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10320, metadata !DIExpression()), !dbg !10321
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10322
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !10323
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10324
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #11, !dbg !10325
  ret void, !dbg !10326
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !10327 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10328, metadata !DIExpression()), !dbg !10329
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10330
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !10332
  br i1 %call, label %if.end, label %if.then, !dbg !10333

if.then:                                          ; preds = %entry
  br label %return, !dbg !10334

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10335
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !10336
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !10336
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10337
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !10338
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10338
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !10339
  br label %return, !dbg !10340

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10340
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !10341 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10344, metadata !DIExpression()), !dbg !10345
  ret i1 true, !dbg !10346
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10347 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10348, metadata !DIExpression()), !dbg !10349
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10350, metadata !DIExpression()), !dbg !10351
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10352
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10353
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !10354
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !10355
  br label %do.body, !dbg !10356

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !10357

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !10359

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !10357

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10361
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10361
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !10361
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !10361
  br label %do.end5, !dbg !10361

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !10357

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !10363
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pagefault_disable() #0 !dbg !10364 {
entry:
  %pscr_ret__.i.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i.i, metadata !9941, metadata !DIExpression()), !dbg !10365
  %__vpp_verify.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i.i, metadata !9951, metadata !DIExpression()), !dbg !10369
  %pfo_val__.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i.i, metadata !9954, metadata !DIExpression()), !dbg !10370
  %tmp.i.i = alloca %struct.task_struct*, align 8
  %tmp1.i.i = alloca %struct.task_struct*, align 8
  store i8* null, i8** %__vpp_verify.i.i, align 8, !dbg !10369
  %0 = load i8*, i8** %__vpp_verify.i.i, align 8, !dbg !10369
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !10370, !srcloc !9959
  store i64 %1, i64* %pfo_val__.i.i, align 8, !dbg !10370
  %2 = load i64, i64* %pfo_val__.i.i, align 8, !dbg !10370
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !10370
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i.i, align 8, !dbg !10370
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i.i, align 8, !dbg !10370
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !10365
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !10365
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i.i, align 8, !dbg !10365
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i.i, align 8, !dbg !10365
  %pagefault_disabled.i = getelementptr inbounds %struct.task_struct, %struct.task_struct* %6, i32 0, i32 123, !dbg !10371
  %7 = load i32, i32* %pagefault_disabled.i, align 8, !dbg !10372
  %inc.i = add i32 %7, 1, !dbg !10372
  store i32 %inc.i, i32* %pagefault_disabled.i, align 8, !dbg !10372
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10373, !srcloc !10374
  ret void, !dbg !10375
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_dma_map(%struct.scsi_cmnd*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_sg_count(%struct.scsi_cmnd* %cmd) #0 !dbg !10376 {
entry:
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !10379, metadata !DIExpression()), !dbg !10380
  %0 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10381
  %sdb = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %0, i32 0, i32 15, !dbg !10382
  %table = getelementptr inbounds %struct.scsi_data_buffer, %struct.scsi_data_buffer* %sdb, i32 0, i32 0, !dbg !10383
  %nents = getelementptr inbounds %struct.sg_table, %struct.sg_table* %table, i32 0, i32 1, !dbg !10384
  %1 = load i32, i32* %nents, align 8, !dbg !10384
  ret i32 %1, !dbg !10385
}

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10386 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10389, metadata !DIExpression()), !dbg !10390
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10391, metadata !DIExpression()), !dbg !10392
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10393, metadata !DIExpression()), !dbg !10394
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10395
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10397
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10398
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !10399
  br i1 %call, label %if.end, label %if.then, !dbg !10400

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !10401

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10402
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10403
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !10404
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !10405
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10406
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10407
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !10408
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !10409
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10410
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10411
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !10412
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !10413
  br label %do.body, !dbg !10414

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !10415

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !10417

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !10415

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10419
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10419
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !10419
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !10419
  br label %do.end7, !dbg !10419

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !10415

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !10421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10422 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10425, metadata !DIExpression()), !dbg !10426
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10427, metadata !DIExpression()), !dbg !10428
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10429, metadata !DIExpression()), !dbg !10430
  ret i1 true, !dbg !10431
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !10432 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !10436, metadata !DIExpression()), !dbg !10437
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10438, metadata !DIExpression()), !dbg !10439
  ret i1 true, !dbg !10440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !10441 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10445, metadata !DIExpression()), !dbg !10446
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10447, metadata !DIExpression()), !dbg !10448
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10449, metadata !DIExpression()), !dbg !10450
  ret void, !dbg !10451
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mega_runpendq(%struct.adapter_t* %adapter) #0 !dbg !10452 {
entry:
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %scb = alloca %struct.scb_t*, align 8
  %pos = alloca %struct.list_head*, align 8
  %next = alloca %struct.list_head*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scb_t*, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !10453, metadata !DIExpression()), !dbg !10454
  call void @llvm.dbg.declare(metadata %struct.scb_t** %scb, metadata !10455, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos, metadata !10457, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.declare(metadata %struct.list_head** %next, metadata !10459, metadata !DIExpression()), !dbg !10460
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10461
  %pending_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %0, i32 0, i32 11, !dbg !10461
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %pending_list, i32 0, i32 0, !dbg !10461
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !10461
  store %struct.list_head* %1, %struct.list_head** %pos, align 8, !dbg !10461
  %2 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10461
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !10461
  %3 = load %struct.list_head*, %struct.list_head** %next2, align 8, !dbg !10461
  store %struct.list_head* %3, %struct.list_head** %next, align 8, !dbg !10461
  br label %for.cond, !dbg !10461

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10463
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10463
  %pending_list3 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %5, i32 0, i32 11, !dbg !10463
  %cmp = icmp ne %struct.list_head* %4, %pending_list3, !dbg !10463
  br i1 %cmp, label %for.body, label %for.end, !dbg !10461

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10465, metadata !DIExpression()), !dbg !10468
  %6 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10468
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !10468
  store i8* %7, i8** %__mptr, align 8, !dbg !10468
  br label %do.body, !dbg !10468

do.body:                                          ; preds = %for.body
  br label %do.end, !dbg !10469

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !10468
  %add.ptr = getelementptr i8, i8* %8, i64 -8, !dbg !10468
  %9 = bitcast i8* %add.ptr to %struct.scb_t*, !dbg !10468
  store %struct.scb_t* %9, %struct.scb_t** %tmp, align 8, !dbg !10469
  %10 = load %struct.scb_t*, %struct.scb_t** %tmp, align 8, !dbg !10468
  store %struct.scb_t* %10, %struct.scb_t** %scb, align 8, !dbg !10471
  %11 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !10472
  %state = getelementptr inbounds %struct.scb_t, %struct.scb_t* %11, i32 0, i32 1, !dbg !10474
  %12 = load i32, i32* %state, align 4, !dbg !10474
  %and = and i32 %12, 4, !dbg !10475
  %tobool = icmp ne i32 %and, 0, !dbg !10475
  br i1 %tobool, label %if.end6, label %if.then, !dbg !10476

if.then:                                          ; preds = %do.end
  %13 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10477
  %14 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !10480
  %call = call i32 @issue_scb(%struct.adapter_t* %13, %struct.scb_t* %14) #11, !dbg !10481
  %cmp4 = icmp ne i32 %call, 0, !dbg !10482
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !10483

if.then5:                                         ; preds = %if.then
  br label %return, !dbg !10484

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !10485

if.end6:                                          ; preds = %if.end, %do.end
  br label %for.inc, !dbg !10486

for.inc:                                          ; preds = %if.end6
  %15 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10463
  store %struct.list_head* %15, %struct.list_head** %pos, align 8, !dbg !10463
  %16 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10463
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %16, i32 0, i32 0, !dbg !10463
  %17 = load %struct.list_head*, %struct.list_head** %next7, align 8, !dbg !10463
  store %struct.list_head* %17, %struct.list_head** %next, align 8, !dbg !10463
  br label %for.cond, !dbg !10463, !llvm.loop !10487

for.end:                                          ; preds = %for.cond
  br label %return, !dbg !10489

return:                                           ; preds = %for.end, %if.then5
  ret void, !dbg !10490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @issue_scb(%struct.adapter_t* %adapter, %struct.scb_t* %scb) #0 !dbg !10491 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !10494, metadata !DIExpression()), !dbg !10498
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7437, metadata !DIExpression()), !dbg !10502
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7441, metadata !DIExpression()), !dbg !10504
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10505, metadata !DIExpression()), !dbg !10506
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %scb.addr = alloca %struct.scb_t*, align 8
  %mbox64 = alloca %struct.mbox64_t*, align 8
  %mbox = alloca %struct.mbox_t*, align 8
  %i = alloca i32, align 4
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !10507, metadata !DIExpression()), !dbg !10508
  store %struct.scb_t* %scb, %struct.scb_t** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scb_t** %scb.addr, metadata !10509, metadata !DIExpression()), !dbg !10510
  call void @llvm.dbg.declare(metadata %struct.mbox64_t** %mbox64, metadata !10511, metadata !DIExpression()), !dbg !10512
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10513
  %mbox641 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %0, i32 0, i32 6, !dbg !10514
  %1 = load %struct.mbox64_t*, %struct.mbox64_t** %mbox641, align 8, !dbg !10514
  store %struct.mbox64_t* %1, %struct.mbox64_t** %mbox64, align 8, !dbg !10512
  call void @llvm.dbg.declare(metadata %struct.mbox_t** %mbox, metadata !10515, metadata !DIExpression()), !dbg !10516
  %2 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10517
  %mbox2 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %2, i32 0, i32 7, !dbg !10518
  %3 = load %struct.mbox_t*, %struct.mbox_t** %mbox2, align 8, !dbg !10518
  store %struct.mbox_t* %3, %struct.mbox_t** %mbox, align 8, !dbg !10516
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10519, metadata !DIExpression()), !dbg !10520
  store i32 0, i32* %i, align 4, !dbg !10520
  %4 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !10521
  %m_in = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %4, i32 0, i32 1, !dbg !10521
  %busy = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in, i32 0, i32 0, !dbg !10521
  %5 = load volatile i8, i8* %busy, align 1, !dbg !10521
  %tobool = icmp ne i8 %5, 0, !dbg !10521
  %lnot = xor i1 %tobool, true, !dbg !10521
  %lnot3 = xor i1 %lnot, true, !dbg !10521
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !10521
  %conv = sext i32 %lnot.ext to i64, !dbg !10521
  %tobool4 = icmp ne i64 %conv, 0, !dbg !10521
  br i1 %tobool4, label %if.then, label %if.end15, !dbg !10523

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10524

do.body:                                          ; preds = %land.end, %if.then
  call void @__const_udelay(i64 4295) #11, !dbg !10526
  %6 = load i32, i32* %i, align 4, !dbg !10532
  %inc = add i32 %6, 1, !dbg !10532
  store i32 %inc, i32* %i, align 4, !dbg !10532
  br label %do.cond, !dbg !10533

do.cond:                                          ; preds = %do.body
  %7 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !10534
  %m_in5 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %7, i32 0, i32 1, !dbg !10535
  %busy6 = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in5, i32 0, i32 0, !dbg !10536
  %8 = load volatile i8, i8* %busy6, align 1, !dbg !10536
  %conv7 = zext i8 %8 to i32, !dbg !10534
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !10534
  br i1 %tobool8, label %land.rhs, label %land.end, !dbg !10537

land.rhs:                                         ; preds = %do.cond
  %9 = load i32, i32* %i, align 4, !dbg !10538
  %10 = load i16, i16* @max_mbox_busy_wait, align 2, !dbg !10539
  %conv9 = zext i16 %10 to i32, !dbg !10539
  %cmp = icmp ult i32 %9, %conv9, !dbg !10540
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %11 = phi i1 [ false, %do.cond ], [ %cmp, %land.rhs ], !dbg !10541
  br i1 %11, label %do.body, label %do.end, !dbg !10533, !llvm.loop !10542

do.end:                                           ; preds = %land.end
  %12 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !10544
  %m_in11 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %12, i32 0, i32 1, !dbg !10546
  %busy12 = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in11, i32 0, i32 0, !dbg !10547
  %13 = load volatile i8, i8* %busy12, align 1, !dbg !10547
  %tobool13 = icmp ne i8 %13, 0, !dbg !10544
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !10548

if.then14:                                        ; preds = %do.end
  store i32 -1, i32* %retval, align 4, !dbg !10549
  br label %return, !dbg !10549

if.end:                                           ; preds = %do.end
  br label %if.end15, !dbg !10550

if.end15:                                         ; preds = %if.end, %entry
  %14 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !10551
  %m_out = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %14, i32 0, i32 0, !dbg !10552
  %15 = bitcast %struct.mbox_out* %m_out to i8*, !dbg !10553
  %16 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10554
  %raw_mbox = getelementptr inbounds %struct.scb_t, %struct.scb_t* %16, i32 0, i32 3, !dbg !10555
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %raw_mbox, i64 0, i64 0, !dbg !10553
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 8 %arraydecay, i64 15, i1 false), !dbg !10553
  %17 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10556
  %idx = getelementptr inbounds %struct.scb_t, %struct.scb_t* %17, i32 0, i32 0, !dbg !10557
  %18 = load i32, i32* %idx, align 8, !dbg !10557
  %conv16 = trunc i32 %18 to i8, !dbg !10556
  %19 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !10558
  %m_out17 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %19, i32 0, i32 0, !dbg !10559
  %cmdid = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out17, i32 0, i32 1, !dbg !10560
  store volatile i8 %conv16, i8* %cmdid, align 1, !dbg !10561
  %20 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !10562
  %m_in18 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %20, i32 0, i32 1, !dbg !10563
  %busy19 = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in18, i32 0, i32 0, !dbg !10564
  store volatile i8 1, i8* %busy19, align 1, !dbg !10565
  %21 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10566
  %pend_cmds = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %21, i32 0, i32 19, !dbg !10567
  store %struct.atomic_t* %pend_cmds, %struct.atomic_t** %v.addr.i, align 8
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10568
  %23 = bitcast %struct.atomic_t* %22 to i8*, !dbg !10568
  store i8* %23, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %24 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10569
  %25 = load i64, i64* %size.addr.i.i, align 8, !dbg !10570
  %conv.i.i = trunc i64 %25 to i32, !dbg !10570
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %24, i32 %conv.i.i) #13, !dbg !10571
  %26 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10572
  %27 = load i64, i64* %size.addr.i.i, align 8, !dbg !10572
  call void @kcsan_check_access(i8* %26, i64 %27, i32 7) #13, !dbg !10572
  %28 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10573
  store %struct.atomic_t* %28, %struct.atomic_t** %v.addr.i1.i, align 8
  %29 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10574
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %29, i32 0, i32 0, !dbg !10575
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #7, !dbg !10576, !srcloc !10577
  %30 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !10578
  %m_out20 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %30, i32 0, i32 0, !dbg !10579
  %cmd = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out20, i32 0, i32 0, !dbg !10580
  %31 = load volatile i8, i8* %cmd, align 1, !dbg !10580
  %conv21 = zext i8 %31 to i32, !dbg !10578
  switch i32 %conv21, label %sw.default [
    i32 167, label %sw.bb
    i32 168, label %sw.bb
    i32 195, label %sw.bb
    i32 227, label %sw.bb
  ], !dbg !10581

sw.bb:                                            ; preds = %if.end15, %if.end15, %if.end15, %if.end15
  %32 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !10582
  %m_out22 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %32, i32 0, i32 0, !dbg !10584
  %xferaddr = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out22, i32 0, i32 4, !dbg !10585
  %33 = load volatile i32, i32* %xferaddr, align 1, !dbg !10585
  %34 = load %struct.mbox64_t*, %struct.mbox64_t** %mbox64, align 8, !dbg !10586
  %xfer_segment_lo = getelementptr inbounds %struct.mbox64_t, %struct.mbox64_t* %34, i32 0, i32 0, !dbg !10587
  store volatile i32 %33, i32* %xfer_segment_lo, align 1, !dbg !10588
  %35 = load %struct.mbox64_t*, %struct.mbox64_t** %mbox64, align 8, !dbg !10589
  %xfer_segment_hi = getelementptr inbounds %struct.mbox64_t, %struct.mbox64_t* %35, i32 0, i32 1, !dbg !10590
  store volatile i32 0, i32* %xfer_segment_hi, align 1, !dbg !10591
  %36 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !10592
  %m_out23 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %36, i32 0, i32 0, !dbg !10593
  %xferaddr24 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out23, i32 0, i32 4, !dbg !10594
  store volatile i32 -1, i32* %xferaddr24, align 1, !dbg !10595
  br label %sw.epilog, !dbg !10596

sw.default:                                       ; preds = %if.end15
  %37 = load %struct.mbox64_t*, %struct.mbox64_t** %mbox64, align 8, !dbg !10597
  %xfer_segment_lo25 = getelementptr inbounds %struct.mbox64_t, %struct.mbox64_t* %37, i32 0, i32 0, !dbg !10598
  store volatile i32 0, i32* %xfer_segment_lo25, align 1, !dbg !10599
  %38 = load %struct.mbox64_t*, %struct.mbox64_t** %mbox64, align 8, !dbg !10600
  %xfer_segment_hi26 = getelementptr inbounds %struct.mbox64_t, %struct.mbox64_t* %38, i32 0, i32 1, !dbg !10601
  store volatile i32 0, i32* %xfer_segment_hi26, align 1, !dbg !10602
  br label %sw.epilog, !dbg !10603

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %39 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10604
  %state = getelementptr inbounds %struct.scb_t, %struct.scb_t* %39, i32 0, i32 1, !dbg !10605
  %40 = load i32, i32* %state, align 4, !dbg !10606
  %or = or i32 %40, 4, !dbg !10606
  store i32 %or, i32* %state, align 4, !dbg !10606
  %41 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10607
  %flag = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %41, i32 0, i32 1, !dbg !10607
  %42 = load i32, i32* %flag, align 4, !dbg !10607
  %conv27 = zext i32 %42 to i64, !dbg !10607
  %and = and i64 %conv27, 536870912, !dbg !10607
  %tobool28 = icmp ne i64 %and, 0, !dbg !10607
  %lnot29 = xor i1 %tobool28, true, !dbg !10607
  %lnot31 = xor i1 %lnot29, true, !dbg !10607
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !10607
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !10607
  %tobool34 = icmp ne i64 %conv33, 0, !dbg !10607
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !10609

if.then35:                                        ; preds = %sw.epilog
  %43 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !10610
  %m_in36 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %43, i32 0, i32 1, !dbg !10612
  %poll = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in36, i32 0, i32 4, !dbg !10613
  store volatile i8 0, i8* %poll, align 1, !dbg !10614
  %44 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !10615
  %m_in37 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %44, i32 0, i32 1, !dbg !10616
  %ack = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in37, i32 0, i32 5, !dbg !10617
  store volatile i8 0, i8* %ack, align 1, !dbg !10618
  %45 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10619
  %mbox_dma = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %45, i32 0, i32 8, !dbg !10619
  %46 = load i64, i64* %mbox_dma, align 8, !dbg !10619
  %or38 = or i64 %46, 1, !dbg !10619
  %conv39 = trunc i64 %or38 to i32, !dbg !10619
  %47 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10619
  %mmio_base = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %47, i32 0, i32 3, !dbg !10619
  %48 = load i8*, i8** %mmio_base, align 8, !dbg !10619
  %add.ptr = getelementptr i8, i8* %48, i64 32, !dbg !10619
  call void @writel(i32 %conv39, i8* %add.ptr) #11, !dbg !10619
  br label %if.end44, !dbg !10620

if.else:                                          ; preds = %sw.epilog
  %49 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10621
  %base = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %49, i32 0, i32 2, !dbg !10621
  %50 = load i64, i64* %base, align 8, !dbg !10621
  %add = add i64 %50, 1, !dbg !10621
  %conv40 = trunc i64 %add to i32, !dbg !10621
  call void @outb_p(i8 zeroext -64, i32 %conv40) #11, !dbg !10621
  %51 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10623
  %base41 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %51, i32 0, i32 2, !dbg !10623
  %52 = load i64, i64* %base41, align 8, !dbg !10623
  %add42 = add i64 %52, 0, !dbg !10623
  %conv43 = trunc i64 %add42 to i32, !dbg !10623
  call void @outb_p(i8 zeroext 16, i32 %conv43) #11, !dbg !10623
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then35
  store i32 0, i32* %retval, align 4, !dbg !10624
  br label %return, !dbg !10624

return:                                           ; preds = %if.end44, %if.then14
  %53 = load i32, i32* %retval, align 4, !dbg !10625
  ret i32 %53, !dbg !10625
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #0 !dbg !10626 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10631, metadata !DIExpression()), !dbg !10632
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !10633, metadata !DIExpression()), !dbg !10632
  %0 = load i32, i32* %val.addr, align 4, !dbg !10632
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !10632
  %2 = bitcast i8* %1 to i32*, !dbg !10632
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #7, !dbg !10632, !srcloc !10634
  ret void, !dbg !10632
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb_p(i8 zeroext %value, i32 %port) #0 !dbg !10635 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10638, metadata !DIExpression()), !dbg !10639
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !10640, metadata !DIExpression()), !dbg !10639
  %0 = load i8, i8* %value.addr, align 1, !dbg !10639
  %1 = load i32, i32* %port.addr, align 4, !dbg !10639
  call void @outb(i8 zeroext %0, i32 %1) #11, !dbg !10639
  call void @slow_down_io() #11, !dbg !10639
  ret void, !dbg !10639
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !10641 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !10642, metadata !DIExpression()), !dbg !10643
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10644, metadata !DIExpression()), !dbg !10645
  ret i1 true, !dbg !10646
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb(i8 zeroext %value, i32 %port) #0 !dbg !10647 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10648, metadata !DIExpression()), !dbg !10649
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !10650, metadata !DIExpression()), !dbg !10649
  %0 = load i8, i8* %value.addr, align 1, !dbg !10649
  %1 = load i32, i32* %port.addr, align 4, !dbg !10649
  call void asm sideeffect "outb ${0:b}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i8 %0, i32 %1) #7, !dbg !10649, !srcloc !10651
  ret void, !dbg !10649
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @slow_down_io() #0 !dbg !10652 {
entry:
  %0 = load void ()*, void ()** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 2, i32 0), align 8, !dbg !10653
  call void %0() #11, !dbg !10654
  ret void, !dbg !10655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !10656 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !10659, metadata !DIExpression()), !dbg !10660
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10661, metadata !DIExpression()), !dbg !10663
  %0 = load i64, i64* %__edi, align 8, !dbg !10663
  store i64 %0, i64* %__edi, align 8, !dbg !10663
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10664, metadata !DIExpression()), !dbg !10663
  %1 = load i64, i64* %__esi, align 8, !dbg !10663
  store i64 %1, i64* %__esi, align 8, !dbg !10663
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10665, metadata !DIExpression()), !dbg !10663
  %2 = load i64, i64* %__edx, align 8, !dbg !10663
  store i64 %2, i64* %__edx, align 8, !dbg !10663
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10666, metadata !DIExpression()), !dbg !10663
  %3 = load i64, i64* %__ecx, align 8, !dbg !10663
  store i64 %3, i64* %__ecx, align 8, !dbg !10663
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10667, metadata !DIExpression()), !dbg !10663
  %4 = load i64, i64* %__eax, align 8, !dbg !10663
  store i64 %4, i64* %__eax, align 8, !dbg !10663
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !10663
  %6 = call i64 @llvm.read_register.i64(metadata !6170), !dbg !10663
  %7 = load i64, i64* %f.addr, align 8, !dbg !10663
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !10663, !srcloc !10668
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !10663
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !10663
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10663
  call void @llvm.write_register.i64(metadata !6170, i64 %asmresult1), !dbg !10663
  ret void, !dbg !10669
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @megaraid_abort_and_reset(%struct.adapter_t* %adapter, %struct.scsi_cmnd* %cmd, i32 %aor) #0 !dbg !10670 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %aor.addr = alloca i32, align 4
  %pos = alloca %struct.list_head*, align 8
  %next = alloca %struct.list_head*, align 8
  %scb = alloca %struct.scb_t*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scb_t*, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !10671, metadata !DIExpression()), !dbg !10672
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !10673, metadata !DIExpression()), !dbg !10674
  store i32 %aor, i32* %aor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %aor.addr, metadata !10675, metadata !DIExpression()), !dbg !10676
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos, metadata !10677, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.declare(metadata %struct.list_head** %next, metadata !10679, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.declare(metadata %struct.scb_t** %scb, metadata !10681, metadata !DIExpression()), !dbg !10682
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10683
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %0, i32 0, i32 9, !dbg !10683
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !10683
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !10683
  %2 = load i32, i32* %aor.addr, align 4, !dbg !10683
  %cmp = icmp eq i32 %2, 8, !dbg !10683
  %3 = zext i1 %cmp to i64, !dbg !10683
  %cond = select i1 %cmp, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), !dbg !10683
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10683
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 14, !dbg !10683
  %5 = load i8*, i8** %cmnd, align 8, !dbg !10683
  %arrayidx = getelementptr i8, i8* %5, i64 0, !dbg !10683
  %6 = load i8, i8* %arrayidx, align 1, !dbg !10683
  %conv = zext i8 %6 to i32, !dbg !10683
  %7 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10683
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %7, i32 0, i32 1, !dbg !10683
  %8 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !10683
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %8, i32 0, i32 17, !dbg !10683
  %9 = load i32, i32* %channel, align 4, !dbg !10683
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10683
  %device2 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %10, i32 0, i32 1, !dbg !10683
  %11 = load %struct.scsi_device*, %struct.scsi_device** %device2, align 8, !dbg !10683
  %id = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %11, i32 0, i32 16, !dbg !10683
  %12 = load i32, i32* %id, align 8, !dbg !10683
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10683
  %device3 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %13, i32 0, i32 1, !dbg !10683
  %14 = load %struct.scsi_device*, %struct.scsi_device** %device3, align 8, !dbg !10683
  %lun = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %14, i32 0, i32 18, !dbg !10683
  %15 = load i64, i64* %lun, align 8, !dbg !10683
  %conv4 = trunc i64 %15 to i32, !dbg !10683
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.26, i64 0, i64 0), i8* %cond, i32 %conv, i32 %9, i32 %12, i32 %conv4) #12, !dbg !10683
  %16 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10684
  %pending_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %16, i32 0, i32 11, !dbg !10686
  %call = call i32 @list_empty(%struct.list_head* %pending_list) #11, !dbg !10687
  %tobool = icmp ne i32 %call, 0, !dbg !10687
  br i1 %tobool, label %if.then, label %if.end, !dbg !10688

if.then:                                          ; preds = %entry
  store i32 8195, i32* %retval, align 4, !dbg !10689
  br label %return, !dbg !10689

if.end:                                           ; preds = %entry
  %17 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10690
  %pending_list5 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %17, i32 0, i32 11, !dbg !10690
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %pending_list5, i32 0, i32 0, !dbg !10690
  %18 = load %struct.list_head*, %struct.list_head** %next6, align 8, !dbg !10690
  store %struct.list_head* %18, %struct.list_head** %pos, align 8, !dbg !10690
  %19 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10690
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %19, i32 0, i32 0, !dbg !10690
  %20 = load %struct.list_head*, %struct.list_head** %next7, align 8, !dbg !10690
  store %struct.list_head* %20, %struct.list_head** %next, align 8, !dbg !10690
  br label %for.cond, !dbg !10690

for.cond:                                         ; preds = %for.inc, %if.end
  %21 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10692
  %22 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10692
  %pending_list8 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %22, i32 0, i32 11, !dbg !10692
  %cmp9 = icmp ne %struct.list_head* %21, %pending_list8, !dbg !10692
  br i1 %cmp9, label %for.body, label %for.end, !dbg !10690

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10694, metadata !DIExpression()), !dbg !10697
  %23 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10697
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !10697
  store i8* %24, i8** %__mptr, align 8, !dbg !10697
  br label %do.body, !dbg !10697

do.body:                                          ; preds = %for.body
  br label %do.end, !dbg !10698

do.end:                                           ; preds = %do.body
  %25 = load i8*, i8** %__mptr, align 8, !dbg !10697
  %add.ptr = getelementptr i8, i8* %25, i64 -8, !dbg !10697
  %26 = bitcast i8* %add.ptr to %struct.scb_t*, !dbg !10697
  store %struct.scb_t* %26, %struct.scb_t** %tmp, align 8, !dbg !10698
  %27 = load %struct.scb_t*, %struct.scb_t** %tmp, align 8, !dbg !10697
  store %struct.scb_t* %27, %struct.scb_t** %scb, align 8, !dbg !10700
  %28 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !10701
  %cmd11 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %28, i32 0, i32 6, !dbg !10703
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd11, align 8, !dbg !10703
  %30 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10704
  %cmp12 = icmp eq %struct.scsi_cmnd* %29, %30, !dbg !10705
  br i1 %cmp12, label %if.then14, label %if.end35, !dbg !10706

if.then14:                                        ; preds = %do.end
  %31 = load i32, i32* %aor.addr, align 4, !dbg !10707
  %32 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !10709
  %state = getelementptr inbounds %struct.scb_t, %struct.scb_t* %32, i32 0, i32 1, !dbg !10710
  %33 = load i32, i32* %state, align 4, !dbg !10711
  %or = or i32 %33, %31, !dbg !10711
  store i32 %or, i32* %state, align 4, !dbg !10711
  %34 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !10712
  %state15 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %34, i32 0, i32 1, !dbg !10714
  %35 = load i32, i32* %state15, align 4, !dbg !10714
  %and = and i32 %35, 4, !dbg !10715
  %tobool16 = icmp ne i32 %and, 0, !dbg !10715
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !10716

if.then17:                                        ; preds = %if.then14
  %36 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10717
  %dev18 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %36, i32 0, i32 9, !dbg !10717
  %37 = load %struct.pci_dev*, %struct.pci_dev** %dev18, align 8, !dbg !10717
  %dev19 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 41, !dbg !10717
  %38 = load i32, i32* %aor.addr, align 4, !dbg !10717
  %cmp20 = icmp eq i32 %38, 8, !dbg !10717
  %39 = zext i1 %cmp20 to i64, !dbg !10717
  %cond22 = select i1 %cmp20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), !dbg !10717
  %40 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !10717
  %idx = getelementptr inbounds %struct.scb_t, %struct.scb_t* %40, i32 0, i32 0, !dbg !10717
  %41 = load i32, i32* %idx, align 8, !dbg !10717
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev19, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0), i8* %cond22, i32 %41) #12, !dbg !10717
  store i32 8195, i32* %retval, align 4, !dbg !10719
  br label %return, !dbg !10719

if.else:                                          ; preds = %if.then14
  %42 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10720
  %dev23 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %42, i32 0, i32 9, !dbg !10720
  %43 = load %struct.pci_dev*, %struct.pci_dev** %dev23, align 8, !dbg !10720
  %dev24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 41, !dbg !10720
  %44 = load i32, i32* %aor.addr, align 4, !dbg !10720
  %cmp25 = icmp eq i32 %44, 8, !dbg !10720
  %45 = zext i1 %cmp25 to i64, !dbg !10720
  %cond27 = select i1 %cmp25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), !dbg !10720
  %46 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !10720
  %idx28 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %46, i32 0, i32 0, !dbg !10720
  %47 = load i32, i32* %idx28, align 8, !dbg !10720
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30, i64 0, i64 0), i8* %cond27, i32 %47) #12, !dbg !10720
  %48 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10722
  %49 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !10723
  call void @mega_free_scb(%struct.adapter_t* %48, %struct.scb_t* %49) #11, !dbg !10724
  %50 = load i32, i32* %aor.addr, align 4, !dbg !10725
  %cmp29 = icmp eq i32 %50, 8, !dbg !10727
  br i1 %cmp29, label %if.then31, label %if.else32, !dbg !10728

if.then31:                                        ; preds = %if.else
  %51 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10729
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %51, i32 0, i32 24, !dbg !10731
  store i32 327680, i32* %result, align 8, !dbg !10732
  br label %if.end34, !dbg !10733

if.else32:                                        ; preds = %if.else
  %52 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10734
  %result33 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %52, i32 0, i32 24, !dbg !10736
  store i32 524288, i32* %result33, align 8, !dbg !10737
  br label %if.end34

if.end34:                                         ; preds = %if.else32, %if.then31
  %53 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !10738
  %SCp = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %53, i32 0, i32 22, !dbg !10738
  %54 = bitcast %struct.scsi_pointer* %SCp to %struct.list_head*, !dbg !10738
  %55 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10739
  %completed_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %55, i32 0, i32 12, !dbg !10740
  call void @list_add_tail(%struct.list_head* %54, %struct.list_head* %completed_list) #11, !dbg !10741
  store i32 8194, i32* %retval, align 4, !dbg !10742
  br label %return, !dbg !10742

if.end35:                                         ; preds = %do.end
  br label %for.inc, !dbg !10743

for.inc:                                          ; preds = %if.end35
  %56 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10692
  store %struct.list_head* %56, %struct.list_head** %pos, align 8, !dbg !10692
  %57 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10692
  %next36 = getelementptr inbounds %struct.list_head, %struct.list_head* %57, i32 0, i32 0, !dbg !10692
  %58 = load %struct.list_head*, %struct.list_head** %next36, align 8, !dbg !10692
  store %struct.list_head* %58, %struct.list_head** %next, align 8, !dbg !10692
  br label %for.cond, !dbg !10692, !llvm.loop !10744

for.end:                                          ; preds = %for.cond
  store i32 8195, i32* %retval, align 4, !dbg !10746
  br label %return, !dbg !10746

return:                                           ; preds = %for.end, %if.end34, %if.then17, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !10747
  ret i32 %59, !dbg !10747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mega_rundoneq(%struct.adapter_t* %adapter) #0 !dbg !10748 {
entry:
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %pos = alloca %struct.list_head*, align 8
  %spos = alloca %struct.scsi_pointer*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.scsi_cmnd*, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !10749, metadata !DIExpression()), !dbg !10750
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !10751, metadata !DIExpression()), !dbg !10752
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos, metadata !10753, metadata !DIExpression()), !dbg !10754
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10755
  %completed_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %0, i32 0, i32 12, !dbg !10755
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %completed_list, i32 0, i32 0, !dbg !10755
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10755
  store %struct.list_head* %1, %struct.list_head** %pos, align 8, !dbg !10755
  br label %for.cond, !dbg !10755

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10757
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10757
  %completed_list1 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %3, i32 0, i32 12, !dbg !10757
  %cmp = icmp ne %struct.list_head* %2, %completed_list1, !dbg !10757
  br i1 %cmp, label %for.body, label %for.end, !dbg !10755

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.scsi_pointer** %spos, metadata !10759, metadata !DIExpression()), !dbg !10761
  %4 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10762
  %5 = bitcast %struct.list_head* %4 to %struct.scsi_pointer*, !dbg !10763
  store %struct.scsi_pointer* %5, %struct.scsi_pointer** %spos, align 8, !dbg !10761
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10764, metadata !DIExpression()), !dbg !10766
  %6 = load %struct.scsi_pointer*, %struct.scsi_pointer** %spos, align 8, !dbg !10766
  %7 = bitcast %struct.scsi_pointer* %6 to i8*, !dbg !10766
  store i8* %7, i8** %__mptr, align 8, !dbg !10766
  br label %do.body, !dbg !10766

do.body:                                          ; preds = %for.body
  br label %do.end, !dbg !10767

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !10766
  %add.ptr = getelementptr i8, i8* %8, i64 -296, !dbg !10766
  %9 = bitcast i8* %add.ptr to %struct.scsi_cmnd*, !dbg !10766
  store %struct.scsi_cmnd* %9, %struct.scsi_cmnd** %tmp, align 8, !dbg !10767
  %10 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %tmp, align 8, !dbg !10766
  store %struct.scsi_cmnd* %10, %struct.scsi_cmnd** %cmd, align 8, !dbg !10769
  %11 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10770
  %scsi_done = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %11, i32 0, i32 21, !dbg !10771
  %12 = load void (%struct.scsi_cmnd*)*, void (%struct.scsi_cmnd*)** %scsi_done, align 8, !dbg !10771
  %13 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10772
  call void %12(%struct.scsi_cmnd* %13) #11, !dbg !10770
  br label %for.inc, !dbg !10773

for.inc:                                          ; preds = %do.end
  %14 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10757
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %14, i32 0, i32 0, !dbg !10757
  %15 = load %struct.list_head*, %struct.list_head** %next2, align 8, !dbg !10757
  store %struct.list_head* %15, %struct.list_head** %pos, align 8, !dbg !10757
  br label %for.cond, !dbg !10757, !llvm.loop !10774

for.end:                                          ; preds = %for.cond
  %16 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10776
  %completed_list3 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %16, i32 0, i32 12, !dbg !10777
  call void @INIT_LIST_HEAD(%struct.list_head* %completed_list3) #11, !dbg !10778
  ret void, !dbg !10779
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mega_free_scb(%struct.adapter_t* %adapter, %struct.scb_t* %scb) #0 !dbg !10780 {
entry:
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %scb.addr = alloca %struct.scb_t*, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !10783, metadata !DIExpression()), !dbg !10784
  store %struct.scb_t* %scb, %struct.scb_t** %scb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scb_t** %scb.addr, metadata !10785, metadata !DIExpression()), !dbg !10786
  %0 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10787
  %dma_type = getelementptr inbounds %struct.scb_t, %struct.scb_t* %0, i32 0, i32 4, !dbg !10788
  %1 = load i32, i32* %dma_type, align 4, !dbg !10788
  switch i32 %1, label %sw.default [
    i32 65535, label %sw.bb
    i32 2, label %sw.bb1
  ], !dbg !10789

sw.bb:                                            ; preds = %entry
  br label %sw.epilog, !dbg !10790

sw.bb1:                                           ; preds = %entry
  %2 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10792
  %cmd = getelementptr inbounds %struct.scb_t, %struct.scb_t* %2, i32 0, i32 6, !dbg !10793
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !10793
  call void @scsi_dma_unmap(%struct.scsi_cmnd* %3) #11, !dbg !10794
  br label %sw.epilog, !dbg !10795

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !10796

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  %4 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10797
  %list = getelementptr inbounds %struct.scb_t, %struct.scb_t* %4, i32 0, i32 2, !dbg !10798
  call void @list_del_init(%struct.list_head* %list) #11, !dbg !10799
  %5 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10800
  %state = getelementptr inbounds %struct.scb_t, %struct.scb_t* %5, i32 0, i32 1, !dbg !10801
  store i32 0, i32* %state, align 4, !dbg !10802
  %6 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10803
  %cmd2 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %6, i32 0, i32 6, !dbg !10804
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %cmd2, align 8, !dbg !10805
  %7 = load %struct.scb_t*, %struct.scb_t** %scb.addr, align 8, !dbg !10806
  %list3 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %7, i32 0, i32 2, !dbg !10807
  %8 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10808
  %free_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %8, i32 0, i32 10, !dbg !10809
  call void @list_add(%struct.list_head* %list3, %struct.list_head* %free_list) #11, !dbg !10810
  ret void, !dbg !10811
}

; Function Attrs: noredzone
declare dso_local void @scsi_dma_unmap(%struct.scsi_cmnd*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !10812 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10813, metadata !DIExpression()), !dbg !10814
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !10815, metadata !DIExpression()), !dbg !10816
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10817
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10818
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10819
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !10820
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10820
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !10821
  ret void, !dbg !10822
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_internal_command(%struct.adapter_t* %adapter, %struct.megacmd_t* %mc, %struct.mega_passthru* %pthru) #0 !dbg !10823 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7407, metadata !DIExpression()), !dbg !10826
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7419, metadata !DIExpression()), !dbg !10830
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7423, metadata !DIExpression()), !dbg !10832
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7425, metadata !DIExpression()), !dbg !10833
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !7447, metadata !DIExpression()), !dbg !10834
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7453, metadata !DIExpression()), !dbg !10836
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6303, metadata !DIExpression()), !dbg !10837
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %mc.addr = alloca %struct.megacmd_t*, align 8
  %pthru.addr = alloca %struct.mega_passthru*, align 8
  %flags = alloca i64, align 8
  %scb = alloca %struct.scb_t*, align 8
  %rval = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !10844, metadata !DIExpression()), !dbg !10845
  store %struct.megacmd_t* %mc, %struct.megacmd_t** %mc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.megacmd_t** %mc.addr, metadata !10846, metadata !DIExpression()), !dbg !10847
  store %struct.mega_passthru* %pthru, %struct.mega_passthru** %pthru.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mega_passthru** %pthru.addr, metadata !10848, metadata !DIExpression()), !dbg !10849
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10850, metadata !DIExpression()), !dbg !10851
  call void @llvm.dbg.declare(metadata %struct.scb_t** %scb, metadata !10852, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.declare(metadata i32* %rval, metadata !10854, metadata !DIExpression()), !dbg !10855
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10856
  %int_mtx = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %0, i32 0, i32 39, !dbg !10857
  call void @mutex_lock(%struct.mutex* %int_mtx) #11, !dbg !10858
  %1 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10859
  %int_scb = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %1, i32 0, i32 38, !dbg !10860
  store %struct.scb_t* %int_scb, %struct.scb_t** %scb, align 8, !dbg !10861
  %2 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !10862
  %3 = bitcast %struct.scb_t* %2 to i8*, !dbg !10863
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 184, i1 false), !dbg !10863
  %4 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !10864
  %idx = getelementptr inbounds %struct.scb_t, %struct.scb_t* %4, i32 0, i32 0, !dbg !10865
  store i32 127, i32* %idx, align 8, !dbg !10866
  %5 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !10867
  %state = getelementptr inbounds %struct.scb_t, %struct.scb_t* %5, i32 0, i32 1, !dbg !10868
  %6 = load i32, i32* %state, align 4, !dbg !10869
  %or = or i32 %6, 3, !dbg !10869
  store i32 %or, i32* %state, align 4, !dbg !10869
  %7 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !10870
  %raw_mbox = getelementptr inbounds %struct.scb_t, %struct.scb_t* %7, i32 0, i32 3, !dbg !10871
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %raw_mbox, i64 0, i64 0, !dbg !10872
  %8 = load %struct.megacmd_t*, %struct.megacmd_t** %mc.addr, align 8, !dbg !10873
  %9 = bitcast %struct.megacmd_t* %8 to i8*, !dbg !10872
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 %9, i64 18, i1 false), !dbg !10872
  %10 = load %struct.megacmd_t*, %struct.megacmd_t** %mc.addr, align 8, !dbg !10874
  %cmd = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %10, i32 0, i32 0, !dbg !10876
  %11 = load i8, i8* %cmd, align 1, !dbg !10876
  %conv = zext i8 %11 to i32, !dbg !10874
  %cmp = icmp eq i32 %conv, 3, !dbg !10877
  br i1 %cmp, label %if.then, label %if.end, !dbg !10878

if.then:                                          ; preds = %entry
  %12 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru.addr, align 8, !dbg !10879
  %13 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !10880
  %pthru2 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %13, i32 0, i32 12, !dbg !10881
  store %struct.mega_passthru* %12, %struct.mega_passthru** %pthru2, align 8, !dbg !10882
  br label %if.end, !dbg !10880

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !10883

do.body:                                          ; preds = %if.end
  br label %do.body3, !dbg !10884

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10885, metadata !DIExpression()), !dbg !10887
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10888, metadata !DIExpression()), !dbg !10887
  %cmp4 = icmp eq i64* %__dummy, %__dummy2, !dbg !10887
  %conv5 = zext i1 %cmp4 to i32, !dbg !10887
  store i32 1, i32* %tmp, align 4, !dbg !10887
  %14 = load i32, i32* %tmp, align 4, !dbg !10887
  br label %do.body6, !dbg !10889

do.body6:                                         ; preds = %do.body3
  br label %do.body7, !dbg !10890

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !10891

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !10893, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !10897, metadata !DIExpression()), !dbg !10896
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !10896
  %conv12 = zext i1 %cmp11 to i32, !dbg !10896
  store i32 1, i32* %tmp13, align 4, !dbg !10896
  %15 = load i32, i32* %tmp13, align 4, !dbg !10896
  %call = call i64 @arch_local_irq_save() #11, !dbg !10898
  store i64 %call, i64* %flags, align 8, !dbg !10898
  br label %do.end, !dbg !10898

do.end:                                           ; preds = %do.body8
  br label %do.end14, !dbg !10891

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !10890

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10899, !srcloc !10900
  br label %do.body16, !dbg !10899

do.body16:                                        ; preds = %do.body15
  %16 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10901
  %lock = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %16, i32 0, i32 34, !dbg !10901
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10902
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !10903
  %rlock.i = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !10903
  br label %do.end18, !dbg !10901

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !10899

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !10890

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10889

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !10884

do.end22:                                         ; preds = %do.end21
  %19 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !10904
  %list = getelementptr inbounds %struct.scb_t, %struct.scb_t* %19, i32 0, i32 2, !dbg !10905
  %20 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10906
  %pending_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %20, i32 0, i32 11, !dbg !10907
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %pending_list) #11, !dbg !10908
  %21 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10909
  %quiescent = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %21, i32 0, i32 33, !dbg !10910
  store %struct.atomic_t* %quiescent, %struct.atomic_t** %v.addr.i, align 8
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10911
  %23 = bitcast %struct.atomic_t* %22 to i8*, !dbg !10911
  store i8* %23, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %24 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10912
  %25 = load i64, i64* %size.addr.i.i, align 8, !dbg !10913
  %conv.i.i = trunc i64 %25 to i32, !dbg !10913
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %24, i32 %conv.i.i) #13, !dbg !10914
  %26 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10915
  %27 = load i64, i64* %size.addr.i.i, align 8, !dbg !10915
  call void @kcsan_check_access(i8* %26, i64 %27, i32 4) #13, !dbg !10915
  %28 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10916
  store %struct.atomic_t* %28, %struct.atomic_t** %v.addr.i1.i, align 8
  %29 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10917
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %29, i32 0, i32 0, !dbg !10917
  %30 = load volatile i32, i32* %counter.i.i, align 4, !dbg !10917
  %cmp24 = icmp eq i32 %30, 0, !dbg !10918
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !10919

if.then26:                                        ; preds = %do.end22
  %31 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10920
  call void @mega_runpendq(%struct.adapter_t* %31) #11, !dbg !10921
  br label %if.end27, !dbg !10921

if.end27:                                         ; preds = %if.then26, %do.end22
  %32 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10922
  %lock28 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %32, i32 0, i32 34, !dbg !10923
  %33 = load i64, i64* %flags, align 8, !dbg !10924
  store %struct.spinlock* %lock28, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %33, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !7602, metadata !DIExpression()) #7, !dbg !10925
  call void @llvm.dbg.declare(metadata !372, metadata !7606, metadata !DIExpression()) #7, !dbg !10925
  store i32 1, i32* %tmp.i, align 4, !dbg !10925
  %34 = load i32, i32* %tmp.i, align 4, !dbg !10925
  call void @llvm.dbg.declare(metadata !372, metadata !7607, metadata !DIExpression()) #7, !dbg !10926
  call void @llvm.dbg.declare(metadata !372, metadata !7613, metadata !DIExpression()) #7, !dbg !10926
  store i32 1, i32* %tmp8.i, align 4, !dbg !10926
  %35 = load i32, i32* %tmp8.i, align 4, !dbg !10926
  %36 = load i64, i64* %flags.addr.i, align 8, !dbg !10927
  call void @arch_local_irq_restore(i64 %36) #13, !dbg !10927
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10928, !srcloc !7617
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !10929
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !10929
  %rlock.i40 = bitcast %union.anon.1* %38 to %struct.raw_spinlock*, !dbg !10929
  %39 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10930
  %int_waitq = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %39, i32 0, i32 41, !dbg !10931
  call void @wait_for_completion(%struct.completion* %int_waitq) #11, !dbg !10932
  %40 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10933
  %int_status = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %40, i32 0, i32 40, !dbg !10934
  %41 = load i32, i32* %int_status, align 8, !dbg !10934
  store i32 %41, i32* %rval, align 4, !dbg !10935
  %conv29 = trunc i32 %41 to i8, !dbg !10936
  %42 = load %struct.megacmd_t*, %struct.megacmd_t** %mc.addr, align 8, !dbg !10937
  %status = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %42, i32 0, i32 9, !dbg !10938
  store i8 %conv29, i8* %status, align 1, !dbg !10939
  %43 = load i32, i32* %rval, align 4, !dbg !10940
  %tobool = icmp ne i32 %43, 0, !dbg !10940
  br i1 %tobool, label %land.lhs.true, label %if.end37, !dbg !10942

land.lhs.true:                                    ; preds = %if.end27
  %44 = load i32, i32* @trace_level, align 4, !dbg !10943
  %tobool30 = icmp ne i32 %44, 0, !dbg !10943
  br i1 %tobool30, label %if.then31, label %if.end37, !dbg !10944

if.then31:                                        ; preds = %land.lhs.true
  %45 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10945
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %45, i32 0, i32 9, !dbg !10945
  %46 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !10945
  %dev32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 41, !dbg !10945
  %47 = load %struct.megacmd_t*, %struct.megacmd_t** %mc.addr, align 8, !dbg !10945
  %cmd33 = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %47, i32 0, i32 0, !dbg !10945
  %48 = load i8, i8* %cmd33, align 1, !dbg !10945
  %conv34 = zext i8 %48 to i32, !dbg !10945
  %49 = load %struct.megacmd_t*, %struct.megacmd_t** %mc.addr, align 8, !dbg !10945
  %opcode = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %49, i32 0, i32 2, !dbg !10945
  %50 = load i8, i8* %opcode, align 1, !dbg !10945
  %conv35 = zext i8 %50 to i32, !dbg !10945
  %51 = load %struct.megacmd_t*, %struct.megacmd_t** %mc.addr, align 8, !dbg !10945
  %subopcode = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %51, i32 0, i32 3, !dbg !10945
  %52 = load i8, i8* %subopcode, align 1, !dbg !10945
  %conv36 = zext i8 %52 to i32, !dbg !10945
  %53 = load i32, i32* %rval, align 4, !dbg !10945
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev32, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.33, i64 0, i64 0), i32 %conv34, i32 %conv35, i32 %conv36, i32 %53) #12, !dbg !10945
  br label %if.end37, !dbg !10947

if.end37:                                         ; preds = %if.then31, %land.lhs.true, %if.end27
  %54 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !10948
  %int_mtx38 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %54, i32 0, i32 39, !dbg !10949
  call void @mutex_unlock(%struct.mutex* %int_mtx38) #11, !dbg !10950
  %55 = load i32, i32* %rval, align 4, !dbg !10951
  ret i32 %55, !dbg !10952
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local void @wait_for_completion(%struct.completion*) #2

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !10953 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10954, metadata !DIExpression()), !dbg !10956
  %0 = load i64, i64* %__edi, align 8, !dbg !10956
  store i64 %0, i64* %__edi, align 8, !dbg !10956
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10957, metadata !DIExpression()), !dbg !10956
  %1 = load i64, i64* %__esi, align 8, !dbg !10956
  store i64 %1, i64* %__esi, align 8, !dbg !10956
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10958, metadata !DIExpression()), !dbg !10956
  %2 = load i64, i64* %__edx, align 8, !dbg !10956
  store i64 %2, i64* %__edx, align 8, !dbg !10956
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10959, metadata !DIExpression()), !dbg !10956
  %3 = load i64, i64* %__ecx, align 8, !dbg !10956
  store i64 %3, i64* %__ecx, align 8, !dbg !10956
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10960, metadata !DIExpression()), !dbg !10956
  %4 = load i64, i64* %__eax, align 8, !dbg !10956
  store i64 %4, i64* %__eax, align 8, !dbg !10956
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !10956
  %6 = call i64 @llvm.read_register.i64(metadata !6170), !dbg !10956
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #7, !dbg !10956, !srcloc !10961
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !10956
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !10956
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10956
  call void @llvm.write_register.i64(metadata !6170, i64 %asmresult1), !dbg !10956
  ret void, !dbg !10962
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @scsi_partsize(%struct.block_device*, i64, i32*) #2

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !10963 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !10967, metadata !DIExpression()), !dbg !10968
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !10969
  %tobool = trunc i8 %0 to i1, !dbg !10969
  %lnot = xor i1 %tobool, true, !dbg !10969
  %lnot1 = xor i1 %lnot, true, !dbg !10969
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10969
  %conv = sext i32 %lnot.ext to i64, !dbg !10969
  %tobool2 = icmp ne i64 %conv, 0, !dbg !10969
  ret i1 %tobool2, !dbg !10970
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !10971 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10975, metadata !DIExpression()), !dbg !10980
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10982, metadata !DIExpression()), !dbg !10983
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10984, metadata !DIExpression()), !dbg !10985
  %0 = load i64, i64* %size.addr, align 8, !dbg !10986
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !10988
  br i1 %1, label %if.then, label %if.end447, !dbg !10989

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !10990
  %tobool = icmp ne i64 %2, 0, !dbg !10990
  br i1 %tobool, label %if.end, label %if.then1, !dbg !10993

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !10994
  br label %return, !dbg !10994

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !10995
  %cmp = icmp ult i64 %3, 4096, !dbg !10997
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10998

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10999
  br label %return, !dbg !10999

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub = sub i64 %4, 1, !dbg !11000
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !11000
  br i1 %5, label %cond.true, label %cond.false442, !dbg !11000

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub4 = sub i64 %6, 1, !dbg !11000
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !11000
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !11000

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub6 = sub i64 %8, 1, !dbg !11000
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !11000
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !11000

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !11000

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub9 = sub i64 %9, 1, !dbg !11000
  %and = and i64 %sub9, -9223372036854775808, !dbg !11000
  %tobool10 = icmp ne i64 %and, 0, !dbg !11000
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !11000

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !11000

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub13 = sub i64 %10, 1, !dbg !11000
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !11000
  %tobool15 = icmp ne i64 %and14, 0, !dbg !11000
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !11000

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !11000

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub18 = sub i64 %11, 1, !dbg !11000
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !11000
  %tobool20 = icmp ne i64 %and19, 0, !dbg !11000
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !11000

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !11000

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub23 = sub i64 %12, 1, !dbg !11000
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !11000
  %tobool25 = icmp ne i64 %and24, 0, !dbg !11000
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !11000

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !11000

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub28 = sub i64 %13, 1, !dbg !11000
  %and29 = and i64 %sub28, 576460752303423488, !dbg !11000
  %tobool30 = icmp ne i64 %and29, 0, !dbg !11000
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !11000

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !11000

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub33 = sub i64 %14, 1, !dbg !11000
  %and34 = and i64 %sub33, 288230376151711744, !dbg !11000
  %tobool35 = icmp ne i64 %and34, 0, !dbg !11000
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !11000

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !11000

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub38 = sub i64 %15, 1, !dbg !11000
  %and39 = and i64 %sub38, 144115188075855872, !dbg !11000
  %tobool40 = icmp ne i64 %and39, 0, !dbg !11000
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !11000

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !11000

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub43 = sub i64 %16, 1, !dbg !11000
  %and44 = and i64 %sub43, 72057594037927936, !dbg !11000
  %tobool45 = icmp ne i64 %and44, 0, !dbg !11000
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !11000

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !11000

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub48 = sub i64 %17, 1, !dbg !11000
  %and49 = and i64 %sub48, 36028797018963968, !dbg !11000
  %tobool50 = icmp ne i64 %and49, 0, !dbg !11000
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !11000

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !11000

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub53 = sub i64 %18, 1, !dbg !11000
  %and54 = and i64 %sub53, 18014398509481984, !dbg !11000
  %tobool55 = icmp ne i64 %and54, 0, !dbg !11000
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !11000

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !11000

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub58 = sub i64 %19, 1, !dbg !11000
  %and59 = and i64 %sub58, 9007199254740992, !dbg !11000
  %tobool60 = icmp ne i64 %and59, 0, !dbg !11000
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !11000

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !11000

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub63 = sub i64 %20, 1, !dbg !11000
  %and64 = and i64 %sub63, 4503599627370496, !dbg !11000
  %tobool65 = icmp ne i64 %and64, 0, !dbg !11000
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !11000

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !11000

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub68 = sub i64 %21, 1, !dbg !11000
  %and69 = and i64 %sub68, 2251799813685248, !dbg !11000
  %tobool70 = icmp ne i64 %and69, 0, !dbg !11000
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !11000

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !11000

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub73 = sub i64 %22, 1, !dbg !11000
  %and74 = and i64 %sub73, 1125899906842624, !dbg !11000
  %tobool75 = icmp ne i64 %and74, 0, !dbg !11000
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !11000

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !11000

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub78 = sub i64 %23, 1, !dbg !11000
  %and79 = and i64 %sub78, 562949953421312, !dbg !11000
  %tobool80 = icmp ne i64 %and79, 0, !dbg !11000
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !11000

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !11000

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub83 = sub i64 %24, 1, !dbg !11000
  %and84 = and i64 %sub83, 281474976710656, !dbg !11000
  %tobool85 = icmp ne i64 %and84, 0, !dbg !11000
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !11000

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !11000

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub88 = sub i64 %25, 1, !dbg !11000
  %and89 = and i64 %sub88, 140737488355328, !dbg !11000
  %tobool90 = icmp ne i64 %and89, 0, !dbg !11000
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !11000

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !11000

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub93 = sub i64 %26, 1, !dbg !11000
  %and94 = and i64 %sub93, 70368744177664, !dbg !11000
  %tobool95 = icmp ne i64 %and94, 0, !dbg !11000
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !11000

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !11000

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub98 = sub i64 %27, 1, !dbg !11000
  %and99 = and i64 %sub98, 35184372088832, !dbg !11000
  %tobool100 = icmp ne i64 %and99, 0, !dbg !11000
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !11000

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !11000

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub103 = sub i64 %28, 1, !dbg !11000
  %and104 = and i64 %sub103, 17592186044416, !dbg !11000
  %tobool105 = icmp ne i64 %and104, 0, !dbg !11000
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !11000

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !11000

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub108 = sub i64 %29, 1, !dbg !11000
  %and109 = and i64 %sub108, 8796093022208, !dbg !11000
  %tobool110 = icmp ne i64 %and109, 0, !dbg !11000
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !11000

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !11000

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub113 = sub i64 %30, 1, !dbg !11000
  %and114 = and i64 %sub113, 4398046511104, !dbg !11000
  %tobool115 = icmp ne i64 %and114, 0, !dbg !11000
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !11000

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !11000

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub118 = sub i64 %31, 1, !dbg !11000
  %and119 = and i64 %sub118, 2199023255552, !dbg !11000
  %tobool120 = icmp ne i64 %and119, 0, !dbg !11000
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !11000

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !11000

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub123 = sub i64 %32, 1, !dbg !11000
  %and124 = and i64 %sub123, 1099511627776, !dbg !11000
  %tobool125 = icmp ne i64 %and124, 0, !dbg !11000
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !11000

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !11000

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub128 = sub i64 %33, 1, !dbg !11000
  %and129 = and i64 %sub128, 549755813888, !dbg !11000
  %tobool130 = icmp ne i64 %and129, 0, !dbg !11000
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !11000

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !11000

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub133 = sub i64 %34, 1, !dbg !11000
  %and134 = and i64 %sub133, 274877906944, !dbg !11000
  %tobool135 = icmp ne i64 %and134, 0, !dbg !11000
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !11000

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !11000

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub138 = sub i64 %35, 1, !dbg !11000
  %and139 = and i64 %sub138, 137438953472, !dbg !11000
  %tobool140 = icmp ne i64 %and139, 0, !dbg !11000
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !11000

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !11000

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub143 = sub i64 %36, 1, !dbg !11000
  %and144 = and i64 %sub143, 68719476736, !dbg !11000
  %tobool145 = icmp ne i64 %and144, 0, !dbg !11000
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !11000

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !11000

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub148 = sub i64 %37, 1, !dbg !11000
  %and149 = and i64 %sub148, 34359738368, !dbg !11000
  %tobool150 = icmp ne i64 %and149, 0, !dbg !11000
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !11000

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !11000

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub153 = sub i64 %38, 1, !dbg !11000
  %and154 = and i64 %sub153, 17179869184, !dbg !11000
  %tobool155 = icmp ne i64 %and154, 0, !dbg !11000
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !11000

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !11000

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub158 = sub i64 %39, 1, !dbg !11000
  %and159 = and i64 %sub158, 8589934592, !dbg !11000
  %tobool160 = icmp ne i64 %and159, 0, !dbg !11000
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !11000

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !11000

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub163 = sub i64 %40, 1, !dbg !11000
  %and164 = and i64 %sub163, 4294967296, !dbg !11000
  %tobool165 = icmp ne i64 %and164, 0, !dbg !11000
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !11000

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !11000

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub168 = sub i64 %41, 1, !dbg !11000
  %and169 = and i64 %sub168, 2147483648, !dbg !11000
  %tobool170 = icmp ne i64 %and169, 0, !dbg !11000
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !11000

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !11000

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub173 = sub i64 %42, 1, !dbg !11000
  %and174 = and i64 %sub173, 1073741824, !dbg !11000
  %tobool175 = icmp ne i64 %and174, 0, !dbg !11000
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !11000

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !11000

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub178 = sub i64 %43, 1, !dbg !11000
  %and179 = and i64 %sub178, 536870912, !dbg !11000
  %tobool180 = icmp ne i64 %and179, 0, !dbg !11000
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !11000

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !11000

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub183 = sub i64 %44, 1, !dbg !11000
  %and184 = and i64 %sub183, 268435456, !dbg !11000
  %tobool185 = icmp ne i64 %and184, 0, !dbg !11000
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !11000

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !11000

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub188 = sub i64 %45, 1, !dbg !11000
  %and189 = and i64 %sub188, 134217728, !dbg !11000
  %tobool190 = icmp ne i64 %and189, 0, !dbg !11000
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !11000

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !11000

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub193 = sub i64 %46, 1, !dbg !11000
  %and194 = and i64 %sub193, 67108864, !dbg !11000
  %tobool195 = icmp ne i64 %and194, 0, !dbg !11000
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !11000

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !11000

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub198 = sub i64 %47, 1, !dbg !11000
  %and199 = and i64 %sub198, 33554432, !dbg !11000
  %tobool200 = icmp ne i64 %and199, 0, !dbg !11000
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !11000

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !11000

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub203 = sub i64 %48, 1, !dbg !11000
  %and204 = and i64 %sub203, 16777216, !dbg !11000
  %tobool205 = icmp ne i64 %and204, 0, !dbg !11000
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !11000

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !11000

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub208 = sub i64 %49, 1, !dbg !11000
  %and209 = and i64 %sub208, 8388608, !dbg !11000
  %tobool210 = icmp ne i64 %and209, 0, !dbg !11000
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !11000

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !11000

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub213 = sub i64 %50, 1, !dbg !11000
  %and214 = and i64 %sub213, 4194304, !dbg !11000
  %tobool215 = icmp ne i64 %and214, 0, !dbg !11000
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !11000

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !11000

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub218 = sub i64 %51, 1, !dbg !11000
  %and219 = and i64 %sub218, 2097152, !dbg !11000
  %tobool220 = icmp ne i64 %and219, 0, !dbg !11000
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !11000

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !11000

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub223 = sub i64 %52, 1, !dbg !11000
  %and224 = and i64 %sub223, 1048576, !dbg !11000
  %tobool225 = icmp ne i64 %and224, 0, !dbg !11000
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !11000

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !11000

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub228 = sub i64 %53, 1, !dbg !11000
  %and229 = and i64 %sub228, 524288, !dbg !11000
  %tobool230 = icmp ne i64 %and229, 0, !dbg !11000
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !11000

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !11000

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub233 = sub i64 %54, 1, !dbg !11000
  %and234 = and i64 %sub233, 262144, !dbg !11000
  %tobool235 = icmp ne i64 %and234, 0, !dbg !11000
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !11000

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !11000

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub238 = sub i64 %55, 1, !dbg !11000
  %and239 = and i64 %sub238, 131072, !dbg !11000
  %tobool240 = icmp ne i64 %and239, 0, !dbg !11000
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !11000

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !11000

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub243 = sub i64 %56, 1, !dbg !11000
  %and244 = and i64 %sub243, 65536, !dbg !11000
  %tobool245 = icmp ne i64 %and244, 0, !dbg !11000
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !11000

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !11000

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub248 = sub i64 %57, 1, !dbg !11000
  %and249 = and i64 %sub248, 32768, !dbg !11000
  %tobool250 = icmp ne i64 %and249, 0, !dbg !11000
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !11000

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !11000

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub253 = sub i64 %58, 1, !dbg !11000
  %and254 = and i64 %sub253, 16384, !dbg !11000
  %tobool255 = icmp ne i64 %and254, 0, !dbg !11000
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !11000

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !11000

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub258 = sub i64 %59, 1, !dbg !11000
  %and259 = and i64 %sub258, 8192, !dbg !11000
  %tobool260 = icmp ne i64 %and259, 0, !dbg !11000
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !11000

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !11000

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub263 = sub i64 %60, 1, !dbg !11000
  %and264 = and i64 %sub263, 4096, !dbg !11000
  %tobool265 = icmp ne i64 %and264, 0, !dbg !11000
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !11000

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !11000

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub268 = sub i64 %61, 1, !dbg !11000
  %and269 = and i64 %sub268, 2048, !dbg !11000
  %tobool270 = icmp ne i64 %and269, 0, !dbg !11000
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !11000

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !11000

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub273 = sub i64 %62, 1, !dbg !11000
  %and274 = and i64 %sub273, 1024, !dbg !11000
  %tobool275 = icmp ne i64 %and274, 0, !dbg !11000
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !11000

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !11000

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub278 = sub i64 %63, 1, !dbg !11000
  %and279 = and i64 %sub278, 512, !dbg !11000
  %tobool280 = icmp ne i64 %and279, 0, !dbg !11000
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !11000

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !11000

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub283 = sub i64 %64, 1, !dbg !11000
  %and284 = and i64 %sub283, 256, !dbg !11000
  %tobool285 = icmp ne i64 %and284, 0, !dbg !11000
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !11000

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !11000

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub288 = sub i64 %65, 1, !dbg !11000
  %and289 = and i64 %sub288, 128, !dbg !11000
  %tobool290 = icmp ne i64 %and289, 0, !dbg !11000
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !11000

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !11000

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub293 = sub i64 %66, 1, !dbg !11000
  %and294 = and i64 %sub293, 64, !dbg !11000
  %tobool295 = icmp ne i64 %and294, 0, !dbg !11000
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !11000

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !11000

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub298 = sub i64 %67, 1, !dbg !11000
  %and299 = and i64 %sub298, 32, !dbg !11000
  %tobool300 = icmp ne i64 %and299, 0, !dbg !11000
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !11000

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !11000

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub303 = sub i64 %68, 1, !dbg !11000
  %and304 = and i64 %sub303, 16, !dbg !11000
  %tobool305 = icmp ne i64 %and304, 0, !dbg !11000
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !11000

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !11000

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub308 = sub i64 %69, 1, !dbg !11000
  %and309 = and i64 %sub308, 8, !dbg !11000
  %tobool310 = icmp ne i64 %and309, 0, !dbg !11000
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !11000

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !11000

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub313 = sub i64 %70, 1, !dbg !11000
  %and314 = and i64 %sub313, 4, !dbg !11000
  %tobool315 = icmp ne i64 %and314, 0, !dbg !11000
  %71 = zext i1 %tobool315 to i64, !dbg !11000
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !11000
  br label %cond.end, !dbg !11000

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !11000
  br label %cond.end317, !dbg !11000

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !11000
  br label %cond.end319, !dbg !11000

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !11000
  br label %cond.end321, !dbg !11000

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !11000
  br label %cond.end323, !dbg !11000

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !11000
  br label %cond.end325, !dbg !11000

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !11000
  br label %cond.end327, !dbg !11000

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !11000
  br label %cond.end329, !dbg !11000

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !11000
  br label %cond.end331, !dbg !11000

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !11000
  br label %cond.end333, !dbg !11000

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !11000
  br label %cond.end335, !dbg !11000

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !11000
  br label %cond.end337, !dbg !11000

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !11000
  br label %cond.end339, !dbg !11000

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !11000
  br label %cond.end341, !dbg !11000

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !11000
  br label %cond.end343, !dbg !11000

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !11000
  br label %cond.end345, !dbg !11000

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !11000
  br label %cond.end347, !dbg !11000

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !11000
  br label %cond.end349, !dbg !11000

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !11000
  br label %cond.end351, !dbg !11000

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !11000
  br label %cond.end353, !dbg !11000

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !11000
  br label %cond.end355, !dbg !11000

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !11000
  br label %cond.end357, !dbg !11000

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !11000
  br label %cond.end359, !dbg !11000

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !11000
  br label %cond.end361, !dbg !11000

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !11000
  br label %cond.end363, !dbg !11000

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !11000
  br label %cond.end365, !dbg !11000

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !11000
  br label %cond.end367, !dbg !11000

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !11000
  br label %cond.end369, !dbg !11000

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !11000
  br label %cond.end371, !dbg !11000

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !11000
  br label %cond.end373, !dbg !11000

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !11000
  br label %cond.end375, !dbg !11000

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !11000
  br label %cond.end377, !dbg !11000

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !11000
  br label %cond.end379, !dbg !11000

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !11000
  br label %cond.end381, !dbg !11000

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !11000
  br label %cond.end383, !dbg !11000

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !11000
  br label %cond.end385, !dbg !11000

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !11000
  br label %cond.end387, !dbg !11000

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !11000
  br label %cond.end389, !dbg !11000

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !11000
  br label %cond.end391, !dbg !11000

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !11000
  br label %cond.end393, !dbg !11000

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !11000
  br label %cond.end395, !dbg !11000

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !11000
  br label %cond.end397, !dbg !11000

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !11000
  br label %cond.end399, !dbg !11000

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !11000
  br label %cond.end401, !dbg !11000

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !11000
  br label %cond.end403, !dbg !11000

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !11000
  br label %cond.end405, !dbg !11000

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !11000
  br label %cond.end407, !dbg !11000

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !11000
  br label %cond.end409, !dbg !11000

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !11000
  br label %cond.end411, !dbg !11000

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !11000
  br label %cond.end413, !dbg !11000

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !11000
  br label %cond.end415, !dbg !11000

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !11000
  br label %cond.end417, !dbg !11000

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !11000
  br label %cond.end419, !dbg !11000

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !11000
  br label %cond.end421, !dbg !11000

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !11000
  br label %cond.end423, !dbg !11000

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !11000
  br label %cond.end425, !dbg !11000

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !11000
  br label %cond.end427, !dbg !11000

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !11000
  br label %cond.end429, !dbg !11000

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !11000
  br label %cond.end431, !dbg !11000

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !11000
  br label %cond.end433, !dbg !11000

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !11000
  br label %cond.end435, !dbg !11000

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !11000
  br label %cond.end437, !dbg !11000

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !11000
  br label %cond.end440, !dbg !11000

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !11000

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !11000
  br label %cond.end444, !dbg !11000

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !11000
  %sub443 = sub i64 %72, 1, !dbg !11000
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !11000
  br label %cond.end444, !dbg !11000

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !11000
  %sub446 = sub i32 %cond445, 12, !dbg !11001
  %add = add i32 %sub446, 1, !dbg !11002
  store i32 %add, i32* %retval, align 4, !dbg !11003
  br label %return, !dbg !11003

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !11004
  %dec = add i64 %73, -1, !dbg !11004
  store i64 %dec, i64* %size.addr, align 8, !dbg !11004
  %74 = load i64, i64* %size.addr, align 8, !dbg !11005
  %shr = lshr i64 %74, 12, !dbg !11005
  store i64 %shr, i64* %size.addr, align 8, !dbg !11005
  %75 = load i64, i64* %size.addr, align 8, !dbg !11006
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10983
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !11007
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !11008
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !11007, !srcloc !11009
  store i32 %78, i32* %bitpos.i, align 4, !dbg !11007
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !11010
  %add.i = add i32 %79, 1, !dbg !11011
  store i32 %add.i, i32* %retval, align 4, !dbg !11012
  br label %return, !dbg !11012

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !11013
  ret i32 %80, !dbg !11013
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !11014 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10975, metadata !DIExpression()), !dbg !11018
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10982, metadata !DIExpression()), !dbg !11020
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11021, metadata !DIExpression()), !dbg !11022
  %0 = load i64, i64* %n.addr, align 8, !dbg !11023
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11020
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !11024
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !11025
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !11024, !srcloc !11009
  store i32 %3, i32* %bitpos.i, align 4, !dbg !11024
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !11026
  %add.i = add i32 %4, 1, !dbg !11027
  %sub = sub i32 %add.i, 1, !dbg !11028
  ret i32 %sub, !dbg !11029
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !11030 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !11034, metadata !DIExpression()), !dbg !11035
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !11036, metadata !DIExpression()), !dbg !11037
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11038, metadata !DIExpression()), !dbg !11039
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11040, metadata !DIExpression()), !dbg !11041
  %0 = load i8*, i8** %object.addr, align 8, !dbg !11042
  ret i8* %0, !dbg !11043
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #0 !dbg !11044 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11047, metadata !DIExpression()), !dbg !11048
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11049, metadata !DIExpression()), !dbg !11048
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !11048
  %1 = bitcast i8* %0 to i32*, !dbg !11048
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #7, !dbg !11048, !srcloc !11050
  store i32 %2, i32* %ret, align 4, !dbg !11048
  %3 = load i32, i32* %ret, align 4, !dbg !11048
  ret i32 %3, !dbg !11048
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mega_cmd_done(%struct.adapter_t* %adapter, i8* %completed, i32 %nstatus, i32 %status) #0 !dbg !11051 {
entry:
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %completed.addr = alloca i8*, align 8
  %nstatus.addr = alloca i32, align 4
  %status.addr = alloca i32, align 4
  %epthru = alloca %struct.mega_ext_passthru*, align 8
  %sgl = alloca %struct.scatterlist*, align 8
  %cmd = alloca %struct.scsi_cmnd*, align 8
  %pthru = alloca %struct.mega_passthru*, align 8
  %mbox = alloca %struct.mbox_t*, align 8
  %c = alloca i8, align 1
  %scb = alloca %struct.scb_t*, align 8
  %islogical = alloca i32, align 4
  %cmdid = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !11054, metadata !DIExpression()), !dbg !11055
  store i8* %completed, i8** %completed.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %completed.addr, metadata !11056, metadata !DIExpression()), !dbg !11057
  store i32 %nstatus, i32* %nstatus.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nstatus.addr, metadata !11058, metadata !DIExpression()), !dbg !11059
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !11060, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.declare(metadata %struct.mega_ext_passthru** %epthru, metadata !11062, metadata !DIExpression()), !dbg !11063
  store %struct.mega_ext_passthru* null, %struct.mega_ext_passthru** %epthru, align 8, !dbg !11063
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sgl, metadata !11064, metadata !DIExpression()), !dbg !11065
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd, metadata !11066, metadata !DIExpression()), !dbg !11067
  store %struct.scsi_cmnd* null, %struct.scsi_cmnd** %cmd, align 8, !dbg !11067
  call void @llvm.dbg.declare(metadata %struct.mega_passthru** %pthru, metadata !11068, metadata !DIExpression()), !dbg !11069
  store %struct.mega_passthru* null, %struct.mega_passthru** %pthru, align 8, !dbg !11069
  call void @llvm.dbg.declare(metadata %struct.mbox_t** %mbox, metadata !11070, metadata !DIExpression()), !dbg !11071
  store %struct.mbox_t* null, %struct.mbox_t** %mbox, align 8, !dbg !11071
  call void @llvm.dbg.declare(metadata i8* %c, metadata !11072, metadata !DIExpression()), !dbg !11073
  call void @llvm.dbg.declare(metadata %struct.scb_t** %scb, metadata !11074, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.declare(metadata i32* %islogical, metadata !11076, metadata !DIExpression()), !dbg !11077
  call void @llvm.dbg.declare(metadata i32* %cmdid, metadata !11078, metadata !DIExpression()), !dbg !11079
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11080, metadata !DIExpression()), !dbg !11081
  store i32 0, i32* %i, align 4, !dbg !11082
  br label %for.cond, !dbg !11084

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11085
  %1 = load i32, i32* %nstatus.addr, align 4, !dbg !11087
  %cmp = icmp slt i32 %0, %1, !dbg !11088
  br i1 %cmp, label %for.body, label %for.end, !dbg !11089

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %completed.addr, align 8, !dbg !11090
  %3 = load i32, i32* %i, align 4, !dbg !11092
  %idxprom = sext i32 %3 to i64, !dbg !11090
  %arrayidx = getelementptr i8, i8* %2, i64 %idxprom, !dbg !11090
  %4 = load i8, i8* %arrayidx, align 1, !dbg !11090
  %conv = zext i8 %4 to i32, !dbg !11090
  store i32 %conv, i32* %cmdid, align 4, !dbg !11093
  %5 = load i32, i32* %cmdid, align 4, !dbg !11094
  %cmp1 = icmp eq i32 %5, 127, !dbg !11096
  br i1 %cmp1, label %if.then, label %if.else, !dbg !11097

if.then:                                          ; preds = %for.body
  %6 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11098
  %int_scb = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %6, i32 0, i32 38, !dbg !11100
  store %struct.scb_t* %int_scb, %struct.scb_t** %scb, align 8, !dbg !11101
  %7 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11102
  %list = getelementptr inbounds %struct.scb_t, %struct.scb_t* %7, i32 0, i32 2, !dbg !11103
  call void @list_del_init(%struct.list_head* %list) #11, !dbg !11104
  %8 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11105
  %state = getelementptr inbounds %struct.scb_t, %struct.scb_t* %8, i32 0, i32 1, !dbg !11106
  store i32 0, i32* %state, align 4, !dbg !11107
  %9 = load i32, i32* %status.addr, align 4, !dbg !11108
  %10 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11109
  %int_status = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %10, i32 0, i32 40, !dbg !11110
  store i32 %9, i32* %int_status, align 8, !dbg !11111
  %11 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11112
  %int_waitq = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %11, i32 0, i32 41, !dbg !11113
  call void @complete(%struct.completion* %int_waitq) #11, !dbg !11114
  br label %if.end38, !dbg !11115

if.else:                                          ; preds = %for.body
  %12 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11116
  %scb_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %12, i32 0, i32 18, !dbg !11118
  %13 = load %struct.scb_t*, %struct.scb_t** %scb_list, align 8, !dbg !11118
  %14 = load i32, i32* %cmdid, align 4, !dbg !11119
  %idxprom3 = sext i32 %14 to i64, !dbg !11116
  %arrayidx4 = getelementptr %struct.scb_t, %struct.scb_t* %13, i64 %idxprom3, !dbg !11116
  store %struct.scb_t* %arrayidx4, %struct.scb_t** %scb, align 8, !dbg !11120
  %15 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11121
  %state5 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %15, i32 0, i32 1, !dbg !11123
  %16 = load i32, i32* %state5, align 4, !dbg !11123
  %and = and i32 %16, 4, !dbg !11124
  %tobool = icmp ne i32 %and, 0, !dbg !11124
  br i1 %tobool, label %lor.lhs.false, label %if.then9, !dbg !11125

lor.lhs.false:                                    ; preds = %if.else
  %17 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11126
  %cmd6 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %17, i32 0, i32 6, !dbg !11127
  %18 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd6, align 8, !dbg !11127
  %cmp7 = icmp eq %struct.scsi_cmnd* %18, null, !dbg !11128
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !11129

if.then9:                                         ; preds = %lor.lhs.false, %if.else
  %19 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11130
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %19, i32 0, i32 9, !dbg !11130
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !11130
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !11130
  %21 = load i32, i32* %cmdid, align 4, !dbg !11130
  %22 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11130
  %state11 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %22, i32 0, i32 1, !dbg !11130
  %23 = load i32, i32* %state11, align 4, !dbg !11130
  %24 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11130
  %cmd12 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %24, i32 0, i32 6, !dbg !11130
  %25 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd12, align 8, !dbg !11130
  call void (%struct.device*, i8*, ...) @_dev_crit(%struct.device* %dev10, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.36, i64 0, i64 0), i32 %21, i32 %23, %struct.scsi_cmnd* %25) #12, !dbg !11130
  br label %for.inc, !dbg !11132

if.end:                                           ; preds = %lor.lhs.false
  %26 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11133
  %state13 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %26, i32 0, i32 1, !dbg !11135
  %27 = load i32, i32* %state13, align 4, !dbg !11135
  %and14 = and i32 %27, 8, !dbg !11136
  %tobool15 = icmp ne i32 %and14, 0, !dbg !11136
  br i1 %tobool15, label %if.then16, label %if.end21, !dbg !11137

if.then16:                                        ; preds = %if.end
  %28 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11138
  %dev17 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %28, i32 0, i32 9, !dbg !11138
  %29 = load %struct.pci_dev*, %struct.pci_dev** %dev17, align 8, !dbg !11138
  %dev18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 41, !dbg !11138
  %30 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11138
  %idx = getelementptr inbounds %struct.scb_t, %struct.scb_t* %30, i32 0, i32 0, !dbg !11138
  %31 = load i32, i32* %idx, align 8, !dbg !11138
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev18, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0), i32 %31) #12, !dbg !11138
  %32 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11140
  %cmd19 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %32, i32 0, i32 6, !dbg !11141
  %33 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd19, align 8, !dbg !11141
  %result = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %33, i32 0, i32 24, !dbg !11142
  store i32 327680, i32* %result, align 8, !dbg !11143
  %34 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11144
  %cmd20 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %34, i32 0, i32 6, !dbg !11144
  %35 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd20, align 8, !dbg !11144
  %SCp = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %35, i32 0, i32 22, !dbg !11144
  %36 = bitcast %struct.scsi_pointer* %SCp to %struct.list_head*, !dbg !11144
  %37 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11145
  %completed_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %37, i32 0, i32 12, !dbg !11146
  call void @list_add_tail(%struct.list_head* %36, %struct.list_head* %completed_list) #11, !dbg !11147
  %38 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11148
  %39 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11149
  call void @mega_free_scb(%struct.adapter_t* %38, %struct.scb_t* %39) #11, !dbg !11150
  br label %for.inc, !dbg !11151

if.end21:                                         ; preds = %if.end
  %40 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11152
  %state22 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %40, i32 0, i32 1, !dbg !11154
  %41 = load i32, i32* %state22, align 4, !dbg !11154
  %and23 = and i32 %41, 16, !dbg !11155
  %tobool24 = icmp ne i32 %and23, 0, !dbg !11155
  br i1 %tobool24, label %if.then25, label %if.end34, !dbg !11156

if.then25:                                        ; preds = %if.end21
  %42 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11157
  %dev26 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %42, i32 0, i32 9, !dbg !11157
  %43 = load %struct.pci_dev*, %struct.pci_dev** %dev26, align 8, !dbg !11157
  %dev27 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 41, !dbg !11157
  %44 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11157
  %idx28 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %44, i32 0, i32 0, !dbg !11157
  %45 = load i32, i32* %idx28, align 8, !dbg !11157
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev27, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i64 0, i64 0), i32 %45) #12, !dbg !11157
  %46 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11159
  %cmd29 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %46, i32 0, i32 6, !dbg !11160
  %47 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd29, align 8, !dbg !11160
  %result30 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %47, i32 0, i32 24, !dbg !11161
  store i32 524288, i32* %result30, align 8, !dbg !11162
  %48 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11163
  %cmd31 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %48, i32 0, i32 6, !dbg !11163
  %49 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd31, align 8, !dbg !11163
  %SCp32 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %49, i32 0, i32 22, !dbg !11163
  %50 = bitcast %struct.scsi_pointer* %SCp32 to %struct.list_head*, !dbg !11163
  %51 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11164
  %completed_list33 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %51, i32 0, i32 12, !dbg !11165
  call void @list_add_tail(%struct.list_head* %50, %struct.list_head* %completed_list33) #11, !dbg !11166
  %52 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11167
  %53 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11168
  call void @mega_free_scb(%struct.adapter_t* %52, %struct.scb_t* %53) #11, !dbg !11169
  br label %for.inc, !dbg !11170

if.end34:                                         ; preds = %if.end21
  %54 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11171
  %cmd35 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %54, i32 0, i32 6, !dbg !11172
  %55 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd35, align 8, !dbg !11172
  store %struct.scsi_cmnd* %55, %struct.scsi_cmnd** %cmd, align 8, !dbg !11173
  %56 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11174
  %pthru36 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %56, i32 0, i32 12, !dbg !11175
  %57 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru36, align 8, !dbg !11175
  store %struct.mega_passthru* %57, %struct.mega_passthru** %pthru, align 8, !dbg !11176
  %58 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11177
  %epthru37 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %58, i32 0, i32 14, !dbg !11178
  %59 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru37, align 8, !dbg !11178
  store %struct.mega_ext_passthru* %59, %struct.mega_ext_passthru** %epthru, align 8, !dbg !11179
  %60 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11180
  %raw_mbox = getelementptr inbounds %struct.scb_t, %struct.scb_t* %60, i32 0, i32 3, !dbg !11181
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %raw_mbox, i64 0, i64 0, !dbg !11180
  %61 = bitcast i8* %arraydecay to %struct.mbox_t*, !dbg !11182
  store %struct.mbox_t* %61, %struct.mbox_t** %mbox, align 8, !dbg !11183
  br label %if.end38

if.end38:                                         ; preds = %if.end34, %if.then
  %62 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11184
  %logdrv_chan = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %62, i32 0, i32 35, !dbg !11185
  %63 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11186
  %device = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %63, i32 0, i32 1, !dbg !11187
  %64 = load %struct.scsi_device*, %struct.scsi_device** %device, align 8, !dbg !11187
  %channel = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %64, i32 0, i32 17, !dbg !11188
  %65 = load i32, i32* %channel, align 4, !dbg !11188
  %idxprom39 = zext i32 %65 to i64, !dbg !11184
  %arrayidx40 = getelementptr [9 x i8], [9 x i8]* %logdrv_chan, i64 0, i64 %idxprom39, !dbg !11184
  %66 = load i8, i8* %arrayidx40, align 1, !dbg !11184
  %conv41 = zext i8 %66 to i32, !dbg !11184
  store i32 %conv41, i32* %islogical, align 4, !dbg !11189
  %67 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11190
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %67, i32 0, i32 14, !dbg !11192
  %68 = load i8*, i8** %cmnd, align 8, !dbg !11192
  %arrayidx42 = getelementptr i8, i8* %68, i64 0, !dbg !11190
  %69 = load i8, i8* %arrayidx42, align 1, !dbg !11190
  %conv43 = zext i8 %69 to i32, !dbg !11190
  %cmp44 = icmp eq i32 %conv43, 18, !dbg !11193
  br i1 %cmp44, label %land.lhs.true, label %if.end68, !dbg !11194

land.lhs.true:                                    ; preds = %if.end38
  %70 = load i32, i32* %islogical, align 4, !dbg !11195
  %tobool46 = icmp ne i32 %70, 0, !dbg !11195
  br i1 %tobool46, label %if.end68, label %if.then47, !dbg !11196

if.then47:                                        ; preds = %land.lhs.true
  %71 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11197
  %call = call %struct.scatterlist* @scsi_sglist(%struct.scsi_cmnd* %71) #11, !dbg !11199
  store %struct.scatterlist* %call, %struct.scatterlist** %sgl, align 8, !dbg !11200
  %72 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !11201
  %call48 = call %struct.page* @sg_page(%struct.scatterlist* %72) #11, !dbg !11203
  %tobool49 = icmp ne %struct.page* %call48, null, !dbg !11203
  br i1 %tobool49, label %if.then50, label %if.else53, !dbg !11204

if.then50:                                        ; preds = %if.then47
  %73 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !11205
  %arrayidx51 = getelementptr %struct.scatterlist, %struct.scatterlist* %73, i64 0, !dbg !11205
  %call52 = call i8* @sg_virt(%struct.scatterlist* %arrayidx51) #11, !dbg !11207
  %74 = load i8, i8* %call52, align 1, !dbg !11208
  store i8 %74, i8* %c, align 1, !dbg !11209
  br label %if.end56, !dbg !11210

if.else53:                                        ; preds = %if.then47
  %75 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11211
  %dev54 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %75, i32 0, i32 9, !dbg !11211
  %76 = load %struct.pci_dev*, %struct.pci_dev** %dev54, align 8, !dbg !11211
  %dev55 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %76, i32 0, i32 41, !dbg !11211
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev55, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0)) #12, !dbg !11211
  store i8 0, i8* %c, align 1, !dbg !11213
  br label %if.end56

if.end56:                                         ; preds = %if.else53, %if.then50
  %77 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11214
  %mega_ch_class = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %77, i32 0, i32 36, !dbg !11214
  %78 = load i32, i32* %mega_ch_class, align 4, !dbg !11214
  %79 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11214
  %device57 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %79, i32 0, i32 1, !dbg !11214
  %80 = load %struct.scsi_device*, %struct.scsi_device** %device57, align 8, !dbg !11214
  %channel58 = getelementptr inbounds %struct.scsi_device, %struct.scsi_device* %80, i32 0, i32 17, !dbg !11214
  %81 = load i32, i32* %channel58, align 4, !dbg !11214
  %shr = ashr i32 %78, %81, !dbg !11214
  %and59 = and i32 %shr, 1, !dbg !11214
  %tobool60 = icmp ne i32 %and59, 0, !dbg !11214
  br i1 %tobool60, label %land.lhs.true61, label %if.end67, !dbg !11216

land.lhs.true61:                                  ; preds = %if.end56
  %82 = load i8, i8* %c, align 1, !dbg !11217
  %conv62 = zext i8 %82 to i32, !dbg !11217
  %and63 = and i32 %conv62, 31, !dbg !11218
  %cmp64 = icmp eq i32 %and63, 0, !dbg !11219
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !11220

if.then66:                                        ; preds = %land.lhs.true61
  store i32 240, i32* %status.addr, align 4, !dbg !11221
  br label %if.end67, !dbg !11223

if.end67:                                         ; preds = %if.then66, %land.lhs.true61, %if.end56
  br label %if.end68, !dbg !11224

if.end68:                                         ; preds = %if.end67, %land.lhs.true, %if.end38
  %83 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11225
  %result69 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %83, i32 0, i32 24, !dbg !11226
  store i32 0, i32* %result69, align 8, !dbg !11227
  %84 = load i32, i32* %status.addr, align 4, !dbg !11228
  switch i32 %84, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb71
    i32 8, label %sw.bb104
  ], !dbg !11229

sw.bb:                                            ; preds = %if.end68
  %85 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11230
  %result70 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %85, i32 0, i32 24, !dbg !11232
  %86 = load i32, i32* %result70, align 8, !dbg !11233
  store i32 %86, i32* %result70, align 8, !dbg !11233
  br label %sw.epilog, !dbg !11234

sw.bb71:                                          ; preds = %if.end68
  %87 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11235
  %m_out = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %87, i32 0, i32 0, !dbg !11237
  %cmd72 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out, i32 0, i32 0, !dbg !11238
  %88 = load i8, i8* %cmd72, align 1, !dbg !11238
  %conv73 = zext i8 %88 to i32, !dbg !11235
  %cmp74 = icmp eq i32 %conv73, 3, !dbg !11239
  br i1 %cmp74, label %if.then82, label %lor.lhs.false76, !dbg !11240

lor.lhs.false76:                                  ; preds = %sw.bb71
  %89 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11241
  %m_out77 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %89, i32 0, i32 0, !dbg !11242
  %cmd78 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out77, i32 0, i32 0, !dbg !11243
  %90 = load i8, i8* %cmd78, align 1, !dbg !11243
  %conv79 = zext i8 %90 to i32, !dbg !11241
  %cmp80 = icmp eq i32 %conv79, 195, !dbg !11244
  br i1 %cmp80, label %if.then82, label %if.else85, !dbg !11245

if.then82:                                        ; preds = %lor.lhs.false76, %sw.bb71
  %91 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11246
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %91, i32 0, i32 20, !dbg !11248
  %92 = load i8*, i8** %sense_buffer, align 8, !dbg !11248
  %93 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !11249
  %reqsensearea = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %93, i32 0, i32 9, !dbg !11250
  %arraydecay83 = getelementptr inbounds [32 x i8], [32 x i8]* %reqsensearea, i64 0, i64 0, !dbg !11251
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %92, i8* align 1 %arraydecay83, i64 14, i1 false), !dbg !11251
  %94 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11252
  %result84 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %94, i32 0, i32 24, !dbg !11253
  store i32 134217730, i32* %result84, align 8, !dbg !11254
  br label %if.end103, !dbg !11255

if.else85:                                        ; preds = %lor.lhs.false76
  %95 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11256
  %m_out86 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %95, i32 0, i32 0, !dbg !11259
  %cmd87 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out86, i32 0, i32 0, !dbg !11260
  %96 = load i8, i8* %cmd87, align 1, !dbg !11260
  %conv88 = zext i8 %96 to i32, !dbg !11256
  %cmp89 = icmp eq i32 %conv88, 227, !dbg !11261
  br i1 %cmp89, label %if.then91, label %if.else96, !dbg !11262

if.then91:                                        ; preds = %if.else85
  %97 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11263
  %sense_buffer92 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %97, i32 0, i32 20, !dbg !11265
  %98 = load i8*, i8** %sense_buffer92, align 8, !dbg !11265
  %99 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !11266
  %reqsensearea93 = getelementptr inbounds %struct.mega_ext_passthru, %struct.mega_ext_passthru* %99, i32 0, i32 12, !dbg !11267
  %arraydecay94 = getelementptr inbounds [32 x i8], [32 x i8]* %reqsensearea93, i64 0, i64 0, !dbg !11268
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %98, i8* align 1 %arraydecay94, i64 14, i1 false), !dbg !11268
  %100 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11269
  %result95 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %100, i32 0, i32 24, !dbg !11270
  store i32 134217730, i32* %result95, align 8, !dbg !11271
  br label %if.end102, !dbg !11272

if.else96:                                        ; preds = %if.else85
  %101 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11273
  %sense_buffer97 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %101, i32 0, i32 20, !dbg !11275
  %102 = load i8*, i8** %sense_buffer97, align 8, !dbg !11275
  %arrayidx98 = getelementptr i8, i8* %102, i64 0, !dbg !11273
  store i8 112, i8* %arrayidx98, align 1, !dbg !11276
  %103 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11277
  %sense_buffer99 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %103, i32 0, i32 20, !dbg !11278
  %104 = load i8*, i8** %sense_buffer99, align 8, !dbg !11278
  %arrayidx100 = getelementptr i8, i8* %104, i64 2, !dbg !11277
  store i8 11, i8* %arrayidx100, align 1, !dbg !11279
  %105 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11280
  %result101 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %105, i32 0, i32 24, !dbg !11281
  %106 = load i32, i32* %result101, align 8, !dbg !11282
  %or = or i32 %106, 2, !dbg !11282
  store i32 %or, i32* %result101, align 8, !dbg !11282
  br label %if.end102

if.end102:                                        ; preds = %if.else96, %if.then91
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then82
  br label %sw.epilog, !dbg !11283

sw.bb104:                                         ; preds = %if.end68
  %107 = load i32, i32* %status.addr, align 4, !dbg !11284
  %or105 = or i32 131072, %107, !dbg !11285
  %108 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11286
  %result106 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %108, i32 0, i32 24, !dbg !11287
  %109 = load i32, i32* %result106, align 8, !dbg !11288
  %or107 = or i32 %109, %or105, !dbg !11288
  store i32 %or107, i32* %result106, align 8, !dbg !11288
  br label %sw.epilog, !dbg !11289

sw.default:                                       ; preds = %if.end68
  %110 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11290
  %cmnd108 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %110, i32 0, i32 14, !dbg !11292
  %111 = load i8*, i8** %cmnd108, align 8, !dbg !11292
  %arrayidx109 = getelementptr i8, i8* %111, i64 0, !dbg !11290
  %112 = load i8, i8* %arrayidx109, align 1, !dbg !11290
  %conv110 = zext i8 %112 to i32, !dbg !11290
  %cmp111 = icmp eq i32 %conv110, 0, !dbg !11293
  br i1 %cmp111, label %if.then113, label %if.else116, !dbg !11294

if.then113:                                       ; preds = %sw.default
  %113 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11295
  %result114 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %113, i32 0, i32 24, !dbg !11297
  %114 = load i32, i32* %result114, align 8, !dbg !11298
  %or115 = or i32 %114, 458776, !dbg !11298
  store i32 %or115, i32* %result114, align 8, !dbg !11298
  br label %if.end139, !dbg !11299

if.else116:                                       ; preds = %sw.default
  %115 = load i32, i32* %status.addr, align 4, !dbg !11300
  %cmp117 = icmp eq i32 %115, 1, !dbg !11302
  br i1 %cmp117, label %land.lhs.true119, label %if.else134, !dbg !11303

land.lhs.true119:                                 ; preds = %if.else116
  %116 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11304
  %cmnd120 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %116, i32 0, i32 14, !dbg !11305
  %117 = load i8*, i8** %cmnd120, align 8, !dbg !11305
  %arrayidx121 = getelementptr i8, i8* %117, i64 0, !dbg !11304
  %118 = load i8, i8* %arrayidx121, align 1, !dbg !11304
  %conv122 = zext i8 %118 to i32, !dbg !11304
  %cmp123 = icmp eq i32 %conv122, 22, !dbg !11306
  br i1 %cmp123, label %if.then131, label %lor.lhs.false125, !dbg !11307

lor.lhs.false125:                                 ; preds = %land.lhs.true119
  %119 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11308
  %cmnd126 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %119, i32 0, i32 14, !dbg !11309
  %120 = load i8*, i8** %cmnd126, align 8, !dbg !11309
  %arrayidx127 = getelementptr i8, i8* %120, i64 0, !dbg !11308
  %121 = load i8, i8* %arrayidx127, align 1, !dbg !11308
  %conv128 = zext i8 %121 to i32, !dbg !11308
  %cmp129 = icmp eq i32 %conv128, 23, !dbg !11310
  br i1 %cmp129, label %if.then131, label %if.else134, !dbg !11311

if.then131:                                       ; preds = %lor.lhs.false125, %land.lhs.true119
  %122 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11312
  %result132 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %122, i32 0, i32 24, !dbg !11314
  %123 = load i32, i32* %result132, align 8, !dbg !11315
  %or133 = or i32 %123, 458776, !dbg !11315
  store i32 %or133, i32* %result132, align 8, !dbg !11315
  br label %if.end138, !dbg !11316

if.else134:                                       ; preds = %lor.lhs.false125, %if.else116
  %124 = load i32, i32* %status.addr, align 4, !dbg !11317
  %or135 = or i32 262144, %124, !dbg !11318
  %125 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11319
  %result136 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %125, i32 0, i32 24, !dbg !11320
  %126 = load i32, i32* %result136, align 8, !dbg !11321
  %or137 = or i32 %126, %or135, !dbg !11321
  store i32 %or137, i32* %result136, align 8, !dbg !11321
  br label %if.end138

if.end138:                                        ; preds = %if.else134, %if.then131
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.then113
  br label %sw.epilog, !dbg !11322

sw.epilog:                                        ; preds = %if.end139, %sw.bb104, %if.end103, %sw.bb
  %127 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11323
  %128 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11324
  call void @mega_free_scb(%struct.adapter_t* %127, %struct.scb_t* %128) #11, !dbg !11325
  %129 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd, align 8, !dbg !11326
  %SCp140 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %129, i32 0, i32 22, !dbg !11326
  %130 = bitcast %struct.scsi_pointer* %SCp140 to %struct.list_head*, !dbg !11326
  %131 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11327
  %completed_list141 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %131, i32 0, i32 12, !dbg !11328
  call void @list_add_tail(%struct.list_head* %130, %struct.list_head* %completed_list141) #11, !dbg !11329
  br label %for.inc, !dbg !11330

for.inc:                                          ; preds = %sw.epilog, %if.then25, %if.then16, %if.then9
  %132 = load i32, i32* %i, align 4, !dbg !11331
  %inc = add i32 %132, 1, !dbg !11331
  store i32 %inc, i32* %i, align 4, !dbg !11331
  br label %for.cond, !dbg !11332, !llvm.loop !11333

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11335
}

; Function Attrs: noredzone
declare dso_local void @complete(%struct.completion*) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_crit(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @sg_virt(%struct.scatterlist* %sg) #0 !dbg !11336 {
entry:
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !9909, metadata !DIExpression()), !dbg !11339
  %sg.addr = alloca %struct.scatterlist*, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !11341, metadata !DIExpression()), !dbg !11342
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !11343
  %call = call %struct.page* @sg_page(%struct.scatterlist* %0) #11, !dbg !11343
  store %struct.page* %call, %struct.page** %page.addr.i, align 8
  %1 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !11344
  %2 = load i64, i64* @vmemmap_base, align 8, !dbg !11344
  %3 = inttoptr i64 %2 to %struct.page*, !dbg !11344
  %sub.ptr.lhs.cast.i = ptrtoint %struct.page* %1 to i64, !dbg !11344
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %2, !dbg !11344
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 64, !dbg !11344
  %shl.i = shl i64 %sub.ptr.div.i, 12, !dbg !11344
  %4 = load i64, i64* @page_offset_base, align 8, !dbg !11344
  %add.i = add i64 %shl.i, %4, !dbg !11344
  %5 = inttoptr i64 %add.i to i8*, !dbg !11344
  %6 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !11345
  %offset = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %6, i32 0, i32 1, !dbg !11346
  %7 = load i32, i32* %offset, align 8, !dbg !11346
  %idx.ext = zext i32 %7 to i64, !dbg !11347
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !11347
  ret i8* %add.ptr, !dbg !11348
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb_p(i32 %port) #0 !dbg !11349 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11352, metadata !DIExpression()), !dbg !11353
  call void @llvm.dbg.declare(metadata i8* %value, metadata !11354, metadata !DIExpression()), !dbg !11353
  %0 = load i32, i32* %port.addr, align 4, !dbg !11353
  %call = call zeroext i8 @inb(i32 %0) #11, !dbg !11353
  store i8 %call, i8* %value, align 1, !dbg !11353
  call void @slow_down_io() #11, !dbg !11353
  %1 = load i8, i8* %value, align 1, !dbg !11353
  ret i8 %1, !dbg !11353
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb(i32 %port) #0 !dbg !11355 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11356, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.declare(metadata i8* %value, metadata !11358, metadata !DIExpression()), !dbg !11357
  %0 = load i32, i32* %port.addr, align 4, !dbg !11357
  %1 = call i8 asm sideeffect "inb ${1:w}, ${0:b}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #7, !dbg !11357, !srcloc !11359
  store i8 %1, i8* %value, align 1, !dbg !11357
  %2 = load i8, i8* %value, align 1, !dbg !11357
  ret i8 %2, !dbg !11357
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @issue_scb_block(%struct.adapter_t* %adapter, i8* %raw_mbox) #0 !dbg !11360 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %raw_mbox.addr = alloca i8*, align 8
  %mbox64 = alloca %struct.mbox64_t*, align 8
  %mbox = alloca %struct.mbox_t*, align 8
  %byte = alloca i8, align 1
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !11365, metadata !DIExpression()), !dbg !11366
  store i8* %raw_mbox, i8** %raw_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %raw_mbox.addr, metadata !11367, metadata !DIExpression()), !dbg !11368
  call void @llvm.dbg.declare(metadata %struct.mbox64_t** %mbox64, metadata !11369, metadata !DIExpression()), !dbg !11370
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11371
  %mbox641 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %0, i32 0, i32 6, !dbg !11372
  %1 = load %struct.mbox64_t*, %struct.mbox64_t** %mbox641, align 8, !dbg !11372
  store %struct.mbox64_t* %1, %struct.mbox64_t** %mbox64, align 8, !dbg !11370
  call void @llvm.dbg.declare(metadata %struct.mbox_t** %mbox, metadata !11373, metadata !DIExpression()), !dbg !11374
  %2 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11375
  %mbox2 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %2, i32 0, i32 7, !dbg !11376
  %3 = load %struct.mbox_t*, %struct.mbox_t** %mbox2, align 8, !dbg !11376
  store %struct.mbox_t* %3, %struct.mbox_t** %mbox, align 8, !dbg !11374
  call void @llvm.dbg.declare(metadata i8* %byte, metadata !11377, metadata !DIExpression()), !dbg !11378
  %4 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11379
  %call = call i32 @mega_busywait_mbox(%struct.adapter_t* %4) #11, !dbg !11381
  %tobool = icmp ne i32 %call, 0, !dbg !11381
  br i1 %tobool, label %if.then, label %if.end, !dbg !11382

if.then:                                          ; preds = %entry
  br label %bug_blocked_mailbox, !dbg !11383

if.end:                                           ; preds = %entry
  %5 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11384
  %6 = bitcast %struct.mbox_t* %5 to i8*, !dbg !11385
  %7 = load i8*, i8** %raw_mbox.addr, align 8, !dbg !11386
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 15, i1 false), !dbg !11385
  %8 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11387
  %m_out = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %8, i32 0, i32 0, !dbg !11388
  %cmdid = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out, i32 0, i32 1, !dbg !11389
  store volatile i8 -2, i8* %cmdid, align 1, !dbg !11390
  %9 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11391
  %m_in = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %9, i32 0, i32 1, !dbg !11392
  %busy = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in, i32 0, i32 0, !dbg !11393
  store volatile i8 1, i8* %busy, align 1, !dbg !11394
  %10 = load i8*, i8** %raw_mbox.addr, align 8, !dbg !11395
  %arrayidx = getelementptr i8, i8* %10, i64 0, !dbg !11395
  %11 = load i8, i8* %arrayidx, align 1, !dbg !11395
  %conv = zext i8 %11 to i32, !dbg !11395
  switch i32 %conv, label %sw.default [
    i32 167, label %sw.bb
    i32 168, label %sw.bb
    i32 195, label %sw.bb
    i32 227, label %sw.bb
  ], !dbg !11396

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end
  %12 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11397
  %m_out3 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %12, i32 0, i32 0, !dbg !11399
  %xferaddr = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out3, i32 0, i32 4, !dbg !11400
  %13 = load volatile i32, i32* %xferaddr, align 1, !dbg !11400
  %14 = load %struct.mbox64_t*, %struct.mbox64_t** %mbox64, align 8, !dbg !11401
  %xfer_segment_lo = getelementptr inbounds %struct.mbox64_t, %struct.mbox64_t* %14, i32 0, i32 0, !dbg !11402
  store volatile i32 %13, i32* %xfer_segment_lo, align 1, !dbg !11403
  %15 = load %struct.mbox64_t*, %struct.mbox64_t** %mbox64, align 8, !dbg !11404
  %xfer_segment_hi = getelementptr inbounds %struct.mbox64_t, %struct.mbox64_t* %15, i32 0, i32 1, !dbg !11405
  store volatile i32 0, i32* %xfer_segment_hi, align 1, !dbg !11406
  %16 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11407
  %m_out4 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %16, i32 0, i32 0, !dbg !11408
  %xferaddr5 = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out4, i32 0, i32 4, !dbg !11409
  store volatile i32 -1, i32* %xferaddr5, align 1, !dbg !11410
  br label %sw.epilog, !dbg !11411

sw.default:                                       ; preds = %if.end
  %17 = load %struct.mbox64_t*, %struct.mbox64_t** %mbox64, align 8, !dbg !11412
  %xfer_segment_lo6 = getelementptr inbounds %struct.mbox64_t, %struct.mbox64_t* %17, i32 0, i32 0, !dbg !11413
  store volatile i32 0, i32* %xfer_segment_lo6, align 1, !dbg !11414
  %18 = load %struct.mbox64_t*, %struct.mbox64_t** %mbox64, align 8, !dbg !11415
  %xfer_segment_hi7 = getelementptr inbounds %struct.mbox64_t, %struct.mbox64_t* %18, i32 0, i32 1, !dbg !11416
  store volatile i32 0, i32* %xfer_segment_hi7, align 1, !dbg !11417
  br label %sw.epilog, !dbg !11418

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %19 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11419
  %flag = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %19, i32 0, i32 1, !dbg !11419
  %20 = load i32, i32* %flag, align 4, !dbg !11419
  %conv8 = zext i32 %20 to i64, !dbg !11419
  %and = and i64 %conv8, 536870912, !dbg !11419
  %tobool9 = icmp ne i64 %and, 0, !dbg !11419
  %lnot = xor i1 %tobool9, true, !dbg !11419
  %lnot10 = xor i1 %lnot, true, !dbg !11419
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !11419
  %conv11 = sext i32 %lnot.ext to i64, !dbg !11419
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !11419
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !11421

if.then13:                                        ; preds = %sw.epilog
  %21 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11422
  %m_in14 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %21, i32 0, i32 1, !dbg !11424
  %poll = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in14, i32 0, i32 4, !dbg !11425
  store volatile i8 0, i8* %poll, align 1, !dbg !11426
  %22 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11427
  %m_in15 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %22, i32 0, i32 1, !dbg !11428
  %ack = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in15, i32 0, i32 5, !dbg !11429
  store volatile i8 0, i8* %ack, align 1, !dbg !11430
  %23 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11431
  %m_in16 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %23, i32 0, i32 1, !dbg !11432
  %numstatus = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in16, i32 0, i32 1, !dbg !11433
  store volatile i8 -1, i8* %numstatus, align 1, !dbg !11434
  %24 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11435
  %m_in17 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %24, i32 0, i32 1, !dbg !11436
  %status = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in17, i32 0, i32 2, !dbg !11437
  store volatile i8 -1, i8* %status, align 1, !dbg !11438
  %25 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11439
  %mbox_dma = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %25, i32 0, i32 8, !dbg !11439
  %26 = load i64, i64* %mbox_dma, align 8, !dbg !11439
  %or = or i64 %26, 1, !dbg !11439
  %conv18 = trunc i64 %or to i32, !dbg !11439
  %27 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11439
  %mmio_base = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %27, i32 0, i32 3, !dbg !11439
  %28 = load i8*, i8** %mmio_base, align 8, !dbg !11439
  %add.ptr = getelementptr i8, i8* %28, i64 32, !dbg !11439
  call void @writel(i32 %conv18, i8* %add.ptr) #11, !dbg !11439
  br label %while.cond, !dbg !11440

while.cond:                                       ; preds = %while.body, %if.then13
  %29 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11441
  %m_in19 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %29, i32 0, i32 1, !dbg !11442
  %numstatus20 = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in19, i32 0, i32 1, !dbg !11443
  %30 = load volatile i8, i8* %numstatus20, align 1, !dbg !11443
  %conv21 = zext i8 %30 to i32, !dbg !11444
  %cmp = icmp eq i32 %conv21, 255, !dbg !11445
  br i1 %cmp, label %while.body, label %while.end, !dbg !11440

while.body:                                       ; preds = %while.cond
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11446, !srcloc !7528
  br label %while.cond, !dbg !11440, !llvm.loop !11449

while.end:                                        ; preds = %while.cond
  %31 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11451
  %m_in23 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %31, i32 0, i32 1, !dbg !11452
  %numstatus24 = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in23, i32 0, i32 1, !dbg !11453
  store volatile i8 -1, i8* %numstatus24, align 1, !dbg !11454
  br label %while.cond25, !dbg !11455

while.cond25:                                     ; preds = %while.body31, %while.end
  %32 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11456
  %m_in26 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %32, i32 0, i32 1, !dbg !11457
  %poll27 = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in26, i32 0, i32 4, !dbg !11458
  %33 = load volatile i8, i8* %poll27, align 1, !dbg !11458
  %conv28 = zext i8 %33 to i32, !dbg !11459
  %cmp29 = icmp ne i32 %conv28, 119, !dbg !11460
  br i1 %cmp29, label %while.body31, label %while.end32, !dbg !11455

while.body31:                                     ; preds = %while.cond25
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11461, !srcloc !7528
  br label %while.cond25, !dbg !11455, !llvm.loop !11464

while.end32:                                      ; preds = %while.cond25
  %34 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11466
  %m_in33 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %34, i32 0, i32 1, !dbg !11467
  %poll34 = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in33, i32 0, i32 4, !dbg !11468
  store volatile i8 0, i8* %poll34, align 1, !dbg !11469
  %35 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11470
  %m_in35 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %35, i32 0, i32 1, !dbg !11471
  %ack36 = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in35, i32 0, i32 5, !dbg !11472
  store volatile i8 119, i8* %ack36, align 1, !dbg !11473
  %36 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11474
  %mbox_dma37 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %36, i32 0, i32 8, !dbg !11474
  %37 = load i64, i64* %mbox_dma37, align 8, !dbg !11474
  %or38 = or i64 %37, 2, !dbg !11474
  %conv39 = trunc i64 %or38 to i32, !dbg !11474
  %38 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11474
  %mmio_base40 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %38, i32 0, i32 3, !dbg !11474
  %39 = load i8*, i8** %mmio_base40, align 8, !dbg !11474
  %add.ptr41 = getelementptr i8, i8* %39, i64 32, !dbg !11474
  call void @writel(i32 %conv39, i8* %add.ptr41) #11, !dbg !11474
  br label %while.cond42, !dbg !11475

while.cond42:                                     ; preds = %while.body48, %while.end32
  %40 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11476
  %mmio_base43 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %40, i32 0, i32 3, !dbg !11476
  %41 = load i8*, i8** %mmio_base43, align 8, !dbg !11476
  %add.ptr44 = getelementptr i8, i8* %41, i64 32, !dbg !11476
  %call45 = call i32 @readl(i8* %add.ptr44) #11, !dbg !11476
  %and46 = and i32 %call45, 2, !dbg !11477
  %tobool47 = icmp ne i32 %and46, 0, !dbg !11475
  br i1 %tobool47, label %while.body48, label %while.end49, !dbg !11475

while.body48:                                     ; preds = %while.cond42
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11478, !srcloc !7528
  br label %while.cond42, !dbg !11475, !llvm.loop !11481

while.end49:                                      ; preds = %while.cond42
  br label %if.end75, !dbg !11483

if.else:                                          ; preds = %sw.epilog
  %42 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11484
  %base = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %42, i32 0, i32 2, !dbg !11484
  %43 = load i64, i64* %base, align 8, !dbg !11484
  %add = add i64 %43, 1, !dbg !11484
  %conv50 = trunc i64 %add to i32, !dbg !11484
  call void @outb_p(i8 zeroext 0, i32 %conv50) #11, !dbg !11484
  %44 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11486
  %base51 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %44, i32 0, i32 2, !dbg !11486
  %45 = load i64, i64* %base51, align 8, !dbg !11486
  %add52 = add i64 %45, 0, !dbg !11486
  %conv53 = trunc i64 %add52 to i32, !dbg !11486
  call void @outb_p(i8 zeroext 16, i32 %conv53) #11, !dbg !11486
  br label %while.cond54, !dbg !11487

while.cond54:                                     ; preds = %while.body64, %if.else
  %46 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11488
  %base55 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %46, i32 0, i32 2, !dbg !11488
  %47 = load i64, i64* %base55, align 8, !dbg !11488
  %add56 = add i64 %47, 10, !dbg !11488
  %conv57 = trunc i64 %add56 to i32, !dbg !11488
  %call58 = call zeroext i8 @inb_p(i32 %conv57) #11, !dbg !11488
  store i8 %call58, i8* %byte, align 1, !dbg !11489
  %conv59 = zext i8 %call58 to i32, !dbg !11490
  %and60 = and i32 %conv59, 64, !dbg !11491
  %tobool61 = icmp ne i32 %and60, 0, !dbg !11492
  %lnot62 = xor i1 %tobool61, true, !dbg !11492
  br i1 %lnot62, label %while.body64, label %while.end65, !dbg !11487

while.body64:                                     ; preds = %while.cond54
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11493, !srcloc !7528
  br label %while.cond54, !dbg !11487, !llvm.loop !11496

while.end65:                                      ; preds = %while.cond54
  %48 = load i8, i8* %byte, align 1, !dbg !11498
  %49 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11498
  %base66 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %49, i32 0, i32 2, !dbg !11498
  %50 = load i64, i64* %base66, align 8, !dbg !11498
  %add67 = add i64 %50, 10, !dbg !11498
  %conv68 = trunc i64 %add67 to i32, !dbg !11498
  call void @outb_p(i8 zeroext %48, i32 %conv68) #11, !dbg !11498
  %51 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11499
  %base69 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %51, i32 0, i32 2, !dbg !11499
  %52 = load i64, i64* %base69, align 8, !dbg !11499
  %add70 = add i64 %52, 1, !dbg !11499
  %conv71 = trunc i64 %add70 to i32, !dbg !11499
  call void @outb_p(i8 zeroext -64, i32 %conv71) #11, !dbg !11499
  %53 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11500
  %base72 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %53, i32 0, i32 2, !dbg !11500
  %54 = load i64, i64* %base72, align 8, !dbg !11500
  %add73 = add i64 %54, 0, !dbg !11500
  %conv74 = trunc i64 %add73 to i32, !dbg !11500
  call void @outb_p(i8 zeroext 8, i32 %conv74) #11, !dbg !11500
  br label %if.end75

if.end75:                                         ; preds = %while.end65, %while.end49
  %55 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11501
  %m_in76 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %55, i32 0, i32 1, !dbg !11502
  %status77 = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in76, i32 0, i32 2, !dbg !11503
  %56 = load volatile i8, i8* %status77, align 1, !dbg !11503
  %conv78 = zext i8 %56 to i32, !dbg !11501
  store i32 %conv78, i32* %retval, align 4, !dbg !11504
  br label %return, !dbg !11504

bug_blocked_mailbox:                              ; preds = %if.then
  call void @llvm.dbg.label(metadata !11505), !dbg !11506
  %57 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11507
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %57, i32 0, i32 9, !dbg !11507
  %58 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !11507
  %dev79 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %58, i32 0, i32 41, !dbg !11507
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev79, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i64 0, i64 0)) #12, !dbg !11507
  call void @__const_udelay(i64 4295000) #11, !dbg !11508
  store i32 -1, i32* %retval, align 4, !dbg !11513
  br label %return, !dbg !11513

return:                                           ; preds = %bug_blocked_mailbox, %if.end75
  %59 = load i32, i32* %retval, align 4, !dbg !11514
  ret i32 %59, !dbg !11514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mega_8_to_40ld(%struct.mraid_inquiry* %inquiry, %struct.mega_inquiry3* %enquiry3, %struct.mega_product_info* %product_info) #0 !dbg !11515 {
entry:
  %inquiry.addr = alloca %struct.mraid_inquiry*, align 8
  %enquiry3.addr = alloca %struct.mega_inquiry3*, align 8
  %product_info.addr = alloca %struct.mega_product_info*, align 8
  %i = alloca i32, align 4
  store %struct.mraid_inquiry* %inquiry, %struct.mraid_inquiry** %inquiry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mraid_inquiry** %inquiry.addr, metadata !11518, metadata !DIExpression()), !dbg !11519
  store %struct.mega_inquiry3* %enquiry3, %struct.mega_inquiry3** %enquiry3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mega_inquiry3** %enquiry3.addr, metadata !11520, metadata !DIExpression()), !dbg !11521
  store %struct.mega_product_info* %product_info, %struct.mega_product_info** %product_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mega_product_info** %product_info.addr, metadata !11522, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11524, metadata !DIExpression()), !dbg !11525
  %0 = load %struct.mraid_inquiry*, %struct.mraid_inquiry** %inquiry.addr, align 8, !dbg !11526
  %adapter_info = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %0, i32 0, i32 0, !dbg !11527
  %max_commands = getelementptr inbounds %struct.mega_adp_info, %struct.mega_adp_info* %adapter_info, i32 0, i32 0, !dbg !11528
  %1 = load i8, i8* %max_commands, align 1, !dbg !11528
  %2 = load %struct.mega_product_info*, %struct.mega_product_info** %product_info.addr, align 8, !dbg !11529
  %max_commands1 = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %2, i32 0, i32 5, !dbg !11530
  store i8 %1, i8* %max_commands1, align 1, !dbg !11531
  %3 = load %struct.mraid_inquiry*, %struct.mraid_inquiry** %inquiry.addr, align 8, !dbg !11532
  %adapter_info2 = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %3, i32 0, i32 0, !dbg !11533
  %rebuild_rate = getelementptr inbounds %struct.mega_adp_info, %struct.mega_adp_info* %adapter_info2, i32 0, i32 1, !dbg !11534
  %4 = load i8, i8* %rebuild_rate, align 1, !dbg !11534
  %5 = load %struct.mega_inquiry3*, %struct.mega_inquiry3** %enquiry3.addr, align 8, !dbg !11535
  %rebuild_rate3 = getelementptr inbounds %struct.mega_inquiry3, %struct.mega_inquiry3* %5, i32 0, i32 3, !dbg !11536
  store i8 %4, i8* %rebuild_rate3, align 1, !dbg !11537
  %6 = load %struct.mraid_inquiry*, %struct.mraid_inquiry** %inquiry.addr, align 8, !dbg !11538
  %adapter_info4 = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %6, i32 0, i32 0, !dbg !11539
  %nchannels = getelementptr inbounds %struct.mega_adp_info, %struct.mega_adp_info* %adapter_info4, i32 0, i32 3, !dbg !11540
  %7 = load i8, i8* %nchannels, align 1, !dbg !11540
  %8 = load %struct.mega_product_info*, %struct.mega_product_info** %product_info.addr, align 8, !dbg !11541
  %nchannels5 = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %8, i32 0, i32 6, !dbg !11542
  store i8 %7, i8* %nchannels5, align 1, !dbg !11543
  store i32 0, i32* %i, align 4, !dbg !11544
  br label %for.cond, !dbg !11546

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !11547
  %cmp = icmp slt i32 %9, 4, !dbg !11549
  br i1 %cmp, label %for.body, label %for.end, !dbg !11550

for.body:                                         ; preds = %for.cond
  %10 = load %struct.mraid_inquiry*, %struct.mraid_inquiry** %inquiry.addr, align 8, !dbg !11551
  %adapter_info6 = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %10, i32 0, i32 0, !dbg !11553
  %fw_version = getelementptr inbounds %struct.mega_adp_info, %struct.mega_adp_info* %adapter_info6, i32 0, i32 4, !dbg !11554
  %11 = load i32, i32* %i, align 4, !dbg !11555
  %idxprom = sext i32 %11 to i64, !dbg !11551
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %fw_version, i64 0, i64 %idxprom, !dbg !11551
  %12 = load i8, i8* %arrayidx, align 1, !dbg !11551
  %13 = load %struct.mega_product_info*, %struct.mega_product_info** %product_info.addr, align 8, !dbg !11556
  %fw_version7 = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %13, i32 0, i32 2, !dbg !11557
  %14 = load i32, i32* %i, align 4, !dbg !11558
  %idxprom8 = sext i32 %14 to i64, !dbg !11556
  %arrayidx9 = getelementptr [16 x i8], [16 x i8]* %fw_version7, i64 0, i64 %idxprom8, !dbg !11556
  store i8 %12, i8* %arrayidx9, align 1, !dbg !11559
  %15 = load %struct.mraid_inquiry*, %struct.mraid_inquiry** %inquiry.addr, align 8, !dbg !11560
  %adapter_info10 = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %15, i32 0, i32 0, !dbg !11561
  %bios_version = getelementptr inbounds %struct.mega_adp_info, %struct.mega_adp_info* %adapter_info10, i32 0, i32 9, !dbg !11562
  %16 = load i32, i32* %i, align 4, !dbg !11563
  %idxprom11 = sext i32 %16 to i64, !dbg !11560
  %arrayidx12 = getelementptr [4 x i8], [4 x i8]* %bios_version, i64 0, i64 %idxprom11, !dbg !11560
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !11560
  %18 = load %struct.mega_product_info*, %struct.mega_product_info** %product_info.addr, align 8, !dbg !11564
  %bios_version13 = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %18, i32 0, i32 3, !dbg !11565
  %19 = load i32, i32* %i, align 4, !dbg !11566
  %idxprom14 = sext i32 %19 to i64, !dbg !11564
  %arrayidx15 = getelementptr [16 x i8], [16 x i8]* %bios_version13, i64 0, i64 %idxprom14, !dbg !11564
  store i8 %17, i8* %arrayidx15, align 1, !dbg !11567
  br label %for.inc, !dbg !11568

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !11569
  %inc = add i32 %20, 1, !dbg !11569
  store i32 %inc, i32* %i, align 4, !dbg !11569
  br label %for.cond, !dbg !11570, !llvm.loop !11571

for.end:                                          ; preds = %for.cond
  %21 = load %struct.mraid_inquiry*, %struct.mraid_inquiry** %inquiry.addr, align 8, !dbg !11573
  %adapter_info16 = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %21, i32 0, i32 0, !dbg !11574
  %cache_flush_interval = getelementptr inbounds %struct.mega_adp_info, %struct.mega_adp_info* %adapter_info16, i32 0, i32 8, !dbg !11575
  %22 = load i8, i8* %cache_flush_interval, align 1, !dbg !11575
  %23 = load %struct.mega_inquiry3*, %struct.mega_inquiry3** %enquiry3.addr, align 8, !dbg !11576
  %cache_flush_interval17 = getelementptr inbounds %struct.mega_inquiry3, %struct.mega_inquiry3* %23, i32 0, i32 4, !dbg !11577
  store i8 %22, i8* %cache_flush_interval17, align 1, !dbg !11578
  %24 = load %struct.mraid_inquiry*, %struct.mraid_inquiry** %inquiry.addr, align 8, !dbg !11579
  %adapter_info18 = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %24, i32 0, i32 0, !dbg !11580
  %dram_size = getelementptr inbounds %struct.mega_adp_info, %struct.mega_adp_info* %adapter_info18, i32 0, i32 7, !dbg !11581
  %25 = load i8, i8* %dram_size, align 1, !dbg !11581
  %conv = zext i8 %25 to i16, !dbg !11579
  %26 = load %struct.mega_product_info*, %struct.mega_product_info** %product_info.addr, align 8, !dbg !11582
  %dram_size19 = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %26, i32 0, i32 10, !dbg !11583
  store i16 %conv, i16* %dram_size19, align 1, !dbg !11584
  %27 = load %struct.mraid_inquiry*, %struct.mraid_inquiry** %inquiry.addr, align 8, !dbg !11585
  %logdrv_info = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %27, i32 0, i32 1, !dbg !11586
  %num_ldrv = getelementptr inbounds %struct.mega_ldrv_info, %struct.mega_ldrv_info* %logdrv_info, i32 0, i32 0, !dbg !11587
  %28 = load i8, i8* %num_ldrv, align 1, !dbg !11587
  %29 = load %struct.mega_inquiry3*, %struct.mega_inquiry3** %enquiry3.addr, align 8, !dbg !11588
  %num_ldrv20 = getelementptr inbounds %struct.mega_inquiry3, %struct.mega_inquiry3* %29, i32 0, i32 8, !dbg !11589
  store i8 %28, i8* %num_ldrv20, align 1, !dbg !11590
  store i32 0, i32* %i, align 4, !dbg !11591
  br label %for.cond21, !dbg !11593

for.cond21:                                       ; preds = %for.inc43, %for.end
  %30 = load i32, i32* %i, align 4, !dbg !11594
  %cmp22 = icmp slt i32 %30, 8, !dbg !11596
  br i1 %cmp22, label %for.body24, label %for.end45, !dbg !11597

for.body24:                                       ; preds = %for.cond21
  %31 = load %struct.mraid_inquiry*, %struct.mraid_inquiry** %inquiry.addr, align 8, !dbg !11598
  %logdrv_info25 = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %31, i32 0, i32 1, !dbg !11600
  %ldrv_size = getelementptr inbounds %struct.mega_ldrv_info, %struct.mega_ldrv_info* %logdrv_info25, i32 0, i32 2, !dbg !11601
  %32 = load i32, i32* %i, align 4, !dbg !11602
  %idxprom26 = sext i32 %32 to i64, !dbg !11598
  %arrayidx27 = getelementptr [8 x i32], [8 x i32]* %ldrv_size, i64 0, i64 %idxprom26, !dbg !11598
  %33 = load i32, i32* %arrayidx27, align 1, !dbg !11598
  %34 = load %struct.mega_inquiry3*, %struct.mega_inquiry3** %enquiry3.addr, align 8, !dbg !11603
  %ldrv_size28 = getelementptr inbounds %struct.mega_inquiry3, %struct.mega_inquiry3* %34, i32 0, i32 11, !dbg !11604
  %35 = load i32, i32* %i, align 4, !dbg !11605
  %idxprom29 = sext i32 %35 to i64, !dbg !11603
  %arrayidx30 = getelementptr [40 x i32], [40 x i32]* %ldrv_size28, i64 0, i64 %idxprom29, !dbg !11603
  store i32 %33, i32* %arrayidx30, align 1, !dbg !11606
  %36 = load %struct.mraid_inquiry*, %struct.mraid_inquiry** %inquiry.addr, align 8, !dbg !11607
  %logdrv_info31 = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %36, i32 0, i32 1, !dbg !11608
  %ldrv_prop = getelementptr inbounds %struct.mega_ldrv_info, %struct.mega_ldrv_info* %logdrv_info31, i32 0, i32 3, !dbg !11609
  %37 = load i32, i32* %i, align 4, !dbg !11610
  %idxprom32 = sext i32 %37 to i64, !dbg !11607
  %arrayidx33 = getelementptr [8 x i8], [8 x i8]* %ldrv_prop, i64 0, i64 %idxprom32, !dbg !11607
  %38 = load i8, i8* %arrayidx33, align 1, !dbg !11607
  %39 = load %struct.mega_inquiry3*, %struct.mega_inquiry3** %enquiry3.addr, align 8, !dbg !11611
  %ldrv_prop34 = getelementptr inbounds %struct.mega_inquiry3, %struct.mega_inquiry3* %39, i32 0, i32 12, !dbg !11612
  %40 = load i32, i32* %i, align 4, !dbg !11613
  %idxprom35 = sext i32 %40 to i64, !dbg !11611
  %arrayidx36 = getelementptr [40 x i8], [40 x i8]* %ldrv_prop34, i64 0, i64 %idxprom35, !dbg !11611
  store i8 %38, i8* %arrayidx36, align 1, !dbg !11614
  %41 = load %struct.mraid_inquiry*, %struct.mraid_inquiry** %inquiry.addr, align 8, !dbg !11615
  %logdrv_info37 = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %41, i32 0, i32 1, !dbg !11616
  %ldrv_state = getelementptr inbounds %struct.mega_ldrv_info, %struct.mega_ldrv_info* %logdrv_info37, i32 0, i32 4, !dbg !11617
  %42 = load i32, i32* %i, align 4, !dbg !11618
  %idxprom38 = sext i32 %42 to i64, !dbg !11615
  %arrayidx39 = getelementptr [8 x i8], [8 x i8]* %ldrv_state, i64 0, i64 %idxprom38, !dbg !11615
  %43 = load i8, i8* %arrayidx39, align 1, !dbg !11615
  %44 = load %struct.mega_inquiry3*, %struct.mega_inquiry3** %enquiry3.addr, align 8, !dbg !11619
  %ldrv_state40 = getelementptr inbounds %struct.mega_inquiry3, %struct.mega_inquiry3* %44, i32 0, i32 13, !dbg !11620
  %45 = load i32, i32* %i, align 4, !dbg !11621
  %idxprom41 = sext i32 %45 to i64, !dbg !11619
  %arrayidx42 = getelementptr [40 x i8], [40 x i8]* %ldrv_state40, i64 0, i64 %idxprom41, !dbg !11619
  store i8 %43, i8* %arrayidx42, align 1, !dbg !11622
  br label %for.inc43, !dbg !11623

for.inc43:                                        ; preds = %for.body24
  %46 = load i32, i32* %i, align 4, !dbg !11624
  %inc44 = add i32 %46, 1, !dbg !11624
  store i32 %inc44, i32* %i, align 4, !dbg !11624
  br label %for.cond21, !dbg !11625, !llvm.loop !11626

for.end45:                                        ; preds = %for.cond21
  store i32 0, i32* %i, align 4, !dbg !11628
  br label %for.cond46, !dbg !11630

for.cond46:                                       ; preds = %for.inc55, %for.end45
  %47 = load i32, i32* %i, align 4, !dbg !11631
  %cmp47 = icmp slt i32 %47, 75, !dbg !11633
  br i1 %cmp47, label %for.body49, label %for.end57, !dbg !11634

for.body49:                                       ; preds = %for.cond46
  %48 = load %struct.mraid_inquiry*, %struct.mraid_inquiry** %inquiry.addr, align 8, !dbg !11635
  %pdrv_info = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %48, i32 0, i32 2, !dbg !11636
  %pdrv_state = getelementptr inbounds %struct.mega_pdrv_info, %struct.mega_pdrv_info* %pdrv_info, i32 0, i32 0, !dbg !11637
  %49 = load i32, i32* %i, align 4, !dbg !11638
  %idxprom50 = sext i32 %49 to i64, !dbg !11635
  %arrayidx51 = getelementptr [75 x i8], [75 x i8]* %pdrv_state, i64 0, i64 %idxprom50, !dbg !11635
  %50 = load i8, i8* %arrayidx51, align 1, !dbg !11635
  %51 = load %struct.mega_inquiry3*, %struct.mega_inquiry3** %enquiry3.addr, align 8, !dbg !11639
  %pdrv_state52 = getelementptr inbounds %struct.mega_inquiry3, %struct.mega_inquiry3* %51, i32 0, i32 14, !dbg !11640
  %52 = load i32, i32* %i, align 4, !dbg !11641
  %idxprom53 = sext i32 %52 to i64, !dbg !11639
  %arrayidx54 = getelementptr [256 x i8], [256 x i8]* %pdrv_state52, i64 0, i64 %idxprom53, !dbg !11639
  store i8 %50, i8* %arrayidx54, align 1, !dbg !11642
  br label %for.inc55, !dbg !11639

for.inc55:                                        ; preds = %for.body49
  %53 = load i32, i32* %i, align 4, !dbg !11643
  %inc56 = add i32 %53, 1, !dbg !11643
  store i32 %inc56, i32* %i, align 4, !dbg !11643
  br label %for.cond46, !dbg !11644, !llvm.loop !11645

for.end57:                                        ; preds = %for.cond46
  ret void, !dbg !11647
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #0 !dbg !6125 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11648, metadata !DIExpression()), !dbg !11649
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11650, metadata !DIExpression()), !dbg !11651
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11652, metadata !DIExpression()), !dbg !11653
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !11654, metadata !DIExpression()), !dbg !11655
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !11656, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !11658, metadata !DIExpression()), !dbg !11661
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11661
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #11, !dbg !11661
  %lnot = xor i1 %call, true, !dbg !11661
  %lnot1 = xor i1 %lnot, true, !dbg !11661
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11661
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !11661
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !11662
  %tobool = icmp ne i32 %1, 0, !dbg !11662
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !11662

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !11662
  %tobool2 = trunc i8 %2 to i1, !dbg !11662
  %lnot3 = xor i1 %tobool2, true, !dbg !11662
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !11664
  %lnot5 = xor i1 %3, true, !dbg !11662
  %lnot7 = xor i1 %lnot5, true, !dbg !11662
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !11662
  %conv = sext i32 %lnot.ext8 to i64, !dbg !11662
  %tobool9 = icmp ne i64 %conv, 0, !dbg !11662
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !11661

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !11665
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11667, metadata !DIExpression()), !dbg !11669
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !11669
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !11670
  %tobool10 = icmp ne i32 %4, 0, !dbg !11670
  %lnot11 = xor i1 %tobool10, true, !dbg !11670
  %lnot13 = xor i1 %lnot11, true, !dbg !11670
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !11670
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !11670
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !11670
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !11669

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !11670

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !11672

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !11674

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11672
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #11, !dbg !11672
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11672
  %call20 = call i8* @dev_name(%struct.device* %6) #11, !dbg !11672
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.45, i64 0, i64 0), i8* %call19, i8* %call20) #11, !dbg !11672
  br label %do.body21, !dbg !11672

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !11676

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !11678

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !11676

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.46, i64 0, i64 0), i32 276, i32 2313, i64 12) #7, !dbg !11680, !srcloc !11682
  br label %do.end25, !dbg !11680

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 287) #7, !dbg !11683, !srcloc !11685
  br label %do.body26, !dbg !11676

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !11686

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !11676

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !11672

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !11688

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !11672

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !11672

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !11669
  %tobool32 = icmp ne i32 %7, 0, !dbg !11669
  %lnot33 = xor i1 %tobool32, true, !dbg !11669
  %lnot35 = xor i1 %lnot33, true, !dbg !11669
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !11669
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !11669
  store i64 %conv37, i64* %tmp, align 8, !dbg !11670
  %8 = load i64, i64* %tmp, align 8, !dbg !11669
  br label %if.end38, !dbg !11665

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !11661
  %tobool40 = icmp ne i32 %9, 0, !dbg !11661
  %lnot41 = xor i1 %tobool40, true, !dbg !11661
  %lnot43 = xor i1 %lnot41, true, !dbg !11661
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !11661
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !11661
  store i64 %conv45, i64* %tmp39, align 8, !dbg !11662
  %10 = load i64, i64* %tmp39, align 8, !dbg !11661
  %tobool46 = icmp ne i64 %10, 0, !dbg !11690
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !11691

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !11692
  br label %return, !dbg !11692

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11693
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !11694
  %13 = load i64, i64* %size.addr, align 8, !dbg !11695
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #11, !dbg !11696
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11697
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !11698
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !11698
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !11698
  %18 = ptrtoint i8* %17 to i64, !dbg !11698
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #11, !dbg !11698
  %shr = lshr i64 %call49, 12, !dbg !11698
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !11698
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !11699
  %20 = ptrtoint i8* %19 to i64, !dbg !11699
  %and = and i64 %20, 4095, !dbg !11699
  %21 = load i64, i64* %size.addr, align 8, !dbg !11700
  %22 = load i32, i32* %dir.addr, align 4, !dbg !11701
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !11702
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #11, !dbg !11703
  store i64 %call50, i64* %retval, align 8, !dbg !11704
  br label %return, !dbg !11704

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !11705
  ret i64 %24, !dbg !11705
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #0 !dbg !11706 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11709, metadata !DIExpression()), !dbg !11710
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !11711, metadata !DIExpression()), !dbg !11712
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11713, metadata !DIExpression()), !dbg !11714
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !11715, metadata !DIExpression()), !dbg !11716
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !11717, metadata !DIExpression()), !dbg !11718
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11719
  %1 = load i64, i64* %addr.addr, align 8, !dbg !11720
  %2 = load i64, i64* %size.addr, align 8, !dbg !11721
  %3 = load i32, i32* %dir.addr, align 4, !dbg !11722
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !11723
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #11, !dbg !11724
  ret void, !dbg !11725
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mega_get_max_sgl(%struct.adapter_t* %adapter) #0 !dbg !11726 {
entry:
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %raw_mbox = alloca [15 x i8], align 1
  %mbox = alloca %struct.mbox_t*, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !11727, metadata !DIExpression()), !dbg !11728
  call void @llvm.dbg.declare(metadata [15 x i8]* %raw_mbox, metadata !11729, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.declare(metadata %struct.mbox_t** %mbox, metadata !11731, metadata !DIExpression()), !dbg !11732
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !11733
  %0 = bitcast i8* %arraydecay to %struct.mbox_t*, !dbg !11734
  store %struct.mbox_t* %0, %struct.mbox_t** %mbox, align 8, !dbg !11735
  %1 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11736
  %2 = bitcast %struct.mbox_t* %1 to i8*, !dbg !11737
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 15, i1 false), !dbg !11737
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11738
  %mega_buffer = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %3, i32 0, i32 14, !dbg !11739
  %4 = load i8*, i8** %mega_buffer, align 8, !dbg !11739
  call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 0, i64 2048, i1 false), !dbg !11740
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11741
  %buf_dma_handle = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %5, i32 0, i32 15, !dbg !11742
  %6 = load i64, i64* %buf_dma_handle, align 8, !dbg !11742
  %conv = trunc i64 %6 to i32, !dbg !11743
  %7 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11744
  %m_out = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %7, i32 0, i32 0, !dbg !11745
  %xferaddr = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out, i32 0, i32 4, !dbg !11746
  store i32 %conv, i32* %xferaddr, align 1, !dbg !11747
  %arrayidx = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !11748
  store i8 -92, i8* %arrayidx, align 1, !dbg !11749
  %arrayidx1 = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 2, !dbg !11750
  store i8 1, i8* %arrayidx1, align 1, !dbg !11751
  %8 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11752
  %arraydecay2 = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !11754
  %call = call i32 @issue_scb_block(%struct.adapter_t* %8, i8* %arraydecay2) #11, !dbg !11755
  %tobool = icmp ne i32 %call, 0, !dbg !11755
  br i1 %tobool, label %if.then, label %if.else, !dbg !11756

if.then:                                          ; preds = %entry
  %9 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11757
  %sglen = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %9, i32 0, i32 37, !dbg !11759
  store i8 26, i8* %sglen, align 8, !dbg !11760
  br label %if.end10, !dbg !11761

if.else:                                          ; preds = %entry
  %10 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11762
  %mega_buffer3 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %10, i32 0, i32 14, !dbg !11764
  %11 = load i8*, i8** %mega_buffer3, align 8, !dbg !11764
  %12 = load i8, i8* %11, align 1, !dbg !11765
  %13 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11766
  %sglen4 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %13, i32 0, i32 37, !dbg !11767
  store i8 %12, i8* %sglen4, align 8, !dbg !11768
  %14 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11769
  %sglen5 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %14, i32 0, i32 37, !dbg !11771
  %15 = load i8, i8* %sglen5, align 8, !dbg !11771
  %conv6 = zext i8 %15 to i32, !dbg !11769
  %cmp = icmp sgt i32 %conv6, 64, !dbg !11772
  br i1 %cmp, label %if.then8, label %if.end, !dbg !11773

if.then8:                                         ; preds = %if.else
  %16 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11774
  %sglen9 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %16, i32 0, i32 37, !dbg !11775
  store i8 64, i8* %sglen9, align 8, !dbg !11776
  br label %if.end, !dbg !11774

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  ret void, !dbg !11777
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_support_ext_cdb(%struct.adapter_t* %adapter) #0 !dbg !11778 {
entry:
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %raw_mbox = alloca [15 x i8], align 1
  %mbox = alloca %struct.mbox_t*, align 8
  %rval = alloca i32, align 4
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !11779, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.declare(metadata [15 x i8]* %raw_mbox, metadata !11781, metadata !DIExpression()), !dbg !11782
  call void @llvm.dbg.declare(metadata %struct.mbox_t** %mbox, metadata !11783, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.declare(metadata i32* %rval, metadata !11785, metadata !DIExpression()), !dbg !11786
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !11787
  %0 = bitcast i8* %arraydecay to %struct.mbox_t*, !dbg !11788
  store %struct.mbox_t* %0, %struct.mbox_t** %mbox, align 8, !dbg !11789
  %1 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11790
  %m_out = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %1, i32 0, i32 0, !dbg !11791
  %2 = bitcast %struct.mbox_out* %m_out to i8*, !dbg !11792
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 15, i1 false), !dbg !11792
  %arrayidx = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !11793
  store i8 -92, i8* %arrayidx, align 1, !dbg !11794
  %arrayidx1 = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 2, !dbg !11795
  store i8 22, i8* %arrayidx1, align 1, !dbg !11796
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11797
  %arraydecay2 = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !11798
  %call = call i32 @issue_scb_block(%struct.adapter_t* %3, i8* %arraydecay2) #11, !dbg !11799
  store i32 %call, i32* %rval, align 4, !dbg !11800
  %4 = load i32, i32* %rval, align 4, !dbg !11801
  %tobool = icmp ne i32 %4, 0, !dbg !11802
  %lnot = xor i1 %tobool, true, !dbg !11802
  %lnot.ext = zext i1 %lnot to i32, !dbg !11802
  ret i32 %lnot.ext, !dbg !11803
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_busywait_mbox(%struct.adapter_t* %adapter) #0 !dbg !11804 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.adapter_t*, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !11805, metadata !DIExpression()), !dbg !11806
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11807
  %mbox = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %0, i32 0, i32 7, !dbg !11809
  %1 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11809
  %m_in = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %1, i32 0, i32 1, !dbg !11810
  %busy = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in, i32 0, i32 0, !dbg !11811
  %2 = load volatile i8, i8* %busy, align 1, !dbg !11811
  %tobool = icmp ne i8 %2, 0, !dbg !11807
  br i1 %tobool, label %if.then, label %if.end, !dbg !11812

if.then:                                          ; preds = %entry
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11813
  %call = call i32 @__mega_busywait_mbox(%struct.adapter_t* %3) #11, !dbg !11814
  store i32 %call, i32* %retval, align 4, !dbg !11815
  br label %return, !dbg !11815

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11816
  br label %return, !dbg !11816

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !11817
  ret i32 %4, !dbg !11817
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mega_busywait_mbox(%struct.adapter_t* %adapter) #0 !dbg !11818 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %mbox = alloca %struct.mbox_t*, align 8
  %counter = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !11819, metadata !DIExpression()), !dbg !11820
  call void @llvm.dbg.declare(metadata %struct.mbox_t** %mbox, metadata !11821, metadata !DIExpression()), !dbg !11822
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11823
  %mbox1 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %0, i32 0, i32 7, !dbg !11824
  %1 = load %struct.mbox_t*, %struct.mbox_t** %mbox1, align 8, !dbg !11824
  store %struct.mbox_t* %1, %struct.mbox_t** %mbox, align 8, !dbg !11822
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11825, metadata !DIExpression()), !dbg !11826
  store i64 0, i64* %counter, align 8, !dbg !11827
  br label %for.cond, !dbg !11829

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, i64* %counter, align 8, !dbg !11830
  %cmp = icmp slt i64 %2, 10000, !dbg !11832
  br i1 %cmp, label %for.body, label %for.end, !dbg !11833

for.body:                                         ; preds = %for.cond
  %3 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !11834
  %m_in = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %3, i32 0, i32 1, !dbg !11837
  %busy = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in, i32 0, i32 0, !dbg !11838
  %4 = load volatile i8, i8* %busy, align 1, !dbg !11838
  %tobool = icmp ne i8 %4, 0, !dbg !11834
  br i1 %tobool, label %if.end, label %if.then, !dbg !11839

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !11840
  br label %return, !dbg !11840

if.end:                                           ; preds = %for.body
  call void @__const_udelay(i64 429500) #11, !dbg !11841
  call void @___might_sleep(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24, i64 0, i64 0), i32 1712, i32 0) #11, !dbg !11846
  %call = call i32 @_cond_resched() #11, !dbg !11846
  store i32 %call, i32* %tmp, align 4, !dbg !11846
  %5 = load i32, i32* %tmp, align 4, !dbg !11846
  br label %for.inc, !dbg !11848

for.inc:                                          ; preds = %if.end
  %6 = load i64, i64* %counter, align 8, !dbg !11849
  %inc = add i64 %6, 1, !dbg !11849
  store i64 %inc, i64* %counter, align 8, !dbg !11849
  br label %for.cond, !dbg !11850, !llvm.loop !11851

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !11853
  br label %return, !dbg !11853

return:                                           ; preds = %for.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !11854
  ret i32 %7, !dbg !11854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @___might_sleep(i8* %file, i32 %line, i32 %preempt_offset) #0 !dbg !11855 {
entry:
  %file.addr = alloca i8*, align 8
  %line.addr = alloca i32, align 4
  %preempt_offset.addr = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !11859, metadata !DIExpression()), !dbg !11860
  store i32 %line, i32* %line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line.addr, metadata !11861, metadata !DIExpression()), !dbg !11862
  store i32 %preempt_offset, i32* %preempt_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %preempt_offset.addr, metadata !11863, metadata !DIExpression()), !dbg !11864
  ret void, !dbg !11865
}

; Function Attrs: noredzone
declare dso_local i32 @_cond_resched() #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #2

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !11866 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11869, metadata !DIExpression()), !dbg !11870
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11871
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11873
  %1 = load i8*, i8** %init_name, align 8, !dbg !11873
  %tobool = icmp ne i8* %1, null, !dbg !11871
  br i1 %tobool, label %if.then, label %if.end, !dbg !11874

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11875
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !11876
  %3 = load i8*, i8** %init_name1, align 8, !dbg !11876
  store i8* %3, i8** %retval, align 8, !dbg !11877
  br label %return, !dbg !11877

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11878
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !11879
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !11880
  store i8* %call, i8** %retval, align 8, !dbg !11881
  br label %return, !dbg !11881

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !11882
  ret i8* %5, !dbg !11882
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #0 !dbg !11883 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11886, metadata !DIExpression()), !dbg !11887
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11888, metadata !DIExpression()), !dbg !11889
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !11890, metadata !DIExpression()), !dbg !11891
  ret void, !dbg !11892
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #0 !dbg !11893 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !11897, metadata !DIExpression()), !dbg !11898
  call void @llvm.dbg.declare(metadata i64* %y, metadata !11899, metadata !DIExpression()), !dbg !11900
  %0 = load i64, i64* %x.addr, align 8, !dbg !11901
  %sub = sub i64 %0, -2147483648, !dbg !11902
  store i64 %sub, i64* %y, align 8, !dbg !11900
  %1 = load i64, i64* %y, align 8, !dbg !11903
  %2 = load i64, i64* %x.addr, align 8, !dbg !11904
  %3 = load i64, i64* %y, align 8, !dbg !11905
  %cmp = icmp ugt i64 %2, %3, !dbg !11906
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11907

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !11908
  br label %cond.end, !dbg !11907

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !11909
  %sub1 = sub i64 -2147483648, %5, !dbg !11910
  br label %cond.end, !dbg !11907

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !11907
  %add = add i64 %1, %cond, !dbg !11911
  store i64 %add, i64* %x.addr, align 8, !dbg !11912
  %6 = load i64, i64* %x.addr, align 8, !dbg !11913
  ret i64 %6, !dbg !11914
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !11915 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !11920, metadata !DIExpression()), !dbg !11921
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !11922
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !11923
  %1 = load i8*, i8** %name, align 8, !dbg !11923
  ret i8* %1, !dbg !11924
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mega_free_sgl(%struct.adapter_t* %adapter) #0 !dbg !11925 {
entry:
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %scb = alloca %struct.scb_t*, align 8
  %i = alloca i32, align 4
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !11926, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.declare(metadata %struct.scb_t** %scb, metadata !11928, metadata !DIExpression()), !dbg !11929
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11930, metadata !DIExpression()), !dbg !11931
  store i32 0, i32* %i, align 4, !dbg !11932
  br label %for.cond, !dbg !11934

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11935
  %1 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11937
  %max_cmds = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %1, i32 0, i32 17, !dbg !11938
  %2 = load i8, i8* %max_cmds, align 8, !dbg !11938
  %conv = zext i8 %2 to i32, !dbg !11937
  %cmp = icmp slt i32 %0, %conv, !dbg !11939
  br i1 %cmp, label %for.body, label %for.end, !dbg !11940

for.body:                                         ; preds = %for.cond
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11941
  %scb_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %3, i32 0, i32 18, !dbg !11943
  %4 = load %struct.scb_t*, %struct.scb_t** %scb_list, align 8, !dbg !11943
  %5 = load i32, i32* %i, align 4, !dbg !11944
  %idxprom = sext i32 %5 to i64, !dbg !11941
  %arrayidx = getelementptr %struct.scb_t, %struct.scb_t* %4, i64 %idxprom, !dbg !11941
  store %struct.scb_t* %arrayidx, %struct.scb_t** %scb, align 8, !dbg !11945
  %6 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11946
  %sgl64 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %6, i32 0, i32 10, !dbg !11948
  %7 = load %struct.mega_sgl64*, %struct.mega_sgl64** %sgl64, align 8, !dbg !11948
  %tobool = icmp ne %struct.mega_sgl64* %7, null, !dbg !11946
  br i1 %tobool, label %if.then, label %if.end, !dbg !11949

if.then:                                          ; preds = %for.body
  %8 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11950
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %8, i32 0, i32 9, !dbg !11952
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !11952
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !11953
  %10 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11954
  %sglen = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %10, i32 0, i32 37, !dbg !11955
  %11 = load i8, i8* %sglen, align 8, !dbg !11955
  %conv3 = zext i8 %11 to i64, !dbg !11954
  %mul = mul i64 12, %conv3, !dbg !11956
  %12 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11957
  %sgl644 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %12, i32 0, i32 10, !dbg !11958
  %13 = load %struct.mega_sgl64*, %struct.mega_sgl64** %sgl644, align 8, !dbg !11958
  %14 = bitcast %struct.mega_sgl64* %13 to i8*, !dbg !11957
  %15 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11959
  %sgl_dma_addr = getelementptr inbounds %struct.scb_t, %struct.scb_t* %15, i32 0, i32 11, !dbg !11960
  %16 = load i64, i64* %sgl_dma_addr, align 8, !dbg !11960
  call void @dma_free_coherent(%struct.device* %dev2, i64 %mul, i8* %14, i64 %16) #11, !dbg !11961
  %17 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11962
  %sgl645 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %17, i32 0, i32 10, !dbg !11963
  store %struct.mega_sgl64* null, %struct.mega_sgl64** %sgl645, align 8, !dbg !11964
  br label %if.end, !dbg !11965

if.end:                                           ; preds = %if.then, %for.body
  %18 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11966
  %pthru = getelementptr inbounds %struct.scb_t, %struct.scb_t* %18, i32 0, i32 12, !dbg !11968
  %19 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !11968
  %tobool6 = icmp ne %struct.mega_passthru* %19, null, !dbg !11966
  br i1 %tobool6, label %if.then7, label %if.end12, !dbg !11969

if.then7:                                         ; preds = %if.end
  %20 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11970
  %dev8 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %20, i32 0, i32 9, !dbg !11972
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev8, align 8, !dbg !11972
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 41, !dbg !11973
  %22 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11974
  %pthru10 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %22, i32 0, i32 12, !dbg !11975
  %23 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru10, align 8, !dbg !11975
  %24 = bitcast %struct.mega_passthru* %23 to i8*, !dbg !11974
  %25 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11976
  %pthru_dma_addr = getelementptr inbounds %struct.scb_t, %struct.scb_t* %25, i32 0, i32 13, !dbg !11977
  %26 = load i64, i64* %pthru_dma_addr, align 8, !dbg !11977
  call void @dma_free_coherent(%struct.device* %dev9, i64 60, i8* %24, i64 %26) #11, !dbg !11978
  %27 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11979
  %pthru11 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %27, i32 0, i32 12, !dbg !11980
  store %struct.mega_passthru* null, %struct.mega_passthru** %pthru11, align 8, !dbg !11981
  br label %if.end12, !dbg !11982

if.end12:                                         ; preds = %if.then7, %if.end
  %28 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11983
  %epthru = getelementptr inbounds %struct.scb_t, %struct.scb_t* %28, i32 0, i32 14, !dbg !11985
  %29 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru, align 8, !dbg !11985
  %tobool13 = icmp ne %struct.mega_ext_passthru* %29, null, !dbg !11983
  br i1 %tobool13, label %if.then14, label %if.end19, !dbg !11986

if.then14:                                        ; preds = %if.end12
  %30 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !11987
  %dev15 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %30, i32 0, i32 9, !dbg !11989
  %31 = load %struct.pci_dev*, %struct.pci_dev** %dev15, align 8, !dbg !11989
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 41, !dbg !11990
  %32 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11991
  %epthru17 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %32, i32 0, i32 14, !dbg !11992
  %33 = load %struct.mega_ext_passthru*, %struct.mega_ext_passthru** %epthru17, align 8, !dbg !11992
  %34 = bitcast %struct.mega_ext_passthru* %33 to i8*, !dbg !11991
  %35 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11993
  %epthru_dma_addr = getelementptr inbounds %struct.scb_t, %struct.scb_t* %35, i32 0, i32 15, !dbg !11994
  %36 = load i64, i64* %epthru_dma_addr, align 8, !dbg !11994
  call void @dma_free_coherent(%struct.device* %dev16, i64 68, i8* %34, i64 %36) #11, !dbg !11995
  %37 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !11996
  %epthru18 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %37, i32 0, i32 14, !dbg !11997
  store %struct.mega_ext_passthru* null, %struct.mega_ext_passthru** %epthru18, align 8, !dbg !11998
  br label %if.end19, !dbg !11999

if.end19:                                         ; preds = %if.then14, %if.end12
  br label %for.inc, !dbg !12000

for.inc:                                          ; preds = %if.end19
  %38 = load i32, i32* %i, align 4, !dbg !12001
  %inc = add i32 %38, 1, !dbg !12001
  store i32 %inc, i32* %i, align 4, !dbg !12001
  br label %for.cond, !dbg !12002, !llvm.loop !12003

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12005
}

; Function Attrs: noredzone
declare dso_local void @__init_swait_queue_head(%struct.swait_queue_head*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !12006 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12009, metadata !DIExpression()), !dbg !12010
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12011, metadata !DIExpression()), !dbg !12012
  %0 = load i8*, i8** %data.addr, align 8, !dbg !12013
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12014
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !12015
  store i8* %0, i8** %driver_data, align 8, !dbg !12016
  ret void, !dbg !12017
}

; Function Attrs: noredzone
declare dso_local %struct.proc_dir_entry* @proc_mkdir_data(i8*, i16 zeroext, %struct.proc_dir_entry*, i8*) #2

; Function Attrs: noredzone
declare dso_local %struct.proc_dir_entry* @proc_create_single_data(i8*, i16 zeroext, %struct.proc_dir_entry*, i32 (%struct.seq_file*, i8*)*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_show_config(%struct.seq_file* %m, i8* %v) #0 !dbg !12018 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7407, metadata !DIExpression()), !dbg !12019
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7419, metadata !DIExpression()), !dbg !12022
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7423, metadata !DIExpression()), !dbg !12024
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7425, metadata !DIExpression()), !dbg !12025
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12026, metadata !DIExpression()), !dbg !12027
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !12028, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !12030, metadata !DIExpression()), !dbg !12031
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12032
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %0, i32 0, i32 11, !dbg !12033
  %1 = load i8*, i8** %private, align 8, !dbg !12033
  %2 = bitcast i8* %1 to %struct.adapter_t*, !dbg !12032
  store %struct.adapter_t* %2, %struct.adapter_t** %adapter, align 8, !dbg !12031
  %3 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12034
  call void @seq_puts(%struct.seq_file* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.68, i64 0, i64 0)) #11, !dbg !12035
  %4 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12036
  %product_info = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %4, i32 0, i32 16, !dbg !12038
  %product_name = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info, i32 0, i32 4, !dbg !12039
  %arrayidx = getelementptr [80 x i8], [80 x i8]* %product_name, i64 0, i64 0, !dbg !12036
  %5 = load i8, i8* %arrayidx, align 8, !dbg !12036
  %tobool = icmp ne i8 %5, 0, !dbg !12036
  br i1 %tobool, label %if.then, label %if.end, !dbg !12040

if.then:                                          ; preds = %entry
  %6 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12041
  %7 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12042
  %product_info1 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %7, i32 0, i32 16, !dbg !12043
  %product_name2 = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info1, i32 0, i32 4, !dbg !12044
  %arraydecay = getelementptr inbounds [80 x i8], [80 x i8]* %product_name2, i64 0, i64 0, !dbg !12042
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i64 0, i64 0), i8* %arraydecay) #11, !dbg !12045
  br label %if.end, !dbg !12045

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12046
  call void @seq_puts(%struct.seq_file* %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.70, i64 0, i64 0)) #11, !dbg !12047
  %9 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12048
  %flag = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %9, i32 0, i32 1, !dbg !12050
  %10 = load i32, i32* %flag, align 4, !dbg !12050
  %conv = zext i32 %10 to i64, !dbg !12048
  %and = and i64 %conv, 536870912, !dbg !12051
  %tobool3 = icmp ne i64 %and, 0, !dbg !12051
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !12052

if.then4:                                         ; preds = %if.end
  %11 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12053
  call void @seq_puts(%struct.seq_file* %11, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.71, i64 0, i64 0)) #11, !dbg !12054
  br label %if.end5, !dbg !12054

if.else:                                          ; preds = %if.end
  %12 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12055
  call void @seq_puts(%struct.seq_file* %12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72, i64 0, i64 0)) #11, !dbg !12056
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4
  %13 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12057
  %flag6 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %13, i32 0, i32 1, !dbg !12059
  %14 = load i32, i32* %flag6, align 4, !dbg !12059
  %conv7 = zext i32 %14 to i64, !dbg !12057
  %and8 = and i64 %conv7, 134217728, !dbg !12060
  %tobool9 = icmp ne i64 %and8, 0, !dbg !12060
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !12061

if.then10:                                        ; preds = %if.end5
  %15 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12062
  call void @seq_puts(%struct.seq_file* %15, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.73, i64 0, i64 0)) #11, !dbg !12063
  br label %if.end11, !dbg !12063

if.end11:                                         ; preds = %if.then10, %if.end5
  %16 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12064
  %flag12 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %16, i32 0, i32 1, !dbg !12066
  %17 = load i32, i32* %flag12, align 4, !dbg !12066
  %conv13 = zext i32 %17 to i64, !dbg !12064
  %and14 = and i64 %conv13, 67108864, !dbg !12067
  %tobool15 = icmp ne i64 %and14, 0, !dbg !12067
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !12068

if.then16:                                        ; preds = %if.end11
  %18 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12069
  call void @seq_puts(%struct.seq_file* %18, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.74, i64 0, i64 0)) #11, !dbg !12070
  br label %if.end17, !dbg !12070

if.end17:                                         ; preds = %if.then16, %if.end11
  %19 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12071
  %has_64bit_addr = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %19, i32 0, i32 24, !dbg !12073
  %20 = load i32, i32* %has_64bit_addr, align 8, !dbg !12073
  %tobool18 = icmp ne i32 %20, 0, !dbg !12071
  br i1 %tobool18, label %if.then19, label %if.else20, !dbg !12074

if.then19:                                        ; preds = %if.end17
  %21 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12075
  call void @seq_puts(%struct.seq_file* %21, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.75, i64 0, i64 0)) #11, !dbg !12076
  br label %if.end21, !dbg !12076

if.else20:                                        ; preds = %if.end17
  %22 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12077
  call void @seq_puts(%struct.seq_file* %22, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.76, i64 0, i64 0)) #11, !dbg !12078
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.then19
  %23 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12079
  %24 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12080
  %base = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %24, i32 0, i32 2, !dbg !12081
  %25 = load i64, i64* %base, align 8, !dbg !12081
  %26 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12082
  %host = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %26, i32 0, i32 13, !dbg !12083
  %27 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !12083
  %irq = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %27, i32 0, i32 45, !dbg !12084
  %28 = load i32, i32* %irq, align 4, !dbg !12084
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %23, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.77, i64 0, i64 0), i64 %25, i32 %28) #11, !dbg !12085
  %29 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12086
  %30 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12087
  %numldrv = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %30, i32 0, i32 20, !dbg !12088
  %31 = load i8, i8* %numldrv, align 4, !dbg !12088
  %conv22 = zext i8 %31 to i32, !dbg !12087
  %32 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12089
  %product_info23 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %32, i32 0, i32 16, !dbg !12090
  %nchannels = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info23, i32 0, i32 6, !dbg !12091
  %33 = load i8, i8* %nchannels, align 1, !dbg !12091
  %conv24 = zext i8 %33 to i32, !dbg !12089
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %29, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.78, i64 0, i64 0), i32 %conv22, i32 %conv24) #11, !dbg !12092
  %34 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12093
  %35 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12094
  %fw_version = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %35, i32 0, i32 21, !dbg !12095
  %arraydecay25 = getelementptr inbounds [7 x i8], [7 x i8]* %fw_version, i64 0, i64 0, !dbg !12094
  %36 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12096
  %bios_version = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %36, i32 0, i32 22, !dbg !12097
  %arraydecay26 = getelementptr inbounds [7 x i8], [7 x i8]* %bios_version, i64 0, i64 0, !dbg !12096
  %37 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12098
  %product_info27 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %37, i32 0, i32 16, !dbg !12099
  %dram_size = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info27, i32 0, i32 10, !dbg !12100
  %38 = load i16, i16* %dram_size, align 8, !dbg !12100
  %conv28 = zext i16 %38 to i32, !dbg !12098
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %34, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.79, i64 0, i64 0), i8* %arraydecay25, i8* %arraydecay26, i32 %conv28) #11, !dbg !12101
  %39 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12102
  %40 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12103
  %product_info29 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %40, i32 0, i32 16, !dbg !12104
  %max_commands = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info29, i32 0, i32 5, !dbg !12105
  %41 = load i8, i8* %max_commands, align 8, !dbg !12105
  %conv30 = zext i8 %41 to i32, !dbg !12103
  %42 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12106
  %max_cmds = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %42, i32 0, i32 17, !dbg !12107
  %43 = load i8, i8* %max_cmds, align 8, !dbg !12107
  %conv31 = zext i8 %43 to i32, !dbg !12106
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %39, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.80, i64 0, i64 0), i32 %conv30, i32 %conv31) #11, !dbg !12108
  %44 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12109
  %45 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12110
  %support_ext_cdb = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %45, i32 0, i32 25, !dbg !12111
  %46 = load i32, i32* %support_ext_cdb, align 4, !dbg !12111
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %44, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.81, i64 0, i64 0), i32 %46) #11, !dbg !12112
  %47 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12113
  %48 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12114
  %support_random_del = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %48, i32 0, i32 31, !dbg !12115
  %49 = load i32, i32* %support_random_del, align 4, !dbg !12115
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %47, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.82, i64 0, i64 0), i32 %49) #11, !dbg !12116
  %50 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12117
  %51 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12118
  %boot_ldrv_enabled = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %51, i32 0, i32 26, !dbg !12119
  %52 = load i32, i32* %boot_ldrv_enabled, align 8, !dbg !12119
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %50, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.83, i64 0, i64 0), i32 %52) #11, !dbg !12120
  %53 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12121
  %54 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12122
  %boot_ldrv = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %54, i32 0, i32 27, !dbg !12123
  %55 = load i32, i32* %boot_ldrv, align 4, !dbg !12123
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %53, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.84, i64 0, i64 0), i32 %55) #11, !dbg !12124
  %56 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12125
  %57 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12126
  %boot_pdrv_enabled = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %57, i32 0, i32 28, !dbg !12127
  %58 = load i32, i32* %boot_pdrv_enabled, align 8, !dbg !12127
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %56, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.85, i64 0, i64 0), i32 %58) #11, !dbg !12128
  %59 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12129
  %60 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12130
  %boot_pdrv_ch = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %60, i32 0, i32 29, !dbg !12131
  %61 = load i32, i32* %boot_pdrv_ch, align 4, !dbg !12131
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %59, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.86, i64 0, i64 0), i32 %61) #11, !dbg !12132
  %62 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12133
  %63 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12134
  %boot_pdrv_tgt = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %63, i32 0, i32 30, !dbg !12135
  %64 = load i32, i32* %boot_pdrv_tgt, align 8, !dbg !12135
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %62, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.87, i64 0, i64 0), i32 %64) #11, !dbg !12136
  %65 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12137
  %66 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12138
  %quiescent = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %66, i32 0, i32 33, !dbg !12139
  store %struct.atomic_t* %quiescent, %struct.atomic_t** %v.addr.i, align 8
  %67 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12140
  %68 = bitcast %struct.atomic_t* %67 to i8*, !dbg !12140
  store i8* %68, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %69 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12141
  %70 = load i64, i64* %size.addr.i.i, align 8, !dbg !12142
  %conv.i.i = trunc i64 %70 to i32, !dbg !12142
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %69, i32 %conv.i.i) #13, !dbg !12143
  %71 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12144
  %72 = load i64, i64* %size.addr.i.i, align 8, !dbg !12144
  call void @kcsan_check_access(i8* %71, i64 %72, i32 4) #13, !dbg !12144
  %73 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12145
  store %struct.atomic_t* %73, %struct.atomic_t** %v.addr.i1.i, align 8
  %74 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !12146
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %74, i32 0, i32 0, !dbg !12146
  %75 = load volatile i32, i32* %counter.i.i, align 4, !dbg !12146
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %65, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.88, i64 0, i64 0), i32 %75) #11, !dbg !12147
  %76 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12148
  %77 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12149
  %has_cluster = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %77, i32 0, i32 42, !dbg !12150
  %78 = load i32, i32* %has_cluster, align 8, !dbg !12150
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %76, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.89, i64 0, i64 0), i32 %78) #11, !dbg !12151
  %79 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12152
  call void @seq_puts(%struct.seq_file* %79, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.90, i64 0, i64 0)) #11, !dbg !12153
  %80 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12154
  %81 = load i32, i32* @max_cmd_per_lun, align 4, !dbg !12155
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %80, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.91, i64 0, i64 0), i32 %81) #11, !dbg !12156
  %82 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12157
  %83 = load i16, i16* @max_sectors_per_io, align 2, !dbg !12158
  %conv32 = zext i16 %83 to i32, !dbg !12158
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %82, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.92, i64 0, i64 0), i32 %conv32) #11, !dbg !12159
  ret i32 0, !dbg !12160
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_show_stat(%struct.seq_file* %m, i8* %v) #0 !dbg !12161 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7407, metadata !DIExpression()), !dbg !12162
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7419, metadata !DIExpression()), !dbg !12165
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7423, metadata !DIExpression()), !dbg !12167
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7425, metadata !DIExpression()), !dbg !12168
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12169, metadata !DIExpression()), !dbg !12170
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !12171, metadata !DIExpression()), !dbg !12172
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !12173, metadata !DIExpression()), !dbg !12174
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12175
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %0, i32 0, i32 11, !dbg !12176
  %1 = load i8*, i8** %private, align 8, !dbg !12176
  %2 = bitcast i8* %1 to %struct.adapter_t*, !dbg !12175
  store %struct.adapter_t* %2, %struct.adapter_t** %adapter, align 8, !dbg !12174
  %3 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12177
  call void @seq_puts(%struct.seq_file* %3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.93, i64 0, i64 0)) #11, !dbg !12178
  %4 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12179
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12180
  %pend_cmds = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %5, i32 0, i32 19, !dbg !12181
  store %struct.atomic_t* %pend_cmds, %struct.atomic_t** %v.addr.i, align 8
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12182
  %7 = bitcast %struct.atomic_t* %6 to i8*, !dbg !12182
  store i8* %7, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12183
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !12184
  %conv.i.i = trunc i64 %9 to i32, !dbg !12184
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %8, i32 %conv.i.i) #13, !dbg !12185
  %10 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12186
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !12186
  call void @kcsan_check_access(i8* %10, i64 %11, i32 4) #13, !dbg !12186
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12187
  store %struct.atomic_t* %12, %struct.atomic_t** %v.addr.i1.i, align 8
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !12188
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %13, i32 0, i32 0, !dbg !12188
  %14 = load volatile i32, i32* %counter.i.i, align 4, !dbg !12188
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.94, i64 0, i64 0), i32 %14) #11, !dbg !12189
  %15 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12190
  call void @seq_puts(%struct.seq_file* %15, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.95, i64 0, i64 0)) #11, !dbg !12191
  ret i32 0, !dbg !12192
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_show_mbox(%struct.seq_file* %m, i8* %v) #0 !dbg !12193 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  %mbox = alloca %struct.mbox_t*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12194, metadata !DIExpression()), !dbg !12195
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !12196, metadata !DIExpression()), !dbg !12197
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !12198, metadata !DIExpression()), !dbg !12199
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12200
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %0, i32 0, i32 11, !dbg !12201
  %1 = load i8*, i8** %private, align 8, !dbg !12201
  %2 = bitcast i8* %1 to %struct.adapter_t*, !dbg !12200
  store %struct.adapter_t* %2, %struct.adapter_t** %adapter, align 8, !dbg !12199
  call void @llvm.dbg.declare(metadata %struct.mbox_t** %mbox, metadata !12202, metadata !DIExpression()), !dbg !12203
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12204
  %mbox1 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %3, i32 0, i32 7, !dbg !12205
  %4 = load %struct.mbox_t*, %struct.mbox_t** %mbox1, align 8, !dbg !12205
  store %struct.mbox_t* %4, %struct.mbox_t** %mbox, align 8, !dbg !12203
  %5 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12206
  call void @seq_puts(%struct.seq_file* %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.96, i64 0, i64 0)) #11, !dbg !12207
  %6 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12208
  %7 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !12209
  %m_out = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %7, i32 0, i32 0, !dbg !12210
  %cmd = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out, i32 0, i32 0, !dbg !12211
  %8 = load volatile i8, i8* %cmd, align 1, !dbg !12211
  %conv = zext i8 %8 to i32, !dbg !12209
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.97, i64 0, i64 0), i32 %conv) #11, !dbg !12212
  %9 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12213
  %10 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !12214
  %m_out2 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %10, i32 0, i32 0, !dbg !12215
  %cmdid = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out2, i32 0, i32 1, !dbg !12216
  %11 = load volatile i8, i8* %cmdid, align 1, !dbg !12216
  %conv3 = zext i8 %11 to i32, !dbg !12214
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %9, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.98, i64 0, i64 0), i32 %conv3) #11, !dbg !12217
  %12 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12218
  %13 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !12219
  %m_out4 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %13, i32 0, i32 0, !dbg !12220
  %numsectors = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out4, i32 0, i32 2, !dbg !12221
  %14 = load volatile i16, i16* %numsectors, align 1, !dbg !12221
  %conv5 = zext i16 %14 to i32, !dbg !12219
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.99, i64 0, i64 0), i32 %conv5) #11, !dbg !12222
  %15 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12223
  %16 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !12224
  %m_out6 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %16, i32 0, i32 0, !dbg !12225
  %lba = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out6, i32 0, i32 3, !dbg !12226
  %17 = load volatile i32, i32* %lba, align 1, !dbg !12226
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %15, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.100, i64 0, i64 0), i32 %17) #11, !dbg !12227
  %18 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12228
  %19 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !12229
  %m_out7 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %19, i32 0, i32 0, !dbg !12230
  %xferaddr = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out7, i32 0, i32 4, !dbg !12231
  %20 = load volatile i32, i32* %xferaddr, align 1, !dbg !12231
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.101, i64 0, i64 0), i32 %20) #11, !dbg !12232
  %21 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12233
  %22 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !12234
  %m_out8 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %22, i32 0, i32 0, !dbg !12235
  %logdrv = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out8, i32 0, i32 5, !dbg !12236
  %23 = load volatile i8, i8* %logdrv, align 1, !dbg !12236
  %conv9 = zext i8 %23 to i32, !dbg !12234
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %21, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.102, i64 0, i64 0), i32 %conv9) #11, !dbg !12237
  %24 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12238
  %25 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !12239
  %m_out10 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %25, i32 0, i32 0, !dbg !12240
  %numsgelements = getelementptr inbounds %struct.mbox_out, %struct.mbox_out* %m_out10, i32 0, i32 6, !dbg !12241
  %26 = load volatile i8, i8* %numsgelements, align 1, !dbg !12241
  %conv11 = zext i8 %26 to i32, !dbg !12239
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %24, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.103, i64 0, i64 0), i32 %conv11) #11, !dbg !12242
  %27 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12243
  %28 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !12244
  %m_in = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %28, i32 0, i32 1, !dbg !12245
  %busy = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in, i32 0, i32 0, !dbg !12246
  %29 = load volatile i8, i8* %busy, align 1, !dbg !12246
  %conv12 = zext i8 %29 to i32, !dbg !12244
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %27, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.104, i64 0, i64 0), i32 %conv12) #11, !dbg !12247
  %30 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12248
  %31 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !12249
  %m_in13 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %31, i32 0, i32 1, !dbg !12250
  %status = getelementptr inbounds %struct.mbox_in, %struct.mbox_in* %m_in13, i32 0, i32 2, !dbg !12251
  %32 = load volatile i8, i8* %status, align 1, !dbg !12251
  %conv14 = zext i8 %32 to i32, !dbg !12249
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %30, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.105, i64 0, i64 0), i32 %conv14) #11, !dbg !12252
  ret i32 0, !dbg !12253
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_show_rebuild_rate(%struct.seq_file* %m, i8* %v) #0 !dbg !12254 {
entry:
  %retval = alloca i32, align 4
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  %dma_handle = alloca i64, align 8
  %inquiry = alloca i8*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12255, metadata !DIExpression()), !dbg !12256
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !12257, metadata !DIExpression()), !dbg !12258
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !12259, metadata !DIExpression()), !dbg !12260
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12261
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %0, i32 0, i32 11, !dbg !12262
  %1 = load i8*, i8** %private, align 8, !dbg !12262
  %2 = bitcast i8* %1 to %struct.adapter_t*, !dbg !12261
  store %struct.adapter_t* %2, %struct.adapter_t** %adapter, align 8, !dbg !12260
  call void @llvm.dbg.declare(metadata i64* %dma_handle, metadata !12263, metadata !DIExpression()), !dbg !12264
  call void @llvm.dbg.declare(metadata i8** %inquiry, metadata !12265, metadata !DIExpression()), !dbg !12268
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !12269, metadata !DIExpression()), !dbg !12270
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12271
  %call = call i32 @make_local_pdev(%struct.adapter_t* %3, %struct.pci_dev** %pdev) #11, !dbg !12273
  %cmp = icmp ne i32 %call, 0, !dbg !12274
  br i1 %cmp, label %if.then, label %if.end, !dbg !12275

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12276
  br label %return, !dbg !12276

if.end:                                           ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12277
  %call1 = call i8* @mega_allocate_inquiry(i64* %dma_handle, %struct.pci_dev* %4) #11, !dbg !12279
  store i8* %call1, i8** %inquiry, align 8, !dbg !12280
  %cmp2 = icmp eq i8* %call1, null, !dbg !12281
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !12282

if.then3:                                         ; preds = %if.end
  br label %free_pdev, !dbg !12283

if.end4:                                          ; preds = %if.end
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12284
  %6 = load i64, i64* %dma_handle, align 8, !dbg !12286
  %call5 = call i32 @mega_adapinq(%struct.adapter_t* %5, i64 %6) #11, !dbg !12287
  %cmp6 = icmp ne i32 %call5, 0, !dbg !12288
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !12289

if.then7:                                         ; preds = %if.end4
  %7 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12290
  call void @seq_puts(%struct.seq_file* %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.106, i64 0, i64 0)) #11, !dbg !12292
  %8 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12293
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %8, i32 0, i32 9, !dbg !12293
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !12293
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !12293
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i64 0, i64 0)) #12, !dbg !12293
  br label %free_inquiry, !dbg !12294

if.end9:                                          ; preds = %if.end4
  %10 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12295
  %flag = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %10, i32 0, i32 1, !dbg !12297
  %11 = load i32, i32* %flag, align 4, !dbg !12297
  %conv = zext i32 %11 to i64, !dbg !12295
  %and = and i64 %conv, 134217728, !dbg !12298
  %tobool = icmp ne i64 %and, 0, !dbg !12298
  br i1 %tobool, label %if.then10, label %if.else, !dbg !12299

if.then10:                                        ; preds = %if.end9
  %12 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12300
  %13 = load i8*, i8** %inquiry, align 8, !dbg !12301
  %14 = bitcast i8* %13 to %struct.mega_inquiry3*, !dbg !12302
  %rebuild_rate = getelementptr inbounds %struct.mega_inquiry3, %struct.mega_inquiry3* %14, i32 0, i32 3, !dbg !12302
  %15 = load i8, i8* %rebuild_rate, align 1, !dbg !12302
  %conv11 = zext i8 %15 to i32, !dbg !12303
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.108, i64 0, i64 0), i32 %conv11) #11, !dbg !12304
  br label %if.end14, !dbg !12304

if.else:                                          ; preds = %if.end9
  %16 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12305
  %17 = load i8*, i8** %inquiry, align 8, !dbg !12306
  %18 = bitcast i8* %17 to %struct.mraid_ext_inquiry*, !dbg !12307
  %raid_inq = getelementptr inbounds %struct.mraid_ext_inquiry, %struct.mraid_ext_inquiry* %18, i32 0, i32 0, !dbg !12307
  %adapter_info = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %raid_inq, i32 0, i32 0, !dbg !12308
  %rebuild_rate12 = getelementptr inbounds %struct.mega_adp_info, %struct.mega_adp_info* %adapter_info, i32 0, i32 1, !dbg !12309
  %19 = load i8, i8* %rebuild_rate12, align 1, !dbg !12309
  %conv13 = zext i8 %19 to i32, !dbg !12310
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.108, i64 0, i64 0), i32 %conv13) #11, !dbg !12311
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then10
  br label %free_inquiry, !dbg !12312

free_inquiry:                                     ; preds = %if.end14, %if.then7
  call void @llvm.dbg.label(metadata !12313), !dbg !12314
  %20 = load i8*, i8** %inquiry, align 8, !dbg !12315
  %21 = load i64, i64* %dma_handle, align 8, !dbg !12316
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12317
  call void @mega_free_inquiry(i8* %20, i64 %21, %struct.pci_dev* %22) #11, !dbg !12318
  br label %free_pdev, !dbg !12318

free_pdev:                                        ; preds = %free_inquiry, %if.then3
  call void @llvm.dbg.label(metadata !12319), !dbg !12320
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12321
  call void @free_local_pdev(%struct.pci_dev* %23) #11, !dbg !12322
  store i32 0, i32* %retval, align 4, !dbg !12323
  br label %return, !dbg !12323

return:                                           ; preds = %free_pdev, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !12324
  ret i32 %24, !dbg !12324
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_show_battery(%struct.seq_file* %m, i8* %v) #0 !dbg !12325 {
entry:
  %retval = alloca i32, align 4
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  %dma_handle = alloca i64, align 8
  %inquiry = alloca i8*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %battery_status = alloca i8, align 1
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12326, metadata !DIExpression()), !dbg !12327
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !12328, metadata !DIExpression()), !dbg !12329
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !12330, metadata !DIExpression()), !dbg !12331
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12332
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %0, i32 0, i32 11, !dbg !12333
  %1 = load i8*, i8** %private, align 8, !dbg !12333
  %2 = bitcast i8* %1 to %struct.adapter_t*, !dbg !12332
  store %struct.adapter_t* %2, %struct.adapter_t** %adapter, align 8, !dbg !12331
  call void @llvm.dbg.declare(metadata i64* %dma_handle, metadata !12334, metadata !DIExpression()), !dbg !12335
  call void @llvm.dbg.declare(metadata i8** %inquiry, metadata !12336, metadata !DIExpression()), !dbg !12337
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !12338, metadata !DIExpression()), !dbg !12339
  call void @llvm.dbg.declare(metadata i8* %battery_status, metadata !12340, metadata !DIExpression()), !dbg !12341
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12342
  %call = call i32 @make_local_pdev(%struct.adapter_t* %3, %struct.pci_dev** %pdev) #11, !dbg !12344
  %cmp = icmp ne i32 %call, 0, !dbg !12345
  br i1 %cmp, label %if.then, label %if.end, !dbg !12346

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12347
  br label %return, !dbg !12347

if.end:                                           ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12348
  %call1 = call i8* @mega_allocate_inquiry(i64* %dma_handle, %struct.pci_dev* %4) #11, !dbg !12350
  store i8* %call1, i8** %inquiry, align 8, !dbg !12351
  %cmp2 = icmp eq i8* %call1, null, !dbg !12352
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !12353

if.then3:                                         ; preds = %if.end
  br label %free_pdev, !dbg !12354

if.end4:                                          ; preds = %if.end
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12355
  %6 = load i64, i64* %dma_handle, align 8, !dbg !12357
  %call5 = call i32 @mega_adapinq(%struct.adapter_t* %5, i64 %6) #11, !dbg !12358
  %cmp6 = icmp ne i32 %call5, 0, !dbg !12359
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !12360

if.then7:                                         ; preds = %if.end4
  %7 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12361
  call void @seq_puts(%struct.seq_file* %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.106, i64 0, i64 0)) #11, !dbg !12363
  %8 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12364
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %8, i32 0, i32 9, !dbg !12364
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !12364
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !12364
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i64 0, i64 0)) #12, !dbg !12364
  br label %free_inquiry, !dbg !12365

if.end9:                                          ; preds = %if.end4
  %10 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !12366
  %flag = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %10, i32 0, i32 1, !dbg !12368
  %11 = load i32, i32* %flag, align 4, !dbg !12368
  %conv = zext i32 %11 to i64, !dbg !12366
  %and = and i64 %conv, 134217728, !dbg !12369
  %tobool = icmp ne i64 %and, 0, !dbg !12369
  br i1 %tobool, label %if.then10, label %if.else, !dbg !12370

if.then10:                                        ; preds = %if.end9
  %12 = load i8*, i8** %inquiry, align 8, !dbg !12371
  %13 = bitcast i8* %12 to %struct.mega_inquiry3*, !dbg !12373
  %battery_status11 = getelementptr inbounds %struct.mega_inquiry3, %struct.mega_inquiry3* %13, i32 0, i32 7, !dbg !12373
  %14 = load i8, i8* %battery_status11, align 1, !dbg !12373
  store i8 %14, i8* %battery_status, align 1, !dbg !12374
  br label %if.end13, !dbg !12375

if.else:                                          ; preds = %if.end9
  %15 = load i8*, i8** %inquiry, align 8, !dbg !12376
  %16 = bitcast i8* %15 to %struct.mraid_ext_inquiry*, !dbg !12378
  %raid_inq = getelementptr inbounds %struct.mraid_ext_inquiry, %struct.mraid_ext_inquiry* %16, i32 0, i32 0, !dbg !12378
  %adapter_info = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %raid_inq, i32 0, i32 0, !dbg !12379
  %battery_status12 = getelementptr inbounds %struct.mega_adp_info, %struct.mega_adp_info* %adapter_info, i32 0, i32 15, !dbg !12380
  %17 = load i8, i8* %battery_status12, align 1, !dbg !12380
  store i8 %17, i8* %battery_status, align 1, !dbg !12381
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then10
  %18 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12382
  %19 = load i8, i8* %battery_status, align 1, !dbg !12383
  %conv14 = zext i8 %19 to i32, !dbg !12383
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %18, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.109, i64 0, i64 0), i32 %conv14) #11, !dbg !12384
  %20 = load i8, i8* %battery_status, align 1, !dbg !12385
  %conv15 = zext i8 %20 to i32, !dbg !12385
  %cmp16 = icmp eq i32 %conv15, 0, !dbg !12387
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !12388

if.then18:                                        ; preds = %if.end13
  %21 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12389
  call void @seq_puts(%struct.seq_file* %21, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.110, i64 0, i64 0)) #11, !dbg !12390
  br label %if.end19, !dbg !12390

if.end19:                                         ; preds = %if.then18, %if.end13
  %22 = load i8, i8* %battery_status, align 1, !dbg !12391
  %conv20 = zext i8 %22 to i32, !dbg !12391
  %and21 = and i32 %conv20, 1, !dbg !12393
  %tobool22 = icmp ne i32 %and21, 0, !dbg !12393
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !12394

if.then23:                                        ; preds = %if.end19
  %23 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12395
  call void @seq_puts(%struct.seq_file* %23, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.111, i64 0, i64 0)) #11, !dbg !12396
  br label %if.end24, !dbg !12396

if.end24:                                         ; preds = %if.then23, %if.end19
  %24 = load i8, i8* %battery_status, align 1, !dbg !12397
  %conv25 = zext i8 %24 to i32, !dbg !12397
  %and26 = and i32 %conv25, 2, !dbg !12399
  %tobool27 = icmp ne i32 %and26, 0, !dbg !12399
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !12400

if.then28:                                        ; preds = %if.end24
  %25 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12401
  call void @seq_puts(%struct.seq_file* %25, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112, i64 0, i64 0)) #11, !dbg !12402
  br label %if.end29, !dbg !12402

if.end29:                                         ; preds = %if.then28, %if.end24
  %26 = load i8, i8* %battery_status, align 1, !dbg !12403
  %conv30 = zext i8 %26 to i32, !dbg !12403
  %and31 = and i32 %conv30, 4, !dbg !12405
  %tobool32 = icmp ne i32 %and31, 0, !dbg !12405
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !12406

if.then33:                                        ; preds = %if.end29
  %27 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12407
  call void @seq_puts(%struct.seq_file* %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.113, i64 0, i64 0)) #11, !dbg !12408
  br label %if.end34, !dbg !12408

if.end34:                                         ; preds = %if.then33, %if.end29
  %28 = load i8, i8* %battery_status, align 1, !dbg !12409
  %conv35 = zext i8 %28 to i32, !dbg !12409
  %and36 = and i32 %conv35, 8, !dbg !12411
  %tobool37 = icmp ne i32 %and36, 0, !dbg !12411
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !12412

if.then38:                                        ; preds = %if.end34
  %29 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12413
  call void @seq_puts(%struct.seq_file* %29, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.114, i64 0, i64 0)) #11, !dbg !12414
  br label %if.end39, !dbg !12414

if.end39:                                         ; preds = %if.then38, %if.end34
  %30 = load i8, i8* %battery_status, align 1, !dbg !12415
  %conv40 = zext i8 %30 to i32, !dbg !12415
  %and41 = and i32 %conv40, 16, !dbg !12417
  %tobool42 = icmp ne i32 %and41, 0, !dbg !12417
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !12418

if.then43:                                        ; preds = %if.end39
  %31 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12419
  call void @seq_puts(%struct.seq_file* %31, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.115, i64 0, i64 0)) #11, !dbg !12420
  br label %if.end44, !dbg !12420

if.end44:                                         ; preds = %if.then43, %if.end39
  %32 = load i8, i8* %battery_status, align 1, !dbg !12421
  %conv45 = zext i8 %32 to i32, !dbg !12421
  %and46 = and i32 %conv45, 32, !dbg !12423
  %tobool47 = icmp ne i32 %and46, 0, !dbg !12423
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !12424

if.then48:                                        ; preds = %if.end44
  %33 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12425
  call void @seq_puts(%struct.seq_file* %33, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.116, i64 0, i64 0)) #11, !dbg !12426
  br label %if.end49, !dbg !12426

if.end49:                                         ; preds = %if.then48, %if.end44
  %34 = load i8, i8* %battery_status, align 1, !dbg !12427
  %conv50 = zext i8 %34 to i32, !dbg !12427
  %and51 = and i32 %conv50, 64, !dbg !12429
  %tobool52 = icmp ne i32 %and51, 0, !dbg !12429
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !12430

if.then53:                                        ; preds = %if.end49
  %35 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12431
  call void @seq_puts(%struct.seq_file* %35, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.117, i64 0, i64 0)) #11, !dbg !12432
  br label %if.end54, !dbg !12432

if.end54:                                         ; preds = %if.then53, %if.end49
  %36 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12433
  call void @seq_putc(%struct.seq_file* %36, i8 signext 10) #11, !dbg !12434
  br label %free_inquiry, !dbg !12434

free_inquiry:                                     ; preds = %if.end54, %if.then7
  call void @llvm.dbg.label(metadata !12435), !dbg !12436
  %37 = load i8*, i8** %inquiry, align 8, !dbg !12437
  %38 = load i64, i64* %dma_handle, align 8, !dbg !12438
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12439
  call void @mega_free_inquiry(i8* %37, i64 %38, %struct.pci_dev* %39) #11, !dbg !12440
  br label %free_pdev, !dbg !12440

free_pdev:                                        ; preds = %free_inquiry, %if.then3
  call void @llvm.dbg.label(metadata !12441), !dbg !12442
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12443
  call void @free_local_pdev(%struct.pci_dev* %40) #11, !dbg !12444
  store i32 0, i32* %retval, align 4, !dbg !12445
  br label %return, !dbg !12445

return:                                           ; preds = %free_pdev, %if.then
  %41 = load i32, i32* %retval, align 4, !dbg !12446
  ret i32 %41, !dbg !12446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_show_pdrv_ch0(%struct.seq_file* %m, i8* %v) #0 !dbg !12447 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12448, metadata !DIExpression()), !dbg !12449
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !12450, metadata !DIExpression()), !dbg !12451
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12452
  %1 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12453
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %1, i32 0, i32 11, !dbg !12454
  %2 = load i8*, i8** %private, align 8, !dbg !12454
  %3 = bitcast i8* %2 to %struct.adapter_t*, !dbg !12453
  %call = call i32 @proc_show_pdrv(%struct.seq_file* %0, %struct.adapter_t* %3, i32 0) #11, !dbg !12455
  ret i32 %call, !dbg !12456
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_show_pdrv_ch1(%struct.seq_file* %m, i8* %v) #0 !dbg !12457 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12458, metadata !DIExpression()), !dbg !12459
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !12460, metadata !DIExpression()), !dbg !12461
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12462
  %1 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12463
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %1, i32 0, i32 11, !dbg !12464
  %2 = load i8*, i8** %private, align 8, !dbg !12464
  %3 = bitcast i8* %2 to %struct.adapter_t*, !dbg !12463
  %call = call i32 @proc_show_pdrv(%struct.seq_file* %0, %struct.adapter_t* %3, i32 1) #11, !dbg !12465
  ret i32 %call, !dbg !12466
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_show_pdrv_ch2(%struct.seq_file* %m, i8* %v) #0 !dbg !12467 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12468, metadata !DIExpression()), !dbg !12469
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !12470, metadata !DIExpression()), !dbg !12471
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12472
  %1 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12473
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %1, i32 0, i32 11, !dbg !12474
  %2 = load i8*, i8** %private, align 8, !dbg !12474
  %3 = bitcast i8* %2 to %struct.adapter_t*, !dbg !12473
  %call = call i32 @proc_show_pdrv(%struct.seq_file* %0, %struct.adapter_t* %3, i32 2) #11, !dbg !12475
  ret i32 %call, !dbg !12476
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_show_pdrv_ch3(%struct.seq_file* %m, i8* %v) #0 !dbg !12477 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12478, metadata !DIExpression()), !dbg !12479
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !12480, metadata !DIExpression()), !dbg !12481
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12482
  %1 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12483
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %1, i32 0, i32 11, !dbg !12484
  %2 = load i8*, i8** %private, align 8, !dbg !12484
  %3 = bitcast i8* %2 to %struct.adapter_t*, !dbg !12483
  %call = call i32 @proc_show_pdrv(%struct.seq_file* %0, %struct.adapter_t* %3, i32 3) #11, !dbg !12485
  ret i32 %call, !dbg !12486
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_show_rdrv_10(%struct.seq_file* %m, i8* %v) #0 !dbg !12487 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12488, metadata !DIExpression()), !dbg !12489
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !12490, metadata !DIExpression()), !dbg !12491
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12492
  %1 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12493
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %1, i32 0, i32 11, !dbg !12494
  %2 = load i8*, i8** %private, align 8, !dbg !12494
  %3 = bitcast i8* %2 to %struct.adapter_t*, !dbg !12493
  %call = call i32 @proc_show_rdrv(%struct.seq_file* %0, %struct.adapter_t* %3, i32 0, i32 9) #11, !dbg !12495
  ret i32 %call, !dbg !12496
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_show_rdrv_20(%struct.seq_file* %m, i8* %v) #0 !dbg !12497 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12498, metadata !DIExpression()), !dbg !12499
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !12500, metadata !DIExpression()), !dbg !12501
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12502
  %1 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12503
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %1, i32 0, i32 11, !dbg !12504
  %2 = load i8*, i8** %private, align 8, !dbg !12504
  %3 = bitcast i8* %2 to %struct.adapter_t*, !dbg !12503
  %call = call i32 @proc_show_rdrv(%struct.seq_file* %0, %struct.adapter_t* %3, i32 10, i32 19) #11, !dbg !12505
  ret i32 %call, !dbg !12506
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_show_rdrv_30(%struct.seq_file* %m, i8* %v) #0 !dbg !12507 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12508, metadata !DIExpression()), !dbg !12509
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !12510, metadata !DIExpression()), !dbg !12511
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12512
  %1 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12513
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %1, i32 0, i32 11, !dbg !12514
  %2 = load i8*, i8** %private, align 8, !dbg !12514
  %3 = bitcast i8* %2 to %struct.adapter_t*, !dbg !12513
  %call = call i32 @proc_show_rdrv(%struct.seq_file* %0, %struct.adapter_t* %3, i32 20, i32 29) #11, !dbg !12515
  ret i32 %call, !dbg !12516
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_show_rdrv_40(%struct.seq_file* %m, i8* %v) #0 !dbg !12517 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12518, metadata !DIExpression()), !dbg !12519
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !12520, metadata !DIExpression()), !dbg !12521
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12522
  %1 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12523
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %1, i32 0, i32 11, !dbg !12524
  %2 = load i8*, i8** %private, align 8, !dbg !12524
  %3 = bitcast i8* %2 to %struct.adapter_t*, !dbg !12523
  %call = call i32 @proc_show_rdrv(%struct.seq_file* %0, %struct.adapter_t* %3, i32 30, i32 39) #11, !dbg !12525
  ret i32 %call, !dbg !12526
}

; Function Attrs: noredzone
declare dso_local void @seq_puts(%struct.seq_file*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @seq_printf(%struct.seq_file*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @make_local_pdev(%struct.adapter_t* %adapter, %struct.pci_dev** %pdev) #0 !dbg !12527 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %pdev.addr = alloca %struct.pci_dev**, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !12531, metadata !DIExpression()), !dbg !12532
  store %struct.pci_dev** %pdev, %struct.pci_dev*** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev*** %pdev.addr, metadata !12533, metadata !DIExpression()), !dbg !12534
  %call = call %struct.pci_dev* @pci_alloc_dev(%struct.pci_bus* null) #11, !dbg !12535
  %0 = load %struct.pci_dev**, %struct.pci_dev*** %pdev.addr, align 8, !dbg !12536
  store %struct.pci_dev* %call, %struct.pci_dev** %0, align 8, !dbg !12537
  %1 = load %struct.pci_dev**, %struct.pci_dev*** %pdev.addr, align 8, !dbg !12538
  %2 = load %struct.pci_dev*, %struct.pci_dev** %1, align 8, !dbg !12540
  %cmp = icmp eq %struct.pci_dev* %2, null, !dbg !12541
  br i1 %cmp, label %if.then, label %if.end, !dbg !12542

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !12543
  br label %return, !dbg !12543

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev**, %struct.pci_dev*** %pdev.addr, align 8, !dbg !12544
  %4 = load %struct.pci_dev*, %struct.pci_dev** %3, align 8, !dbg !12545
  %5 = bitcast %struct.pci_dev* %4 to i8*, !dbg !12546
  %6 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !12547
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %6, i32 0, i32 9, !dbg !12548
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !12548
  %8 = bitcast %struct.pci_dev* %7 to i8*, !dbg !12546
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %8, i64 2408, i1 false), !dbg !12546
  %9 = load %struct.pci_dev**, %struct.pci_dev*** %pdev.addr, align 8, !dbg !12549
  %10 = load %struct.pci_dev*, %struct.pci_dev** %9, align 8, !dbg !12551
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !12552
  %call2 = call i32 @dma_set_mask(%struct.device* %dev1, i64 4294967295) #11, !dbg !12553
  %cmp3 = icmp ne i32 %call2, 0, !dbg !12554
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !12555

if.then4:                                         ; preds = %if.end
  %11 = load %struct.pci_dev**, %struct.pci_dev*** %pdev.addr, align 8, !dbg !12556
  %12 = load %struct.pci_dev*, %struct.pci_dev** %11, align 8, !dbg !12558
  %13 = bitcast %struct.pci_dev* %12 to i8*, !dbg !12558
  call void @kfree(i8* %13) #11, !dbg !12559
  store i32 -1, i32* %retval, align 4, !dbg !12560
  br label %return, !dbg !12560

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12561
  br label %return, !dbg !12561

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !12562
  ret i32 %14, !dbg !12562
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mega_allocate_inquiry(i64* %dma_handle, %struct.pci_dev* %pdev) #0 !dbg !12563 {
entry:
  %dma_handle.addr = alloca i64*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !12566, metadata !DIExpression()), !dbg !12567
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !12568, metadata !DIExpression()), !dbg !12569
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12570
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !12571
  %1 = load i64*, i64** %dma_handle.addr, align 8, !dbg !12572
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 1024, i64* %1, i32 3264) #11, !dbg !12573
  ret i8* %call, !dbg !12574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_adapinq(%struct.adapter_t* %adapter, i64 %dma_handle) #0 !dbg !12575 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %dma_handle.addr = alloca i64, align 8
  %mc = alloca %struct.megacmd_t, align 1
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !12578, metadata !DIExpression()), !dbg !12579
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !12580, metadata !DIExpression()), !dbg !12581
  call void @llvm.dbg.declare(metadata %struct.megacmd_t* %mc, metadata !12582, metadata !DIExpression()), !dbg !12583
  %0 = bitcast %struct.megacmd_t* %mc to i8*, !dbg !12584
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 18, i1 false), !dbg !12584
  %1 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !12585
  %flag = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %1, i32 0, i32 1, !dbg !12587
  %2 = load i32, i32* %flag, align 4, !dbg !12587
  %conv = zext i32 %2 to i64, !dbg !12585
  %and = and i64 %conv, 134217728, !dbg !12588
  %tobool = icmp ne i64 %and, 0, !dbg !12588
  br i1 %tobool, label %if.then, label %if.else, !dbg !12589

if.then:                                          ; preds = %entry
  %cmd = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 0, !dbg !12590
  store i8 -95, i8* %cmd, align 1, !dbg !12592
  %opcode = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 2, !dbg !12593
  store i8 15, i8* %opcode, align 1, !dbg !12594
  %subopcode = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 3, !dbg !12595
  store i8 2, i8* %subopcode, align 1, !dbg !12596
  br label %if.end, !dbg !12597

if.else:                                          ; preds = %entry
  %cmd1 = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 0, !dbg !12598
  store i8 4, i8* %cmd1, align 1, !dbg !12600
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !12601
  %conv2 = trunc i64 %3 to i32, !dbg !12602
  %xferaddr = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 5, !dbg !12603
  store i32 %conv2, i32* %xferaddr, align 1, !dbg !12604
  %4 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !12605
  %call = call i32 @mega_internal_command(%struct.adapter_t* %4, %struct.megacmd_t* %mc, %struct.mega_passthru* null) #11, !dbg !12607
  %cmp = icmp ne i32 %call, 0, !dbg !12608
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !12609

if.then4:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !12610
  br label %return, !dbg !12610

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12612
  br label %return, !dbg !12612

return:                                           ; preds = %if.end5, %if.then4
  %5 = load i32, i32* %retval, align 4, !dbg !12613
  ret i32 %5, !dbg !12613
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mega_free_inquiry(i8* %inquiry, i64 %dma_handle, %struct.pci_dev* %pdev) #0 !dbg !12614 {
entry:
  %inquiry.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store i8* %inquiry, i8** %inquiry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %inquiry.addr, metadata !12617, metadata !DIExpression()), !dbg !12618
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !12619, metadata !DIExpression()), !dbg !12620
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !12621, metadata !DIExpression()), !dbg !12622
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12623
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !12624
  %1 = load i8*, i8** %inquiry.addr, align 8, !dbg !12625
  %2 = load i64, i64* %dma_handle.addr, align 8, !dbg !12626
  call void @dma_free_coherent(%struct.device* %dev, i64 1024, i8* %1, i64 %2) #11, !dbg !12627
  ret void, !dbg !12628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_local_pdev(%struct.pci_dev* %pdev) #0 !dbg !12629 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !12630, metadata !DIExpression()), !dbg !12631
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12632
  %1 = bitcast %struct.pci_dev* %0 to i8*, !dbg !12632
  call void @kfree(i8* %1) #11, !dbg !12633
  ret void, !dbg !12634
}

; Function Attrs: noredzone
declare dso_local %struct.pci_dev* @pci_alloc_dev(%struct.pci_bus*) #2

; Function Attrs: noredzone
declare dso_local void @seq_putc(%struct.seq_file*, i8 signext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_show_pdrv(%struct.seq_file* %m, %struct.adapter_t* %adapter, i32 %channel) #0 !dbg !12635 {
entry:
  %retval = alloca i32, align 4
  %m.addr = alloca %struct.seq_file*, align 8
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %channel.addr = alloca i32, align 4
  %dma_handle = alloca i64, align 8
  %scsi_inq = alloca i8*, align 8
  %scsi_inq_dma_handle = alloca i64, align 8
  %inquiry = alloca i8*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %pdrv_state = alloca i8*, align 8
  %state = alloca i8, align 1
  %tgt = alloca i32, align 4
  %max_channels = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12638, metadata !DIExpression()), !dbg !12639
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !12640, metadata !DIExpression()), !dbg !12641
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !12642, metadata !DIExpression()), !dbg !12643
  call void @llvm.dbg.declare(metadata i64* %dma_handle, metadata !12644, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.declare(metadata i8** %scsi_inq, metadata !12646, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.declare(metadata i64* %scsi_inq_dma_handle, metadata !12648, metadata !DIExpression()), !dbg !12649
  call void @llvm.dbg.declare(metadata i8** %inquiry, metadata !12650, metadata !DIExpression()), !dbg !12651
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !12652, metadata !DIExpression()), !dbg !12653
  call void @llvm.dbg.declare(metadata i8** %pdrv_state, metadata !12654, metadata !DIExpression()), !dbg !12655
  call void @llvm.dbg.declare(metadata i8* %state, metadata !12656, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.declare(metadata i32* %tgt, metadata !12658, metadata !DIExpression()), !dbg !12659
  call void @llvm.dbg.declare(metadata i32* %max_channels, metadata !12660, metadata !DIExpression()), !dbg !12661
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12662, metadata !DIExpression()), !dbg !12663
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !12664
  %call = call i32 @make_local_pdev(%struct.adapter_t* %0, %struct.pci_dev** %pdev) #11, !dbg !12666
  %cmp = icmp ne i32 %call, 0, !dbg !12667
  br i1 %cmp, label %if.then, label %if.end, !dbg !12668

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12669
  br label %return, !dbg !12669

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12670
  %call1 = call i8* @mega_allocate_inquiry(i64* %dma_handle, %struct.pci_dev* %1) #11, !dbg !12672
  store i8* %call1, i8** %inquiry, align 8, !dbg !12673
  %cmp2 = icmp eq i8* %call1, null, !dbg !12674
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !12675

if.then3:                                         ; preds = %if.end
  br label %free_pdev, !dbg !12676

if.end4:                                          ; preds = %if.end
  %2 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !12677
  %3 = load i64, i64* %dma_handle, align 8, !dbg !12679
  %call5 = call i32 @mega_adapinq(%struct.adapter_t* %2, i64 %3) #11, !dbg !12680
  %cmp6 = icmp ne i32 %call5, 0, !dbg !12681
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !12682

if.then7:                                         ; preds = %if.end4
  %4 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12683
  call void @seq_puts(%struct.seq_file* %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.106, i64 0, i64 0)) #11, !dbg !12685
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !12686
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %5, i32 0, i32 9, !dbg !12686
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !12686
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !12686
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i64 0, i64 0)) #12, !dbg !12686
  br label %free_inquiry, !dbg !12687

if.end9:                                          ; preds = %if.end4
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12688
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !12689
  %call11 = call i8* @dma_alloc_coherent(%struct.device* %dev10, i64 256, i64* %scsi_inq_dma_handle, i32 3264) #11, !dbg !12690
  store i8* %call11, i8** %scsi_inq, align 8, !dbg !12691
  %8 = load i8*, i8** %scsi_inq, align 8, !dbg !12692
  %cmp12 = icmp eq i8* %8, null, !dbg !12694
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !12695

if.then13:                                        ; preds = %if.end9
  %9 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12696
  call void @seq_puts(%struct.seq_file* %9, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.118, i64 0, i64 0)) #11, !dbg !12698
  br label %free_inquiry, !dbg !12699

if.end14:                                         ; preds = %if.end9
  %10 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !12700
  %flag = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %10, i32 0, i32 1, !dbg !12702
  %11 = load i32, i32* %flag, align 4, !dbg !12702
  %conv = zext i32 %11 to i64, !dbg !12700
  %and = and i64 %conv, 134217728, !dbg !12703
  %tobool = icmp ne i64 %and, 0, !dbg !12703
  br i1 %tobool, label %if.then15, label %if.else, !dbg !12704

if.then15:                                        ; preds = %if.end14
  %12 = load i8*, i8** %inquiry, align 8, !dbg !12705
  %13 = bitcast i8* %12 to %struct.mega_inquiry3*, !dbg !12707
  %pdrv_state16 = getelementptr inbounds %struct.mega_inquiry3, %struct.mega_inquiry3* %13, i32 0, i32 14, !dbg !12707
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %pdrv_state16, i64 0, i64 0, !dbg !12708
  store i8* %arraydecay, i8** %pdrv_state, align 8, !dbg !12709
  br label %if.end19, !dbg !12710

if.else:                                          ; preds = %if.end14
  %14 = load i8*, i8** %inquiry, align 8, !dbg !12711
  %15 = bitcast i8* %14 to %struct.mraid_ext_inquiry*, !dbg !12713
  %raid_inq = getelementptr inbounds %struct.mraid_ext_inquiry, %struct.mraid_ext_inquiry* %15, i32 0, i32 0, !dbg !12713
  %pdrv_info = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %raid_inq, i32 0, i32 2, !dbg !12714
  %pdrv_state17 = getelementptr inbounds %struct.mega_pdrv_info, %struct.mega_pdrv_info* %pdrv_info, i32 0, i32 0, !dbg !12715
  %arraydecay18 = getelementptr inbounds [75 x i8], [75 x i8]* %pdrv_state17, i64 0, i64 0, !dbg !12716
  store i8* %arraydecay18, i8** %pdrv_state, align 8, !dbg !12717
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then15
  %16 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !12718
  %product_info = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %16, i32 0, i32 16, !dbg !12719
  %nchannels = getelementptr inbounds %struct.mega_product_info, %struct.mega_product_info* %product_info, i32 0, i32 6, !dbg !12720
  %17 = load i8, i8* %nchannels, align 1, !dbg !12720
  %conv20 = zext i8 %17 to i32, !dbg !12718
  store i32 %conv20, i32* %max_channels, align 4, !dbg !12721
  %18 = load i32, i32* %channel.addr, align 4, !dbg !12722
  %19 = load i32, i32* %max_channels, align 4, !dbg !12724
  %cmp21 = icmp sge i32 %18, %19, !dbg !12725
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !12726

if.then23:                                        ; preds = %if.end19
  br label %free_pci, !dbg !12727

if.end24:                                         ; preds = %if.end19
  store i32 0, i32* %tgt, align 4, !dbg !12729
  br label %for.cond, !dbg !12731

for.cond:                                         ; preds = %for.inc, %if.end24
  %20 = load i32, i32* %tgt, align 4, !dbg !12732
  %cmp25 = icmp sle i32 %20, 15, !dbg !12734
  br i1 %cmp25, label %for.body, label %for.end, !dbg !12735

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %channel.addr, align 4, !dbg !12736
  %mul = mul i32 %21, 16, !dbg !12738
  %22 = load i32, i32* %tgt, align 4, !dbg !12739
  %add = add i32 %mul, %22, !dbg !12740
  store i32 %add, i32* %i, align 4, !dbg !12741
  %23 = load i8*, i8** %pdrv_state, align 8, !dbg !12742
  %24 = load i32, i32* %i, align 4, !dbg !12743
  %idx.ext = sext i32 %24 to i64, !dbg !12744
  %add.ptr = getelementptr i8, i8* %23, i64 %idx.ext, !dbg !12744
  %25 = load i8, i8* %add.ptr, align 1, !dbg !12745
  store i8 %25, i8* %state, align 1, !dbg !12746
  %26 = load i8, i8* %state, align 1, !dbg !12747
  %conv27 = zext i8 %26 to i32, !dbg !12747
  %and28 = and i32 %conv27, 15, !dbg !12748
  switch i32 %and28, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb29
    i32 5, label %sw.bb30
    i32 6, label %sw.bb31
  ], !dbg !12749

sw.bb:                                            ; preds = %for.body
  %27 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12750
  %28 = load i32, i32* %channel.addr, align 4, !dbg !12752
  %29 = load i32, i32* %tgt, align 4, !dbg !12753
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %27, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.119, i64 0, i64 0), i32 %28, i32 %29) #11, !dbg !12754
  br label %sw.epilog, !dbg !12755

sw.bb29:                                          ; preds = %for.body
  %30 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12756
  %31 = load i32, i32* %channel.addr, align 4, !dbg !12757
  %32 = load i32, i32* %tgt, align 4, !dbg !12758
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %30, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.120, i64 0, i64 0), i32 %31, i32 %32) #11, !dbg !12759
  br label %sw.epilog, !dbg !12760

sw.bb30:                                          ; preds = %for.body
  %33 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12761
  %34 = load i32, i32* %channel.addr, align 4, !dbg !12762
  %35 = load i32, i32* %tgt, align 4, !dbg !12763
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %33, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.121, i64 0, i64 0), i32 %34, i32 %35) #11, !dbg !12764
  br label %sw.epilog, !dbg !12765

sw.bb31:                                          ; preds = %for.body
  %36 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12766
  %37 = load i32, i32* %channel.addr, align 4, !dbg !12767
  %38 = load i32, i32* %tgt, align 4, !dbg !12768
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %36, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.122, i64 0, i64 0), i32 %37, i32 %38) #11, !dbg !12769
  br label %sw.epilog, !dbg !12770

sw.default:                                       ; preds = %for.body
  %39 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12771
  %40 = load i32, i32* %channel.addr, align 4, !dbg !12772
  %41 = load i32, i32* %tgt, align 4, !dbg !12773
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %39, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.123, i64 0, i64 0), i32 %40, i32 %41) #11, !dbg !12774
  br label %sw.epilog, !dbg !12775

sw.epilog:                                        ; preds = %sw.default, %sw.bb31, %sw.bb30, %sw.bb29, %sw.bb
  %42 = load i8*, i8** %scsi_inq, align 8, !dbg !12776
  call void @llvm.memset.p0i8.i64(i8* align 1 %42, i8 0, i64 256, i1 false), !dbg !12777
  %43 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !12778
  %44 = load i32, i32* %channel.addr, align 4, !dbg !12780
  %conv32 = trunc i32 %44 to i8, !dbg !12780
  %45 = load i32, i32* %tgt, align 4, !dbg !12781
  %conv33 = trunc i32 %45 to i8, !dbg !12781
  %46 = load i64, i64* %scsi_inq_dma_handle, align 8, !dbg !12782
  %call34 = call i32 @mega_internal_dev_inquiry(%struct.adapter_t* %43, i8 zeroext %conv32, i8 zeroext %conv33, i64 %46) #11, !dbg !12783
  %tobool35 = icmp ne i32 %call34, 0, !dbg !12783
  br i1 %tobool35, label %if.then40, label %lor.lhs.false, !dbg !12784

lor.lhs.false:                                    ; preds = %sw.epilog
  %47 = load i8*, i8** %scsi_inq, align 8, !dbg !12785
  %arrayidx = getelementptr i8, i8* %47, i64 0, !dbg !12785
  %48 = load i8, i8* %arrayidx, align 1, !dbg !12785
  %conv36 = sext i8 %48 to i32, !dbg !12785
  %and37 = and i32 %conv36, 31, !dbg !12786
  %cmp38 = icmp ne i32 %and37, 0, !dbg !12787
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !12788

if.then40:                                        ; preds = %lor.lhs.false, %sw.epilog
  br label %for.inc, !dbg !12789

if.end41:                                         ; preds = %lor.lhs.false
  %49 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12791
  call void @seq_puts(%struct.seq_file* %49, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.124, i64 0, i64 0)) #11, !dbg !12792
  %50 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12793
  %51 = load i8*, i8** %scsi_inq, align 8, !dbg !12794
  call void @mega_print_inquiry(%struct.seq_file* %50, i8* %51) #11, !dbg !12795
  br label %for.inc, !dbg !12796

for.inc:                                          ; preds = %if.end41, %if.then40
  %52 = load i32, i32* %tgt, align 4, !dbg !12797
  %inc = add i32 %52, 1, !dbg !12797
  store i32 %inc, i32* %tgt, align 4, !dbg !12797
  br label %for.cond, !dbg !12798, !llvm.loop !12799

for.end:                                          ; preds = %for.cond
  br label %free_pci, !dbg !12800

free_pci:                                         ; preds = %for.end, %if.then23
  call void @llvm.dbg.label(metadata !12801), !dbg !12802
  %53 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12803
  %dev42 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %53, i32 0, i32 41, !dbg !12804
  %54 = load i8*, i8** %scsi_inq, align 8, !dbg !12805
  %55 = load i64, i64* %scsi_inq_dma_handle, align 8, !dbg !12806
  call void @dma_free_coherent(%struct.device* %dev42, i64 256, i8* %54, i64 %55) #11, !dbg !12807
  br label %free_inquiry, !dbg !12807

free_inquiry:                                     ; preds = %free_pci, %if.then13, %if.then7
  call void @llvm.dbg.label(metadata !12808), !dbg !12809
  %56 = load i8*, i8** %inquiry, align 8, !dbg !12810
  %57 = load i64, i64* %dma_handle, align 8, !dbg !12811
  %58 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12812
  call void @mega_free_inquiry(i8* %56, i64 %57, %struct.pci_dev* %58) #11, !dbg !12813
  br label %free_pdev, !dbg !12813

free_pdev:                                        ; preds = %free_inquiry, %if.then3
  call void @llvm.dbg.label(metadata !12814), !dbg !12815
  %59 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12816
  call void @free_local_pdev(%struct.pci_dev* %59) #11, !dbg !12817
  store i32 0, i32* %retval, align 4, !dbg !12818
  br label %return, !dbg !12818

return:                                           ; preds = %free_pdev, %if.then
  %60 = load i32, i32* %retval, align 4, !dbg !12819
  ret i32 %60, !dbg !12819
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_internal_dev_inquiry(%struct.adapter_t* %adapter, i8 zeroext %ch, i8 zeroext %tgt, i64 %buf_dma_handle) #0 !dbg !12820 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %ch.addr = alloca i8, align 1
  %tgt.addr = alloca i8, align 1
  %buf_dma_handle.addr = alloca i64, align 8
  %pthru = alloca %struct.mega_passthru*, align 8
  %pthru_dma_handle = alloca i64, align 8
  %mc = alloca %struct.megacmd_t, align 1
  %rval = alloca i32, align 4
  %pdev = alloca %struct.pci_dev*, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !12823, metadata !DIExpression()), !dbg !12824
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !12825, metadata !DIExpression()), !dbg !12826
  store i8 %tgt, i8* %tgt.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %tgt.addr, metadata !12827, metadata !DIExpression()), !dbg !12828
  store i64 %buf_dma_handle, i64* %buf_dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_dma_handle.addr, metadata !12829, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.declare(metadata %struct.mega_passthru** %pthru, metadata !12831, metadata !DIExpression()), !dbg !12832
  call void @llvm.dbg.declare(metadata i64* %pthru_dma_handle, metadata !12833, metadata !DIExpression()), !dbg !12834
  call void @llvm.dbg.declare(metadata %struct.megacmd_t* %mc, metadata !12835, metadata !DIExpression()), !dbg !12836
  call void @llvm.dbg.declare(metadata i32* %rval, metadata !12837, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !12839, metadata !DIExpression()), !dbg !12840
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !12841
  %call = call i32 @make_local_pdev(%struct.adapter_t* %0, %struct.pci_dev** %pdev) #11, !dbg !12843
  %cmp = icmp ne i32 %call, 0, !dbg !12844
  br i1 %cmp, label %if.then, label %if.end, !dbg !12845

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !12846
  br label %return, !dbg !12846

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12847
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !12848
  %call1 = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 60, i64* %pthru_dma_handle, i32 3264) #11, !dbg !12849
  %2 = bitcast i8* %call1 to %struct.mega_passthru*, !dbg !12849
  store %struct.mega_passthru* %2, %struct.mega_passthru** %pthru, align 8, !dbg !12850
  %3 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12851
  %cmp2 = icmp eq %struct.mega_passthru* %3, null, !dbg !12853
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !12854

if.then3:                                         ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12855
  call void @free_local_pdev(%struct.pci_dev* %4) #11, !dbg !12857
  store i32 -1, i32* %retval, align 4, !dbg !12858
  br label %return, !dbg !12858

if.end4:                                          ; preds = %if.end
  %5 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12859
  %6 = bitcast %struct.mega_passthru* %5 to i8*, !dbg !12860
  %bf.load = load i8, i8* %6, align 1, !dbg !12861
  %bf.clear = and i8 %bf.load, -8, !dbg !12861
  %bf.set = or i8 %bf.clear, 2, !dbg !12861
  store i8 %bf.set, i8* %6, align 1, !dbg !12861
  %7 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12862
  %8 = bitcast %struct.mega_passthru* %7 to i8*, !dbg !12863
  %bf.load5 = load i8, i8* %8, align 1, !dbg !12864
  %bf.clear6 = and i8 %bf.load5, -9, !dbg !12864
  %bf.set7 = or i8 %bf.clear6, 8, !dbg !12864
  store i8 %bf.set7, i8* %8, align 1, !dbg !12864
  %9 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12865
  %reqsenselen = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %9, i32 0, i32 8, !dbg !12866
  store i8 14, i8* %reqsenselen, align 1, !dbg !12867
  %10 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12868
  %11 = bitcast %struct.mega_passthru* %10 to i8*, !dbg !12869
  %bf.load8 = load i8, i8* %11, align 1, !dbg !12870
  %bf.clear9 = and i8 %bf.load8, 127, !dbg !12870
  store i8 %bf.clear9, i8* %11, align 1, !dbg !12870
  %12 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !12871
  %flag = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %12, i32 0, i32 1, !dbg !12872
  %13 = load i32, i32* %flag, align 4, !dbg !12872
  %conv = zext i32 %13 to i64, !dbg !12871
  %and = and i64 %conv, 134217728, !dbg !12873
  %tobool = icmp ne i64 %and, 0, !dbg !12873
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12874

cond.true:                                        ; preds = %if.end4
  br label %cond.end, !dbg !12874

cond.false:                                       ; preds = %if.end4
  %14 = load i8, i8* %ch.addr, align 1, !dbg !12875
  %conv10 = zext i8 %14 to i32, !dbg !12875
  br label %cond.end, !dbg !12874

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv10, %cond.false ], !dbg !12874
  %conv11 = trunc i32 %cond to i8, !dbg !12874
  %15 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12876
  %channel = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %15, i32 0, i32 2, !dbg !12877
  store i8 %conv11, i8* %channel, align 1, !dbg !12878
  %16 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !12879
  %flag12 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %16, i32 0, i32 1, !dbg !12880
  %17 = load i32, i32* %flag12, align 4, !dbg !12880
  %conv13 = zext i32 %17 to i64, !dbg !12879
  %and14 = and i64 %conv13, 134217728, !dbg !12881
  %tobool15 = icmp ne i64 %and14, 0, !dbg !12881
  br i1 %tobool15, label %cond.true16, label %cond.false19, !dbg !12882

cond.true16:                                      ; preds = %cond.end
  %18 = load i8, i8* %ch.addr, align 1, !dbg !12883
  %conv17 = zext i8 %18 to i32, !dbg !12883
  %shl = shl i32 %conv17, 4, !dbg !12884
  %19 = load i8, i8* %tgt.addr, align 1, !dbg !12885
  %conv18 = zext i8 %19 to i32, !dbg !12885
  %or = or i32 %shl, %conv18, !dbg !12886
  br label %cond.end21, !dbg !12882

cond.false19:                                     ; preds = %cond.end
  %20 = load i8, i8* %tgt.addr, align 1, !dbg !12887
  %conv20 = zext i8 %20 to i32, !dbg !12887
  br label %cond.end21, !dbg !12882

cond.end21:                                       ; preds = %cond.false19, %cond.true16
  %cond22 = phi i32 [ %or, %cond.true16 ], [ %conv20, %cond.false19 ], !dbg !12882
  %conv23 = trunc i32 %cond22 to i8, !dbg !12882
  %21 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12888
  %target = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %21, i32 0, i32 3, !dbg !12889
  store i8 %conv23, i8* %target, align 1, !dbg !12890
  %22 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12891
  %cdblen = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %22, i32 0, i32 7, !dbg !12892
  store i8 6, i8* %cdblen, align 1, !dbg !12893
  %23 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12894
  %cdb = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %23, i32 0, i32 6, !dbg !12895
  %arrayidx = getelementptr [10 x i8], [10 x i8]* %cdb, i64 0, i64 0, !dbg !12894
  store i8 18, i8* %arrayidx, align 1, !dbg !12896
  %24 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12897
  %cdb24 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %24, i32 0, i32 6, !dbg !12898
  %arrayidx25 = getelementptr [10 x i8], [10 x i8]* %cdb24, i64 0, i64 1, !dbg !12897
  store i8 0, i8* %arrayidx25, align 1, !dbg !12899
  %25 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12900
  %cdb26 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %25, i32 0, i32 6, !dbg !12901
  %arrayidx27 = getelementptr [10 x i8], [10 x i8]* %cdb26, i64 0, i64 2, !dbg !12900
  store i8 0, i8* %arrayidx27, align 1, !dbg !12902
  %26 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12903
  %cdb28 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %26, i32 0, i32 6, !dbg !12904
  %arrayidx29 = getelementptr [10 x i8], [10 x i8]* %cdb28, i64 0, i64 3, !dbg !12903
  store i8 0, i8* %arrayidx29, align 1, !dbg !12905
  %27 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12906
  %cdb30 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %27, i32 0, i32 6, !dbg !12907
  %arrayidx31 = getelementptr [10 x i8], [10 x i8]* %cdb30, i64 0, i64 4, !dbg !12906
  store i8 -1, i8* %arrayidx31, align 1, !dbg !12908
  %28 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12909
  %cdb32 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %28, i32 0, i32 6, !dbg !12910
  %arrayidx33 = getelementptr [10 x i8], [10 x i8]* %cdb32, i64 0, i64 5, !dbg !12909
  store i8 0, i8* %arrayidx33, align 1, !dbg !12911
  %29 = load i64, i64* %buf_dma_handle.addr, align 8, !dbg !12912
  %conv34 = trunc i64 %29 to i32, !dbg !12913
  %30 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12914
  %dataxferaddr = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %30, i32 0, i32 12, !dbg !12915
  store i32 %conv34, i32* %dataxferaddr, align 1, !dbg !12916
  %31 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12917
  %dataxferlen = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %31, i32 0, i32 13, !dbg !12918
  store i32 256, i32* %dataxferlen, align 1, !dbg !12919
  %32 = bitcast %struct.megacmd_t* %mc to i8*, !dbg !12920
  call void @llvm.memset.p0i8.i64(i8* align 1 %32, i8 0, i64 18, i1 false), !dbg !12920
  %cmd = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 0, !dbg !12921
  store i8 3, i8* %cmd, align 1, !dbg !12922
  %33 = load i64, i64* %pthru_dma_handle, align 8, !dbg !12923
  %conv35 = trunc i64 %33 to i32, !dbg !12924
  %xferaddr = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 5, !dbg !12925
  store i32 %conv35, i32* %xferaddr, align 1, !dbg !12926
  %34 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !12927
  %35 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12928
  %call36 = call i32 @mega_internal_command(%struct.adapter_t* %34, %struct.megacmd_t* %mc, %struct.mega_passthru* %35) #11, !dbg !12929
  store i32 %call36, i32* %rval, align 4, !dbg !12930
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12931
  %dev37 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 41, !dbg !12932
  %37 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !12933
  %38 = bitcast %struct.mega_passthru* %37 to i8*, !dbg !12933
  %39 = load i64, i64* %pthru_dma_handle, align 8, !dbg !12934
  call void @dma_free_coherent(%struct.device* %dev37, i64 60, i8* %38, i64 %39) #11, !dbg !12935
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12936
  call void @free_local_pdev(%struct.pci_dev* %40) #11, !dbg !12937
  %41 = load i32, i32* %rval, align 4, !dbg !12938
  store i32 %41, i32* %retval, align 4, !dbg !12939
  br label %return, !dbg !12939

return:                                           ; preds = %cond.end21, %if.then3, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !12940
  ret i32 %42, !dbg !12940
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mega_print_inquiry(%struct.seq_file* %m, i8* %scsi_inq) #0 !dbg !12941 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %scsi_inq.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12944, metadata !DIExpression()), !dbg !12945
  store i8* %scsi_inq, i8** %scsi_inq.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %scsi_inq.addr, metadata !12946, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12948, metadata !DIExpression()), !dbg !12949
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12950
  call void @seq_puts(%struct.seq_file* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.125, i64 0, i64 0)) #11, !dbg !12951
  %1 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12952
  %2 = load i8*, i8** %scsi_inq.addr, align 8, !dbg !12953
  %add.ptr = getelementptr i8, i8* %2, i64 8, !dbg !12954
  %call = call i32 @seq_write(%struct.seq_file* %1, i8* %add.ptr, i64 8) #11, !dbg !12955
  %3 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12956
  call void @seq_puts(%struct.seq_file* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.126, i64 0, i64 0)) #11, !dbg !12957
  %4 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12958
  %5 = load i8*, i8** %scsi_inq.addr, align 8, !dbg !12959
  %add.ptr1 = getelementptr i8, i8* %5, i64 16, !dbg !12960
  %call2 = call i32 @seq_write(%struct.seq_file* %4, i8* %add.ptr1, i64 16) #11, !dbg !12961
  %6 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12962
  call void @seq_puts(%struct.seq_file* %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.127, i64 0, i64 0)) #11, !dbg !12963
  %7 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12964
  %8 = load i8*, i8** %scsi_inq.addr, align 8, !dbg !12965
  %add.ptr3 = getelementptr i8, i8* %8, i64 32, !dbg !12966
  %call4 = call i32 @seq_write(%struct.seq_file* %7, i8* %add.ptr3, i64 4) #11, !dbg !12967
  %9 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12968
  call void @seq_putc(%struct.seq_file* %9, i8 signext 10) #11, !dbg !12969
  %10 = load i8*, i8** %scsi_inq.addr, align 8, !dbg !12970
  %arrayidx = getelementptr i8, i8* %10, i64 0, !dbg !12970
  %11 = load i8, i8* %arrayidx, align 1, !dbg !12970
  %conv = sext i8 %11 to i32, !dbg !12970
  %and = and i32 %conv, 31, !dbg !12971
  store i32 %and, i32* %i, align 4, !dbg !12972
  %12 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12973
  %13 = load i32, i32* %i, align 4, !dbg !12974
  %call5 = call i8* @scsi_device_type(i32 %13) #11, !dbg !12975
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.128, i64 0, i64 0), i8* %call5) #11, !dbg !12976
  %14 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12977
  %15 = load i8*, i8** %scsi_inq.addr, align 8, !dbg !12978
  %arrayidx6 = getelementptr i8, i8* %15, i64 2, !dbg !12978
  %16 = load i8, i8* %arrayidx6, align 1, !dbg !12978
  %conv7 = sext i8 %16 to i32, !dbg !12978
  %and8 = and i32 %conv7, 7, !dbg !12979
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %14, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.129, i64 0, i64 0), i32 %and8) #11, !dbg !12980
  %17 = load i8*, i8** %scsi_inq.addr, align 8, !dbg !12981
  %arrayidx9 = getelementptr i8, i8* %17, i64 2, !dbg !12981
  %18 = load i8, i8* %arrayidx9, align 1, !dbg !12981
  %conv10 = sext i8 %18 to i32, !dbg !12981
  %and11 = and i32 %conv10, 7, !dbg !12983
  %cmp = icmp eq i32 %and11, 1, !dbg !12984
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !12985

land.lhs.true:                                    ; preds = %entry
  %19 = load i8*, i8** %scsi_inq.addr, align 8, !dbg !12986
  %arrayidx13 = getelementptr i8, i8* %19, i64 3, !dbg !12986
  %20 = load i8, i8* %arrayidx13, align 1, !dbg !12986
  %conv14 = sext i8 %20 to i32, !dbg !12986
  %and15 = and i32 %conv14, 15, !dbg !12987
  %cmp16 = icmp eq i32 %and15, 1, !dbg !12988
  br i1 %cmp16, label %if.then, label %if.else, !dbg !12989

if.then:                                          ; preds = %land.lhs.true
  %21 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12990
  call void @seq_puts(%struct.seq_file* %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i64 0, i64 0)) #11, !dbg !12991
  br label %if.end, !dbg !12991

if.else:                                          ; preds = %land.lhs.true, %entry
  %22 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12992
  call void @seq_putc(%struct.seq_file* %22, i8 signext 10) #11, !dbg !12993
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !12994
}

; Function Attrs: noredzone
declare dso_local i32 @seq_write(%struct.seq_file*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i8* @scsi_device_type(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_show_rdrv(%struct.seq_file* %m, %struct.adapter_t* %adapter, i32 %start, i32 %end) #0 !dbg !12995 {
entry:
  %retval = alloca i32, align 4
  %m.addr = alloca %struct.seq_file*, align 8
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %dma_handle = alloca i64, align 8
  %lparam = alloca %struct.logdrv_param*, align 8
  %mc = alloca %struct.megacmd_t, align 1
  %disk_array = alloca i8*, align 8
  %disk_array_dma_handle = alloca i64, align 8
  %inquiry = alloca i8*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %rdrv_state = alloca i8*, align 8
  %num_ldrv = alloca i32, align 4
  %array_sz = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12998, metadata !DIExpression()), !dbg !12999
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !13000, metadata !DIExpression()), !dbg !13001
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !13002, metadata !DIExpression()), !dbg !13003
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !13004, metadata !DIExpression()), !dbg !13005
  call void @llvm.dbg.declare(metadata i64* %dma_handle, metadata !13006, metadata !DIExpression()), !dbg !13007
  call void @llvm.dbg.declare(metadata %struct.logdrv_param** %lparam, metadata !13008, metadata !DIExpression()), !dbg !13010
  call void @llvm.dbg.declare(metadata %struct.megacmd_t* %mc, metadata !13011, metadata !DIExpression()), !dbg !13012
  call void @llvm.dbg.declare(metadata i8** %disk_array, metadata !13013, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.declare(metadata i64* %disk_array_dma_handle, metadata !13015, metadata !DIExpression()), !dbg !13016
  call void @llvm.dbg.declare(metadata i8** %inquiry, metadata !13017, metadata !DIExpression()), !dbg !13018
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !13019, metadata !DIExpression()), !dbg !13020
  call void @llvm.dbg.declare(metadata i8** %rdrv_state, metadata !13021, metadata !DIExpression()), !dbg !13022
  call void @llvm.dbg.declare(metadata i32* %num_ldrv, metadata !13023, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.declare(metadata i32* %array_sz, metadata !13025, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13027, metadata !DIExpression()), !dbg !13028
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !13029
  %call = call i32 @make_local_pdev(%struct.adapter_t* %0, %struct.pci_dev** %pdev) #11, !dbg !13031
  %cmp = icmp ne i32 %call, 0, !dbg !13032
  br i1 %cmp, label %if.then, label %if.end, !dbg !13033

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13034
  br label %return, !dbg !13034

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13035
  %call1 = call i8* @mega_allocate_inquiry(i64* %dma_handle, %struct.pci_dev* %1) #11, !dbg !13037
  store i8* %call1, i8** %inquiry, align 8, !dbg !13038
  %cmp2 = icmp eq i8* %call1, null, !dbg !13039
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !13040

if.then3:                                         ; preds = %if.end
  br label %free_pdev, !dbg !13041

if.end4:                                          ; preds = %if.end
  %2 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !13042
  %3 = load i64, i64* %dma_handle, align 8, !dbg !13044
  %call5 = call i32 @mega_adapinq(%struct.adapter_t* %2, i64 %3) #11, !dbg !13045
  %cmp6 = icmp ne i32 %call5, 0, !dbg !13046
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !13047

if.then7:                                         ; preds = %if.end4
  %4 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13048
  call void @seq_puts(%struct.seq_file* %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.106, i64 0, i64 0)) #11, !dbg !13050
  %5 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !13051
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %5, i32 0, i32 9, !dbg !13051
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !13051
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !13051
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i64 0, i64 0)) #12, !dbg !13051
  br label %free_inquiry, !dbg !13052

if.end9:                                          ; preds = %if.end4
  %7 = bitcast %struct.megacmd_t* %mc to i8*, !dbg !13053
  call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 18, i1 false), !dbg !13053
  %8 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !13054
  %flag = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %8, i32 0, i32 1, !dbg !13056
  %9 = load i32, i32* %flag, align 4, !dbg !13056
  %conv = zext i32 %9 to i64, !dbg !13054
  %and = and i64 %conv, 134217728, !dbg !13057
  %tobool = icmp ne i64 %and, 0, !dbg !13057
  br i1 %tobool, label %if.then10, label %if.else, !dbg !13058

if.then10:                                        ; preds = %if.end9
  store i32 23964, i32* %array_sz, align 4, !dbg !13059
  %10 = load i8*, i8** %inquiry, align 8, !dbg !13061
  %11 = bitcast i8* %10 to %struct.mega_inquiry3*, !dbg !13062
  %ldrv_state = getelementptr inbounds %struct.mega_inquiry3, %struct.mega_inquiry3* %11, i32 0, i32 13, !dbg !13062
  %arraydecay = getelementptr inbounds [40 x i8], [40 x i8]* %ldrv_state, i64 0, i64 0, !dbg !13063
  store i8* %arraydecay, i8** %rdrv_state, align 8, !dbg !13064
  %12 = load i8*, i8** %inquiry, align 8, !dbg !13065
  %13 = bitcast i8* %12 to %struct.mega_inquiry3*, !dbg !13066
  %num_ldrv11 = getelementptr inbounds %struct.mega_inquiry3, %struct.mega_inquiry3* %13, i32 0, i32 8, !dbg !13066
  %14 = load i8, i8* %num_ldrv11, align 1, !dbg !13066
  %conv12 = zext i8 %14 to i32, !dbg !13067
  store i32 %conv12, i32* %num_ldrv, align 4, !dbg !13068
  br label %if.end19, !dbg !13069

if.else:                                          ; preds = %if.end9
  store i32 2204, i32* %array_sz, align 4, !dbg !13070
  %15 = load i8*, i8** %inquiry, align 8, !dbg !13072
  %16 = bitcast i8* %15 to %struct.mraid_ext_inquiry*, !dbg !13073
  %raid_inq = getelementptr inbounds %struct.mraid_ext_inquiry, %struct.mraid_ext_inquiry* %16, i32 0, i32 0, !dbg !13073
  %logdrv_info = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %raid_inq, i32 0, i32 1, !dbg !13074
  %ldrv_state13 = getelementptr inbounds %struct.mega_ldrv_info, %struct.mega_ldrv_info* %logdrv_info, i32 0, i32 4, !dbg !13075
  %arraydecay14 = getelementptr inbounds [8 x i8], [8 x i8]* %ldrv_state13, i64 0, i64 0, !dbg !13076
  store i8* %arraydecay14, i8** %rdrv_state, align 8, !dbg !13077
  %17 = load i8*, i8** %inquiry, align 8, !dbg !13078
  %18 = bitcast i8* %17 to %struct.mraid_ext_inquiry*, !dbg !13079
  %raid_inq15 = getelementptr inbounds %struct.mraid_ext_inquiry, %struct.mraid_ext_inquiry* %18, i32 0, i32 0, !dbg !13079
  %logdrv_info16 = getelementptr inbounds %struct.mraid_inquiry, %struct.mraid_inquiry* %raid_inq15, i32 0, i32 1, !dbg !13080
  %num_ldrv17 = getelementptr inbounds %struct.mega_ldrv_info, %struct.mega_ldrv_info* %logdrv_info16, i32 0, i32 0, !dbg !13081
  %19 = load i8, i8* %num_ldrv17, align 1, !dbg !13081
  %conv18 = zext i8 %19 to i32, !dbg !13082
  store i32 %conv18, i32* %num_ldrv, align 4, !dbg !13083
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then10
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13084
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !13085
  %21 = load i32, i32* %array_sz, align 4, !dbg !13086
  %conv21 = zext i32 %21 to i64, !dbg !13086
  %call22 = call i8* @dma_alloc_coherent(%struct.device* %dev20, i64 %conv21, i64* %disk_array_dma_handle, i32 3264) #11, !dbg !13087
  store i8* %call22, i8** %disk_array, align 8, !dbg !13088
  %22 = load i8*, i8** %disk_array, align 8, !dbg !13089
  %cmp23 = icmp eq i8* %22, null, !dbg !13091
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !13092

if.then25:                                        ; preds = %if.end19
  %23 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13093
  call void @seq_puts(%struct.seq_file* %23, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.131, i64 0, i64 0)) #11, !dbg !13095
  br label %free_inquiry, !dbg !13096

if.end26:                                         ; preds = %if.end19
  %24 = load i64, i64* %disk_array_dma_handle, align 8, !dbg !13097
  %conv27 = trunc i64 %24 to i32, !dbg !13098
  %xferaddr = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 5, !dbg !13099
  store i32 %conv27, i32* %xferaddr, align 1, !dbg !13100
  %25 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !13101
  %flag28 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %25, i32 0, i32 1, !dbg !13103
  %26 = load i32, i32* %flag28, align 4, !dbg !13103
  %conv29 = zext i32 %26 to i64, !dbg !13101
  %and30 = and i64 %conv29, 134217728, !dbg !13104
  %tobool31 = icmp ne i64 %and30, 0, !dbg !13104
  br i1 %tobool31, label %if.then32, label %if.else37, !dbg !13105

if.then32:                                        ; preds = %if.end26
  %cmd = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 0, !dbg !13106
  store i8 -95, i8* %cmd, align 1, !dbg !13108
  %opcode = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 2, !dbg !13109
  store i8 4, i8* %opcode, align 1, !dbg !13110
  %27 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !13111
  %call33 = call i32 @mega_internal_command(%struct.adapter_t* %27, %struct.megacmd_t* %mc, %struct.mega_passthru* null) #11, !dbg !13113
  %tobool34 = icmp ne i32 %call33, 0, !dbg !13113
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !13114

if.then35:                                        ; preds = %if.then32
  %28 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13115
  call void @seq_puts(%struct.seq_file* %28, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.132, i64 0, i64 0)) #11, !dbg !13117
  br label %free_pci, !dbg !13118

if.end36:                                         ; preds = %if.then32
  br label %if.end48, !dbg !13119

if.else37:                                        ; preds = %if.end26
  %cmd38 = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 0, !dbg !13120
  store i8 103, i8* %cmd38, align 1, !dbg !13122
  %29 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !13123
  %call39 = call i32 @mega_internal_command(%struct.adapter_t* %29, %struct.megacmd_t* %mc, %struct.mega_passthru* null) #11, !dbg !13125
  %tobool40 = icmp ne i32 %call39, 0, !dbg !13125
  br i1 %tobool40, label %if.then41, label %if.end47, !dbg !13126

if.then41:                                        ; preds = %if.else37
  %cmd42 = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 0, !dbg !13127
  store i8 7, i8* %cmd42, align 1, !dbg !13129
  %30 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !13130
  %call43 = call i32 @mega_internal_command(%struct.adapter_t* %30, %struct.megacmd_t* %mc, %struct.mega_passthru* null) #11, !dbg !13132
  %tobool44 = icmp ne i32 %call43, 0, !dbg !13132
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !13133

if.then45:                                        ; preds = %if.then41
  %31 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13134
  call void @seq_puts(%struct.seq_file* %31, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.133, i64 0, i64 0)) #11, !dbg !13136
  br label %free_pci, !dbg !13137

if.end46:                                         ; preds = %if.then41
  br label %if.end47, !dbg !13138

if.end47:                                         ; preds = %if.end46, %if.else37
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end36
  %32 = load i32, i32* %start.addr, align 4, !dbg !13139
  store i32 %32, i32* %i, align 4, !dbg !13141
  br label %for.cond, !dbg !13142

for.cond:                                         ; preds = %for.inc, %if.end48
  %33 = load i32, i32* %i, align 4, !dbg !13143
  %34 = load i32, i32* %end.addr, align 4, !dbg !13145
  %add = add i32 %34, 1, !dbg !13146
  %35 = load i32, i32* %num_ldrv, align 4, !dbg !13147
  %cmp49 = icmp slt i32 %add, %35, !dbg !13148
  br i1 %cmp49, label %cond.true, label %cond.false, !dbg !13149

cond.true:                                        ; preds = %for.cond
  %36 = load i32, i32* %end.addr, align 4, !dbg !13150
  %add51 = add i32 %36, 1, !dbg !13151
  br label %cond.end, !dbg !13149

cond.false:                                       ; preds = %for.cond
  %37 = load i32, i32* %num_ldrv, align 4, !dbg !13152
  br label %cond.end, !dbg !13149

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add51, %cond.true ], [ %37, %cond.false ], !dbg !13149
  %cmp52 = icmp slt i32 %33, %cond, !dbg !13153
  br i1 %cmp52, label %for.body, label %for.end, !dbg !13154

for.body:                                         ; preds = %cond.end
  %38 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !13155
  %flag54 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %38, i32 0, i32 1, !dbg !13158
  %39 = load i32, i32* %flag54, align 4, !dbg !13158
  %conv55 = zext i32 %39 to i64, !dbg !13155
  %and56 = and i64 %conv55, 134217728, !dbg !13159
  %tobool57 = icmp ne i64 %and56, 0, !dbg !13159
  br i1 %tobool57, label %if.then58, label %if.else60, !dbg !13160

if.then58:                                        ; preds = %for.body
  %40 = load i8*, i8** %disk_array, align 8, !dbg !13161
  %41 = bitcast i8* %40 to %struct.disk_array_40ld*, !dbg !13163
  %ldrv = getelementptr inbounds %struct.disk_array_40ld, %struct.disk_array_40ld* %41, i32 0, i32 2, !dbg !13163
  %42 = load i32, i32* %i, align 4, !dbg !13164
  %idxprom = sext i32 %42 to i64, !dbg !13165
  %arrayidx = getelementptr [40 x %struct.logdrv_40ld], [40 x %struct.logdrv_40ld]* %ldrv, i64 0, i64 %idxprom, !dbg !13165
  %lparam59 = getelementptr inbounds %struct.logdrv_40ld, %struct.logdrv_40ld* %arrayidx, i32 0, i32 0, !dbg !13166
  store %struct.logdrv_param* %lparam59, %struct.logdrv_param** %lparam, align 8, !dbg !13167
  br label %if.end65, !dbg !13168

if.else60:                                        ; preds = %for.body
  %43 = load i8*, i8** %disk_array, align 8, !dbg !13169
  %44 = bitcast i8* %43 to %struct.disk_array_8ld*, !dbg !13171
  %ldrv61 = getelementptr inbounds %struct.disk_array_8ld, %struct.disk_array_8ld* %44, i32 0, i32 2, !dbg !13171
  %45 = load i32, i32* %i, align 4, !dbg !13172
  %idxprom62 = sext i32 %45 to i64, !dbg !13173
  %arrayidx63 = getelementptr [8 x %struct.logdrv_8ld], [8 x %struct.logdrv_8ld]* %ldrv61, i64 0, i64 %idxprom62, !dbg !13173
  %lparam64 = getelementptr inbounds %struct.logdrv_8ld, %struct.logdrv_8ld* %arrayidx63, i32 0, i32 0, !dbg !13174
  store %struct.logdrv_param* %lparam64, %struct.logdrv_param** %lparam, align 8, !dbg !13175
  br label %if.end65

if.end65:                                         ; preds = %if.else60, %if.then58
  %46 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13176
  %47 = load i32, i32* %i, align 4, !dbg !13177
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %46, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.134, i64 0, i64 0), i32 %47) #11, !dbg !13178
  %48 = load i8*, i8** %rdrv_state, align 8, !dbg !13179
  %49 = load i32, i32* %i, align 4, !dbg !13180
  %idxprom66 = sext i32 %49 to i64, !dbg !13179
  %arrayidx67 = getelementptr i8, i8* %48, i64 %idxprom66, !dbg !13179
  %50 = load i8, i8* %arrayidx67, align 1, !dbg !13179
  %conv68 = zext i8 %50 to i32, !dbg !13179
  %and69 = and i32 %conv68, 15, !dbg !13181
  switch i32 %and69, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb70
    i32 2, label %sw.bb71
    i32 3, label %sw.bb72
  ], !dbg !13182

sw.bb:                                            ; preds = %if.end65
  %51 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13183
  call void @seq_puts(%struct.seq_file* %51, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.135, i64 0, i64 0)) #11, !dbg !13185
  br label %sw.epilog, !dbg !13186

sw.bb70:                                          ; preds = %if.end65
  %52 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13187
  call void @seq_puts(%struct.seq_file* %52, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.136, i64 0, i64 0)) #11, !dbg !13188
  br label %sw.epilog, !dbg !13189

sw.bb71:                                          ; preds = %if.end65
  %53 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13190
  call void @seq_puts(%struct.seq_file* %53, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.137, i64 0, i64 0)) #11, !dbg !13191
  br label %sw.epilog, !dbg !13192

sw.bb72:                                          ; preds = %if.end65
  %54 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13193
  call void @seq_puts(%struct.seq_file* %54, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.138, i64 0, i64 0)) #11, !dbg !13194
  br label %sw.epilog, !dbg !13195

sw.default:                                       ; preds = %if.end65
  %55 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13196
  call void @seq_puts(%struct.seq_file* %55, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.139, i64 0, i64 0)) #11, !dbg !13197
  br label %sw.epilog, !dbg !13198

sw.epilog:                                        ; preds = %sw.default, %sw.bb72, %sw.bb71, %sw.bb70, %sw.bb
  %56 = load i8*, i8** %rdrv_state, align 8, !dbg !13199
  %57 = load i32, i32* %i, align 4, !dbg !13201
  %idxprom73 = sext i32 %57 to i64, !dbg !13199
  %arrayidx74 = getelementptr i8, i8* %56, i64 %idxprom73, !dbg !13199
  %58 = load i8, i8* %arrayidx74, align 1, !dbg !13199
  %conv75 = zext i8 %58 to i32, !dbg !13199
  %and76 = and i32 %conv75, 240, !dbg !13202
  %cmp77 = icmp eq i32 %and76, 32, !dbg !13203
  br i1 %cmp77, label %if.then79, label %if.else80, !dbg !13204

if.then79:                                        ; preds = %sw.epilog
  %59 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13205
  call void @seq_puts(%struct.seq_file* %59, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.140, i64 0, i64 0)) #11, !dbg !13206
  br label %if.end89, !dbg !13206

if.else80:                                        ; preds = %sw.epilog
  %60 = load i8*, i8** %rdrv_state, align 8, !dbg !13207
  %61 = load i32, i32* %i, align 4, !dbg !13209
  %idxprom81 = sext i32 %61 to i64, !dbg !13207
  %arrayidx82 = getelementptr i8, i8* %60, i64 %idxprom81, !dbg !13207
  %62 = load i8, i8* %arrayidx82, align 1, !dbg !13207
  %conv83 = zext i8 %62 to i32, !dbg !13207
  %and84 = and i32 %conv83, 240, !dbg !13210
  %cmp85 = icmp eq i32 %and84, 16, !dbg !13211
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !13212

if.then87:                                        ; preds = %if.else80
  %63 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13213
  call void @seq_puts(%struct.seq_file* %63, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.141, i64 0, i64 0)) #11, !dbg !13214
  br label %if.end88, !dbg !13214

if.end88:                                         ; preds = %if.then87, %if.else80
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.then79
  %64 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13215
  call void @seq_putc(%struct.seq_file* %64, i8 signext 10) #11, !dbg !13216
  %65 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13217
  %66 = load %struct.logdrv_param*, %struct.logdrv_param** %lparam, align 8, !dbg !13218
  %span_depth = getelementptr inbounds %struct.logdrv_param, %struct.logdrv_param* %66, i32 0, i32 0, !dbg !13219
  %67 = load i8, i8* %span_depth, align 1, !dbg !13219
  %conv90 = zext i8 %67 to i32, !dbg !13218
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %65, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.142, i64 0, i64 0), i32 %conv90) #11, !dbg !13220
  %68 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13221
  %69 = load %struct.logdrv_param*, %struct.logdrv_param** %lparam, align 8, !dbg !13222
  %level = getelementptr inbounds %struct.logdrv_param, %struct.logdrv_param* %69, i32 0, i32 1, !dbg !13223
  %70 = load i8, i8* %level, align 1, !dbg !13223
  %conv91 = zext i8 %70 to i32, !dbg !13222
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %68, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.143, i64 0, i64 0), i32 %conv91) #11, !dbg !13224
  %71 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13225
  %72 = load %struct.logdrv_param*, %struct.logdrv_param** %lparam, align 8, !dbg !13226
  %stripe_sz = getelementptr inbounds %struct.logdrv_param, %struct.logdrv_param* %72, i32 0, i32 3, !dbg !13227
  %73 = load i8, i8* %stripe_sz, align 1, !dbg !13227
  %conv92 = zext i8 %73 to i32, !dbg !13226
  %tobool93 = icmp ne i32 %conv92, 0, !dbg !13226
  br i1 %tobool93, label %cond.true94, label %cond.false97, !dbg !13226

cond.true94:                                      ; preds = %if.end89
  %74 = load %struct.logdrv_param*, %struct.logdrv_param** %lparam, align 8, !dbg !13228
  %stripe_sz95 = getelementptr inbounds %struct.logdrv_param, %struct.logdrv_param* %74, i32 0, i32 3, !dbg !13229
  %75 = load i8, i8* %stripe_sz95, align 1, !dbg !13229
  %conv96 = zext i8 %75 to i32, !dbg !13228
  %div = sdiv i32 %conv96, 2, !dbg !13230
  br label %cond.end98, !dbg !13226

cond.false97:                                     ; preds = %if.end89
  br label %cond.end98, !dbg !13226

cond.end98:                                       ; preds = %cond.false97, %cond.true94
  %cond99 = phi i32 [ %div, %cond.true94 ], [ 128, %cond.false97 ], !dbg !13226
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %71, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.144, i64 0, i64 0), i32 %cond99) #11, !dbg !13231
  %76 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13232
  %77 = load %struct.logdrv_param*, %struct.logdrv_param** %lparam, align 8, !dbg !13233
  %row_size = getelementptr inbounds %struct.logdrv_param, %struct.logdrv_param* %77, i32 0, i32 7, !dbg !13234
  %78 = load i8, i8* %row_size, align 1, !dbg !13234
  %conv100 = zext i8 %78 to i32, !dbg !13233
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %76, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.145, i64 0, i64 0), i32 %conv100) #11, !dbg !13235
  %79 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13236
  call void @seq_puts(%struct.seq_file* %79, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.146, i64 0, i64 0)) #11, !dbg !13237
  %80 = load %struct.logdrv_param*, %struct.logdrv_param** %lparam, align 8, !dbg !13238
  %read_ahead = getelementptr inbounds %struct.logdrv_param, %struct.logdrv_param* %80, i32 0, i32 2, !dbg !13239
  %81 = load i8, i8* %read_ahead, align 1, !dbg !13239
  %conv101 = zext i8 %81 to i32, !dbg !13238
  switch i32 %conv101, label %sw.epilog105 [
    i32 0, label %sw.bb102
    i32 1, label %sw.bb103
    i32 2, label %sw.bb104
  ], !dbg !13240

sw.bb102:                                         ; preds = %cond.end98
  %82 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13241
  call void @seq_puts(%struct.seq_file* %82, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.147, i64 0, i64 0)) #11, !dbg !13243
  br label %sw.epilog105, !dbg !13244

sw.bb103:                                         ; preds = %cond.end98
  %83 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13245
  call void @seq_puts(%struct.seq_file* %83, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.148, i64 0, i64 0)) #11, !dbg !13246
  br label %sw.epilog105, !dbg !13247

sw.bb104:                                         ; preds = %cond.end98
  %84 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13248
  call void @seq_puts(%struct.seq_file* %84, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.149, i64 0, i64 0)) #11, !dbg !13249
  br label %sw.epilog105, !dbg !13250

sw.epilog105:                                     ; preds = %cond.end98, %sw.bb104, %sw.bb103, %sw.bb102
  %85 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13251
  call void @seq_puts(%struct.seq_file* %85, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.150, i64 0, i64 0)) #11, !dbg !13252
  %86 = load %struct.logdrv_param*, %struct.logdrv_param** %lparam, align 8, !dbg !13253
  %write_mode = getelementptr inbounds %struct.logdrv_param, %struct.logdrv_param* %86, i32 0, i32 5, !dbg !13254
  %87 = load i8, i8* %write_mode, align 1, !dbg !13254
  %conv106 = zext i8 %87 to i32, !dbg !13253
  switch i32 %conv106, label %sw.epilog109 [
    i32 0, label %sw.bb107
    i32 1, label %sw.bb108
  ], !dbg !13255

sw.bb107:                                         ; preds = %sw.epilog105
  %88 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13256
  call void @seq_puts(%struct.seq_file* %88, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.151, i64 0, i64 0)) #11, !dbg !13258
  br label %sw.epilog109, !dbg !13259

sw.bb108:                                         ; preds = %sw.epilog105
  %89 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13260
  call void @seq_puts(%struct.seq_file* %89, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.152, i64 0, i64 0)) #11, !dbg !13261
  br label %sw.epilog109, !dbg !13262

sw.epilog109:                                     ; preds = %sw.epilog105, %sw.bb108, %sw.bb107
  %90 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13263
  call void @seq_puts(%struct.seq_file* %90, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.153, i64 0, i64 0)) #11, !dbg !13264
  %91 = load %struct.logdrv_param*, %struct.logdrv_param** %lparam, align 8, !dbg !13265
  %direct_io = getelementptr inbounds %struct.logdrv_param, %struct.logdrv_param* %91, i32 0, i32 6, !dbg !13266
  %92 = load i8, i8* %direct_io, align 1, !dbg !13266
  %conv110 = zext i8 %92 to i32, !dbg !13265
  switch i32 %conv110, label %sw.epilog113 [
    i32 0, label %sw.bb111
    i32 1, label %sw.bb112
  ], !dbg !13267

sw.bb111:                                         ; preds = %sw.epilog109
  %93 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13268
  call void @seq_puts(%struct.seq_file* %93, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.154, i64 0, i64 0)) #11, !dbg !13270
  br label %sw.epilog113, !dbg !13271

sw.bb112:                                         ; preds = %sw.epilog109
  %94 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !13272
  call void @seq_puts(%struct.seq_file* %94, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.155, i64 0, i64 0)) #11, !dbg !13273
  br label %sw.epilog113, !dbg !13274

sw.epilog113:                                     ; preds = %sw.epilog109, %sw.bb112, %sw.bb111
  br label %for.inc, !dbg !13275

for.inc:                                          ; preds = %sw.epilog113
  %95 = load i32, i32* %i, align 4, !dbg !13276
  %inc = add i32 %95, 1, !dbg !13276
  store i32 %inc, i32* %i, align 4, !dbg !13276
  br label %for.cond, !dbg !13277, !llvm.loop !13278

for.end:                                          ; preds = %cond.end
  br label %free_pci, !dbg !13279

free_pci:                                         ; preds = %for.end, %if.then45, %if.then35
  call void @llvm.dbg.label(metadata !13280), !dbg !13281
  %96 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13282
  %dev114 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %96, i32 0, i32 41, !dbg !13283
  %97 = load i32, i32* %array_sz, align 4, !dbg !13284
  %conv115 = zext i32 %97 to i64, !dbg !13284
  %98 = load i8*, i8** %disk_array, align 8, !dbg !13285
  %99 = load i64, i64* %disk_array_dma_handle, align 8, !dbg !13286
  call void @dma_free_coherent(%struct.device* %dev114, i64 %conv115, i8* %98, i64 %99) #11, !dbg !13287
  br label %free_inquiry, !dbg !13287

free_inquiry:                                     ; preds = %free_pci, %if.then25, %if.then7
  call void @llvm.dbg.label(metadata !13288), !dbg !13289
  %100 = load i8*, i8** %inquiry, align 8, !dbg !13290
  %101 = load i64, i64* %dma_handle, align 8, !dbg !13291
  %102 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13292
  call void @mega_free_inquiry(i8* %100, i64 %101, %struct.pci_dev* %102) #11, !dbg !13293
  br label %free_pdev, !dbg !13293

free_pdev:                                        ; preds = %free_inquiry, %if.then3
  call void @llvm.dbg.label(metadata !13294), !dbg !13295
  %103 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13296
  call void @free_local_pdev(%struct.pci_dev* %103) #11, !dbg !13297
  store i32 0, i32* %retval, align 4, !dbg !13298
  br label %return, !dbg !13298

return:                                           ; preds = %free_pdev, %if.then
  %104 = load i32, i32* %retval, align 4, !dbg !13299
  ret i32 %104, !dbg !13299
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_add_host_with_dma(%struct.Scsi_Host*, %struct.device*, %struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #0 !dbg !13300 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !13303, metadata !DIExpression()), !dbg !13304
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !13305
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !13306
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !13307
  ret i8* %call, !dbg !13308
}

; Function Attrs: noredzone
declare dso_local void @scsi_remove_host(%struct.Scsi_Host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__megaraid_shutdown(%struct.adapter_t* %adapter) #0 !dbg !13309 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7407, metadata !DIExpression()), !dbg !13310
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7419, metadata !DIExpression()), !dbg !13314
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7423, metadata !DIExpression()), !dbg !13316
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7425, metadata !DIExpression()), !dbg !13317
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %raw_mbox = alloca [15 x i8], align 1
  %mbox = alloca %struct.mbox_t*, align 8
  %i = alloca i32, align 4
  %__ms = alloca i64, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !13318, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.declare(metadata [15 x i8]* %raw_mbox, metadata !13320, metadata !DIExpression()), !dbg !13322
  call void @llvm.dbg.declare(metadata %struct.mbox_t** %mbox, metadata !13323, metadata !DIExpression()), !dbg !13324
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !13325
  %0 = bitcast i8* %arraydecay to %struct.mbox_t*, !dbg !13326
  store %struct.mbox_t* %0, %struct.mbox_t** %mbox, align 8, !dbg !13324
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13327, metadata !DIExpression()), !dbg !13328
  %1 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !13329
  %m_out = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %1, i32 0, i32 0, !dbg !13330
  %2 = bitcast %struct.mbox_out* %m_out to i8*, !dbg !13331
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 15, i1 false), !dbg !13331
  %arrayidx = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !13332
  store i8 10, i8* %arrayidx, align 1, !dbg !13333
  %3 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !13334
  %host = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %3, i32 0, i32 13, !dbg !13335
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !13335
  %irq = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 45, !dbg !13336
  %5 = load i32, i32* %irq, align 4, !dbg !13336
  %6 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !13337
  %7 = bitcast %struct.adapter_t* %6 to i8*, !dbg !13337
  %call = call i8* @free_irq(i32 %5, i8* %7) #11, !dbg !13338
  %8 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !13339
  %arraydecay1 = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !13340
  %call2 = call i32 @issue_scb_block(%struct.adapter_t* %8, i8* %arraydecay1) #11, !dbg !13341
  %9 = load %struct.mbox_t*, %struct.mbox_t** %mbox, align 8, !dbg !13342
  %m_out3 = getelementptr inbounds %struct.mbox_t, %struct.mbox_t* %9, i32 0, i32 0, !dbg !13343
  %10 = bitcast %struct.mbox_out* %m_out3 to i8*, !dbg !13344
  call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 15, i1 false), !dbg !13344
  %arrayidx4 = getelementptr [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !13345
  store i8 -2, i8* %arrayidx4, align 1, !dbg !13346
  %11 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !13347
  %arraydecay5 = getelementptr inbounds [15 x i8], [15 x i8]* %raw_mbox, i64 0, i64 0, !dbg !13348
  %call6 = call i32 @issue_scb_block(%struct.adapter_t* %11, i8* %arraydecay5) #11, !dbg !13349
  %12 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !13350
  %pend_cmds = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %12, i32 0, i32 19, !dbg !13351
  store %struct.atomic_t* %pend_cmds, %struct.atomic_t** %v.addr.i, align 8
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13352
  %14 = bitcast %struct.atomic_t* %13 to i8*, !dbg !13352
  store i8* %14, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %15 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13353
  %16 = load i64, i64* %size.addr.i.i, align 8, !dbg !13354
  %conv.i.i = trunc i64 %16 to i32, !dbg !13354
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %15, i32 %conv.i.i) #13, !dbg !13355
  %17 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13356
  %18 = load i64, i64* %size.addr.i.i, align 8, !dbg !13356
  call void @kcsan_check_access(i8* %17, i64 %18, i32 4) #13, !dbg !13356
  %19 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13357
  store %struct.atomic_t* %19, %struct.atomic_t** %v.addr.i1.i, align 8
  %20 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !13358
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %20, i32 0, i32 0, !dbg !13358
  %21 = load volatile i32, i32* %counter.i.i, align 4, !dbg !13358
  %cmp = icmp sgt i32 %21, 0, !dbg !13359
  br i1 %cmp, label %if.then, label %if.end, !dbg !13360

if.then:                                          ; preds = %entry
  %22 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !13361
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %22, i32 0, i32 9, !dbg !13361
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !13361
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 41, !dbg !13361
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.156, i64 0, i64 0)) #12, !dbg !13361
  br label %if.end, !dbg !13361

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !13362
  br label %for.cond, !dbg !13364

for.cond:                                         ; preds = %for.inc, %if.end
  %24 = load i32, i32* %i, align 4, !dbg !13365
  %cmp9 = icmp sle i32 %24, 10, !dbg !13367
  br i1 %cmp9, label %for.body, label %for.end, !dbg !13368

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !13369, metadata !DIExpression()), !dbg !13371
  store i64 1000, i64* %__ms, align 8, !dbg !13371
  br label %while.cond, !dbg !13371

while.cond:                                       ; preds = %while.body, %for.body
  %25 = load i64, i64* %__ms, align 8, !dbg !13371
  %dec = add i64 %25, -1, !dbg !13371
  store i64 %dec, i64* %__ms, align 8, !dbg !13371
  %tobool = icmp ne i64 %25, 0, !dbg !13371
  br i1 %tobool, label %while.body, label %while.end, !dbg !13371

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #11, !dbg !13372
  br label %while.cond, !dbg !13371, !llvm.loop !13377

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !13378

for.inc:                                          ; preds = %while.end
  %26 = load i32, i32* %i, align 4, !dbg !13379
  %inc = add i32 %26, 1, !dbg !13379
  store i32 %inc, i32* %i, align 4, !dbg !13379
  br label %for.cond, !dbg !13380, !llvm.loop !13381

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13383
}

; Function Attrs: noredzone
declare dso_local i32 @remove_proc_subtree(i8*, %struct.proc_dir_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !13384 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13387, metadata !DIExpression()), !dbg !13388
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13389
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !13390
  %1 = load i8*, i8** %driver_data, align 8, !dbg !13390
  ret i8* %1, !dbg !13391
}

; Function Attrs: noredzone
declare dso_local %struct.proc_dir_entry* @proc_mkdir(i8*, %struct.proc_dir_entry*) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @register_chrdev(i32 %major, i8* %name, %struct.file_operations* %fops) #0 !dbg !13392 {
entry:
  %major.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %fops.addr = alloca %struct.file_operations*, align 8
  store i32 %major, i32* %major.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %major.addr, metadata !13395, metadata !DIExpression()), !dbg !13396
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13397, metadata !DIExpression()), !dbg !13398
  store %struct.file_operations* %fops, %struct.file_operations** %fops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_operations** %fops.addr, metadata !13399, metadata !DIExpression()), !dbg !13400
  %0 = load i32, i32* %major.addr, align 4, !dbg !13401
  %1 = load i8*, i8** %name.addr, align 8, !dbg !13402
  %2 = load %struct.file_operations*, %struct.file_operations** %fops.addr, align 8, !dbg !13403
  %call = call i32 @__register_chrdev(i32 %0, i32 0, i32 256, i8* %1, %struct.file_operations* %2) #11, !dbg !13404
  ret i32 %call, !dbg !13405
}

; Function Attrs: noredzone
declare dso_local i32 @__register_chrdev(i32, i32, i32, i8*, %struct.file_operations*) #2

; Function Attrs: noredzone
declare dso_local i64 @noop_llseek(%struct.file*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @megadev_unlocked_ioctl(%struct.file* %filep, i32 %cmd, i64 %arg) #0 !dbg !13406 {
entry:
  %filep.addr = alloca %struct.file*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.file* %filep, %struct.file** %filep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filep.addr, metadata !13407, metadata !DIExpression()), !dbg !13408
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !13409, metadata !DIExpression()), !dbg !13410
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !13411, metadata !DIExpression()), !dbg !13412
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13413, metadata !DIExpression()), !dbg !13414
  call void @mutex_lock(%struct.mutex* @megadev_mutex) #11, !dbg !13415
  %0 = load %struct.file*, %struct.file** %filep.addr, align 8, !dbg !13416
  %1 = load i32, i32* %cmd.addr, align 4, !dbg !13417
  %2 = load i64, i64* %arg.addr, align 8, !dbg !13418
  %call = call i32 @megadev_ioctl(%struct.file* %0, i32 %1, i64 %2) #11, !dbg !13419
  store i32 %call, i32* %ret, align 4, !dbg !13420
  call void @mutex_unlock(%struct.mutex* @megadev_mutex) #11, !dbg !13421
  %3 = load i32, i32* %ret, align 4, !dbg !13422
  %conv = sext i32 %3 to i64, !dbg !13422
  ret i64 %conv, !dbg !13423
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @megadev_open(%struct.inode* %inode, %struct.file* %filep) #0 !dbg !13424 {
entry:
  %retval = alloca i32, align 4
  %inode.addr = alloca %struct.inode*, align 8
  %filep.addr = alloca %struct.file*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !13425, metadata !DIExpression()), !dbg !13426
  store %struct.file* %filep, %struct.file** %filep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filep.addr, metadata !13427, metadata !DIExpression()), !dbg !13428
  %call = call zeroext i1 @capable(i32 21) #11, !dbg !13429
  br i1 %call, label %if.end, label %if.then, !dbg !13431

if.then:                                          ; preds = %entry
  store i32 -13, i32* %retval, align 4, !dbg !13432
  br label %return, !dbg !13432

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13433
  br label %return, !dbg !13433

return:                                           ; preds = %if.end, %if.then
  %0 = load i32, i32* %retval, align 4, !dbg !13434
  ret i32 %0, !dbg !13434
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @megadev_ioctl(%struct.file* %filep, i32 %cmd, i64 %arg) #0 !dbg !13435 {
entry:
  %retval.i.i505 = alloca i1, align 1
  %addr.addr.i.i506 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i506, metadata !13438, metadata !DIExpression()), !dbg !13443
  %bytes.addr.i.i507 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i507, metadata !13456, metadata !DIExpression()), !dbg !13457
  %is_source.addr.i.i508 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i508, metadata !13458, metadata !DIExpression()), !dbg !13459
  %sz.i.i509 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i509, metadata !13460, metadata !DIExpression()), !dbg !13461
  %__ret_warn_on.i.i510 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i510, metadata !13462, metadata !DIExpression()), !dbg !13465
  %tmp.i.i511 = alloca i64, align 8
  %to.addr.i512 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i512, metadata !13466, metadata !DIExpression()), !dbg !13467
  %from.addr.i513 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i513, metadata !13468, metadata !DIExpression()), !dbg !13469
  %n.addr.i514 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i514, metadata !13470, metadata !DIExpression()), !dbg !13471
  %retval.i.i454 = alloca i1, align 1
  %addr.addr.i.i455 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i455, metadata !13438, metadata !DIExpression()), !dbg !13472
  %bytes.addr.i.i456 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i456, metadata !13456, metadata !DIExpression()), !dbg !13480
  %is_source.addr.i.i457 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i457, metadata !13458, metadata !DIExpression()), !dbg !13481
  %sz.i.i458 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i458, metadata !13460, metadata !DIExpression()), !dbg !13482
  %__ret_warn_on.i.i459 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i459, metadata !13462, metadata !DIExpression()), !dbg !13483
  %tmp.i.i460 = alloca i64, align 8
  %to.addr.i461 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i461, metadata !13484, metadata !DIExpression()), !dbg !13485
  %from.addr.i462 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i462, metadata !13486, metadata !DIExpression()), !dbg !13487
  %n.addr.i463 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i463, metadata !13488, metadata !DIExpression()), !dbg !13489
  %retval.i.i403 = alloca i1, align 1
  %addr.addr.i.i404 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i404, metadata !13438, metadata !DIExpression()), !dbg !13490
  %bytes.addr.i.i405 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i405, metadata !13456, metadata !DIExpression()), !dbg !13495
  %is_source.addr.i.i406 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i406, metadata !13458, metadata !DIExpression()), !dbg !13496
  %sz.i.i407 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i407, metadata !13460, metadata !DIExpression()), !dbg !13497
  %__ret_warn_on.i.i408 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i408, metadata !13462, metadata !DIExpression()), !dbg !13498
  %tmp.i.i409 = alloca i64, align 8
  %to.addr.i410 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i410, metadata !13466, metadata !DIExpression()), !dbg !13499
  %from.addr.i411 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i411, metadata !13468, metadata !DIExpression()), !dbg !13500
  %n.addr.i412 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i412, metadata !13470, metadata !DIExpression()), !dbg !13501
  %retval.i.i352 = alloca i1, align 1
  %addr.addr.i.i353 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i353, metadata !13438, metadata !DIExpression()), !dbg !13502
  %bytes.addr.i.i354 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i354, metadata !13456, metadata !DIExpression()), !dbg !13508
  %is_source.addr.i.i355 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i355, metadata !13458, metadata !DIExpression()), !dbg !13509
  %sz.i.i356 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i356, metadata !13460, metadata !DIExpression()), !dbg !13510
  %__ret_warn_on.i.i357 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i357, metadata !13462, metadata !DIExpression()), !dbg !13511
  %tmp.i.i358 = alloca i64, align 8
  %to.addr.i359 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i359, metadata !13466, metadata !DIExpression()), !dbg !13512
  %from.addr.i360 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i360, metadata !13468, metadata !DIExpression()), !dbg !13513
  %n.addr.i361 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i361, metadata !13470, metadata !DIExpression()), !dbg !13514
  %retval.i.i301 = alloca i1, align 1
  %addr.addr.i.i302 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i302, metadata !13438, metadata !DIExpression()), !dbg !13515
  %bytes.addr.i.i303 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i303, metadata !13456, metadata !DIExpression()), !dbg !13521
  %is_source.addr.i.i304 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i304, metadata !13458, metadata !DIExpression()), !dbg !13522
  %sz.i.i305 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i305, metadata !13460, metadata !DIExpression()), !dbg !13523
  %__ret_warn_on.i.i306 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i306, metadata !13462, metadata !DIExpression()), !dbg !13524
  %tmp.i.i307 = alloca i64, align 8
  %to.addr.i308 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i308, metadata !13484, metadata !DIExpression()), !dbg !13525
  %from.addr.i309 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i309, metadata !13486, metadata !DIExpression()), !dbg !13526
  %n.addr.i310 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i310, metadata !13488, metadata !DIExpression()), !dbg !13527
  %retval.i.i251 = alloca i1, align 1
  %addr.addr.i.i252 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i252, metadata !13438, metadata !DIExpression()), !dbg !13528
  %bytes.addr.i.i253 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i253, metadata !13456, metadata !DIExpression()), !dbg !13532
  %is_source.addr.i.i254 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i254, metadata !13458, metadata !DIExpression()), !dbg !13533
  %sz.i.i255 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i255, metadata !13460, metadata !DIExpression()), !dbg !13534
  %__ret_warn_on.i.i256 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i256, metadata !13462, metadata !DIExpression()), !dbg !13535
  %tmp.i.i257 = alloca i64, align 8
  %to.addr.i258 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i258, metadata !13484, metadata !DIExpression()), !dbg !13536
  %from.addr.i259 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i259, metadata !13486, metadata !DIExpression()), !dbg !13537
  %n.addr.i260 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i260, metadata !13488, metadata !DIExpression()), !dbg !13538
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !13438, metadata !DIExpression()), !dbg !13539
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !13456, metadata !DIExpression()), !dbg !13543
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !13458, metadata !DIExpression()), !dbg !13544
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !13460, metadata !DIExpression()), !dbg !13545
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !13462, metadata !DIExpression()), !dbg !13546
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !13466, metadata !DIExpression()), !dbg !13547
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !13468, metadata !DIExpression()), !dbg !13548
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !13470, metadata !DIExpression()), !dbg !13549
  %retval = alloca i32, align 4
  %filep.addr = alloca %struct.file*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %adapter = alloca %struct.adapter_t*, align 8
  %uioc = alloca %struct.nitioctl_t, align 8
  %adapno = alloca i32, align 4
  %rval = alloca i32, align 4
  %upthru = alloca %struct.mega_passthru*, align 8
  %pthru = alloca %struct.mega_passthru*, align 8
  %pthru_dma_hndl = alloca i64, align 8
  %data = alloca i8*, align 8
  %data_dma_hndl = alloca i64, align 8
  %mc = alloca %struct.megacmd_t, align 1
  %uxferaddr = alloca i32, align 4
  %pdev = alloca %struct.pci_dev*, align 8
  %tmp = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp6 = alloca i64, align 8
  %tmp10 = alloca i64, align 8
  %__ret_pu11 = alloca i32, align 4
  %__ptr_pu12 = alloca i8*, align 8
  %__val_pu13 = alloca i32, align 4
  %tmp18 = alloca i64, align 8
  store %struct.file* %filep, %struct.file** %filep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filep.addr, metadata !13550, metadata !DIExpression()), !dbg !13551
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !13552, metadata !DIExpression()), !dbg !13553
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !13554, metadata !DIExpression()), !dbg !13555
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter, metadata !13556, metadata !DIExpression()), !dbg !13557
  call void @llvm.dbg.declare(metadata %struct.nitioctl_t* %uioc, metadata !13558, metadata !DIExpression()), !dbg !13575
  call void @llvm.dbg.declare(metadata i32* %adapno, metadata !13576, metadata !DIExpression()), !dbg !13577
  call void @llvm.dbg.declare(metadata i32* %rval, metadata !13578, metadata !DIExpression()), !dbg !13579
  call void @llvm.dbg.declare(metadata %struct.mega_passthru** %upthru, metadata !13580, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.declare(metadata %struct.mega_passthru** %pthru, metadata !13582, metadata !DIExpression()), !dbg !13583
  call void @llvm.dbg.declare(metadata i64* %pthru_dma_hndl, metadata !13584, metadata !DIExpression()), !dbg !13585
  call void @llvm.dbg.declare(metadata i8** %data, metadata !13586, metadata !DIExpression()), !dbg !13587
  store i8* null, i8** %data, align 8, !dbg !13587
  call void @llvm.dbg.declare(metadata i64* %data_dma_hndl, metadata !13588, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.declare(metadata %struct.megacmd_t* %mc, metadata !13590, metadata !DIExpression()), !dbg !13591
  call void @llvm.dbg.declare(metadata i32* %uxferaddr, metadata !13592, metadata !DIExpression()), !dbg !13593
  store i32 0, i32* %uxferaddr, align 4, !dbg !13593
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !13594, metadata !DIExpression()), !dbg !13595
  %0 = load i32, i32* %cmd.addr, align 4, !dbg !13596
  %shr = lshr i32 %0, 8, !dbg !13596
  %and = and i32 %shr, 255, !dbg !13596
  %cmp = icmp ne i32 %and, 109, !dbg !13598
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13599

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %cmd.addr, align 4, !dbg !13600
  %cmp1 = icmp ne i32 %1, 224, !dbg !13601
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13602

if.then:                                          ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !13603
  br label %return, !dbg !13603

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = bitcast %struct.nitioctl_t* %uioc to i8*, !dbg !13605
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false), !dbg !13605
  %3 = load i64, i64* %arg.addr, align 8, !dbg !13606
  %4 = inttoptr i64 %3 to i8*, !dbg !13608
  %call = call i32 @mega_m_to_n(i8* %4, %struct.nitioctl_t* %uioc) #11, !dbg !13609
  store i32 %call, i32* %rval, align 4, !dbg !13610
  %cmp2 = icmp ne i32 %call, 0, !dbg !13611
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !13612

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* %rval, align 4, !dbg !13613
  store i32 %5, i32* %retval, align 4, !dbg !13614
  br label %return, !dbg !13614

if.end4:                                          ; preds = %if.end
  %opcode = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 1, !dbg !13615
  %6 = load i32, i32* %opcode, align 8, !dbg !13615
  switch i32 %6, label %sw.default [
    i32 65536, label %sw.bb
    i32 131072, label %sw.bb9
    i32 196608, label %sw.bb23
    i32 0, label %sw.bb35
  ], !dbg !13616

sw.bb:                                            ; preds = %if.end4
  call void @might_fault() #11, !dbg !13617
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !13620, metadata !DIExpression()), !dbg !13622
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !13623, metadata !DIExpression()), !dbg !13622
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !13624, metadata !DIExpression()), !dbg !13622
  %__ua = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 3, !dbg !13622
  %__uaddr = bitcast %union.anon.78* %__ua to i8**, !dbg !13622
  %7 = load i8*, i8** %__uaddr, align 8, !dbg !13622
  %8 = bitcast i8* %7 to i32*, !dbg !13622
  %9 = bitcast i32* %8 to i8*, !dbg !13622
  store i8* %9, i8** %__ptr_pu, align 8, !dbg !13622
  %10 = load i32, i32* @driver_ver, align 4, !dbg !13622
  store i32 %10, i32* %__val_pu, align 4, !dbg !13622
  %11 = call i64 @llvm.read_register.i64(metadata !6170), !dbg !13622
  %12 = load i8*, i8** %__ptr_pu, align 8, !dbg !13622
  %13 = load i32, i32* %__val_pu, align 4, !dbg !13622
  %14 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %12, i32 %13, i64 4, i64 %11) #7, !dbg !13622, !srcloc !13625
  %asmresult = extractvalue { i8*, i64 } %14, 0, !dbg !13622
  %asmresult5 = extractvalue { i8*, i64 } %14, 1, !dbg !13622
  %15 = ptrtoint i8* %asmresult to i64, !dbg !13622
  %16 = trunc i64 %15 to i32, !dbg !13622
  store i32 %16, i32* %__ret_pu, align 4, !dbg !13622
  call void @llvm.write_register.i64(metadata !6170, i64 %asmresult5), !dbg !13622
  %17 = load i32, i32* %__ret_pu, align 4, !dbg !13622
  %conv = sext i32 %17 to i64, !dbg !13622
  store i64 %conv, i64* %tmp6, align 8, !dbg !13622
  %18 = load i64, i64* %tmp6, align 8, !dbg !13622
  store i64 %18, i64* %tmp, align 8, !dbg !13617
  %19 = load i64, i64* %tmp, align 8, !dbg !13617
  %tobool = icmp ne i64 %19, 0, !dbg !13626
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !13627

if.then7:                                         ; preds = %sw.bb
  store i32 -14, i32* %retval, align 4, !dbg !13628
  br label %return, !dbg !13628

if.end8:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !13629

sw.bb9:                                           ; preds = %if.end4
  call void @might_fault() #11, !dbg !13630
  call void @llvm.dbg.declare(metadata i32* %__ret_pu11, metadata !13633, metadata !DIExpression()), !dbg !13635
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu12, metadata !13636, metadata !DIExpression()), !dbg !13635
  call void @llvm.dbg.declare(metadata i32* %__val_pu13, metadata !13637, metadata !DIExpression()), !dbg !13635
  %__ua14 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 3, !dbg !13635
  %__uaddr15 = bitcast %union.anon.78* %__ua14 to i8**, !dbg !13635
  %20 = load i8*, i8** %__uaddr15, align 8, !dbg !13635
  %21 = bitcast i8* %20 to i32*, !dbg !13635
  %22 = bitcast i32* %21 to i8*, !dbg !13635
  store i8* %22, i8** %__ptr_pu12, align 8, !dbg !13635
  %23 = load i32, i32* @hba_count, align 4, !dbg !13635
  store i32 %23, i32* %__val_pu13, align 4, !dbg !13635
  %24 = call i64 @llvm.read_register.i64(metadata !6170), !dbg !13635
  %25 = load i8*, i8** %__ptr_pu12, align 8, !dbg !13635
  %26 = load i32, i32* %__val_pu13, align 4, !dbg !13635
  %27 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %25, i32 %26, i64 4, i64 %24) #7, !dbg !13635, !srcloc !13638
  %asmresult16 = extractvalue { i8*, i64 } %27, 0, !dbg !13635
  %asmresult17 = extractvalue { i8*, i64 } %27, 1, !dbg !13635
  %28 = ptrtoint i8* %asmresult16 to i64, !dbg !13635
  %29 = trunc i64 %28 to i32, !dbg !13635
  store i32 %29, i32* %__ret_pu11, align 4, !dbg !13635
  call void @llvm.write_register.i64(metadata !6170, i64 %asmresult17), !dbg !13635
  %30 = load i32, i32* %__ret_pu11, align 4, !dbg !13635
  %conv19 = sext i32 %30 to i64, !dbg !13635
  store i64 %conv19, i64* %tmp18, align 8, !dbg !13635
  %31 = load i64, i64* %tmp18, align 8, !dbg !13635
  store i64 %31, i64* %tmp10, align 8, !dbg !13630
  %32 = load i64, i64* %tmp10, align 8, !dbg !13630
  %tobool20 = icmp ne i64 %32, 0, !dbg !13639
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !13640

if.then21:                                        ; preds = %sw.bb9
  store i32 -14, i32* %retval, align 4, !dbg !13641
  br label %return, !dbg !13641

if.end22:                                         ; preds = %sw.bb9
  %33 = load i32, i32* @hba_count, align 4, !dbg !13642
  store i32 %33, i32* %retval, align 4, !dbg !13643
  br label %return, !dbg !13643

sw.bb23:                                          ; preds = %if.end4
  %adapno24 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 2, !dbg !13644
  %34 = load i32, i32* %adapno24, align 4, !dbg !13644
  %xor = xor i32 %34, 27904, !dbg !13644
  store i32 %xor, i32* %adapno, align 4, !dbg !13646
  %35 = load i32, i32* @hba_count, align 4, !dbg !13647
  %cmp25 = icmp sge i32 %xor, %35, !dbg !13648
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !13649

if.then27:                                        ; preds = %sw.bb23
  store i32 -19, i32* %retval, align 4, !dbg !13650
  br label %return, !dbg !13650

if.end28:                                         ; preds = %sw.bb23
  %__ua29 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 3, !dbg !13651
  %__uaddr30 = bitcast %union.anon.78* %__ua29 to i8**, !dbg !13651
  %36 = load i8*, i8** %__uaddr30, align 8, !dbg !13651
  %37 = load i32, i32* %adapno, align 4, !dbg !13652
  %idx.ext = sext i32 %37 to i64, !dbg !13653
  %add.ptr = getelementptr %struct.mcontroller, %struct.mcontroller* getelementptr inbounds ([32 x %struct.mcontroller], [32 x %struct.mcontroller]* @mcontroller, i64 0, i64 0), i64 %idx.ext, !dbg !13653
  %38 = bitcast %struct.mcontroller* %add.ptr to i8*, !dbg !13654
  store i8* %36, i8** %to.addr.i, align 8
  store i8* %38, i8** %from.addr.i, align 8
  store i64 32, i64* %n.addr.i, align 8
  %39 = load i8*, i8** %from.addr.i, align 8, !dbg !13655
  %40 = load i64, i64* %n.addr.i, align 8, !dbg !13655
  store i8* %39, i8** %addr.addr.i.i, align 8
  store i64 %40, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !13545
  %41 = load i32, i32* %sz.i.i, align 4, !dbg !13656
  %cmp.i.i = icmp sge i32 %41, 0, !dbg !13656
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !13656

land.rhs.i.i:                                     ; preds = %if.end28
  %42 = load i32, i32* %sz.i.i, align 4, !dbg !13656
  %conv.i.i = sext i32 %42 to i64, !dbg !13656
  %43 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !13656
  %cmp1.i.i = icmp ult i64 %conv.i.i, %43, !dbg !13656
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end28
  %44 = phi i1 [ false, %if.end28 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !13658
  %lnot.i.i = xor i1 %44, true, !dbg !13656
  %lnot.ext.i.i = zext i1 %44 to i32, !dbg !13656
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !13656
  br i1 %44, label %if.then.i.i, label %if.end10.i.i, !dbg !13659

if.then.i.i:                                      ; preds = %land.end.i.i
  %45 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !13660
  %46 = call i1 @llvm.is.constant.i64(i64 %45) #7, !dbg !13663
  br i1 %46, label %if.else.i.i, label %if.then5.i.i, !dbg !13664

if.then5.i.i:                                     ; preds = %if.then.i.i
  %47 = load i32, i32* %sz.i.i, align 4, !dbg !13665
  %48 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !13666
  call void @copy_overflow(i32 %47, i64 %48) #13, !dbg !13667
  br label %if.end9.i.i, !dbg !13667

if.else.i.i:                                      ; preds = %if.then.i.i
  %49 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !13668
  %tobool6.i.i = trunc i8 %49 to i1, !dbg !13668
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !13670

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !13671
  br label %if.end.i.i, !dbg !13671

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !13672
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !13673
  br label %check_copy_size.exit.i, !dbg !13673

if.end10.i.i:                                     ; preds = %land.end.i.i
  %50 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !13546
  %cmp11.i.i = icmp ugt i64 %50, 2147483647, !dbg !13546
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !13546
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !13546
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !13546
  %51 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !13674
  %tobool17.i.i = icmp ne i32 %51, 0, !dbg !13674
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !13674
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !13674
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !13674
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !13546

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.162, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !13676, !srcloc !13679
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !13680, !srcloc !13682
  br label %if.end31.i.i, !dbg !13683

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %52 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !13546
  %tobool32.i.i = icmp ne i32 %52, 0, !dbg !13546
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !13546
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !13546
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !13546
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !13674
  %53 = load i64, i64* %tmp.i.i, align 8, !dbg !13546
  %tobool38.i.i = icmp ne i64 %53, 0, !dbg !13684
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !13685

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !13686
  br label %check_copy_size.exit.i, !dbg !13686

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %54 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !13687
  %55 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !13688
  %56 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !13689
  %tobool41.i.i = trunc i8 %56 to i1, !dbg !13689
  call void @check_object_size(i8* %54, i64 %55, i1 zeroext %tobool41.i.i) #13, !dbg !13690
  store i1 true, i1* %retval.i.i, align 1, !dbg !13691
  br label %check_copy_size.exit.i, !dbg !13691

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %57 = load i1, i1* %retval.i.i, align 1, !dbg !13692
  %lnot.i = xor i1 %57, true, !dbg !13655
  %lnot.ext.i = zext i1 %57 to i32, !dbg !13655
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !13655
  br i1 %57, label %if.then.i, label %copy_to_user.exit, !dbg !13693

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %58 = load i8*, i8** %to.addr.i, align 8, !dbg !13694
  %59 = load i8*, i8** %from.addr.i, align 8, !dbg !13695
  %60 = load i64, i64* %n.addr.i, align 8, !dbg !13696
  %call2.i = call i64 @_copy_to_user(i8* %58, i8* %59, i64 %60) #13, !dbg !13697
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !13698
  br label %copy_to_user.exit, !dbg !13699

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %61 = load i64, i64* %n.addr.i, align 8, !dbg !13700
  %tobool32 = icmp ne i64 %61, 0, !dbg !13701
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !13702

if.then33:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !13703
  br label %return, !dbg !13703

if.end34:                                         ; preds = %copy_to_user.exit
  br label %sw.epilog, !dbg !13704

sw.bb35:                                          ; preds = %if.end4
  %adapno36 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 2, !dbg !13705
  %62 = load i32, i32* %adapno36, align 4, !dbg !13705
  %xor37 = xor i32 %62, 27904, !dbg !13705
  store i32 %xor37, i32* %adapno, align 4, !dbg !13707
  %63 = load i32, i32* @hba_count, align 4, !dbg !13708
  %cmp38 = icmp sge i32 %xor37, %63, !dbg !13709
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !13710

if.then40:                                        ; preds = %sw.bb35
  store i32 -19, i32* %retval, align 4, !dbg !13711
  br label %return, !dbg !13711

if.end41:                                         ; preds = %sw.bb35
  %64 = load i32, i32* %adapno, align 4, !dbg !13712
  %idxprom = sext i32 %64 to i64, !dbg !13713
  %arrayidx = getelementptr [32 x %struct.adapter_t*], [32 x %struct.adapter_t*]* @hba_soft_state, i64 0, i64 %idxprom, !dbg !13713
  %65 = load %struct.adapter_t*, %struct.adapter_t** %arrayidx, align 8, !dbg !13713
  store %struct.adapter_t* %65, %struct.adapter_t** %adapter, align 8, !dbg !13714
  %__ua42 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 3, !dbg !13715
  %__raw_mbox = bitcast %union.anon.78* %__ua42 to [18 x i8]*, !dbg !13715
  %arrayidx43 = getelementptr [18 x i8], [18 x i8]* %__raw_mbox, i64 0, i64 0, !dbg !13717
  %66 = load i8, i8* %arrayidx43, align 8, !dbg !13717
  %conv44 = zext i8 %66 to i32, !dbg !13717
  %cmp45 = icmp eq i32 %conv44, 164, !dbg !13718
  br i1 %cmp45, label %land.lhs.true47, label %if.end70, !dbg !13719

land.lhs.true47:                                  ; preds = %if.end41
  %__ua48 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 3, !dbg !13720
  %__raw_mbox49 = bitcast %union.anon.78* %__ua48 to [18 x i8]*, !dbg !13720
  %arrayidx50 = getelementptr [18 x i8], [18 x i8]* %__raw_mbox49, i64 0, i64 2, !dbg !13721
  %67 = load i8, i8* %arrayidx50, align 2, !dbg !13721
  %conv51 = zext i8 %67 to i32, !dbg !13721
  %cmp52 = icmp eq i32 %conv51, 28, !dbg !13722
  br i1 %cmp52, label %if.then54, label %if.end70, !dbg !13723

if.then54:                                        ; preds = %land.lhs.true47
  %68 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !13724
  %support_random_del = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %68, i32 0, i32 31, !dbg !13727
  %69 = load i32, i32* %support_random_del, align 4, !dbg !13727
  %tobool55 = icmp ne i32 %69, 0, !dbg !13724
  br i1 %tobool55, label %if.end58, label %if.then56, !dbg !13728

if.then56:                                        ; preds = %if.then54
  %70 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !13729
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %70, i32 0, i32 9, !dbg !13729
  %71 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !13729
  %dev57 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %71, i32 0, i32 41, !dbg !13729
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev57, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.159, i64 0, i64 0)) #12, !dbg !13729
  store i32 -22, i32* %retval, align 4, !dbg !13731
  br label %return, !dbg !13731

if.end58:                                         ; preds = %if.then54
  %72 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !13732
  %__ua59 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 3, !dbg !13733
  %__raw_mbox60 = bitcast %union.anon.78* %__ua59 to [18 x i8]*, !dbg !13733
  %arrayidx61 = getelementptr [18 x i8], [18 x i8]* %__raw_mbox60, i64 0, i64 3, !dbg !13734
  %73 = load i8, i8* %arrayidx61, align 1, !dbg !13734
  %conv62 = zext i8 %73 to i32, !dbg !13734
  %call63 = call i32 @mega_del_logdrv(%struct.adapter_t* %72, i32 %conv62) #11, !dbg !13735
  store i32 %call63, i32* %rval, align 4, !dbg !13736
  %74 = load i32, i32* %rval, align 4, !dbg !13737
  %cmp64 = icmp eq i32 %74, 0, !dbg !13739
  br i1 %cmp64, label %if.then66, label %if.end69, !dbg !13740

if.then66:                                        ; preds = %if.end58
  %75 = bitcast %struct.megacmd_t* %mc to i8*, !dbg !13741
  call void @llvm.memset.p0i8.i64(i8* align 1 %75, i8 0, i64 18, i1 false), !dbg !13741
  %76 = load i32, i32* %rval, align 4, !dbg !13743
  %conv67 = trunc i32 %76 to i8, !dbg !13743
  %status = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 9, !dbg !13744
  store i8 %conv67, i8* %status, align 1, !dbg !13745
  %77 = load i64, i64* %arg.addr, align 8, !dbg !13746
  %78 = inttoptr i64 %77 to i8*, !dbg !13747
  %call68 = call i32 @mega_n_to_m(i8* %78, %struct.megacmd_t* %mc) #11, !dbg !13748
  store i32 %call68, i32* %rval, align 4, !dbg !13749
  br label %if.end69, !dbg !13750

if.end69:                                         ; preds = %if.then66, %if.end58
  %79 = load i32, i32* %rval, align 4, !dbg !13751
  store i32 %79, i32* %retval, align 4, !dbg !13752
  br label %return, !dbg !13752

if.end70:                                         ; preds = %land.lhs.true47, %if.end41
  %__ua71 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 3, !dbg !13753
  %__raw_mbox72 = bitcast %union.anon.78* %__ua71 to [18 x i8]*, !dbg !13753
  %arrayidx73 = getelementptr [18 x i8], [18 x i8]* %__raw_mbox72, i64 0, i64 0, !dbg !13755
  %80 = load i8, i8* %arrayidx73, align 8, !dbg !13755
  %conv74 = zext i8 %80 to i32, !dbg !13755
  %cmp75 = icmp eq i32 %conv74, 195, !dbg !13756
  br i1 %cmp75, label %if.then83, label %lor.lhs.false, !dbg !13757

lor.lhs.false:                                    ; preds = %if.end70
  %__ua77 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 3, !dbg !13758
  %__raw_mbox78 = bitcast %union.anon.78* %__ua77 to [18 x i8]*, !dbg !13758
  %arrayidx79 = getelementptr [18 x i8], [18 x i8]* %__raw_mbox78, i64 0, i64 0, !dbg !13759
  %81 = load i8, i8* %arrayidx79, align 8, !dbg !13759
  %conv80 = zext i8 %81 to i32, !dbg !13759
  %cmp81 = icmp eq i32 %conv80, 227, !dbg !13760
  br i1 %cmp81, label %if.then83, label %if.end86, !dbg !13761

if.then83:                                        ; preds = %lor.lhs.false, %if.end70
  %82 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !13762
  %dev84 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %82, i32 0, i32 9, !dbg !13762
  %83 = load %struct.pci_dev*, %struct.pci_dev** %dev84, align 8, !dbg !13762
  %dev85 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %83, i32 0, i32 41, !dbg !13762
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev85, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.160, i64 0, i64 0)) #12, !dbg !13762
  store i32 -22, i32* %retval, align 4, !dbg !13764
  br label %return, !dbg !13764

if.end86:                                         ; preds = %lor.lhs.false
  %84 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !13765
  %call87 = call i32 @make_local_pdev(%struct.adapter_t* %84, %struct.pci_dev** %pdev) #11, !dbg !13767
  %cmp88 = icmp ne i32 %call87, 0, !dbg !13768
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !13769

if.then90:                                        ; preds = %if.end86
  store i32 -5, i32* %retval, align 4, !dbg !13770
  br label %return, !dbg !13770

if.end91:                                         ; preds = %if.end86
  %__ua92 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 3, !dbg !13771
  %__raw_mbox93 = bitcast %union.anon.78* %__ua92 to [18 x i8]*, !dbg !13771
  %arrayidx94 = getelementptr [18 x i8], [18 x i8]* %__raw_mbox93, i64 0, i64 0, !dbg !13772
  %85 = load i8, i8* %arrayidx94, align 8, !dbg !13772
  %conv95 = zext i8 %85 to i32, !dbg !13772
  %cmp96 = icmp eq i32 %conv95, 3, !dbg !13773
  br i1 %cmp96, label %if.then98, label %if.else, !dbg !13774

if.then98:                                        ; preds = %if.end91
  %86 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13775
  %dev99 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %86, i32 0, i32 41, !dbg !13776
  %call100 = call i8* @dma_alloc_coherent(%struct.device* %dev99, i64 60, i64* %pthru_dma_hndl, i32 3264) #11, !dbg !13777
  %87 = bitcast i8* %call100 to %struct.mega_passthru*, !dbg !13777
  store %struct.mega_passthru* %87, %struct.mega_passthru** %pthru, align 8, !dbg !13778
  %88 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !13779
  %cmp101 = icmp eq %struct.mega_passthru* %88, null, !dbg !13781
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !13782

if.then103:                                       ; preds = %if.then98
  %89 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13783
  call void @free_local_pdev(%struct.pci_dev* %89) #11, !dbg !13785
  store i32 -12, i32* %retval, align 4, !dbg !13786
  br label %return, !dbg !13786

if.end104:                                        ; preds = %if.then98
  %__ua105 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 3, !dbg !13787
  %__raw_mbox106 = bitcast %union.anon.78* %__ua105 to [18 x i8]*, !dbg !13787
  %arrayidx107 = getelementptr [18 x i8], [18 x i8]* %__raw_mbox106, i64 0, i64 0, !dbg !13787
  %90 = bitcast i8* %arrayidx107 to %struct.megacmd_t*, !dbg !13788
  %xferaddr = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %90, i32 0, i32 5, !dbg !13788
  %91 = load i32, i32* %xferaddr, align 8, !dbg !13788
  %conv108 = zext i32 %91 to i64, !dbg !13789
  %92 = inttoptr i64 %conv108 to %struct.mega_passthru*, !dbg !13790
  store %struct.mega_passthru* %92, %struct.mega_passthru** %upthru, align 8, !dbg !13791
  %93 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !13792
  %94 = bitcast %struct.mega_passthru* %93 to i8*, !dbg !13792
  %95 = load %struct.mega_passthru*, %struct.mega_passthru** %upthru, align 8, !dbg !13793
  %96 = bitcast %struct.mega_passthru* %95 to i8*, !dbg !13793
  store i8* %94, i8** %to.addr.i258, align 8
  store i8* %96, i8** %from.addr.i259, align 8
  store i64 60, i64* %n.addr.i260, align 8
  %97 = load i8*, i8** %to.addr.i258, align 8, !dbg !13794
  %98 = load i64, i64* %n.addr.i260, align 8, !dbg !13794
  store i8* %97, i8** %addr.addr.i.i252, align 8
  store i64 %98, i64* %bytes.addr.i.i253, align 8
  store i8 0, i8* %is_source.addr.i.i254, align 1
  store i32 -1, i32* %sz.i.i255, align 4, !dbg !13534
  %99 = load i32, i32* %sz.i.i255, align 4, !dbg !13795
  %cmp.i.i261 = icmp sge i32 %99, 0, !dbg !13795
  br i1 %cmp.i.i261, label %land.rhs.i.i264, label %land.end.i.i268, !dbg !13795

land.rhs.i.i264:                                  ; preds = %if.end104
  %100 = load i32, i32* %sz.i.i255, align 4, !dbg !13795
  %conv.i.i262 = sext i32 %100 to i64, !dbg !13795
  %101 = load i64, i64* %bytes.addr.i.i253, align 8, !dbg !13795
  %cmp1.i.i263 = icmp ult i64 %conv.i.i262, %101, !dbg !13795
  br label %land.end.i.i268

land.end.i.i268:                                  ; preds = %land.rhs.i.i264, %if.end104
  %102 = phi i1 [ false, %if.end104 ], [ %cmp1.i.i263, %land.rhs.i.i264 ], !dbg !13796
  %lnot.i.i265 = xor i1 %102, true, !dbg !13795
  %lnot.ext.i.i266 = zext i1 %102 to i32, !dbg !13795
  %conv4.i.i267 = sext i32 %lnot.ext.i.i266 to i64, !dbg !13795
  br i1 %102, label %if.then.i.i269, label %if.end10.i.i284, !dbg !13797

if.then.i.i269:                                   ; preds = %land.end.i.i268
  %103 = load i64, i64* %bytes.addr.i.i253, align 8, !dbg !13798
  %104 = call i1 @llvm.is.constant.i64(i64 %103) #7, !dbg !13799
  br i1 %104, label %if.else.i.i272, label %if.then5.i.i270, !dbg !13800

if.then5.i.i270:                                  ; preds = %if.then.i.i269
  %105 = load i32, i32* %sz.i.i255, align 4, !dbg !13801
  %106 = load i64, i64* %bytes.addr.i.i253, align 8, !dbg !13802
  call void @copy_overflow(i32 %105, i64 %106) #13, !dbg !13803
  br label %if.end9.i.i276, !dbg !13803

if.else.i.i272:                                   ; preds = %if.then.i.i269
  %107 = load i8, i8* %is_source.addr.i.i254, align 1, !dbg !13804
  %tobool6.i.i271 = trunc i8 %107 to i1, !dbg !13804
  br i1 %tobool6.i.i271, label %if.then7.i.i273, label %if.else8.i.i274, !dbg !13805

if.then7.i.i273:                                  ; preds = %if.else.i.i272
  call void @__bad_copy_from() #13, !dbg !13806
  br label %if.end.i.i275, !dbg !13806

if.else8.i.i274:                                  ; preds = %if.else.i.i272
  call void @__bad_copy_to() #13, !dbg !13807
  br label %if.end.i.i275

if.end.i.i275:                                    ; preds = %if.else8.i.i274, %if.then7.i.i273
  br label %if.end9.i.i276

if.end9.i.i276:                                   ; preds = %if.end.i.i275, %if.then5.i.i270
  store i1 false, i1* %retval.i.i251, align 1, !dbg !13808
  br label %check_copy_size.exit.i298, !dbg !13808

if.end10.i.i284:                                  ; preds = %land.end.i.i268
  %108 = load i64, i64* %bytes.addr.i.i253, align 8, !dbg !13535
  %cmp11.i.i277 = icmp ugt i64 %108, 2147483647, !dbg !13535
  %lnot13.i.i278 = xor i1 %cmp11.i.i277, true, !dbg !13535
  %lnot.ext16.i.i279 = zext i1 %cmp11.i.i277 to i32, !dbg !13535
  store i32 %lnot.ext16.i.i279, i32* %__ret_warn_on.i.i256, align 4, !dbg !13535
  %109 = load i32, i32* %__ret_warn_on.i.i256, align 4, !dbg !13809
  %tobool17.i.i280 = icmp ne i32 %109, 0, !dbg !13809
  %lnot18.i.i281 = xor i1 %tobool17.i.i280, true, !dbg !13809
  %lnot.ext21.i.i282 = zext i1 %tobool17.i.i280 to i32, !dbg !13809
  %conv22.i.i283 = sext i32 %lnot.ext21.i.i282 to i64, !dbg !13809
  br i1 %tobool17.i.i280, label %if.then24.i.i285, label %if.end31.i.i291, !dbg !13535

if.then24.i.i285:                                 ; preds = %if.end10.i.i284
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.162, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !13810, !srcloc !13679
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !13811, !srcloc !13682
  br label %if.end31.i.i291, !dbg !13812

if.end31.i.i291:                                  ; preds = %if.then24.i.i285, %if.end10.i.i284
  %110 = load i32, i32* %__ret_warn_on.i.i256, align 4, !dbg !13535
  %tobool32.i.i286 = icmp ne i32 %110, 0, !dbg !13535
  %lnot33.i.i287 = xor i1 %tobool32.i.i286, true, !dbg !13535
  %lnot.ext36.i.i288 = zext i1 %tobool32.i.i286 to i32, !dbg !13535
  %conv37.i.i289 = sext i32 %lnot.ext36.i.i288 to i64, !dbg !13535
  store i64 %conv37.i.i289, i64* %tmp.i.i257, align 8, !dbg !13809
  %111 = load i64, i64* %tmp.i.i257, align 8, !dbg !13535
  %tobool38.i.i290 = icmp ne i64 %111, 0, !dbg !13813
  br i1 %tobool38.i.i290, label %if.then39.i.i292, label %if.end40.i.i294, !dbg !13814

if.then39.i.i292:                                 ; preds = %if.end31.i.i291
  store i1 false, i1* %retval.i.i251, align 1, !dbg !13815
  br label %check_copy_size.exit.i298, !dbg !13815

if.end40.i.i294:                                  ; preds = %if.end31.i.i291
  %112 = load i8*, i8** %addr.addr.i.i252, align 8, !dbg !13816
  %113 = load i64, i64* %bytes.addr.i.i253, align 8, !dbg !13817
  %114 = load i8, i8* %is_source.addr.i.i254, align 1, !dbg !13818
  %tobool41.i.i293 = trunc i8 %114 to i1, !dbg !13818
  call void @check_object_size(i8* %112, i64 %113, i1 zeroext %tobool41.i.i293) #13, !dbg !13819
  store i1 true, i1* %retval.i.i251, align 1, !dbg !13820
  br label %check_copy_size.exit.i298, !dbg !13820

check_copy_size.exit.i298:                        ; preds = %if.end40.i.i294, %if.then39.i.i292, %if.end9.i.i276
  %115 = load i1, i1* %retval.i.i251, align 1, !dbg !13821
  %lnot.i295 = xor i1 %115, true, !dbg !13794
  %lnot.ext.i296 = zext i1 %115 to i32, !dbg !13794
  %conv.i297 = sext i32 %lnot.ext.i296 to i64, !dbg !13794
  br i1 %115, label %if.then.i300, label %copy_from_user.exit, !dbg !13822

if.then.i300:                                     ; preds = %check_copy_size.exit.i298
  %116 = load i8*, i8** %to.addr.i258, align 8, !dbg !13823
  %117 = load i8*, i8** %from.addr.i259, align 8, !dbg !13824
  %118 = load i64, i64* %n.addr.i260, align 8, !dbg !13825
  %call2.i299 = call i64 @_copy_from_user(i8* %116, i8* %117, i64 %118) #13, !dbg !13826
  store i64 %call2.i299, i64* %n.addr.i260, align 8, !dbg !13827
  br label %copy_from_user.exit, !dbg !13828

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i298, %if.then.i300
  %119 = load i64, i64* %n.addr.i260, align 8, !dbg !13829
  %tobool110 = icmp ne i64 %119, 0, !dbg !13830
  br i1 %tobool110, label %if.then111, label %if.end113, !dbg !13831

if.then111:                                       ; preds = %copy_from_user.exit
  %120 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13832
  %dev112 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %120, i32 0, i32 41, !dbg !13834
  %121 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !13835
  %122 = bitcast %struct.mega_passthru* %121 to i8*, !dbg !13835
  %123 = load i64, i64* %pthru_dma_hndl, align 8, !dbg !13836
  call void @dma_free_coherent(%struct.device* %dev112, i64 60, i8* %122, i64 %123) #11, !dbg !13837
  %124 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13838
  call void @free_local_pdev(%struct.pci_dev* %124) #11, !dbg !13839
  store i32 -14, i32* %retval, align 4, !dbg !13840
  br label %return, !dbg !13840

if.end113:                                        ; preds = %copy_from_user.exit
  %125 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !13841
  %dataxferlen = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %125, i32 0, i32 13, !dbg !13843
  %126 = load i32, i32* %dataxferlen, align 1, !dbg !13843
  %tobool114 = icmp ne i32 %126, 0, !dbg !13841
  br i1 %tobool114, label %if.then115, label %if.end127, !dbg !13844

if.then115:                                       ; preds = %if.end113
  %127 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13845
  %dev116 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %127, i32 0, i32 41, !dbg !13847
  %128 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !13848
  %dataxferlen117 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %128, i32 0, i32 13, !dbg !13849
  %129 = load i32, i32* %dataxferlen117, align 1, !dbg !13849
  %conv118 = zext i32 %129 to i64, !dbg !13848
  %call119 = call i8* @dma_alloc_coherent(%struct.device* %dev116, i64 %conv118, i64* %data_dma_hndl, i32 3264) #11, !dbg !13850
  store i8* %call119, i8** %data, align 8, !dbg !13851
  %130 = load i8*, i8** %data, align 8, !dbg !13852
  %cmp120 = icmp eq i8* %130, null, !dbg !13854
  br i1 %cmp120, label %if.then122, label %if.end124, !dbg !13855

if.then122:                                       ; preds = %if.then115
  %131 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13856
  %dev123 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %131, i32 0, i32 41, !dbg !13858
  %132 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !13859
  %133 = bitcast %struct.mega_passthru* %132 to i8*, !dbg !13859
  %134 = load i64, i64* %pthru_dma_hndl, align 8, !dbg !13860
  call void @dma_free_coherent(%struct.device* %dev123, i64 60, i8* %133, i64 %134) #11, !dbg !13861
  %135 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13862
  call void @free_local_pdev(%struct.pci_dev* %135) #11, !dbg !13863
  store i32 -12, i32* %retval, align 4, !dbg !13864
  br label %return, !dbg !13864

if.end124:                                        ; preds = %if.then115
  %136 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !13865
  %dataxferaddr = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %136, i32 0, i32 12, !dbg !13866
  %137 = load i32, i32* %dataxferaddr, align 1, !dbg !13866
  store i32 %137, i32* %uxferaddr, align 4, !dbg !13867
  %138 = load i64, i64* %data_dma_hndl, align 8, !dbg !13868
  %conv125 = trunc i64 %138 to i32, !dbg !13868
  %139 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !13869
  %dataxferaddr126 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %139, i32 0, i32 12, !dbg !13870
  store i32 %conv125, i32* %dataxferaddr126, align 1, !dbg !13871
  br label %if.end127, !dbg !13872

if.end127:                                        ; preds = %if.end124, %if.end113
  %140 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !13873
  %dataxferlen128 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %140, i32 0, i32 13, !dbg !13874
  %141 = load i32, i32* %dataxferlen128, align 1, !dbg !13874
  %tobool129 = icmp ne i32 %141, 0, !dbg !13873
  br i1 %tobool129, label %land.lhs.true130, label %if.end141, !dbg !13875

land.lhs.true130:                                 ; preds = %if.end127
  %flags = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 5, !dbg !13876
  %142 = load i32, i32* %flags, align 4, !dbg !13876
  %and131 = and i32 %142, 2, !dbg !13877
  %tobool132 = icmp ne i32 %and131, 0, !dbg !13877
  br i1 %tobool132, label %if.then133, label %if.end141, !dbg !13878

if.then133:                                       ; preds = %land.lhs.true130
  %143 = load i8*, i8** %data, align 8, !dbg !13879
  %144 = load i32, i32* %uxferaddr, align 4, !dbg !13880
  %conv134 = zext i32 %144 to i64, !dbg !13881
  %145 = inttoptr i64 %conv134 to i8*, !dbg !13882
  %146 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !13883
  %dataxferlen135 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %146, i32 0, i32 13, !dbg !13884
  %147 = load i32, i32* %dataxferlen135, align 1, !dbg !13884
  %conv136 = zext i32 %147 to i64, !dbg !13883
  store i8* %143, i8** %to.addr.i308, align 8
  store i8* %145, i8** %from.addr.i309, align 8
  store i64 %conv136, i64* %n.addr.i310, align 8
  %148 = load i8*, i8** %to.addr.i308, align 8, !dbg !13885
  %149 = load i64, i64* %n.addr.i310, align 8, !dbg !13885
  store i8* %148, i8** %addr.addr.i.i302, align 8
  store i64 %149, i64* %bytes.addr.i.i303, align 8
  store i8 0, i8* %is_source.addr.i.i304, align 1
  store i32 -1, i32* %sz.i.i305, align 4, !dbg !13523
  %150 = load i32, i32* %sz.i.i305, align 4, !dbg !13886
  %cmp.i.i311 = icmp sge i32 %150, 0, !dbg !13886
  br i1 %cmp.i.i311, label %land.rhs.i.i314, label %land.end.i.i318, !dbg !13886

land.rhs.i.i314:                                  ; preds = %if.then133
  %151 = load i32, i32* %sz.i.i305, align 4, !dbg !13886
  %conv.i.i312 = sext i32 %151 to i64, !dbg !13886
  %152 = load i64, i64* %bytes.addr.i.i303, align 8, !dbg !13886
  %cmp1.i.i313 = icmp ult i64 %conv.i.i312, %152, !dbg !13886
  br label %land.end.i.i318

land.end.i.i318:                                  ; preds = %land.rhs.i.i314, %if.then133
  %153 = phi i1 [ false, %if.then133 ], [ %cmp1.i.i313, %land.rhs.i.i314 ], !dbg !13887
  %lnot.i.i315 = xor i1 %153, true, !dbg !13886
  %lnot.ext.i.i316 = zext i1 %153 to i32, !dbg !13886
  %conv4.i.i317 = sext i32 %lnot.ext.i.i316 to i64, !dbg !13886
  br i1 %153, label %if.then.i.i319, label %if.end10.i.i334, !dbg !13888

if.then.i.i319:                                   ; preds = %land.end.i.i318
  %154 = load i64, i64* %bytes.addr.i.i303, align 8, !dbg !13889
  %155 = call i1 @llvm.is.constant.i64(i64 %154) #7, !dbg !13890
  br i1 %155, label %if.else.i.i322, label %if.then5.i.i320, !dbg !13891

if.then5.i.i320:                                  ; preds = %if.then.i.i319
  %156 = load i32, i32* %sz.i.i305, align 4, !dbg !13892
  %157 = load i64, i64* %bytes.addr.i.i303, align 8, !dbg !13893
  call void @copy_overflow(i32 %156, i64 %157) #13, !dbg !13894
  br label %if.end9.i.i326, !dbg !13894

if.else.i.i322:                                   ; preds = %if.then.i.i319
  %158 = load i8, i8* %is_source.addr.i.i304, align 1, !dbg !13895
  %tobool6.i.i321 = trunc i8 %158 to i1, !dbg !13895
  br i1 %tobool6.i.i321, label %if.then7.i.i323, label %if.else8.i.i324, !dbg !13896

if.then7.i.i323:                                  ; preds = %if.else.i.i322
  call void @__bad_copy_from() #13, !dbg !13897
  br label %if.end.i.i325, !dbg !13897

if.else8.i.i324:                                  ; preds = %if.else.i.i322
  call void @__bad_copy_to() #13, !dbg !13898
  br label %if.end.i.i325

if.end.i.i325:                                    ; preds = %if.else8.i.i324, %if.then7.i.i323
  br label %if.end9.i.i326

if.end9.i.i326:                                   ; preds = %if.end.i.i325, %if.then5.i.i320
  store i1 false, i1* %retval.i.i301, align 1, !dbg !13899
  br label %check_copy_size.exit.i348, !dbg !13899

if.end10.i.i334:                                  ; preds = %land.end.i.i318
  %159 = load i64, i64* %bytes.addr.i.i303, align 8, !dbg !13524
  %cmp11.i.i327 = icmp ugt i64 %159, 2147483647, !dbg !13524
  %lnot13.i.i328 = xor i1 %cmp11.i.i327, true, !dbg !13524
  %lnot.ext16.i.i329 = zext i1 %cmp11.i.i327 to i32, !dbg !13524
  store i32 %lnot.ext16.i.i329, i32* %__ret_warn_on.i.i306, align 4, !dbg !13524
  %160 = load i32, i32* %__ret_warn_on.i.i306, align 4, !dbg !13900
  %tobool17.i.i330 = icmp ne i32 %160, 0, !dbg !13900
  %lnot18.i.i331 = xor i1 %tobool17.i.i330, true, !dbg !13900
  %lnot.ext21.i.i332 = zext i1 %tobool17.i.i330 to i32, !dbg !13900
  %conv22.i.i333 = sext i32 %lnot.ext21.i.i332 to i64, !dbg !13900
  br i1 %tobool17.i.i330, label %if.then24.i.i335, label %if.end31.i.i341, !dbg !13524

if.then24.i.i335:                                 ; preds = %if.end10.i.i334
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.162, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !13901, !srcloc !13679
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !13902, !srcloc !13682
  br label %if.end31.i.i341, !dbg !13903

if.end31.i.i341:                                  ; preds = %if.then24.i.i335, %if.end10.i.i334
  %161 = load i32, i32* %__ret_warn_on.i.i306, align 4, !dbg !13524
  %tobool32.i.i336 = icmp ne i32 %161, 0, !dbg !13524
  %lnot33.i.i337 = xor i1 %tobool32.i.i336, true, !dbg !13524
  %lnot.ext36.i.i338 = zext i1 %tobool32.i.i336 to i32, !dbg !13524
  %conv37.i.i339 = sext i32 %lnot.ext36.i.i338 to i64, !dbg !13524
  store i64 %conv37.i.i339, i64* %tmp.i.i307, align 8, !dbg !13900
  %162 = load i64, i64* %tmp.i.i307, align 8, !dbg !13524
  %tobool38.i.i340 = icmp ne i64 %162, 0, !dbg !13904
  br i1 %tobool38.i.i340, label %if.then39.i.i342, label %if.end40.i.i344, !dbg !13905

if.then39.i.i342:                                 ; preds = %if.end31.i.i341
  store i1 false, i1* %retval.i.i301, align 1, !dbg !13906
  br label %check_copy_size.exit.i348, !dbg !13906

if.end40.i.i344:                                  ; preds = %if.end31.i.i341
  %163 = load i8*, i8** %addr.addr.i.i302, align 8, !dbg !13907
  %164 = load i64, i64* %bytes.addr.i.i303, align 8, !dbg !13908
  %165 = load i8, i8* %is_source.addr.i.i304, align 1, !dbg !13909
  %tobool41.i.i343 = trunc i8 %165 to i1, !dbg !13909
  call void @check_object_size(i8* %163, i64 %164, i1 zeroext %tobool41.i.i343) #13, !dbg !13910
  store i1 true, i1* %retval.i.i301, align 1, !dbg !13911
  br label %check_copy_size.exit.i348, !dbg !13911

check_copy_size.exit.i348:                        ; preds = %if.end40.i.i344, %if.then39.i.i342, %if.end9.i.i326
  %166 = load i1, i1* %retval.i.i301, align 1, !dbg !13912
  %lnot.i345 = xor i1 %166, true, !dbg !13885
  %lnot.ext.i346 = zext i1 %166 to i32, !dbg !13885
  %conv.i347 = sext i32 %lnot.ext.i346 to i64, !dbg !13885
  br i1 %166, label %if.then.i350, label %copy_from_user.exit351, !dbg !13913

if.then.i350:                                     ; preds = %check_copy_size.exit.i348
  %167 = load i8*, i8** %to.addr.i308, align 8, !dbg !13914
  %168 = load i8*, i8** %from.addr.i309, align 8, !dbg !13915
  %169 = load i64, i64* %n.addr.i310, align 8, !dbg !13916
  %call2.i349 = call i64 @_copy_from_user(i8* %167, i8* %168, i64 %169) #13, !dbg !13917
  store i64 %call2.i349, i64* %n.addr.i310, align 8, !dbg !13918
  br label %copy_from_user.exit351, !dbg !13919

copy_from_user.exit351:                           ; preds = %check_copy_size.exit.i348, %if.then.i350
  %170 = load i64, i64* %n.addr.i310, align 8, !dbg !13920
  %tobool138 = icmp ne i64 %170, 0, !dbg !13921
  br i1 %tobool138, label %if.then139, label %if.end140, !dbg !13922

if.then139:                                       ; preds = %copy_from_user.exit351
  store i32 -14, i32* %rval, align 4, !dbg !13923
  br label %freemem_and_return, !dbg !13925

if.end140:                                        ; preds = %copy_from_user.exit351
  br label %if.end141, !dbg !13926

if.end141:                                        ; preds = %if.end140, %land.lhs.true130, %if.end127
  %171 = bitcast %struct.megacmd_t* %mc to i8*, !dbg !13927
  call void @llvm.memset.p0i8.i64(i8* align 1 %171, i8 0, i64 18, i1 false), !dbg !13927
  %cmd142 = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 0, !dbg !13928
  store i8 3, i8* %cmd142, align 1, !dbg !13929
  %172 = load i64, i64* %pthru_dma_hndl, align 8, !dbg !13930
  %conv143 = trunc i64 %172 to i32, !dbg !13931
  %xferaddr144 = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 5, !dbg !13932
  store i32 %conv143, i32* %xferaddr144, align 1, !dbg !13933
  %173 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !13934
  %174 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !13935
  %call145 = call i32 @mega_internal_command(%struct.adapter_t* %173, %struct.megacmd_t* %mc, %struct.mega_passthru* %174) #11, !dbg !13936
  %175 = load i64, i64* %arg.addr, align 8, !dbg !13937
  %176 = inttoptr i64 %175 to i8*, !dbg !13938
  %call146 = call i32 @mega_n_to_m(i8* %176, %struct.megacmd_t* %mc) #11, !dbg !13939
  store i32 %call146, i32* %rval, align 4, !dbg !13940
  %177 = load i32, i32* %rval, align 4, !dbg !13941
  %tobool147 = icmp ne i32 %177, 0, !dbg !13941
  br i1 %tobool147, label %if.then148, label %if.end149, !dbg !13943

if.then148:                                       ; preds = %if.end141
  br label %freemem_and_return, !dbg !13944

if.end149:                                        ; preds = %if.end141
  %178 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !13945
  %dataxferlen150 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %178, i32 0, i32 13, !dbg !13946
  %179 = load i32, i32* %dataxferlen150, align 1, !dbg !13946
  %tobool151 = icmp ne i32 %179, 0, !dbg !13945
  br i1 %tobool151, label %land.lhs.true152, label %if.end164, !dbg !13947

land.lhs.true152:                                 ; preds = %if.end149
  %flags153 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 5, !dbg !13948
  %180 = load i32, i32* %flags153, align 4, !dbg !13948
  %and154 = and i32 %180, 1, !dbg !13949
  %tobool155 = icmp ne i32 %and154, 0, !dbg !13949
  br i1 %tobool155, label %if.then156, label %if.end164, !dbg !13950

if.then156:                                       ; preds = %land.lhs.true152
  %181 = load i32, i32* %uxferaddr, align 4, !dbg !13951
  %conv157 = zext i32 %181 to i64, !dbg !13952
  %182 = inttoptr i64 %conv157 to i8*, !dbg !13953
  %183 = load i8*, i8** %data, align 8, !dbg !13954
  %184 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !13955
  %dataxferlen158 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %184, i32 0, i32 13, !dbg !13956
  %185 = load i32, i32* %dataxferlen158, align 1, !dbg !13956
  %conv159 = zext i32 %185 to i64, !dbg !13955
  store i8* %182, i8** %to.addr.i359, align 8
  store i8* %183, i8** %from.addr.i360, align 8
  store i64 %conv159, i64* %n.addr.i361, align 8
  %186 = load i8*, i8** %from.addr.i360, align 8, !dbg !13957
  %187 = load i64, i64* %n.addr.i361, align 8, !dbg !13957
  store i8* %186, i8** %addr.addr.i.i353, align 8
  store i64 %187, i64* %bytes.addr.i.i354, align 8
  store i8 1, i8* %is_source.addr.i.i355, align 1
  store i32 -1, i32* %sz.i.i356, align 4, !dbg !13510
  %188 = load i32, i32* %sz.i.i356, align 4, !dbg !13958
  %cmp.i.i362 = icmp sge i32 %188, 0, !dbg !13958
  br i1 %cmp.i.i362, label %land.rhs.i.i365, label %land.end.i.i369, !dbg !13958

land.rhs.i.i365:                                  ; preds = %if.then156
  %189 = load i32, i32* %sz.i.i356, align 4, !dbg !13958
  %conv.i.i363 = sext i32 %189 to i64, !dbg !13958
  %190 = load i64, i64* %bytes.addr.i.i354, align 8, !dbg !13958
  %cmp1.i.i364 = icmp ult i64 %conv.i.i363, %190, !dbg !13958
  br label %land.end.i.i369

land.end.i.i369:                                  ; preds = %land.rhs.i.i365, %if.then156
  %191 = phi i1 [ false, %if.then156 ], [ %cmp1.i.i364, %land.rhs.i.i365 ], !dbg !13959
  %lnot.i.i366 = xor i1 %191, true, !dbg !13958
  %lnot.ext.i.i367 = zext i1 %191 to i32, !dbg !13958
  %conv4.i.i368 = sext i32 %lnot.ext.i.i367 to i64, !dbg !13958
  br i1 %191, label %if.then.i.i370, label %if.end10.i.i385, !dbg !13960

if.then.i.i370:                                   ; preds = %land.end.i.i369
  %192 = load i64, i64* %bytes.addr.i.i354, align 8, !dbg !13961
  %193 = call i1 @llvm.is.constant.i64(i64 %192) #7, !dbg !13962
  br i1 %193, label %if.else.i.i373, label %if.then5.i.i371, !dbg !13963

if.then5.i.i371:                                  ; preds = %if.then.i.i370
  %194 = load i32, i32* %sz.i.i356, align 4, !dbg !13964
  %195 = load i64, i64* %bytes.addr.i.i354, align 8, !dbg !13965
  call void @copy_overflow(i32 %194, i64 %195) #13, !dbg !13966
  br label %if.end9.i.i377, !dbg !13966

if.else.i.i373:                                   ; preds = %if.then.i.i370
  %196 = load i8, i8* %is_source.addr.i.i355, align 1, !dbg !13967
  %tobool6.i.i372 = trunc i8 %196 to i1, !dbg !13967
  br i1 %tobool6.i.i372, label %if.then7.i.i374, label %if.else8.i.i375, !dbg !13968

if.then7.i.i374:                                  ; preds = %if.else.i.i373
  call void @__bad_copy_from() #13, !dbg !13969
  br label %if.end.i.i376, !dbg !13969

if.else8.i.i375:                                  ; preds = %if.else.i.i373
  call void @__bad_copy_to() #13, !dbg !13970
  br label %if.end.i.i376

if.end.i.i376:                                    ; preds = %if.else8.i.i375, %if.then7.i.i374
  br label %if.end9.i.i377

if.end9.i.i377:                                   ; preds = %if.end.i.i376, %if.then5.i.i371
  store i1 false, i1* %retval.i.i352, align 1, !dbg !13971
  br label %check_copy_size.exit.i399, !dbg !13971

if.end10.i.i385:                                  ; preds = %land.end.i.i369
  %197 = load i64, i64* %bytes.addr.i.i354, align 8, !dbg !13511
  %cmp11.i.i378 = icmp ugt i64 %197, 2147483647, !dbg !13511
  %lnot13.i.i379 = xor i1 %cmp11.i.i378, true, !dbg !13511
  %lnot.ext16.i.i380 = zext i1 %cmp11.i.i378 to i32, !dbg !13511
  store i32 %lnot.ext16.i.i380, i32* %__ret_warn_on.i.i357, align 4, !dbg !13511
  %198 = load i32, i32* %__ret_warn_on.i.i357, align 4, !dbg !13972
  %tobool17.i.i381 = icmp ne i32 %198, 0, !dbg !13972
  %lnot18.i.i382 = xor i1 %tobool17.i.i381, true, !dbg !13972
  %lnot.ext21.i.i383 = zext i1 %tobool17.i.i381 to i32, !dbg !13972
  %conv22.i.i384 = sext i32 %lnot.ext21.i.i383 to i64, !dbg !13972
  br i1 %tobool17.i.i381, label %if.then24.i.i386, label %if.end31.i.i392, !dbg !13511

if.then24.i.i386:                                 ; preds = %if.end10.i.i385
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.162, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !13973, !srcloc !13679
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !13974, !srcloc !13682
  br label %if.end31.i.i392, !dbg !13975

if.end31.i.i392:                                  ; preds = %if.then24.i.i386, %if.end10.i.i385
  %199 = load i32, i32* %__ret_warn_on.i.i357, align 4, !dbg !13511
  %tobool32.i.i387 = icmp ne i32 %199, 0, !dbg !13511
  %lnot33.i.i388 = xor i1 %tobool32.i.i387, true, !dbg !13511
  %lnot.ext36.i.i389 = zext i1 %tobool32.i.i387 to i32, !dbg !13511
  %conv37.i.i390 = sext i32 %lnot.ext36.i.i389 to i64, !dbg !13511
  store i64 %conv37.i.i390, i64* %tmp.i.i358, align 8, !dbg !13972
  %200 = load i64, i64* %tmp.i.i358, align 8, !dbg !13511
  %tobool38.i.i391 = icmp ne i64 %200, 0, !dbg !13976
  br i1 %tobool38.i.i391, label %if.then39.i.i393, label %if.end40.i.i395, !dbg !13977

if.then39.i.i393:                                 ; preds = %if.end31.i.i392
  store i1 false, i1* %retval.i.i352, align 1, !dbg !13978
  br label %check_copy_size.exit.i399, !dbg !13978

if.end40.i.i395:                                  ; preds = %if.end31.i.i392
  %201 = load i8*, i8** %addr.addr.i.i353, align 8, !dbg !13979
  %202 = load i64, i64* %bytes.addr.i.i354, align 8, !dbg !13980
  %203 = load i8, i8* %is_source.addr.i.i355, align 1, !dbg !13981
  %tobool41.i.i394 = trunc i8 %203 to i1, !dbg !13981
  call void @check_object_size(i8* %201, i64 %202, i1 zeroext %tobool41.i.i394) #13, !dbg !13982
  store i1 true, i1* %retval.i.i352, align 1, !dbg !13983
  br label %check_copy_size.exit.i399, !dbg !13983

check_copy_size.exit.i399:                        ; preds = %if.end40.i.i395, %if.then39.i.i393, %if.end9.i.i377
  %204 = load i1, i1* %retval.i.i352, align 1, !dbg !13984
  %lnot.i396 = xor i1 %204, true, !dbg !13957
  %lnot.ext.i397 = zext i1 %204 to i32, !dbg !13957
  %conv.i398 = sext i32 %lnot.ext.i397 to i64, !dbg !13957
  br i1 %204, label %if.then.i401, label %copy_to_user.exit402, !dbg !13985

if.then.i401:                                     ; preds = %check_copy_size.exit.i399
  %205 = load i8*, i8** %to.addr.i359, align 8, !dbg !13986
  %206 = load i8*, i8** %from.addr.i360, align 8, !dbg !13987
  %207 = load i64, i64* %n.addr.i361, align 8, !dbg !13988
  %call2.i400 = call i64 @_copy_to_user(i8* %205, i8* %206, i64 %207) #13, !dbg !13989
  store i64 %call2.i400, i64* %n.addr.i361, align 8, !dbg !13990
  br label %copy_to_user.exit402, !dbg !13991

copy_to_user.exit402:                             ; preds = %check_copy_size.exit.i399, %if.then.i401
  %208 = load i64, i64* %n.addr.i361, align 8, !dbg !13992
  %tobool161 = icmp ne i64 %208, 0, !dbg !13993
  br i1 %tobool161, label %if.then162, label %if.end163, !dbg !13994

if.then162:                                       ; preds = %copy_to_user.exit402
  store i32 -14, i32* %rval, align 4, !dbg !13995
  br label %if.end163, !dbg !13997

if.end163:                                        ; preds = %if.then162, %copy_to_user.exit402
  br label %if.end164, !dbg !13998

if.end164:                                        ; preds = %if.end163, %land.lhs.true152, %if.end149
  %209 = load %struct.mega_passthru*, %struct.mega_passthru** %upthru, align 8, !dbg !13999
  %reqsensearea = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %209, i32 0, i32 9, !dbg !14000
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %reqsensearea, i64 0, i64 0, !dbg !13999
  %210 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !14001
  %reqsensearea165 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %210, i32 0, i32 9, !dbg !14002
  %arraydecay166 = getelementptr inbounds [32 x i8], [32 x i8]* %reqsensearea165, i64 0, i64 0, !dbg !14001
  store i8* %arraydecay, i8** %to.addr.i410, align 8
  store i8* %arraydecay166, i8** %from.addr.i411, align 8
  store i64 14, i64* %n.addr.i412, align 8
  %211 = load i8*, i8** %from.addr.i411, align 8, !dbg !14003
  %212 = load i64, i64* %n.addr.i412, align 8, !dbg !14003
  store i8* %211, i8** %addr.addr.i.i404, align 8
  store i64 %212, i64* %bytes.addr.i.i405, align 8
  store i8 1, i8* %is_source.addr.i.i406, align 1
  store i32 -1, i32* %sz.i.i407, align 4, !dbg !13497
  %213 = load i32, i32* %sz.i.i407, align 4, !dbg !14004
  %cmp.i.i413 = icmp sge i32 %213, 0, !dbg !14004
  br i1 %cmp.i.i413, label %land.rhs.i.i416, label %land.end.i.i420, !dbg !14004

land.rhs.i.i416:                                  ; preds = %if.end164
  %214 = load i32, i32* %sz.i.i407, align 4, !dbg !14004
  %conv.i.i414 = sext i32 %214 to i64, !dbg !14004
  %215 = load i64, i64* %bytes.addr.i.i405, align 8, !dbg !14004
  %cmp1.i.i415 = icmp ult i64 %conv.i.i414, %215, !dbg !14004
  br label %land.end.i.i420

land.end.i.i420:                                  ; preds = %land.rhs.i.i416, %if.end164
  %216 = phi i1 [ false, %if.end164 ], [ %cmp1.i.i415, %land.rhs.i.i416 ], !dbg !14005
  %lnot.i.i417 = xor i1 %216, true, !dbg !14004
  %lnot.ext.i.i418 = zext i1 %216 to i32, !dbg !14004
  %conv4.i.i419 = sext i32 %lnot.ext.i.i418 to i64, !dbg !14004
  br i1 %216, label %if.then.i.i421, label %if.end10.i.i436, !dbg !14006

if.then.i.i421:                                   ; preds = %land.end.i.i420
  %217 = load i64, i64* %bytes.addr.i.i405, align 8, !dbg !14007
  %218 = call i1 @llvm.is.constant.i64(i64 %217) #7, !dbg !14008
  br i1 %218, label %if.else.i.i424, label %if.then5.i.i422, !dbg !14009

if.then5.i.i422:                                  ; preds = %if.then.i.i421
  %219 = load i32, i32* %sz.i.i407, align 4, !dbg !14010
  %220 = load i64, i64* %bytes.addr.i.i405, align 8, !dbg !14011
  call void @copy_overflow(i32 %219, i64 %220) #13, !dbg !14012
  br label %if.end9.i.i428, !dbg !14012

if.else.i.i424:                                   ; preds = %if.then.i.i421
  %221 = load i8, i8* %is_source.addr.i.i406, align 1, !dbg !14013
  %tobool6.i.i423 = trunc i8 %221 to i1, !dbg !14013
  br i1 %tobool6.i.i423, label %if.then7.i.i425, label %if.else8.i.i426, !dbg !14014

if.then7.i.i425:                                  ; preds = %if.else.i.i424
  call void @__bad_copy_from() #13, !dbg !14015
  br label %if.end.i.i427, !dbg !14015

if.else8.i.i426:                                  ; preds = %if.else.i.i424
  call void @__bad_copy_to() #13, !dbg !14016
  br label %if.end.i.i427

if.end.i.i427:                                    ; preds = %if.else8.i.i426, %if.then7.i.i425
  br label %if.end9.i.i428

if.end9.i.i428:                                   ; preds = %if.end.i.i427, %if.then5.i.i422
  store i1 false, i1* %retval.i.i403, align 1, !dbg !14017
  br label %check_copy_size.exit.i450, !dbg !14017

if.end10.i.i436:                                  ; preds = %land.end.i.i420
  %222 = load i64, i64* %bytes.addr.i.i405, align 8, !dbg !13498
  %cmp11.i.i429 = icmp ugt i64 %222, 2147483647, !dbg !13498
  %lnot13.i.i430 = xor i1 %cmp11.i.i429, true, !dbg !13498
  %lnot.ext16.i.i431 = zext i1 %cmp11.i.i429 to i32, !dbg !13498
  store i32 %lnot.ext16.i.i431, i32* %__ret_warn_on.i.i408, align 4, !dbg !13498
  %223 = load i32, i32* %__ret_warn_on.i.i408, align 4, !dbg !14018
  %tobool17.i.i432 = icmp ne i32 %223, 0, !dbg !14018
  %lnot18.i.i433 = xor i1 %tobool17.i.i432, true, !dbg !14018
  %lnot.ext21.i.i434 = zext i1 %tobool17.i.i432 to i32, !dbg !14018
  %conv22.i.i435 = sext i32 %lnot.ext21.i.i434 to i64, !dbg !14018
  br i1 %tobool17.i.i432, label %if.then24.i.i437, label %if.end31.i.i443, !dbg !13498

if.then24.i.i437:                                 ; preds = %if.end10.i.i436
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.162, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !14019, !srcloc !13679
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !14020, !srcloc !13682
  br label %if.end31.i.i443, !dbg !14021

if.end31.i.i443:                                  ; preds = %if.then24.i.i437, %if.end10.i.i436
  %224 = load i32, i32* %__ret_warn_on.i.i408, align 4, !dbg !13498
  %tobool32.i.i438 = icmp ne i32 %224, 0, !dbg !13498
  %lnot33.i.i439 = xor i1 %tobool32.i.i438, true, !dbg !13498
  %lnot.ext36.i.i440 = zext i1 %tobool32.i.i438 to i32, !dbg !13498
  %conv37.i.i441 = sext i32 %lnot.ext36.i.i440 to i64, !dbg !13498
  store i64 %conv37.i.i441, i64* %tmp.i.i409, align 8, !dbg !14018
  %225 = load i64, i64* %tmp.i.i409, align 8, !dbg !13498
  %tobool38.i.i442 = icmp ne i64 %225, 0, !dbg !14022
  br i1 %tobool38.i.i442, label %if.then39.i.i444, label %if.end40.i.i446, !dbg !14023

if.then39.i.i444:                                 ; preds = %if.end31.i.i443
  store i1 false, i1* %retval.i.i403, align 1, !dbg !14024
  br label %check_copy_size.exit.i450, !dbg !14024

if.end40.i.i446:                                  ; preds = %if.end31.i.i443
  %226 = load i8*, i8** %addr.addr.i.i404, align 8, !dbg !14025
  %227 = load i64, i64* %bytes.addr.i.i405, align 8, !dbg !14026
  %228 = load i8, i8* %is_source.addr.i.i406, align 1, !dbg !14027
  %tobool41.i.i445 = trunc i8 %228 to i1, !dbg !14027
  call void @check_object_size(i8* %226, i64 %227, i1 zeroext %tobool41.i.i445) #13, !dbg !14028
  store i1 true, i1* %retval.i.i403, align 1, !dbg !14029
  br label %check_copy_size.exit.i450, !dbg !14029

check_copy_size.exit.i450:                        ; preds = %if.end40.i.i446, %if.then39.i.i444, %if.end9.i.i428
  %229 = load i1, i1* %retval.i.i403, align 1, !dbg !14030
  %lnot.i447 = xor i1 %229, true, !dbg !14003
  %lnot.ext.i448 = zext i1 %229 to i32, !dbg !14003
  %conv.i449 = sext i32 %lnot.ext.i448 to i64, !dbg !14003
  br i1 %229, label %if.then.i452, label %copy_to_user.exit453, !dbg !14031

if.then.i452:                                     ; preds = %check_copy_size.exit.i450
  %230 = load i8*, i8** %to.addr.i410, align 8, !dbg !14032
  %231 = load i8*, i8** %from.addr.i411, align 8, !dbg !14033
  %232 = load i64, i64* %n.addr.i412, align 8, !dbg !14034
  %call2.i451 = call i64 @_copy_to_user(i8* %230, i8* %231, i64 %232) #13, !dbg !14035
  store i64 %call2.i451, i64* %n.addr.i412, align 8, !dbg !14036
  br label %copy_to_user.exit453, !dbg !14037

copy_to_user.exit453:                             ; preds = %check_copy_size.exit.i450, %if.then.i452
  %233 = load i64, i64* %n.addr.i412, align 8, !dbg !14038
  %tobool168 = icmp ne i64 %233, 0, !dbg !14039
  br i1 %tobool168, label %if.then169, label %if.end170, !dbg !14040

if.then169:                                       ; preds = %copy_to_user.exit453
  store i32 -14, i32* %rval, align 4, !dbg !14041
  br label %if.end170, !dbg !14042

if.end170:                                        ; preds = %if.then169, %copy_to_user.exit453
  br label %freemem_and_return, !dbg !14043

freemem_and_return:                               ; preds = %if.end170, %if.then148, %if.then139
  call void @llvm.dbg.label(metadata !14044), !dbg !14045
  %234 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !14046
  %dataxferlen171 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %234, i32 0, i32 13, !dbg !14048
  %235 = load i32, i32* %dataxferlen171, align 1, !dbg !14048
  %tobool172 = icmp ne i32 %235, 0, !dbg !14046
  br i1 %tobool172, label %if.then173, label %if.end177, !dbg !14049

if.then173:                                       ; preds = %freemem_and_return
  %236 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14050
  %dev174 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %236, i32 0, i32 41, !dbg !14052
  %237 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !14053
  %dataxferlen175 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %237, i32 0, i32 13, !dbg !14054
  %238 = load i32, i32* %dataxferlen175, align 1, !dbg !14054
  %conv176 = zext i32 %238 to i64, !dbg !14053
  %239 = load i8*, i8** %data, align 8, !dbg !14055
  %240 = load i64, i64* %data_dma_hndl, align 8, !dbg !14056
  call void @dma_free_coherent(%struct.device* %dev174, i64 %conv176, i8* %239, i64 %240) #11, !dbg !14057
  br label %if.end177, !dbg !14058

if.end177:                                        ; preds = %if.then173, %freemem_and_return
  %241 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14059
  %dev178 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %241, i32 0, i32 41, !dbg !14060
  %242 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !14061
  %243 = bitcast %struct.mega_passthru* %242 to i8*, !dbg !14061
  %244 = load i64, i64* %pthru_dma_hndl, align 8, !dbg !14062
  call void @dma_free_coherent(%struct.device* %dev178, i64 60, i8* %243, i64 %244) #11, !dbg !14063
  %245 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14064
  call void @free_local_pdev(%struct.pci_dev* %245) #11, !dbg !14065
  %246 = load i32, i32* %rval, align 4, !dbg !14066
  store i32 %246, i32* %retval, align 4, !dbg !14067
  br label %return, !dbg !14067

if.else:                                          ; preds = %if.end91
  %xferlen = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 4, !dbg !14068
  %247 = load i32, i32* %xferlen, align 8, !dbg !14068
  %tobool179 = icmp ne i32 %247, 0, !dbg !14070
  br i1 %tobool179, label %if.then180, label %if.end193, !dbg !14071

if.then180:                                       ; preds = %if.else
  %248 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14072
  %dev181 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %248, i32 0, i32 41, !dbg !14074
  %xferlen182 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 4, !dbg !14075
  %249 = load i32, i32* %xferlen182, align 8, !dbg !14075
  %conv183 = zext i32 %249 to i64, !dbg !14076
  %call184 = call i8* @dma_alloc_coherent(%struct.device* %dev181, i64 %conv183, i64* %data_dma_hndl, i32 3264) #11, !dbg !14077
  store i8* %call184, i8** %data, align 8, !dbg !14078
  %250 = load i8*, i8** %data, align 8, !dbg !14079
  %cmp185 = icmp eq i8* %250, null, !dbg !14081
  br i1 %cmp185, label %if.then187, label %if.end188, !dbg !14082

if.then187:                                       ; preds = %if.then180
  %251 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14083
  call void @free_local_pdev(%struct.pci_dev* %251) #11, !dbg !14085
  store i32 -12, i32* %retval, align 4, !dbg !14086
  br label %return, !dbg !14086

if.end188:                                        ; preds = %if.then180
  %__ua189 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 3, !dbg !14087
  %__raw_mbox190 = bitcast %union.anon.78* %__ua189 to [18 x i8]*, !dbg !14087
  %arrayidx191 = getelementptr [18 x i8], [18 x i8]* %__raw_mbox190, i64 0, i64 0, !dbg !14087
  %252 = bitcast i8* %arrayidx191 to %struct.megacmd_t*, !dbg !14088
  %xferaddr192 = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %252, i32 0, i32 5, !dbg !14088
  %253 = load i32, i32* %xferaddr192, align 8, !dbg !14088
  store i32 %253, i32* %uxferaddr, align 4, !dbg !14089
  br label %if.end193, !dbg !14090

if.end193:                                        ; preds = %if.end188, %if.else
  %xferlen194 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 4, !dbg !14091
  %254 = load i32, i32* %xferlen194, align 8, !dbg !14091
  %tobool195 = icmp ne i32 %254, 0, !dbg !14092
  br i1 %tobool195, label %land.lhs.true196, label %if.end211, !dbg !14093

land.lhs.true196:                                 ; preds = %if.end193
  %flags197 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 5, !dbg !14094
  %255 = load i32, i32* %flags197, align 4, !dbg !14094
  %and198 = and i32 %255, 2, !dbg !14095
  %tobool199 = icmp ne i32 %and198, 0, !dbg !14095
  br i1 %tobool199, label %if.then200, label %if.end211, !dbg !14096

if.then200:                                       ; preds = %land.lhs.true196
  %256 = load i8*, i8** %data, align 8, !dbg !14097
  %257 = load i32, i32* %uxferaddr, align 4, !dbg !14098
  %conv201 = zext i32 %257 to i64, !dbg !14099
  %258 = inttoptr i64 %conv201 to i8*, !dbg !14100
  %xferlen202 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 4, !dbg !14101
  %259 = load i32, i32* %xferlen202, align 8, !dbg !14101
  %conv203 = zext i32 %259 to i64, !dbg !14102
  store i8* %256, i8** %to.addr.i461, align 8
  store i8* %258, i8** %from.addr.i462, align 8
  store i64 %conv203, i64* %n.addr.i463, align 8
  %260 = load i8*, i8** %to.addr.i461, align 8, !dbg !14103
  %261 = load i64, i64* %n.addr.i463, align 8, !dbg !14103
  store i8* %260, i8** %addr.addr.i.i455, align 8
  store i64 %261, i64* %bytes.addr.i.i456, align 8
  store i8 0, i8* %is_source.addr.i.i457, align 1
  store i32 -1, i32* %sz.i.i458, align 4, !dbg !13482
  %262 = load i32, i32* %sz.i.i458, align 4, !dbg !14104
  %cmp.i.i464 = icmp sge i32 %262, 0, !dbg !14104
  br i1 %cmp.i.i464, label %land.rhs.i.i467, label %land.end.i.i471, !dbg !14104

land.rhs.i.i467:                                  ; preds = %if.then200
  %263 = load i32, i32* %sz.i.i458, align 4, !dbg !14104
  %conv.i.i465 = sext i32 %263 to i64, !dbg !14104
  %264 = load i64, i64* %bytes.addr.i.i456, align 8, !dbg !14104
  %cmp1.i.i466 = icmp ult i64 %conv.i.i465, %264, !dbg !14104
  br label %land.end.i.i471

land.end.i.i471:                                  ; preds = %land.rhs.i.i467, %if.then200
  %265 = phi i1 [ false, %if.then200 ], [ %cmp1.i.i466, %land.rhs.i.i467 ], !dbg !14105
  %lnot.i.i468 = xor i1 %265, true, !dbg !14104
  %lnot.ext.i.i469 = zext i1 %265 to i32, !dbg !14104
  %conv4.i.i470 = sext i32 %lnot.ext.i.i469 to i64, !dbg !14104
  br i1 %265, label %if.then.i.i472, label %if.end10.i.i487, !dbg !14106

if.then.i.i472:                                   ; preds = %land.end.i.i471
  %266 = load i64, i64* %bytes.addr.i.i456, align 8, !dbg !14107
  %267 = call i1 @llvm.is.constant.i64(i64 %266) #7, !dbg !14108
  br i1 %267, label %if.else.i.i475, label %if.then5.i.i473, !dbg !14109

if.then5.i.i473:                                  ; preds = %if.then.i.i472
  %268 = load i32, i32* %sz.i.i458, align 4, !dbg !14110
  %269 = load i64, i64* %bytes.addr.i.i456, align 8, !dbg !14111
  call void @copy_overflow(i32 %268, i64 %269) #13, !dbg !14112
  br label %if.end9.i.i479, !dbg !14112

if.else.i.i475:                                   ; preds = %if.then.i.i472
  %270 = load i8, i8* %is_source.addr.i.i457, align 1, !dbg !14113
  %tobool6.i.i474 = trunc i8 %270 to i1, !dbg !14113
  br i1 %tobool6.i.i474, label %if.then7.i.i476, label %if.else8.i.i477, !dbg !14114

if.then7.i.i476:                                  ; preds = %if.else.i.i475
  call void @__bad_copy_from() #13, !dbg !14115
  br label %if.end.i.i478, !dbg !14115

if.else8.i.i477:                                  ; preds = %if.else.i.i475
  call void @__bad_copy_to() #13, !dbg !14116
  br label %if.end.i.i478

if.end.i.i478:                                    ; preds = %if.else8.i.i477, %if.then7.i.i476
  br label %if.end9.i.i479

if.end9.i.i479:                                   ; preds = %if.end.i.i478, %if.then5.i.i473
  store i1 false, i1* %retval.i.i454, align 1, !dbg !14117
  br label %check_copy_size.exit.i501, !dbg !14117

if.end10.i.i487:                                  ; preds = %land.end.i.i471
  %271 = load i64, i64* %bytes.addr.i.i456, align 8, !dbg !13483
  %cmp11.i.i480 = icmp ugt i64 %271, 2147483647, !dbg !13483
  %lnot13.i.i481 = xor i1 %cmp11.i.i480, true, !dbg !13483
  %lnot.ext16.i.i482 = zext i1 %cmp11.i.i480 to i32, !dbg !13483
  store i32 %lnot.ext16.i.i482, i32* %__ret_warn_on.i.i459, align 4, !dbg !13483
  %272 = load i32, i32* %__ret_warn_on.i.i459, align 4, !dbg !14118
  %tobool17.i.i483 = icmp ne i32 %272, 0, !dbg !14118
  %lnot18.i.i484 = xor i1 %tobool17.i.i483, true, !dbg !14118
  %lnot.ext21.i.i485 = zext i1 %tobool17.i.i483 to i32, !dbg !14118
  %conv22.i.i486 = sext i32 %lnot.ext21.i.i485 to i64, !dbg !14118
  br i1 %tobool17.i.i483, label %if.then24.i.i488, label %if.end31.i.i494, !dbg !13483

if.then24.i.i488:                                 ; preds = %if.end10.i.i487
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.162, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !14119, !srcloc !13679
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !14120, !srcloc !13682
  br label %if.end31.i.i494, !dbg !14121

if.end31.i.i494:                                  ; preds = %if.then24.i.i488, %if.end10.i.i487
  %273 = load i32, i32* %__ret_warn_on.i.i459, align 4, !dbg !13483
  %tobool32.i.i489 = icmp ne i32 %273, 0, !dbg !13483
  %lnot33.i.i490 = xor i1 %tobool32.i.i489, true, !dbg !13483
  %lnot.ext36.i.i491 = zext i1 %tobool32.i.i489 to i32, !dbg !13483
  %conv37.i.i492 = sext i32 %lnot.ext36.i.i491 to i64, !dbg !13483
  store i64 %conv37.i.i492, i64* %tmp.i.i460, align 8, !dbg !14118
  %274 = load i64, i64* %tmp.i.i460, align 8, !dbg !13483
  %tobool38.i.i493 = icmp ne i64 %274, 0, !dbg !14122
  br i1 %tobool38.i.i493, label %if.then39.i.i495, label %if.end40.i.i497, !dbg !14123

if.then39.i.i495:                                 ; preds = %if.end31.i.i494
  store i1 false, i1* %retval.i.i454, align 1, !dbg !14124
  br label %check_copy_size.exit.i501, !dbg !14124

if.end40.i.i497:                                  ; preds = %if.end31.i.i494
  %275 = load i8*, i8** %addr.addr.i.i455, align 8, !dbg !14125
  %276 = load i64, i64* %bytes.addr.i.i456, align 8, !dbg !14126
  %277 = load i8, i8* %is_source.addr.i.i457, align 1, !dbg !14127
  %tobool41.i.i496 = trunc i8 %277 to i1, !dbg !14127
  call void @check_object_size(i8* %275, i64 %276, i1 zeroext %tobool41.i.i496) #13, !dbg !14128
  store i1 true, i1* %retval.i.i454, align 1, !dbg !14129
  br label %check_copy_size.exit.i501, !dbg !14129

check_copy_size.exit.i501:                        ; preds = %if.end40.i.i497, %if.then39.i.i495, %if.end9.i.i479
  %278 = load i1, i1* %retval.i.i454, align 1, !dbg !14130
  %lnot.i498 = xor i1 %278, true, !dbg !14103
  %lnot.ext.i499 = zext i1 %278 to i32, !dbg !14103
  %conv.i500 = sext i32 %lnot.ext.i499 to i64, !dbg !14103
  br i1 %278, label %if.then.i503, label %copy_from_user.exit504, !dbg !14131

if.then.i503:                                     ; preds = %check_copy_size.exit.i501
  %279 = load i8*, i8** %to.addr.i461, align 8, !dbg !14132
  %280 = load i8*, i8** %from.addr.i462, align 8, !dbg !14133
  %281 = load i64, i64* %n.addr.i463, align 8, !dbg !14134
  %call2.i502 = call i64 @_copy_from_user(i8* %279, i8* %280, i64 %281) #13, !dbg !14135
  store i64 %call2.i502, i64* %n.addr.i463, align 8, !dbg !14136
  br label %copy_from_user.exit504, !dbg !14137

copy_from_user.exit504:                           ; preds = %check_copy_size.exit.i501, %if.then.i503
  %282 = load i64, i64* %n.addr.i463, align 8, !dbg !14138
  %tobool205 = icmp ne i64 %282, 0, !dbg !14139
  br i1 %tobool205, label %if.then206, label %if.end210, !dbg !14140

if.then206:                                       ; preds = %copy_from_user.exit504
  %283 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14141
  %dev207 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %283, i32 0, i32 41, !dbg !14143
  %xferlen208 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 4, !dbg !14144
  %284 = load i32, i32* %xferlen208, align 8, !dbg !14144
  %conv209 = zext i32 %284 to i64, !dbg !14145
  %285 = load i8*, i8** %data, align 8, !dbg !14146
  %286 = load i64, i64* %data_dma_hndl, align 8, !dbg !14147
  call void @dma_free_coherent(%struct.device* %dev207, i64 %conv209, i8* %285, i64 %286) #11, !dbg !14148
  %287 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14149
  call void @free_local_pdev(%struct.pci_dev* %287) #11, !dbg !14150
  store i32 -14, i32* %retval, align 4, !dbg !14151
  br label %return, !dbg !14151

if.end210:                                        ; preds = %copy_from_user.exit504
  br label %if.end211, !dbg !14152

if.end211:                                        ; preds = %if.end210, %land.lhs.true196, %if.end193
  %288 = bitcast %struct.megacmd_t* %mc to i8*, !dbg !14153
  %__ua212 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 3, !dbg !14154
  %__raw_mbox213 = bitcast %union.anon.78* %__ua212 to [18 x i8]*, !dbg !14154
  %arrayidx214 = getelementptr [18 x i8], [18 x i8]* %__raw_mbox213, i64 0, i64 0, !dbg !14154
  %289 = bitcast i8* %arrayidx214 to %struct.megacmd_t*, !dbg !14153
  %290 = bitcast %struct.megacmd_t* %289 to i8*, !dbg !14153
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %288, i8* align 8 %290, i64 18, i1 false), !dbg !14153
  %291 = load i64, i64* %data_dma_hndl, align 8, !dbg !14155
  %conv215 = trunc i64 %291 to i32, !dbg !14156
  %xferaddr216 = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 5, !dbg !14157
  store i32 %conv215, i32* %xferaddr216, align 1, !dbg !14158
  %292 = load %struct.adapter_t*, %struct.adapter_t** %adapter, align 8, !dbg !14159
  %call217 = call i32 @mega_internal_command(%struct.adapter_t* %292, %struct.megacmd_t* %mc, %struct.mega_passthru* null) #11, !dbg !14160
  %293 = load i64, i64* %arg.addr, align 8, !dbg !14161
  %294 = inttoptr i64 %293 to i8*, !dbg !14162
  %call218 = call i32 @mega_n_to_m(i8* %294, %struct.megacmd_t* %mc) #11, !dbg !14163
  store i32 %call218, i32* %rval, align 4, !dbg !14164
  %295 = load i32, i32* %rval, align 4, !dbg !14165
  %tobool219 = icmp ne i32 %295, 0, !dbg !14165
  br i1 %tobool219, label %if.then220, label %if.end228, !dbg !14167

if.then220:                                       ; preds = %if.end211
  %xferlen221 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 4, !dbg !14168
  %296 = load i32, i32* %xferlen221, align 8, !dbg !14168
  %tobool222 = icmp ne i32 %296, 0, !dbg !14171
  br i1 %tobool222, label %if.then223, label %if.end227, !dbg !14172

if.then223:                                       ; preds = %if.then220
  %297 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14173
  %dev224 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %297, i32 0, i32 41, !dbg !14175
  %xferlen225 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 4, !dbg !14176
  %298 = load i32, i32* %xferlen225, align 8, !dbg !14176
  %conv226 = zext i32 %298 to i64, !dbg !14177
  %299 = load i8*, i8** %data, align 8, !dbg !14178
  %300 = load i64, i64* %data_dma_hndl, align 8, !dbg !14179
  call void @dma_free_coherent(%struct.device* %dev224, i64 %conv226, i8* %299, i64 %300) #11, !dbg !14180
  br label %if.end227, !dbg !14181

if.end227:                                        ; preds = %if.then223, %if.then220
  %301 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14182
  call void @free_local_pdev(%struct.pci_dev* %301) #11, !dbg !14183
  %302 = load i32, i32* %rval, align 4, !dbg !14184
  store i32 %302, i32* %retval, align 4, !dbg !14185
  br label %return, !dbg !14185

if.end228:                                        ; preds = %if.end211
  %xferlen229 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 4, !dbg !14186
  %303 = load i32, i32* %xferlen229, align 8, !dbg !14186
  %tobool230 = icmp ne i32 %303, 0, !dbg !14187
  br i1 %tobool230, label %land.lhs.true231, label %if.end243, !dbg !14188

land.lhs.true231:                                 ; preds = %if.end228
  %flags232 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 5, !dbg !14189
  %304 = load i32, i32* %flags232, align 4, !dbg !14189
  %and233 = and i32 %304, 1, !dbg !14190
  %tobool234 = icmp ne i32 %and233, 0, !dbg !14190
  br i1 %tobool234, label %if.then235, label %if.end243, !dbg !14191

if.then235:                                       ; preds = %land.lhs.true231
  %305 = load i32, i32* %uxferaddr, align 4, !dbg !14192
  %conv236 = zext i32 %305 to i64, !dbg !14193
  %306 = inttoptr i64 %conv236 to i8*, !dbg !14194
  %307 = load i8*, i8** %data, align 8, !dbg !14195
  %xferlen237 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 4, !dbg !14196
  %308 = load i32, i32* %xferlen237, align 8, !dbg !14196
  %conv238 = zext i32 %308 to i64, !dbg !14197
  store i8* %306, i8** %to.addr.i512, align 8
  store i8* %307, i8** %from.addr.i513, align 8
  store i64 %conv238, i64* %n.addr.i514, align 8
  %309 = load i8*, i8** %from.addr.i513, align 8, !dbg !14198
  %310 = load i64, i64* %n.addr.i514, align 8, !dbg !14198
  store i8* %309, i8** %addr.addr.i.i506, align 8
  store i64 %310, i64* %bytes.addr.i.i507, align 8
  store i8 1, i8* %is_source.addr.i.i508, align 1
  store i32 -1, i32* %sz.i.i509, align 4, !dbg !13461
  %311 = load i32, i32* %sz.i.i509, align 4, !dbg !14199
  %cmp.i.i515 = icmp sge i32 %311, 0, !dbg !14199
  br i1 %cmp.i.i515, label %land.rhs.i.i518, label %land.end.i.i522, !dbg !14199

land.rhs.i.i518:                                  ; preds = %if.then235
  %312 = load i32, i32* %sz.i.i509, align 4, !dbg !14199
  %conv.i.i516 = sext i32 %312 to i64, !dbg !14199
  %313 = load i64, i64* %bytes.addr.i.i507, align 8, !dbg !14199
  %cmp1.i.i517 = icmp ult i64 %conv.i.i516, %313, !dbg !14199
  br label %land.end.i.i522

land.end.i.i522:                                  ; preds = %land.rhs.i.i518, %if.then235
  %314 = phi i1 [ false, %if.then235 ], [ %cmp1.i.i517, %land.rhs.i.i518 ], !dbg !14200
  %lnot.i.i519 = xor i1 %314, true, !dbg !14199
  %lnot.ext.i.i520 = zext i1 %314 to i32, !dbg !14199
  %conv4.i.i521 = sext i32 %lnot.ext.i.i520 to i64, !dbg !14199
  br i1 %314, label %if.then.i.i523, label %if.end10.i.i538, !dbg !14201

if.then.i.i523:                                   ; preds = %land.end.i.i522
  %315 = load i64, i64* %bytes.addr.i.i507, align 8, !dbg !14202
  %316 = call i1 @llvm.is.constant.i64(i64 %315) #7, !dbg !14203
  br i1 %316, label %if.else.i.i526, label %if.then5.i.i524, !dbg !14204

if.then5.i.i524:                                  ; preds = %if.then.i.i523
  %317 = load i32, i32* %sz.i.i509, align 4, !dbg !14205
  %318 = load i64, i64* %bytes.addr.i.i507, align 8, !dbg !14206
  call void @copy_overflow(i32 %317, i64 %318) #13, !dbg !14207
  br label %if.end9.i.i530, !dbg !14207

if.else.i.i526:                                   ; preds = %if.then.i.i523
  %319 = load i8, i8* %is_source.addr.i.i508, align 1, !dbg !14208
  %tobool6.i.i525 = trunc i8 %319 to i1, !dbg !14208
  br i1 %tobool6.i.i525, label %if.then7.i.i527, label %if.else8.i.i528, !dbg !14209

if.then7.i.i527:                                  ; preds = %if.else.i.i526
  call void @__bad_copy_from() #13, !dbg !14210
  br label %if.end.i.i529, !dbg !14210

if.else8.i.i528:                                  ; preds = %if.else.i.i526
  call void @__bad_copy_to() #13, !dbg !14211
  br label %if.end.i.i529

if.end.i.i529:                                    ; preds = %if.else8.i.i528, %if.then7.i.i527
  br label %if.end9.i.i530

if.end9.i.i530:                                   ; preds = %if.end.i.i529, %if.then5.i.i524
  store i1 false, i1* %retval.i.i505, align 1, !dbg !14212
  br label %check_copy_size.exit.i552, !dbg !14212

if.end10.i.i538:                                  ; preds = %land.end.i.i522
  %320 = load i64, i64* %bytes.addr.i.i507, align 8, !dbg !13465
  %cmp11.i.i531 = icmp ugt i64 %320, 2147483647, !dbg !13465
  %lnot13.i.i532 = xor i1 %cmp11.i.i531, true, !dbg !13465
  %lnot.ext16.i.i533 = zext i1 %cmp11.i.i531 to i32, !dbg !13465
  store i32 %lnot.ext16.i.i533, i32* %__ret_warn_on.i.i510, align 4, !dbg !13465
  %321 = load i32, i32* %__ret_warn_on.i.i510, align 4, !dbg !14213
  %tobool17.i.i534 = icmp ne i32 %321, 0, !dbg !14213
  %lnot18.i.i535 = xor i1 %tobool17.i.i534, true, !dbg !14213
  %lnot.ext21.i.i536 = zext i1 %tobool17.i.i534 to i32, !dbg !14213
  %conv22.i.i537 = sext i32 %lnot.ext21.i.i536 to i64, !dbg !14213
  br i1 %tobool17.i.i534, label %if.then24.i.i539, label %if.end31.i.i545, !dbg !13465

if.then24.i.i539:                                 ; preds = %if.end10.i.i538
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.162, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !14214, !srcloc !13679
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !14215, !srcloc !13682
  br label %if.end31.i.i545, !dbg !14216

if.end31.i.i545:                                  ; preds = %if.then24.i.i539, %if.end10.i.i538
  %322 = load i32, i32* %__ret_warn_on.i.i510, align 4, !dbg !13465
  %tobool32.i.i540 = icmp ne i32 %322, 0, !dbg !13465
  %lnot33.i.i541 = xor i1 %tobool32.i.i540, true, !dbg !13465
  %lnot.ext36.i.i542 = zext i1 %tobool32.i.i540 to i32, !dbg !13465
  %conv37.i.i543 = sext i32 %lnot.ext36.i.i542 to i64, !dbg !13465
  store i64 %conv37.i.i543, i64* %tmp.i.i511, align 8, !dbg !14213
  %323 = load i64, i64* %tmp.i.i511, align 8, !dbg !13465
  %tobool38.i.i544 = icmp ne i64 %323, 0, !dbg !14217
  br i1 %tobool38.i.i544, label %if.then39.i.i546, label %if.end40.i.i548, !dbg !14218

if.then39.i.i546:                                 ; preds = %if.end31.i.i545
  store i1 false, i1* %retval.i.i505, align 1, !dbg !14219
  br label %check_copy_size.exit.i552, !dbg !14219

if.end40.i.i548:                                  ; preds = %if.end31.i.i545
  %324 = load i8*, i8** %addr.addr.i.i506, align 8, !dbg !14220
  %325 = load i64, i64* %bytes.addr.i.i507, align 8, !dbg !14221
  %326 = load i8, i8* %is_source.addr.i.i508, align 1, !dbg !14222
  %tobool41.i.i547 = trunc i8 %326 to i1, !dbg !14222
  call void @check_object_size(i8* %324, i64 %325, i1 zeroext %tobool41.i.i547) #13, !dbg !14223
  store i1 true, i1* %retval.i.i505, align 1, !dbg !14224
  br label %check_copy_size.exit.i552, !dbg !14224

check_copy_size.exit.i552:                        ; preds = %if.end40.i.i548, %if.then39.i.i546, %if.end9.i.i530
  %327 = load i1, i1* %retval.i.i505, align 1, !dbg !14225
  %lnot.i549 = xor i1 %327, true, !dbg !14198
  %lnot.ext.i550 = zext i1 %327 to i32, !dbg !14198
  %conv.i551 = sext i32 %lnot.ext.i550 to i64, !dbg !14198
  br i1 %327, label %if.then.i554, label %copy_to_user.exit555, !dbg !14226

if.then.i554:                                     ; preds = %check_copy_size.exit.i552
  %328 = load i8*, i8** %to.addr.i512, align 8, !dbg !14227
  %329 = load i8*, i8** %from.addr.i513, align 8, !dbg !14228
  %330 = load i64, i64* %n.addr.i514, align 8, !dbg !14229
  %call2.i553 = call i64 @_copy_to_user(i8* %328, i8* %329, i64 %330) #13, !dbg !14230
  store i64 %call2.i553, i64* %n.addr.i514, align 8, !dbg !14231
  br label %copy_to_user.exit555, !dbg !14232

copy_to_user.exit555:                             ; preds = %check_copy_size.exit.i552, %if.then.i554
  %331 = load i64, i64* %n.addr.i514, align 8, !dbg !14233
  %tobool240 = icmp ne i64 %331, 0, !dbg !14234
  br i1 %tobool240, label %if.then241, label %if.end242, !dbg !14235

if.then241:                                       ; preds = %copy_to_user.exit555
  store i32 -14, i32* %rval, align 4, !dbg !14236
  br label %if.end242, !dbg !14238

if.end242:                                        ; preds = %if.then241, %copy_to_user.exit555
  br label %if.end243, !dbg !14239

if.end243:                                        ; preds = %if.end242, %land.lhs.true231, %if.end228
  %xferlen244 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 4, !dbg !14240
  %332 = load i32, i32* %xferlen244, align 8, !dbg !14240
  %tobool245 = icmp ne i32 %332, 0, !dbg !14242
  br i1 %tobool245, label %if.then246, label %if.end250, !dbg !14243

if.then246:                                       ; preds = %if.end243
  %333 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14244
  %dev247 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %333, i32 0, i32 41, !dbg !14246
  %xferlen248 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %uioc, i32 0, i32 4, !dbg !14247
  %334 = load i32, i32* %xferlen248, align 8, !dbg !14247
  %conv249 = zext i32 %334 to i64, !dbg !14248
  %335 = load i8*, i8** %data, align 8, !dbg !14249
  %336 = load i64, i64* %data_dma_hndl, align 8, !dbg !14250
  call void @dma_free_coherent(%struct.device* %dev247, i64 %conv249, i8* %335, i64 %336) #11, !dbg !14251
  br label %if.end250, !dbg !14252

if.end250:                                        ; preds = %if.then246, %if.end243
  %337 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14253
  call void @free_local_pdev(%struct.pci_dev* %337) #11, !dbg !14254
  %338 = load i32, i32* %rval, align 4, !dbg !14255
  store i32 %338, i32* %retval, align 4, !dbg !14256
  br label %return, !dbg !14256

sw.default:                                       ; preds = %if.end4
  store i32 -22, i32* %retval, align 4, !dbg !14257
  br label %return, !dbg !14257

sw.epilog:                                        ; preds = %if.end34, %if.end8
  store i32 0, i32* %retval, align 4, !dbg !14258
  br label %return, !dbg !14258

return:                                           ; preds = %sw.epilog, %sw.default, %if.end250, %if.end227, %if.then206, %if.then187, %if.end177, %if.then122, %if.then111, %if.then103, %if.then90, %if.then83, %if.end69, %if.then56, %if.then40, %if.then33, %if.then27, %if.end22, %if.then21, %if.then7, %if.then3, %if.then
  %339 = load i32, i32* %retval, align 4, !dbg !14259
  ret i32 %339, !dbg !14259
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_m_to_n(i8* %arg, %struct.nitioctl_t* %uioc) #0 !dbg !14260 {
entry:
  %retval.i.i81 = alloca i1, align 1
  %addr.addr.i.i82 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i82, metadata !13438, metadata !DIExpression()), !dbg !14264
  %bytes.addr.i.i83 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i83, metadata !13456, metadata !DIExpression()), !dbg !14268
  %is_source.addr.i.i84 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i84, metadata !13458, metadata !DIExpression()), !dbg !14269
  %sz.i.i85 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i85, metadata !13460, metadata !DIExpression()), !dbg !14270
  %__ret_warn_on.i.i86 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i86, metadata !13462, metadata !DIExpression()), !dbg !14271
  %tmp.i.i87 = alloca i64, align 8
  %to.addr.i88 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i88, metadata !13484, metadata !DIExpression()), !dbg !14272
  %from.addr.i89 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i89, metadata !13486, metadata !DIExpression()), !dbg !14273
  %n.addr.i90 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i90, metadata !13488, metadata !DIExpression()), !dbg !14274
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !13438, metadata !DIExpression()), !dbg !14275
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !13456, metadata !DIExpression()), !dbg !14279
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !13458, metadata !DIExpression()), !dbg !14280
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !13460, metadata !DIExpression()), !dbg !14281
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !13462, metadata !DIExpression()), !dbg !14282
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !13484, metadata !DIExpression()), !dbg !14283
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !13486, metadata !DIExpression()), !dbg !14284
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !13488, metadata !DIExpression()), !dbg !14285
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %uioc.addr = alloca %struct.nitioctl_t*, align 8
  %uioc_mimd = alloca %struct.uioctl_t, align 1
  %signature = alloca [8 x i8], align 1
  %opcode = alloca i8, align 1
  %subopcode = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14286, metadata !DIExpression()), !dbg !14287
  store %struct.nitioctl_t* %uioc, %struct.nitioctl_t** %uioc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.nitioctl_t** %uioc.addr, metadata !14288, metadata !DIExpression()), !dbg !14289
  call void @llvm.dbg.declare(metadata %struct.uioctl_t* %uioc_mimd, metadata !14290, metadata !DIExpression()), !dbg !14310
  call void @llvm.dbg.declare(metadata [8 x i8]* %signature, metadata !14311, metadata !DIExpression()), !dbg !14312
  %0 = bitcast [8 x i8]* %signature to i8*, !dbg !14312
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 8, i1 false), !dbg !14312
  call void @llvm.dbg.declare(metadata i8* %opcode, metadata !14313, metadata !DIExpression()), !dbg !14314
  call void @llvm.dbg.declare(metadata i8* %subopcode, metadata !14315, metadata !DIExpression()), !dbg !14316
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %signature, i64 0, i64 0, !dbg !14317
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14318
  store i8* %arraydecay, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 7, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !14319
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !14319
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !14281
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !14320
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !14320
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !14320

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !14320
  %conv.i.i = sext i32 %5 to i64, !dbg !14320
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14320
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !14320
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !14321
  %lnot.i.i = xor i1 %7, true, !dbg !14320
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !14320
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !14320
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !14322

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14323
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #7, !dbg !14324
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !14325

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !14326
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14327
  call void @copy_overflow(i32 %10, i64 %11) #13, !dbg !14328
  br label %if.end9.i.i, !dbg !14328

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !14329
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !14329
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !14330

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !14331
  br label %if.end.i.i, !dbg !14331

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !14332
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !14333
  br label %check_copy_size.exit.i, !dbg !14333

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14282
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !14282
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !14282
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !14282
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !14282
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !14334
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !14334
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !14334
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !14334
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !14334
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !14282

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.162, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !14335, !srcloc !13679
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !14336, !srcloc !13682
  br label %if.end31.i.i, !dbg !14337

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !14282
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !14282
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !14282
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !14282
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !14282
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !14334
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !14282
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !14338
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !14339

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !14340
  br label %check_copy_size.exit.i, !dbg !14340

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !14341
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14342
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !14343
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !14343
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #13, !dbg !14344
  store i1 true, i1* %retval.i.i, align 1, !dbg !14345
  br label %check_copy_size.exit.i, !dbg !14345

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !14346
  %lnot.i = xor i1 %20, true, !dbg !14319
  %lnot.ext.i = zext i1 %20 to i32, !dbg !14319
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !14319
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !14347

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !14348
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !14349
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !14350
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #13, !dbg !14351
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !14352
  br label %copy_from_user.exit, !dbg !14353

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !14354
  %tobool = icmp ne i64 %24, 0, !dbg !14355
  br i1 %tobool, label %if.then, label %if.end, !dbg !14356

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !14357
  br label %return, !dbg !14357

if.end:                                           ; preds = %copy_from_user.exit
  %arraydecay1 = getelementptr inbounds [8 x i8], [8 x i8]* %signature, i64 0, i64 0, !dbg !14358
  %call2 = call i32 @memcmp(i8* %arraydecay1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i64 0, i64 0), i64 7) #11, !dbg !14360
  %cmp = icmp eq i32 %call2, 0, !dbg !14361
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !14362

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !14363
  br label %return, !dbg !14363

if.end4:                                          ; preds = %if.end
  %25 = bitcast %struct.uioctl_t* %uioc_mimd to i8*, !dbg !14365
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !14366
  store i8* %25, i8** %to.addr.i88, align 8
  store i8* %26, i8** %from.addr.i89, align 8
  store i64 110, i64* %n.addr.i90, align 8
  %27 = load i8*, i8** %to.addr.i88, align 8, !dbg !14367
  %28 = load i64, i64* %n.addr.i90, align 8, !dbg !14367
  store i8* %27, i8** %addr.addr.i.i82, align 8
  store i64 %28, i64* %bytes.addr.i.i83, align 8
  store i8 0, i8* %is_source.addr.i.i84, align 1
  store i32 -1, i32* %sz.i.i85, align 4, !dbg !14270
  %29 = load i32, i32* %sz.i.i85, align 4, !dbg !14368
  %cmp.i.i91 = icmp sge i32 %29, 0, !dbg !14368
  br i1 %cmp.i.i91, label %land.rhs.i.i94, label %land.end.i.i98, !dbg !14368

land.rhs.i.i94:                                   ; preds = %if.end4
  %30 = load i32, i32* %sz.i.i85, align 4, !dbg !14368
  %conv.i.i92 = sext i32 %30 to i64, !dbg !14368
  %31 = load i64, i64* %bytes.addr.i.i83, align 8, !dbg !14368
  %cmp1.i.i93 = icmp ult i64 %conv.i.i92, %31, !dbg !14368
  br label %land.end.i.i98

land.end.i.i98:                                   ; preds = %land.rhs.i.i94, %if.end4
  %32 = phi i1 [ false, %if.end4 ], [ %cmp1.i.i93, %land.rhs.i.i94 ], !dbg !14369
  %lnot.i.i95 = xor i1 %32, true, !dbg !14368
  %lnot.ext.i.i96 = zext i1 %32 to i32, !dbg !14368
  %conv4.i.i97 = sext i32 %lnot.ext.i.i96 to i64, !dbg !14368
  br i1 %32, label %if.then.i.i99, label %if.end10.i.i114, !dbg !14370

if.then.i.i99:                                    ; preds = %land.end.i.i98
  %33 = load i64, i64* %bytes.addr.i.i83, align 8, !dbg !14371
  %34 = call i1 @llvm.is.constant.i64(i64 %33) #7, !dbg !14372
  br i1 %34, label %if.else.i.i102, label %if.then5.i.i100, !dbg !14373

if.then5.i.i100:                                  ; preds = %if.then.i.i99
  %35 = load i32, i32* %sz.i.i85, align 4, !dbg !14374
  %36 = load i64, i64* %bytes.addr.i.i83, align 8, !dbg !14375
  call void @copy_overflow(i32 %35, i64 %36) #13, !dbg !14376
  br label %if.end9.i.i106, !dbg !14376

if.else.i.i102:                                   ; preds = %if.then.i.i99
  %37 = load i8, i8* %is_source.addr.i.i84, align 1, !dbg !14377
  %tobool6.i.i101 = trunc i8 %37 to i1, !dbg !14377
  br i1 %tobool6.i.i101, label %if.then7.i.i103, label %if.else8.i.i104, !dbg !14378

if.then7.i.i103:                                  ; preds = %if.else.i.i102
  call void @__bad_copy_from() #13, !dbg !14379
  br label %if.end.i.i105, !dbg !14379

if.else8.i.i104:                                  ; preds = %if.else.i.i102
  call void @__bad_copy_to() #13, !dbg !14380
  br label %if.end.i.i105

if.end.i.i105:                                    ; preds = %if.else8.i.i104, %if.then7.i.i103
  br label %if.end9.i.i106

if.end9.i.i106:                                   ; preds = %if.end.i.i105, %if.then5.i.i100
  store i1 false, i1* %retval.i.i81, align 1, !dbg !14381
  br label %check_copy_size.exit.i128, !dbg !14381

if.end10.i.i114:                                  ; preds = %land.end.i.i98
  %38 = load i64, i64* %bytes.addr.i.i83, align 8, !dbg !14271
  %cmp11.i.i107 = icmp ugt i64 %38, 2147483647, !dbg !14271
  %lnot13.i.i108 = xor i1 %cmp11.i.i107, true, !dbg !14271
  %lnot.ext16.i.i109 = zext i1 %cmp11.i.i107 to i32, !dbg !14271
  store i32 %lnot.ext16.i.i109, i32* %__ret_warn_on.i.i86, align 4, !dbg !14271
  %39 = load i32, i32* %__ret_warn_on.i.i86, align 4, !dbg !14382
  %tobool17.i.i110 = icmp ne i32 %39, 0, !dbg !14382
  %lnot18.i.i111 = xor i1 %tobool17.i.i110, true, !dbg !14382
  %lnot.ext21.i.i112 = zext i1 %tobool17.i.i110 to i32, !dbg !14382
  %conv22.i.i113 = sext i32 %lnot.ext21.i.i112 to i64, !dbg !14382
  br i1 %tobool17.i.i110, label %if.then24.i.i115, label %if.end31.i.i121, !dbg !14271

if.then24.i.i115:                                 ; preds = %if.end10.i.i114
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.162, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !14383, !srcloc !13679
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !14384, !srcloc !13682
  br label %if.end31.i.i121, !dbg !14385

if.end31.i.i121:                                  ; preds = %if.then24.i.i115, %if.end10.i.i114
  %40 = load i32, i32* %__ret_warn_on.i.i86, align 4, !dbg !14271
  %tobool32.i.i116 = icmp ne i32 %40, 0, !dbg !14271
  %lnot33.i.i117 = xor i1 %tobool32.i.i116, true, !dbg !14271
  %lnot.ext36.i.i118 = zext i1 %tobool32.i.i116 to i32, !dbg !14271
  %conv37.i.i119 = sext i32 %lnot.ext36.i.i118 to i64, !dbg !14271
  store i64 %conv37.i.i119, i64* %tmp.i.i87, align 8, !dbg !14382
  %41 = load i64, i64* %tmp.i.i87, align 8, !dbg !14271
  %tobool38.i.i120 = icmp ne i64 %41, 0, !dbg !14386
  br i1 %tobool38.i.i120, label %if.then39.i.i122, label %if.end40.i.i124, !dbg !14387

if.then39.i.i122:                                 ; preds = %if.end31.i.i121
  store i1 false, i1* %retval.i.i81, align 1, !dbg !14388
  br label %check_copy_size.exit.i128, !dbg !14388

if.end40.i.i124:                                  ; preds = %if.end31.i.i121
  %42 = load i8*, i8** %addr.addr.i.i82, align 8, !dbg !14389
  %43 = load i64, i64* %bytes.addr.i.i83, align 8, !dbg !14390
  %44 = load i8, i8* %is_source.addr.i.i84, align 1, !dbg !14391
  %tobool41.i.i123 = trunc i8 %44 to i1, !dbg !14391
  call void @check_object_size(i8* %42, i64 %43, i1 zeroext %tobool41.i.i123) #13, !dbg !14392
  store i1 true, i1* %retval.i.i81, align 1, !dbg !14393
  br label %check_copy_size.exit.i128, !dbg !14393

check_copy_size.exit.i128:                        ; preds = %if.end40.i.i124, %if.then39.i.i122, %if.end9.i.i106
  %45 = load i1, i1* %retval.i.i81, align 1, !dbg !14394
  %lnot.i125 = xor i1 %45, true, !dbg !14367
  %lnot.ext.i126 = zext i1 %45 to i32, !dbg !14367
  %conv.i127 = sext i32 %lnot.ext.i126 to i64, !dbg !14367
  br i1 %45, label %if.then.i130, label %copy_from_user.exit131, !dbg !14395

if.then.i130:                                     ; preds = %check_copy_size.exit.i128
  %46 = load i8*, i8** %to.addr.i88, align 8, !dbg !14396
  %47 = load i8*, i8** %from.addr.i89, align 8, !dbg !14397
  %48 = load i64, i64* %n.addr.i90, align 8, !dbg !14398
  %call2.i129 = call i64 @_copy_from_user(i8* %46, i8* %47, i64 %48) #13, !dbg !14399
  store i64 %call2.i129, i64* %n.addr.i90, align 8, !dbg !14400
  br label %copy_from_user.exit131, !dbg !14401

copy_from_user.exit131:                           ; preds = %check_copy_size.exit.i128, %if.then.i130
  %49 = load i64, i64* %n.addr.i90, align 8, !dbg !14402
  %tobool6 = icmp ne i64 %49, 0, !dbg !14403
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !14404

if.then7:                                         ; preds = %copy_from_user.exit131
  store i32 -14, i32* %retval, align 4, !dbg !14405
  br label %return, !dbg !14405

if.end8:                                          ; preds = %copy_from_user.exit131
  %ui = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 2, !dbg !14406
  %fcs = bitcast %union.anon.79* %ui to %struct.anon.80*, !dbg !14407
  %opcode9 = getelementptr inbounds %struct.anon.80, %struct.anon.80* %fcs, i32 0, i32 0, !dbg !14408
  %50 = load i8, i8* %opcode9, align 1, !dbg !14408
  store i8 %50, i8* %opcode, align 1, !dbg !14409
  %ui10 = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 2, !dbg !14410
  %fcs11 = bitcast %union.anon.79* %ui10 to %struct.anon.80*, !dbg !14411
  %subopcode12 = getelementptr inbounds %struct.anon.80, %struct.anon.80* %fcs11, i32 0, i32 1, !dbg !14412
  %51 = load i8, i8* %subopcode12, align 1, !dbg !14412
  store i8 %51, i8* %subopcode, align 1, !dbg !14413
  %52 = load i8, i8* %opcode, align 1, !dbg !14414
  %conv = zext i8 %52 to i32, !dbg !14414
  switch i32 %conv, label %sw.default79 [
    i32 130, label %sw.bb
    i32 129, label %sw.bb30
    i32 128, label %sw.bb49
  ], !dbg !14415

sw.bb:                                            ; preds = %if.end8
  %53 = load i8, i8* %subopcode, align 1, !dbg !14416
  %conv13 = zext i8 %53 to i32, !dbg !14416
  switch i32 %conv13, label %sw.default [
    i32 101, label %sw.bb14
    i32 109, label %sw.bb16
    i32 103, label %sw.bb21
  ], !dbg !14418

sw.bb14:                                          ; preds = %sw.bb
  %54 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14419
  %opcode15 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %54, i32 0, i32 1, !dbg !14421
  store i32 65536, i32* %opcode15, align 8, !dbg !14422
  %data = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 5, !dbg !14423
  %55 = load i8*, i8** %data, align 1, !dbg !14423
  %56 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14424
  %__ua = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %56, i32 0, i32 3, !dbg !14425
  %__uaddr = bitcast %union.anon.78* %__ua to i8**, !dbg !14425
  store i8* %55, i8** %__uaddr, align 8, !dbg !14426
  br label %sw.epilog, !dbg !14427

sw.bb16:                                          ; preds = %sw.bb
  %57 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14428
  %opcode17 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %57, i32 0, i32 1, !dbg !14429
  store i32 131072, i32* %opcode17, align 8, !dbg !14430
  %data18 = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 5, !dbg !14431
  %58 = load i8*, i8** %data18, align 1, !dbg !14431
  %59 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14432
  %__ua19 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %59, i32 0, i32 3, !dbg !14433
  %__uaddr20 = bitcast %union.anon.78* %__ua19 to i8**, !dbg !14433
  store i8* %58, i8** %__uaddr20, align 8, !dbg !14434
  br label %sw.epilog, !dbg !14435

sw.bb21:                                          ; preds = %sw.bb
  %60 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14436
  %opcode22 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %60, i32 0, i32 1, !dbg !14437
  store i32 196608, i32* %opcode22, align 8, !dbg !14438
  %ui23 = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 2, !dbg !14439
  %fcs24 = bitcast %union.anon.79* %ui23 to %struct.anon.80*, !dbg !14440
  %adapno = getelementptr inbounds %struct.anon.80, %struct.anon.80* %fcs24, i32 0, i32 2, !dbg !14441
  %61 = load i16, i16* %adapno, align 1, !dbg !14441
  %conv25 = zext i16 %61 to i32, !dbg !14442
  %62 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14443
  %adapno26 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %62, i32 0, i32 2, !dbg !14444
  store i32 %conv25, i32* %adapno26, align 4, !dbg !14445
  %data27 = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 5, !dbg !14446
  %63 = load i8*, i8** %data27, align 1, !dbg !14446
  %64 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14447
  %__ua28 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %64, i32 0, i32 3, !dbg !14448
  %__uaddr29 = bitcast %union.anon.78* %__ua28 to i8**, !dbg !14448
  store i8* %63, i8** %__uaddr29, align 8, !dbg !14449
  br label %sw.epilog, !dbg !14450

sw.default:                                       ; preds = %sw.bb
  store i32 -22, i32* %retval, align 4, !dbg !14451
  br label %return, !dbg !14451

sw.epilog:                                        ; preds = %sw.bb21, %sw.bb16, %sw.bb14
  br label %sw.epilog80, !dbg !14452

sw.bb30:                                          ; preds = %if.end8
  %65 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14453
  %opcode31 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %65, i32 0, i32 1, !dbg !14454
  store i32 0, i32* %opcode31, align 8, !dbg !14455
  %ui32 = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 2, !dbg !14456
  %fcs33 = bitcast %union.anon.79* %ui32 to %struct.anon.80*, !dbg !14457
  %adapno34 = getelementptr inbounds %struct.anon.80, %struct.anon.80* %fcs33, i32 0, i32 2, !dbg !14458
  %66 = load i16, i16* %adapno34, align 1, !dbg !14458
  %conv35 = zext i16 %66 to i32, !dbg !14459
  %67 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14460
  %adapno36 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %67, i32 0, i32 2, !dbg !14461
  store i32 %conv35, i32* %adapno36, align 4, !dbg !14462
  %68 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14463
  %__ua37 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %68, i32 0, i32 3, !dbg !14464
  %__raw_mbox = bitcast %union.anon.78* %__ua37 to [18 x i8]*, !dbg !14464
  %arraydecay38 = getelementptr inbounds [18 x i8], [18 x i8]* %__raw_mbox, i64 0, i64 0, !dbg !14465
  %mbox = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 3, !dbg !14466
  %arraydecay39 = getelementptr inbounds [18 x i8], [18 x i8]* %mbox, i64 0, i64 0, !dbg !14465
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay38, i8* align 1 %arraydecay39, i64 18, i1 false), !dbg !14465
  %ui40 = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 2, !dbg !14467
  %fcs41 = bitcast %union.anon.79* %ui40 to %struct.anon.80*, !dbg !14468
  %length = getelementptr inbounds %struct.anon.80, %struct.anon.80* %fcs41, i32 0, i32 4, !dbg !14469
  %69 = load i32, i32* %length, align 1, !dbg !14469
  %70 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14470
  %xferlen = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %70, i32 0, i32 4, !dbg !14471
  store i32 %69, i32* %xferlen, align 8, !dbg !14472
  %outlen = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 1, !dbg !14473
  %71 = load i32, i32* %outlen, align 1, !dbg !14473
  %tobool42 = icmp ne i32 %71, 0, !dbg !14475
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !14476

if.then43:                                        ; preds = %sw.bb30
  %72 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14477
  %flags = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %72, i32 0, i32 5, !dbg !14478
  store i32 1, i32* %flags, align 4, !dbg !14479
  br label %if.end44, !dbg !14477

if.end44:                                         ; preds = %if.then43, %sw.bb30
  %inlen = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 0, !dbg !14480
  %73 = load i32, i32* %inlen, align 1, !dbg !14480
  %tobool45 = icmp ne i32 %73, 0, !dbg !14482
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !14483

if.then46:                                        ; preds = %if.end44
  %74 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14484
  %flags47 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %74, i32 0, i32 5, !dbg !14485
  %75 = load i32, i32* %flags47, align 4, !dbg !14486
  %or = or i32 %75, 2, !dbg !14486
  store i32 %or, i32* %flags47, align 4, !dbg !14486
  br label %if.end48, !dbg !14484

if.end48:                                         ; preds = %if.then46, %if.end44
  br label %sw.epilog80, !dbg !14487

sw.bb49:                                          ; preds = %if.end8
  %76 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14488
  %opcode50 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %76, i32 0, i32 1, !dbg !14489
  store i32 0, i32* %opcode50, align 8, !dbg !14490
  %ui51 = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 2, !dbg !14491
  %fcs52 = bitcast %union.anon.79* %ui51 to %struct.anon.80*, !dbg !14492
  %adapno53 = getelementptr inbounds %struct.anon.80, %struct.anon.80* %fcs52, i32 0, i32 2, !dbg !14493
  %77 = load i16, i16* %adapno53, align 1, !dbg !14493
  %conv54 = zext i16 %77 to i32, !dbg !14494
  %78 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14495
  %adapno55 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %78, i32 0, i32 2, !dbg !14496
  store i32 %conv54, i32* %adapno55, align 4, !dbg !14497
  %79 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14498
  %__ua56 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %79, i32 0, i32 3, !dbg !14499
  %__raw_mbox57 = bitcast %union.anon.78* %__ua56 to [18 x i8]*, !dbg !14499
  %arraydecay58 = getelementptr inbounds [18 x i8], [18 x i8]* %__raw_mbox57, i64 0, i64 0, !dbg !14500
  %mbox59 = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 3, !dbg !14501
  %arraydecay60 = getelementptr inbounds [18 x i8], [18 x i8]* %mbox59, i64 0, i64 0, !dbg !14500
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay58, i8* align 1 %arraydecay60, i64 18, i1 false), !dbg !14500
  %outlen61 = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 1, !dbg !14502
  %80 = load i32, i32* %outlen61, align 1, !dbg !14502
  %inlen62 = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 0, !dbg !14503
  %81 = load i32, i32* %inlen62, align 1, !dbg !14503
  %cmp63 = icmp ugt i32 %80, %81, !dbg !14504
  br i1 %cmp63, label %cond.true, label %cond.false, !dbg !14505

cond.true:                                        ; preds = %sw.bb49
  %outlen65 = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 1, !dbg !14506
  %82 = load i32, i32* %outlen65, align 1, !dbg !14506
  br label %cond.end, !dbg !14505

cond.false:                                       ; preds = %sw.bb49
  %inlen66 = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 0, !dbg !14507
  %83 = load i32, i32* %inlen66, align 1, !dbg !14507
  br label %cond.end, !dbg !14505

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %82, %cond.true ], [ %83, %cond.false ], !dbg !14505
  %84 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14508
  %xferlen67 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %84, i32 0, i32 4, !dbg !14509
  store i32 %cond, i32* %xferlen67, align 8, !dbg !14510
  %outlen68 = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 1, !dbg !14511
  %85 = load i32, i32* %outlen68, align 1, !dbg !14511
  %tobool69 = icmp ne i32 %85, 0, !dbg !14513
  br i1 %tobool69, label %if.then70, label %if.end72, !dbg !14514

if.then70:                                        ; preds = %cond.end
  %86 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14515
  %flags71 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %86, i32 0, i32 5, !dbg !14516
  store i32 1, i32* %flags71, align 4, !dbg !14517
  br label %if.end72, !dbg !14515

if.end72:                                         ; preds = %if.then70, %cond.end
  %inlen73 = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %uioc_mimd, i32 0, i32 0, !dbg !14518
  %87 = load i32, i32* %inlen73, align 1, !dbg !14518
  %tobool74 = icmp ne i32 %87, 0, !dbg !14520
  br i1 %tobool74, label %if.then75, label %if.end78, !dbg !14521

if.then75:                                        ; preds = %if.end72
  %88 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uioc.addr, align 8, !dbg !14522
  %flags76 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %88, i32 0, i32 5, !dbg !14523
  %89 = load i32, i32* %flags76, align 4, !dbg !14524
  %or77 = or i32 %89, 2, !dbg !14524
  store i32 %or77, i32* %flags76, align 4, !dbg !14524
  br label %if.end78, !dbg !14522

if.end78:                                         ; preds = %if.then75, %if.end72
  br label %sw.epilog80, !dbg !14525

sw.default79:                                     ; preds = %if.end8
  store i32 -22, i32* %retval, align 4, !dbg !14526
  br label %return, !dbg !14526

sw.epilog80:                                      ; preds = %if.end78, %if.end48, %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !14527
  br label %return, !dbg !14527

return:                                           ; preds = %sw.epilog80, %sw.default79, %sw.default, %if.then7, %if.then3, %if.then
  %90 = load i32, i32* %retval, align 4, !dbg !14528
  ret i32 %90, !dbg !14528
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @might_fault() #0 !dbg !14529 {
entry:
  ret void, !dbg !14530
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_del_logdrv(%struct.adapter_t* %adapter, i32 %logdrv) #0 !dbg !14531 {
entry:
  %lock.addr.i60 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i60, metadata !7447, metadata !DIExpression()), !dbg !14534
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7453, metadata !DIExpression()), !dbg !14536
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %v.addr.i1.i51 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i51, metadata !6265, metadata !DIExpression()), !dbg !14537
  %i.addr.i.i52 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i52, metadata !6276, metadata !DIExpression()), !dbg !14540
  %v.addr.i.i53 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i53, metadata !6278, metadata !DIExpression()), !dbg !14541
  %size.addr.i.i54 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i54, metadata !6288, metadata !DIExpression()), !dbg !14543
  %v.addr.i55 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i55, metadata !6290, metadata !DIExpression()), !dbg !14544
  %i.addr.i56 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i56, metadata !6292, metadata !DIExpression()), !dbg !14545
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6303, metadata !DIExpression()), !dbg !14546
  %v.addr.i1.i44 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i44, metadata !7407, metadata !DIExpression()), !dbg !14553
  %v.addr.i.i45 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i45, metadata !7419, metadata !DIExpression()), !dbg !14556
  %size.addr.i.i46 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i46, metadata !7423, metadata !DIExpression()), !dbg !14558
  %v.addr.i47 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i47, metadata !7425, metadata !DIExpression()), !dbg !14559
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6265, metadata !DIExpression()), !dbg !14560
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !6276, metadata !DIExpression()), !dbg !14563
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6278, metadata !DIExpression()), !dbg !14564
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6288, metadata !DIExpression()), !dbg !14566
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6290, metadata !DIExpression()), !dbg !14567
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !6292, metadata !DIExpression()), !dbg !14568
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %logdrv.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %scb = alloca %struct.scb_t*, align 8
  %rval = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %pos = alloca %struct.list_head*, align 8
  %__mptr = alloca i8*, align 8
  %tmp30 = alloca %struct.scb_t*, align 8
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !14569, metadata !DIExpression()), !dbg !14570
  store i32 %logdrv, i32* %logdrv.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %logdrv.addr, metadata !14571, metadata !DIExpression()), !dbg !14572
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14573, metadata !DIExpression()), !dbg !14574
  call void @llvm.dbg.declare(metadata %struct.scb_t** %scb, metadata !14575, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.declare(metadata i32* %rval, metadata !14577, metadata !DIExpression()), !dbg !14578
  %0 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !14579
  %quiescent = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %0, i32 0, i32 33, !dbg !14580
  store %struct.atomic_t* %quiescent, %struct.atomic_t** %v.addr.i, align 8
  store i32 1, i32* %i.addr.i, align 4
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14581
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !14581
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14582
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !14583
  %conv.i.i = trunc i64 %4 to i32, !dbg !14583
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #13, !dbg !14584
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14585
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !14585
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !14585
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14586
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !14587
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %8, i32* %i.addr.i.i, align 4
  %9 = load i32, i32* %i.addr.i.i, align 4, !dbg !14588
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !14588
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %10, i32 0, i32 0, !dbg !14588
  store volatile i32 %9, i32* %counter.i.i, align 4, !dbg !14588
  br label %while.cond, !dbg !14589

while.cond:                                       ; preds = %while.body, %entry
  %11 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !14590
  %pend_cmds = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %11, i32 0, i32 19, !dbg !14591
  store %struct.atomic_t* %pend_cmds, %struct.atomic_t** %v.addr.i47, align 8
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i47, align 8, !dbg !14592
  %13 = bitcast %struct.atomic_t* %12 to i8*, !dbg !14592
  store i8* %13, i8** %v.addr.i.i45, align 8
  store i64 4, i64* %size.addr.i.i46, align 8
  %14 = load i8*, i8** %v.addr.i.i45, align 8, !dbg !14593
  %15 = load i64, i64* %size.addr.i.i46, align 8, !dbg !14594
  %conv.i.i48 = trunc i64 %15 to i32, !dbg !14594
  %call.i.i49 = call zeroext i1 @kasan_check_read(i8* %14, i32 %conv.i.i48) #13, !dbg !14595
  %16 = load i8*, i8** %v.addr.i.i45, align 8, !dbg !14596
  %17 = load i64, i64* %size.addr.i.i46, align 8, !dbg !14596
  call void @kcsan_check_access(i8* %16, i64 %17, i32 4) #13, !dbg !14596
  %18 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i47, align 8, !dbg !14597
  store %struct.atomic_t* %18, %struct.atomic_t** %v.addr.i1.i44, align 8
  %19 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i44, align 8, !dbg !14598
  %counter.i.i50 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %19, i32 0, i32 0, !dbg !14598
  %20 = load volatile i32, i32* %counter.i.i50, align 4, !dbg !14598
  %cmp = icmp sgt i32 %20, 0, !dbg !14599
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !14600

lor.rhs:                                          ; preds = %while.cond
  %21 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !14601
  %pending_list = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %21, i32 0, i32 11, !dbg !14602
  %call1 = call i32 @list_empty(%struct.list_head* %pending_list) #11, !dbg !14603
  %tobool = icmp ne i32 %call1, 0, !dbg !14604
  %lnot = xor i1 %tobool, true, !dbg !14604
  br label %lor.end, !dbg !14600

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %22 = phi i1 [ true, %while.cond ], [ %lnot, %lor.rhs ]
  br i1 %22, label %while.body, label %while.end, !dbg !14589

while.body:                                       ; preds = %lor.end
  call void @msleep(i32 1000) #11, !dbg !14605
  br label %while.cond, !dbg !14589, !llvm.loop !14606

while.end:                                        ; preds = %lor.end
  %23 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !14608
  %24 = load i32, i32* %logdrv.addr, align 4, !dbg !14609
  %call2 = call i32 @mega_do_del_logdrv(%struct.adapter_t* %23, i32 %24) #11, !dbg !14610
  store i32 %call2, i32* %rval, align 4, !dbg !14611
  br label %do.body, !dbg !14612

do.body:                                          ; preds = %while.end
  br label %do.body3, !dbg !14613

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14614, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14617, metadata !DIExpression()), !dbg !14616
  %cmp4 = icmp eq i64* %__dummy, %__dummy2, !dbg !14616
  %conv = zext i1 %cmp4 to i32, !dbg !14616
  store i32 1, i32* %tmp, align 4, !dbg !14616
  %25 = load i32, i32* %tmp, align 4, !dbg !14616
  br label %do.body5, !dbg !14618

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !14619

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !14620

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !14622, metadata !DIExpression()), !dbg !14625
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !14626, metadata !DIExpression()), !dbg !14625
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !14625
  %conv11 = zext i1 %cmp10 to i32, !dbg !14625
  store i32 1, i32* %tmp12, align 4, !dbg !14625
  %26 = load i32, i32* %tmp12, align 4, !dbg !14625
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !14627
  store i64 %call13, i64* %flags, align 8, !dbg !14627
  br label %do.end, !dbg !14627

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !14620

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !14619

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14628, !srcloc !14629
  br label %do.body16, !dbg !14628

do.body16:                                        ; preds = %do.body15
  %27 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !14630
  %lock = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %27, i32 0, i32 34, !dbg !14630
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14631
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !14632
  %rlock.i = bitcast %union.anon.1* %29 to %struct.raw_spinlock*, !dbg !14632
  br label %do.end18, !dbg !14630

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !14628

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !14619

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !14618

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !14613

do.end22:                                         ; preds = %do.end21
  %30 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !14633
  %read_ldidmap = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %30, i32 0, i32 32, !dbg !14635
  %31 = load i32, i32* %read_ldidmap, align 8, !dbg !14635
  %tobool23 = icmp ne i32 %31, 0, !dbg !14633
  br i1 %tobool23, label %if.then, label %if.end41, !dbg !14636

if.then:                                          ; preds = %do.end22
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos, metadata !14637, metadata !DIExpression()), !dbg !14639
  %32 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !14640
  %pending_list24 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %32, i32 0, i32 11, !dbg !14640
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %pending_list24, i32 0, i32 0, !dbg !14640
  %33 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14640
  store %struct.list_head* %33, %struct.list_head** %pos, align 8, !dbg !14640
  br label %for.cond, !dbg !14640

for.cond:                                         ; preds = %for.inc, %if.then
  %34 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !14642
  %35 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !14642
  %pending_list25 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %35, i32 0, i32 11, !dbg !14642
  %cmp26 = icmp ne %struct.list_head* %34, %pending_list25, !dbg !14642
  br i1 %cmp26, label %for.body, label %for.end, !dbg !14640

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14644, metadata !DIExpression()), !dbg !14647
  %36 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !14647
  %37 = bitcast %struct.list_head* %36 to i8*, !dbg !14647
  store i8* %37, i8** %__mptr, align 8, !dbg !14647
  br label %do.body28, !dbg !14647

do.body28:                                        ; preds = %for.body
  br label %do.end29, !dbg !14648

do.end29:                                         ; preds = %do.body28
  %38 = load i8*, i8** %__mptr, align 8, !dbg !14647
  %add.ptr = getelementptr i8, i8* %38, i64 -8, !dbg !14647
  %39 = bitcast i8* %add.ptr to %struct.scb_t*, !dbg !14647
  store %struct.scb_t* %39, %struct.scb_t** %tmp30, align 8, !dbg !14648
  %40 = load %struct.scb_t*, %struct.scb_t** %tmp30, align 8, !dbg !14647
  store %struct.scb_t* %40, %struct.scb_t** %scb, align 8, !dbg !14650
  %41 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !14651
  %pthru = getelementptr inbounds %struct.scb_t, %struct.scb_t* %41, i32 0, i32 12, !dbg !14653
  %42 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru, align 8, !dbg !14653
  %logdrv31 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %42, i32 0, i32 1, !dbg !14654
  %43 = load i8, i8* %logdrv31, align 1, !dbg !14654
  %conv32 = zext i8 %43 to i32, !dbg !14651
  %cmp33 = icmp slt i32 %conv32, 128, !dbg !14655
  br i1 %cmp33, label %if.then35, label %if.end, !dbg !14656

if.then35:                                        ; preds = %do.end29
  %44 = load %struct.scb_t*, %struct.scb_t** %scb, align 8, !dbg !14657
  %pthru36 = getelementptr inbounds %struct.scb_t, %struct.scb_t* %44, i32 0, i32 12, !dbg !14658
  %45 = load %struct.mega_passthru*, %struct.mega_passthru** %pthru36, align 8, !dbg !14658
  %logdrv37 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %45, i32 0, i32 1, !dbg !14659
  %46 = load i8, i8* %logdrv37, align 1, !dbg !14660
  %conv38 = zext i8 %46 to i32, !dbg !14660
  %add = add i32 %conv38, 128, !dbg !14660
  %conv39 = trunc i32 %add to i8, !dbg !14660
  store i8 %conv39, i8* %logdrv37, align 1, !dbg !14660
  br label %if.end, !dbg !14657

if.end:                                           ; preds = %if.then35, %do.end29
  br label %for.inc, !dbg !14661

for.inc:                                          ; preds = %if.end
  %47 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !14642
  %next40 = getelementptr inbounds %struct.list_head, %struct.list_head* %47, i32 0, i32 0, !dbg !14642
  %48 = load %struct.list_head*, %struct.list_head** %next40, align 8, !dbg !14642
  store %struct.list_head* %48, %struct.list_head** %pos, align 8, !dbg !14642
  br label %for.cond, !dbg !14642, !llvm.loop !14662

for.end:                                          ; preds = %for.cond
  br label %if.end41, !dbg !14664

if.end41:                                         ; preds = %for.end, %do.end22
  %49 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !14665
  %quiescent42 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %49, i32 0, i32 33, !dbg !14666
  store %struct.atomic_t* %quiescent42, %struct.atomic_t** %v.addr.i55, align 8
  store i32 0, i32* %i.addr.i56, align 4
  %50 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i55, align 8, !dbg !14667
  %51 = bitcast %struct.atomic_t* %50 to i8*, !dbg !14667
  store i8* %51, i8** %v.addr.i.i53, align 8
  store i64 4, i64* %size.addr.i.i54, align 8
  %52 = load i8*, i8** %v.addr.i.i53, align 8, !dbg !14668
  %53 = load i64, i64* %size.addr.i.i54, align 8, !dbg !14669
  %conv.i.i57 = trunc i64 %53 to i32, !dbg !14669
  %call.i.i58 = call zeroext i1 @kasan_check_write(i8* %52, i32 %conv.i.i57) #13, !dbg !14670
  %54 = load i8*, i8** %v.addr.i.i53, align 8, !dbg !14671
  %55 = load i64, i64* %size.addr.i.i54, align 8, !dbg !14671
  call void @kcsan_check_access(i8* %54, i64 %55, i32 5) #13, !dbg !14671
  %56 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i55, align 8, !dbg !14672
  %57 = load i32, i32* %i.addr.i56, align 4, !dbg !14673
  store %struct.atomic_t* %56, %struct.atomic_t** %v.addr.i1.i51, align 8
  store i32 %57, i32* %i.addr.i.i52, align 4
  %58 = load i32, i32* %i.addr.i.i52, align 4, !dbg !14674
  %59 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i51, align 8, !dbg !14674
  %counter.i.i59 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %59, i32 0, i32 0, !dbg !14674
  store volatile i32 %58, i32* %counter.i.i59, align 4, !dbg !14674
  %60 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !14675
  call void @mega_runpendq(%struct.adapter_t* %60) #11, !dbg !14676
  %61 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !14677
  %lock43 = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %61, i32 0, i32 34, !dbg !14678
  %62 = load i64, i64* %flags, align 8, !dbg !14679
  store %struct.spinlock* %lock43, %struct.spinlock** %lock.addr.i60, align 8
  store i64 %62, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !7602, metadata !DIExpression()) #7, !dbg !14680
  call void @llvm.dbg.declare(metadata !372, metadata !7606, metadata !DIExpression()) #7, !dbg !14680
  store i32 1, i32* %tmp.i, align 4, !dbg !14680
  %63 = load i32, i32* %tmp.i, align 4, !dbg !14680
  call void @llvm.dbg.declare(metadata !372, metadata !7607, metadata !DIExpression()) #7, !dbg !14681
  call void @llvm.dbg.declare(metadata !372, metadata !7613, metadata !DIExpression()) #7, !dbg !14681
  store i32 1, i32* %tmp8.i, align 4, !dbg !14681
  %64 = load i32, i32* %tmp8.i, align 4, !dbg !14681
  %65 = load i64, i64* %flags.addr.i, align 8, !dbg !14682
  call void @arch_local_irq_restore(i64 %65) #13, !dbg !14682
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14683, !srcloc !7617
  %66 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i60, align 8, !dbg !14684
  %67 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %66, i32 0, i32 0, !dbg !14684
  %rlock.i61 = bitcast %union.anon.1* %67 to %struct.raw_spinlock*, !dbg !14684
  %68 = load i32, i32* %rval, align 4, !dbg !14685
  ret i32 %68, !dbg !14686
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_n_to_m(i8* %arg, %struct.megacmd_t* %mc) #0 !dbg !14687 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !13438, metadata !DIExpression()), !dbg !14690
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !13456, metadata !DIExpression()), !dbg !14694
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !13458, metadata !DIExpression()), !dbg !14695
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !13460, metadata !DIExpression()), !dbg !14696
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !13462, metadata !DIExpression()), !dbg !14697
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !13484, metadata !DIExpression()), !dbg !14698
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !13486, metadata !DIExpression()), !dbg !14699
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !13488, metadata !DIExpression()), !dbg !14700
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %mc.addr = alloca %struct.megacmd_t*, align 8
  %uiocp = alloca %struct.nitioctl_t*, align 8
  %umc = alloca %struct.megacmd_t*, align 8
  %upthru = alloca %struct.mega_passthru*, align 8
  %uioc_mimd = alloca %struct.uioctl_t*, align 8
  %signature = alloca [8 x i8], align 1
  %tmp = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i8, align 1
  %tmp6 = alloca i64, align 8
  %tmp17 = alloca i64, align 8
  %__ret_gu = alloca i32, align 4
  %__val_gu = alloca i64, align 8
  %tmp21 = alloca i64, align 8
  %tmp26 = alloca i64, align 8
  %__ret_pu27 = alloca i32, align 4
  %__ptr_pu28 = alloca i8*, align 8
  %__val_pu29 = alloca i8, align 1
  %tmp33 = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  %__ret_pu40 = alloca i32, align 4
  %__ptr_pu41 = alloca i8*, align 8
  %__val_pu42 = alloca i8, align 1
  %tmp47 = alloca i64, align 8
  %tmp59 = alloca i64, align 8
  %__ret_gu60 = alloca i32, align 4
  %__val_gu61 = alloca i64, align 8
  %tmp66 = alloca i64, align 8
  %tmp71 = alloca i64, align 8
  %__ret_pu72 = alloca i32, align 4
  %__ptr_pu73 = alloca i8*, align 8
  %__val_pu74 = alloca i8, align 1
  %tmp79 = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14701, metadata !DIExpression()), !dbg !14702
  store %struct.megacmd_t* %mc, %struct.megacmd_t** %mc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.megacmd_t** %mc.addr, metadata !14703, metadata !DIExpression()), !dbg !14704
  call void @llvm.dbg.declare(metadata %struct.nitioctl_t** %uiocp, metadata !14705, metadata !DIExpression()), !dbg !14706
  call void @llvm.dbg.declare(metadata %struct.megacmd_t** %umc, metadata !14707, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.declare(metadata %struct.mega_passthru** %upthru, metadata !14709, metadata !DIExpression()), !dbg !14710
  call void @llvm.dbg.declare(metadata %struct.uioctl_t** %uioc_mimd, metadata !14711, metadata !DIExpression()), !dbg !14713
  call void @llvm.dbg.declare(metadata [8 x i8]* %signature, metadata !14714, metadata !DIExpression()), !dbg !14715
  %0 = bitcast [8 x i8]* %signature to i8*, !dbg !14715
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 8, i1 false), !dbg !14715
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %signature, i64 0, i64 0, !dbg !14716
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14717
  store i8* %arraydecay, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 7, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !14718
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !14718
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !14696
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !14719
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !14719
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !14719

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !14719
  %conv.i.i = sext i32 %5 to i64, !dbg !14719
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14719
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !14719
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !14720
  %lnot.i.i = xor i1 %7, true, !dbg !14719
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !14719
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !14719
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !14721

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14722
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #7, !dbg !14723
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !14724

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !14725
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14726
  call void @copy_overflow(i32 %10, i64 %11) #13, !dbg !14727
  br label %if.end9.i.i, !dbg !14727

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !14728
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !14728
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !14729

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !14730
  br label %if.end.i.i, !dbg !14730

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !14731
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !14732
  br label %check_copy_size.exit.i, !dbg !14732

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14697
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !14697
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !14697
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !14697
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !14697
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !14733
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !14733
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !14733
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !14733
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !14733
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !14697

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.162, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !14734, !srcloc !13679
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !14735, !srcloc !13682
  br label %if.end31.i.i, !dbg !14736

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !14697
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !14697
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !14697
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !14697
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !14697
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !14733
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !14697
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !14737
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !14738

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !14739
  br label %check_copy_size.exit.i, !dbg !14739

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !14740
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14741
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !14742
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !14742
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #13, !dbg !14743
  store i1 true, i1* %retval.i.i, align 1, !dbg !14744
  br label %check_copy_size.exit.i, !dbg !14744

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !14745
  %lnot.i = xor i1 %20, true, !dbg !14718
  %lnot.ext.i = zext i1 %20 to i32, !dbg !14718
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !14718
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !14746

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !14747
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !14748
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !14749
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #13, !dbg !14750
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !14751
  br label %copy_from_user.exit, !dbg !14752

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !14753
  %tobool = icmp ne i64 %24, 0, !dbg !14754
  br i1 %tobool, label %if.then, label %if.end, !dbg !14755

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !14756
  br label %return, !dbg !14756

if.end:                                           ; preds = %copy_from_user.exit
  %arraydecay1 = getelementptr inbounds [8 x i8], [8 x i8]* %signature, i64 0, i64 0, !dbg !14757
  %call2 = call i32 @memcmp(i8* %arraydecay1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i64 0, i64 0), i64 7) #11, !dbg !14759
  %cmp = icmp eq i32 %call2, 0, !dbg !14760
  br i1 %cmp, label %if.then3, label %if.else, !dbg !14761

if.then3:                                         ; preds = %if.end
  %25 = load i8*, i8** %arg.addr, align 8, !dbg !14762
  %26 = bitcast i8* %25 to %struct.nitioctl_t*, !dbg !14762
  store %struct.nitioctl_t* %26, %struct.nitioctl_t** %uiocp, align 8, !dbg !14764
  call void @might_fault() #11, !dbg !14765
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !14768, metadata !DIExpression()), !dbg !14770
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !14771, metadata !DIExpression()), !dbg !14770
  call void @llvm.dbg.declare(metadata i8* %__val_pu, metadata !14772, metadata !DIExpression()), !dbg !14770
  %27 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uiocp, align 8, !dbg !14770
  %__ua = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %27, i32 0, i32 3, !dbg !14770
  %__raw_mbox = bitcast %union.anon.78* %__ua to [18 x i8]*, !dbg !14770
  %arrayidx = getelementptr [18 x i8], [18 x i8]* %__raw_mbox, i64 0, i64 0, !dbg !14770
  %28 = bitcast i8* %arrayidx to %struct.megacmd_t*, !dbg !14770
  %status = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %28, i32 0, i32 9, !dbg !14770
  store i8* %status, i8** %__ptr_pu, align 8, !dbg !14770
  %29 = load %struct.megacmd_t*, %struct.megacmd_t** %mc.addr, align 8, !dbg !14770
  %status4 = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %29, i32 0, i32 9, !dbg !14770
  %30 = load i8, i8* %status4, align 1, !dbg !14770
  store i8 %30, i8* %__val_pu, align 1, !dbg !14770
  %31 = call i64 @llvm.read_register.i64(metadata !6170), !dbg !14770
  %32 = load i8*, i8** %__ptr_pu, align 8, !dbg !14770
  %33 = load i8, i8* %__val_pu, align 1, !dbg !14770
  %34 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %32, i8 %33, i64 1, i64 %31) #7, !dbg !14770, !srcloc !14773
  %asmresult = extractvalue { i8*, i64 } %34, 0, !dbg !14770
  %asmresult5 = extractvalue { i8*, i64 } %34, 1, !dbg !14770
  %35 = ptrtoint i8* %asmresult to i64, !dbg !14770
  %36 = trunc i64 %35 to i32, !dbg !14770
  store i32 %36, i32* %__ret_pu, align 4, !dbg !14770
  call void @llvm.write_register.i64(metadata !6170, i64 %asmresult5), !dbg !14770
  %37 = load i32, i32* %__ret_pu, align 4, !dbg !14770
  %conv = sext i32 %37 to i64, !dbg !14770
  store i64 %conv, i64* %tmp6, align 8, !dbg !14770
  %38 = load i64, i64* %tmp6, align 8, !dbg !14770
  store i64 %38, i64* %tmp, align 8, !dbg !14765
  %39 = load i64, i64* %tmp, align 8, !dbg !14765
  %tobool7 = icmp ne i64 %39, 0, !dbg !14774
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !14775

if.then8:                                         ; preds = %if.then3
  store i32 -14, i32* %retval, align 4, !dbg !14776
  br label %return, !dbg !14776

if.end9:                                          ; preds = %if.then3
  %40 = load %struct.megacmd_t*, %struct.megacmd_t** %mc.addr, align 8, !dbg !14777
  %cmd = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %40, i32 0, i32 0, !dbg !14779
  %41 = load i8, i8* %cmd, align 1, !dbg !14779
  %conv10 = zext i8 %41 to i32, !dbg !14777
  %cmp11 = icmp eq i32 %conv10, 3, !dbg !14780
  br i1 %cmp11, label %if.then13, label %if.end38, !dbg !14781

if.then13:                                        ; preds = %if.end9
  %42 = load %struct.nitioctl_t*, %struct.nitioctl_t** %uiocp, align 8, !dbg !14782
  %__ua14 = getelementptr inbounds %struct.nitioctl_t, %struct.nitioctl_t* %42, i32 0, i32 3, !dbg !14782
  %__raw_mbox15 = bitcast %union.anon.78* %__ua14 to [18 x i8]*, !dbg !14782
  %arrayidx16 = getelementptr [18 x i8], [18 x i8]* %__raw_mbox15, i64 0, i64 0, !dbg !14782
  %43 = bitcast i8* %arrayidx16 to %struct.megacmd_t*, !dbg !14782
  store %struct.megacmd_t* %43, %struct.megacmd_t** %umc, align 8, !dbg !14784
  call void @might_fault() #11, !dbg !14785
  call void @llvm.dbg.declare(metadata i32* %__ret_gu, metadata !14788, metadata !DIExpression()), !dbg !14790
  call void @llvm.dbg.declare(metadata i64* %__val_gu, metadata !14791, metadata !DIExpression()), !dbg !14790
  %44 = call i64 @llvm.read_register.i64(metadata !6170), !dbg !14790
  %45 = load %struct.megacmd_t*, %struct.megacmd_t** %umc, align 8, !dbg !14790
  %xferaddr = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %45, i32 0, i32 5, !dbg !14790
  %46 = bitcast i32* %xferaddr to %struct.mega_passthru**, !dbg !14790
  %47 = call { %struct.mega_passthru**, i64, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(%struct.mega_passthru** %46, i64 8, i64 %44) #7, !dbg !14790, !srcloc !14792
  %asmresult18 = extractvalue { %struct.mega_passthru**, i64, i64 } %47, 0, !dbg !14790
  %asmresult19 = extractvalue { %struct.mega_passthru**, i64, i64 } %47, 1, !dbg !14790
  %asmresult20 = extractvalue { %struct.mega_passthru**, i64, i64 } %47, 2, !dbg !14790
  %48 = ptrtoint %struct.mega_passthru** %asmresult18 to i64, !dbg !14790
  %49 = trunc i64 %48 to i32, !dbg !14790
  store i32 %49, i32* %__ret_gu, align 4, !dbg !14790
  store i64 %asmresult19, i64* %__val_gu, align 8, !dbg !14790
  call void @llvm.write_register.i64(metadata !6170, i64 %asmresult20), !dbg !14790
  %50 = load i64, i64* %__val_gu, align 8, !dbg !14790
  %51 = inttoptr i64 %50 to %struct.mega_passthru*, !dbg !14790
  store %struct.mega_passthru* %51, %struct.mega_passthru** %upthru, align 8, !dbg !14790
  %52 = load i32, i32* %__ret_gu, align 4, !dbg !14790
  %conv22 = sext i32 %52 to i64, !dbg !14790
  store i64 %conv22, i64* %tmp21, align 8, !dbg !14790
  %53 = load i64, i64* %tmp21, align 8, !dbg !14790
  store i64 %53, i64* %tmp17, align 8, !dbg !14785
  %54 = load i64, i64* %tmp17, align 8, !dbg !14785
  %tobool23 = icmp ne i64 %54, 0, !dbg !14793
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !14794

if.then24:                                        ; preds = %if.then13
  store i32 -14, i32* %retval, align 4, !dbg !14795
  br label %return, !dbg !14795

if.end25:                                         ; preds = %if.then13
  call void @might_fault() #11, !dbg !14796
  call void @llvm.dbg.declare(metadata i32* %__ret_pu27, metadata !14799, metadata !DIExpression()), !dbg !14801
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu28, metadata !14802, metadata !DIExpression()), !dbg !14801
  call void @llvm.dbg.declare(metadata i8* %__val_pu29, metadata !14803, metadata !DIExpression()), !dbg !14801
  %55 = load %struct.mega_passthru*, %struct.mega_passthru** %upthru, align 8, !dbg !14801
  %scsistatus = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %55, i32 0, i32 11, !dbg !14801
  store i8* %scsistatus, i8** %__ptr_pu28, align 8, !dbg !14801
  %56 = load %struct.megacmd_t*, %struct.megacmd_t** %mc.addr, align 8, !dbg !14801
  %status30 = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %56, i32 0, i32 9, !dbg !14801
  %57 = load i8, i8* %status30, align 1, !dbg !14801
  store i8 %57, i8* %__val_pu29, align 1, !dbg !14801
  %58 = call i64 @llvm.read_register.i64(metadata !6170), !dbg !14801
  %59 = load i8*, i8** %__ptr_pu28, align 8, !dbg !14801
  %60 = load i8, i8* %__val_pu29, align 1, !dbg !14801
  %61 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %59, i8 %60, i64 1, i64 %58) #7, !dbg !14801, !srcloc !14804
  %asmresult31 = extractvalue { i8*, i64 } %61, 0, !dbg !14801
  %asmresult32 = extractvalue { i8*, i64 } %61, 1, !dbg !14801
  %62 = ptrtoint i8* %asmresult31 to i64, !dbg !14801
  %63 = trunc i64 %62 to i32, !dbg !14801
  store i32 %63, i32* %__ret_pu27, align 4, !dbg !14801
  call void @llvm.write_register.i64(metadata !6170, i64 %asmresult32), !dbg !14801
  %64 = load i32, i32* %__ret_pu27, align 4, !dbg !14801
  %conv34 = sext i32 %64 to i64, !dbg !14801
  store i64 %conv34, i64* %tmp33, align 8, !dbg !14801
  %65 = load i64, i64* %tmp33, align 8, !dbg !14801
  store i64 %65, i64* %tmp26, align 8, !dbg !14796
  %66 = load i64, i64* %tmp26, align 8, !dbg !14796
  %tobool35 = icmp ne i64 %66, 0, !dbg !14805
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !14806

if.then36:                                        ; preds = %if.end25
  store i32 -14, i32* %retval, align 4, !dbg !14807
  br label %return, !dbg !14807

if.end37:                                         ; preds = %if.end25
  br label %if.end38, !dbg !14808

if.end38:                                         ; preds = %if.end37, %if.end9
  br label %if.end85, !dbg !14809

if.else:                                          ; preds = %if.end
  %67 = load i8*, i8** %arg.addr, align 8, !dbg !14810
  %68 = bitcast i8* %67 to %struct.uioctl_t*, !dbg !14810
  store %struct.uioctl_t* %68, %struct.uioctl_t** %uioc_mimd, align 8, !dbg !14812
  call void @might_fault() #11, !dbg !14813
  call void @llvm.dbg.declare(metadata i32* %__ret_pu40, metadata !14816, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu41, metadata !14819, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.declare(metadata i8* %__val_pu42, metadata !14820, metadata !DIExpression()), !dbg !14818
  %69 = load %struct.uioctl_t*, %struct.uioctl_t** %uioc_mimd, align 8, !dbg !14818
  %mbox = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %69, i32 0, i32 3, !dbg !14818
  %arrayidx43 = getelementptr [18 x i8], [18 x i8]* %mbox, i64 0, i64 17, !dbg !14818
  store i8* %arrayidx43, i8** %__ptr_pu41, align 8, !dbg !14818
  %70 = load %struct.megacmd_t*, %struct.megacmd_t** %mc.addr, align 8, !dbg !14818
  %status44 = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %70, i32 0, i32 9, !dbg !14818
  %71 = load i8, i8* %status44, align 1, !dbg !14818
  store i8 %71, i8* %__val_pu42, align 1, !dbg !14818
  %72 = call i64 @llvm.read_register.i64(metadata !6170), !dbg !14818
  %73 = load i8*, i8** %__ptr_pu41, align 8, !dbg !14818
  %74 = load i8, i8* %__val_pu42, align 1, !dbg !14818
  %75 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %73, i8 %74, i64 1, i64 %72) #7, !dbg !14818, !srcloc !14821
  %asmresult45 = extractvalue { i8*, i64 } %75, 0, !dbg !14818
  %asmresult46 = extractvalue { i8*, i64 } %75, 1, !dbg !14818
  %76 = ptrtoint i8* %asmresult45 to i64, !dbg !14818
  %77 = trunc i64 %76 to i32, !dbg !14818
  store i32 %77, i32* %__ret_pu40, align 4, !dbg !14818
  call void @llvm.write_register.i64(metadata !6170, i64 %asmresult46), !dbg !14818
  %78 = load i32, i32* %__ret_pu40, align 4, !dbg !14818
  %conv48 = sext i32 %78 to i64, !dbg !14818
  store i64 %conv48, i64* %tmp47, align 8, !dbg !14818
  %79 = load i64, i64* %tmp47, align 8, !dbg !14818
  store i64 %79, i64* %tmp39, align 8, !dbg !14813
  %80 = load i64, i64* %tmp39, align 8, !dbg !14813
  %tobool49 = icmp ne i64 %80, 0, !dbg !14822
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !14823

if.then50:                                        ; preds = %if.else
  store i32 -14, i32* %retval, align 4, !dbg !14824
  br label %return, !dbg !14824

if.end51:                                         ; preds = %if.else
  %81 = load %struct.megacmd_t*, %struct.megacmd_t** %mc.addr, align 8, !dbg !14825
  %cmd52 = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %81, i32 0, i32 0, !dbg !14827
  %82 = load i8, i8* %cmd52, align 1, !dbg !14827
  %conv53 = zext i8 %82 to i32, !dbg !14825
  %cmp54 = icmp eq i32 %conv53, 3, !dbg !14828
  br i1 %cmp54, label %if.then56, label %if.end84, !dbg !14829

if.then56:                                        ; preds = %if.end51
  %83 = load %struct.uioctl_t*, %struct.uioctl_t** %uioc_mimd, align 8, !dbg !14830
  %mbox57 = getelementptr inbounds %struct.uioctl_t, %struct.uioctl_t* %83, i32 0, i32 3, !dbg !14832
  %arraydecay58 = getelementptr inbounds [18 x i8], [18 x i8]* %mbox57, i64 0, i64 0, !dbg !14830
  %84 = bitcast i8* %arraydecay58 to %struct.megacmd_t*, !dbg !14833
  store %struct.megacmd_t* %84, %struct.megacmd_t** %umc, align 8, !dbg !14834
  call void @might_fault() #11, !dbg !14835
  call void @llvm.dbg.declare(metadata i32* %__ret_gu60, metadata !14838, metadata !DIExpression()), !dbg !14840
  call void @llvm.dbg.declare(metadata i64* %__val_gu61, metadata !14841, metadata !DIExpression()), !dbg !14840
  %85 = call i64 @llvm.read_register.i64(metadata !6170), !dbg !14840
  %86 = load %struct.megacmd_t*, %struct.megacmd_t** %umc, align 8, !dbg !14840
  %xferaddr62 = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %86, i32 0, i32 5, !dbg !14840
  %87 = bitcast i32* %xferaddr62 to %struct.mega_passthru**, !dbg !14840
  %88 = call { %struct.mega_passthru**, i64, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(%struct.mega_passthru** %87, i64 8, i64 %85) #7, !dbg !14840, !srcloc !14842
  %asmresult63 = extractvalue { %struct.mega_passthru**, i64, i64 } %88, 0, !dbg !14840
  %asmresult64 = extractvalue { %struct.mega_passthru**, i64, i64 } %88, 1, !dbg !14840
  %asmresult65 = extractvalue { %struct.mega_passthru**, i64, i64 } %88, 2, !dbg !14840
  %89 = ptrtoint %struct.mega_passthru** %asmresult63 to i64, !dbg !14840
  %90 = trunc i64 %89 to i32, !dbg !14840
  store i32 %90, i32* %__ret_gu60, align 4, !dbg !14840
  store i64 %asmresult64, i64* %__val_gu61, align 8, !dbg !14840
  call void @llvm.write_register.i64(metadata !6170, i64 %asmresult65), !dbg !14840
  %91 = load i64, i64* %__val_gu61, align 8, !dbg !14840
  %92 = inttoptr i64 %91 to %struct.mega_passthru*, !dbg !14840
  store %struct.mega_passthru* %92, %struct.mega_passthru** %upthru, align 8, !dbg !14840
  %93 = load i32, i32* %__ret_gu60, align 4, !dbg !14840
  %conv67 = sext i32 %93 to i64, !dbg !14840
  store i64 %conv67, i64* %tmp66, align 8, !dbg !14840
  %94 = load i64, i64* %tmp66, align 8, !dbg !14840
  store i64 %94, i64* %tmp59, align 8, !dbg !14835
  %95 = load i64, i64* %tmp59, align 8, !dbg !14835
  %tobool68 = icmp ne i64 %95, 0, !dbg !14843
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !14844

if.then69:                                        ; preds = %if.then56
  store i32 -14, i32* %retval, align 4, !dbg !14845
  br label %return, !dbg !14845

if.end70:                                         ; preds = %if.then56
  call void @might_fault() #11, !dbg !14846
  call void @llvm.dbg.declare(metadata i32* %__ret_pu72, metadata !14849, metadata !DIExpression()), !dbg !14851
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu73, metadata !14852, metadata !DIExpression()), !dbg !14851
  call void @llvm.dbg.declare(metadata i8* %__val_pu74, metadata !14853, metadata !DIExpression()), !dbg !14851
  %96 = load %struct.mega_passthru*, %struct.mega_passthru** %upthru, align 8, !dbg !14851
  %scsistatus75 = getelementptr inbounds %struct.mega_passthru, %struct.mega_passthru* %96, i32 0, i32 11, !dbg !14851
  store i8* %scsistatus75, i8** %__ptr_pu73, align 8, !dbg !14851
  %97 = load %struct.megacmd_t*, %struct.megacmd_t** %mc.addr, align 8, !dbg !14851
  %status76 = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %97, i32 0, i32 9, !dbg !14851
  %98 = load i8, i8* %status76, align 1, !dbg !14851
  store i8 %98, i8* %__val_pu74, align 1, !dbg !14851
  %99 = call i64 @llvm.read_register.i64(metadata !6170), !dbg !14851
  %100 = load i8*, i8** %__ptr_pu73, align 8, !dbg !14851
  %101 = load i8, i8* %__val_pu74, align 1, !dbg !14851
  %102 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %100, i8 %101, i64 1, i64 %99) #7, !dbg !14851, !srcloc !14854
  %asmresult77 = extractvalue { i8*, i64 } %102, 0, !dbg !14851
  %asmresult78 = extractvalue { i8*, i64 } %102, 1, !dbg !14851
  %103 = ptrtoint i8* %asmresult77 to i64, !dbg !14851
  %104 = trunc i64 %103 to i32, !dbg !14851
  store i32 %104, i32* %__ret_pu72, align 4, !dbg !14851
  call void @llvm.write_register.i64(metadata !6170, i64 %asmresult78), !dbg !14851
  %105 = load i32, i32* %__ret_pu72, align 4, !dbg !14851
  %conv80 = sext i32 %105 to i64, !dbg !14851
  store i64 %conv80, i64* %tmp79, align 8, !dbg !14851
  %106 = load i64, i64* %tmp79, align 8, !dbg !14851
  store i64 %106, i64* %tmp71, align 8, !dbg !14846
  %107 = load i64, i64* %tmp71, align 8, !dbg !14846
  %tobool81 = icmp ne i64 %107, 0, !dbg !14855
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !14856

if.then82:                                        ; preds = %if.end70
  store i32 -14, i32* %retval, align 4, !dbg !14857
  br label %return, !dbg !14857

if.end83:                                         ; preds = %if.end70
  br label %if.end84, !dbg !14858

if.end84:                                         ; preds = %if.end83, %if.end51
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end38
  store i32 0, i32* %retval, align 4, !dbg !14859
  br label %return, !dbg !14859

return:                                           ; preds = %if.end85, %if.then82, %if.then69, %if.then50, %if.then36, %if.then24, %if.then8, %if.then
  %108 = load i32, i32* %retval, align 4, !dbg !14860
  ret i32 %108, !dbg !14860
}

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #0 !dbg !14861 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14864, metadata !DIExpression()), !dbg !14865
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !14866, metadata !DIExpression()), !dbg !14867
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !14868, metadata !DIExpression()), !dbg !14870
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !14870
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !14871
  %tobool = icmp ne i32 %0, 0, !dbg !14871
  %lnot = xor i1 %tobool, true, !dbg !14871
  %lnot1 = xor i1 %lnot, true, !dbg !14871
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14871
  %conv = sext i32 %lnot.ext to i64, !dbg !14871
  %tobool2 = icmp ne i64 %conv, 0, !dbg !14871
  br i1 %tobool2, label %if.then, label %if.end, !dbg !14870

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14871

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !14873

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !14875

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !14873
  %2 = load i64, i64* %count.addr, align 8, !dbg !14873
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.163, i64 0, i64 0), i32 %1, i64 %2) #11, !dbg !14873
  br label %do.body4, !dbg !14873

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !14877

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !14879

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !14877

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.162, i64 0, i64 0), i32 134, i32 2313, i64 12) #7, !dbg !14881, !srcloc !14883
  br label %do.end8, !dbg !14881

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #7, !dbg !14884, !srcloc !14886
  br label %do.body9, !dbg !14877

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !14887

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !14877

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !14873

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !14889

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !14873

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !14873

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !14870
  %tobool15 = icmp ne i32 %3, 0, !dbg !14870
  %lnot16 = xor i1 %tobool15, true, !dbg !14870
  %lnot18 = xor i1 %lnot16, true, !dbg !14870
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !14870
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !14870
  store i64 %conv20, i64* %tmp, align 8, !dbg !14871
  %4 = load i64, i64* %tmp, align 8, !dbg !14870
  ret void, !dbg !14891
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #2

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #0 !dbg !14892 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14895, metadata !DIExpression()), !dbg !14896
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14897, metadata !DIExpression()), !dbg !14898
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !14899, metadata !DIExpression()), !dbg !14900
  ret void, !dbg !14901
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mega_do_del_logdrv(%struct.adapter_t* %adapter, i32 %logdrv) #0 !dbg !14902 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.adapter_t*, align 8
  %logdrv.addr = alloca i32, align 4
  %mc = alloca %struct.megacmd_t, align 1
  %rval = alloca i32, align 4
  store %struct.adapter_t* %adapter, %struct.adapter_t** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.adapter_t** %adapter.addr, metadata !14903, metadata !DIExpression()), !dbg !14904
  store i32 %logdrv, i32* %logdrv.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %logdrv.addr, metadata !14905, metadata !DIExpression()), !dbg !14906
  call void @llvm.dbg.declare(metadata %struct.megacmd_t* %mc, metadata !14907, metadata !DIExpression()), !dbg !14908
  call void @llvm.dbg.declare(metadata i32* %rval, metadata !14909, metadata !DIExpression()), !dbg !14910
  %0 = bitcast %struct.megacmd_t* %mc to i8*, !dbg !14911
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 18, i1 false), !dbg !14911
  %cmd = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 0, !dbg !14912
  store i8 -92, i8* %cmd, align 1, !dbg !14913
  %opcode = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 2, !dbg !14914
  store i8 28, i8* %opcode, align 1, !dbg !14915
  %1 = load i32, i32* %logdrv.addr, align 4, !dbg !14916
  %conv = trunc i32 %1 to i8, !dbg !14916
  %subopcode = getelementptr inbounds %struct.megacmd_t, %struct.megacmd_t* %mc, i32 0, i32 3, !dbg !14917
  store i8 %conv, i8* %subopcode, align 1, !dbg !14918
  %2 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !14919
  %call = call i32 @mega_internal_command(%struct.adapter_t* %2, %struct.megacmd_t* %mc, %struct.mega_passthru* null) #11, !dbg !14920
  store i32 %call, i32* %rval, align 4, !dbg !14921
  %3 = load i32, i32* %rval, align 4, !dbg !14922
  %tobool = icmp ne i32 %3, 0, !dbg !14922
  br i1 %tobool, label %if.then, label %if.end, !dbg !14924

if.then:                                          ; preds = %entry
  %4 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !14925
  %dev = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %4, i32 0, i32 9, !dbg !14925
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !14925
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !14925
  %6 = load i32, i32* %logdrv.addr, align 4, !dbg !14925
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.164, i64 0, i64 0), i32 %6) #12, !dbg !14925
  %7 = load i32, i32* %rval, align 4, !dbg !14927
  store i32 %7, i32* %retval, align 4, !dbg !14928
  br label %return, !dbg !14928

if.end:                                           ; preds = %entry
  %8 = load %struct.adapter_t*, %struct.adapter_t** %adapter.addr, align 8, !dbg !14929
  %read_ldidmap = getelementptr inbounds %struct.adapter_t, %struct.adapter_t* %8, i32 0, i32 32, !dbg !14930
  store i32 1, i32* %read_ldidmap, align 8, !dbg !14931
  %9 = load i32, i32* %rval, align 4, !dbg !14932
  store i32 %9, i32* %retval, align 4, !dbg !14933
  br label %return, !dbg !14933

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !14934
  ret i32 %10, !dbg !14934
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!6170}
!llvm.module.flags = !{!6171, !6172, !6173, !6174}
!llvm.ident = !{!6175}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author296", scope: !2, file: !3, line: 56, type: !6167, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !181, globals: !5929, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/scsi/megaraid.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !36, !43, !51, !57, !63, !75, !81, !88, !92, !97, !104, !110, !119, !127, !135, !146, !153, !163, !168, !175}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !31, line: 44, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35}
!33 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !37, line: 343, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!38 = !{!39, !40, !41, !42}
!39 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !44, line: 524, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50}
!46 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !44, line: 502, baseType: !7, size: 32, elements: !52)
!52 = !{!53, !54, !55, !56}
!53 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!55 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!56 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !58, line: 26, baseType: !7, size: 32, elements: !59)
!58 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!59 = !{!60, !61, !62}
!60 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!61 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!62 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !64, line: 49, baseType: !7, size: 32, elements: !65)
!64 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!65 = !{!66, !67, !68, !69, !70, !71, !72, !73, !74}
!66 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!67 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!68 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!69 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!70 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!71 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!72 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!73 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!74 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!75 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !76, line: 118, baseType: !7, size: 32, elements: !77)
!76 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!77 = !{!78, !79, !80}
!78 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!79 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!80 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!81 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !82, line: 19, baseType: !7, size: 32, elements: !83)
!82 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!83 = !{!84, !85, !86, !87}
!84 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!85 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!87 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_eh_timer_return", file: !76, line: 293, baseType: !7, size: 32, elements: !89)
!89 = !{!90, !91}
!90 = !DIEnumerator(name: "BLK_EH_DONE", value: 0, isUnsigned: true)
!91 = !DIEnumerator(name: "BLK_EH_RESET_TIMER", value: 1, isUnsigned: true)
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !76, line: 315, baseType: !7, size: 32, elements: !93)
!93 = !{!94, !95, !96}
!94 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!95 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!96 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !98, line: 59, baseType: !7, size: 32, elements: !99)
!98 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!99 = !{!100, !101, !102, !103}
!100 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!101 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!102 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!103 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !105, line: 54, baseType: !7, size: 32, elements: !106)
!105 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!106 = !{!107, !108, !109}
!107 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!108 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!109 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !111, line: 296, baseType: !7, size: 32, elements: !112)
!111 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!112 = !{!113, !114, !115, !116, !117, !118}
!113 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!114 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!115 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!116 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!117 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!118 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !120, line: 9, baseType: !7, size: 32, elements: !121)
!120 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!121 = !{!122, !123, !124, !125, !126}
!122 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!124 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!125 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!126 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_target_state", file: !128, line: 276, baseType: !7, size: 32, elements: !129)
!128 = !DIFile(filename: "./include/scsi/scsi_device.h", directory: "/home/lizy2001/genbc/linux")
!129 = !{!130, !131, !132, !133, !134}
!130 = !DIEnumerator(name: "STARGET_CREATED", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "STARGET_RUNNING", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "STARGET_REMOVE", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "STARGET_CREATED_REMOVE", value: 4, isUnsigned: true)
!134 = !DIEnumerator(name: "STARGET_DEL", value: 5, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_device_state", file: !128, line: 36, baseType: !7, size: 32, elements: !136)
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145}
!137 = !DIEnumerator(name: "SDEV_CREATED", value: 1, isUnsigned: true)
!138 = !DIEnumerator(name: "SDEV_RUNNING", value: 2, isUnsigned: true)
!139 = !DIEnumerator(name: "SDEV_CANCEL", value: 3, isUnsigned: true)
!140 = !DIEnumerator(name: "SDEV_DEL", value: 4, isUnsigned: true)
!141 = !DIEnumerator(name: "SDEV_QUIESCE", value: 5, isUnsigned: true)
!142 = !DIEnumerator(name: "SDEV_OFFLINE", value: 6, isUnsigned: true)
!143 = !DIEnumerator(name: "SDEV_TRANSPORT_OFFLINE", value: 7, isUnsigned: true)
!144 = !DIEnumerator(name: "SDEV_BLOCK", value: 8, isUnsigned: true)
!145 = !DIEnumerator(name: "SDEV_CREATED_BLOCK", value: 9, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !147, line: 5, baseType: !7, size: 32, elements: !148)
!147 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!148 = !{!149, !150, !151, !152}
!149 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!152 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_host_state", file: !154, line: 514, baseType: !7, size: 32, elements: !155)
!154 = !DIFile(filename: "./include/scsi/scsi_host.h", directory: "/home/lizy2001/genbc/linux")
!155 = !{!156, !157, !158, !159, !160, !161, !162}
!156 = !DIEnumerator(name: "SHOST_CREATED", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "SHOST_RUNNING", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "SHOST_CANCEL", value: 3, isUnsigned: true)
!159 = !DIEnumerator(name: "SHOST_DEL", value: 4, isUnsigned: true)
!160 = !DIEnumerator(name: "SHOST_RECOVERY", value: 5, isUnsigned: true)
!161 = !DIEnumerator(name: "SHOST_CANCEL_RECOVERY", value: 6, isUnsigned: true)
!162 = !DIEnumerator(name: "SHOST_DEL_RECOVERY", value: 7, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !164, line: 10, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!165 = !{!166, !167}
!166 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !169, line: 305, baseType: !7, size: 32, elements: !170)
!169 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!170 = !{!171, !172, !173, !174}
!171 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !176, line: 11, baseType: !7, size: 32, elements: !177)
!176 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!177 = !{!178, !179, !180}
!178 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!181 = !{!182, !190, !195, !197, !910, !5692, !316, !5581, !5693, !5696, !5697, !1390, !281, !887, !5698, !399, !5700, !261, !5702, !5301, !5703, !213, !5179, !199, !5704, !5779, !240, !5780, !218, !5598, !5789, !5790, !5845, !5892, !747, !5613, !5914, !188, !5551, !5928}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "adapter_t", file: !184, line: 853, baseType: !185)
!184 = !DIFile(filename: "drivers/scsi/megaraid.h", directory: "/home/lizy2001/genbc/linux")
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 765, size: 12224, elements: !186)
!186 = !{!187, !189, !194, !196, !198, !239, !245, !248, !251, !252, !5117, !5118, !5119, !5120, !5550, !5552, !5553, !5579, !5580, !5666, !5667, !5668, !5670, !5671, !5672, !5673, !5674, !5675, !5676, !5677, !5678, !5679, !5680, !5681, !5682, !5683, !5685, !5686, !5687, !5688, !5689, !5690, !5691}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !185, file: !184, line: 766, baseType: !188, size: 32)
!188 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !185, file: !184, line: 768, baseType: !190, size: 32, offset: 32)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !191, line: 21, baseType: !192)
!191 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !193, line: 27, baseType: !7)
!193 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!194 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !185, file: !184, line: 770, baseType: !195, size: 64, offset: 64)
!195 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_base", scope: !185, file: !184, line: 771, baseType: !197, size: 64, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "una_mbox64", scope: !185, file: !184, line: 774, baseType: !199, size: 64, offset: 192)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbox64_t", file: !184, line: 118, baseType: !201)
!201 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 114, size: 592, elements: !202)
!202 = !{!203, !204, !205}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_segment_lo", scope: !201, file: !184, line: 115, baseType: !190, size: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_segment_hi", scope: !201, file: !184, line: 116, baseType: !190, size: 32, offset: 32)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "mbox", scope: !201, file: !184, line: 117, baseType: !206, size: 528, offset: 64)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbox_t", file: !184, line: 112, baseType: !207)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 109, size: 528, elements: !208)
!208 = !{!209, !226}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "m_out", scope: !207, file: !184, line: 110, baseType: !210, size: 120)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mbox_out", file: !184, line: 89, size: 120, elements: !211)
!211 = !{!212, !216, !217, !221, !222, !223, !224, !225}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !210, file: !184, line: 90, baseType: !213, size: 8)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !191, line: 17, baseType: !214)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !193, line: 21, baseType: !215)
!215 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "cmdid", scope: !210, file: !184, line: 91, baseType: !213, size: 8, offset: 8)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "numsectors", scope: !210, file: !184, line: 92, baseType: !218, size: 16, offset: 16)
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !191, line: 19, baseType: !219)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !193, line: 24, baseType: !220)
!220 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "lba", scope: !210, file: !184, line: 93, baseType: !190, size: 32, offset: 32)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "xferaddr", scope: !210, file: !184, line: 94, baseType: !190, size: 32, offset: 64)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "logdrv", scope: !210, file: !184, line: 95, baseType: !213, size: 8, offset: 96)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "numsgelements", scope: !210, file: !184, line: 96, baseType: !213, size: 8, offset: 104)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "resvd", scope: !210, file: !184, line: 97, baseType: !213, size: 8, offset: 112)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "m_in", scope: !207, file: !184, line: 111, baseType: !227, size: 408, offset: 120)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mbox_in", file: !184, line: 100, size: 408, elements: !228)
!228 = !{!229, !231, !232, !233, !237, !238}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !227, file: !184, line: 101, baseType: !230, size: 8)
!230 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !213)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "numstatus", scope: !227, file: !184, line: 102, baseType: !230, size: 8, offset: 8)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !227, file: !184, line: 103, baseType: !230, size: 8, offset: 16)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "completed", scope: !227, file: !184, line: 104, baseType: !234, size: 368, offset: 24)
!234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, size: 368, elements: !235)
!235 = !{!236}
!236 = !DISubrange(count: 46)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !227, file: !184, line: 105, baseType: !230, size: 8, offset: 392)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !227, file: !184, line: 106, baseType: !230, size: 8, offset: 400)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "una_mbox64_dma", scope: !185, file: !184, line: 775, baseType: !240, size: 64, offset: 256)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !241, line: 143, baseType: !242)
!241 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !191, line: 23, baseType: !243)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !193, line: 31, baseType: !244)
!244 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "mbox64", scope: !185, file: !184, line: 777, baseType: !246, size: 64, offset: 320)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !200)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "mbox", scope: !185, file: !184, line: 778, baseType: !249, size: 64, offset: 384)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!250 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !206)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "mbox_dma", scope: !185, file: !184, line: 779, baseType: !240, size: 64, offset: 448)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !185, file: !184, line: 781, baseType: !253, size: 64, offset: 512)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !255, line: 309, size: 19264, elements: !256)
!255 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!256 = !{!257, !263, !4918, !4919, !4920, !4921, !4932, !4933, !4934, !4935, !4936, !4937, !4938, !4939, !4940, !4941, !4942, !4943, !4944, !4945, !4946, !4947, !4949, !5014, !5015, !5016, !5018, !5019, !5020, !5021, !5022, !5023, !5024, !5025, !5026, !5027, !5028, !5029, !5030, !5031, !5032, !5033, !5034, !5035, !5036, !5037, !5040, !5041, !5042, !5043, !5044, !5045, !5046, !5047, !5051, !5052, !5053, !5054, !5055, !5056, !5057, !5058, !5059, !5060, !5061, !5062, !5063, !5064, !5065, !5066, !5067, !5068, !5069, !5070, !5071, !5072, !5073, !5074, !5075, !5076, !5077, !5078, !5079, !5080, !5081, !5082, !5083, !5084, !5085, !5086, !5087, !5088, !5090, !5091, !5093, !5094, !5095, !5096, !5098, !5099, !5100, !5103, !5110, !5111, !5112, !5113, !5114, !5115, !5116}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !254, file: !255, line: 310, baseType: !258, size: 128)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !241, line: 178, size: 128, elements: !259)
!259 = !{!260, !262}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !258, file: !241, line: 179, baseType: !261, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !258, file: !241, line: 179, baseType: !261, size: 64, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !254, file: !255, line: 311, baseType: !264, size: 64, offset: 128)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !255, line: 605, size: 8064, elements: !266)
!266 = !{!267, !268, !269, !270, !271, !272, !273, !294, !295, !296, !321, !324, !325, !329, !330, !331, !332, !333, !337, !338, !340, !4914, !4915, !4916, !4917}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !265, file: !255, line: 606, baseType: !258, size: 128)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !265, file: !255, line: 607, baseType: !264, size: 64, offset: 128)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !265, file: !255, line: 608, baseType: !258, size: 128, offset: 192)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !265, file: !255, line: 609, baseType: !258, size: 128, offset: 320)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !265, file: !255, line: 610, baseType: !253, size: 64, offset: 448)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !265, file: !255, line: 611, baseType: !258, size: 128, offset: 512)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !265, file: !255, line: 613, baseType: !274, size: 256, offset: 640)
!274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !275, size: 256, elements: !292)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !277, line: 20, size: 512, elements: !278)
!277 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!278 = !{!279, !282, !283, !287, !288, !289, !290, !291}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !276, file: !277, line: 21, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !241, line: 158, baseType: !281)
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !241, line: 153, baseType: !242)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !276, file: !277, line: 22, baseType: !280, size: 64, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !276, file: !277, line: 23, baseType: !284, size: 64, offset: 128)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !286)
!286 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !276, file: !277, line: 24, baseType: !195, size: 64, offset: 192)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !276, file: !277, line: 25, baseType: !195, size: 64, offset: 256)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !276, file: !277, line: 26, baseType: !275, size: 64, offset: 320)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !276, file: !277, line: 26, baseType: !275, size: 64, offset: 384)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !276, file: !277, line: 26, baseType: !275, size: 64, offset: 448)
!292 = !{!293}
!293 = !DISubrange(count: 4)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !265, file: !255, line: 614, baseType: !258, size: 128, offset: 896)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !265, file: !255, line: 615, baseType: !276, size: 512, offset: 1024)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !265, file: !255, line: 617, baseType: !297, size: 64, offset: 1536)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !255, line: 731, size: 320, elements: !299)
!299 = !{!300, !304, !308, !312, !317}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !298, file: !255, line: 732, baseType: !301, size: 64)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!302 = !DISubroutineType(types: !303)
!303 = !{!188, !264}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !298, file: !255, line: 733, baseType: !305, size: 64, offset: 64)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64)
!306 = !DISubroutineType(types: !307)
!307 = !{null, !264}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !298, file: !255, line: 734, baseType: !309, size: 64, offset: 128)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!310 = !DISubroutineType(types: !311)
!311 = !{!197, !264, !7, !188}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !298, file: !255, line: 735, baseType: !313, size: 64, offset: 192)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = !DISubroutineType(types: !315)
!315 = !{!188, !264, !7, !188, !188, !316}
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !298, file: !255, line: 736, baseType: !318, size: 64, offset: 256)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!319 = !DISubroutineType(types: !320)
!320 = !{!188, !264, !7, !188, !188, !190}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !265, file: !255, line: 618, baseType: !322, size: 64, offset: 1600)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !255, line: 537, flags: DIFlagFwdDecl)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !265, file: !255, line: 619, baseType: !197, size: 64, offset: 1664)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !265, file: !255, line: 620, baseType: !326, size: 64, offset: 1728)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !328, line: 12, flags: DIFlagFwdDecl)
!328 = !DIFile(filename: "./include/linux/proc_fs.h", directory: "/home/lizy2001/genbc/linux")
!329 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !265, file: !255, line: 622, baseType: !215, size: 8, offset: 1792)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !265, file: !255, line: 623, baseType: !215, size: 8, offset: 1800)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !265, file: !255, line: 624, baseType: !215, size: 8, offset: 1808)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !265, file: !255, line: 625, baseType: !215, size: 8, offset: 1816)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !265, file: !255, line: 630, baseType: !334, size: 384, offset: 1824)
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 384, elements: !335)
!335 = !{!336}
!336 = !DISubrange(count: 48)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !265, file: !255, line: 632, baseType: !220, size: 16, offset: 2208)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !265, file: !255, line: 633, baseType: !339, size: 16, offset: 2224)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !255, line: 237, baseType: !220)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !265, file: !255, line: 634, baseType: !341, size: 64, offset: 2240)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !37, line: 461, size: 5568, elements: !343)
!343 = !{!344, !4479, !4480, !4483, !4484, !4534, !4625, !4626, !4627, !4628, !4629, !4638, !4732, !4745, !4749, !4750, !4754, !4756, !4757, !4758, !4762, !4768, !4769, !4772, !4776, !4866, !4867, !4868, !4869, !4870, !4902, !4903, !4904, !4907, !4910, !4911, !4912, !4913}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !342, file: !37, line: 462, baseType: !345, size: 512)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !346, line: 64, size: 512, elements: !347)
!346 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!347 = !{!348, !349, !350, !352, !412, !4345, !4473, !4474, !4475, !4476, !4477, !4478}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !345, file: !346, line: 65, baseType: !284, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !345, file: !346, line: 66, baseType: !258, size: 128, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !345, file: !346, line: 67, baseType: !351, size: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !345, file: !346, line: 68, baseType: !353, size: 64, offset: 256)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !346, line: 192, size: 704, elements: !355)
!355 = !{!356, !357, !373, !374}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !354, file: !346, line: 193, baseType: !258, size: 128)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !354, file: !346, line: 194, baseType: !358, offset: 128)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !359, line: 83, baseType: !360)
!359 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !359, line: 71, elements: !361)
!361 = !{!362}
!362 = !DIDerivedType(tag: DW_TAG_member, scope: !360, file: !359, line: 72, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !360, file: !359, line: 72, elements: !364)
!364 = !{!365}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !363, file: !359, line: 73, baseType: !366)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !359, line: 20, elements: !367)
!367 = !{!368}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !366, file: !359, line: 21, baseType: !369)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !370, line: 25, baseType: !371)
!370 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !370, line: 25, elements: !372)
!372 = !{}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !354, file: !346, line: 195, baseType: !345, size: 512, offset: 128)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !354, file: !346, line: 196, baseType: !375, size: 64, offset: 640)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !377)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !346, line: 156, size: 192, elements: !378)
!378 = !{!379, !384, !389}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !377, file: !346, line: 157, baseType: !380, size: 64)
!380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !381)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = !DISubroutineType(types: !383)
!383 = !{!188, !353, !351}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !377, file: !346, line: 158, baseType: !385, size: 64, offset: 64)
!385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !386)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = !DISubroutineType(types: !388)
!388 = !{!284, !353, !351}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !377, file: !346, line: 159, baseType: !390, size: 64, offset: 128)
!390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !391)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!392 = !DISubroutineType(types: !393)
!393 = !{!188, !353, !351, !394}
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !346, line: 148, size: 20736, elements: !396)
!396 = !{!397, !402, !406, !407, !411}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !395, file: !346, line: 149, baseType: !398, size: 192)
!398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !399, size: 192, elements: !400)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!400 = !{!401}
!401 = !DISubrange(count: 3)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !395, file: !346, line: 150, baseType: !403, size: 4096, offset: 192)
!403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !399, size: 4096, elements: !404)
!404 = !{!405}
!405 = !DISubrange(count: 64)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !395, file: !346, line: 151, baseType: !188, size: 32, offset: 4288)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !395, file: !346, line: 152, baseType: !408, size: 16384, offset: 4320)
!408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 16384, elements: !409)
!409 = !{!410}
!410 = !DISubrange(count: 2048)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !395, file: !346, line: 153, baseType: !188, size: 32, offset: 20704)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !345, file: !346, line: 69, baseType: !413, size: 64, offset: 320)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !346, line: 138, size: 448, elements: !415)
!415 = !{!416, !420, !448, !450, !4307, !4335, !4339}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !414, file: !346, line: 139, baseType: !417, size: 64)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!418 = !DISubroutineType(types: !419)
!419 = !{null, !351}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !414, file: !346, line: 140, baseType: !421, size: 64, offset: 64)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !423)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !424, line: 230, size: 128, elements: !425)
!424 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!425 = !{!426, !441}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !423, file: !424, line: 231, baseType: !427, size: 64)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = !DISubroutineType(types: !429)
!429 = !{!430, !351, !435, !399}
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !241, line: 60, baseType: !431)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !432, line: 73, baseType: !433)
!432 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !432, line: 15, baseType: !434)
!434 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !424, line: 30, size: 128, elements: !437)
!437 = !{!438, !439}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !436, file: !424, line: 31, baseType: !284, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !436, file: !424, line: 32, baseType: !440, size: 16, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !241, line: 19, baseType: !220)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !423, file: !424, line: 232, baseType: !442, size: 64, offset: 64)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DISubroutineType(types: !444)
!444 = !{!430, !351, !435, !284, !445}
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !241, line: 55, baseType: !446)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !432, line: 72, baseType: !447)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !432, line: 16, baseType: !195)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !414, file: !346, line: 141, baseType: !449, size: 64, offset: 128)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !414, file: !346, line: 142, baseType: !451, size: 64, offset: 192)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !454)
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !424, line: 84, size: 320, elements: !455)
!455 = !{!456, !457, !461, !4304, !4305}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !454, file: !424, line: 85, baseType: !284, size: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !454, file: !424, line: 86, baseType: !458, size: 64, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = !DISubroutineType(types: !460)
!460 = !{!440, !351, !435, !188}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !454, file: !424, line: 88, baseType: !462, size: 64, offset: 128)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DISubroutineType(types: !464)
!464 = !{!440, !351, !465, !188}
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !424, line: 168, size: 448, elements: !467)
!467 = !{!468, !469, !470, !471, !4299, !4300}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !466, file: !424, line: 169, baseType: !436, size: 128)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !466, file: !424, line: 170, baseType: !445, size: 64, offset: 128)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !466, file: !424, line: 171, baseType: !197, size: 64, offset: 192)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !466, file: !424, line: 172, baseType: !472, size: 64, offset: 256)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DISubroutineType(types: !474)
!474 = !{!430, !475, !351, !465, !399, !646, !445}
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !111, line: 916, size: 1856, align: 32, elements: !477)
!477 = !{!478, !496, !4264, !4265, !4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4282, !4283, !4292, !4293, !4294, !4295, !4296, !4297, !4298}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !476, file: !111, line: 920, baseType: !479, size: 128)
!479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !476, file: !111, line: 917, size: 128, elements: !480)
!480 = !{!481, !487}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !479, file: !111, line: 918, baseType: !482, size: 64)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !483, line: 58, size: 64, elements: !484)
!483 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!484 = !{!485}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !482, file: !483, line: 59, baseType: !486, size: 64)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !479, file: !111, line: 919, baseType: !488, size: 128, align: 64)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !241, line: 216, size: 128, align: 64, elements: !489)
!489 = !{!490, !492}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !488, file: !241, line: 217, baseType: !491, size: 64)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !488, file: !241, line: 218, baseType: !493, size: 64, offset: 64)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DISubroutineType(types: !495)
!495 = !{null, !491}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !476, file: !111, line: 921, baseType: !497, size: 128, offset: 128)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !498, line: 8, size: 128, elements: !499)
!498 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!499 = !{!500, !504}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !497, file: !498, line: 9, baseType: !501, size: 64)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !503, line: 18, flags: DIFlagFwdDecl)
!503 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!504 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !497, file: !498, line: 10, baseType: !505, size: 64, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !503, line: 89, size: 1536, elements: !507)
!507 = !{!508, !509, !519, !527, !528, !543, !4232, !4234, !4246, !4247, !4248, !4249, !4250, !4256, !4257, !4258}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !506, file: !503, line: 91, baseType: !7, size: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !506, file: !503, line: 92, baseType: !510, size: 32, offset: 32)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !511, line: 277, baseType: !512)
!511 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !511, line: 277, size: 32, elements: !513)
!513 = !{!514}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !512, file: !511, line: 277, baseType: !515, size: 32)
!515 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !511, line: 70, baseType: !516)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !511, line: 65, size: 32, elements: !517)
!517 = !{!518}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !516, file: !511, line: 66, baseType: !7, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !506, file: !503, line: 93, baseType: !520, size: 128, offset: 64)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !521, line: 38, size: 128, elements: !522)
!521 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!522 = !{!523, !525}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !520, file: !521, line: 39, baseType: !524, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !520, file: !521, line: 39, baseType: !526, size: 64, offset: 64)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !506, file: !503, line: 94, baseType: !505, size: 64, offset: 192)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !506, file: !503, line: 95, baseType: !529, size: 128, offset: 256)
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !503, line: 47, size: 128, elements: !530)
!530 = !{!531, !540}
!531 = !DIDerivedType(tag: DW_TAG_member, scope: !529, file: !503, line: 48, baseType: !532, size: 64)
!532 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !529, file: !503, line: 48, size: 64, elements: !533)
!533 = !{!534, !539}
!534 = !DIDerivedType(tag: DW_TAG_member, scope: !532, file: !503, line: 49, baseType: !535, size: 64)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !532, file: !503, line: 49, size: 64, elements: !536)
!536 = !{!537, !538}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !535, file: !503, line: 50, baseType: !190, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !535, file: !503, line: 50, baseType: !190, size: 32, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !532, file: !503, line: 52, baseType: !242, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !529, file: !503, line: 54, baseType: !541, size: 64, offset: 64)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !215)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !506, file: !503, line: 96, baseType: !544, size: 64, offset: 384)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !111, line: 610, size: 4224, elements: !546)
!546 = !{!547, !548, !549, !557, !564, !565, !713, !3945, !3946, !3947, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !4208, !4216, !4217, !4218, !4228, !4229, !4230, !4231}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !545, file: !111, line: 611, baseType: !440, size: 16)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !545, file: !111, line: 612, baseType: !220, size: 16, offset: 16)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !545, file: !111, line: 613, baseType: !550, size: 32, offset: 32)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !551, line: 23, baseType: !552)
!551 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !551, line: 21, size: 32, elements: !553)
!553 = !{!554}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !552, file: !551, line: 22, baseType: !555, size: 32)
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !241, line: 32, baseType: !556)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !432, line: 49, baseType: !7)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !545, file: !111, line: 614, baseType: !558, size: 32, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !551, line: 28, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !551, line: 26, size: 32, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !559, file: !551, line: 27, baseType: !562, size: 32)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !241, line: 33, baseType: !563)
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !432, line: 50, baseType: !7)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !545, file: !111, line: 615, baseType: !7, size: 32, offset: 96)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !545, file: !111, line: 622, baseType: !566, size: 64, offset: 128)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !111, line: 1864, size: 1536, align: 512, elements: !569)
!569 = !{!570, !574, !587, !591, !597, !601, !607, !611, !615, !619, !623, !624, !630, !634, !660, !689, !693, !699, !704, !708, !709}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !568, file: !111, line: 1865, baseType: !571, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DISubroutineType(types: !573)
!573 = !{!505, !544, !505, !7}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !568, file: !111, line: 1866, baseType: !575, size: 64, offset: 64)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DISubroutineType(types: !577)
!577 = !{!284, !505, !544, !578}
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !580, line: 10, size: 128, elements: !581)
!580 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!581 = !{!582, !586}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !579, file: !580, line: 11, baseType: !583, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DISubroutineType(types: !585)
!585 = !{null, !197}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !579, file: !580, line: 12, baseType: !197, size: 64, offset: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !568, file: !111, line: 1867, baseType: !588, size: 64, offset: 128)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!188, !544, !188}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !568, file: !111, line: 1868, baseType: !592, size: 64, offset: 192)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = !DISubroutineType(types: !594)
!594 = !{!595, !544, !188}
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !111, line: 581, flags: DIFlagFwdDecl)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !568, file: !111, line: 1870, baseType: !598, size: 64, offset: 256)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DISubroutineType(types: !600)
!600 = !{!188, !505, !399, !188}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !568, file: !111, line: 1872, baseType: !602, size: 64, offset: 320)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DISubroutineType(types: !604)
!604 = !{!188, !544, !505, !440, !605}
!605 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !241, line: 30, baseType: !606)
!606 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !568, file: !111, line: 1873, baseType: !608, size: 64, offset: 384)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{!188, !505, !544, !505}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !568, file: !111, line: 1874, baseType: !612, size: 64, offset: 448)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DISubroutineType(types: !614)
!614 = !{!188, !544, !505}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !568, file: !111, line: 1875, baseType: !616, size: 64, offset: 512)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DISubroutineType(types: !618)
!618 = !{!188, !544, !505, !284}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !568, file: !111, line: 1876, baseType: !620, size: 64, offset: 576)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = !DISubroutineType(types: !622)
!622 = !{!188, !544, !505, !440}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !568, file: !111, line: 1877, baseType: !612, size: 64, offset: 640)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !568, file: !111, line: 1878, baseType: !625, size: 64, offset: 704)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DISubroutineType(types: !627)
!627 = !{!188, !544, !505, !440, !628}
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !241, line: 16, baseType: !629)
!629 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !241, line: 13, baseType: !190)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !568, file: !111, line: 1879, baseType: !631, size: 64, offset: 768)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = !DISubroutineType(types: !633)
!633 = !{!188, !544, !505, !544, !505, !7}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !568, file: !111, line: 1881, baseType: !635, size: 64, offset: 832)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DISubroutineType(types: !637)
!637 = !{!188, !505, !638}
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !111, line: 219, size: 640, elements: !640)
!640 = !{!641, !642, !643, !644, !645, !649, !657, !658, !659}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !639, file: !111, line: 220, baseType: !7, size: 32)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !639, file: !111, line: 221, baseType: !440, size: 16, offset: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !639, file: !111, line: 222, baseType: !550, size: 32, offset: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !639, file: !111, line: 223, baseType: !558, size: 32, offset: 96)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !639, file: !111, line: 224, baseType: !646, size: 64, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !241, line: 46, baseType: !647)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !432, line: 88, baseType: !648)
!648 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !639, file: !111, line: 225, baseType: !650, size: 128, offset: 192)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !651, line: 13, size: 128, elements: !652)
!651 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!652 = !{!653, !656}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !650, file: !651, line: 14, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !651, line: 8, baseType: !655)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !193, line: 30, baseType: !648)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !650, file: !651, line: 15, baseType: !434, size: 64, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !639, file: !111, line: 226, baseType: !650, size: 128, offset: 320)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !639, file: !111, line: 227, baseType: !650, size: 128, offset: 448)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !639, file: !111, line: 234, baseType: !475, size: 64, offset: 576)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !568, file: !111, line: 1882, baseType: !661, size: 64, offset: 896)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DISubroutineType(types: !663)
!663 = !{!188, !664, !666, !190, !7}
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !497)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !668, line: 22, size: 1152, elements: !669)
!668 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!669 = !{!670, !671, !672, !673, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !667, file: !668, line: 23, baseType: !190, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !667, file: !668, line: 24, baseType: !440, size: 16, offset: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !667, file: !668, line: 25, baseType: !7, size: 32, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !667, file: !668, line: 26, baseType: !674, size: 32, offset: 96)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !241, line: 104, baseType: !190)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !667, file: !668, line: 27, baseType: !242, size: 64, offset: 128)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !667, file: !668, line: 28, baseType: !242, size: 64, offset: 192)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !667, file: !668, line: 37, baseType: !242, size: 64, offset: 256)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !667, file: !668, line: 38, baseType: !628, size: 32, offset: 320)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !667, file: !668, line: 39, baseType: !628, size: 32, offset: 352)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !667, file: !668, line: 40, baseType: !550, size: 32, offset: 384)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !667, file: !668, line: 41, baseType: !558, size: 32, offset: 416)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !667, file: !668, line: 42, baseType: !646, size: 64, offset: 448)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !667, file: !668, line: 43, baseType: !650, size: 128, offset: 512)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !667, file: !668, line: 44, baseType: !650, size: 128, offset: 640)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !667, file: !668, line: 45, baseType: !650, size: 128, offset: 768)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !667, file: !668, line: 46, baseType: !650, size: 128, offset: 896)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !667, file: !668, line: 47, baseType: !242, size: 64, offset: 1024)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !667, file: !668, line: 48, baseType: !242, size: 64, offset: 1088)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !568, file: !111, line: 1883, baseType: !690, size: 64, offset: 960)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DISubroutineType(types: !692)
!692 = !{!430, !505, !399, !445}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !568, file: !111, line: 1884, baseType: !694, size: 64, offset: 1024)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DISubroutineType(types: !696)
!696 = !{!188, !544, !697, !242, !242}
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !111, line: 50, flags: DIFlagFwdDecl)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !568, file: !111, line: 1886, baseType: !700, size: 64, offset: 1088)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DISubroutineType(types: !702)
!702 = !{!188, !544, !703, !188}
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !568, file: !111, line: 1887, baseType: !705, size: 64, offset: 1152)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = !DISubroutineType(types: !707)
!707 = !{!188, !544, !505, !475, !7, !440}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !568, file: !111, line: 1890, baseType: !620, size: 64, offset: 1216)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !568, file: !111, line: 1891, baseType: !710, size: 64, offset: 1280)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!188, !544, !595, !188}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !545, file: !111, line: 623, baseType: !714, size: 64, offset: 192)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !111, line: 1416, size: 9472, elements: !716)
!716 = !{!717, !718, !719, !720, !721, !722, !771, !3559, !3641, !3724, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3740, !3744, !3745, !3746, !3747, !3750, !3751, !3752, !3793, !3819, !3820, !3821, !3822, !3823, !3824, !3827, !3828, !3835, !3836, !3837, !3838, !3839, !3898, !3899, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !715, file: !111, line: 1417, baseType: !258, size: 128)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !715, file: !111, line: 1418, baseType: !628, size: 32, offset: 128)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !715, file: !111, line: 1419, baseType: !215, size: 8, offset: 160)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !715, file: !111, line: 1420, baseType: !195, size: 64, offset: 192)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !715, file: !111, line: 1421, baseType: !646, size: 64, offset: 256)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !715, file: !111, line: 1422, baseType: !723, size: 64, offset: 320)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !111, line: 2228, size: 576, elements: !725)
!725 = !{!726, !727, !728, !734, !738, !742, !746, !750, !751, !761, !764, !765, !766, !768, !769, !770}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !724, file: !111, line: 2229, baseType: !284, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !724, file: !111, line: 2230, baseType: !188, size: 32, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !724, file: !111, line: 2238, baseType: !729, size: 64, offset: 128)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DISubroutineType(types: !731)
!731 = !{!188, !732}
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !111, line: 69, flags: DIFlagFwdDecl)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !724, file: !111, line: 2239, baseType: !735, size: 64, offset: 192)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !737)
!737 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !111, line: 70, flags: DIFlagFwdDecl)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !724, file: !111, line: 2240, baseType: !739, size: 64, offset: 256)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = !DISubroutineType(types: !741)
!741 = !{!505, !723, !188, !284, !197}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !724, file: !111, line: 2242, baseType: !743, size: 64, offset: 320)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = !DISubroutineType(types: !745)
!745 = !{null, !714}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !724, file: !111, line: 2243, baseType: !747, size: 64, offset: 384)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !749, line: 76, flags: DIFlagFwdDecl)
!749 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!750 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !724, file: !111, line: 2244, baseType: !723, size: 64, offset: 448)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !724, file: !111, line: 2245, baseType: !752, size: 64, offset: 512)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !241, line: 182, size: 64, elements: !753)
!753 = !{!754}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !752, file: !241, line: 183, baseType: !755, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !241, line: 186, size: 128, elements: !757)
!757 = !{!758, !759}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !756, file: !241, line: 187, baseType: !755, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !756, file: !241, line: 187, baseType: !760, size: 64, offset: 64)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !724, file: !111, line: 2247, baseType: !762, offset: 576)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !763, line: 187, elements: !372)
!763 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!764 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !724, file: !111, line: 2248, baseType: !762, offset: 576)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !724, file: !111, line: 2249, baseType: !762, offset: 576)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !724, file: !111, line: 2250, baseType: !767, offset: 576)
!767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, elements: !400)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !724, file: !111, line: 2252, baseType: !762, offset: 576)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !724, file: !111, line: 2253, baseType: !762, offset: 576)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !724, file: !111, line: 2254, baseType: !762, offset: 576)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !715, file: !111, line: 1423, baseType: !772, size: 64, offset: 384)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !774)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !111, line: 1935, size: 1472, elements: !775)
!775 = !{!776, !780, !784, !785, !789, !795, !799, !800, !801, !805, !809, !810, !811, !812, !818, !823, !824, !880, !881, !882, !883, !3543, !3558}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !774, file: !111, line: 1936, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DISubroutineType(types: !779)
!779 = !{!544, !714}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !774, file: !111, line: 1937, baseType: !781, size: 64, offset: 64)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DISubroutineType(types: !783)
!783 = !{null, !544}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !774, file: !111, line: 1938, baseType: !781, size: 64, offset: 128)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !774, file: !111, line: 1940, baseType: !786, size: 64, offset: 192)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DISubroutineType(types: !788)
!788 = !{null, !544, !188}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !774, file: !111, line: 1941, baseType: !790, size: 64, offset: 256)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!188, !544, !793}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !774, file: !111, line: 1942, baseType: !796, size: 64, offset: 320)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DISubroutineType(types: !798)
!798 = !{!188, !544}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !774, file: !111, line: 1943, baseType: !781, size: 64, offset: 384)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !774, file: !111, line: 1944, baseType: !743, size: 64, offset: 448)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !774, file: !111, line: 1945, baseType: !802, size: 64, offset: 512)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DISubroutineType(types: !804)
!804 = !{!188, !714, !188}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !774, file: !111, line: 1946, baseType: !806, size: 64, offset: 576)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{!188, !714}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !774, file: !111, line: 1947, baseType: !806, size: 64, offset: 640)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !774, file: !111, line: 1948, baseType: !806, size: 64, offset: 704)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !774, file: !111, line: 1949, baseType: !806, size: 64, offset: 768)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !774, file: !111, line: 1950, baseType: !813, size: 64, offset: 832)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DISubroutineType(types: !815)
!815 = !{!188, !505, !816}
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !111, line: 57, flags: DIFlagFwdDecl)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !774, file: !111, line: 1951, baseType: !819, size: 64, offset: 896)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DISubroutineType(types: !821)
!821 = !{!188, !714, !822, !399}
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !774, file: !111, line: 1952, baseType: !743, size: 64, offset: 960)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !774, file: !111, line: 1954, baseType: !825, size: 64, offset: 1024)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DISubroutineType(types: !827)
!827 = !{!188, !828, !505}
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !830, line: 16, size: 896, elements: !831)
!830 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!831 = !{!832, !833, !834, !835, !836, !837, !838, !839, !853, !875, !876, !879}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !829, file: !830, line: 17, baseType: !399, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !829, file: !830, line: 18, baseType: !445, size: 64, offset: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !829, file: !830, line: 19, baseType: !445, size: 64, offset: 128)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !829, file: !830, line: 20, baseType: !445, size: 64, offset: 192)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !829, file: !830, line: 21, baseType: !445, size: 64, offset: 256)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !829, file: !830, line: 22, baseType: !646, size: 64, offset: 320)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !829, file: !830, line: 23, baseType: !646, size: 64, offset: 384)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !829, file: !830, line: 24, baseType: !840, size: 192, offset: 448)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !841, line: 53, size: 192, elements: !842)
!841 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!842 = !{!843, !851, !852}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !840, file: !841, line: 54, baseType: !844, size: 64)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !845, line: 13, baseType: !846)
!845 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !241, line: 175, baseType: !847)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !241, line: 173, size: 64, elements: !848)
!848 = !{!849}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !847, file: !241, line: 174, baseType: !850, size: 64)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !191, line: 22, baseType: !655)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !840, file: !841, line: 55, baseType: !358, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !840, file: !841, line: 59, baseType: !258, size: 128, offset: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !829, file: !830, line: 25, baseType: !854, size: 64, offset: 640)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !856)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !830, line: 31, size: 256, elements: !857)
!857 = !{!858, !863, !867, !871}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !856, file: !830, line: 32, baseType: !859, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{!197, !828, !862}
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !856, file: !830, line: 33, baseType: !864, size: 64, offset: 64)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DISubroutineType(types: !866)
!866 = !{null, !828, !197}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !856, file: !830, line: 34, baseType: !868, size: 64, offset: 128)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DISubroutineType(types: !870)
!870 = !{!197, !828, !197, !862}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !856, file: !830, line: 35, baseType: !872, size: 64, offset: 192)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DISubroutineType(types: !874)
!874 = !{!188, !828, !197}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !829, file: !830, line: 26, baseType: !188, size: 32, offset: 704)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !829, file: !830, line: 27, baseType: !877, size: 64, offset: 768)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !476)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !829, file: !830, line: 28, baseType: !197, size: 64, offset: 832)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !774, file: !111, line: 1955, baseType: !825, size: 64, offset: 1088)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !774, file: !111, line: 1956, baseType: !825, size: 64, offset: 1152)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !774, file: !111, line: 1957, baseType: !825, size: 64, offset: 1216)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !774, file: !111, line: 1963, baseType: !884, size: 64, offset: 1280)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DISubroutineType(types: !886)
!886 = !{!188, !714, !887, !910}
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !889, line: 68, size: 512, align: 128, elements: !890)
!889 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!890 = !{!891, !892, !3535, !3542}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !888, file: !889, line: 69, baseType: !195, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, scope: !888, file: !889, line: 77, baseType: !893, size: 320, offset: 64)
!893 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !888, file: !889, line: 77, size: 320, elements: !894)
!894 = !{!895, !1098, !1102, !1130, !1138, !1144, !3486, !3534}
!895 = !DIDerivedType(tag: DW_TAG_member, scope: !893, file: !889, line: 78, baseType: !896, size: 320)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !893, file: !889, line: 78, size: 320, elements: !897)
!897 = !{!898, !899, !1096, !1097}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !896, file: !889, line: 84, baseType: !258, size: 128)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !896, file: !889, line: 86, baseType: !900, size: 64, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !111, line: 451, size: 1216, align: 64, elements: !902)
!902 = !{!903, !904, !912, !913, !918, !933, !942, !943, !944, !945, !1089, !1090, !1093, !1094, !1095}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !901, file: !111, line: 452, baseType: !544, size: 64)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !901, file: !111, line: 453, baseType: !905, size: 128, offset: 64)
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !906, line: 292, size: 128, elements: !907)
!906 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!907 = !{!908, !909, !911}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !905, file: !906, line: 293, baseType: !358)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !905, file: !906, line: 295, baseType: !910, size: 32)
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !241, line: 148, baseType: !7)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !905, file: !906, line: 296, baseType: !197, size: 64, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !901, file: !111, line: 454, baseType: !910, size: 32, offset: 192)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !901, file: !111, line: 455, baseType: !914, size: 32, offset: 224)
!914 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !241, line: 168, baseType: !915)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !241, line: 166, size: 32, elements: !916)
!916 = !{!917}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !915, file: !241, line: 167, baseType: !188, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !901, file: !111, line: 460, baseType: !919, size: 128, offset: 256)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !920, line: 125, size: 128, elements: !921)
!920 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!921 = !{!922, !932}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !919, file: !920, line: 126, baseType: !923, size: 64)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !920, line: 31, size: 64, elements: !924)
!924 = !{!925}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !923, file: !920, line: 32, baseType: !926, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !920, line: 24, size: 192, align: 64, elements: !928)
!928 = !{!929, !930, !931}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !927, file: !920, line: 25, baseType: !195, size: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !927, file: !920, line: 26, baseType: !926, size: 64, offset: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !927, file: !920, line: 27, baseType: !926, size: 64, offset: 128)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !919, file: !920, line: 127, baseType: !926, size: 64, offset: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !901, file: !111, line: 461, baseType: !934, size: 256, offset: 384)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !935, line: 35, size: 256, elements: !936)
!935 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!936 = !{!937, !938, !939, !941}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !934, file: !935, line: 36, baseType: !844, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !934, file: !935, line: 42, baseType: !844, size: 64, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !934, file: !935, line: 46, baseType: !940, offset: 128)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !359, line: 29, baseType: !366)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !934, file: !935, line: 47, baseType: !258, size: 128, offset: 128)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !901, file: !111, line: 462, baseType: !195, size: 64, offset: 640)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !901, file: !111, line: 463, baseType: !195, size: 64, offset: 704)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !901, file: !111, line: 464, baseType: !195, size: 64, offset: 768)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !901, file: !111, line: 465, baseType: !946, size: 64, offset: 832)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !948)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !111, line: 367, size: 1408, elements: !949)
!949 = !{!950, !954, !958, !962, !966, !970, !983, !989, !993, !998, !1002, !1006, !1010, !1053, !1057, !1063, !1064, !1065, !1069, !1074, !1078, !1085}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !948, file: !111, line: 368, baseType: !951, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DISubroutineType(types: !953)
!953 = !{!188, !887, !793}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !948, file: !111, line: 369, baseType: !955, size: 64, offset: 64)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DISubroutineType(types: !957)
!957 = !{!188, !475, !887}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !948, file: !111, line: 372, baseType: !959, size: 64, offset: 128)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = !DISubroutineType(types: !961)
!961 = !{!188, !900, !793}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !948, file: !111, line: 375, baseType: !963, size: 64, offset: 192)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = !DISubroutineType(types: !965)
!965 = !{!188, !887}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !948, file: !111, line: 381, baseType: !967, size: 64, offset: 256)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = !DISubroutineType(types: !969)
!969 = !{!188, !475, !900, !261, !7}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !948, file: !111, line: 383, baseType: !971, size: 64, offset: 320)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{null, !974}
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !976, line: 795, size: 256, elements: !977)
!976 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!977 = !{!978, !979, !980, !981, !982}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !975, file: !976, line: 796, baseType: !475, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !975, file: !976, line: 797, baseType: !900, size: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !975, file: !976, line: 799, baseType: !195, size: 64, offset: 128)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !975, file: !976, line: 800, baseType: !7, size: 32, offset: 192)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !975, file: !976, line: 801, baseType: !7, size: 32, offset: 224)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !948, file: !111, line: 385, baseType: !984, size: 64, offset: 384)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DISubroutineType(types: !986)
!986 = !{!188, !475, !900, !646, !7, !7, !987, !988}
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !948, file: !111, line: 388, baseType: !990, size: 64, offset: 448)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DISubroutineType(types: !992)
!992 = !{!188, !475, !900, !646, !7, !7, !887, !197}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !948, file: !111, line: 393, baseType: !994, size: 64, offset: 512)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = !DISubroutineType(types: !996)
!996 = !{!997, !900, !997}
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !241, line: 125, baseType: !242)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !948, file: !111, line: 394, baseType: !999, size: 64, offset: 576)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{null, !887, !7, !7}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !948, file: !111, line: 395, baseType: !1003, size: 64, offset: 640)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!188, !887, !910}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !948, file: !111, line: 396, baseType: !1007, size: 64, offset: 704)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{null, !887}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !948, file: !111, line: 397, baseType: !1011, size: 64, offset: 768)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!430, !1014, !1051}
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !111, line: 320, size: 384, elements: !1016)
!1016 = !{!1017, !1018, !1019, !1023, !1024, !1025, !1026, !1027}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1015, file: !111, line: 321, baseType: !475, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1015, file: !111, line: 326, baseType: !646, size: 64, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1015, file: !111, line: 327, baseType: !1020, size: 64, offset: 128)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{null, !1014, !434, !434}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1015, file: !111, line: 328, baseType: !197, size: 64, offset: 192)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1015, file: !111, line: 329, baseType: !188, size: 32, offset: 256)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1015, file: !111, line: 330, baseType: !218, size: 16, offset: 288)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1015, file: !111, line: 331, baseType: !218, size: 16, offset: 304)
!1027 = !DIDerivedType(tag: DW_TAG_member, scope: !1015, file: !111, line: 332, baseType: !1028, size: 64, offset: 320)
!1028 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1015, file: !111, line: 332, size: 64, elements: !1029)
!1029 = !{!1030, !1031}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1028, file: !111, line: 333, baseType: !7, size: 32)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1028, file: !111, line: 334, baseType: !1032, size: 64)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !976, line: 569, size: 448, elements: !1034)
!1034 = !{!1035, !1036, !1037}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1033, file: !976, line: 570, baseType: !887, size: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1033, file: !976, line: 571, baseType: !188, size: 32, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1033, file: !976, line: 572, baseType: !1038, size: 320, offset: 128)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1039, line: 14, baseType: !1040)
!1039 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1039, line: 29, size: 320, elements: !1041)
!1041 = !{!1042, !1043, !1044, !1050}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1040, file: !1039, line: 30, baseType: !7, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1040, file: !1039, line: 31, baseType: !197, size: 64, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1040, file: !1039, line: 32, baseType: !1045, size: 64, offset: 128)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1039, line: 16, baseType: !1046)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!188, !1049, !7, !188, !197}
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1040, file: !1039, line: 33, baseType: !258, size: 128, offset: 192)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !111, line: 64, flags: DIFlagFwdDecl)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !948, file: !111, line: 402, baseType: !1054, size: 64, offset: 832)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!188, !900, !887, !887, !5}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !948, file: !111, line: 404, baseType: !1058, size: 64, offset: 896)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!605, !887, !1061}
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1062, line: 305, baseType: !7)
!1062 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !948, file: !111, line: 405, baseType: !1007, size: 64, offset: 960)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !948, file: !111, line: 406, baseType: !963, size: 64, offset: 1024)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !948, file: !111, line: 407, baseType: !1066, size: 64, offset: 1088)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!188, !887, !195, !195}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !948, file: !111, line: 409, baseType: !1070, size: 64, offset: 1152)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{null, !887, !1073, !1073}
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !948, file: !111, line: 410, baseType: !1075, size: 64, offset: 1216)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!188, !900, !887}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !948, file: !111, line: 413, baseType: !1079, size: 64, offset: 1280)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!188, !1082, !475, !1084}
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !111, line: 61, flags: DIFlagFwdDecl)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !948, file: !111, line: 415, baseType: !1086, size: 64, offset: 1344)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{null, !475}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !901, file: !111, line: 466, baseType: !195, size: 64, offset: 896)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !901, file: !111, line: 467, baseType: !1091, size: 32, offset: 960)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1092, line: 8, baseType: !190)
!1092 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !901, file: !111, line: 468, baseType: !358, offset: 992)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !901, file: !111, line: 469, baseType: !258, size: 128, offset: 1024)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !901, file: !111, line: 470, baseType: !197, size: 64, offset: 1152)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !896, file: !889, line: 87, baseType: !195, size: 64, offset: 192)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !896, file: !889, line: 94, baseType: !195, size: 64, offset: 256)
!1098 = !DIDerivedType(tag: DW_TAG_member, scope: !893, file: !889, line: 96, baseType: !1099, size: 64)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !893, file: !889, line: 96, size: 64, elements: !1100)
!1100 = !{!1101}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1099, file: !889, line: 101, baseType: !240, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, scope: !893, file: !889, line: 103, baseType: !1103, size: 320)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !893, file: !889, line: 103, size: 320, elements: !1104)
!1104 = !{!1105, !1115, !1118, !1119}
!1105 = !DIDerivedType(tag: DW_TAG_member, scope: !1103, file: !889, line: 104, baseType: !1106, size: 128)
!1106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1103, file: !889, line: 104, size: 128, elements: !1107)
!1107 = !{!1108, !1109}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1106, file: !889, line: 105, baseType: !258, size: 128)
!1109 = !DIDerivedType(tag: DW_TAG_member, scope: !1106, file: !889, line: 106, baseType: !1110, size: 128)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1106, file: !889, line: 106, size: 128, elements: !1111)
!1111 = !{!1112, !1113, !1114}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1110, file: !889, line: 107, baseType: !887, size: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1110, file: !889, line: 109, baseType: !188, size: 32, offset: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1110, file: !889, line: 110, baseType: !188, size: 32, offset: 96)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1103, file: !889, line: 117, baseType: !1116, size: 64, offset: 128)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1117 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !889, line: 117, flags: DIFlagFwdDecl)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1103, file: !889, line: 119, baseType: !197, size: 64, offset: 192)
!1119 = !DIDerivedType(tag: DW_TAG_member, scope: !1103, file: !889, line: 120, baseType: !1120, size: 64, offset: 256)
!1120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1103, file: !889, line: 120, size: 64, elements: !1121)
!1121 = !{!1122, !1123, !1124}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1120, file: !889, line: 121, baseType: !197, size: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1120, file: !889, line: 122, baseType: !195, size: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, scope: !1120, file: !889, line: 123, baseType: !1125, size: 32)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1120, file: !889, line: 123, size: 32, elements: !1126)
!1126 = !{!1127, !1128, !1129}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1125, file: !889, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1125, file: !889, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1125, file: !889, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1130 = !DIDerivedType(tag: DW_TAG_member, scope: !893, file: !889, line: 130, baseType: !1131, size: 192)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !893, file: !889, line: 130, size: 192, elements: !1132)
!1132 = !{!1133, !1134, !1135, !1136, !1137}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1131, file: !889, line: 131, baseType: !195, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1131, file: !889, line: 134, baseType: !215, size: 8, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1131, file: !889, line: 135, baseType: !215, size: 8, offset: 72)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1131, file: !889, line: 136, baseType: !914, size: 32, offset: 96)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1131, file: !889, line: 137, baseType: !7, size: 32, offset: 128)
!1138 = !DIDerivedType(tag: DW_TAG_member, scope: !893, file: !889, line: 139, baseType: !1139, size: 256)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !893, file: !889, line: 139, size: 256, elements: !1140)
!1140 = !{!1141, !1142, !1143}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1139, file: !889, line: 140, baseType: !195, size: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1139, file: !889, line: 141, baseType: !914, size: 32, offset: 64)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1139, file: !889, line: 143, baseType: !258, size: 128, offset: 128)
!1144 = !DIDerivedType(tag: DW_TAG_member, scope: !893, file: !889, line: 145, baseType: !1145, size: 256)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !893, file: !889, line: 145, size: 256, elements: !1146)
!1146 = !{!1147, !1148, !1151, !1152, !3485}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1145, file: !889, line: 146, baseType: !195, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1145, file: !889, line: 147, baseType: !1149, size: 64, offset: 64)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1150, line: 509, baseType: !887)
!1150 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1145, file: !889, line: 148, baseType: !195, size: 64, offset: 128)
!1152 = !DIDerivedType(tag: DW_TAG_member, scope: !1145, file: !889, line: 149, baseType: !1153, size: 64, offset: 192)
!1153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1145, file: !889, line: 149, size: 64, elements: !1154)
!1154 = !{!1155, !3484}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1153, file: !889, line: 150, baseType: !1156, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !889, line: 388, size: 7296, elements: !1158)
!1158 = !{!1159, !3482}
!1159 = !DIDerivedType(tag: DW_TAG_member, scope: !1157, file: !889, line: 389, baseType: !1160, size: 7296)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1157, file: !889, line: 389, size: 7296, elements: !1161)
!1161 = !{!1162, !1280, !1281, !1282, !1286, !1287, !1288, !1289, !1290, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1331, !1337, !1340, !1380, !1381, !3466, !3467, !3470, !3471, !3472, !3475, !3476, !3477, !3480, !3481}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1160, file: !889, line: 390, baseType: !1163, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !889, line: 305, size: 1472, elements: !1165)
!1165 = !{!1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1180, !1181, !1186, !1187, !1190, !1274, !1275, !1276, !1277, !1278}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1164, file: !889, line: 308, baseType: !195, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1164, file: !889, line: 309, baseType: !195, size: 64, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1164, file: !889, line: 313, baseType: !1163, size: 64, offset: 128)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1164, file: !889, line: 313, baseType: !1163, size: 64, offset: 192)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1164, file: !889, line: 315, baseType: !927, size: 192, align: 64, offset: 256)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1164, file: !889, line: 323, baseType: !195, size: 64, offset: 448)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1164, file: !889, line: 327, baseType: !1156, size: 64, offset: 512)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1164, file: !889, line: 333, baseType: !1174, size: 64, offset: 576)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1150, line: 284, baseType: !1175)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1150, line: 284, size: 64, elements: !1176)
!1176 = !{!1177}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1175, file: !1150, line: 284, baseType: !1178, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1179, line: 19, baseType: !195)
!1179 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1164, file: !889, line: 334, baseType: !195, size: 64, offset: 640)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1164, file: !889, line: 343, baseType: !1182, size: 256, offset: 704)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1164, file: !889, line: 340, size: 256, elements: !1183)
!1183 = !{!1184, !1185}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1182, file: !889, line: 341, baseType: !927, size: 192, align: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1182, file: !889, line: 342, baseType: !195, size: 64, offset: 192)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1164, file: !889, line: 351, baseType: !258, size: 128, offset: 960)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1164, file: !889, line: 353, baseType: !1188, size: 64, offset: 1088)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !889, line: 353, flags: DIFlagFwdDecl)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1164, file: !889, line: 356, baseType: !1191, size: 64, offset: 1152)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!1192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1193)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1194)
!1194 = !{!1195, !1199, !1200, !1204, !1208, !1248, !1252, !1256, !1260, !1261, !1262, !1266, !1270}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1193, file: !14, line: 558, baseType: !1196, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{null, !1163}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1193, file: !14, line: 559, baseType: !1196, size: 64, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1193, file: !14, line: 560, baseType: !1201, size: 64, offset: 128)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!188, !1163, !195}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1193, file: !14, line: 561, baseType: !1205, size: 64, offset: 192)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!188, !1163}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1193, file: !14, line: 562, baseType: !1209, size: 64, offset: 256)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!1212, !1213}
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !889, line: 682, baseType: !7)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1215)
!1215 = !{!1216, !1217, !1218, !1219, !1220, !1221, !1228, !1235, !1241, !1242, !1243, !1245, !1247}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1214, file: !14, line: 509, baseType: !1163, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1214, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1214, file: !14, line: 511, baseType: !910, size: 32, offset: 96)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1214, file: !14, line: 512, baseType: !195, size: 64, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1214, file: !14, line: 513, baseType: !195, size: 64, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1214, file: !14, line: 514, baseType: !1222, size: 64, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1150, line: 385, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1150, line: 385, size: 64, elements: !1225)
!1225 = !{!1226}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1224, file: !1150, line: 385, baseType: !1227, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1179, line: 15, baseType: !195)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1214, file: !14, line: 516, baseType: !1229, size: 64, offset: 320)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1150, line: 359, baseType: !1231)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1150, line: 359, size: 64, elements: !1232)
!1232 = !{!1233}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1231, file: !1150, line: 359, baseType: !1234, size: 64)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1179, line: 16, baseType: !195)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1214, file: !14, line: 519, baseType: !1236, size: 64, offset: 384)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1179, line: 21, baseType: !1237)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1179, line: 21, size: 64, elements: !1238)
!1238 = !{!1239}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1237, file: !1179, line: 21, baseType: !1240, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1179, line: 14, baseType: !195)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1214, file: !14, line: 521, baseType: !887, size: 64, offset: 448)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1214, file: !14, line: 522, baseType: !887, size: 64, offset: 512)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1214, file: !14, line: 528, baseType: !1244, size: 64, offset: 576)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1214, file: !14, line: 532, baseType: !1246, size: 64, offset: 640)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1214, file: !14, line: 536, baseType: !1149, size: 64, offset: 704)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1193, file: !14, line: 563, baseType: !1249, size: 64, offset: 320)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{!1212, !1213, !13}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1193, file: !14, line: 565, baseType: !1253, size: 64, offset: 384)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{null, !1213, !195, !195}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1193, file: !14, line: 567, baseType: !1257, size: 64, offset: 448)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!195, !1163}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1193, file: !14, line: 571, baseType: !1209, size: 64, offset: 512)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1193, file: !14, line: 574, baseType: !1209, size: 64, offset: 576)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1193, file: !14, line: 579, baseType: !1263, size: 64, offset: 640)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!188, !1163, !195, !197, !188, !188}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1193, file: !14, line: 585, baseType: !1267, size: 64, offset: 704)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!284, !1163}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1193, file: !14, line: 615, baseType: !1271, size: 64, offset: 768)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{!887, !1163, !195}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1164, file: !889, line: 359, baseType: !195, size: 64, offset: 1216)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1164, file: !889, line: 361, baseType: !475, size: 64, offset: 1280)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1164, file: !889, line: 362, baseType: !197, size: 64, offset: 1344)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1164, file: !889, line: 365, baseType: !844, size: 64, offset: 1408)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1164, file: !889, line: 373, baseType: !1279, offset: 1472)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !889, line: 296, elements: !372)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1160, file: !889, line: 391, baseType: !923, size: 64, offset: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1160, file: !889, line: 392, baseType: !242, size: 64, offset: 128)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1160, file: !889, line: 394, baseType: !1283, size: 64, offset: 192)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!195, !475, !195, !195, !195, !195}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1160, file: !889, line: 398, baseType: !195, size: 64, offset: 256)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1160, file: !889, line: 399, baseType: !195, size: 64, offset: 320)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1160, file: !889, line: 405, baseType: !195, size: 64, offset: 384)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1160, file: !889, line: 406, baseType: !195, size: 64, offset: 448)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1160, file: !889, line: 407, baseType: !1291, size: 64, offset: 512)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1150, line: 286, baseType: !1293)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1150, line: 286, size: 64, elements: !1294)
!1294 = !{!1295}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1293, file: !1150, line: 286, baseType: !1296, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1179, line: 18, baseType: !195)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1160, file: !889, line: 416, baseType: !914, size: 32, offset: 576)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1160, file: !889, line: 428, baseType: !914, size: 32, offset: 608)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1160, file: !889, line: 437, baseType: !914, size: 32, offset: 640)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1160, file: !889, line: 447, baseType: !914, size: 32, offset: 672)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1160, file: !889, line: 450, baseType: !844, size: 64, offset: 704)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1160, file: !889, line: 452, baseType: !188, size: 32, offset: 768)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1160, file: !889, line: 454, baseType: !358, offset: 800)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1160, file: !889, line: 457, baseType: !934, size: 256, offset: 832)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1160, file: !889, line: 459, baseType: !258, size: 128, offset: 1088)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1160, file: !889, line: 466, baseType: !195, size: 64, offset: 1216)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1160, file: !889, line: 467, baseType: !195, size: 64, offset: 1280)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1160, file: !889, line: 469, baseType: !195, size: 64, offset: 1344)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1160, file: !889, line: 470, baseType: !195, size: 64, offset: 1408)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1160, file: !889, line: 471, baseType: !846, size: 64, offset: 1472)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1160, file: !889, line: 472, baseType: !195, size: 64, offset: 1536)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1160, file: !889, line: 473, baseType: !195, size: 64, offset: 1600)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1160, file: !889, line: 474, baseType: !195, size: 64, offset: 1664)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1160, file: !889, line: 475, baseType: !195, size: 64, offset: 1728)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1160, file: !889, line: 477, baseType: !358, offset: 1792)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1160, file: !889, line: 478, baseType: !195, size: 64, offset: 1792)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1160, file: !889, line: 478, baseType: !195, size: 64, offset: 1856)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1160, file: !889, line: 478, baseType: !195, size: 64, offset: 1920)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1160, file: !889, line: 478, baseType: !195, size: 64, offset: 1984)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1160, file: !889, line: 479, baseType: !195, size: 64, offset: 2048)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1160, file: !889, line: 479, baseType: !195, size: 64, offset: 2112)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1160, file: !889, line: 479, baseType: !195, size: 64, offset: 2176)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1160, file: !889, line: 480, baseType: !195, size: 64, offset: 2240)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1160, file: !889, line: 480, baseType: !195, size: 64, offset: 2304)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1160, file: !889, line: 480, baseType: !195, size: 64, offset: 2368)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1160, file: !889, line: 480, baseType: !195, size: 64, offset: 2432)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1160, file: !889, line: 482, baseType: !1328, size: 2816, offset: 2496)
!1328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 2816, elements: !1329)
!1329 = !{!1330}
!1330 = !DISubrange(count: 44)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1160, file: !889, line: 488, baseType: !1332, size: 256, offset: 5312)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1333, line: 60, size: 256, elements: !1334)
!1333 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1334 = !{!1335}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1332, file: !1333, line: 61, baseType: !1336, size: 256)
!1336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !844, size: 256, elements: !292)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1160, file: !889, line: 490, baseType: !1338, size: 64, offset: 5568)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !889, line: 490, flags: DIFlagFwdDecl)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1160, file: !889, line: 493, baseType: !1341, size: 896, offset: 5632)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1342, line: 53, baseType: !1343)
!1342 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1342, line: 13, size: 896, elements: !1344)
!1344 = !{!1345, !1346, !1347, !1348, !1351, !1352, !1353, !1354, !1374, !1375, !1376}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1343, file: !1342, line: 18, baseType: !242, size: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1343, file: !1342, line: 28, baseType: !846, size: 64, offset: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1343, file: !1342, line: 31, baseType: !934, size: 256, offset: 128)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1343, file: !1342, line: 32, baseType: !1349, size: 64, offset: 384)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1342, line: 32, flags: DIFlagFwdDecl)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1343, file: !1342, line: 37, baseType: !220, size: 16, offset: 448)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1343, file: !1342, line: 40, baseType: !840, size: 192, offset: 512)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1343, file: !1342, line: 41, baseType: !197, size: 64, offset: 704)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1343, file: !1342, line: 42, baseType: !1355, size: 64, offset: 768)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1357)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1358, line: 13, size: 896, elements: !1359)
!1358 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1359 = !{!1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1357, file: !1358, line: 14, baseType: !197, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1357, file: !1358, line: 15, baseType: !195, size: 64, offset: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1357, file: !1358, line: 17, baseType: !195, size: 64, offset: 128)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1357, file: !1358, line: 17, baseType: !195, size: 64, offset: 192)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1357, file: !1358, line: 19, baseType: !434, size: 64, offset: 256)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1357, file: !1358, line: 21, baseType: !434, size: 64, offset: 320)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1357, file: !1358, line: 22, baseType: !434, size: 64, offset: 384)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1357, file: !1358, line: 23, baseType: !434, size: 64, offset: 448)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1357, file: !1358, line: 24, baseType: !434, size: 64, offset: 512)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1357, file: !1358, line: 25, baseType: !434, size: 64, offset: 576)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1357, file: !1358, line: 26, baseType: !434, size: 64, offset: 640)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1357, file: !1358, line: 27, baseType: !434, size: 64, offset: 704)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1357, file: !1358, line: 28, baseType: !434, size: 64, offset: 768)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1357, file: !1358, line: 29, baseType: !434, size: 64, offset: 832)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1343, file: !1342, line: 44, baseType: !914, size: 32, offset: 832)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1343, file: !1342, line: 50, baseType: !218, size: 16, offset: 864)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1343, file: !1342, line: 51, baseType: !1377, size: 16, offset: 880)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !191, line: 18, baseType: !1378)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !193, line: 23, baseType: !1379)
!1379 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1160, file: !889, line: 495, baseType: !195, size: 64, offset: 6528)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1160, file: !889, line: 497, baseType: !1382, size: 64, offset: 6592)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !889, line: 381, size: 384, elements: !1384)
!1384 = !{!1385, !1386, !3465}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1383, file: !889, line: 382, baseType: !914, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1383, file: !889, line: 383, baseType: !1387, size: 128, offset: 64)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !889, line: 376, size: 128, elements: !1388)
!1388 = !{!1389, !3463}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1387, file: !889, line: 377, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1392, line: 640, size: 48640, elements: !1393)
!1392 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1393 = !{!1394, !1400, !1402, !1403, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1420, !1438, !1449, !1532, !1533, !1534, !1545, !1546, !1548, !1549, !1550, !1551, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1629, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1666, !1668, !1669, !1670, !1682, !1683, !1684, !1685, !1686, !1687, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1711, !1716, !1900, !1901, !1902, !1903, !1907, !1910, !1913, !1916, !1919, !1922, !2023, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2069, !2070, !2071, !2072, !2073, !2078, !2079, !2080, !2083, !2084, !3110, !3119, !3122, !3123, !3124, !3127, !3128, !3207, !3208, !3211, !3212, !3215, !3216, !3217, !3221, !3222, !3223, !3236, !3237, !3238, !3248, !3253, !3256, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1391, file: !1392, line: 646, baseType: !1395, size: 128)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1396, line: 56, size: 128, elements: !1397)
!1396 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1397 = !{!1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1395, file: !1396, line: 57, baseType: !195, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1395, file: !1396, line: 58, baseType: !190, size: 32, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1391, file: !1392, line: 649, baseType: !1401, size: 64, offset: 128)
!1401 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !434)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1391, file: !1392, line: 657, baseType: !197, size: 64, offset: 192)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1391, file: !1392, line: 658, baseType: !1404, size: 32, offset: 256)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1405, line: 113, baseType: !1406)
!1405 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1405, line: 111, size: 32, elements: !1407)
!1407 = !{!1408}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1406, file: !1405, line: 112, baseType: !914, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1391, file: !1392, line: 660, baseType: !7, size: 32, offset: 288)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1391, file: !1392, line: 661, baseType: !7, size: 32, offset: 320)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1391, file: !1392, line: 684, baseType: !188, size: 32, offset: 352)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1391, file: !1392, line: 686, baseType: !188, size: 32, offset: 384)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1391, file: !1392, line: 687, baseType: !188, size: 32, offset: 416)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1391, file: !1392, line: 688, baseType: !188, size: 32, offset: 448)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1391, file: !1392, line: 689, baseType: !7, size: 32, offset: 480)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1391, file: !1392, line: 691, baseType: !1417, size: 64, offset: 512)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1419)
!1419 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1392, line: 691, flags: DIFlagFwdDecl)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1391, file: !1392, line: 692, baseType: !1421, size: 832, offset: 576)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1392, line: 451, size: 832, elements: !1422)
!1422 = !{!1423, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1421, file: !1392, line: 453, baseType: !1424, size: 128)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1392, line: 325, size: 128, elements: !1425)
!1425 = !{!1426, !1427}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1424, file: !1392, line: 326, baseType: !195, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1424, file: !1392, line: 327, baseType: !190, size: 32, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1421, file: !1392, line: 454, baseType: !927, size: 192, align: 64, offset: 128)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1421, file: !1392, line: 455, baseType: !258, size: 128, offset: 320)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1421, file: !1392, line: 456, baseType: !7, size: 32, offset: 448)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1421, file: !1392, line: 458, baseType: !242, size: 64, offset: 512)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1421, file: !1392, line: 459, baseType: !242, size: 64, offset: 576)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1421, file: !1392, line: 460, baseType: !242, size: 64, offset: 640)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1421, file: !1392, line: 461, baseType: !242, size: 64, offset: 704)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1421, file: !1392, line: 463, baseType: !242, size: 64, offset: 768)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1421, file: !1392, line: 465, baseType: !1437, offset: 832)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1392, line: 415, elements: !372)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1391, file: !1392, line: 693, baseType: !1439, size: 384, offset: 1408)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1392, line: 489, size: 384, elements: !1440)
!1440 = !{!1441, !1442, !1443, !1444, !1445, !1446, !1447}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1439, file: !1392, line: 490, baseType: !258, size: 128)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1439, file: !1392, line: 491, baseType: !195, size: 64, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1439, file: !1392, line: 492, baseType: !195, size: 64, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1439, file: !1392, line: 493, baseType: !7, size: 32, offset: 256)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1439, file: !1392, line: 494, baseType: !220, size: 16, offset: 288)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1439, file: !1392, line: 495, baseType: !220, size: 16, offset: 304)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1439, file: !1392, line: 497, baseType: !1448, size: 64, offset: 320)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1391, file: !1392, line: 697, baseType: !1450, size: 1792, offset: 1792)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1392, line: 507, size: 1792, elements: !1451)
!1451 = !{!1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1529, !1530}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1450, file: !1392, line: 508, baseType: !927, size: 192, align: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1450, file: !1392, line: 515, baseType: !242, size: 64, offset: 192)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1450, file: !1392, line: 516, baseType: !242, size: 64, offset: 256)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1450, file: !1392, line: 517, baseType: !242, size: 64, offset: 320)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1450, file: !1392, line: 518, baseType: !242, size: 64, offset: 384)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1450, file: !1392, line: 519, baseType: !242, size: 64, offset: 448)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1450, file: !1392, line: 526, baseType: !850, size: 64, offset: 512)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1450, file: !1392, line: 527, baseType: !242, size: 64, offset: 576)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1450, file: !1392, line: 528, baseType: !7, size: 32, offset: 640)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1450, file: !1392, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1450, file: !1392, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1450, file: !1392, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1450, file: !1392, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1450, file: !1392, line: 563, baseType: !1466, size: 512, offset: 704)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1467)
!1467 = !{!1468, !1476, !1477, !1482, !1525, !1526, !1527, !1528}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1466, file: !20, line: 119, baseType: !1469, size: 256)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1470, line: 9, size: 256, elements: !1471)
!1470 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1471 = !{!1472, !1473}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1469, file: !1470, line: 10, baseType: !927, size: 192, align: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1469, file: !1470, line: 11, baseType: !1474, size: 64, offset: 192)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1475, line: 29, baseType: !850)
!1475 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1466, file: !20, line: 120, baseType: !1474, size: 64, offset: 256)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1466, file: !20, line: 121, baseType: !1478, size: 64, offset: 320)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!19, !1481}
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1466, file: !20, line: 122, baseType: !1483, size: 64, offset: 384)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1485)
!1485 = !{!1486, !1506, !1507, !1510, !1515, !1516, !1520, !1524}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1484, file: !20, line: 160, baseType: !1487, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1489)
!1489 = !{!1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1488, file: !20, line: 215, baseType: !940)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1488, file: !20, line: 216, baseType: !7, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1488, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1488, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1488, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1488, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1488, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1488, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1488, file: !20, line: 233, baseType: !1474, size: 64, offset: 128)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1488, file: !20, line: 234, baseType: !1481, size: 64, offset: 192)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1488, file: !20, line: 235, baseType: !1474, size: 64, offset: 256)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1488, file: !20, line: 236, baseType: !1481, size: 64, offset: 320)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1488, file: !20, line: 237, baseType: !1503, size: 4096, offset: 512)
!1503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1484, size: 4096, elements: !1504)
!1504 = !{!1505}
!1505 = !DISubrange(count: 8)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1484, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1484, file: !20, line: 162, baseType: !1508, size: 32, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !241, line: 27, baseType: !1509)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !432, line: 96, baseType: !188)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1484, file: !20, line: 163, baseType: !1511, size: 32, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !511, line: 276, baseType: !1512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !511, line: 276, size: 32, elements: !1513)
!1513 = !{!1514}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1512, file: !511, line: 276, baseType: !515, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1484, file: !20, line: 164, baseType: !1481, size: 64, offset: 192)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1484, file: !20, line: 165, baseType: !1517, size: 128, offset: 256)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1470, line: 14, size: 128, elements: !1518)
!1518 = !{!1519}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1517, file: !1470, line: 15, baseType: !919, size: 128)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1484, file: !20, line: 166, baseType: !1521, size: 64, offset: 384)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!1474}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1484, file: !20, line: 167, baseType: !1474, size: 64, offset: 448)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1466, file: !20, line: 123, baseType: !213, size: 8, offset: 448)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1466, file: !20, line: 124, baseType: !213, size: 8, offset: 456)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1466, file: !20, line: 125, baseType: !213, size: 8, offset: 464)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1466, file: !20, line: 126, baseType: !213, size: 8, offset: 472)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1450, file: !1392, line: 572, baseType: !1466, size: 512, offset: 1216)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1450, file: !1392, line: 580, baseType: !1531, size: 64, offset: 1728)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1391, file: !1392, line: 721, baseType: !7, size: 32, offset: 3584)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1391, file: !1392, line: 722, baseType: !188, size: 32, offset: 3616)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1391, file: !1392, line: 723, baseType: !1535, size: 64, offset: 3648)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1537)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1538, line: 17, baseType: !1539)
!1538 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1538, line: 17, size: 64, elements: !1540)
!1540 = !{!1541}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1539, file: !1538, line: 17, baseType: !1542, size: 64)
!1542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 64, elements: !1543)
!1543 = !{!1544}
!1544 = !DISubrange(count: 1)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1391, file: !1392, line: 724, baseType: !1537, size: 64, offset: 3712)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1391, file: !1392, line: 749, baseType: !1547, offset: 3776)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1392, line: 290, elements: !372)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1391, file: !1392, line: 751, baseType: !258, size: 128, offset: 3776)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1391, file: !1392, line: 757, baseType: !1156, size: 64, offset: 3904)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1391, file: !1392, line: 758, baseType: !1156, size: 64, offset: 3968)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1391, file: !1392, line: 761, baseType: !1552, size: 320, offset: 4032)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1333, line: 34, size: 320, elements: !1553)
!1553 = !{!1554, !1555}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1552, file: !1333, line: 35, baseType: !242, size: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1552, file: !1333, line: 36, baseType: !1556, size: 256, offset: 64)
!1556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 256, elements: !292)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1391, file: !1392, line: 766, baseType: !188, size: 32, offset: 4352)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1391, file: !1392, line: 767, baseType: !188, size: 32, offset: 4384)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1391, file: !1392, line: 768, baseType: !188, size: 32, offset: 4416)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1391, file: !1392, line: 770, baseType: !188, size: 32, offset: 4448)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1391, file: !1392, line: 772, baseType: !195, size: 64, offset: 4480)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1391, file: !1392, line: 775, baseType: !7, size: 32, offset: 4544)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1391, file: !1392, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1391, file: !1392, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1391, file: !1392, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1391, file: !1392, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1391, file: !1392, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1391, file: !1392, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1391, file: !1392, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1391, file: !1392, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1391, file: !1392, line: 831, baseType: !195, size: 64, offset: 4672)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1391, file: !1392, line: 833, baseType: !1573, size: 384, offset: 4736)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1574)
!1574 = !{!1575, !1580}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1573, file: !25, line: 26, baseType: !1576, size: 64)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!434, !1579}
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, scope: !1573, file: !25, line: 27, baseType: !1581, size: 320, offset: 64)
!1581 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1573, file: !25, line: 27, size: 320, elements: !1582)
!1582 = !{!1583, !1592, !1619}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1581, file: !25, line: 36, baseType: !1584, size: 320)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1581, file: !25, line: 29, size: 320, elements: !1585)
!1585 = !{!1586, !1587, !1588, !1589, !1590, !1591}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1584, file: !25, line: 30, baseType: !316, size: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1584, file: !25, line: 31, baseType: !190, size: 32, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1584, file: !25, line: 32, baseType: !190, size: 32, offset: 96)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1584, file: !25, line: 33, baseType: !190, size: 32, offset: 128)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1584, file: !25, line: 34, baseType: !242, size: 64, offset: 192)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1584, file: !25, line: 35, baseType: !316, size: 64, offset: 256)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1581, file: !25, line: 46, baseType: !1593, size: 192)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1581, file: !25, line: 38, size: 192, elements: !1594)
!1594 = !{!1595, !1596, !1597, !1618}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1593, file: !25, line: 39, baseType: !1508, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1593, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, scope: !1593, file: !25, line: 41, baseType: !1598, size: 64, offset: 64)
!1598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1593, file: !25, line: 41, size: 64, elements: !1599)
!1599 = !{!1600, !1608}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1598, file: !25, line: 42, baseType: !1601, size: 64)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1603, line: 7, size: 128, elements: !1604)
!1603 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1604 = !{!1605, !1607}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1602, file: !1603, line: 8, baseType: !1606, size: 64)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !432, line: 93, baseType: !648)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1602, file: !1603, line: 9, baseType: !648, size: 64, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1598, file: !25, line: 43, baseType: !1609, size: 64)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1611, line: 7, size: 64, elements: !1612)
!1611 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1612 = !{!1613, !1617}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1610, file: !1611, line: 8, baseType: !1614, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1611, line: 5, baseType: !1615)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !191, line: 20, baseType: !1616)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !193, line: 26, baseType: !188)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1610, file: !1611, line: 9, baseType: !1615, size: 32, offset: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1593, file: !25, line: 45, baseType: !242, size: 64, offset: 128)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1581, file: !25, line: 54, baseType: !1620, size: 256)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1581, file: !25, line: 48, size: 256, elements: !1621)
!1621 = !{!1622, !1625, !1626, !1627, !1628}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1620, file: !25, line: 49, baseType: !1623, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1620, file: !25, line: 50, baseType: !188, size: 32, offset: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1620, file: !25, line: 51, baseType: !188, size: 32, offset: 96)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1620, file: !25, line: 52, baseType: !195, size: 64, offset: 128)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1620, file: !25, line: 53, baseType: !195, size: 64, offset: 192)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1391, file: !1392, line: 835, baseType: !1630, size: 32, offset: 5120)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !241, line: 22, baseType: !1631)
!1631 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !432, line: 28, baseType: !188)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1391, file: !1392, line: 836, baseType: !1630, size: 32, offset: 5152)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1391, file: !1392, line: 840, baseType: !195, size: 64, offset: 5184)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1391, file: !1392, line: 849, baseType: !1390, size: 64, offset: 5248)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1391, file: !1392, line: 852, baseType: !1390, size: 64, offset: 5312)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1391, file: !1392, line: 857, baseType: !258, size: 128, offset: 5376)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1391, file: !1392, line: 858, baseType: !258, size: 128, offset: 5504)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1391, file: !1392, line: 859, baseType: !1390, size: 64, offset: 5632)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1391, file: !1392, line: 867, baseType: !258, size: 128, offset: 5696)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1391, file: !1392, line: 868, baseType: !258, size: 128, offset: 5824)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1391, file: !1392, line: 871, baseType: !1642, size: 64, offset: 5952)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !120, line: 59, size: 768, elements: !1644)
!1644 = !{!1645, !1646, !1647, !1648, !1650, !1651, !1657, !1658}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1643, file: !120, line: 61, baseType: !1404, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1643, file: !120, line: 62, baseType: !7, size: 32, offset: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1643, file: !120, line: 63, baseType: !358, offset: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1643, file: !120, line: 65, baseType: !1649, size: 256, offset: 64)
!1649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !752, size: 256, elements: !292)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1643, file: !120, line: 66, baseType: !752, size: 64, offset: 320)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1643, file: !120, line: 68, baseType: !1652, size: 128, offset: 384)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1039, line: 40, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1039, line: 36, size: 128, elements: !1654)
!1654 = !{!1655, !1656}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1653, file: !1039, line: 37, baseType: !358)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1653, file: !1039, line: 38, baseType: !258, size: 128)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1643, file: !120, line: 69, baseType: !488, size: 128, align: 64, offset: 512)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1643, file: !120, line: 70, baseType: !1659, size: 128, offset: 640)
!1659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1660, size: 128, elements: !1543)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !120, line: 54, size: 128, elements: !1661)
!1661 = !{!1662, !1663}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1660, file: !120, line: 55, baseType: !188, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1660, file: !120, line: 56, baseType: !1664, size: 64, offset: 64)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !120, line: 56, flags: DIFlagFwdDecl)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1391, file: !1392, line: 872, baseType: !1667, size: 512, offset: 6016)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !756, size: 512, elements: !292)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1391, file: !1392, line: 873, baseType: !258, size: 128, offset: 6528)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1391, file: !1392, line: 874, baseType: !258, size: 128, offset: 6656)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1391, file: !1392, line: 876, baseType: !1671, size: 64, offset: 6784)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1673, line: 26, size: 192, elements: !1674)
!1673 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1674 = !{!1675, !1676}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1672, file: !1673, line: 27, baseType: !7, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1672, file: !1673, line: 28, baseType: !1677, size: 128, offset: 64)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1678, line: 43, size: 128, elements: !1679)
!1678 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1679 = !{!1680, !1681}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1677, file: !1678, line: 44, baseType: !940)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1677, file: !1678, line: 45, baseType: !258, size: 128)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1391, file: !1392, line: 879, baseType: !822, size: 64, offset: 6848)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1391, file: !1392, line: 882, baseType: !822, size: 64, offset: 6912)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1391, file: !1392, line: 884, baseType: !242, size: 64, offset: 6976)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1391, file: !1392, line: 885, baseType: !242, size: 64, offset: 7040)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1391, file: !1392, line: 890, baseType: !242, size: 64, offset: 7104)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1391, file: !1392, line: 891, baseType: !1688, size: 128, offset: 7168)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1392, line: 242, size: 128, elements: !1689)
!1689 = !{!1690, !1691, !1692}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1688, file: !1392, line: 244, baseType: !242, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1688, file: !1392, line: 245, baseType: !242, size: 64, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1688, file: !1392, line: 246, baseType: !940, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1391, file: !1392, line: 900, baseType: !195, size: 64, offset: 7296)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1391, file: !1392, line: 901, baseType: !195, size: 64, offset: 7360)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1391, file: !1392, line: 904, baseType: !242, size: 64, offset: 7424)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1391, file: !1392, line: 907, baseType: !242, size: 64, offset: 7488)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1391, file: !1392, line: 910, baseType: !195, size: 64, offset: 7552)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1391, file: !1392, line: 911, baseType: !195, size: 64, offset: 7616)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1391, file: !1392, line: 914, baseType: !1700, size: 640, offset: 7680)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1701, line: 123, size: 640, elements: !1702)
!1701 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1702 = !{!1703, !1709, !1710}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1700, file: !1701, line: 124, baseType: !1704, size: 576)
!1704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1705, size: 576, elements: !400)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1701, line: 108, size: 192, elements: !1706)
!1706 = !{!1707, !1708}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1705, file: !1701, line: 109, baseType: !242, size: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1705, file: !1701, line: 110, baseType: !1517, size: 128, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1700, file: !1701, line: 125, baseType: !7, size: 32, offset: 576)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1700, file: !1701, line: 126, baseType: !7, size: 32, offset: 608)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1391, file: !1392, line: 917, baseType: !1712, size: 192, offset: 8320)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1701, line: 134, size: 192, elements: !1713)
!1713 = !{!1714, !1715}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1712, file: !1701, line: 135, baseType: !488, size: 128, align: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1712, file: !1701, line: 136, baseType: !7, size: 32, offset: 128)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1391, file: !1392, line: 923, baseType: !1717, size: 64, offset: 8512)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1720, line: 111, size: 1280, elements: !1721)
!1720 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1721 = !{!1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1741, !1742, !1743, !1744, !1745, !1746, !1853, !1854, !1855, !1856, !1882, !1885, !1895}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1719, file: !1720, line: 112, baseType: !914, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1719, file: !1720, line: 120, baseType: !550, size: 32, offset: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1719, file: !1720, line: 121, baseType: !558, size: 32, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1719, file: !1720, line: 122, baseType: !550, size: 32, offset: 96)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1719, file: !1720, line: 123, baseType: !558, size: 32, offset: 128)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1719, file: !1720, line: 124, baseType: !550, size: 32, offset: 160)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1719, file: !1720, line: 125, baseType: !558, size: 32, offset: 192)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1719, file: !1720, line: 126, baseType: !550, size: 32, offset: 224)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1719, file: !1720, line: 127, baseType: !558, size: 32, offset: 256)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1719, file: !1720, line: 128, baseType: !7, size: 32, offset: 288)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1719, file: !1720, line: 129, baseType: !1733, size: 64, offset: 320)
!1733 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1734, line: 26, baseType: !1735)
!1734 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1734, line: 24, size: 64, elements: !1736)
!1736 = !{!1737}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1735, file: !1734, line: 25, baseType: !1738, size: 64)
!1738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 64, elements: !1739)
!1739 = !{!1740}
!1740 = !DISubrange(count: 2)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1719, file: !1720, line: 130, baseType: !1733, size: 64, offset: 384)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1719, file: !1720, line: 131, baseType: !1733, size: 64, offset: 448)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1719, file: !1720, line: 132, baseType: !1733, size: 64, offset: 512)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1719, file: !1720, line: 133, baseType: !1733, size: 64, offset: 576)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1719, file: !1720, line: 135, baseType: !215, size: 8, offset: 640)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1719, file: !1720, line: 137, baseType: !1747, size: 64, offset: 704)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1749, line: 189, size: 1664, elements: !1750)
!1749 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1750 = !{!1751, !1752, !1755, !1760, !1761, !1764, !1765, !1770, !1771, !1772, !1773, !1775, !1776, !1777, !1778, !1779, !1817, !1838}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1748, file: !1749, line: 190, baseType: !1404, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1748, file: !1749, line: 191, baseType: !1753, size: 32, offset: 32)
!1753 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1749, line: 28, baseType: !1754)
!1754 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !241, line: 98, baseType: !1615)
!1755 = !DIDerivedType(tag: DW_TAG_member, scope: !1748, file: !1749, line: 192, baseType: !1756, size: 192, offset: 64)
!1756 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1748, file: !1749, line: 192, size: 192, elements: !1757)
!1757 = !{!1758, !1759}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1756, file: !1749, line: 193, baseType: !258, size: 128)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1756, file: !1749, line: 194, baseType: !927, size: 192, align: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1748, file: !1749, line: 199, baseType: !934, size: 256, offset: 256)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1748, file: !1749, line: 200, baseType: !1762, size: 64, offset: 512)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1749, line: 200, flags: DIFlagFwdDecl)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1748, file: !1749, line: 201, baseType: !197, size: 64, offset: 576)
!1765 = !DIDerivedType(tag: DW_TAG_member, scope: !1748, file: !1749, line: 202, baseType: !1766, size: 64, offset: 640)
!1766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1748, file: !1749, line: 202, size: 64, elements: !1767)
!1767 = !{!1768, !1769}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1766, file: !1749, line: 203, baseType: !654, size: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1766, file: !1749, line: 204, baseType: !654, size: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1748, file: !1749, line: 206, baseType: !654, size: 64, offset: 704)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1748, file: !1749, line: 207, baseType: !550, size: 32, offset: 768)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1748, file: !1749, line: 208, baseType: !558, size: 32, offset: 800)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1748, file: !1749, line: 209, baseType: !1774, size: 32, offset: 832)
!1774 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1749, line: 31, baseType: !674)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1748, file: !1749, line: 210, baseType: !220, size: 16, offset: 864)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1748, file: !1749, line: 211, baseType: !220, size: 16, offset: 880)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1748, file: !1749, line: 215, baseType: !1379, size: 16, offset: 896)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1748, file: !1749, line: 222, baseType: !195, size: 64, offset: 960)
!1779 = !DIDerivedType(tag: DW_TAG_member, scope: !1748, file: !1749, line: 239, baseType: !1780, size: 320, offset: 1024)
!1780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1748, file: !1749, line: 239, size: 320, elements: !1781)
!1781 = !{!1782, !1809}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1780, file: !1749, line: 240, baseType: !1783, size: 320)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1749, line: 108, size: 320, elements: !1784)
!1784 = !{!1785, !1786, !1798, !1801, !1808}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1783, file: !1749, line: 110, baseType: !195, size: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, scope: !1783, file: !1749, line: 111, baseType: !1787, size: 64, offset: 64)
!1787 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1783, file: !1749, line: 111, size: 64, elements: !1788)
!1788 = !{!1789, !1797}
!1789 = !DIDerivedType(tag: DW_TAG_member, scope: !1787, file: !1749, line: 112, baseType: !1790, size: 64)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1787, file: !1749, line: 112, size: 64, elements: !1791)
!1791 = !{!1792, !1793}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1790, file: !1749, line: 114, baseType: !218, size: 16)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1790, file: !1749, line: 115, baseType: !1794, size: 48, offset: 16)
!1794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 48, elements: !1795)
!1795 = !{!1796}
!1796 = !DISubrange(count: 6)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1787, file: !1749, line: 121, baseType: !195, size: 64)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1783, file: !1749, line: 123, baseType: !1799, size: 64, offset: 128)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1800 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1749, line: 96, flags: DIFlagFwdDecl)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1783, file: !1749, line: 124, baseType: !1802, size: 64, offset: 192)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1749, line: 102, size: 192, elements: !1804)
!1804 = !{!1805, !1806, !1807}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1803, file: !1749, line: 103, baseType: !488, size: 128, align: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1803, file: !1749, line: 104, baseType: !1404, size: 32, offset: 128)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1803, file: !1749, line: 105, baseType: !605, size: 8, offset: 160)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1783, file: !1749, line: 125, baseType: !284, size: 64, offset: 256)
!1809 = !DIDerivedType(tag: DW_TAG_member, scope: !1780, file: !1749, line: 241, baseType: !1810, size: 320)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1780, file: !1749, line: 241, size: 320, elements: !1811)
!1811 = !{!1812, !1813, !1814, !1815, !1816}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1810, file: !1749, line: 242, baseType: !195, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1810, file: !1749, line: 243, baseType: !195, size: 64, offset: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1810, file: !1749, line: 244, baseType: !1799, size: 64, offset: 128)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1810, file: !1749, line: 245, baseType: !1802, size: 64, offset: 192)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1810, file: !1749, line: 246, baseType: !399, size: 64, offset: 256)
!1817 = !DIDerivedType(tag: DW_TAG_member, scope: !1748, file: !1749, line: 254, baseType: !1818, size: 256, offset: 1344)
!1818 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1748, file: !1749, line: 254, size: 256, elements: !1819)
!1819 = !{!1820, !1826}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1818, file: !1749, line: 255, baseType: !1821, size: 256)
!1821 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1749, line: 128, size: 256, elements: !1822)
!1822 = !{!1823, !1824}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1821, file: !1749, line: 129, baseType: !197, size: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1821, file: !1749, line: 130, baseType: !1825, size: 256)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 256, elements: !292)
!1826 = !DIDerivedType(tag: DW_TAG_member, scope: !1818, file: !1749, line: 256, baseType: !1827, size: 256)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1818, file: !1749, line: 256, size: 256, elements: !1828)
!1828 = !{!1829, !1830}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1827, file: !1749, line: 258, baseType: !258, size: 128)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1827, file: !1749, line: 259, baseType: !1831, size: 128, offset: 128)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1832, line: 22, size: 128, elements: !1833)
!1832 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1833 = !{!1834, !1837}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1831, file: !1832, line: 23, baseType: !1835, size: 64)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1832, line: 23, flags: DIFlagFwdDecl)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1831, file: !1832, line: 24, baseType: !195, size: 64, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1748, file: !1749, line: 274, baseType: !1839, size: 64, offset: 1600)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1749, line: 170, size: 192, elements: !1841)
!1841 = !{!1842, !1851, !1852}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1840, file: !1749, line: 171, baseType: !1843, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1749, line: 165, baseType: !1844)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!188, !1747, !1847, !1849, !1747}
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1800)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1821)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1840, file: !1749, line: 172, baseType: !1747, size: 64, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1840, file: !1749, line: 173, baseType: !1799, size: 64, offset: 128)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1719, file: !1720, line: 138, baseType: !1747, size: 64, offset: 768)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1719, file: !1720, line: 139, baseType: !1747, size: 64, offset: 832)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1719, file: !1720, line: 140, baseType: !1747, size: 64, offset: 896)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1719, file: !1720, line: 145, baseType: !1857, size: 64, offset: 960)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1859, line: 13, size: 896, elements: !1860)
!1859 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1860 = !{!1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1858, file: !1859, line: 14, baseType: !1404, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1858, file: !1859, line: 15, baseType: !914, size: 32, offset: 32)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1858, file: !1859, line: 16, baseType: !914, size: 32, offset: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1858, file: !1859, line: 21, baseType: !844, size: 64, offset: 128)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1858, file: !1859, line: 27, baseType: !195, size: 64, offset: 192)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1858, file: !1859, line: 28, baseType: !195, size: 64, offset: 256)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1858, file: !1859, line: 29, baseType: !844, size: 64, offset: 320)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1858, file: !1859, line: 32, baseType: !756, size: 128, offset: 384)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1858, file: !1859, line: 33, baseType: !550, size: 32, offset: 512)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1858, file: !1859, line: 37, baseType: !844, size: 64, offset: 576)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1858, file: !1859, line: 44, baseType: !1872, size: 256, offset: 640)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1873, line: 15, size: 256, elements: !1874)
!1873 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1874 = !{!1875, !1876, !1877, !1878, !1879, !1880, !1881}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1872, file: !1873, line: 16, baseType: !940)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1872, file: !1873, line: 18, baseType: !188, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1872, file: !1873, line: 19, baseType: !188, size: 32, offset: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1872, file: !1873, line: 20, baseType: !188, size: 32, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1872, file: !1873, line: 21, baseType: !188, size: 32, offset: 96)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1872, file: !1873, line: 22, baseType: !195, size: 64, offset: 128)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1872, file: !1873, line: 23, baseType: !195, size: 64, offset: 192)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1719, file: !1720, line: 146, baseType: !1883, size: 64, offset: 1024)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !889, line: 516, flags: DIFlagFwdDecl)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1719, file: !1720, line: 147, baseType: !1886, size: 64, offset: 1088)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1720, line: 25, size: 64, elements: !1888)
!1888 = !{!1889, !1890, !1891}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1887, file: !1720, line: 26, baseType: !914, size: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1887, file: !1720, line: 27, baseType: !188, size: 32, offset: 32)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1887, file: !1720, line: 28, baseType: !1892, offset: 64)
!1892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !558, elements: !1893)
!1893 = !{!1894}
!1894 = !DISubrange(count: 0)
!1895 = !DIDerivedType(tag: DW_TAG_member, scope: !1719, file: !1720, line: 149, baseType: !1896, size: 128, offset: 1152)
!1896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1719, file: !1720, line: 149, size: 128, elements: !1897)
!1897 = !{!1898, !1899}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1896, file: !1720, line: 150, baseType: !188, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1896, file: !1720, line: 151, baseType: !488, size: 128, align: 64)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1391, file: !1392, line: 926, baseType: !1717, size: 64, offset: 8576)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1391, file: !1392, line: 929, baseType: !1717, size: 64, offset: 8640)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1391, file: !1392, line: 933, baseType: !1747, size: 64, offset: 8704)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1391, file: !1392, line: 943, baseType: !1904, size: 128, offset: 8768)
!1904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 128, elements: !1905)
!1905 = !{!1906}
!1906 = !DISubrange(count: 16)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1391, file: !1392, line: 945, baseType: !1908, size: 64, offset: 8896)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1392, line: 49, flags: DIFlagFwdDecl)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1391, file: !1392, line: 956, baseType: !1911, size: 64, offset: 8960)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64)
!1912 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1392, line: 45, flags: DIFlagFwdDecl)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1391, file: !1392, line: 959, baseType: !1914, size: 64, offset: 9024)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!1915 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1392, line: 959, flags: DIFlagFwdDecl)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1391, file: !1392, line: 962, baseType: !1917, size: 64, offset: 9088)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1392, line: 66, flags: DIFlagFwdDecl)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1391, file: !1392, line: 966, baseType: !1920, size: 64, offset: 9152)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1392, line: 50, flags: DIFlagFwdDecl)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1391, file: !1392, line: 969, baseType: !1923, size: 64, offset: 9216)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1925, line: 82, size: 7296, elements: !1926)
!1925 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1926 = !{!1927, !1928, !1929, !1930, !1931, !1932, !1933, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1962, !1971, !1972, !1974, !1975, !1976, !1979, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2009, !2010, !2017, !2018, !2019, !2020, !2021, !2022}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1924, file: !1925, line: 83, baseType: !1404, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1924, file: !1925, line: 84, baseType: !914, size: 32, offset: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1924, file: !1925, line: 85, baseType: !188, size: 32, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1924, file: !1925, line: 86, baseType: !258, size: 128, offset: 128)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1924, file: !1925, line: 88, baseType: !1652, size: 128, offset: 256)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1924, file: !1925, line: 91, baseType: !1390, size: 64, offset: 384)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1924, file: !1925, line: 94, baseType: !1934, size: 192, offset: 448)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1935, line: 30, size: 192, elements: !1936)
!1935 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1936 = !{!1937, !1938}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1934, file: !1935, line: 31, baseType: !258, size: 128)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1934, file: !1935, line: 32, baseType: !1939, size: 64, offset: 128)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1940, line: 25, baseType: !1941)
!1940 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1940, line: 23, size: 64, elements: !1942)
!1942 = !{!1943}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1941, file: !1940, line: 24, baseType: !1542, size: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1924, file: !1925, line: 97, baseType: !752, size: 64, offset: 640)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1924, file: !1925, line: 100, baseType: !188, size: 32, offset: 704)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1924, file: !1925, line: 106, baseType: !188, size: 32, offset: 736)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1924, file: !1925, line: 107, baseType: !1390, size: 64, offset: 768)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1924, file: !1925, line: 110, baseType: !188, size: 32, offset: 832)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1924, file: !1925, line: 111, baseType: !7, size: 32, offset: 864)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1924, file: !1925, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1924, file: !1925, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1924, file: !1925, line: 128, baseType: !188, size: 32, offset: 928)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1924, file: !1925, line: 129, baseType: !258, size: 128, offset: 960)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1924, file: !1925, line: 132, baseType: !1466, size: 512, offset: 1088)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1924, file: !1925, line: 133, baseType: !1474, size: 64, offset: 1600)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1924, file: !1925, line: 140, baseType: !1957, size: 256, offset: 1664)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1958, size: 256, elements: !1739)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1925, line: 38, size: 128, elements: !1959)
!1959 = !{!1960, !1961}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1958, file: !1925, line: 39, baseType: !242, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1958, file: !1925, line: 40, baseType: !242, size: 64, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1924, file: !1925, line: 146, baseType: !1963, size: 192, offset: 1920)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1925, line: 66, size: 192, elements: !1964)
!1964 = !{!1965}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1963, file: !1925, line: 67, baseType: !1966, size: 192)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1925, line: 47, size: 192, elements: !1967)
!1967 = !{!1968, !1969, !1970}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1966, file: !1925, line: 48, baseType: !846, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1966, file: !1925, line: 49, baseType: !846, size: 64, offset: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1966, file: !1925, line: 50, baseType: !846, size: 64, offset: 128)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1924, file: !1925, line: 150, baseType: !1700, size: 640, offset: 2112)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1924, file: !1925, line: 153, baseType: !1973, size: 256, offset: 2752)
!1973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1642, size: 256, elements: !292)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1924, file: !1925, line: 159, baseType: !1642, size: 64, offset: 3008)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1924, file: !1925, line: 162, baseType: !188, size: 32, offset: 3072)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1924, file: !1925, line: 164, baseType: !1977, size: 64, offset: 3136)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 64)
!1978 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1925, line: 164, flags: DIFlagFwdDecl)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1924, file: !1925, line: 175, baseType: !1980, size: 32, offset: 3200)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !511, line: 805, baseType: !1981)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !511, line: 798, size: 32, elements: !1982)
!1982 = !{!1983, !1984}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1981, file: !511, line: 803, baseType: !510, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1981, file: !511, line: 804, baseType: !358, offset: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1924, file: !1925, line: 176, baseType: !242, size: 64, offset: 3264)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1924, file: !1925, line: 176, baseType: !242, size: 64, offset: 3328)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1924, file: !1925, line: 176, baseType: !242, size: 64, offset: 3392)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1924, file: !1925, line: 176, baseType: !242, size: 64, offset: 3456)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1924, file: !1925, line: 177, baseType: !242, size: 64, offset: 3520)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1924, file: !1925, line: 178, baseType: !242, size: 64, offset: 3584)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1924, file: !1925, line: 179, baseType: !1688, size: 128, offset: 3648)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1924, file: !1925, line: 180, baseType: !195, size: 64, offset: 3776)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1924, file: !1925, line: 180, baseType: !195, size: 64, offset: 3840)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1924, file: !1925, line: 180, baseType: !195, size: 64, offset: 3904)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1924, file: !1925, line: 180, baseType: !195, size: 64, offset: 3968)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1924, file: !1925, line: 181, baseType: !195, size: 64, offset: 4032)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1924, file: !1925, line: 181, baseType: !195, size: 64, offset: 4096)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1924, file: !1925, line: 181, baseType: !195, size: 64, offset: 4160)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1924, file: !1925, line: 181, baseType: !195, size: 64, offset: 4224)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1924, file: !1925, line: 182, baseType: !195, size: 64, offset: 4288)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1924, file: !1925, line: 182, baseType: !195, size: 64, offset: 4352)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1924, file: !1925, line: 182, baseType: !195, size: 64, offset: 4416)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1924, file: !1925, line: 182, baseType: !195, size: 64, offset: 4480)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1924, file: !1925, line: 183, baseType: !195, size: 64, offset: 4544)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1924, file: !1925, line: 183, baseType: !195, size: 64, offset: 4608)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1924, file: !1925, line: 184, baseType: !2007, offset: 4672)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2008, line: 12, elements: !372)
!2008 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1924, file: !1925, line: 192, baseType: !244, size: 64, offset: 4672)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1924, file: !1925, line: 203, baseType: !2011, size: 2048, offset: 4736)
!2011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2012, size: 2048, elements: !1905)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2013, line: 43, size: 128, elements: !2014)
!2013 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2014 = !{!2015, !2016}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2012, file: !2013, line: 44, baseType: !447, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2012, file: !2013, line: 45, baseType: !447, size: 64, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1924, file: !1925, line: 220, baseType: !605, size: 8, offset: 6784)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1924, file: !1925, line: 221, baseType: !1379, size: 16, offset: 6800)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1924, file: !1925, line: 222, baseType: !1379, size: 16, offset: 6816)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1924, file: !1925, line: 224, baseType: !1156, size: 64, offset: 6848)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1924, file: !1925, line: 227, baseType: !840, size: 192, offset: 6912)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1924, file: !1925, line: 233, baseType: !840, size: 192, offset: 7104)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1391, file: !1392, line: 970, baseType: !2024, size: 64, offset: 9280)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1925, line: 20, size: 16576, elements: !2026)
!2026 = !{!2027, !2028, !2029, !2030}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2025, file: !1925, line: 21, baseType: !358)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2025, file: !1925, line: 22, baseType: !1404, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2025, file: !1925, line: 23, baseType: !1652, size: 128, offset: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2025, file: !1925, line: 24, baseType: !2031, size: 16384, offset: 192)
!2031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2032, size: 16384, elements: !404)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1935, line: 49, size: 256, elements: !2033)
!2033 = !{!2034}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2032, file: !1935, line: 50, baseType: !2035, size: 256)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1935, line: 35, size: 256, elements: !2036)
!2036 = !{!2037, !2044, !2045, !2051}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2035, file: !1935, line: 37, baseType: !2038, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2039, line: 19, baseType: !2040)
!2039 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2039, line: 18, baseType: !2042)
!2042 = !DISubroutineType(types: !2043)
!2043 = !{null, !188}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2035, file: !1935, line: 38, baseType: !195, size: 64, offset: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2035, file: !1935, line: 44, baseType: !2046, size: 64, offset: 128)
!2046 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2039, line: 22, baseType: !2047)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2039, line: 21, baseType: !2049)
!2049 = !DISubroutineType(types: !2050)
!2050 = !{null}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2035, file: !1935, line: 46, baseType: !1939, size: 64, offset: 192)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1391, file: !1392, line: 971, baseType: !1939, size: 64, offset: 9344)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1391, file: !1392, line: 972, baseType: !1939, size: 64, offset: 9408)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1391, file: !1392, line: 974, baseType: !1939, size: 64, offset: 9472)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1391, file: !1392, line: 975, baseType: !1934, size: 192, offset: 9536)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1391, file: !1392, line: 976, baseType: !195, size: 64, offset: 9728)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1391, file: !1392, line: 977, baseType: !445, size: 64, offset: 9792)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1391, file: !1392, line: 978, baseType: !7, size: 32, offset: 9856)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1391, file: !1392, line: 980, baseType: !491, size: 64, offset: 9920)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1391, file: !1392, line: 989, baseType: !2061, size: 128, offset: 9984)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2062, line: 35, size: 128, elements: !2063)
!2062 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2063 = !{!2064, !2065, !2066}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2061, file: !2062, line: 36, baseType: !188, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2061, file: !2062, line: 37, baseType: !914, size: 32, offset: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2061, file: !2062, line: 38, baseType: !2067, size: 64, offset: 64)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2062, line: 23, flags: DIFlagFwdDecl)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1391, file: !1392, line: 992, baseType: !242, size: 64, offset: 10112)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1391, file: !1392, line: 993, baseType: !242, size: 64, offset: 10176)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1391, file: !1392, line: 996, baseType: !358, offset: 10240)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1391, file: !1392, line: 999, baseType: !940, offset: 10240)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1391, file: !1392, line: 1001, baseType: !2074, size: 64, offset: 10240)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1392, line: 636, size: 64, elements: !2075)
!2075 = !{!2076}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2074, file: !1392, line: 637, baseType: !2077, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1391, file: !1392, line: 1005, baseType: !919, size: 128, offset: 10304)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1391, file: !1392, line: 1007, baseType: !1390, size: 64, offset: 10432)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1391, file: !1392, line: 1009, baseType: !2081, size: 64, offset: 10496)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1392, line: 1009, flags: DIFlagFwdDecl)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1391, file: !1392, line: 1043, baseType: !197, size: 64, offset: 10560)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1391, file: !1392, line: 1046, baseType: !2085, size: 64, offset: 10624)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2087, line: 554, size: 128, elements: !2088)
!2087 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!2088 = !{!2089, !3109}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2086, file: !2087, line: 555, baseType: !2090, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !2092, line: 203, size: 832, elements: !2093)
!2092 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!2093 = !{!2094, !2095, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3077, !3082, !3083, !3102, !3103, !3104, !3105, !3106, !3108}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !2091, file: !2092, line: 204, baseType: !2090, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !2091, file: !2092, line: 205, baseType: !2096, size: 64, offset: 64)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !2098, line: 167, size: 8512, elements: !2099)
!2098 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!2099 = !{!2100, !2101, !2102, !2103, !2107, !2108, !2109, !2183, !2184, !2373, !3044, !3045, !3046, !3047, !3048, !3049, !3052, !3053, !3056, !3057, !3058, !3061}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2097, file: !2098, line: 171, baseType: !188, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !2097, file: !2098, line: 172, baseType: !188, size: 32, offset: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !2097, file: !2098, line: 173, baseType: !188, size: 32, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2097, file: !2098, line: 176, baseType: !2104, size: 256, offset: 96)
!2104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 256, elements: !2105)
!2105 = !{!2106}
!2106 = !DISubrange(count: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2097, file: !2098, line: 178, baseType: !220, size: 16, offset: 352)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !2097, file: !2098, line: 179, baseType: !220, size: 16, offset: 368)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !2097, file: !2098, line: 186, baseType: !2110, size: 64, offset: 384)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !2098, line: 149, size: 256, elements: !2112)
!2112 = !{!2113, !2114, !2115, !2179}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2111, file: !2098, line: 150, baseType: !488, size: 128, align: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2111, file: !2098, line: 151, baseType: !188, size: 32, offset: 128)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !2111, file: !2098, line: 152, baseType: !2116, size: 64, offset: 192)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !2098, line: 53, size: 6592, elements: !2118)
!2118 = !{!2119, !2120, !2121, !2122, !2125, !2146, !2147, !2148, !2149, !2150, !2160}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !2117, file: !2098, line: 54, baseType: !997, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !2117, file: !2098, line: 60, baseType: !997, size: 64, offset: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2117, file: !2098, line: 64, baseType: !195, size: 64, offset: 128)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !2117, file: !2098, line: 65, baseType: !2123, size: 64, offset: 192)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !2098, line: 65, flags: DIFlagFwdDecl)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2117, file: !2098, line: 66, baseType: !2126, size: 128, offset: 256)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2127, line: 105, size: 128, elements: !2128)
!2127 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2128 = !{!2129, !2130}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2126, file: !2127, line: 110, baseType: !195, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2126, file: !2127, line: 118, baseType: !2131, size: 64, offset: 64)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2127, line: 95, size: 448, elements: !2133)
!2133 = !{!2134, !2135, !2141, !2142, !2143, !2144, !2145}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2132, file: !2127, line: 96, baseType: !844, size: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2132, file: !2127, line: 97, baseType: !2136, size: 64, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2127, line: 60, baseType: !2138)
!2138 = !DISubroutineType(types: !2139)
!2139 = !{null, !2140}
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2132, file: !2127, line: 98, baseType: !2136, size: 64, offset: 128)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2132, file: !2127, line: 99, baseType: !605, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2132, file: !2127, line: 100, baseType: !605, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2132, file: !2127, line: 101, baseType: !488, size: 128, align: 64, offset: 256)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2132, file: !2127, line: 102, baseType: !2140, size: 64, offset: 384)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !2117, file: !2098, line: 68, baseType: !342, size: 5568, offset: 384)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !2117, file: !2098, line: 69, baseType: !351, size: 64, offset: 5952)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2117, file: !2098, line: 70, baseType: !188, size: 32, offset: 6016)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !2117, file: !2098, line: 70, baseType: !188, size: 32, offset: 6048)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2117, file: !2098, line: 71, baseType: !2151, size: 64, offset: 6080)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !2098, line: 48, size: 808, elements: !2153)
!2153 = !{!2154, !2158}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !2152, file: !2098, line: 49, baseType: !2155, size: 296)
!2155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 296, elements: !2156)
!2156 = !{!2157}
!2157 = !DISubrange(count: 37)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !2152, file: !2098, line: 50, baseType: !2159, size: 512, offset: 296)
!2159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 512, elements: !404)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !2117, file: !2098, line: 75, baseType: !2161, size: 448, offset: 6144)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !2162, line: 124, size: 448, elements: !2163)
!2162 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2163 = !{!2164, !2175, !2176}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2161, file: !2162, line: 125, baseType: !2165, size: 256)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2162, line: 102, size: 256, elements: !2166)
!2166 = !{!2167, !2168, !2169}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2165, file: !2162, line: 103, baseType: !844, size: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2165, file: !2162, line: 104, baseType: !258, size: 128, offset: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2165, file: !2162, line: 105, baseType: !2170, size: 64, offset: 192)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2162, line: 21, baseType: !2171)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{null, !2174}
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2161, file: !2162, line: 126, baseType: !488, size: 128, align: 64, offset: 256)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2161, file: !2162, line: 129, baseType: !2177, size: 64, offset: 384)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2162, line: 18, flags: DIFlagFwdDecl)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2111, file: !2098, line: 153, baseType: !2180, offset: 256)
!2180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2116, elements: !2181)
!2181 = !{!2182}
!2182 = !DISubrange(count: -1)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !2097, file: !2098, line: 187, baseType: !2117, size: 6592, offset: 448)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !2097, file: !2098, line: 189, baseType: !2185, size: 64, offset: 7040)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2187)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !76, line: 1844, size: 960, elements: !2188)
!2188 = !{!2189, !2194, !2302, !2306, !2310, !2314, !2315, !2319, !2323, !2327, !2333, !2337, !2363, !2368, !2369}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !2187, file: !76, line: 1845, baseType: !2190, size: 64)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!2193, !2090}
!2193 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !2092, line: 515, baseType: !7)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2187, file: !76, line: 1846, baseType: !2195, size: 64, offset: 64)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DISubroutineType(types: !2197)
!2197 = !{!188, !2198, !2301}
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !2092, line: 22, size: 1344, elements: !2200)
!2200 = !{!2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2299, !2300}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !2199, file: !2092, line: 23, baseType: !628, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !2199, file: !2092, line: 24, baseType: !188, size: 32, offset: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !2199, file: !2092, line: 25, baseType: !544, size: 64, offset: 64)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !2199, file: !2092, line: 26, baseType: !714, size: 64, offset: 128)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !2199, file: !2092, line: 27, baseType: !840, size: 192, offset: 192)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !2199, file: !2092, line: 28, baseType: !197, size: 64, offset: 384)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !2199, file: !2092, line: 29, baseType: !197, size: 64, offset: 448)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !2199, file: !2092, line: 30, baseType: !188, size: 32, offset: 512)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !2199, file: !2092, line: 31, baseType: !605, size: 8, offset: 544)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !2199, file: !2092, line: 33, baseType: !258, size: 128, offset: 576)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !2199, file: !2092, line: 35, baseType: !2198, size: 64, offset: 704)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !2199, file: !2092, line: 36, baseType: !213, size: 8, offset: 768)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !2199, file: !2092, line: 37, baseType: !2116, size: 64, offset: 832)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !2199, file: !2092, line: 39, baseType: !7, size: 32, offset: 896)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !2199, file: !2092, line: 41, baseType: !358, offset: 928)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !2199, file: !2092, line: 42, baseType: !2096, size: 64, offset: 960)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !2199, file: !2092, line: 43, baseType: !2218, size: 64, offset: 1024)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !64, line: 165, size: 4672, elements: !2220)
!2220 = !{!2221, !2222, !2223, !2224, !2225, !2226, !2231, !2232, !2233, !2234, !2235, !2236, !2292, !2293, !2294, !2295, !2297, !2298}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2219, file: !64, line: 166, baseType: !242, size: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2219, file: !64, line: 167, baseType: !927, size: 192, align: 64, offset: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !2219, file: !64, line: 168, baseType: !258, size: 128, offset: 256)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2219, file: !64, line: 169, baseType: !195, size: 64, offset: 384)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !2219, file: !64, line: 170, baseType: !195, size: 64, offset: 448)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2219, file: !64, line: 172, baseType: !2227, size: 32, offset: 512)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2228, line: 19, size: 32, elements: !2229)
!2228 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2229 = !{!2230}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2227, file: !2228, line: 20, baseType: !1404, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !2219, file: !64, line: 173, baseType: !7, size: 32, offset: 544)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !2219, file: !64, line: 174, baseType: !7, size: 32, offset: 576)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !2219, file: !64, line: 175, baseType: !7, size: 32, offset: 608)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !2219, file: !64, line: 175, baseType: !7, size: 32, offset: 640)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !2219, file: !64, line: 181, baseType: !844, size: 64, offset: 704)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !2219, file: !64, line: 183, baseType: !2237, size: 2688, offset: 768)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !64, line: 107, size: 2688, elements: !2238)
!2238 = !{!2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2268, !2269, !2270, !2271, !2272, !2290, !2291}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !2237, file: !64, line: 108, baseType: !2218, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2237, file: !64, line: 110, baseType: !195, size: 64, offset: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !2237, file: !64, line: 111, baseType: !195, size: 64, offset: 128)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !2237, file: !64, line: 113, baseType: !258, size: 128, offset: 192)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !2237, file: !64, line: 114, baseType: !258, size: 128, offset: 320)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !2237, file: !64, line: 115, baseType: !258, size: 128, offset: 448)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !2237, file: !64, line: 116, baseType: !258, size: 128, offset: 576)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !2237, file: !64, line: 117, baseType: !358, offset: 704)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !2237, file: !64, line: 119, baseType: !2248, size: 256, offset: 704)
!2248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2249, size: 256, elements: !292)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !2250, line: 97, size: 64, elements: !2251)
!2250 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!2251 = !{!2252}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2249, file: !2250, line: 98, baseType: !850, size: 64)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !2237, file: !64, line: 121, baseType: !195, size: 64, offset: 960)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !2237, file: !64, line: 123, baseType: !195, size: 64, offset: 1024)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !2237, file: !64, line: 124, baseType: !195, size: 64, offset: 1088)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !2237, file: !64, line: 125, baseType: !195, size: 64, offset: 1152)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !2237, file: !64, line: 126, baseType: !195, size: 64, offset: 1216)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !2237, file: !64, line: 127, baseType: !195, size: 64, offset: 1280)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !2237, file: !64, line: 135, baseType: !195, size: 64, offset: 1344)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !2237, file: !64, line: 136, baseType: !195, size: 64, offset: 1408)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !2237, file: !64, line: 138, baseType: !2262, size: 128, offset: 1472)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !2263, line: 76, size: 128, elements: !2264)
!2263 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!2264 = !{!2265, !2266, !2267}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2262, file: !2263, line: 78, baseType: !2249, size: 64)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2262, file: !2263, line: 80, baseType: !7, size: 32, offset: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2262, file: !2263, line: 81, baseType: !940, offset: 96)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !2237, file: !64, line: 139, baseType: !188, size: 32, offset: 1600)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !2237, file: !64, line: 140, baseType: !63, size: 32, offset: 1632)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !2237, file: !64, line: 142, baseType: !358, offset: 1664)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !2237, file: !64, line: 143, baseType: !258, size: 128, offset: 1664)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !2237, file: !64, line: 144, baseType: !2273, size: 704, offset: 1792)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !2162, line: 115, size: 704, elements: !2274)
!2274 = !{!2275, !2276, !2288, !2289}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2273, file: !2162, line: 116, baseType: !2165, size: 256)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2273, file: !2162, line: 117, baseType: !2277, size: 320, offset: 256)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2278, line: 11, size: 320, elements: !2279)
!2278 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2279 = !{!2280, !2281, !2282, !2287}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2277, file: !2278, line: 16, baseType: !756, size: 128)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2277, file: !2278, line: 17, baseType: !195, size: 64, offset: 128)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2277, file: !2278, line: 18, baseType: !2283, size: 64, offset: 192)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 64)
!2284 = !DISubroutineType(types: !2285)
!2285 = !{null, !2286}
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2277, file: !2278, line: 19, baseType: !190, size: 32, offset: 256)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2273, file: !2162, line: 120, baseType: !2177, size: 64, offset: 576)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2273, file: !2162, line: 121, baseType: !188, size: 32, offset: 640)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !2237, file: !64, line: 146, baseType: !195, size: 64, offset: 2496)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !2237, file: !64, line: 148, baseType: !258, size: 128, offset: 2560)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !2219, file: !64, line: 184, baseType: !258, size: 128, offset: 3456)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !2219, file: !64, line: 190, baseType: !1652, size: 128, offset: 3584)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2219, file: !64, line: 192, baseType: !341, size: 64, offset: 3712)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2219, file: !64, line: 193, baseType: !2296, size: 512, offset: 3776)
!2296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 512, elements: !404)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2219, file: !64, line: 194, baseType: !341, size: 64, offset: 4288)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !2219, file: !64, line: 196, baseType: !2277, size: 320, offset: 4352)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !2199, file: !2092, line: 46, baseType: !188, size: 32, offset: 1088)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !2199, file: !2092, line: 48, baseType: !840, size: 192, offset: 1152)
!2301 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !241, line: 150, baseType: !7)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2187, file: !76, line: 1847, baseType: !2303, size: 64, offset: 128)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 64)
!2304 = !DISubroutineType(types: !2305)
!2305 = !{null, !2096, !2301}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !2187, file: !76, line: 1848, baseType: !2307, size: 64, offset: 192)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = !DISubroutineType(types: !2309)
!2309 = !{!188, !2198, !997, !887, !7}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2187, file: !76, line: 1849, baseType: !2311, size: 64, offset: 256)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{!188, !2198, !2301, !7, !195}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2187, file: !76, line: 1850, baseType: !2311, size: 64, offset: 320)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !2187, file: !76, line: 1851, baseType: !2316, size: 64, offset: 384)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{!7, !2096, !7}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !2187, file: !76, line: 1853, baseType: !2320, size: 64, offset: 448)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DISubroutineType(types: !2322)
!2322 = !{null, !2096}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !2187, file: !76, line: 1854, baseType: !2324, size: 64, offset: 512)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = !DISubroutineType(types: !2326)
!2326 = !{!188, !2096}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !2187, file: !76, line: 1855, baseType: !2328, size: 64, offset: 576)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64)
!2329 = !DISubroutineType(types: !2330)
!2330 = !{!188, !2198, !2331}
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 64)
!2332 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !111, line: 51, flags: DIFlagFwdDecl)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !2187, file: !76, line: 1857, baseType: !2334, size: 64, offset: 640)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = !DISubroutineType(types: !2336)
!2336 = !{null, !2198, !195}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !2187, file: !76, line: 1858, baseType: !2338, size: 64, offset: 704)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64)
!2339 = !DISubroutineType(types: !2340)
!2340 = !{!188, !2096, !997, !7, !2341, !197}
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !76, line: 354, baseType: !2342)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2343 = !DISubroutineType(types: !2344)
!2344 = !{!188, !2345, !7, !197}
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !2347, line: 106, size: 512, elements: !2348)
!2347 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!2348 = !{!2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2358, !2359}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2346, file: !2347, line: 107, baseType: !243, size: 64)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2346, file: !2347, line: 108, baseType: !243, size: 64, offset: 64)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !2346, file: !2347, line: 109, baseType: !243, size: 64, offset: 128)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2346, file: !2347, line: 110, baseType: !214, size: 8, offset: 192)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2346, file: !2347, line: 111, baseType: !214, size: 8, offset: 200)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !2346, file: !2347, line: 112, baseType: !214, size: 8, offset: 208)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2346, file: !2347, line: 113, baseType: !214, size: 8, offset: 216)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !2346, file: !2347, line: 114, baseType: !2357, size: 32, offset: 224)
!2357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 32, elements: !292)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2346, file: !2347, line: 115, baseType: !243, size: 64, offset: 256)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2346, file: !2347, line: 116, baseType: !2360, size: 192, offset: 320)
!2360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 192, elements: !2361)
!2361 = !{!2362}
!2362 = !DISubrange(count: 24)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2187, file: !76, line: 1860, baseType: !2364, size: 64, offset: 768)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!2365 = !DISubroutineType(types: !2366)
!2366 = !{!399, !2096, !2367}
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2187, file: !76, line: 1861, baseType: !747, size: 64, offset: 832)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !2187, file: !76, line: 1862, baseType: !2370, size: 64, offset: 896)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2372)
!2372 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !76, line: 41, flags: DIFlagFwdDecl)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2097, file: !2098, line: 190, baseType: !2374, size: 64, offset: 7104)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !76, line: 399, size: 14464, elements: !2376)
!2376 = !{!2377, !2594, !2716, !2717, !2720, !2723, !2819, !2820, !2821, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2880, !2889, !2890, !2891, !2892, !2893, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2999, !3000, !3001, !3002, !3003, !3004, !3037, !3038, !3039, !3040}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !2375, file: !76, line: 400, baseType: !2378, size: 64)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !76, line: 130, size: 2176, elements: !2380)
!2380 = !{!2381, !2382, !2385, !2469, !2470, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2484, !2497, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2592, !2593}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2379, file: !76, line: 131, baseType: !2374, size: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !2379, file: !76, line: 132, baseType: !2383, size: 64, offset: 64)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 64)
!2384 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !76, line: 132, flags: DIFlagFwdDecl)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !2379, file: !76, line: 133, baseType: !2386, size: 64, offset: 128)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !2388, line: 16, size: 4032, elements: !2389)
!2388 = !DIFile(filename: "./include/linux/blk-mq.h", directory: "/home/lizy2001/genbc/linux")
!2389 = !{!2390, !2396, !2397, !2400, !2401, !2402, !2403, !2404, !2405, !2408, !2409, !2424, !2425, !2426, !2427, !2428, !2430, !2431, !2432, !2433, !2436, !2437, !2438, !2439, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454}
!2390 = !DIDerivedType(tag: DW_TAG_member, scope: !2387, file: !2388, line: 17, baseType: !2391, size: 192)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2387, file: !2388, line: 17, size: 192, elements: !2392)
!2392 = !{!2393, !2394, !2395}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2391, file: !2388, line: 19, baseType: !358)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !2391, file: !2388, line: 27, baseType: !258, size: 128)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2391, file: !2388, line: 32, baseType: !195, size: 64, offset: 128)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2387, file: !2388, line: 38, baseType: !2273, size: 704, offset: 192)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2387, file: !2388, line: 40, baseType: !2398, size: 64, offset: 896)
!2398 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1538, line: 756, baseType: !2399)
!2399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1539, size: 64, elements: !1543)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu", scope: !2387, file: !2388, line: 45, baseType: !188, size: 32, offset: 960)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu_batch", scope: !2387, file: !2388, line: 50, baseType: !188, size: 32, offset: 992)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2387, file: !2388, line: 53, baseType: !195, size: 64, offset: 1024)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "sched_data", scope: !2387, file: !2388, line: 59, baseType: !197, size: 64, offset: 1088)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2387, file: !2388, line: 63, baseType: !2374, size: 64, offset: 1152)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2387, file: !2388, line: 65, baseType: !2406, size: 64, offset: 1216)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !76, line: 40, flags: DIFlagFwdDecl)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2387, file: !2388, line: 71, baseType: !197, size: 64, offset: 1280)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_map", scope: !2387, file: !2388, line: 77, baseType: !2410, size: 192, offset: 1344)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap", file: !2411, line: 48, size: 192, elements: !2412)
!2411 = !DIFile(filename: "./include/linux/sbitmap.h", directory: "/home/lizy2001/genbc/linux")
!2412 = !{!2413, !2414, !2415, !2416}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2410, file: !2411, line: 52, baseType: !7, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2410, file: !2411, line: 57, baseType: !7, size: 32, offset: 32)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "map_nr", scope: !2410, file: !2411, line: 62, baseType: !7, size: 32, offset: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2410, file: !2411, line: 67, baseType: !2417, size: 64, offset: 128)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_word", file: !2411, line: 20, size: 192, elements: !2419)
!2419 = !{!2420, !2421, !2422, !2423}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2418, file: !2411, line: 24, baseType: !195, size: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !2418, file: !2411, line: 29, baseType: !195, size: 64, offset: 64)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "cleared", scope: !2418, file: !2411, line: 34, baseType: !195, size: 64, offset: 128)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "swap_lock", scope: !2418, file: !2411, line: 39, baseType: !358, offset: 192)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_from", scope: !2387, file: !2388, line: 83, baseType: !2383, size: 64, offset: 1536)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_busy", scope: !2387, file: !2388, line: 89, baseType: !7, size: 32, offset: 1600)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2387, file: !2388, line: 92, baseType: !220, size: 16, offset: 1632)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ctx", scope: !2387, file: !2388, line: 94, baseType: !220, size: 16, offset: 1648)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "ctxs", scope: !2387, file: !2388, line: 96, baseType: !2429, size: 64, offset: 1664)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait_lock", scope: !2387, file: !2388, line: 99, baseType: !358, offset: 1728)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait", scope: !2387, file: !2388, line: 104, baseType: !1038, size: 320, offset: 1728)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "wait_index", scope: !2387, file: !2388, line: 110, baseType: !914, size: 32, offset: 2048)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2387, file: !2388, line: 116, baseType: !2434, size: 64, offset: 2112)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64)
!2435 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tags", file: !2388, line: 9, flags: DIFlagFwdDecl)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "sched_tags", scope: !2387, file: !2388, line: 122, baseType: !2434, size: 64, offset: 2176)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !2387, file: !2388, line: 125, baseType: !195, size: 64, offset: 2240)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !2387, file: !2388, line: 127, baseType: !195, size: 64, offset: 2304)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "dispatched", scope: !2387, file: !2388, line: 130, baseType: !2440, size: 448, offset: 2368)
!2440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 448, elements: !2441)
!2441 = !{!2442}
!2442 = !DISubrange(count: 7)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !2387, file: !2388, line: 133, baseType: !7, size: 32, offset: 2816)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "queue_num", scope: !2387, file: !2388, line: 135, baseType: !7, size: 32, offset: 2848)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !2387, file: !2388, line: 141, baseType: !914, size: 32, offset: 2880)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_queued", scope: !2387, file: !2388, line: 145, baseType: !914, size: 32, offset: 2912)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_online", scope: !2387, file: !2388, line: 148, baseType: !756, size: 128, offset: 2944)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_dead", scope: !2387, file: !2388, line: 150, baseType: !756, size: 128, offset: 3072)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2387, file: !2388, line: 152, baseType: !345, size: 512, offset: 3200)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "poll_considered", scope: !2387, file: !2388, line: 155, baseType: !195, size: 64, offset: 3712)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "poll_invoked", scope: !2387, file: !2388, line: 157, baseType: !195, size: 64, offset: 3776)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "poll_success", scope: !2387, file: !2388, line: 159, baseType: !195, size: 64, offset: 3840)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_list", scope: !2387, file: !2388, line: 175, baseType: !258, size: 128, offset: 3904)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !2387, file: !2388, line: 182, baseType: !2455, offset: 4032)
!2455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2456, elements: !2181)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !2457, line: 16, size: 576, elements: !2458)
!2457 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!2458 = !{!2459, !2461, !2462, !2463, !2464, !2465, !2466, !2468}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !2456, file: !2457, line: 17, baseType: !2460, size: 32)
!2460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1379, size: 32, elements: !1739)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !2456, file: !2457, line: 18, baseType: !1379, size: 16, offset: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !2456, file: !2457, line: 19, baseType: !213, size: 8, offset: 48)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !2456, file: !2457, line: 20, baseType: !213, size: 8, offset: 56)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !2456, file: !2457, line: 21, baseType: !1677, size: 128, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !2456, file: !2457, line: 23, baseType: !491, size: 64, offset: 192)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !2456, file: !2457, line: 24, baseType: !2467, size: 64, offset: 256)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !2456, file: !2457, line: 25, baseType: !2165, size: 256, offset: 320)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !2379, file: !76, line: 135, baseType: !7, size: 32, offset: 192)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !2379, file: !76, line: 136, baseType: !2471, size: 32, offset: 224)
!2471 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !76, line: 66, baseType: !192)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2379, file: !76, line: 138, baseType: !188, size: 32, offset: 256)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !2379, file: !76, line: 139, baseType: !188, size: 32, offset: 288)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !2379, file: !76, line: 142, baseType: !7, size: 32, offset: 320)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !2379, file: !76, line: 143, baseType: !997, size: 64, offset: 384)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !2379, file: !76, line: 145, baseType: !2090, size: 64, offset: 448)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !2379, file: !76, line: 146, baseType: !2090, size: 64, offset: 512)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !2379, file: !76, line: 148, baseType: !258, size: 128, offset: 576)
!2479 = !DIDerivedType(tag: DW_TAG_member, scope: !2379, file: !76, line: 157, baseType: !2480, size: 128, offset: 704)
!2480 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2379, file: !76, line: 157, size: 128, elements: !2481)
!2481 = !{!2482, !2483}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2480, file: !76, line: 158, baseType: !756, size: 128)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !2480, file: !76, line: 159, baseType: !258, size: 128)
!2484 = !DIDerivedType(tag: DW_TAG_member, scope: !2379, file: !76, line: 167, baseType: !2485, size: 192, offset: 832)
!2485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2379, file: !76, line: 167, size: 192, elements: !2486)
!2486 = !{!2487, !2488, !2495, !2496}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2485, file: !76, line: 168, baseType: !927, size: 192, align: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !2485, file: !76, line: 169, baseType: !2489, size: 128)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !2490, line: 31, size: 128, elements: !2491)
!2490 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!2491 = !{!2492, !2493, !2494}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !2489, file: !2490, line: 32, baseType: !887, size: 64)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !2489, file: !2490, line: 33, baseType: !7, size: 32, offset: 64)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !2489, file: !2490, line: 34, baseType: !7, size: 32, offset: 96)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !2485, file: !76, line: 170, baseType: !197, size: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !2485, file: !76, line: 171, baseType: !188, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, scope: !2379, file: !76, line: 180, baseType: !2498, size: 256, offset: 1024)
!2498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2379, file: !76, line: 180, size: 256, elements: !2499)
!2499 = !{!2500, !2535}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !2498, file: !76, line: 184, baseType: !2501, size: 192)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2498, file: !76, line: 181, size: 192, elements: !2502)
!2502 = !{!2503, !2533}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !2501, file: !76, line: 182, baseType: !2504, size: 64)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2506, line: 73, size: 448, elements: !2507)
!2506 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2507 = !{!2508, !2509, !2522, !2527, !2532}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2505, file: !2506, line: 74, baseType: !2374, size: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2505, file: !2506, line: 75, baseType: !2510, size: 64, offset: 64)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2506, line: 99, size: 704, elements: !2512)
!2512 = !{!2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2511, file: !2506, line: 100, baseType: !844, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2511, file: !2506, line: 101, baseType: !914, size: 32, offset: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2511, file: !2506, line: 102, baseType: !914, size: 32, offset: 96)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2511, file: !2506, line: 105, baseType: !358, offset: 128)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2511, file: !2506, line: 107, baseType: !220, size: 16, offset: 128)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2511, file: !2506, line: 109, baseType: !905, size: 128, offset: 192)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2511, file: !2506, line: 110, baseType: !2504, size: 64, offset: 320)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2511, file: !2506, line: 111, baseType: !752, size: 64, offset: 384)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2511, file: !2506, line: 113, baseType: !2165, size: 256, offset: 448)
!2522 = !DIDerivedType(tag: DW_TAG_member, scope: !2505, file: !2506, line: 83, baseType: !2523, size: 128, offset: 128)
!2523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2505, file: !2506, line: 83, size: 128, elements: !2524)
!2524 = !{!2525, !2526}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2523, file: !2506, line: 84, baseType: !258, size: 128)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2523, file: !2506, line: 85, baseType: !1116, size: 64)
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2505, file: !2506, line: 87, baseType: !2528, size: 128, offset: 256)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2505, file: !2506, line: 87, size: 128, elements: !2529)
!2529 = !{!2530, !2531}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2528, file: !2506, line: 88, baseType: !756, size: 128)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2528, file: !2506, line: 89, baseType: !488, size: 128, align: 64)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2505, file: !2506, line: 92, baseType: !7, size: 32, offset: 384)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2501, file: !76, line: 183, baseType: !2534, size: 128, offset: 64)
!2534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 128, elements: !1739)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2498, file: !76, line: 190, baseType: !2536, size: 256)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2498, file: !76, line: 186, size: 256, elements: !2537)
!2537 = !{!2538, !2539, !2540}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2536, file: !76, line: 187, baseType: !7, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2536, file: !76, line: 188, baseType: !258, size: 128, offset: 64)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !2536, file: !76, line: 189, baseType: !2541, size: 64, offset: 192)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 64)
!2542 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !76, line: 62, baseType: !2543)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{null, !2378, !2545}
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !2092, line: 58, baseType: !213)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !2379, file: !76, line: 193, baseType: !2096, size: 64, offset: 1280)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2379, file: !76, line: 194, baseType: !2116, size: 64, offset: 1344)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !2379, file: !76, line: 200, baseType: !242, size: 64, offset: 1408)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !2379, file: !76, line: 202, baseType: !242, size: 64, offset: 1472)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !2379, file: !76, line: 212, baseType: !220, size: 16, offset: 1536)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !2379, file: !76, line: 218, baseType: !220, size: 16, offset: 1552)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !2379, file: !76, line: 221, baseType: !220, size: 16, offset: 1568)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !2379, file: !76, line: 229, baseType: !220, size: 16, offset: 1584)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2379, file: !76, line: 230, baseType: !220, size: 16, offset: 1600)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2379, file: !76, line: 232, baseType: !75, size: 32, offset: 1632)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2379, file: !76, line: 233, baseType: !1404, size: 32, offset: 1664)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2379, file: !76, line: 235, baseType: !7, size: 32, offset: 1696)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2379, file: !76, line: 236, baseType: !195, size: 64, offset: 1728)
!2559 = !DIDerivedType(tag: DW_TAG_member, scope: !2379, file: !76, line: 238, baseType: !2560, size: 256, offset: 1792)
!2560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2379, file: !76, line: 238, size: 256, elements: !2561)
!2561 = !{!2562, !2591}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !2560, file: !76, line: 239, baseType: !2563, size: 256)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !2564, line: 23, size: 256, elements: !2565)
!2564 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!2565 = !{!2566, !2588, !2590}
!2566 = !DIDerivedType(tag: DW_TAG_member, scope: !2563, file: !2564, line: 24, baseType: !2567, size: 128)
!2567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2563, file: !2564, line: 24, size: 128, elements: !2568)
!2568 = !{!2569, !2581}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2567, file: !2564, line: 25, baseType: !2570, size: 128)
!2570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !2571, line: 58, size: 128, elements: !2572)
!2571 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!2572 = !{!2573, !2574, !2579, !2580}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2570, file: !2571, line: 59, baseType: !482, size: 64)
!2574 = !DIDerivedType(tag: DW_TAG_member, scope: !2570, file: !2571, line: 60, baseType: !2575, size: 32, offset: 64)
!2575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2570, file: !2571, line: 60, size: 32, elements: !2576)
!2576 = !{!2577, !2578}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !2575, file: !2571, line: 61, baseType: !7, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !2575, file: !2571, line: 62, baseType: !914, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2570, file: !2571, line: 65, baseType: !218, size: 16, offset: 96)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2570, file: !2571, line: 65, baseType: !218, size: 16, offset: 112)
!2581 = !DIDerivedType(tag: DW_TAG_member, scope: !2567, file: !2564, line: 26, baseType: !2582, size: 128)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2567, file: !2564, line: 26, size: 128, elements: !2583)
!2583 = !{!2584, !2585, !2586, !2587}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2582, file: !2564, line: 27, baseType: !482, size: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2582, file: !2564, line: 28, baseType: !7, size: 32, offset: 64)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2582, file: !2564, line: 30, baseType: !218, size: 16, offset: 96)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2582, file: !2564, line: 30, baseType: !218, size: 16, offset: 112)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2563, file: !2564, line: 34, baseType: !2589, size: 64, offset: 128)
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !2564, line: 17, baseType: !583)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2563, file: !2564, line: 35, baseType: !197, size: 64, offset: 192)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !2560, file: !76, line: 240, baseType: !242, size: 64)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !2379, file: !76, line: 246, baseType: !2541, size: 64, offset: 2048)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !2379, file: !76, line: 247, baseType: !197, size: 64, offset: 2112)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !2375, file: !76, line: 401, baseType: !2595, size: 64, offset: 64)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 64)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !82, line: 101, size: 4992, elements: !2597)
!2597 = !{!2598, !2710, !2711, !2712, !2713, !2714}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2596, file: !82, line: 103, baseType: !2599, size: 64)
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 64)
!2600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !82, line: 66, size: 2240, elements: !2601)
!2601 = !{!2602, !2603, !2685, !2686, !2687, !2700, !2701, !2702, !2704, !2705, !2709}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !2600, file: !82, line: 69, baseType: !1116, size: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2600, file: !82, line: 72, baseType: !2604, size: 1408, offset: 64)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !82, line: 29, size: 1408, elements: !2605)
!2605 = !{!2606, !2610, !2614, !2618, !2622, !2626, !2630, !2634, !2639, !2643, !2647, !2653, !2657, !2658, !2662, !2666, !2670, !2674, !2675, !2679, !2680, !2684}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !2604, file: !82, line: 30, baseType: !2607, size: 64)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 64)
!2608 = !DISubroutineType(types: !2609)
!2609 = !{!188, !2374, !2599}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !2604, file: !82, line: 31, baseType: !2611, size: 64, offset: 64)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{null, !2595}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !2604, file: !82, line: 32, baseType: !2615, size: 64, offset: 128)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 64)
!2616 = !DISubroutineType(types: !2617)
!2617 = !{!188, !2386, !7}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !2604, file: !82, line: 33, baseType: !2619, size: 64, offset: 192)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 64)
!2620 = !DISubroutineType(types: !2621)
!2621 = !{null, !2386, !7}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !2604, file: !82, line: 34, baseType: !2623, size: 64, offset: 256)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 64)
!2624 = !DISubroutineType(types: !2625)
!2625 = !{null, !2386}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !2604, file: !82, line: 36, baseType: !2627, size: 64, offset: 320)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{!605, !2374, !2378, !2090}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !2604, file: !82, line: 37, baseType: !2631, size: 64, offset: 384)
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 64)
!2632 = !DISubroutineType(types: !2633)
!2633 = !{!605, !2386, !2090, !7}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !2604, file: !82, line: 38, baseType: !2635, size: 64, offset: 448)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = !DISubroutineType(types: !2637)
!2637 = !{!188, !2374, !2638, !2090}
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !2604, file: !82, line: 39, baseType: !2640, size: 64, offset: 512)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64)
!2641 = !DISubroutineType(types: !2642)
!2642 = !{null, !2374, !2378, !81}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !2604, file: !82, line: 40, baseType: !2644, size: 64, offset: 576)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{null, !2374, !2378, !2378}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !2604, file: !82, line: 41, baseType: !2648, size: 64, offset: 640)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64)
!2649 = !DISubroutineType(types: !2650)
!2650 = !{null, !7, !2651}
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64)
!2652 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !82, line: 26, flags: DIFlagFwdDecl)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !2604, file: !82, line: 42, baseType: !2654, size: 64, offset: 704)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = !DISubroutineType(types: !2656)
!2656 = !{null, !2378}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !2604, file: !82, line: 43, baseType: !2654, size: 64, offset: 768)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !2604, file: !82, line: 44, baseType: !2659, size: 64, offset: 832)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!2660 = !DISubroutineType(types: !2661)
!2661 = !{null, !2386, !261, !605}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !2604, file: !82, line: 45, baseType: !2663, size: 64, offset: 896)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!2378, !2386}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !2604, file: !82, line: 46, baseType: !2667, size: 64, offset: 960)
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 64)
!2668 = !DISubroutineType(types: !2669)
!2669 = !{!605, !2386}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !2604, file: !82, line: 47, baseType: !2671, size: 64, offset: 1024)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 64)
!2672 = !DISubroutineType(types: !2673)
!2673 = !{null, !2378, !242}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !2604, file: !82, line: 48, baseType: !2654, size: 64, offset: 1088)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !2604, file: !82, line: 49, baseType: !2676, size: 64, offset: 1152)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64)
!2677 = !DISubroutineType(types: !2678)
!2678 = !{!2378, !2374, !2378}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !2604, file: !82, line: 50, baseType: !2676, size: 64, offset: 1216)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !2604, file: !82, line: 51, baseType: !2681, size: 64, offset: 1280)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{null, !2504}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !2604, file: !82, line: 52, baseType: !2681, size: 64, offset: 1344)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !2600, file: !82, line: 74, baseType: !445, size: 64, offset: 1472)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !2600, file: !82, line: 75, baseType: !445, size: 64, offset: 1536)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !2600, file: !82, line: 76, baseType: !2688, size: 64, offset: 1600)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64)
!2689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !82, line: 57, size: 256, elements: !2690)
!2690 = !{!2691, !2692, !2696}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2689, file: !82, line: 58, baseType: !436, size: 128)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2689, file: !82, line: 59, baseType: !2693, size: 64, offset: 128)
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 64)
!2694 = !DISubroutineType(types: !2695)
!2695 = !{!430, !2595, !399}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2689, file: !82, line: 60, baseType: !2697, size: 64, offset: 192)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64)
!2698 = !DISubroutineType(types: !2699)
!2699 = !{!430, !2595, !284, !445}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !2600, file: !82, line: 77, baseType: !284, size: 64, offset: 1664)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !2600, file: !82, line: 78, baseType: !284, size: 64, offset: 1728)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !2600, file: !82, line: 79, baseType: !2703, size: 32, offset: 1792)
!2703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !2600, file: !82, line: 80, baseType: !747, size: 64, offset: 1856)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !2600, file: !82, line: 87, baseType: !2706, size: 176, offset: 1920)
!2706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 176, elements: !2707)
!2707 = !{!2708}
!2708 = !DISubrange(count: 22)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2600, file: !82, line: 88, baseType: !258, size: 128, offset: 2112)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !2596, file: !82, line: 104, baseType: !197, size: 64, offset: 64)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2596, file: !82, line: 105, baseType: !345, size: 512, offset: 128)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2596, file: !82, line: 106, baseType: !840, size: 192, offset: 640)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !2596, file: !82, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2596, file: !82, line: 108, baseType: !2715, size: 4096, offset: 896)
!2715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !752, size: 4096, elements: !404)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !2375, file: !76, line: 403, baseType: !2126, size: 128, offset: 128)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2375, file: !76, line: 405, baseType: !2718, size: 64, offset: 256)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !76, line: 43, flags: DIFlagFwdDecl)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !2375, file: !76, line: 406, baseType: !2721, size: 64, offset: 320)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2722 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !76, line: 42, flags: DIFlagFwdDecl)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !2375, file: !76, line: 408, baseType: !2724, size: 64, offset: 384)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 64)
!2725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2726)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !2388, line: 290, size: 960, elements: !2727)
!2727 = !{!2728, !2738, !2739, !2743, !2747, !2751, !2755, !2756, !2760, !2761, !2808, !2812, !2813, !2814, !2815}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "queue_rq", scope: !2726, file: !2388, line: 294, baseType: !2729, size: 64)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 64)
!2730 = !DISubroutineType(types: !2731)
!2731 = !{!2545, !2386, !2732}
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 64)
!2733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_data", file: !2388, line: 277, size: 128, elements: !2735)
!2735 = !{!2736, !2737}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "rq", scope: !2734, file: !2388, line: 278, baseType: !2378, size: 64)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !2734, file: !2388, line: 279, baseType: !605, size: 8, offset: 64)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !2726, file: !2388, line: 304, baseType: !2623, size: 64, offset: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "get_budget", scope: !2726, file: !2388, line: 312, baseType: !2740, size: 64, offset: 128)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = !DISubroutineType(types: !2742)
!2742 = !{!605, !2374}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "put_budget", scope: !2726, file: !2388, line: 317, baseType: !2744, size: 64, offset: 192)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = !DISubroutineType(types: !2746)
!2746 = !{null, !2374}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2726, file: !2388, line: 322, baseType: !2748, size: 64, offset: 256)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = !DISubroutineType(types: !2750)
!2750 = !{!88, !2378, !605}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2726, file: !2388, line: 327, baseType: !2752, size: 64, offset: 320)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 64)
!2753 = !DISubroutineType(types: !2754)
!2754 = !{!188, !2386}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !2726, file: !2388, line: 332, baseType: !2654, size: 64, offset: 384)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !2726, file: !2388, line: 339, baseType: !2757, size: 64, offset: 448)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{!188, !2386, !197, !7}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !2726, file: !2388, line: 343, baseType: !2619, size: 64, offset: 512)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "init_request", scope: !2726, file: !2388, line: 352, baseType: !2762, size: 64, offset: 576)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = !DISubroutineType(types: !2764)
!2764 = !{!188, !2765, !2378, !7, !7}
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !2388, line: 249, size: 2304, elements: !2767)
!2767 = !{!2768, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2803, !2804, !2806, !2807}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2766, file: !2388, line: 250, baseType: !2769, size: 384)
!2769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2770, size: 384, elements: !400)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_map", file: !2388, line: 195, size: 128, elements: !2771)
!2771 = !{!2772, !2774, !2775}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "mq_map", scope: !2770, file: !2388, line: 196, baseType: !2773, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "nr_queues", scope: !2770, file: !2388, line: 197, baseType: !7, size: 32, offset: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "queue_offset", scope: !2770, file: !2388, line: 198, baseType: !7, size: 32, offset: 96)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "nr_maps", scope: !2766, file: !2388, line: 251, baseType: !7, size: 32, offset: 384)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2766, file: !2388, line: 252, baseType: !2724, size: 64, offset: 448)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2766, file: !2388, line: 253, baseType: !7, size: 32, offset: 512)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2766, file: !2388, line: 254, baseType: !7, size: 32, offset: 544)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tags", scope: !2766, file: !2388, line: 255, baseType: !7, size: 32, offset: 576)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2766, file: !2388, line: 256, baseType: !7, size: 32, offset: 608)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !2766, file: !2388, line: 257, baseType: !188, size: 32, offset: 640)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2766, file: !2388, line: 258, baseType: !7, size: 32, offset: 672)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2766, file: !2388, line: 259, baseType: !7, size: 32, offset: 704)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2766, file: !2388, line: 260, baseType: !197, size: 64, offset: 768)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "active_queues_shared_sbitmap", scope: !2766, file: !2388, line: 261, baseType: !914, size: 32, offset: 832)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "__bitmap_tags", scope: !2766, file: !2388, line: 263, baseType: !2788, size: 512, offset: 896)
!2788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_queue", file: !2411, line: 97, size: 512, elements: !2789)
!2789 = !{!2790, !2791, !2792, !2793, !2794, !2800, !2801, !2802}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !2788, file: !2411, line: 101, baseType: !2410, size: 192)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hint", scope: !2788, file: !2411, line: 109, baseType: !2773, size: 64, offset: 192)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "wake_batch", scope: !2788, file: !2411, line: 115, baseType: !7, size: 32, offset: 256)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "wake_index", scope: !2788, file: !2411, line: 120, baseType: !914, size: 32, offset: 288)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !2788, file: !2411, line: 125, baseType: !2795, size: 64, offset: 320)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 64)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbq_wait_state", file: !2411, line: 76, size: 192, elements: !2797)
!2797 = !{!2798, !2799}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "wait_cnt", scope: !2796, file: !2411, line: 80, baseType: !914, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2796, file: !2411, line: 85, baseType: !1652, size: 128, offset: 64)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "ws_active", scope: !2788, file: !2411, line: 130, baseType: !914, size: 32, offset: 384)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "round_robin", scope: !2788, file: !2411, line: 135, baseType: !605, size: 8, offset: 416)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "min_shallow_depth", scope: !2788, file: !2411, line: 141, baseType: !7, size: 32, offset: 448)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "__breserved_tags", scope: !2766, file: !2388, line: 264, baseType: !2788, size: 512, offset: 1408)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2766, file: !2388, line: 265, baseType: !2805, size: 64, offset: 1920)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list_lock", scope: !2766, file: !2388, line: 267, baseType: !840, size: 192, offset: 1984)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list", scope: !2766, file: !2388, line: 268, baseType: !258, size: 128, offset: 2176)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "exit_request", scope: !2726, file: !2388, line: 357, baseType: !2809, size: 64, offset: 640)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2810 = !DISubroutineType(types: !2811)
!2811 = !{null, !2765, !2378, !7}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rq_fn", scope: !2726, file: !2388, line: 363, baseType: !2654, size: 64, offset: 704)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_rq", scope: !2726, file: !2388, line: 369, baseType: !2654, size: 64, offset: 768)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !2726, file: !2388, line: 374, baseType: !2740, size: 64, offset: 832)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !2726, file: !2388, line: 380, baseType: !2816, size: 64, offset: 896)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!188, !2765}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !2375, file: !76, line: 411, baseType: !2383, size: 64, offset: 448)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2375, file: !76, line: 413, baseType: !7, size: 32, offset: 512)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !2375, file: !76, line: 416, baseType: !2822, size: 64, offset: 576)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2375, file: !76, line: 417, baseType: !7, size: 32, offset: 640)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2375, file: !76, line: 419, baseType: !2218, size: 64, offset: 704)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !2375, file: !76, line: 425, baseType: !197, size: 64, offset: 768)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !2375, file: !76, line: 430, baseType: !195, size: 64, offset: 832)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !2375, file: !76, line: 436, baseType: !914, size: 32, offset: 896)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2375, file: !76, line: 442, baseType: !188, size: 32, offset: 928)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !2375, file: !76, line: 447, baseType: !910, size: 32, offset: 960)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !2375, file: !76, line: 449, baseType: !358, offset: 992)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2375, file: !76, line: 454, baseType: !345, size: 512, offset: 1024)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !2375, file: !76, line: 459, baseType: !351, size: 64, offset: 1536)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !2375, file: !76, line: 462, baseType: !2834, size: 128, offset: 1600)
!2834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !2098, line: 159, size: 128, elements: !2835)
!2835 = !{!2836, !2865, !2866, !2867, !2868}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !2834, file: !2098, line: 160, baseType: !2837, size: 64)
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 64)
!2838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2839)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !76, line: 1664, size: 320, elements: !2840)
!2840 = !{!2841, !2855, !2856, !2859, !2864}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !2839, file: !76, line: 1665, baseType: !2842, size: 64)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !76, line: 1660, baseType: !2844)
!2844 = !DISubroutineType(types: !2845)
!2845 = !{!2545, !2846}
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !76, line: 1651, size: 320, elements: !2848)
!2848 = !{!2849, !2850, !2851, !2852, !2853, !2854}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !2847, file: !76, line: 1652, baseType: !197, size: 64)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !2847, file: !76, line: 1653, baseType: !197, size: 64, offset: 64)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !2847, file: !76, line: 1654, baseType: !997, size: 64, offset: 128)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !2847, file: !76, line: 1655, baseType: !7, size: 32, offset: 192)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2847, file: !76, line: 1656, baseType: !220, size: 16, offset: 224)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2847, file: !76, line: 1657, baseType: !284, size: 64, offset: 256)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !2839, file: !76, line: 1666, baseType: !2842, size: 64, offset: 64)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !2839, file: !76, line: 1667, baseType: !2857, size: 64, offset: 128)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !76, line: 1661, baseType: !2655)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !2839, file: !76, line: 1668, baseType: !2860, size: 64, offset: 192)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !76, line: 1662, baseType: !2862)
!2862 = !DISubroutineType(types: !2863)
!2863 = !{null, !2378, !7}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2839, file: !76, line: 1669, baseType: !284, size: 64, offset: 256)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2834, file: !2098, line: 161, baseType: !215, size: 8, offset: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !2834, file: !2098, line: 162, baseType: !215, size: 8, offset: 72)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !2834, file: !2098, line: 163, baseType: !215, size: 8, offset: 80)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !2834, file: !2098, line: 164, baseType: !215, size: 8, offset: 88)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2375, file: !76, line: 466, baseType: !341, size: 64, offset: 1728)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !2375, file: !76, line: 467, baseType: !51, size: 32, offset: 1792)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !2375, file: !76, line: 468, baseType: !7, size: 32, offset: 1824)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !2375, file: !76, line: 474, baseType: !195, size: 64, offset: 1856)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !2375, file: !76, line: 476, baseType: !7, size: 32, offset: 1920)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !2375, file: !76, line: 477, baseType: !7, size: 32, offset: 1952)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !2375, file: !76, line: 484, baseType: !7, size: 32, offset: 1984)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !2375, file: !76, line: 485, baseType: !188, size: 32, offset: 2016)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !2375, file: !76, line: 487, baseType: !2878, size: 64, offset: 2048)
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 64)
!2879 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !76, line: 44, flags: DIFlagFwdDecl)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !2375, file: !76, line: 488, baseType: !2881, size: 5120, offset: 2112)
!2881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2882, size: 5120, elements: !1905)
!2882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !2092, line: 540, size: 320, elements: !2883)
!2883 = !{!2884, !2885, !2886, !2887, !2888}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !2882, file: !2092, line: 541, baseType: !242, size: 64)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2882, file: !2092, line: 542, baseType: !242, size: 64, offset: 64)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2882, file: !2092, line: 543, baseType: !242, size: 64, offset: 128)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !2882, file: !2092, line: 544, baseType: !190, size: 32, offset: 192)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2882, file: !2092, line: 545, baseType: !242, size: 64, offset: 256)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2375, file: !76, line: 490, baseType: !2277, size: 320, offset: 7232)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !2375, file: !76, line: 491, baseType: !2165, size: 256, offset: 7552)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !2375, file: !76, line: 493, baseType: !914, size: 32, offset: 7808)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2375, file: !76, line: 495, baseType: !258, size: 128, offset: 7872)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !2375, file: !76, line: 502, baseType: !2894, size: 896, offset: 8000)
!2894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !76, line: 321, size: 896, elements: !2895)
!2895 = !{!2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !2894, file: !76, line: 322, baseType: !195, size: 64)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !2894, file: !76, line: 323, baseType: !195, size: 64, offset: 64)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !2894, file: !76, line: 324, baseType: !195, size: 64, offset: 128)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !2894, file: !76, line: 326, baseType: !7, size: 32, offset: 192)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !2894, file: !76, line: 327, baseType: !7, size: 32, offset: 224)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !2894, file: !76, line: 328, baseType: !7, size: 32, offset: 256)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !2894, file: !76, line: 329, baseType: !7, size: 32, offset: 288)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !2894, file: !76, line: 330, baseType: !7, size: 32, offset: 320)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !2894, file: !76, line: 331, baseType: !7, size: 32, offset: 352)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !2894, file: !76, line: 332, baseType: !7, size: 32, offset: 384)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !2894, file: !76, line: 333, baseType: !7, size: 32, offset: 416)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !2894, file: !76, line: 334, baseType: !7, size: 32, offset: 448)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !2894, file: !76, line: 335, baseType: !7, size: 32, offset: 480)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !2894, file: !76, line: 336, baseType: !7, size: 32, offset: 512)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !2894, file: !76, line: 337, baseType: !7, size: 32, offset: 544)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !2894, file: !76, line: 338, baseType: !7, size: 32, offset: 576)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !2894, file: !76, line: 339, baseType: !7, size: 32, offset: 608)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !2894, file: !76, line: 340, baseType: !7, size: 32, offset: 640)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !2894, file: !76, line: 341, baseType: !7, size: 32, offset: 672)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !2894, file: !76, line: 342, baseType: !7, size: 32, offset: 704)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !2894, file: !76, line: 344, baseType: !220, size: 16, offset: 736)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !2894, file: !76, line: 345, baseType: !220, size: 16, offset: 752)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !2894, file: !76, line: 346, baseType: !220, size: 16, offset: 768)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !2894, file: !76, line: 348, baseType: !215, size: 8, offset: 784)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !2894, file: !76, line: 349, baseType: !215, size: 8, offset: 792)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !2894, file: !76, line: 350, baseType: !215, size: 8, offset: 800)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !2894, file: !76, line: 351, baseType: !92, size: 32, offset: 832)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !2375, file: !76, line: 504, baseType: !7, size: 32, offset: 8896)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !2375, file: !76, line: 534, baseType: !7, size: 32, offset: 8928)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !2375, file: !76, line: 535, baseType: !7, size: 32, offset: 8960)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2375, file: !76, line: 536, baseType: !188, size: 32, offset: 8992)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !2375, file: !76, line: 537, baseType: !840, size: 192, offset: 9024)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2375, file: !76, line: 544, baseType: !2406, size: 64, offset: 9216)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !2375, file: !76, line: 546, baseType: !258, size: 128, offset: 9280)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !2375, file: !76, line: 547, baseType: !358, offset: 9408)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !2375, file: !76, line: 548, baseType: !2273, size: 704, offset: 9408)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2375, file: !76, line: 550, baseType: !840, size: 192, offset: 10112)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !2375, file: !76, line: 551, baseType: !840, size: 192, offset: 10304)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !2375, file: !76, line: 557, baseType: !258, size: 128, offset: 10496)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !2375, file: !76, line: 558, baseType: !358, offset: 10624)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !2375, file: !76, line: 560, baseType: !188, size: 32, offset: 10624)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !2375, file: !76, line: 563, baseType: !2938, size: 256, offset: 10688)
!2938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !2939, line: 18, size: 256, elements: !2940)
!2939 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!2940 = !{!2941, !2942, !2943, !2944}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !2938, file: !2939, line: 19, baseType: !341, size: 64)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !2938, file: !2939, line: 20, baseType: !188, size: 32, offset: 64)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2938, file: !2939, line: 21, baseType: !2374, size: 64, offset: 128)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2938, file: !2939, line: 22, baseType: !2945, size: 64, offset: 192)
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 64)
!2946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2947)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !2939, line: 10, size: 256, elements: !2948)
!2948 = !{!2949, !2990, !2994, !2998}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !2947, file: !2939, line: 11, baseType: !2950, size: 64)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 64)
!2951 = !DISubroutineType(types: !2952)
!2952 = !{!188, !2953}
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !2955, line: 22, size: 1280, elements: !2956)
!2955 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!2956 = !{!2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !2954, file: !2955, line: 23, baseType: !1616, size: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2954, file: !2955, line: 24, baseType: !192, size: 32, offset: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !2954, file: !2955, line: 25, baseType: !192, size: 32, offset: 64)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !2954, file: !2955, line: 28, baseType: !192, size: 32, offset: 96)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !2954, file: !2955, line: 29, baseType: !243, size: 64, offset: 128)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !2954, file: !2955, line: 30, baseType: !243, size: 64, offset: 192)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !2954, file: !2955, line: 31, baseType: !192, size: 32, offset: 256)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !2954, file: !2955, line: 32, baseType: !192, size: 32, offset: 288)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !2954, file: !2955, line: 33, baseType: !192, size: 32, offset: 320)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !2954, file: !2955, line: 34, baseType: !192, size: 32, offset: 352)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !2954, file: !2955, line: 35, baseType: !243, size: 64, offset: 384)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !2954, file: !2955, line: 38, baseType: !192, size: 32, offset: 448)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !2954, file: !2955, line: 40, baseType: !192, size: 32, offset: 480)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !2954, file: !2955, line: 41, baseType: !192, size: 32, offset: 512)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !2954, file: !2955, line: 42, baseType: !192, size: 32, offset: 544)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !2954, file: !2955, line: 43, baseType: !243, size: 64, offset: 576)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !2954, file: !2955, line: 44, baseType: !243, size: 64, offset: 640)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2954, file: !2955, line: 46, baseType: !192, size: 32, offset: 704)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2954, file: !2955, line: 47, baseType: !192, size: 32, offset: 736)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !2954, file: !2955, line: 48, baseType: !243, size: 64, offset: 768)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !2954, file: !2955, line: 49, baseType: !192, size: 32, offset: 832)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !2954, file: !2955, line: 51, baseType: !192, size: 32, offset: 864)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !2954, file: !2955, line: 52, baseType: !192, size: 32, offset: 896)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !2954, file: !2955, line: 53, baseType: !192, size: 32, offset: 928)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !2954, file: !2955, line: 54, baseType: !192, size: 32, offset: 960)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2954, file: !2955, line: 55, baseType: !192, size: 32, offset: 992)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2954, file: !2955, line: 56, baseType: !192, size: 32, offset: 1024)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !2954, file: !2955, line: 57, baseType: !192, size: 32, offset: 1056)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !2954, file: !2955, line: 58, baseType: !1616, size: 32, offset: 1088)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !2954, file: !2955, line: 59, baseType: !1616, size: 32, offset: 1120)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !2954, file: !2955, line: 60, baseType: !243, size: 64, offset: 1152)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !2954, file: !2955, line: 61, baseType: !192, size: 32, offset: 1216)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2954, file: !2955, line: 63, baseType: !192, size: 32, offset: 1248)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !2947, file: !2939, line: 12, baseType: !2991, size: 64, offset: 64)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 64)
!2992 = !DISubroutineType(types: !2993)
!2993 = !{!188, !2378, !2953, !2301}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !2947, file: !2939, line: 14, baseType: !2995, size: 64, offset: 128)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = !DISubroutineType(types: !2997)
!2997 = !{!188, !2378, !2953}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !2947, file: !2939, line: 15, baseType: !2654, size: 64, offset: 192)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2375, file: !76, line: 570, baseType: !488, size: 128, align: 64, offset: 10944)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !2375, file: !76, line: 571, baseType: !1652, size: 128, offset: 11072)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !2375, file: !76, line: 576, baseType: !840, size: 192, offset: 11200)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !2375, file: !76, line: 578, baseType: !2765, size: 64, offset: 11392)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !2375, file: !76, line: 579, baseType: !258, size: 128, offset: 11456)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !2375, file: !76, line: 580, baseType: !3005, size: 2368, offset: 11584)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !2087, line: 682, size: 2368, elements: !3006)
!3006 = !{!3007, !3008, !3009, !3030, !3031, !3032, !3033, !3034, !3035, !3036}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !3005, file: !2087, line: 683, baseType: !1116, size: 64)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !3005, file: !2087, line: 684, baseType: !7, size: 32, offset: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !3005, file: !2087, line: 686, baseType: !3010, size: 448, offset: 128)
!3010 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !3011, line: 26, baseType: !3012)
!3011 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !3011, line: 16, size: 448, elements: !3013)
!3013 = !{!3014, !3015, !3016, !3017, !3018, !3019, !3024, !3029}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3012, file: !3011, line: 17, baseType: !358)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !3012, file: !3011, line: 18, baseType: !188, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !3012, file: !3011, line: 19, baseType: !188, size: 32, offset: 32)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !3012, file: !3011, line: 20, baseType: !988, size: 64, offset: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !3012, file: !3011, line: 22, baseType: !197, size: 64, offset: 128)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3012, file: !3011, line: 23, baseType: !3020, size: 64, offset: 192)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64)
!3021 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !3011, line: 13, baseType: !3022)
!3022 = !DISubroutineType(types: !3023)
!3023 = !{!197, !910, !197}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3012, file: !3011, line: 24, baseType: !3025, size: 64, offset: 256)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3026 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !3011, line: 14, baseType: !3027)
!3027 = !DISubroutineType(types: !3028)
!3028 = !{null, !197, !197}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3012, file: !3011, line: 25, baseType: !1652, size: 128, offset: 320)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !3005, file: !2087, line: 687, baseType: !3010, size: 448, offset: 576)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !3005, file: !2087, line: 689, baseType: !3010, size: 448, offset: 1024)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !3005, file: !2087, line: 690, baseType: !3010, size: 448, offset: 1472)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !3005, file: !2087, line: 697, baseType: !358, offset: 1920)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !3005, file: !2087, line: 698, baseType: !2086, size: 128, offset: 1920)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !3005, file: !2087, line: 699, baseType: !2165, size: 256, offset: 2048)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !3005, file: !2087, line: 700, baseType: !2177, size: 64, offset: 2304)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !2375, file: !76, line: 582, baseType: !505, size: 64, offset: 13952)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !2375, file: !76, line: 589, baseType: !605, size: 8, offset: 14016)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2375, file: !76, line: 591, baseType: !445, size: 64, offset: 14080)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !2375, file: !76, line: 594, baseType: !3041, size: 320, offset: 14144)
!3041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 320, elements: !3042)
!3042 = !{!3043}
!3043 = !DISubrange(count: 5)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !2097, file: !2098, line: 191, baseType: !197, size: 64, offset: 7168)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2097, file: !2098, line: 193, baseType: !188, size: 32, offset: 7232)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2097, file: !2098, line: 194, baseType: !195, size: 64, offset: 7296)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !2097, file: !2098, line: 196, baseType: !934, size: 256, offset: 7360)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !2097, file: !2098, line: 197, baseType: !351, size: 64, offset: 7616)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !2097, file: !2098, line: 199, baseType: !3050, size: 64, offset: 7680)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !2098, line: 199, flags: DIFlagFwdDecl)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !2097, file: !2098, line: 200, baseType: !914, size: 32, offset: 7744)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !2097, file: !2098, line: 201, baseType: !3054, size: 64, offset: 7808)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 64)
!3055 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !2098, line: 156, flags: DIFlagFwdDecl)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !2097, file: !2098, line: 203, baseType: !345, size: 512, offset: 7872)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !2097, file: !2098, line: 208, baseType: !188, size: 32, offset: 8384)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2097, file: !2098, line: 209, baseType: !3059, size: 64, offset: 8448)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!3060 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !2098, line: 157, flags: DIFlagFwdDecl)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !2097, file: !2098, line: 210, baseType: !3062, offset: 8512)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !763, line: 192, elements: !372)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !2091, file: !2092, line: 206, baseType: !7, size: 32, offset: 128)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !2091, file: !2092, line: 210, baseType: !220, size: 16, offset: 160)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !2091, file: !2092, line: 211, baseType: !220, size: 16, offset: 176)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !2091, file: !2092, line: 212, baseType: !220, size: 16, offset: 192)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !2091, file: !2092, line: 213, baseType: !2545, size: 8, offset: 208)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !2091, file: !2092, line: 214, baseType: !213, size: 8, offset: 216)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !2091, file: !2092, line: 215, baseType: !914, size: 32, offset: 224)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !2091, file: !2092, line: 217, baseType: !3071, size: 192, offset: 256)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !2490, line: 37, size: 192, elements: !3072)
!3072 = !{!3073, !3074, !3075, !3076}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !3071, file: !2490, line: 38, baseType: !997, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !3071, file: !2490, line: 40, baseType: !7, size: 32, offset: 64)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !3071, file: !2490, line: 42, baseType: !7, size: 32, offset: 96)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !3071, file: !2490, line: 44, baseType: !7, size: 32, offset: 128)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !2091, file: !2092, line: 219, baseType: !3078, size: 64, offset: 448)
!3078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 64)
!3079 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !2092, line: 19, baseType: !3080)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{null, !2090}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !2091, file: !2092, line: 221, baseType: !197, size: 64, offset: 512)
!3083 = !DIDerivedType(tag: DW_TAG_member, scope: !2091, file: !2092, line: 240, baseType: !3084, size: 64, offset: 576)
!3084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2091, file: !2092, line: 240, size: 64, elements: !3085)
!3085 = !{!3086}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !3084, file: !2092, line: 242, baseType: !3087, size: 64)
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3088, size: 64)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !2087, line: 313, size: 832, elements: !3089)
!3089 = !{!3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3100}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !3088, file: !2087, line: 314, baseType: !2090, size: 64)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !3088, file: !2087, line: 316, baseType: !3071, size: 192, offset: 64)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !3088, file: !2087, line: 318, baseType: !220, size: 16, offset: 256)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !3088, file: !2087, line: 319, baseType: !220, size: 16, offset: 272)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !3088, file: !2087, line: 320, baseType: !220, size: 16, offset: 288)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !3088, file: !2087, line: 321, baseType: !220, size: 16, offset: 304)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !3088, file: !2087, line: 323, baseType: !3071, size: 192, offset: 320)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !3088, file: !2087, line: 325, baseType: !2165, size: 256, offset: 512)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !3088, file: !2087, line: 327, baseType: !3099, size: 64, offset: 768)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !3088, file: !2087, line: 328, baseType: !3101, offset: 832)
!3101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2489, elements: !2181)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !2091, file: !2092, line: 246, baseType: !220, size: 16, offset: 640)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !2091, file: !2092, line: 252, baseType: !220, size: 16, offset: 656)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !2091, file: !2092, line: 254, baseType: !914, size: 32, offset: 672)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !2091, file: !2092, line: 256, baseType: !3099, size: 64, offset: 704)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !2091, file: !2092, line: 258, baseType: !3107, size: 64, offset: 768)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 64)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !2091, file: !2092, line: 265, baseType: !3101, offset: 832)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2086, file: !2087, line: 556, baseType: !2090, size: 64, offset: 64)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1391, file: !1392, line: 1050, baseType: !3111, size: 64, offset: 10688)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !76, line: 1236, size: 320, elements: !3113)
!3113 = !{!3114, !3115, !3116, !3117, !3118}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !3112, file: !76, line: 1237, baseType: !258, size: 128)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !3112, file: !76, line: 1238, baseType: !258, size: 128, offset: 128)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !3112, file: !76, line: 1239, baseType: !220, size: 16, offset: 256)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !3112, file: !76, line: 1240, baseType: !605, size: 8, offset: 272)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !3112, file: !76, line: 1241, baseType: !605, size: 8, offset: 280)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1391, file: !1392, line: 1054, baseType: !3120, size: 64, offset: 10752)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1392, line: 55, flags: DIFlagFwdDecl)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1391, file: !1392, line: 1056, baseType: !2218, size: 64, offset: 10816)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1391, file: !1392, line: 1058, baseType: !2510, size: 64, offset: 10880)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1391, file: !1392, line: 1061, baseType: !3125, size: 64, offset: 10944)
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3126, size: 64)
!3126 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1392, line: 43, flags: DIFlagFwdDecl)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1391, file: !1392, line: 1064, baseType: !195, size: 64, offset: 11008)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1391, file: !1392, line: 1065, baseType: !3129, size: 64, offset: 11072)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1935, line: 14, baseType: !3131)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1935, line: 12, size: 384, elements: !3132)
!3132 = !{!3133}
!3133 = !DIDerivedType(tag: DW_TAG_member, scope: !3131, file: !1935, line: 13, baseType: !3134, size: 384)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3131, file: !1935, line: 13, size: 384, elements: !3135)
!3135 = !{!3136, !3137, !3138, !3139}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3134, file: !1935, line: 13, baseType: !188, size: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3134, file: !1935, line: 13, baseType: !188, size: 32, offset: 32)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3134, file: !1935, line: 13, baseType: !188, size: 32, offset: 64)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3134, file: !1935, line: 13, baseType: !3140, size: 256, offset: 128)
!3140 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3141, line: 32, size: 256, elements: !3142)
!3141 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3142 = !{!3143, !3148, !3161, !3167, !3176, !3196, !3201}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3140, file: !3141, line: 37, baseType: !3144, size: 64)
!3144 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3140, file: !3141, line: 34, size: 64, elements: !3145)
!3145 = !{!3146, !3147}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3144, file: !3141, line: 35, baseType: !1631, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3144, file: !3141, line: 36, baseType: !556, size: 32, offset: 32)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3140, file: !3141, line: 45, baseType: !3149, size: 192)
!3149 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3140, file: !3141, line: 40, size: 192, elements: !3150)
!3150 = !{!3151, !3153, !3154, !3160}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3149, file: !3141, line: 41, baseType: !3152, size: 32)
!3152 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !432, line: 95, baseType: !188)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3149, file: !3141, line: 42, baseType: !188, size: 32, offset: 32)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3149, file: !3141, line: 43, baseType: !3155, size: 64, offset: 64)
!3155 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3141, line: 11, baseType: !3156)
!3156 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3141, line: 8, size: 64, elements: !3157)
!3157 = !{!3158, !3159}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3156, file: !3141, line: 9, baseType: !188, size: 32)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3156, file: !3141, line: 10, baseType: !197, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3149, file: !3141, line: 44, baseType: !188, size: 32, offset: 128)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3140, file: !3141, line: 52, baseType: !3162, size: 128)
!3162 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3140, file: !3141, line: 48, size: 128, elements: !3163)
!3163 = !{!3164, !3165, !3166}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3162, file: !3141, line: 49, baseType: !1631, size: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3162, file: !3141, line: 50, baseType: !556, size: 32, offset: 32)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3162, file: !3141, line: 51, baseType: !3155, size: 64, offset: 64)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3140, file: !3141, line: 61, baseType: !3168, size: 256)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3140, file: !3141, line: 55, size: 256, elements: !3169)
!3169 = !{!3170, !3171, !3172, !3173, !3175}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3168, file: !3141, line: 56, baseType: !1631, size: 32)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3168, file: !3141, line: 57, baseType: !556, size: 32, offset: 32)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3168, file: !3141, line: 58, baseType: !188, size: 32, offset: 64)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3168, file: !3141, line: 59, baseType: !3174, size: 64, offset: 128)
!3174 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !432, line: 94, baseType: !433)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3168, file: !3141, line: 60, baseType: !3174, size: 64, offset: 192)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3140, file: !3141, line: 95, baseType: !3177, size: 256)
!3177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3140, file: !3141, line: 64, size: 256, elements: !3178)
!3178 = !{!3179, !3180}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3177, file: !3141, line: 65, baseType: !197, size: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, scope: !3177, file: !3141, line: 77, baseType: !3181, size: 192, offset: 64)
!3181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3177, file: !3141, line: 77, size: 192, elements: !3182)
!3182 = !{!3183, !3184, !3191}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3181, file: !3141, line: 82, baseType: !1379, size: 16)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3181, file: !3141, line: 88, baseType: !3185, size: 192)
!3185 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3181, file: !3141, line: 84, size: 192, elements: !3186)
!3186 = !{!3187, !3189, !3190}
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3185, file: !3141, line: 85, baseType: !3188, size: 64)
!3188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 64, elements: !1504)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3185, file: !3141, line: 86, baseType: !197, size: 64, offset: 64)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3185, file: !3141, line: 87, baseType: !197, size: 64, offset: 128)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3181, file: !3141, line: 93, baseType: !3192, size: 96)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3181, file: !3141, line: 90, size: 96, elements: !3193)
!3193 = !{!3194, !3195}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3192, file: !3141, line: 91, baseType: !3188, size: 64)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3192, file: !3141, line: 92, baseType: !192, size: 32, offset: 64)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3140, file: !3141, line: 101, baseType: !3197, size: 128)
!3197 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3140, file: !3141, line: 98, size: 128, elements: !3198)
!3198 = !{!3199, !3200}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3197, file: !3141, line: 99, baseType: !434, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3197, file: !3141, line: 100, baseType: !188, size: 32, offset: 64)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3140, file: !3141, line: 108, baseType: !3202, size: 128)
!3202 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3140, file: !3141, line: 104, size: 128, elements: !3203)
!3203 = !{!3204, !3205, !3206}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3202, file: !3141, line: 105, baseType: !197, size: 64)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3202, file: !3141, line: 106, baseType: !188, size: 32, offset: 64)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3202, file: !3141, line: 107, baseType: !7, size: 32, offset: 96)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1391, file: !1392, line: 1067, baseType: !2007, offset: 11136)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1391, file: !1392, line: 1099, baseType: !3209, size: 64, offset: 11136)
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 64)
!3210 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1392, line: 56, flags: DIFlagFwdDecl)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1391, file: !1392, line: 1103, baseType: !258, size: 128, offset: 11200)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1391, file: !1392, line: 1104, baseType: !3213, size: 64, offset: 11328)
!3213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 64)
!3214 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1392, line: 46, flags: DIFlagFwdDecl)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1391, file: !1392, line: 1105, baseType: !840, size: 192, offset: 11392)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1391, file: !1392, line: 1106, baseType: !7, size: 32, offset: 11584)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1391, file: !1392, line: 1109, baseType: !3218, size: 128, offset: 11648)
!3218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3219, size: 128, elements: !1739)
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 64)
!3220 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1392, line: 51, flags: DIFlagFwdDecl)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1391, file: !1392, line: 1110, baseType: !840, size: 192, offset: 11776)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1391, file: !1392, line: 1111, baseType: !258, size: 128, offset: 11968)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1391, file: !1392, line: 1173, baseType: !3224, size: 64, offset: 12096)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 64)
!3225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3226, line: 62, size: 256, align: 256, elements: !3227)
!3226 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3227 = !{!3228, !3229, !3230, !3235}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3225, file: !3226, line: 75, baseType: !192, size: 32)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3225, file: !3226, line: 90, baseType: !192, size: 32, offset: 32)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3225, file: !3226, line: 124, baseType: !3231, size: 64, offset: 64)
!3231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3225, file: !3226, line: 109, size: 64, elements: !3232)
!3232 = !{!3233, !3234}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3231, file: !3226, line: 110, baseType: !243, size: 64)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3231, file: !3226, line: 112, baseType: !243, size: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3225, file: !3226, line: 144, baseType: !192, size: 32, offset: 128)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1391, file: !1392, line: 1174, baseType: !190, size: 32, offset: 12160)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1391, file: !1392, line: 1179, baseType: !195, size: 64, offset: 12224)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1391, file: !1392, line: 1182, baseType: !3239, size: 128, offset: 12288)
!3239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1333, line: 76, size: 128, elements: !3240)
!3240 = !{!3241, !3246, !3247}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3239, file: !1333, line: 85, baseType: !3242, size: 64)
!3242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3243, line: 7, size: 64, elements: !3244)
!3243 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3244 = !{!3245}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3242, file: !3243, line: 12, baseType: !1539, size: 64)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3239, file: !1333, line: 88, baseType: !605, size: 8, offset: 64)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3239, file: !1333, line: 95, baseType: !605, size: 8, offset: 72)
!3248 = !DIDerivedType(tag: DW_TAG_member, scope: !1391, file: !1392, line: 1184, baseType: !3249, size: 128, offset: 12416)
!3249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1391, file: !1392, line: 1184, size: 128, elements: !3250)
!3250 = !{!3251, !3252}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3249, file: !1392, line: 1185, baseType: !1404, size: 32)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3249, file: !1392, line: 1186, baseType: !488, size: 128, align: 64)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1391, file: !1392, line: 1190, baseType: !3254, size: 64, offset: 12544)
!3254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3255, size: 64)
!3255 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1392, line: 53, flags: DIFlagFwdDecl)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1391, file: !1392, line: 1192, baseType: !3257, size: 128, offset: 12608)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1333, line: 64, size: 128, elements: !3258)
!3258 = !{!3259, !3260, !3261}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3257, file: !1333, line: 65, baseType: !887, size: 64)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3257, file: !1333, line: 67, baseType: !192, size: 32, offset: 64)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3257, file: !1333, line: 68, baseType: !192, size: 32, offset: 96)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1391, file: !1392, line: 1206, baseType: !188, size: 32, offset: 12736)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1391, file: !1392, line: 1207, baseType: !188, size: 32, offset: 12768)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1391, file: !1392, line: 1209, baseType: !195, size: 64, offset: 12800)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1391, file: !1392, line: 1219, baseType: !242, size: 64, offset: 12864)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1391, file: !1392, line: 1220, baseType: !242, size: 64, offset: 12928)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1391, file: !1392, line: 1317, baseType: !188, size: 32, offset: 12992)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1391, file: !1392, line: 1319, baseType: !1390, size: 64, offset: 13056)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1391, file: !1392, line: 1322, baseType: !3270, size: 64, offset: 13120)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3272, line: 56, size: 512, elements: !3273)
!3272 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3273 = !{!3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3271, file: !3272, line: 57, baseType: !3270, size: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3271, file: !3272, line: 58, baseType: !197, size: 64, offset: 64)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3271, file: !3272, line: 59, baseType: !195, size: 64, offset: 128)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3271, file: !3272, line: 60, baseType: !195, size: 64, offset: 192)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3271, file: !3272, line: 61, baseType: !987, size: 64, offset: 256)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3271, file: !3272, line: 62, baseType: !7, size: 32, offset: 320)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3271, file: !3272, line: 63, baseType: !281, size: 64, offset: 384)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3271, file: !3272, line: 64, baseType: !3282, size: 64, offset: 448)
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 64)
!3283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1391, file: !1392, line: 1326, baseType: !1404, size: 32, offset: 13184)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1391, file: !1392, line: 1342, baseType: !197, size: 64, offset: 13248)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1391, file: !1392, line: 1343, baseType: !243, size: 64, offset: 13312)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1391, file: !1392, line: 1344, baseType: !242, size: 64, offset: 13376)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1391, file: !1392, line: 1345, baseType: !243, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1391, file: !1392, line: 1346, baseType: !243, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1391, file: !1392, line: 1347, baseType: !243, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1391, file: !1392, line: 1348, baseType: !488, size: 128, align: 64, offset: 13504)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1391, file: !1392, line: 1358, baseType: !3293, size: 34816, offset: 13824)
!3293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3294, line: 485, size: 34816, elements: !3295)
!3294 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3295 = !{!3296, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3325, !3326, !3327, !3328, !3329, !3330, !3333, !3334, !3335}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3293, file: !3294, line: 487, baseType: !3297, size: 192)
!3297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3298, size: 192, elements: !400)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3299, line: 16, size: 64, elements: !3300)
!3299 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3300 = !{!3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3298, file: !3299, line: 17, baseType: !218, size: 16)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3298, file: !3299, line: 18, baseType: !218, size: 16, offset: 16)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3298, file: !3299, line: 19, baseType: !218, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3298, file: !3299, line: 19, baseType: !218, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3298, file: !3299, line: 19, baseType: !218, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3298, file: !3299, line: 19, baseType: !218, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3298, file: !3299, line: 19, baseType: !218, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3298, file: !3299, line: 20, baseType: !218, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3298, file: !3299, line: 20, baseType: !218, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3298, file: !3299, line: 20, baseType: !218, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3298, file: !3299, line: 20, baseType: !218, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3298, file: !3299, line: 20, baseType: !218, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3298, file: !3299, line: 20, baseType: !218, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3293, file: !3294, line: 491, baseType: !195, size: 64, offset: 192)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3293, file: !3294, line: 495, baseType: !220, size: 16, offset: 256)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3293, file: !3294, line: 496, baseType: !220, size: 16, offset: 272)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3293, file: !3294, line: 497, baseType: !220, size: 16, offset: 288)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3293, file: !3294, line: 498, baseType: !220, size: 16, offset: 304)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3293, file: !3294, line: 502, baseType: !195, size: 64, offset: 320)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3293, file: !3294, line: 503, baseType: !195, size: 64, offset: 384)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3293, file: !3294, line: 514, baseType: !3322, size: 256, offset: 448)
!3322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3323, size: 256, elements: !292)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3294, line: 483, flags: DIFlagFwdDecl)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3293, file: !3294, line: 516, baseType: !195, size: 64, offset: 704)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3293, file: !3294, line: 518, baseType: !195, size: 64, offset: 768)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3293, file: !3294, line: 520, baseType: !195, size: 64, offset: 832)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3293, file: !3294, line: 521, baseType: !195, size: 64, offset: 896)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3293, file: !3294, line: 522, baseType: !195, size: 64, offset: 960)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3293, file: !3294, line: 528, baseType: !3331, size: 64, offset: 1024)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3294, line: 10, flags: DIFlagFwdDecl)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3293, file: !3294, line: 535, baseType: !195, size: 64, offset: 1088)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3293, file: !3294, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3293, file: !3294, line: 540, baseType: !3336, size: 33280, offset: 1536)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3337, line: 317, size: 33280, elements: !3338)
!3337 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3338 = !{!3339, !3340, !3341}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3336, file: !3337, line: 330, baseType: !7, size: 32)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3336, file: !3337, line: 337, baseType: !195, size: 64, offset: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3336, file: !3337, line: 348, baseType: !3342, size: 32768, offset: 512)
!3342 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3337, line: 304, size: 32768, elements: !3343)
!3343 = !{!3344, !3359, !3396, !3446, !3459}
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3342, file: !3337, line: 305, baseType: !3345, size: 896)
!3345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3337, line: 12, size: 896, elements: !3346)
!3346 = !{!3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3358}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3345, file: !3337, line: 13, baseType: !190, size: 32)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3345, file: !3337, line: 14, baseType: !190, size: 32, offset: 32)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3345, file: !3337, line: 15, baseType: !190, size: 32, offset: 64)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3345, file: !3337, line: 16, baseType: !190, size: 32, offset: 96)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3345, file: !3337, line: 17, baseType: !190, size: 32, offset: 128)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3345, file: !3337, line: 18, baseType: !190, size: 32, offset: 160)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3345, file: !3337, line: 19, baseType: !190, size: 32, offset: 192)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3345, file: !3337, line: 22, baseType: !3355, size: 640, offset: 224)
!3355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 640, elements: !3356)
!3356 = !{!3357}
!3357 = !DISubrange(count: 20)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3345, file: !3337, line: 25, baseType: !190, size: 32, offset: 864)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3342, file: !3337, line: 306, baseType: !3360, size: 4096, align: 128)
!3360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3337, line: 34, size: 4096, align: 128, elements: !3361)
!3361 = !{!3362, !3363, !3364, !3365, !3366, !3381, !3382, !3383, !3385, !3387, !3391}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3360, file: !3337, line: 35, baseType: !218, size: 16)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3360, file: !3337, line: 36, baseType: !218, size: 16, offset: 16)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3360, file: !3337, line: 37, baseType: !218, size: 16, offset: 32)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3360, file: !3337, line: 38, baseType: !218, size: 16, offset: 48)
!3366 = !DIDerivedType(tag: DW_TAG_member, scope: !3360, file: !3337, line: 39, baseType: !3367, size: 128, offset: 64)
!3367 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3360, file: !3337, line: 39, size: 128, elements: !3368)
!3368 = !{!3369, !3374}
!3369 = !DIDerivedType(tag: DW_TAG_member, scope: !3367, file: !3337, line: 40, baseType: !3370, size: 128)
!3370 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3367, file: !3337, line: 40, size: 128, elements: !3371)
!3371 = !{!3372, !3373}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3370, file: !3337, line: 41, baseType: !242, size: 64)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3370, file: !3337, line: 42, baseType: !242, size: 64, offset: 64)
!3374 = !DIDerivedType(tag: DW_TAG_member, scope: !3367, file: !3337, line: 44, baseType: !3375, size: 128)
!3375 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3367, file: !3337, line: 44, size: 128, elements: !3376)
!3376 = !{!3377, !3378, !3379, !3380}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3375, file: !3337, line: 45, baseType: !190, size: 32)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3375, file: !3337, line: 46, baseType: !190, size: 32, offset: 32)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3375, file: !3337, line: 47, baseType: !190, size: 32, offset: 64)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3375, file: !3337, line: 48, baseType: !190, size: 32, offset: 96)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3360, file: !3337, line: 51, baseType: !190, size: 32, offset: 192)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3360, file: !3337, line: 52, baseType: !190, size: 32, offset: 224)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3360, file: !3337, line: 55, baseType: !3384, size: 1024, offset: 256)
!3384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 1024, elements: !2105)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3360, file: !3337, line: 58, baseType: !3386, size: 2048, offset: 1280)
!3386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 2048, elements: !404)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3360, file: !3337, line: 60, baseType: !3388, size: 384, offset: 3328)
!3388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 384, elements: !3389)
!3389 = !{!3390}
!3390 = !DISubrange(count: 12)
!3391 = !DIDerivedType(tag: DW_TAG_member, scope: !3360, file: !3337, line: 62, baseType: !3392, size: 384, offset: 3712)
!3392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3360, file: !3337, line: 62, size: 384, elements: !3393)
!3393 = !{!3394, !3395}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3392, file: !3337, line: 63, baseType: !3388, size: 384)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3392, file: !3337, line: 64, baseType: !3388, size: 384)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3342, file: !3337, line: 307, baseType: !3397, size: 1088)
!3397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3337, line: 79, size: 1088, elements: !3398)
!3398 = !{!3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3445}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3397, file: !3337, line: 80, baseType: !190, size: 32)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3397, file: !3337, line: 81, baseType: !190, size: 32, offset: 32)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3397, file: !3337, line: 82, baseType: !190, size: 32, offset: 64)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3397, file: !3337, line: 83, baseType: !190, size: 32, offset: 96)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3397, file: !3337, line: 84, baseType: !190, size: 32, offset: 128)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3397, file: !3337, line: 85, baseType: !190, size: 32, offset: 160)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3397, file: !3337, line: 86, baseType: !190, size: 32, offset: 192)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3397, file: !3337, line: 88, baseType: !3355, size: 640, offset: 224)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3397, file: !3337, line: 89, baseType: !213, size: 8, offset: 864)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3397, file: !3337, line: 90, baseType: !213, size: 8, offset: 872)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3397, file: !3337, line: 91, baseType: !213, size: 8, offset: 880)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3397, file: !3337, line: 92, baseType: !213, size: 8, offset: 888)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3397, file: !3337, line: 93, baseType: !213, size: 8, offset: 896)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3397, file: !3337, line: 94, baseType: !213, size: 8, offset: 904)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3397, file: !3337, line: 95, baseType: !3414, size: 64, offset: 960)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3416, line: 11, size: 128, elements: !3417)
!3416 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3417 = !{!3418, !3419}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3415, file: !3416, line: 12, baseType: !434, size: 64)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3415, file: !3416, line: 13, baseType: !3420, size: 64, offset: 64)
!3420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3421, size: 64)
!3421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !3422, line: 56, size: 1344, elements: !3423)
!3422 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!3423 = !{!3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3421, file: !3422, line: 61, baseType: !195, size: 64)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3421, file: !3422, line: 62, baseType: !195, size: 64, offset: 64)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !3421, file: !3422, line: 63, baseType: !195, size: 64, offset: 128)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3421, file: !3422, line: 64, baseType: !195, size: 64, offset: 192)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3421, file: !3422, line: 65, baseType: !195, size: 64, offset: 256)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !3421, file: !3422, line: 66, baseType: !195, size: 64, offset: 320)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !3421, file: !3422, line: 68, baseType: !195, size: 64, offset: 384)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !3421, file: !3422, line: 69, baseType: !195, size: 64, offset: 448)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !3421, file: !3422, line: 70, baseType: !195, size: 64, offset: 512)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !3421, file: !3422, line: 71, baseType: !195, size: 64, offset: 576)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !3421, file: !3422, line: 72, baseType: !195, size: 64, offset: 640)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !3421, file: !3422, line: 73, baseType: !195, size: 64, offset: 704)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !3421, file: !3422, line: 74, baseType: !195, size: 64, offset: 768)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !3421, file: !3422, line: 75, baseType: !195, size: 64, offset: 832)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !3421, file: !3422, line: 76, baseType: !195, size: 64, offset: 896)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !3421, file: !3422, line: 81, baseType: !195, size: 64, offset: 960)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3421, file: !3422, line: 83, baseType: !195, size: 64, offset: 1024)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3421, file: !3422, line: 84, baseType: !195, size: 64, offset: 1088)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3421, file: !3422, line: 85, baseType: !195, size: 64, offset: 1152)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3421, file: !3422, line: 86, baseType: !195, size: 64, offset: 1216)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !3421, file: !3422, line: 87, baseType: !195, size: 64, offset: 1280)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3397, file: !3337, line: 96, baseType: !190, size: 32, offset: 1024)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3342, file: !3337, line: 308, baseType: !3447, size: 4608, align: 512)
!3447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3337, line: 289, size: 4608, align: 512, elements: !3448)
!3448 = !{!3449, !3450, !3457}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3447, file: !3337, line: 290, baseType: !3360, size: 4096, align: 128)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3447, file: !3337, line: 291, baseType: !3451, size: 512, offset: 4096)
!3451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3337, line: 268, size: 512, elements: !3452)
!3452 = !{!3453, !3454, !3455}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3451, file: !3337, line: 269, baseType: !242, size: 64)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3451, file: !3337, line: 270, baseType: !242, size: 64, offset: 64)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3451, file: !3337, line: 271, baseType: !3456, size: 384, offset: 128)
!3456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 384, elements: !1795)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3447, file: !3337, line: 292, baseType: !3458, offset: 4608)
!3458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, elements: !1893)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3342, file: !3337, line: 309, baseType: !3460, size: 32768)
!3460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 32768, elements: !3461)
!3461 = !{!3462}
!3462 = !DISubrange(count: 4096)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1387, file: !889, line: 378, baseType: !3464, size: 64, offset: 64)
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1383, file: !889, line: 384, baseType: !1672, size: 192, offset: 192)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1160, file: !889, line: 500, baseType: !358, offset: 6656)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1160, file: !889, line: 501, baseType: !3468, size: 64, offset: 6656)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3469 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !889, line: 387, flags: DIFlagFwdDecl)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1160, file: !889, line: 516, baseType: !1883, size: 64, offset: 6720)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1160, file: !889, line: 519, baseType: !475, size: 64, offset: 6784)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1160, file: !889, line: 521, baseType: !3473, size: 64, offset: 6848)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3474, size: 64)
!3474 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !889, line: 521, flags: DIFlagFwdDecl)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1160, file: !889, line: 545, baseType: !914, size: 32, offset: 6912)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1160, file: !889, line: 548, baseType: !605, size: 8, offset: 6944)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1160, file: !889, line: 550, baseType: !3478, offset: 6952)
!3478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !3479, line: 142, elements: !372)
!3479 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1160, file: !889, line: 554, baseType: !2165, size: 256, offset: 6976)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1160, file: !889, line: 557, baseType: !190, size: 32, offset: 7232)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1157, file: !889, line: 565, baseType: !3483, offset: 7296)
!3483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, elements: !2181)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1153, file: !889, line: 151, baseType: !914, size: 32)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1145, file: !889, line: 156, baseType: !358, offset: 256)
!3486 = !DIDerivedType(tag: DW_TAG_member, scope: !893, file: !889, line: 159, baseType: !3487, size: 128)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !893, file: !889, line: 159, size: 128, elements: !3488)
!3488 = !{!3489, !3533}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3487, file: !889, line: 161, baseType: !3490, size: 64)
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 64)
!3491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !98, line: 110, size: 1152, elements: !3492)
!3492 = !{!3493, !3503, !3504, !3505, !3506, !3507, !3508, !3520, !3521, !3522}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3491, file: !98, line: 111, baseType: !3494, size: 384)
!3494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !98, line: 19, size: 384, elements: !3495)
!3495 = !{!3496, !3498, !3499, !3500, !3501, !3502}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3494, file: !98, line: 20, baseType: !3497, size: 64)
!3497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3494, file: !98, line: 21, baseType: !3497, size: 64, offset: 64)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3494, file: !98, line: 22, baseType: !3497, size: 64, offset: 128)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3494, file: !98, line: 23, baseType: !195, size: 64, offset: 192)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3494, file: !98, line: 24, baseType: !195, size: 64, offset: 256)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3494, file: !98, line: 25, baseType: !195, size: 64, offset: 320)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3491, file: !98, line: 112, baseType: !2140, size: 64, offset: 384)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3491, file: !98, line: 113, baseType: !2126, size: 128, offset: 448)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3491, file: !98, line: 114, baseType: !1672, size: 192, offset: 576)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3491, file: !98, line: 115, baseType: !97, size: 32, offset: 768)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3491, file: !98, line: 116, baseType: !7, size: 32, offset: 800)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3491, file: !98, line: 117, baseType: !3509, size: 64, offset: 832)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3511)
!3511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !98, line: 67, size: 256, elements: !3512)
!3512 = !{!3513, !3514, !3518, !3519}
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3511, file: !98, line: 73, baseType: !1007, size: 64)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3511, file: !98, line: 78, baseType: !3515, size: 64, offset: 64)
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3516, size: 64)
!3516 = !DISubroutineType(types: !3517)
!3517 = !{null, !3490}
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3511, file: !98, line: 83, baseType: !3515, size: 64, offset: 128)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3511, file: !98, line: 89, baseType: !1209, size: 64, offset: 192)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3491, file: !98, line: 118, baseType: !197, size: 64, offset: 896)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3491, file: !98, line: 119, baseType: !188, size: 32, offset: 960)
!3522 = !DIDerivedType(tag: DW_TAG_member, scope: !3491, file: !98, line: 120, baseType: !3523, size: 128, offset: 1024)
!3523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3491, file: !98, line: 120, size: 128, elements: !3524)
!3524 = !{!3525, !3531}
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3523, file: !98, line: 121, baseType: !3526, size: 128)
!3526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3527, line: 6, size: 128, elements: !3528)
!3527 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3528 = !{!3529, !3530}
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3526, file: !3527, line: 7, baseType: !242, size: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3526, file: !3527, line: 8, baseType: !242, size: 64, offset: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3523, file: !98, line: 122, baseType: !3532)
!3532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3526, elements: !1893)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3487, file: !889, line: 162, baseType: !197, size: 64, offset: 64)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !893, file: !889, line: 176, baseType: !488, size: 128, align: 64)
!3535 = !DIDerivedType(tag: DW_TAG_member, scope: !888, file: !889, line: 179, baseType: !3536, size: 32, offset: 384)
!3536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !888, file: !889, line: 179, size: 32, elements: !3537)
!3537 = !{!3538, !3539, !3540, !3541}
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3536, file: !889, line: 184, baseType: !914, size: 32)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3536, file: !889, line: 192, baseType: !7, size: 32)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3536, file: !889, line: 194, baseType: !7, size: 32)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3536, file: !889, line: 195, baseType: !188, size: 32)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !888, file: !889, line: 199, baseType: !914, size: 32, offset: 416)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !774, file: !111, line: 1964, baseType: !3544, size: 64, offset: 1344)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!434, !714, !3547}
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!3548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !3549, line: 12, size: 256, elements: !3550)
!3549 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!3550 = !{!3551, !3552, !3553, !3554, !3555}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !3548, file: !3549, line: 13, baseType: !910, size: 32)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !3548, file: !3549, line: 16, baseType: !188, size: 32, offset: 32)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !3548, file: !3549, line: 23, baseType: !195, size: 64, offset: 64)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !3548, file: !3549, line: 30, baseType: !195, size: 64, offset: 128)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !3548, file: !3549, line: 33, baseType: !3556, size: 64, offset: 192)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !889, line: 27, flags: DIFlagFwdDecl)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !774, file: !111, line: 1966, baseType: !3544, size: 64, offset: 1408)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !715, file: !111, line: 1424, baseType: !3560, size: 64, offset: 448)
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3561, size: 64)
!3561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3562)
!3562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !105, line: 322, size: 704, elements: !3563)
!3563 = !{!3564, !3610, !3614, !3618, !3619, !3620, !3621, !3622, !3627, !3632, !3636}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !3562, file: !105, line: 323, baseType: !3565, size: 64)
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3566, size: 64)
!3566 = !DISubroutineType(types: !3567)
!3567 = !{!188, !3568}
!3568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3569, size: 64)
!3569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !105, line: 294, size: 1600, elements: !3570)
!3570 = !{!3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3595, !3596, !3597}
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !3569, file: !105, line: 295, baseType: !756, size: 128)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !3569, file: !105, line: 296, baseType: !258, size: 128, offset: 128)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !3569, file: !105, line: 297, baseType: !258, size: 128, offset: 256)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !3569, file: !105, line: 298, baseType: !258, size: 128, offset: 384)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !3569, file: !105, line: 299, baseType: !840, size: 192, offset: 512)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !3569, file: !105, line: 300, baseType: !358, offset: 704)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !3569, file: !105, line: 301, baseType: !914, size: 32, offset: 704)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !3569, file: !105, line: 302, baseType: !714, size: 64, offset: 768)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !3569, file: !105, line: 303, baseType: !3580, size: 64, offset: 832)
!3580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !105, line: 68, size: 64, elements: !3581)
!3581 = !{!3582, !3594}
!3582 = !DIDerivedType(tag: DW_TAG_member, scope: !3580, file: !105, line: 69, baseType: !3583, size: 32)
!3583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3580, file: !105, line: 69, size: 32, elements: !3584)
!3584 = !{!3585, !3586, !3587}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3583, file: !105, line: 70, baseType: !550, size: 32)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3583, file: !105, line: 71, baseType: !558, size: 32)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !3583, file: !105, line: 72, baseType: !3588, size: 32)
!3588 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !3589, line: 24, baseType: !3590)
!3589 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!3590 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3589, line: 22, size: 32, elements: !3591)
!3591 = !{!3592}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3590, file: !3589, line: 23, baseType: !3593, size: 32)
!3593 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !3589, line: 20, baseType: !556)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3580, file: !105, line: 74, baseType: !104, size: 32, offset: 32)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !3569, file: !105, line: 304, baseType: !646, size: 64, offset: 896)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !3569, file: !105, line: 305, baseType: !195, size: 64, offset: 960)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !3569, file: !105, line: 306, baseType: !3598, size: 576, offset: 1024)
!3598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !105, line: 205, size: 576, elements: !3599)
!3599 = !{!3600, !3602, !3603, !3604, !3605, !3606, !3607, !3608, !3609}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !3598, file: !105, line: 206, baseType: !3601, size: 64)
!3601 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !105, line: 66, baseType: !648)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !3598, file: !105, line: 207, baseType: !3601, size: 64, offset: 64)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !3598, file: !105, line: 208, baseType: !3601, size: 64, offset: 128)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !3598, file: !105, line: 209, baseType: !3601, size: 64, offset: 192)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !3598, file: !105, line: 210, baseType: !3601, size: 64, offset: 256)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !3598, file: !105, line: 211, baseType: !3601, size: 64, offset: 320)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !3598, file: !105, line: 212, baseType: !3601, size: 64, offset: 384)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !3598, file: !105, line: 213, baseType: !654, size: 64, offset: 448)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !3598, file: !105, line: 214, baseType: !654, size: 64, offset: 512)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !3562, file: !105, line: 324, baseType: !3611, size: 64, offset: 64)
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64)
!3612 = !DISubroutineType(types: !3613)
!3613 = !{!3568, !714, !188}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !3562, file: !105, line: 325, baseType: !3615, size: 64, offset: 128)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = !DISubroutineType(types: !3617)
!3617 = !{null, !3568}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !3562, file: !105, line: 326, baseType: !3565, size: 64, offset: 192)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !3562, file: !105, line: 327, baseType: !3565, size: 64, offset: 256)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !3562, file: !105, line: 328, baseType: !3565, size: 64, offset: 320)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !3562, file: !105, line: 329, baseType: !802, size: 64, offset: 384)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !3562, file: !105, line: 332, baseType: !3623, size: 64, offset: 448)
!3623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3624, size: 64)
!3624 = !DISubroutineType(types: !3625)
!3625 = !{!3626, !544}
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3601, size: 64)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !3562, file: !105, line: 333, baseType: !3628, size: 64, offset: 512)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 64)
!3629 = !DISubroutineType(types: !3630)
!3630 = !{!188, !544, !3631}
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !3562, file: !105, line: 335, baseType: !3633, size: 64, offset: 576)
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3634, size: 64)
!3634 = !DISubroutineType(types: !3635)
!3635 = !{!188, !544, !3626}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3562, file: !105, line: 337, baseType: !3637, size: 64, offset: 640)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{!188, !714, !3640}
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !715, file: !111, line: 1425, baseType: !3642, size: 64, offset: 512)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3644)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !105, line: 428, size: 704, elements: !3645)
!3645 = !{!3646, !3650, !3651, !3655, !3656, !3657, !3672, !3695, !3699, !3700, !3723}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !3644, file: !105, line: 429, baseType: !3647, size: 64)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{!188, !714, !188, !188, !664}
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !3644, file: !105, line: 430, baseType: !802, size: 64, offset: 64)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !3644, file: !105, line: 431, baseType: !3652, size: 64, offset: 128)
!3652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3653, size: 64)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{!188, !714, !7}
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !3644, file: !105, line: 432, baseType: !3652, size: 64, offset: 192)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !3644, file: !105, line: 433, baseType: !802, size: 64, offset: 256)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !3644, file: !105, line: 434, baseType: !3658, size: 64, offset: 320)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = !DISubroutineType(types: !3660)
!3660 = !{!188, !714, !188, !3661}
!3661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3662, size: 64)
!3662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !105, line: 415, size: 256, elements: !3663)
!3663 = !{!3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671}
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !3662, file: !105, line: 416, baseType: !188, size: 32)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !3662, file: !105, line: 417, baseType: !7, size: 32, offset: 32)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !3662, file: !105, line: 418, baseType: !7, size: 32, offset: 64)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !3662, file: !105, line: 420, baseType: !7, size: 32, offset: 96)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !3662, file: !105, line: 421, baseType: !7, size: 32, offset: 128)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !3662, file: !105, line: 422, baseType: !7, size: 32, offset: 160)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !3662, file: !105, line: 423, baseType: !7, size: 32, offset: 192)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !3662, file: !105, line: 424, baseType: !7, size: 32, offset: 224)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !3644, file: !105, line: 435, baseType: !3673, size: 64, offset: 384)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3674, size: 64)
!3674 = !DISubroutineType(types: !3675)
!3675 = !{!188, !714, !3580, !3676}
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !105, line: 343, size: 960, elements: !3678)
!3678 = !{!3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !3677, file: !105, line: 344, baseType: !188, size: 32)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !3677, file: !105, line: 345, baseType: !242, size: 64, offset: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !3677, file: !105, line: 346, baseType: !242, size: 64, offset: 128)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !3677, file: !105, line: 347, baseType: !242, size: 64, offset: 192)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !3677, file: !105, line: 348, baseType: !242, size: 64, offset: 256)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !3677, file: !105, line: 349, baseType: !242, size: 64, offset: 320)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !3677, file: !105, line: 350, baseType: !242, size: 64, offset: 384)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !3677, file: !105, line: 351, baseType: !850, size: 64, offset: 448)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !3677, file: !105, line: 353, baseType: !850, size: 64, offset: 512)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !3677, file: !105, line: 354, baseType: !188, size: 32, offset: 576)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !3677, file: !105, line: 355, baseType: !188, size: 32, offset: 608)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !3677, file: !105, line: 356, baseType: !242, size: 64, offset: 640)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !3677, file: !105, line: 357, baseType: !242, size: 64, offset: 704)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !3677, file: !105, line: 358, baseType: !242, size: 64, offset: 768)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !3677, file: !105, line: 359, baseType: !850, size: 64, offset: 832)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !3677, file: !105, line: 360, baseType: !188, size: 32, offset: 896)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !3644, file: !105, line: 436, baseType: !3696, size: 64, offset: 448)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = !DISubroutineType(types: !3698)
!3698 = !{!188, !714, !3640, !3676}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !3644, file: !105, line: 438, baseType: !3673, size: 64, offset: 512)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !3644, file: !105, line: 439, baseType: !3701, size: 64, offset: 576)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = !DISubroutineType(types: !3703)
!3703 = !{!188, !714, !3704}
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3705, size: 64)
!3705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !105, line: 409, size: 1408, elements: !3706)
!3706 = !{!3707, !3708}
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !3705, file: !105, line: 410, baseType: !7, size: 32)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !3705, file: !105, line: 411, baseType: !3709, size: 1344, offset: 64)
!3709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3710, size: 1344, elements: !400)
!3710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !105, line: 395, size: 448, elements: !3711)
!3711 = !{!3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3722}
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3710, file: !105, line: 396, baseType: !7, size: 32)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !3710, file: !105, line: 397, baseType: !7, size: 32, offset: 32)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !3710, file: !105, line: 399, baseType: !7, size: 32, offset: 64)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !3710, file: !105, line: 400, baseType: !7, size: 32, offset: 96)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !3710, file: !105, line: 401, baseType: !7, size: 32, offset: 128)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !3710, file: !105, line: 402, baseType: !7, size: 32, offset: 160)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !3710, file: !105, line: 403, baseType: !7, size: 32, offset: 192)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3710, file: !105, line: 404, baseType: !244, size: 64, offset: 256)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3710, file: !105, line: 405, baseType: !3721, size: 64, offset: 320)
!3721 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !241, line: 126, baseType: !242)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !3710, file: !105, line: 406, baseType: !3721, size: 64, offset: 384)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !3644, file: !105, line: 440, baseType: !3652, size: 64, offset: 640)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !715, file: !111, line: 1426, baseType: !3725, size: 64, offset: 576)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3727)
!3727 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !111, line: 49, flags: DIFlagFwdDecl)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !715, file: !111, line: 1427, baseType: !195, size: 64, offset: 640)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !715, file: !111, line: 1428, baseType: !195, size: 64, offset: 704)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !715, file: !111, line: 1429, baseType: !195, size: 64, offset: 768)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !715, file: !111, line: 1430, baseType: !505, size: 64, offset: 832)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !715, file: !111, line: 1431, baseType: !934, size: 256, offset: 896)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !715, file: !111, line: 1432, baseType: !188, size: 32, offset: 1152)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !715, file: !111, line: 1433, baseType: !914, size: 32, offset: 1184)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !715, file: !111, line: 1437, baseType: !3736, size: 64, offset: 1216)
!3736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 64)
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3739)
!3739 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !111, line: 1437, flags: DIFlagFwdDecl)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !715, file: !111, line: 1449, baseType: !3741, size: 64, offset: 1280)
!3741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !521, line: 34, size: 64, elements: !3742)
!3742 = !{!3743}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3741, file: !521, line: 35, baseType: !524, size: 64)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !715, file: !111, line: 1450, baseType: !258, size: 128, offset: 1344)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !715, file: !111, line: 1451, baseType: !2198, size: 64, offset: 1472)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !715, file: !111, line: 1452, baseType: !2218, size: 64, offset: 1536)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !715, file: !111, line: 1453, baseType: !3748, size: 64, offset: 1600)
!3748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3749, size: 64)
!3749 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !111, line: 1453, flags: DIFlagFwdDecl)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !715, file: !111, line: 1454, baseType: !756, size: 128, offset: 1664)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !715, file: !111, line: 1455, baseType: !7, size: 32, offset: 1792)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !715, file: !111, line: 1456, baseType: !3753, size: 2432, offset: 1856)
!3753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !105, line: 518, size: 2432, elements: !3754)
!3754 = !{!3755, !3756, !3757, !3759, !3791}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3753, file: !105, line: 519, baseType: !7, size: 32)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3753, file: !105, line: 520, baseType: !934, size: 256, offset: 64)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3753, file: !105, line: 521, baseType: !3758, size: 192, offset: 320)
!3758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 192, elements: !400)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3753, file: !105, line: 522, baseType: !3760, size: 1728, offset: 512)
!3760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3761, size: 1728, elements: !400)
!3761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !105, line: 222, size: 576, elements: !3762)
!3762 = !{!3763, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3761, file: !105, line: 223, baseType: !3764, size: 64)
!3764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3765, size: 64)
!3765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !105, line: 443, size: 256, elements: !3766)
!3766 = !{!3767, !3768, !3781, !3782}
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3765, file: !105, line: 444, baseType: !188, size: 32)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3765, file: !105, line: 445, baseType: !3769, size: 64, offset: 64)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3771)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !105, line: 310, size: 512, elements: !3772)
!3772 = !{!3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3771, file: !105, line: 311, baseType: !802, size: 64)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3771, file: !105, line: 312, baseType: !802, size: 64, offset: 64)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3771, file: !105, line: 313, baseType: !802, size: 64, offset: 128)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3771, file: !105, line: 314, baseType: !802, size: 64, offset: 192)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3771, file: !105, line: 315, baseType: !3565, size: 64, offset: 256)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3771, file: !105, line: 316, baseType: !3565, size: 64, offset: 320)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3771, file: !105, line: 317, baseType: !3565, size: 64, offset: 384)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3771, file: !105, line: 318, baseType: !3637, size: 64, offset: 448)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3765, file: !105, line: 446, baseType: !747, size: 64, offset: 128)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3765, file: !105, line: 447, baseType: !3764, size: 64, offset: 192)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3761, file: !105, line: 224, baseType: !188, size: 32, offset: 64)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3761, file: !105, line: 226, baseType: !258, size: 128, offset: 128)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3761, file: !105, line: 227, baseType: !195, size: 64, offset: 256)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3761, file: !105, line: 228, baseType: !7, size: 32, offset: 320)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3761, file: !105, line: 229, baseType: !7, size: 32, offset: 352)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3761, file: !105, line: 230, baseType: !3601, size: 64, offset: 384)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3761, file: !105, line: 231, baseType: !3601, size: 64, offset: 448)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3761, file: !105, line: 232, baseType: !197, size: 64, offset: 512)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3753, file: !105, line: 523, baseType: !3792, size: 192, offset: 2240)
!3792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3769, size: 192, elements: !400)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !715, file: !111, line: 1458, baseType: !3794, size: 2112, offset: 4288)
!3794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !111, line: 1410, size: 2112, elements: !3795)
!3795 = !{!3796, !3797, !3798}
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3794, file: !111, line: 1411, baseType: !188, size: 32)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3794, file: !111, line: 1412, baseType: !1652, size: 128, offset: 64)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3794, file: !111, line: 1413, baseType: !3799, size: 1920, offset: 192)
!3799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3800, size: 1920, elements: !400)
!3800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3801, line: 12, size: 640, elements: !3802)
!3801 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3802 = !{!3803, !3811, !3812, !3817, !3818}
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3800, file: !3801, line: 13, baseType: !3804, size: 320)
!3804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3805, line: 17, size: 320, elements: !3806)
!3805 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3806 = !{!3807, !3808, !3809, !3810}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3804, file: !3805, line: 18, baseType: !188, size: 32)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3804, file: !3805, line: 19, baseType: !188, size: 32, offset: 32)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3804, file: !3805, line: 20, baseType: !1652, size: 128, offset: 64)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3804, file: !3805, line: 22, baseType: !488, size: 128, align: 64, offset: 192)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3800, file: !3801, line: 14, baseType: !2773, size: 64, offset: 320)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3800, file: !3801, line: 15, baseType: !3813, size: 64, offset: 384)
!3813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3814, line: 16, size: 64, elements: !3815)
!3814 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3815 = !{!3816}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3813, file: !3814, line: 17, baseType: !1390, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3800, file: !3801, line: 16, baseType: !1652, size: 128, offset: 448)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3800, file: !3801, line: 17, baseType: !914, size: 32, offset: 576)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !715, file: !111, line: 1465, baseType: !197, size: 64, offset: 6400)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !715, file: !111, line: 1468, baseType: !190, size: 32, offset: 6464)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !715, file: !111, line: 1470, baseType: !654, size: 64, offset: 6528)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !715, file: !111, line: 1471, baseType: !654, size: 64, offset: 6592)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !715, file: !111, line: 1473, baseType: !192, size: 32, offset: 6656)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !715, file: !111, line: 1474, baseType: !3825, size: 64, offset: 6720)
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3826, size: 64)
!3826 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !111, line: 603, flags: DIFlagFwdDecl)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !715, file: !111, line: 1477, baseType: !2104, size: 256, offset: 6784)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !715, file: !111, line: 1478, baseType: !3829, size: 128, offset: 7040)
!3829 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3830, line: 18, baseType: !3831)
!3830 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3831 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3830, line: 16, size: 128, elements: !3832)
!3832 = !{!3833}
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3831, file: !3830, line: 17, baseType: !3834, size: 128)
!3834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 128, elements: !1905)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !715, file: !111, line: 1480, baseType: !7, size: 32, offset: 7168)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !715, file: !111, line: 1481, baseType: !2301, size: 32, offset: 7200)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !715, file: !111, line: 1487, baseType: !840, size: 192, offset: 7232)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !715, file: !111, line: 1493, baseType: !284, size: 64, offset: 7424)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !715, file: !111, line: 1495, baseType: !3840, size: 64, offset: 7488)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3842)
!3842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !503, line: 135, size: 1024, align: 512, elements: !3843)
!3843 = !{!3844, !3848, !3849, !3856, !3862, !3866, !3870, !3874, !3875, !3879, !3883, !3888, !3892}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !3842, file: !503, line: 136, baseType: !3845, size: 64)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!188, !505, !7}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !3842, file: !503, line: 137, baseType: !3845, size: 64, offset: 64)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !3842, file: !503, line: 138, baseType: !3850, size: 64, offset: 128)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3851, size: 64)
!3851 = !DISubroutineType(types: !3852)
!3852 = !{!188, !3853, !3855}
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!3854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !3842, file: !503, line: 139, baseType: !3857, size: 64, offset: 192)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3858, size: 64)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{!188, !3853, !7, !284, !3860}
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !529)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !3842, file: !503, line: 141, baseType: !3863, size: 64, offset: 256)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{!188, !3853}
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !3842, file: !503, line: 142, baseType: !3867, size: 64, offset: 320)
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!188, !505}
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !3842, file: !503, line: 143, baseType: !3871, size: 64, offset: 384)
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{null, !505}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !3842, file: !503, line: 144, baseType: !3871, size: 64, offset: 448)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !3842, file: !503, line: 145, baseType: !3876, size: 64, offset: 512)
!3876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3877, size: 64)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{null, !505, !544}
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !3842, file: !503, line: 146, baseType: !3880, size: 64, offset: 576)
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 64)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!399, !505, !399, !188}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !3842, file: !503, line: 147, baseType: !3884, size: 64, offset: 640)
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64)
!3885 = !DISubroutineType(types: !3886)
!3886 = !{!501, !3887}
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !3842, file: !503, line: 148, baseType: !3889, size: 64, offset: 704)
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3890, size: 64)
!3890 = !DISubroutineType(types: !3891)
!3891 = !{!188, !664, !605}
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !3842, file: !503, line: 149, baseType: !3893, size: 64, offset: 768)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{!505, !505, !3896}
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !545)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !715, file: !111, line: 1500, baseType: !188, size: 32, offset: 7552)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !715, file: !111, line: 1502, baseType: !3900, size: 448, offset: 7616)
!3900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !3549, line: 60, size: 448, elements: !3901)
!3901 = !{!3902, !3907, !3908, !3909, !3910, !3911, !3912}
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3900, file: !3549, line: 61, baseType: !3903, size: 64)
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3904, size: 64)
!3904 = !DISubroutineType(types: !3905)
!3905 = !{!195, !3906, !3547}
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3900, size: 64)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3900, file: !3549, line: 63, baseType: !3903, size: 64, offset: 64)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3900, file: !3549, line: 66, baseType: !434, size: 64, offset: 128)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3900, file: !3549, line: 67, baseType: !188, size: 32, offset: 192)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3900, file: !3549, line: 68, baseType: !7, size: 32, offset: 224)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3900, file: !3549, line: 71, baseType: !258, size: 128, offset: 256)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3900, file: !3549, line: 77, baseType: !3913, size: 64, offset: 384)
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !715, file: !111, line: 1505, baseType: !844, size: 64, offset: 8064)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !715, file: !111, line: 1508, baseType: !844, size: 64, offset: 8128)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !715, file: !111, line: 1511, baseType: !188, size: 32, offset: 8192)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !715, file: !111, line: 1514, baseType: !1091, size: 32, offset: 8224)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !715, file: !111, line: 1517, baseType: !2177, size: 64, offset: 8256)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !715, file: !111, line: 1518, baseType: !752, size: 64, offset: 8320)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !715, file: !111, line: 1525, baseType: !1883, size: 64, offset: 8384)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !715, file: !111, line: 1532, baseType: !3922, size: 64, offset: 8448)
!3922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3923, line: 52, size: 64, elements: !3924)
!3923 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3924 = !{!3925}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3922, file: !3923, line: 53, baseType: !3926, size: 64)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 64)
!3927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3923, line: 40, size: 256, elements: !3928)
!3928 = !{!3929, !3930, !3935}
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3927, file: !3923, line: 42, baseType: !358)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3927, file: !3923, line: 44, baseType: !3931, size: 192)
!3931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3923, line: 28, size: 192, elements: !3932)
!3932 = !{!3933, !3934}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3931, file: !3923, line: 29, baseType: !258, size: 128)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3931, file: !3923, line: 31, baseType: !434, size: 64, offset: 128)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3927, file: !3923, line: 49, baseType: !434, size: 64, offset: 192)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !715, file: !111, line: 1533, baseType: !3922, size: 64, offset: 8512)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !715, file: !111, line: 1534, baseType: !488, size: 128, align: 64, offset: 8576)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !715, file: !111, line: 1535, baseType: !2165, size: 256, offset: 8704)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !715, file: !111, line: 1537, baseType: !840, size: 192, offset: 8960)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !715, file: !111, line: 1542, baseType: !188, size: 32, offset: 9152)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !715, file: !111, line: 1545, baseType: !358, offset: 9184)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !715, file: !111, line: 1546, baseType: !258, size: 128, offset: 9216)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !715, file: !111, line: 1548, baseType: !358, offset: 9344)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !715, file: !111, line: 1549, baseType: !258, size: 128, offset: 9344)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !545, file: !111, line: 624, baseType: !900, size: 64, offset: 256)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !545, file: !111, line: 631, baseType: !195, size: 64, offset: 320)
!3947 = !DIDerivedType(tag: DW_TAG_member, scope: !545, file: !111, line: 639, baseType: !3948, size: 32, offset: 384)
!3948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !545, file: !111, line: 639, size: 32, elements: !3949)
!3949 = !{!3950, !3951}
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3948, file: !111, line: 640, baseType: !2703, size: 32)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3948, file: !111, line: 641, baseType: !7, size: 32)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !545, file: !111, line: 643, baseType: !628, size: 32, offset: 416)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !545, file: !111, line: 644, baseType: !646, size: 64, offset: 448)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !545, file: !111, line: 645, baseType: !650, size: 128, offset: 512)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !545, file: !111, line: 646, baseType: !650, size: 128, offset: 640)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !545, file: !111, line: 647, baseType: !650, size: 128, offset: 768)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !545, file: !111, line: 648, baseType: !358, offset: 896)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !545, file: !111, line: 649, baseType: !220, size: 16, offset: 896)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !545, file: !111, line: 650, baseType: !213, size: 8, offset: 912)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !545, file: !111, line: 651, baseType: !213, size: 8, offset: 920)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !545, file: !111, line: 652, baseType: !3721, size: 64, offset: 960)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !545, file: !111, line: 659, baseType: !195, size: 64, offset: 1024)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !545, file: !111, line: 660, baseType: !934, size: 256, offset: 1088)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !545, file: !111, line: 662, baseType: !195, size: 64, offset: 1344)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !545, file: !111, line: 663, baseType: !195, size: 64, offset: 1408)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !545, file: !111, line: 665, baseType: !756, size: 128, offset: 1472)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !545, file: !111, line: 666, baseType: !258, size: 128, offset: 1600)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !545, file: !111, line: 675, baseType: !258, size: 128, offset: 1728)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !545, file: !111, line: 676, baseType: !258, size: 128, offset: 1856)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !545, file: !111, line: 677, baseType: !258, size: 128, offset: 1984)
!3971 = !DIDerivedType(tag: DW_TAG_member, scope: !545, file: !111, line: 678, baseType: !3972, size: 128, offset: 2112)
!3972 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !545, file: !111, line: 678, size: 128, elements: !3973)
!3973 = !{!3974, !3975}
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3972, file: !111, line: 679, baseType: !752, size: 64)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3972, file: !111, line: 680, baseType: !488, size: 128, align: 64)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !545, file: !111, line: 682, baseType: !846, size: 64, offset: 2240)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !545, file: !111, line: 683, baseType: !846, size: 64, offset: 2304)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !545, file: !111, line: 684, baseType: !914, size: 32, offset: 2368)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !545, file: !111, line: 685, baseType: !914, size: 32, offset: 2400)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !545, file: !111, line: 686, baseType: !914, size: 32, offset: 2432)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !545, file: !111, line: 688, baseType: !914, size: 32, offset: 2464)
!3982 = !DIDerivedType(tag: DW_TAG_member, scope: !545, file: !111, line: 690, baseType: !3983, size: 64, offset: 2496)
!3983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !545, file: !111, line: 690, size: 64, elements: !3984)
!3984 = !{!3985, !4207}
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3983, file: !111, line: 691, baseType: !3986, size: 64)
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3987, size: 64)
!3987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3988)
!3988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !111, line: 1822, size: 2048, elements: !3989)
!3989 = !{!3990, !3991, !3995, !3999, !4003, !4004, !4005, !4009, !4022, !4023, !4031, !4035, !4036, !4040, !4041, !4045, !4050, !4051, !4055, !4059, !4167, !4171, !4172, !4176, !4177, !4181, !4185, !4190, !4194, !4198, !4202, !4206}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3988, file: !111, line: 1823, baseType: !747, size: 64)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3988, file: !111, line: 1824, baseType: !3992, size: 64, offset: 64)
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3993, size: 64)
!3993 = !DISubroutineType(types: !3994)
!3994 = !{!646, !475, !646, !188}
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3988, file: !111, line: 1825, baseType: !3996, size: 64, offset: 128)
!3996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3997, size: 64)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{!430, !475, !399, !445, !862}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3988, file: !111, line: 1826, baseType: !4000, size: 64, offset: 192)
!4000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4001, size: 64)
!4001 = !DISubroutineType(types: !4002)
!4002 = !{!430, !475, !284, !445, !862}
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3988, file: !111, line: 1827, baseType: !1011, size: 64, offset: 256)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3988, file: !111, line: 1828, baseType: !1011, size: 64, offset: 320)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3988, file: !111, line: 1829, baseType: !4006, size: 64, offset: 384)
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4007, size: 64)
!4007 = !DISubroutineType(types: !4008)
!4008 = !{!188, !1014, !605}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3988, file: !111, line: 1830, baseType: !4010, size: 64, offset: 448)
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = !DISubroutineType(types: !4012)
!4012 = !{!188, !475, !4013}
!4013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !111, line: 1776, size: 128, elements: !4015)
!4015 = !{!4016, !4021}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4014, file: !111, line: 1777, baseType: !4017, size: 64)
!4017 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !111, line: 1773, baseType: !4018)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{!188, !4013, !284, !188, !646, !242, !7}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4014, file: !111, line: 1778, baseType: !646, size: 64, offset: 64)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3988, file: !111, line: 1831, baseType: !4010, size: 64, offset: 512)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3988, file: !111, line: 1832, baseType: !4024, size: 64, offset: 576)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{!4027, !475, !4029}
!4027 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !4028, line: 52, baseType: !7)
!4028 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!4030 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !111, line: 56, flags: DIFlagFwdDecl)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3988, file: !111, line: 1833, baseType: !4032, size: 64, offset: 640)
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4033, size: 64)
!4033 = !DISubroutineType(types: !4034)
!4034 = !{!434, !475, !7, !195}
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3988, file: !111, line: 1834, baseType: !4032, size: 64, offset: 704)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3988, file: !111, line: 1835, baseType: !4037, size: 64, offset: 768)
!4037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4038, size: 64)
!4038 = !DISubroutineType(types: !4039)
!4039 = !{!188, !475, !1163}
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3988, file: !111, line: 1836, baseType: !195, size: 64, offset: 832)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3988, file: !111, line: 1837, baseType: !4042, size: 64, offset: 896)
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64)
!4043 = !DISubroutineType(types: !4044)
!4044 = !{!188, !544, !475}
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3988, file: !111, line: 1838, baseType: !4046, size: 64, offset: 960)
!4046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4047, size: 64)
!4047 = !DISubroutineType(types: !4048)
!4048 = !{!188, !475, !4049}
!4049 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !111, line: 1007, baseType: !197)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3988, file: !111, line: 1839, baseType: !4042, size: 64, offset: 1024)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3988, file: !111, line: 1840, baseType: !4052, size: 64, offset: 1088)
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4053, size: 64)
!4053 = !DISubroutineType(types: !4054)
!4054 = !{!188, !475, !646, !646, !188}
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3988, file: !111, line: 1841, baseType: !4056, size: 64, offset: 1152)
!4056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4057, size: 64)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{!188, !188, !475, !188}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3988, file: !111, line: 1842, baseType: !4060, size: 64, offset: 1216)
!4060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4061, size: 64)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!188, !475, !188, !4063}
!4063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4064, size: 64)
!4064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !111, line: 1062, size: 1664, elements: !4065)
!4065 = !{!4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4097, !4098, !4099, !4112, !4143}
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4064, file: !111, line: 1063, baseType: !4063, size: 64)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4064, file: !111, line: 1064, baseType: !258, size: 128, offset: 64)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4064, file: !111, line: 1065, baseType: !756, size: 128, offset: 192)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4064, file: !111, line: 1066, baseType: !258, size: 128, offset: 320)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4064, file: !111, line: 1069, baseType: !258, size: 128, offset: 448)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4064, file: !111, line: 1072, baseType: !4049, size: 64, offset: 576)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4064, file: !111, line: 1073, baseType: !7, size: 32, offset: 640)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4064, file: !111, line: 1074, baseType: !215, size: 8, offset: 672)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4064, file: !111, line: 1075, baseType: !7, size: 32, offset: 704)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4064, file: !111, line: 1076, baseType: !188, size: 32, offset: 736)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4064, file: !111, line: 1077, baseType: !1652, size: 128, offset: 768)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4064, file: !111, line: 1078, baseType: !475, size: 64, offset: 896)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4064, file: !111, line: 1079, baseType: !646, size: 64, offset: 960)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4064, file: !111, line: 1080, baseType: !646, size: 64, offset: 1024)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4064, file: !111, line: 1082, baseType: !4081, size: 64, offset: 1088)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !111, line: 1314, size: 320, elements: !4083)
!4083 = !{!4084, !4092, !4093, !4094, !4095, !4096}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !4082, file: !111, line: 1315, baseType: !4085)
!4085 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !4086, line: 20, baseType: !4087)
!4086 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!4087 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4086, line: 11, elements: !4088)
!4088 = !{!4089}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !4087, file: !4086, line: 12, baseType: !4090)
!4090 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !370, line: 33, baseType: !4091)
!4091 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !370, line: 31, elements: !372)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4082, file: !111, line: 1316, baseType: !188, size: 32)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !4082, file: !111, line: 1317, baseType: !188, size: 32, offset: 32)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !4082, file: !111, line: 1318, baseType: !4081, size: 64, offset: 64)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !4082, file: !111, line: 1319, baseType: !475, size: 64, offset: 128)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !4082, file: !111, line: 1320, baseType: !488, size: 128, align: 64, offset: 192)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4064, file: !111, line: 1084, baseType: !195, size: 64, offset: 1152)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4064, file: !111, line: 1085, baseType: !195, size: 64, offset: 1216)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4064, file: !111, line: 1087, baseType: !4100, size: 64, offset: 1280)
!4100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4101, size: 64)
!4101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4102)
!4102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !111, line: 1011, size: 128, elements: !4103)
!4103 = !{!4104, !4108}
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4102, file: !111, line: 1012, baseType: !4105, size: 64)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 64)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{null, !4063, !4063}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4102, file: !111, line: 1013, baseType: !4109, size: 64, offset: 64)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{null, !4063}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4064, file: !111, line: 1088, baseType: !4113, size: 64, offset: 1344)
!4113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4114, size: 64)
!4114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4115)
!4115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !111, line: 1016, size: 512, elements: !4116)
!4116 = !{!4117, !4121, !4125, !4126, !4130, !4134, !4138, !4142}
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4115, file: !111, line: 1017, baseType: !4118, size: 64)
!4118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4119, size: 64)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{!4049, !4049}
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4115, file: !111, line: 1018, baseType: !4122, size: 64, offset: 64)
!4122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4123, size: 64)
!4123 = !DISubroutineType(types: !4124)
!4124 = !{null, !4049}
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4115, file: !111, line: 1019, baseType: !4109, size: 64, offset: 128)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4115, file: !111, line: 1020, baseType: !4127, size: 64, offset: 192)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{!188, !4063, !188}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4115, file: !111, line: 1021, baseType: !4131, size: 64, offset: 256)
!4131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4132, size: 64)
!4132 = !DISubroutineType(types: !4133)
!4133 = !{!605, !4063}
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4115, file: !111, line: 1022, baseType: !4135, size: 64, offset: 320)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64)
!4136 = !DISubroutineType(types: !4137)
!4137 = !{!188, !4063, !188, !261}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4115, file: !111, line: 1023, baseType: !4139, size: 64, offset: 384)
!4139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4140, size: 64)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{null, !4063, !988}
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4115, file: !111, line: 1024, baseType: !4131, size: 64, offset: 448)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4064, file: !111, line: 1097, baseType: !4144, size: 256, offset: 1408)
!4144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4064, file: !111, line: 1089, size: 256, elements: !4145)
!4145 = !{!4146, !4155, !4161}
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4144, file: !111, line: 1090, baseType: !4147, size: 256)
!4147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4148, line: 10, size: 256, elements: !4149)
!4148 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4149 = !{!4150, !4151, !4154}
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4147, file: !4148, line: 11, baseType: !190, size: 32)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4147, file: !4148, line: 12, baseType: !4152, size: 64, offset: 64)
!4152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4153, size: 64)
!4153 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4148, line: 5, flags: DIFlagFwdDecl)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4147, file: !4148, line: 13, baseType: !258, size: 128, offset: 128)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4144, file: !111, line: 1091, baseType: !4156, size: 64)
!4156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4148, line: 17, size: 64, elements: !4157)
!4157 = !{!4158}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4156, file: !4148, line: 18, baseType: !4159, size: 64)
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4160 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4148, line: 16, flags: DIFlagFwdDecl)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4144, file: !111, line: 1096, baseType: !4162, size: 192)
!4162 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4144, file: !111, line: 1092, size: 192, elements: !4163)
!4163 = !{!4164, !4165, !4166}
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4162, file: !111, line: 1093, baseType: !258, size: 128)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4162, file: !111, line: 1094, baseType: !188, size: 32, offset: 128)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4162, file: !111, line: 1095, baseType: !7, size: 32, offset: 160)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3988, file: !111, line: 1843, baseType: !4168, size: 64, offset: 1280)
!4168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4169, size: 64)
!4169 = !DISubroutineType(types: !4170)
!4170 = !{!430, !475, !887, !188, !445, !862, !188}
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3988, file: !111, line: 1844, baseType: !1283, size: 64, offset: 1344)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3988, file: !111, line: 1845, baseType: !4173, size: 64, offset: 1408)
!4173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4174, size: 64)
!4174 = !DISubroutineType(types: !4175)
!4175 = !{!188, !188}
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3988, file: !111, line: 1846, baseType: !4060, size: 64, offset: 1472)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3988, file: !111, line: 1847, baseType: !4178, size: 64, offset: 1536)
!4178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4179, size: 64)
!4179 = !DISubroutineType(types: !4180)
!4180 = !{!430, !3254, !475, !862, !445, !7}
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3988, file: !111, line: 1848, baseType: !4182, size: 64, offset: 1600)
!4182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4183, size: 64)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{!430, !475, !862, !3254, !445, !7}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3988, file: !111, line: 1849, baseType: !4186, size: 64, offset: 1664)
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{!188, !475, !434, !4189, !988}
!4189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4063, size: 64)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3988, file: !111, line: 1850, baseType: !4191, size: 64, offset: 1728)
!4191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4192, size: 64)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{!434, !475, !188, !646, !646}
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3988, file: !111, line: 1852, baseType: !4195, size: 64, offset: 1792)
!4195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4196, size: 64)
!4196 = !DISubroutineType(types: !4197)
!4197 = !{null, !828, !475}
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3988, file: !111, line: 1856, baseType: !4199, size: 64, offset: 1856)
!4199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4200, size: 64)
!4200 = !DISubroutineType(types: !4201)
!4201 = !{!430, !475, !646, !475, !646, !445, !7}
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3988, file: !111, line: 1858, baseType: !4203, size: 64, offset: 1920)
!4203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4204, size: 64)
!4204 = !DISubroutineType(types: !4205)
!4205 = !{!646, !475, !646, !475, !646, !646, !7}
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3988, file: !111, line: 1861, baseType: !4052, size: 64, offset: 1984)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3983, file: !111, line: 692, baseType: !781, size: 64)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !545, file: !111, line: 694, baseType: !4209, size: 64, offset: 2560)
!4209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4210, size: 64)
!4210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !111, line: 1100, size: 384, elements: !4211)
!4211 = !{!4212, !4213, !4214, !4215}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4210, file: !111, line: 1101, baseType: !358)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4210, file: !111, line: 1102, baseType: !258, size: 128)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4210, file: !111, line: 1103, baseType: !258, size: 128, offset: 128)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4210, file: !111, line: 1104, baseType: !258, size: 128, offset: 256)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !545, file: !111, line: 695, baseType: !901, size: 1216, align: 64, offset: 2624)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !545, file: !111, line: 696, baseType: !258, size: 128, offset: 3840)
!4218 = !DIDerivedType(tag: DW_TAG_member, scope: !545, file: !111, line: 697, baseType: !4219, size: 64, offset: 3968)
!4219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !545, file: !111, line: 697, size: 64, elements: !4220)
!4220 = !{!4221, !4222, !4223, !4226, !4227}
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4219, file: !111, line: 698, baseType: !3254, size: 64)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4219, file: !111, line: 699, baseType: !2198, size: 64)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4219, file: !111, line: 700, baseType: !4224, size: 64)
!4224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4225, size: 64)
!4225 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !111, line: 700, flags: DIFlagFwdDecl)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4219, file: !111, line: 701, baseType: !399, size: 64)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4219, file: !111, line: 702, baseType: !7, size: 32)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !545, file: !111, line: 705, baseType: !192, size: 32, offset: 4032)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !545, file: !111, line: 708, baseType: !192, size: 32, offset: 4064)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !545, file: !111, line: 709, baseType: !3825, size: 64, offset: 4096)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !545, file: !111, line: 720, baseType: !197, size: 64, offset: 4160)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !506, file: !503, line: 98, baseType: !4233, size: 256, offset: 448)
!4233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 256, elements: !2105)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !506, file: !503, line: 101, baseType: !4235, size: 32, offset: 704)
!4235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !4236, line: 25, size: 32, elements: !4237)
!4236 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!4237 = !{!4238}
!4238 = !DIDerivedType(tag: DW_TAG_member, scope: !4235, file: !4236, line: 26, baseType: !4239, size: 32)
!4239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4235, file: !4236, line: 26, size: 32, elements: !4240)
!4240 = !{!4241}
!4241 = !DIDerivedType(tag: DW_TAG_member, scope: !4239, file: !4236, line: 30, baseType: !4242, size: 32)
!4242 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4239, file: !4236, line: 30, size: 32, elements: !4243)
!4243 = !{!4244, !4245}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4242, file: !4236, line: 31, baseType: !358)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4242, file: !4236, line: 32, baseType: !188, size: 32)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !506, file: !503, line: 102, baseType: !3840, size: 64, offset: 768)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !506, file: !503, line: 103, baseType: !714, size: 64, offset: 832)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !506, file: !503, line: 104, baseType: !195, size: 64, offset: 896)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !506, file: !503, line: 105, baseType: !197, size: 64, offset: 960)
!4250 = !DIDerivedType(tag: DW_TAG_member, scope: !506, file: !503, line: 107, baseType: !4251, size: 128, offset: 1024)
!4251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !506, file: !503, line: 107, size: 128, elements: !4252)
!4252 = !{!4253, !4254}
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4251, file: !503, line: 108, baseType: !258, size: 128)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4251, file: !503, line: 109, baseType: !4255, size: 64)
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !506, file: !503, line: 111, baseType: !258, size: 128, offset: 1152)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !506, file: !503, line: 112, baseType: !258, size: 128, offset: 1280)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !506, file: !503, line: 120, baseType: !4259, size: 128, offset: 1408)
!4259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !506, file: !503, line: 116, size: 128, elements: !4260)
!4260 = !{!4261, !4262, !4263}
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4259, file: !503, line: 117, baseType: !756, size: 128)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4259, file: !503, line: 118, baseType: !520, size: 128)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4259, file: !503, line: 119, baseType: !488, size: 128, align: 64)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !476, file: !111, line: 922, baseType: !544, size: 64, offset: 256)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !476, file: !111, line: 923, baseType: !3986, size: 64, offset: 320)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !476, file: !111, line: 929, baseType: !358, offset: 384)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !476, file: !111, line: 930, baseType: !110, size: 32, offset: 384)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !476, file: !111, line: 931, baseType: !844, size: 64, offset: 448)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !476, file: !111, line: 932, baseType: !7, size: 32, offset: 512)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !476, file: !111, line: 933, baseType: !2301, size: 32, offset: 544)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !476, file: !111, line: 934, baseType: !840, size: 192, offset: 576)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !476, file: !111, line: 935, baseType: !646, size: 64, offset: 768)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !476, file: !111, line: 936, baseType: !4274, size: 192, offset: 832)
!4274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !111, line: 885, size: 192, elements: !4275)
!4275 = !{!4276, !4277, !4278, !4279, !4280, !4281}
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4274, file: !111, line: 886, baseType: !4085)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4274, file: !111, line: 887, baseType: !1642, size: 64)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !4274, file: !111, line: 888, baseType: !119, size: 32, offset: 64)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4274, file: !111, line: 889, baseType: !550, size: 32, offset: 96)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !4274, file: !111, line: 889, baseType: !550, size: 32, offset: 128)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !4274, file: !111, line: 890, baseType: !188, size: 32, offset: 160)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !476, file: !111, line: 937, baseType: !1717, size: 64, offset: 1024)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !476, file: !111, line: 938, baseType: !4284, size: 256, offset: 1088)
!4284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !111, line: 896, size: 256, elements: !4285)
!4285 = !{!4286, !4287, !4288, !4289, !4290, !4291}
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4284, file: !111, line: 897, baseType: !195, size: 64)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4284, file: !111, line: 898, baseType: !7, size: 32, offset: 64)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !4284, file: !111, line: 899, baseType: !7, size: 32, offset: 96)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4284, file: !111, line: 902, baseType: !7, size: 32, offset: 128)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !4284, file: !111, line: 903, baseType: !7, size: 32, offset: 160)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !4284, file: !111, line: 904, baseType: !646, size: 64, offset: 192)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !476, file: !111, line: 940, baseType: !242, size: 64, offset: 1344)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !476, file: !111, line: 945, baseType: !197, size: 64, offset: 1408)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !476, file: !111, line: 949, baseType: !258, size: 128, offset: 1472)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !476, file: !111, line: 950, baseType: !258, size: 128, offset: 1600)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !476, file: !111, line: 952, baseType: !900, size: 64, offset: 1728)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !476, file: !111, line: 953, baseType: !1091, size: 32, offset: 1792)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !476, file: !111, line: 954, baseType: !1091, size: 32, offset: 1824)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !466, file: !424, line: 174, baseType: !472, size: 64, offset: 320)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !466, file: !424, line: 176, baseType: !4301, size: 64, offset: 384)
!4301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4302, size: 64)
!4302 = !DISubroutineType(types: !4303)
!4303 = !{!188, !475, !351, !465, !1163}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !454, file: !424, line: 90, baseType: !449, size: 64, offset: 192)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !454, file: !424, line: 91, baseType: !4306, size: 64, offset: 256)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !414, file: !346, line: 143, baseType: !4308, size: 64, offset: 256)
!4308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4309, size: 64)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{!4311, !351}
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 64)
!4312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4313)
!4313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !58, line: 39, size: 384, elements: !4314)
!4314 = !{!4315, !4316, !4320, !4324, !4330, !4334}
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4313, file: !58, line: 40, baseType: !57, size: 32)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4313, file: !58, line: 41, baseType: !4317, size: 64, offset: 64)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4318 = !DISubroutineType(types: !4319)
!4319 = !{!605}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4313, file: !58, line: 42, baseType: !4321, size: 64, offset: 128)
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 64)
!4322 = !DISubroutineType(types: !4323)
!4323 = !{!197}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4313, file: !58, line: 43, baseType: !4325, size: 64, offset: 192)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{!3282, !4328}
!4328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4329, size: 64)
!4329 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !58, line: 19, flags: DIFlagFwdDecl)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4313, file: !58, line: 44, baseType: !4331, size: 64, offset: 256)
!4331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4332, size: 64)
!4332 = !DISubroutineType(types: !4333)
!4333 = !{!3282}
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4313, file: !58, line: 45, baseType: !583, size: 64, offset: 320)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !414, file: !346, line: 144, baseType: !4336, size: 64, offset: 320)
!4336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4337, size: 64)
!4337 = !DISubroutineType(types: !4338)
!4338 = !{!3282, !351}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !414, file: !346, line: 145, baseType: !4340, size: 64, offset: 384)
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4341, size: 64)
!4341 = !DISubroutineType(types: !4342)
!4342 = !{null, !351, !4343, !4344}
!4343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!4344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !345, file: !346, line: 70, baseType: !4346, size: 64, offset: 384)
!4346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4347, size: 64)
!4347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !4348, line: 123, size: 1024, elements: !4349)
!4348 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!4349 = !{!4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4466, !4467, !4468, !4469, !4470}
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4347, file: !4348, line: 124, baseType: !914, size: 32)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4347, file: !4348, line: 125, baseType: !914, size: 32, offset: 32)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4347, file: !4348, line: 135, baseType: !4346, size: 64, offset: 64)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4347, file: !4348, line: 136, baseType: !284, size: 64, offset: 128)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4347, file: !4348, line: 138, baseType: !927, size: 192, align: 64, offset: 192)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4347, file: !4348, line: 140, baseType: !3282, size: 64, offset: 384)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4347, file: !4348, line: 141, baseType: !7, size: 32, offset: 448)
!4357 = !DIDerivedType(tag: DW_TAG_member, scope: !4347, file: !4348, line: 142, baseType: !4358, size: 256, offset: 512)
!4358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4347, file: !4348, line: 142, size: 256, elements: !4359)
!4359 = !{!4360, !4406, !4410}
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4358, file: !4348, line: 143, baseType: !4361, size: 192)
!4361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !4348, line: 91, size: 192, elements: !4362)
!4362 = !{!4363, !4364, !4365}
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4361, file: !4348, line: 92, baseType: !195, size: 64)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4361, file: !4348, line: 94, baseType: !923, size: 64, offset: 64)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4361, file: !4348, line: 100, baseType: !4366, size: 64, offset: 128)
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4367, size: 64)
!4367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !4348, line: 180, size: 704, elements: !4368)
!4368 = !{!4369, !4370, !4371, !4378, !4379, !4380, !4404, !4405}
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4367, file: !4348, line: 182, baseType: !4346, size: 64)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4367, file: !4348, line: 183, baseType: !7, size: 32, offset: 64)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4367, file: !4348, line: 186, baseType: !4372, size: 192, offset: 128)
!4372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !4373, line: 19, size: 192, elements: !4374)
!4373 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!4374 = !{!4375, !4376, !4377}
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !4372, file: !4373, line: 20, baseType: !905, size: 128)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !4372, file: !4373, line: 21, baseType: !7, size: 32, offset: 128)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !4372, file: !4373, line: 22, baseType: !7, size: 32, offset: 160)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4367, file: !4348, line: 187, baseType: !190, size: 32, offset: 320)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4367, file: !4348, line: 188, baseType: !190, size: 32, offset: 352)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4367, file: !4348, line: 189, baseType: !4381, size: 64, offset: 384)
!4381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4382, size: 64)
!4382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !4348, line: 168, size: 320, elements: !4383)
!4383 = !{!4384, !4388, !4392, !4396, !4400}
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4382, file: !4348, line: 169, baseType: !4385, size: 64)
!4385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4386, size: 64)
!4386 = !DISubroutineType(types: !4387)
!4387 = !{!188, !828, !4366}
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4382, file: !4348, line: 171, baseType: !4389, size: 64, offset: 64)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 64)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{!188, !4346, !284, !440}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4382, file: !4348, line: 173, baseType: !4393, size: 64, offset: 128)
!4393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4394, size: 64)
!4394 = !DISubroutineType(types: !4395)
!4395 = !{!188, !4346}
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4382, file: !4348, line: 174, baseType: !4397, size: 64, offset: 192)
!4397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64)
!4398 = !DISubroutineType(types: !4399)
!4399 = !{!188, !4346, !4346, !284}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4382, file: !4348, line: 176, baseType: !4401, size: 64, offset: 256)
!4401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4402, size: 64)
!4402 = !DISubroutineType(types: !4403)
!4403 = !{!188, !828, !4346, !4366}
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4367, file: !4348, line: 192, baseType: !258, size: 128, offset: 448)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4367, file: !4348, line: 194, baseType: !1652, size: 128, offset: 576)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4358, file: !4348, line: 144, baseType: !4407, size: 64)
!4407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !4348, line: 103, size: 64, elements: !4408)
!4408 = !{!4409}
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4407, file: !4348, line: 104, baseType: !4346, size: 64)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4358, file: !4348, line: 145, baseType: !4411, size: 256)
!4411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !4348, line: 107, size: 256, elements: !4412)
!4412 = !{!4413, !4461, !4464, !4465}
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4411, file: !4348, line: 108, baseType: !4414, size: 64)
!4414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4415, size: 64)
!4415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4416)
!4416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !4348, line: 217, size: 768, elements: !4417)
!4417 = !{!4418, !4438, !4442, !4443, !4444, !4445, !4446, !4450, !4451, !4452, !4453, !4457}
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4416, file: !4348, line: 222, baseType: !4419, size: 64)
!4419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4420, size: 64)
!4420 = !DISubroutineType(types: !4421)
!4421 = !{!188, !4422}
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !4348, line: 197, size: 1088, elements: !4424)
!4424 = !{!4425, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4433, !4434, !4435, !4436, !4437}
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4423, file: !4348, line: 199, baseType: !4346, size: 64)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4423, file: !4348, line: 200, baseType: !475, size: 64, offset: 64)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4423, file: !4348, line: 201, baseType: !828, size: 64, offset: 128)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4423, file: !4348, line: 202, baseType: !197, size: 64, offset: 192)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4423, file: !4348, line: 205, baseType: !840, size: 192, offset: 256)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4423, file: !4348, line: 206, baseType: !840, size: 192, offset: 448)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4423, file: !4348, line: 207, baseType: !188, size: 32, offset: 640)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4423, file: !4348, line: 208, baseType: !258, size: 128, offset: 704)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4423, file: !4348, line: 209, baseType: !399, size: 64, offset: 832)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4423, file: !4348, line: 211, baseType: !445, size: 64, offset: 896)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4423, file: !4348, line: 212, baseType: !605, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4423, file: !4348, line: 213, baseType: !605, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4423, file: !4348, line: 214, baseType: !1191, size: 64, offset: 1024)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4416, file: !4348, line: 223, baseType: !4439, size: 64, offset: 64)
!4439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4440, size: 64)
!4440 = !DISubroutineType(types: !4441)
!4441 = !{null, !4422}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4416, file: !4348, line: 236, baseType: !872, size: 64, offset: 128)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4416, file: !4348, line: 238, baseType: !859, size: 64, offset: 192)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4416, file: !4348, line: 239, baseType: !868, size: 64, offset: 256)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4416, file: !4348, line: 240, baseType: !864, size: 64, offset: 320)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4416, file: !4348, line: 242, baseType: !4447, size: 64, offset: 384)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4448 = !DISubroutineType(types: !4449)
!4449 = !{!430, !4422, !399, !445, !646}
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4416, file: !4348, line: 252, baseType: !445, size: 64, offset: 448)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4416, file: !4348, line: 259, baseType: !605, size: 8, offset: 512)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4416, file: !4348, line: 260, baseType: !4447, size: 64, offset: 576)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4416, file: !4348, line: 263, baseType: !4454, size: 64, offset: 640)
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 64)
!4455 = !DISubroutineType(types: !4456)
!4456 = !{!4027, !4422, !4029}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4416, file: !4348, line: 266, baseType: !4458, size: 64, offset: 704)
!4458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4459, size: 64)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{!188, !4422, !1163}
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4411, file: !4348, line: 109, baseType: !4462, size: 64, offset: 64)
!4462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 64)
!4463 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !4348, line: 31, flags: DIFlagFwdDecl)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4411, file: !4348, line: 110, baseType: !646, size: 64, offset: 128)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4411, file: !4348, line: 111, baseType: !4346, size: 64, offset: 192)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4347, file: !4348, line: 148, baseType: !197, size: 64, offset: 768)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4347, file: !4348, line: 154, baseType: !242, size: 64, offset: 832)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4347, file: !4348, line: 156, baseType: !220, size: 16, offset: 896)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4347, file: !4348, line: 157, baseType: !440, size: 16, offset: 912)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4347, file: !4348, line: 158, baseType: !4471, size: 64, offset: 960)
!4471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4472, size: 64)
!4472 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !4348, line: 32, flags: DIFlagFwdDecl)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !345, file: !346, line: 71, baseType: !2227, size: 32, offset: 448)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !345, file: !346, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !345, file: !346, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !345, file: !346, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !345, file: !346, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !345, file: !346, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !342, file: !37, line: 463, baseType: !341, size: 64, offset: 512)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !342, file: !37, line: 465, baseType: !4481, size: 64, offset: 576)
!4481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4482, size: 64)
!4482 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !37, line: 36, flags: DIFlagFwdDecl)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !342, file: !37, line: 467, baseType: !284, size: 64, offset: 640)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !342, file: !37, line: 468, baseType: !4485, size: 64, offset: 704)
!4485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4486, size: 64)
!4486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4487)
!4487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !37, line: 87, size: 384, elements: !4488)
!4488 = !{!4489, !4490, !4491, !4495, !4499, !4503}
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4487, file: !37, line: 88, baseType: !284, size: 64)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4487, file: !37, line: 89, baseType: !451, size: 64, offset: 64)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4487, file: !37, line: 90, baseType: !4492, size: 64, offset: 128)
!4492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4493, size: 64)
!4493 = !DISubroutineType(types: !4494)
!4494 = !{!188, !341, !394}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4487, file: !37, line: 91, baseType: !4496, size: 64, offset: 192)
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = !DISubroutineType(types: !4498)
!4498 = !{!399, !341, !2367, !4343, !4344}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4487, file: !37, line: 93, baseType: !4500, size: 64, offset: 256)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 64)
!4501 = !DISubroutineType(types: !4502)
!4502 = !{null, !341}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4487, file: !37, line: 95, baseType: !4504, size: 64, offset: 320)
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4506)
!4506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !44, line: 278, size: 1472, elements: !4507)
!4507 = !{!4508, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533}
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4506, file: !44, line: 279, baseType: !4509, size: 64)
!4509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4510, size: 64)
!4510 = !DISubroutineType(types: !4511)
!4511 = !{!188, !341}
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4506, file: !44, line: 280, baseType: !4500, size: 64, offset: 64)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4506, file: !44, line: 281, baseType: !4509, size: 64, offset: 128)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4506, file: !44, line: 282, baseType: !4509, size: 64, offset: 192)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4506, file: !44, line: 283, baseType: !4509, size: 64, offset: 256)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4506, file: !44, line: 284, baseType: !4509, size: 64, offset: 320)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4506, file: !44, line: 285, baseType: !4509, size: 64, offset: 384)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4506, file: !44, line: 286, baseType: !4509, size: 64, offset: 448)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4506, file: !44, line: 287, baseType: !4509, size: 64, offset: 512)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4506, file: !44, line: 288, baseType: !4509, size: 64, offset: 576)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4506, file: !44, line: 289, baseType: !4509, size: 64, offset: 640)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4506, file: !44, line: 290, baseType: !4509, size: 64, offset: 704)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4506, file: !44, line: 291, baseType: !4509, size: 64, offset: 768)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4506, file: !44, line: 292, baseType: !4509, size: 64, offset: 832)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4506, file: !44, line: 293, baseType: !4509, size: 64, offset: 896)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4506, file: !44, line: 294, baseType: !4509, size: 64, offset: 960)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4506, file: !44, line: 295, baseType: !4509, size: 64, offset: 1024)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4506, file: !44, line: 296, baseType: !4509, size: 64, offset: 1088)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4506, file: !44, line: 297, baseType: !4509, size: 64, offset: 1152)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4506, file: !44, line: 298, baseType: !4509, size: 64, offset: 1216)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4506, file: !44, line: 299, baseType: !4509, size: 64, offset: 1280)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4506, file: !44, line: 300, baseType: !4509, size: 64, offset: 1344)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4506, file: !44, line: 301, baseType: !4509, size: 64, offset: 1408)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !342, file: !37, line: 470, baseType: !4535, size: 64, offset: 768)
!4535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4536, size: 64)
!4536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4537, line: 82, size: 1408, elements: !4538)
!4537 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4538 = !{!4539, !4540, !4541, !4542, !4543, !4544, !4545, !4604, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4620, !4623, !4624}
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4536, file: !4537, line: 83, baseType: !284, size: 64)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4536, file: !4537, line: 84, baseType: !284, size: 64, offset: 64)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4536, file: !4537, line: 85, baseType: !341, size: 64, offset: 128)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4536, file: !4537, line: 86, baseType: !451, size: 64, offset: 192)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4536, file: !4537, line: 87, baseType: !451, size: 64, offset: 256)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4536, file: !4537, line: 88, baseType: !451, size: 64, offset: 320)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4536, file: !4537, line: 90, baseType: !4546, size: 64, offset: 384)
!4546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4547, size: 64)
!4547 = !DISubroutineType(types: !4548)
!4548 = !{!188, !341, !4549}
!4549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 64)
!4550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !31, line: 95, size: 1152, elements: !4551)
!4551 = !{!4552, !4553, !4554, !4555, !4556, !4557, !4558, !4571, !4584, !4585, !4586, !4587, !4588, !4596, !4597, !4598, !4599, !4600, !4601}
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4550, file: !31, line: 96, baseType: !284, size: 64)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4550, file: !31, line: 97, baseType: !4535, size: 64, offset: 64)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4550, file: !31, line: 99, baseType: !747, size: 64, offset: 128)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4550, file: !31, line: 100, baseType: !284, size: 64, offset: 192)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4550, file: !31, line: 102, baseType: !605, size: 8, offset: 256)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4550, file: !31, line: 103, baseType: !30, size: 32, offset: 288)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4550, file: !31, line: 105, baseType: !4559, size: 64, offset: 320)
!4559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4560, size: 64)
!4560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4561)
!4561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4562, line: 262, size: 1600, elements: !4563)
!4562 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4563 = !{!4564, !4565, !4566, !4570}
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4561, file: !4562, line: 263, baseType: !2104, size: 256)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4561, file: !4562, line: 264, baseType: !2104, size: 256, offset: 256)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4561, file: !4562, line: 265, baseType: !4567, size: 1024, offset: 512)
!4567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 1024, elements: !4568)
!4568 = !{!4569}
!4569 = !DISubrange(count: 128)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4561, file: !4562, line: 266, baseType: !3282, size: 64, offset: 1536)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4550, file: !31, line: 106, baseType: !4572, size: 64, offset: 384)
!4572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4573, size: 64)
!4573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4574)
!4574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4562, line: 210, size: 256, elements: !4575)
!4575 = !{!4576, !4580, !4582, !4583}
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4574, file: !4562, line: 211, baseType: !4577, size: 72)
!4577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 72, elements: !4578)
!4578 = !{!4579}
!4579 = !DISubrange(count: 9)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4574, file: !4562, line: 212, baseType: !4581, size: 64, offset: 128)
!4581 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4562, line: 14, baseType: !195)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4574, file: !4562, line: 213, baseType: !192, size: 32, offset: 192)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4574, file: !4562, line: 214, baseType: !192, size: 32, offset: 224)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4550, file: !31, line: 108, baseType: !4509, size: 64, offset: 448)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4550, file: !31, line: 109, baseType: !4500, size: 64, offset: 512)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4550, file: !31, line: 110, baseType: !4509, size: 64, offset: 576)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4550, file: !31, line: 111, baseType: !4500, size: 64, offset: 640)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4550, file: !31, line: 112, baseType: !4589, size: 64, offset: 704)
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4590, size: 64)
!4590 = !DISubroutineType(types: !4591)
!4591 = !{!188, !341, !4592}
!4592 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !44, line: 52, baseType: !4593)
!4593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !44, line: 50, size: 32, elements: !4594)
!4594 = !{!4595}
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4593, file: !44, line: 51, baseType: !188, size: 32)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4550, file: !31, line: 113, baseType: !4509, size: 64, offset: 768)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4550, file: !31, line: 114, baseType: !451, size: 64, offset: 832)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4550, file: !31, line: 115, baseType: !451, size: 64, offset: 896)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4550, file: !31, line: 117, baseType: !4504, size: 64, offset: 960)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4550, file: !31, line: 118, baseType: !4500, size: 64, offset: 1024)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4550, file: !31, line: 120, baseType: !4602, size: 64, offset: 1088)
!4602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4603, size: 64)
!4603 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !31, line: 120, flags: DIFlagFwdDecl)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4536, file: !4537, line: 91, baseType: !4492, size: 64, offset: 448)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4536, file: !4537, line: 92, baseType: !4509, size: 64, offset: 512)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4536, file: !4537, line: 93, baseType: !4500, size: 64, offset: 576)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4536, file: !4537, line: 94, baseType: !4509, size: 64, offset: 640)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4536, file: !4537, line: 95, baseType: !4500, size: 64, offset: 704)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4536, file: !4537, line: 97, baseType: !4509, size: 64, offset: 768)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4536, file: !4537, line: 98, baseType: !4509, size: 64, offset: 832)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4536, file: !4537, line: 100, baseType: !4589, size: 64, offset: 896)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4536, file: !4537, line: 101, baseType: !4509, size: 64, offset: 960)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4536, file: !4537, line: 103, baseType: !4509, size: 64, offset: 1024)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4536, file: !4537, line: 105, baseType: !4509, size: 64, offset: 1088)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4536, file: !4537, line: 107, baseType: !4504, size: 64, offset: 1152)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4536, file: !4537, line: 109, baseType: !4617, size: 64, offset: 1216)
!4617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4618, size: 64)
!4618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4619)
!4619 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4537, line: 109, flags: DIFlagFwdDecl)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4536, file: !4537, line: 111, baseType: !4621, size: 64, offset: 1280)
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 64)
!4622 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4537, line: 111, flags: DIFlagFwdDecl)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4536, file: !4537, line: 112, baseType: !762, offset: 1344)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4536, file: !4537, line: 114, baseType: !605, size: 8, offset: 1344)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !342, file: !37, line: 471, baseType: !4549, size: 64, offset: 832)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !342, file: !37, line: 473, baseType: !197, size: 64, offset: 896)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !342, file: !37, line: 475, baseType: !197, size: 64, offset: 960)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !342, file: !37, line: 480, baseType: !840, size: 192, offset: 1024)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !342, file: !37, line: 484, baseType: !4630, size: 576, offset: 1216)
!4630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !37, line: 361, size: 576, elements: !4631)
!4631 = !{!4632, !4633, !4634, !4635, !4636, !4637}
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4630, file: !37, line: 362, baseType: !258, size: 128)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4630, file: !37, line: 363, baseType: !258, size: 128, offset: 128)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4630, file: !37, line: 364, baseType: !258, size: 128, offset: 256)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4630, file: !37, line: 365, baseType: !258, size: 128, offset: 384)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4630, file: !37, line: 366, baseType: !605, size: 8, offset: 512)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4630, file: !37, line: 367, baseType: !36, size: 32, offset: 544)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !342, file: !37, line: 485, baseType: !4639, size: 2304, offset: 1792)
!4639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !44, line: 565, size: 2304, elements: !4640)
!4640 = !{!4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709, !4710, !4711, !4712, !4713, !4714, !4715, !4725, !4729}
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4639, file: !44, line: 566, baseType: !4592, size: 32)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4639, file: !44, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4639, file: !44, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4639, file: !44, line: 569, baseType: !605, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4639, file: !44, line: 570, baseType: !605, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4639, file: !44, line: 571, baseType: !605, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4639, file: !44, line: 572, baseType: !605, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4639, file: !44, line: 573, baseType: !605, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4639, file: !44, line: 574, baseType: !605, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4639, file: !44, line: 575, baseType: !605, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4639, file: !44, line: 576, baseType: !605, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4639, file: !44, line: 577, baseType: !190, size: 32, offset: 64)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4639, file: !44, line: 578, baseType: !358, offset: 96)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4639, file: !44, line: 580, baseType: !258, size: 128, offset: 128)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4639, file: !44, line: 581, baseType: !1672, size: 192, offset: 256)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4639, file: !44, line: 582, baseType: !4657, size: 64, offset: 448)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4659, line: 43, size: 1472, elements: !4660)
!4659 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4660 = !{!4661, !4662, !4663, !4664, !4665, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682}
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4658, file: !4659, line: 44, baseType: !284, size: 64)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4658, file: !4659, line: 45, baseType: !188, size: 32, offset: 64)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4658, file: !4659, line: 46, baseType: !258, size: 128, offset: 128)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4658, file: !4659, line: 47, baseType: !358, offset: 256)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4658, file: !4659, line: 48, baseType: !4666, size: 64, offset: 256)
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4667, size: 64)
!4667 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !44, line: 533, flags: DIFlagFwdDecl)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4658, file: !4659, line: 49, baseType: !2277, size: 320, offset: 320)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4658, file: !4659, line: 50, baseType: !195, size: 64, offset: 640)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4658, file: !4659, line: 51, baseType: !1474, size: 64, offset: 704)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4658, file: !4659, line: 52, baseType: !1474, size: 64, offset: 768)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4658, file: !4659, line: 53, baseType: !1474, size: 64, offset: 832)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4658, file: !4659, line: 54, baseType: !1474, size: 64, offset: 896)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4658, file: !4659, line: 55, baseType: !1474, size: 64, offset: 960)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4658, file: !4659, line: 56, baseType: !195, size: 64, offset: 1024)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4658, file: !4659, line: 57, baseType: !195, size: 64, offset: 1088)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4658, file: !4659, line: 58, baseType: !195, size: 64, offset: 1152)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4658, file: !4659, line: 59, baseType: !195, size: 64, offset: 1216)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4658, file: !4659, line: 60, baseType: !195, size: 64, offset: 1280)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4658, file: !4659, line: 61, baseType: !341, size: 64, offset: 1344)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4658, file: !4659, line: 62, baseType: !605, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4658, file: !4659, line: 63, baseType: !605, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4639, file: !44, line: 583, baseType: !605, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4639, file: !44, line: 584, baseType: !605, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4639, file: !44, line: 585, baseType: !605, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4639, file: !44, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4639, file: !44, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4639, file: !44, line: 592, baseType: !1466, size: 512, offset: 576)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4639, file: !44, line: 593, baseType: !242, size: 64, offset: 1088)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4639, file: !44, line: 594, baseType: !2165, size: 256, offset: 1152)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4639, file: !44, line: 595, baseType: !1652, size: 128, offset: 1408)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4639, file: !44, line: 596, baseType: !4666, size: 64, offset: 1536)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4639, file: !44, line: 597, baseType: !914, size: 32, offset: 1600)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4639, file: !44, line: 598, baseType: !914, size: 32, offset: 1632)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4639, file: !44, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4639, file: !44, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4639, file: !44, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4639, file: !44, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4639, file: !44, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4639, file: !44, line: 604, baseType: !605, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4639, file: !44, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4639, file: !44, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4639, file: !44, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4639, file: !44, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4639, file: !44, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4639, file: !44, line: 610, baseType: !7, size: 32, offset: 1696)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4639, file: !44, line: 611, baseType: !43, size: 32, offset: 1728)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4639, file: !44, line: 612, baseType: !51, size: 32, offset: 1760)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4639, file: !44, line: 613, baseType: !188, size: 32, offset: 1792)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4639, file: !44, line: 614, baseType: !188, size: 32, offset: 1824)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4639, file: !44, line: 615, baseType: !242, size: 64, offset: 1856)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4639, file: !44, line: 616, baseType: !242, size: 64, offset: 1920)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4639, file: !44, line: 617, baseType: !242, size: 64, offset: 1984)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4639, file: !44, line: 618, baseType: !242, size: 64, offset: 2048)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4639, file: !44, line: 620, baseType: !4716, size: 64, offset: 2112)
!4716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4717, size: 64)
!4717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !44, line: 536, size: 256, elements: !4718)
!4718 = !{!4719, !4720, !4721, !4722}
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4717, file: !44, line: 537, baseType: !358)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4717, file: !44, line: 538, baseType: !7, size: 32)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4717, file: !44, line: 540, baseType: !258, size: 128, offset: 64)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4717, file: !44, line: 543, baseType: !4723, size: 64, offset: 192)
!4723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4724, size: 64)
!4724 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !44, line: 534, flags: DIFlagFwdDecl)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4639, file: !44, line: 621, baseType: !4726, size: 64, offset: 2176)
!4726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4727, size: 64)
!4727 = !DISubroutineType(types: !4728)
!4728 = !{null, !341, !1615}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4639, file: !44, line: 622, baseType: !4730, size: 64, offset: 2240)
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4731, size: 64)
!4731 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !44, line: 622, flags: DIFlagFwdDecl)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !342, file: !37, line: 486, baseType: !4733, size: 64, offset: 4096)
!4733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4734, size: 64)
!4734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !44, line: 642, size: 1792, elements: !4735)
!4735 = !{!4736, !4737, !4738, !4742, !4743, !4744}
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4734, file: !44, line: 643, baseType: !4506, size: 1472)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4734, file: !44, line: 644, baseType: !4509, size: 64, offset: 1472)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4734, file: !44, line: 645, baseType: !4739, size: 64, offset: 1536)
!4739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4740, size: 64)
!4740 = !DISubroutineType(types: !4741)
!4741 = !{null, !341, !605}
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4734, file: !44, line: 646, baseType: !4509, size: 64, offset: 1600)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4734, file: !44, line: 647, baseType: !4500, size: 64, offset: 1664)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4734, file: !44, line: 648, baseType: !4500, size: 64, offset: 1728)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !342, file: !37, line: 493, baseType: !4746, size: 64, offset: 4160)
!4746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4747, size: 64)
!4747 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !4748, line: 13, flags: DIFlagFwdDecl)
!4748 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !342, file: !37, line: 499, baseType: !258, size: 128, offset: 4224)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !342, file: !37, line: 502, baseType: !4751, size: 64, offset: 4352)
!4751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4752, size: 64)
!4752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4753)
!4753 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !37, line: 502, flags: DIFlagFwdDecl)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !342, file: !37, line: 504, baseType: !4755, size: 64, offset: 4416)
!4755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 64)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !342, file: !37, line: 505, baseType: !242, size: 64, offset: 4480)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !342, file: !37, line: 510, baseType: !242, size: 64, offset: 4544)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !342, file: !37, line: 511, baseType: !4759, size: 64, offset: 4608)
!4759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4760, size: 64)
!4760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4761)
!4761 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !37, line: 511, flags: DIFlagFwdDecl)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !342, file: !37, line: 513, baseType: !4763, size: 64, offset: 4672)
!4763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4764, size: 64)
!4764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !37, line: 288, size: 128, elements: !4765)
!4765 = !{!4766, !4767}
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4764, file: !37, line: 293, baseType: !7, size: 32)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4764, file: !37, line: 294, baseType: !195, size: 64, offset: 64)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !342, file: !37, line: 515, baseType: !258, size: 128, offset: 4736)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !342, file: !37, line: 526, baseType: !4770, offset: 4864)
!4770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4771, line: 5, elements: !372)
!4771 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !342, file: !37, line: 528, baseType: !4773, size: 64, offset: 4864)
!4773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4774, size: 64)
!4774 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4775, line: 14, flags: DIFlagFwdDecl)
!4775 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !342, file: !37, line: 529, baseType: !4777, size: 64, offset: 4928)
!4777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4778, size: 64)
!4778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4779, line: 17, size: 192, elements: !4780)
!4779 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4780 = !{!4781, !4782, !4865}
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4778, file: !4779, line: 18, baseType: !4777, size: 64)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4778, file: !4779, line: 19, baseType: !4783, size: 64, offset: 64)
!4783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4784, size: 64)
!4784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4785)
!4785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4779, line: 110, size: 1152, elements: !4786)
!4786 = !{!4787, !4791, !4795, !4801, !4807, !4811, !4815, !4820, !4824, !4825, !4829, !4833, !4837, !4848, !4849, !4850, !4851, !4861}
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4785, file: !4779, line: 111, baseType: !4788, size: 64)
!4788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4789, size: 64)
!4789 = !DISubroutineType(types: !4790)
!4790 = !{!4777, !4777}
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4785, file: !4779, line: 112, baseType: !4792, size: 64, offset: 64)
!4792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4793, size: 64)
!4793 = !DISubroutineType(types: !4794)
!4794 = !{null, !4777}
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4785, file: !4779, line: 113, baseType: !4796, size: 64, offset: 128)
!4796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4797, size: 64)
!4797 = !DISubroutineType(types: !4798)
!4798 = !{!605, !4799}
!4799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4800, size: 64)
!4800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4778)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4785, file: !4779, line: 114, baseType: !4802, size: 64, offset: 192)
!4802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4803, size: 64)
!4803 = !DISubroutineType(types: !4804)
!4804 = !{!3282, !4799, !4805}
!4805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4806, size: 64)
!4806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !342)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4785, file: !4779, line: 116, baseType: !4808, size: 64, offset: 256)
!4808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4809, size: 64)
!4809 = !DISubroutineType(types: !4810)
!4810 = !{!605, !4799, !284}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4785, file: !4779, line: 118, baseType: !4812, size: 64, offset: 320)
!4812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4813, size: 64)
!4813 = !DISubroutineType(types: !4814)
!4814 = !{!188, !4799, !284, !7, !197, !445}
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4785, file: !4779, line: 123, baseType: !4816, size: 64, offset: 384)
!4816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4817, size: 64)
!4817 = !DISubroutineType(types: !4818)
!4818 = !{!188, !4799, !284, !4819, !445}
!4819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4785, file: !4779, line: 126, baseType: !4821, size: 64, offset: 448)
!4821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4822, size: 64)
!4822 = !DISubroutineType(types: !4823)
!4823 = !{!284, !4799}
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4785, file: !4779, line: 127, baseType: !4821, size: 64, offset: 512)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4785, file: !4779, line: 128, baseType: !4826, size: 64, offset: 576)
!4826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4827, size: 64)
!4827 = !DISubroutineType(types: !4828)
!4828 = !{!4777, !4799}
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4785, file: !4779, line: 130, baseType: !4830, size: 64, offset: 640)
!4830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4831, size: 64)
!4831 = !DISubroutineType(types: !4832)
!4832 = !{!4777, !4799, !4777}
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4785, file: !4779, line: 133, baseType: !4834, size: 64, offset: 704)
!4834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 64)
!4835 = !DISubroutineType(types: !4836)
!4836 = !{!4777, !4799, !284}
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4785, file: !4779, line: 135, baseType: !4838, size: 64, offset: 768)
!4838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4839, size: 64)
!4839 = !DISubroutineType(types: !4840)
!4840 = !{!188, !4799, !284, !284, !7, !7, !4841}
!4841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4842, size: 64)
!4842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4779, line: 43, size: 640, elements: !4843)
!4843 = !{!4844, !4845, !4846}
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4842, file: !4779, line: 44, baseType: !4777, size: 64)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4842, file: !4779, line: 45, baseType: !7, size: 32, offset: 64)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4842, file: !4779, line: 46, baseType: !4847, size: 512, offset: 128)
!4847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 512, elements: !1504)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4785, file: !4779, line: 140, baseType: !4830, size: 64, offset: 832)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4785, file: !4779, line: 143, baseType: !4826, size: 64, offset: 896)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4785, file: !4779, line: 145, baseType: !4788, size: 64, offset: 960)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4785, file: !4779, line: 146, baseType: !4852, size: 64, offset: 1024)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4853, size: 64)
!4853 = !DISubroutineType(types: !4854)
!4854 = !{!188, !4799, !4855}
!4855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4856, size: 64)
!4856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4779, line: 29, size: 128, elements: !4857)
!4857 = !{!4858, !4859, !4860}
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4856, file: !4779, line: 30, baseType: !7, size: 32)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4856, file: !4779, line: 31, baseType: !7, size: 32, offset: 32)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4856, file: !4779, line: 32, baseType: !4799, size: 64, offset: 64)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4785, file: !4779, line: 148, baseType: !4862, size: 64, offset: 1088)
!4862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4863, size: 64)
!4863 = !DISubroutineType(types: !4864)
!4864 = !{!188, !4799, !341}
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4778, file: !4779, line: 20, baseType: !341, size: 64, offset: 128)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !342, file: !37, line: 534, baseType: !628, size: 32, offset: 4992)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !342, file: !37, line: 535, baseType: !190, size: 32, offset: 5024)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !342, file: !37, line: 537, baseType: !358, offset: 5056)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !342, file: !37, line: 538, baseType: !258, size: 128, offset: 5056)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !342, file: !37, line: 540, baseType: !4871, size: 64, offset: 5184)
!4871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4872, size: 64)
!4872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4873, line: 54, size: 960, elements: !4874)
!4873 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4874 = !{!4875, !4876, !4877, !4878, !4879, !4880, !4881, !4885, !4889, !4890, !4891, !4892, !4896, !4900, !4901}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4872, file: !4873, line: 55, baseType: !284, size: 64)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4872, file: !4873, line: 56, baseType: !747, size: 64, offset: 64)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4872, file: !4873, line: 58, baseType: !451, size: 64, offset: 128)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4872, file: !4873, line: 59, baseType: !451, size: 64, offset: 192)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4872, file: !4873, line: 60, baseType: !351, size: 64, offset: 256)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4872, file: !4873, line: 62, baseType: !4492, size: 64, offset: 320)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4872, file: !4873, line: 63, baseType: !4882, size: 64, offset: 384)
!4882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4883, size: 64)
!4883 = !DISubroutineType(types: !4884)
!4884 = !{!399, !341, !2367}
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4872, file: !4873, line: 65, baseType: !4886, size: 64, offset: 448)
!4886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4887, size: 64)
!4887 = !DISubroutineType(types: !4888)
!4888 = !{null, !4871}
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4872, file: !4873, line: 66, baseType: !4500, size: 64, offset: 512)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4872, file: !4873, line: 68, baseType: !4509, size: 64, offset: 576)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4872, file: !4873, line: 70, baseType: !4311, size: 64, offset: 640)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4872, file: !4873, line: 71, baseType: !4893, size: 64, offset: 704)
!4893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4894, size: 64)
!4894 = !DISubroutineType(types: !4895)
!4895 = !{!3282, !341}
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4872, file: !4873, line: 73, baseType: !4897, size: 64, offset: 768)
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{null, !341, !4343, !4344}
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4872, file: !4873, line: 75, baseType: !4504, size: 64, offset: 832)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4872, file: !4873, line: 77, baseType: !4621, size: 64, offset: 896)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !342, file: !37, line: 541, baseType: !451, size: 64, offset: 5248)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !342, file: !37, line: 543, baseType: !4500, size: 64, offset: 5312)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !342, file: !37, line: 544, baseType: !4905, size: 64, offset: 5376)
!4905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4906, size: 64)
!4906 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !37, line: 45, flags: DIFlagFwdDecl)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !342, file: !37, line: 545, baseType: !4908, size: 64, offset: 5440)
!4908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4909, size: 64)
!4909 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !37, line: 47, flags: DIFlagFwdDecl)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !342, file: !37, line: 547, baseType: !605, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !342, file: !37, line: 548, baseType: !605, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !342, file: !37, line: 549, baseType: !605, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !342, file: !37, line: 550, baseType: !605, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !265, file: !255, line: 635, baseType: !342, size: 5568, offset: 2304)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !265, file: !255, line: 636, baseType: !465, size: 64, offset: 7872)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !265, file: !255, line: 637, baseType: !465, size: 64, offset: 7936)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !265, file: !255, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !254, file: !255, line: 312, baseType: !264, size: 64, offset: 192)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !254, file: !255, line: 314, baseType: !197, size: 64, offset: 256)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !254, file: !255, line: 315, baseType: !326, size: 64, offset: 320)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !254, file: !255, line: 316, baseType: !4922, size: 64, offset: 384)
!4922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4923, size: 64)
!4923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !255, line: 69, size: 832, elements: !4924)
!4924 = !{!4925, !4926, !4927, !4930, !4931}
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4923, file: !255, line: 70, baseType: !264, size: 64)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4923, file: !255, line: 71, baseType: !258, size: 128, offset: 64)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4923, file: !255, line: 72, baseType: !4928, size: 64, offset: 192)
!4928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4929, size: 64)
!4929 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !255, line: 72, flags: DIFlagFwdDecl)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4923, file: !255, line: 73, baseType: !215, size: 8, offset: 256)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4923, file: !255, line: 74, baseType: !345, size: 512, offset: 320)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !254, file: !255, line: 318, baseType: !7, size: 32, offset: 448)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !254, file: !255, line: 319, baseType: !220, size: 16, offset: 480)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !254, file: !255, line: 320, baseType: !220, size: 16, offset: 496)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !254, file: !255, line: 321, baseType: !220, size: 16, offset: 512)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !254, file: !255, line: 322, baseType: !220, size: 16, offset: 528)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !254, file: !255, line: 323, baseType: !7, size: 32, offset: 544)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !254, file: !255, line: 324, baseType: !213, size: 8, offset: 576)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !254, file: !255, line: 325, baseType: !213, size: 8, offset: 584)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !254, file: !255, line: 330, baseType: !213, size: 8, offset: 592)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !254, file: !255, line: 331, baseType: !213, size: 8, offset: 600)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !254, file: !255, line: 332, baseType: !213, size: 8, offset: 608)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !254, file: !255, line: 333, baseType: !213, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !254, file: !255, line: 334, baseType: !213, size: 8, offset: 624)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !254, file: !255, line: 335, baseType: !213, size: 8, offset: 632)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !254, file: !255, line: 336, baseType: !218, size: 16, offset: 640)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !254, file: !255, line: 337, baseType: !4948, size: 64, offset: 704)
!4948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !254, file: !255, line: 339, baseType: !4950, size: 64, offset: 768)
!4950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4951, size: 64)
!4951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !255, line: 858, size: 2048, elements: !4952)
!4952 = !{!4953, !4954, !4955, !4967, !4971, !4975, !4979, !4983, !4984, !4988, !5007, !5008, !5009}
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4951, file: !255, line: 859, baseType: !258, size: 128)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4951, file: !255, line: 860, baseType: !284, size: 64, offset: 128)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4951, file: !255, line: 861, baseType: !4956, size: 64, offset: 192)
!4956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4957, size: 64)
!4957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4958)
!4958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !4562, line: 38, size: 256, elements: !4959)
!4959 = !{!4960, !4961, !4962, !4963, !4964, !4965, !4966}
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4958, file: !4562, line: 39, baseType: !192, size: 32)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4958, file: !4562, line: 39, baseType: !192, size: 32, offset: 32)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !4958, file: !4562, line: 40, baseType: !192, size: 32, offset: 64)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4958, file: !4562, line: 40, baseType: !192, size: 32, offset: 96)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4958, file: !4562, line: 41, baseType: !192, size: 32, offset: 128)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !4958, file: !4562, line: 41, baseType: !192, size: 32, offset: 160)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4958, file: !4562, line: 42, baseType: !4581, size: 64, offset: 192)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4951, file: !255, line: 862, baseType: !4968, size: 64, offset: 256)
!4968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4969, size: 64)
!4969 = !DISubroutineType(types: !4970)
!4970 = !{!188, !253, !4956}
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4951, file: !255, line: 863, baseType: !4972, size: 64, offset: 320)
!4972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4973, size: 64)
!4973 = !DISubroutineType(types: !4974)
!4974 = !{null, !253}
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4951, file: !255, line: 864, baseType: !4976, size: 64, offset: 384)
!4976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4977, size: 64)
!4977 = !DISubroutineType(types: !4978)
!4978 = !{!188, !253, !4592}
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4951, file: !255, line: 865, baseType: !4980, size: 64, offset: 448)
!4980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4981, size: 64)
!4981 = !DISubroutineType(types: !4982)
!4982 = !{!188, !253}
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4951, file: !255, line: 866, baseType: !4972, size: 64, offset: 512)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !4951, file: !255, line: 867, baseType: !4985, size: 64, offset: 576)
!4985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4986, size: 64)
!4986 = !DISubroutineType(types: !4987)
!4987 = !{!188, !253, !188}
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !4951, file: !255, line: 868, baseType: !4989, size: 64, offset: 640)
!4989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4990, size: 64)
!4990 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4991)
!4991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !255, line: 795, size: 384, elements: !4992)
!4992 = !{!4993, !4999, !5003, !5004, !5005, !5006}
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4991, file: !255, line: 797, baseType: !4994, size: 64)
!4994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4995, size: 64)
!4995 = !DISubroutineType(types: !4996)
!4996 = !{!4997, !253, !4998}
!4997 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !255, line: 772, baseType: !7)
!4998 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !255, line: 180, baseType: !7)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4991, file: !255, line: 801, baseType: !5000, size: 64, offset: 64)
!5000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5001, size: 64)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{!4997, !253}
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4991, file: !255, line: 804, baseType: !5000, size: 64, offset: 128)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4991, file: !255, line: 807, baseType: !4972, size: 64, offset: 192)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4991, file: !255, line: 808, baseType: !4972, size: 64, offset: 256)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4991, file: !255, line: 811, baseType: !4972, size: 64, offset: 320)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4951, file: !255, line: 869, baseType: !451, size: 64, offset: 704)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4951, file: !255, line: 870, baseType: !4550, size: 1152, offset: 768)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4951, file: !255, line: 871, baseType: !5010, size: 128, offset: 1920)
!5010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !255, line: 759, size: 128, elements: !5011)
!5011 = !{!5012, !5013}
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5010, file: !255, line: 760, baseType: !358)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5010, file: !255, line: 761, baseType: !258, size: 128)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !254, file: !255, line: 340, baseType: !242, size: 64, offset: 832)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !254, file: !255, line: 346, baseType: !4764, size: 128, offset: 896)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !254, file: !255, line: 348, baseType: !5017, size: 32, offset: 1024)
!5017 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !255, line: 155, baseType: !188)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !254, file: !255, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !254, file: !255, line: 352, baseType: !213, size: 8, offset: 1064)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !254, file: !255, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !254, file: !255, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !254, file: !255, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !254, file: !255, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !254, file: !255, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !254, file: !255, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !254, file: !255, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !254, file: !255, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !254, file: !255, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !254, file: !255, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !254, file: !255, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !254, file: !255, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !254, file: !255, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !254, file: !255, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !254, file: !255, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !254, file: !255, line: 376, baseType: !7, size: 32, offset: 1120)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !254, file: !255, line: 377, baseType: !7, size: 32, offset: 1152)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !254, file: !255, line: 380, baseType: !5038, size: 64, offset: 1216)
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5039, size: 64)
!5039 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !255, line: 303, flags: DIFlagFwdDecl)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !254, file: !255, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !254, file: !255, line: 383, baseType: !188, size: 32, offset: 1312)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !254, file: !255, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !254, file: !255, line: 387, baseType: !4998, size: 32, offset: 1376)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !254, file: !255, line: 388, baseType: !342, size: 5568, offset: 1408)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !254, file: !255, line: 390, baseType: !188, size: 32, offset: 6976)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !254, file: !255, line: 396, baseType: !7, size: 32, offset: 7008)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !254, file: !255, line: 397, baseType: !5048, size: 8704, offset: 7040)
!5048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, size: 8704, elements: !5049)
!5049 = !{!5050}
!5050 = !DISubrange(count: 17)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !254, file: !255, line: 399, baseType: !605, size: 8, offset: 15744)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !254, file: !255, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !254, file: !255, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !254, file: !255, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !254, file: !255, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !254, file: !255, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !254, file: !255, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !254, file: !255, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !254, file: !255, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !254, file: !255, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !254, file: !255, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !254, file: !255, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !254, file: !255, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !254, file: !255, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !254, file: !255, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !254, file: !255, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !254, file: !255, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !254, file: !255, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !254, file: !255, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !254, file: !255, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !254, file: !255, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !254, file: !255, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !254, file: !255, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !254, file: !255, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !254, file: !255, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !254, file: !255, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !254, file: !255, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !254, file: !255, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !254, file: !255, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !254, file: !255, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !254, file: !255, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !254, file: !255, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !254, file: !255, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !254, file: !255, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !254, file: !255, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !254, file: !255, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !254, file: !255, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !254, file: !255, line: 450, baseType: !5089, size: 16, offset: 15792)
!5089 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !255, line: 206, baseType: !220)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !254, file: !255, line: 451, baseType: !914, size: 32, offset: 15808)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !254, file: !255, line: 453, baseType: !5092, size: 512, offset: 15840)
!5092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 512, elements: !1905)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !254, file: !255, line: 454, baseType: !752, size: 64, offset: 16384)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !254, file: !255, line: 455, baseType: !465, size: 64, offset: 16448)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !254, file: !255, line: 456, baseType: !188, size: 32, offset: 16512)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !254, file: !255, line: 457, baseType: !5097, size: 1088, offset: 16576)
!5097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 1088, elements: !5049)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !254, file: !255, line: 458, baseType: !5097, size: 1088, offset: 17664)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !254, file: !255, line: 469, baseType: !451, size: 64, offset: 18752)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !254, file: !255, line: 471, baseType: !5101, size: 64, offset: 18816)
!5101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5102, size: 64)
!5102 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !255, line: 304, flags: DIFlagFwdDecl)
!5103 = !DIDerivedType(tag: DW_TAG_member, scope: !254, file: !255, line: 478, baseType: !5104, size: 64, offset: 18880)
!5104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !254, file: !255, line: 478, size: 64, elements: !5105)
!5105 = !{!5106, !5109}
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !5104, file: !255, line: 479, baseType: !5107, size: 64)
!5107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5108, size: 64)
!5108 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !255, line: 305, flags: DIFlagFwdDecl)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !5104, file: !255, line: 480, baseType: !253, size: 64)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !254, file: !255, line: 482, baseType: !218, size: 16, offset: 18944)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !254, file: !255, line: 483, baseType: !213, size: 8, offset: 18960)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !254, file: !255, line: 497, baseType: !218, size: 16, offset: 18976)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !254, file: !255, line: 498, baseType: !281, size: 64, offset: 19008)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !254, file: !255, line: 499, baseType: !445, size: 64, offset: 19072)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !254, file: !255, line: 500, baseType: !399, size: 64, offset: 19136)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !254, file: !255, line: 502, baseType: !195, size: 64, offset: 19200)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "free_list", scope: !185, file: !184, line: 783, baseType: !258, size: 128, offset: 576)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "pending_list", scope: !185, file: !184, line: 784, baseType: !258, size: 128, offset: 704)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "completed_list", scope: !185, file: !184, line: 785, baseType: !258, size: 128, offset: 832)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !185, file: !184, line: 787, baseType: !5121, size: 64, offset: 960)
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 64)
!5122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scsi_Host", file: !154, line: 524, size: 16256, elements: !5123)
!5123 = !{!5124, !5125, !5126, !5127, !5128, !5129, !5130, !5131, !5132, !5133, !5134, !5496, !5499, !5500, !5501, !5502, !5503, !5504, !5505, !5506, !5507, !5508, !5509, !5510, !5511, !5512, !5513, !5514, !5515, !5516, !5517, !5518, !5519, !5520, !5521, !5522, !5523, !5524, !5525, !5526, !5527, !5528, !5529, !5530, !5531, !5532, !5534, !5535, !5536, !5537, !5538, !5539, !5540, !5541, !5542, !5543, !5544, !5545, !5546, !5547, !5548, !5549}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "__devices", scope: !5122, file: !154, line: 533, baseType: !258, size: 128)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "__targets", scope: !5122, file: !154, line: 534, baseType: !258, size: 128, offset: 128)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "starved_list", scope: !5122, file: !154, line: 536, baseType: !258, size: 128, offset: 256)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "default_lock", scope: !5122, file: !154, line: 538, baseType: !358, offset: 384)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "host_lock", scope: !5122, file: !154, line: 539, baseType: !1246, size: 64, offset: 384)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "scan_mutex", scope: !5122, file: !154, line: 541, baseType: !840, size: 192, offset: 448)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "eh_cmd_q", scope: !5122, file: !154, line: 543, baseType: !258, size: 128, offset: 640)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "ehandler", scope: !5122, file: !154, line: 544, baseType: !1390, size: 64, offset: 768)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "eh_action", scope: !5122, file: !154, line: 545, baseType: !1671, size: 64, offset: 832)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "host_wait", scope: !5122, file: !154, line: 547, baseType: !1652, size: 128, offset: 896)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "hostt", scope: !5122, file: !154, line: 548, baseType: !5135, size: 64, offset: 1024)
!5135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5136, size: 64)
!5136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_template", file: !154, line: 32, size: 2880, elements: !5137)
!5137 = !{!5138, !5139, !5140, !5144, !5297, !5381, !5382, !5383, !5387, !5391, !5392, !5393, !5394, !5395, !5399, !5400, !5404, !5408, !5412, !5416, !5420, !5424, !5428, !5432, !5436, !5437, !5441, !5445, !5449, !5453, !5454, !5455, !5456, !5457, !5458, !5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470, !5471, !5472, !5473, !5474, !5488, !5489, !5490, !5491, !5492, !5495}
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !5136, file: !154, line: 33, baseType: !747, size: 64)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5136, file: !154, line: 34, baseType: !284, size: 64, offset: 64)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5136, file: !154, line: 43, baseType: !5141, size: 64, offset: 128)
!5141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5142, size: 64)
!5142 = !DISubroutineType(types: !5143)
!5143 = !{!284, !5121}
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5136, file: !154, line: 50, baseType: !5145, size: 64, offset: 192)
!5145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5146, size: 64)
!5146 = !DISubroutineType(types: !5147)
!5147 = !{!188, !5148, !7, !197}
!5148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5149, size: 64)
!5149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device", file: !128, line: 101, size: 15232, align: 64, elements: !5150)
!5150 = !{!5151, !5152, !5153, !5154, !5155, !5156, !5157, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5165, !5166, !5167, !5168, !5169, !5170, !5171, !5172, !5173, !5174, !5175, !5176, !5177, !5178, !5180, !5181, !5182, !5183, !5191, !5192, !5193, !5194, !5195, !5219, !5221, !5222, !5223, !5224, !5225, !5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233, !5234, !5235, !5236, !5237, !5238, !5239, !5240, !5241, !5242, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263, !5264, !5265, !5266, !5267, !5268, !5269, !5270, !5271, !5272, !5273, !5274, !5275, !5276, !5277, !5278, !5279, !5280, !5281, !5285, !5286, !5289, !5290, !5291, !5292, !5293, !5294, !5295, !5296}
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !5149, file: !128, line: 102, baseType: !5121, size: 64)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "request_queue", scope: !5149, file: !128, line: 103, baseType: !2374, size: 64, offset: 64)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !5149, file: !128, line: 106, baseType: !258, size: 128, offset: 128)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "same_target_siblings", scope: !5149, file: !128, line: 107, baseType: !258, size: 128, offset: 256)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "device_busy", scope: !5149, file: !128, line: 109, baseType: !914, size: 32, offset: 384)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "device_blocked", scope: !5149, file: !128, line: 110, baseType: !914, size: 32, offset: 416)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "restarts", scope: !5149, file: !128, line: 112, baseType: !914, size: 32, offset: 448)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !5149, file: !128, line: 113, baseType: !358, offset: 480)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "starved_entry", scope: !5149, file: !128, line: 114, baseType: !258, size: 128, offset: 512)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !5149, file: !128, line: 115, baseType: !220, size: 16, offset: 640)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "max_queue_depth", scope: !5149, file: !128, line: 116, baseType: !220, size: 16, offset: 656)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_depth", scope: !5149, file: !128, line: 117, baseType: !220, size: 16, offset: 672)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_count", scope: !5149, file: !128, line: 118, baseType: !220, size: 16, offset: 688)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_time", scope: !5149, file: !128, line: 119, baseType: !195, size: 64, offset: 704)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ramp_up_period", scope: !5149, file: !128, line: 120, baseType: !195, size: 64, offset: 768)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_ramp_up", scope: !5149, file: !128, line: 123, baseType: !195, size: 64, offset: 832)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5149, file: !128, line: 125, baseType: !7, size: 32, offset: 896)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5149, file: !128, line: 125, baseType: !7, size: 32, offset: 928)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "lun", scope: !5149, file: !128, line: 126, baseType: !242, size: 64, offset: 960)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !5149, file: !128, line: 127, baseType: !7, size: 32, offset: 1024)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "sector_size", scope: !5149, file: !128, line: 129, baseType: !7, size: 32, offset: 1056)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5149, file: !128, line: 131, baseType: !197, size: 64, offset: 1088)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5149, file: !128, line: 132, baseType: !215, size: 8, offset: 1152)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !5149, file: !128, line: 133, baseType: !286, size: 8, offset: 1160)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "inq_periph_qual", scope: !5149, file: !128, line: 134, baseType: !286, size: 8, offset: 1168)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_mutex", scope: !5149, file: !128, line: 135, baseType: !840, size: 192, offset: 1216)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_len", scope: !5149, file: !128, line: 136, baseType: !215, size: 8, offset: 1408)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry", scope: !5149, file: !128, line: 137, baseType: !5179, size: 64, offset: 1472)
!5179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5149, file: !128, line: 138, baseType: !284, size: 64, offset: 1536)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5149, file: !128, line: 139, baseType: !284, size: 64, offset: 1600)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !5149, file: !128, line: 140, baseType: !284, size: 64, offset: 1664)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg0", scope: !5149, file: !128, line: 143, baseType: !5184, size: 64, offset: 1728)
!5184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5185, size: 64)
!5185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_vpd", file: !128, line: 95, size: 192, elements: !5186)
!5186 = !{!5187, !5188, !5189}
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5185, file: !128, line: 96, baseType: !488, size: 128, align: 64)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5185, file: !128, line: 97, baseType: !188, size: 32, offset: 128)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5185, file: !128, line: 98, baseType: !5190, offset: 160)
!5190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, elements: !2181)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg83", scope: !5149, file: !128, line: 144, baseType: !5184, size: 64, offset: 1792)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg80", scope: !5149, file: !128, line: 145, baseType: !5184, size: 64, offset: 1856)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg89", scope: !5149, file: !128, line: 146, baseType: !5184, size: 64, offset: 1920)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "current_tag", scope: !5149, file: !128, line: 147, baseType: !215, size: 8, offset: 1984)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_target", scope: !5149, file: !128, line: 148, baseType: !5196, size: 64, offset: 2048)
!5196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5197, size: 64)
!5197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_target", file: !128, line: 289, size: 6272, align: 64, elements: !5198)
!5198 = !{!5199, !5200, !5201, !5202, !5203, !5204, !5205, !5206, !5207, !5208, !5209, !5210, !5211, !5212, !5213, !5214, !5215, !5216, !5217, !5218}
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "starget_sdev_user", scope: !5197, file: !128, line: 290, baseType: !5148, size: 64)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !5197, file: !128, line: 291, baseType: !258, size: 128, offset: 64)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !5197, file: !128, line: 292, baseType: !258, size: 128, offset: 192)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5197, file: !128, line: 293, baseType: !342, size: 5568, offset: 320)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "reap_ref", scope: !5197, file: !128, line: 294, baseType: !2227, size: 32, offset: 5888)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5197, file: !128, line: 295, baseType: !7, size: 32, offset: 5920)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5197, file: !128, line: 296, baseType: !7, size: 32, offset: 5952)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !5197, file: !128, line: 298, baseType: !7, size: 1, offset: 5984, flags: DIFlagBitField, extraData: i64 5984)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "single_lun", scope: !5197, file: !128, line: 299, baseType: !7, size: 1, offset: 5985, flags: DIFlagBitField, extraData: i64 5984)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "pdt_1f_for_no_lun", scope: !5197, file: !128, line: 302, baseType: !7, size: 1, offset: 5986, flags: DIFlagBitField, extraData: i64 5984)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_luns", scope: !5197, file: !128, line: 304, baseType: !7, size: 1, offset: 5987, flags: DIFlagBitField, extraData: i64 5984)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_lun_change", scope: !5197, file: !128, line: 306, baseType: !7, size: 1, offset: 5988, flags: DIFlagBitField, extraData: i64 5984)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "target_busy", scope: !5197, file: !128, line: 310, baseType: !914, size: 32, offset: 6016)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "target_blocked", scope: !5197, file: !128, line: 311, baseType: !914, size: 32, offset: 6048)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5197, file: !128, line: 317, baseType: !7, size: 32, offset: 6080)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "max_target_blocked", scope: !5197, file: !128, line: 318, baseType: !7, size: 32, offset: 6112)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !5197, file: !128, line: 321, baseType: !286, size: 8, offset: 6144)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5197, file: !128, line: 322, baseType: !127, size: 32, offset: 6176)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5197, file: !128, line: 323, baseType: !197, size: 64, offset: 6208)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "starget_data", scope: !5197, file: !128, line: 324, baseType: !3483, offset: 6272)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_bflags", scope: !5149, file: !128, line: 150, baseType: !5220, size: 64, offset: 2112)
!5220 = !DIDerivedType(tag: DW_TAG_typedef, name: "blist_flags_t", file: !128, line: 18, baseType: !243)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timeout", scope: !5149, file: !128, line: 154, baseType: !7, size: 32, offset: 2176)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !5149, file: !128, line: 155, baseType: !7, size: 1, offset: 2208, flags: DIFlagBitField, extraData: i64 2208)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5149, file: !128, line: 156, baseType: !7, size: 1, offset: 2209, flags: DIFlagBitField, extraData: i64 2208)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !5149, file: !128, line: 157, baseType: !7, size: 1, offset: 2210, flags: DIFlagBitField, extraData: i64 2208)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "lockable", scope: !5149, file: !128, line: 158, baseType: !7, size: 1, offset: 2211, flags: DIFlagBitField, extraData: i64 2208)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !5149, file: !128, line: 159, baseType: !7, size: 1, offset: 2212, flags: DIFlagBitField, extraData: i64 2208)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "borken", scope: !5149, file: !128, line: 160, baseType: !7, size: 1, offset: 2213, flags: DIFlagBitField, extraData: i64 2208)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !5149, file: !128, line: 162, baseType: !7, size: 1, offset: 2214, flags: DIFlagBitField, extraData: i64 2208)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !5149, file: !128, line: 163, baseType: !7, size: 1, offset: 2215, flags: DIFlagBitField, extraData: i64 2208)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr", scope: !5149, file: !128, line: 164, baseType: !7, size: 1, offset: 2216, flags: DIFlagBitField, extraData: i64 2208)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr", scope: !5149, file: !128, line: 165, baseType: !7, size: 1, offset: 2217, flags: DIFlagBitField, extraData: i64 2208)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "ppr", scope: !5149, file: !128, line: 166, baseType: !7, size: 1, offset: 2218, flags: DIFlagBitField, extraData: i64 2208)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_supported", scope: !5149, file: !128, line: 167, baseType: !7, size: 1, offset: 2219, flags: DIFlagBitField, extraData: i64 2208)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "simple_tags", scope: !5149, file: !128, line: 168, baseType: !7, size: 1, offset: 2220, flags: DIFlagBitField, extraData: i64 2208)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "was_reset", scope: !5149, file: !128, line: 169, baseType: !7, size: 1, offset: 2221, flags: DIFlagBitField, extraData: i64 2208)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_cc_ua", scope: !5149, file: !128, line: 171, baseType: !7, size: 1, offset: 2222, flags: DIFlagBitField, extraData: i64 2208)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_rw", scope: !5149, file: !128, line: 173, baseType: !7, size: 1, offset: 2223, flags: DIFlagBitField, extraData: i64 2208)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_ms", scope: !5149, file: !128, line: 174, baseType: !7, size: 1, offset: 2224, flags: DIFlagBitField, extraData: i64 2208)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "set_dbd_for_ms", scope: !5149, file: !128, line: 175, baseType: !7, size: 1, offset: 2225, flags: DIFlagBitField, extraData: i64 2208)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_opcodes", scope: !5149, file: !128, line: 176, baseType: !7, size: 1, offset: 2226, flags: DIFlagBitField, extraData: i64 2208)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5149, file: !128, line: 177, baseType: !7, size: 1, offset: 2227, flags: DIFlagBitField, extraData: i64 2208)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "use_16_for_rw", scope: !5149, file: !128, line: 178, baseType: !7, size: 1, offset: 2228, flags: DIFlagBitField, extraData: i64 2208)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_8", scope: !5149, file: !128, line: 179, baseType: !7, size: 1, offset: 2229, flags: DIFlagBitField, extraData: i64 2208)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_3f", scope: !5149, file: !128, line: 180, baseType: !7, size: 1, offset: 2230, flags: DIFlagBitField, extraData: i64 2208)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "skip_vpd_pages", scope: !5149, file: !128, line: 181, baseType: !7, size: 1, offset: 2231, flags: DIFlagBitField, extraData: i64 2208)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "try_vpd_pages", scope: !5149, file: !128, line: 182, baseType: !7, size: 1, offset: 2232, flags: DIFlagBitField, extraData: i64 2208)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "use_192_bytes_for_3f", scope: !5149, file: !128, line: 183, baseType: !7, size: 1, offset: 2233, flags: DIFlagBitField, extraData: i64 2208)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "no_start_on_add", scope: !5149, file: !128, line: 184, baseType: !7, size: 1, offset: 2234, flags: DIFlagBitField, extraData: i64 2208)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "allow_restart", scope: !5149, file: !128, line: 185, baseType: !7, size: 1, offset: 2235, flags: DIFlagBitField, extraData: i64 2208)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "manage_start_stop", scope: !5149, file: !128, line: 186, baseType: !7, size: 1, offset: 2236, flags: DIFlagBitField, extraData: i64 2208)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "start_stop_pwr_cond", scope: !5149, file: !128, line: 187, baseType: !7, size: 1, offset: 2237, flags: DIFlagBitField, extraData: i64 2208)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "no_uld_attach", scope: !5149, file: !128, line: 188, baseType: !7, size: 1, offset: 2238, flags: DIFlagBitField, extraData: i64 2208)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "select_no_atn", scope: !5149, file: !128, line: 189, baseType: !7, size: 1, offset: 2239, flags: DIFlagBitField, extraData: i64 2208)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "fix_capacity", scope: !5149, file: !128, line: 190, baseType: !7, size: 1, offset: 2240, flags: DIFlagBitField, extraData: i64 2208)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "guess_capacity", scope: !5149, file: !128, line: 191, baseType: !7, size: 1, offset: 2241, flags: DIFlagBitField, extraData: i64 2208)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "retry_hwerror", scope: !5149, file: !128, line: 192, baseType: !7, size: 1, offset: 2242, flags: DIFlagBitField, extraData: i64 2208)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "last_sector_bug", scope: !5149, file: !128, line: 193, baseType: !7, size: 1, offset: 2243, flags: DIFlagBitField, extraData: i64 2208)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_disc_info", scope: !5149, file: !128, line: 195, baseType: !7, size: 1, offset: 2244, flags: DIFlagBitField, extraData: i64 2208)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_capacity_16", scope: !5149, file: !128, line: 196, baseType: !7, size: 1, offset: 2245, flags: DIFlagBitField, extraData: i64 2208)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "try_rc_10_first", scope: !5149, file: !128, line: 197, baseType: !7, size: 1, offset: 2246, flags: DIFlagBitField, extraData: i64 2208)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "security_supported", scope: !5149, file: !128, line: 198, baseType: !7, size: 1, offset: 2247, flags: DIFlagBitField, extraData: i64 2208)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !5149, file: !128, line: 199, baseType: !7, size: 1, offset: 2248, flags: DIFlagBitField, extraData: i64 2208)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "wce_default_on", scope: !5149, file: !128, line: 200, baseType: !7, size: 1, offset: 2249, flags: DIFlagBitField, extraData: i64 2208)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "no_dif", scope: !5149, file: !128, line: 201, baseType: !7, size: 1, offset: 2250, flags: DIFlagBitField, extraData: i64 2208)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "broken_fua", scope: !5149, file: !128, line: 202, baseType: !7, size: 1, offset: 2251, flags: DIFlagBitField, extraData: i64 2208)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "lun_in_cdb", scope: !5149, file: !128, line: 203, baseType: !7, size: 1, offset: 2252, flags: DIFlagBitField, extraData: i64 2208)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_limit_for_ws", scope: !5149, file: !128, line: 204, baseType: !7, size: 1, offset: 2253, flags: DIFlagBitField, extraData: i64 2208)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend", scope: !5149, file: !128, line: 205, baseType: !7, size: 1, offset: 2254, flags: DIFlagBitField, extraData: i64 2208)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "offline_already", scope: !5149, file: !128, line: 208, baseType: !605, size: 8, offset: 2256)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "disk_events_disable_depth", scope: !5149, file: !128, line: 210, baseType: !914, size: 32, offset: 2272)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "supported_events", scope: !5149, file: !128, line: 212, baseType: !1542, size: 64, offset: 2304)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "pending_events", scope: !5149, file: !128, line: 213, baseType: !1542, size: 64, offset: 2368)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !5149, file: !128, line: 214, baseType: !258, size: 128, offset: 2432)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "event_work", scope: !5149, file: !128, line: 215, baseType: !2165, size: 256, offset: 2560)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "max_device_blocked", scope: !5149, file: !128, line: 217, baseType: !7, size: 32, offset: 2816)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "iorequest_cnt", scope: !5149, file: !128, line: 220, baseType: !914, size: 32, offset: 2848)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "iodone_cnt", scope: !5149, file: !128, line: 221, baseType: !914, size: 32, offset: 2880)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "ioerr_cnt", scope: !5149, file: !128, line: 222, baseType: !914, size: 32, offset: 2912)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_gendev", scope: !5149, file: !128, line: 224, baseType: !342, size: 5568, offset: 2944)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_dev", scope: !5149, file: !128, line: 225, baseType: !342, size: 5568, offset: 8512)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "ew", scope: !5149, file: !128, line: 227, baseType: !5282, size: 256, offset: 14080)
!5282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "execute_work", file: !2162, line: 168, size: 256, elements: !5283)
!5283 = !{!5284}
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5282, file: !2162, line: 169, baseType: !2165, size: 256)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !5149, file: !128, line: 228, baseType: !2165, size: 256, offset: 14336)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5149, file: !128, line: 230, baseType: !5287, size: 64, offset: 14592)
!5287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5288, size: 64)
!5288 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device_handler", file: !128, line: 230, flags: DIFlagFwdDecl)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !5149, file: !128, line: 231, baseType: !197, size: 64, offset: 14656)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_len", scope: !5149, file: !128, line: 233, baseType: !445, size: 64, offset: 14720)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_buf", scope: !5149, file: !128, line: 234, baseType: !197, size: 64, offset: 14784)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "access_state", scope: !5149, file: !128, line: 236, baseType: !215, size: 8, offset: 14848)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "state_mutex", scope: !5149, file: !128, line: 237, baseType: !840, size: 192, offset: 14912)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_state", scope: !5149, file: !128, line: 238, baseType: !135, size: 32, offset: 15104)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "quiesced_by", scope: !5149, file: !128, line: 239, baseType: !1390, size: 64, offset: 15168)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_data", scope: !5149, file: !128, line: 240, baseType: !3483, offset: 15232)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "init_cmd_priv", scope: !5136, file: !154, line: 65, baseType: !5298, size: 64, offset: 256)
!5298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5299, size: 64)
!5299 = !DISubroutineType(types: !5300)
!5300 = !{!188, !5121, !5301}
!5301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5302, size: 64)
!5302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_cmnd", file: !5303, line: 68, size: 3136, elements: !5304)
!5303 = !DIFile(filename: "./include/scsi/scsi_cmnd.h", directory: "/home/lizy2001/genbc/linux")
!5304 = !{!5305, !5318, !5319, !5320, !5321, !5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5330, !5331, !5332, !5351, !5353, !5354, !5355, !5356, !5357, !5361, !5375, !5376, !5377, !5378, !5379, !5380}
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !5302, file: !5303, line: 69, baseType: !5306, size: 448)
!5306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_request", file: !5307, line: 9, size: 448, elements: !5308)
!5307 = !DIFile(filename: "./include/scsi/scsi_request.h", directory: "/home/lizy2001/genbc/linux")
!5308 = !{!5309, !5311, !5312, !5313, !5314, !5315, !5316, !5317}
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "__cmd", scope: !5306, file: !5307, line: 10, baseType: !5310, size: 128)
!5310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 128, elements: !1905)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5306, file: !5307, line: 11, baseType: !5179, size: 64, offset: 128)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !5306, file: !5307, line: 12, baseType: !220, size: 16, offset: 192)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5306, file: !5307, line: 13, baseType: !188, size: 32, offset: 224)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !5306, file: !5307, line: 14, baseType: !7, size: 32, offset: 256)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "resid_len", scope: !5306, file: !5307, line: 15, baseType: !7, size: 32, offset: 288)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !5306, file: !5307, line: 16, baseType: !188, size: 32, offset: 320)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !5306, file: !5307, line: 17, baseType: !197, size: 64, offset: 384)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5302, file: !5303, line: 70, baseType: !5148, size: 64, offset: 448)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "eh_entry", scope: !5302, file: !5303, line: 71, baseType: !258, size: 128, offset: 512)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "abort_work", scope: !5302, file: !5303, line: 72, baseType: !2273, size: 704, offset: 640)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5302, file: !5303, line: 74, baseType: !488, size: 128, align: 64, offset: 1344)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "eh_eflags", scope: !5302, file: !5303, line: 76, baseType: !188, size: 32, offset: 1472)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "jiffies_at_alloc", scope: !5302, file: !5303, line: 83, baseType: !195, size: 64, offset: 1536)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !5302, file: !5303, line: 85, baseType: !188, size: 32, offset: 1600)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !5302, file: !5303, line: 86, baseType: !188, size: 32, offset: 1632)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "prot_op", scope: !5302, file: !5303, line: 88, baseType: !215, size: 8, offset: 1664)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "prot_type", scope: !5302, file: !5303, line: 89, baseType: !215, size: 8, offset: 1672)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "prot_flags", scope: !5302, file: !5303, line: 90, baseType: !215, size: 8, offset: 1680)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !5302, file: !5303, line: 92, baseType: !220, size: 16, offset: 1696)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "sc_data_direction", scope: !5302, file: !5303, line: 93, baseType: !146, size: 32, offset: 1728)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "cmnd", scope: !5302, file: !5303, line: 96, baseType: !5179, size: 64, offset: 1792)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "sdb", scope: !5302, file: !5303, line: 100, baseType: !5333, size: 192, offset: 1856)
!5333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_data_buffer", file: !5303, line: 35, size: 192, elements: !5334)
!5334 = !{!5335, !5350}
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !5333, file: !5303, line: 36, baseType: !5336, size: 128)
!5336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !5337, line: 42, size: 128, elements: !5338)
!5337 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!5338 = !{!5339, !5348, !5349}
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !5336, file: !5337, line: 43, baseType: !5340, size: 64)
!5340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5341, size: 64)
!5341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !5337, line: 11, size: 256, elements: !5342)
!5342 = !{!5343, !5344, !5345, !5346, !5347}
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !5341, file: !5337, line: 12, baseType: !195, size: 64)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5341, file: !5337, line: 13, baseType: !7, size: 32, offset: 64)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5341, file: !5337, line: 14, baseType: !7, size: 32, offset: 96)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !5341, file: !5337, line: 15, baseType: !240, size: 64, offset: 128)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !5341, file: !5337, line: 17, baseType: !7, size: 32, offset: 192)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !5336, file: !5337, line: 44, baseType: !7, size: 32, offset: 64)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !5336, file: !5337, line: 45, baseType: !7, size: 32, offset: 96)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5333, file: !5303, line: 37, baseType: !7, size: 32, offset: 128)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "prot_sdb", scope: !5302, file: !5303, line: 101, baseType: !5352, size: 64, offset: 2048)
!5352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5333, size: 64)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "underflow", scope: !5302, file: !5303, line: 103, baseType: !7, size: 32, offset: 2112)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "transfersize", scope: !5302, file: !5303, line: 106, baseType: !7, size: 32, offset: 2144)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5302, file: !5303, line: 112, baseType: !2378, size: 64, offset: 2176)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "sense_buffer", scope: !5302, file: !5303, line: 115, baseType: !5179, size: 64, offset: 2240)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_done", scope: !5302, file: !5303, line: 123, baseType: !5358, size: 64, offset: 2304)
!5358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5359, size: 64)
!5359 = !DISubroutineType(types: !5360)
!5360 = !{null, !5301}
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "SCp", scope: !5302, file: !5303, line: 129, baseType: !5362, size: 512, offset: 2368)
!5362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_pointer", file: !5303, line: 41, size: 512, elements: !5363)
!5363 = !{!5364, !5365, !5366, !5367, !5368, !5369, !5371, !5372, !5373, !5374}
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5362, file: !5303, line: 42, baseType: !399, size: 64)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "this_residual", scope: !5362, file: !5303, line: 43, baseType: !188, size: 32, offset: 64)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !5362, file: !5303, line: 44, baseType: !5340, size: 64, offset: 128)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "buffers_residual", scope: !5362, file: !5303, line: 45, baseType: !188, size: 32, offset: 192)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "dma_handle", scope: !5362, file: !5303, line: 47, baseType: !240, size: 64, offset: 256)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "Status", scope: !5362, file: !5303, line: 49, baseType: !5370, size: 32, offset: 320)
!5370 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !188)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "Message", scope: !5362, file: !5303, line: 50, baseType: !5370, size: 32, offset: 352)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "have_data_in", scope: !5362, file: !5303, line: 51, baseType: !5370, size: 32, offset: 384)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "sent_command", scope: !5362, file: !5303, line: 52, baseType: !5370, size: 32, offset: 416)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !5362, file: !5303, line: 53, baseType: !5370, size: 32, offset: 448)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "host_scribble", scope: !5302, file: !5303, line: 131, baseType: !5179, size: 64, offset: 2880)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5302, file: !5303, line: 139, baseType: !188, size: 32, offset: 2944)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5302, file: !5303, line: 140, baseType: !188, size: 32, offset: 2976)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5302, file: !5303, line: 141, baseType: !195, size: 64, offset: 3008)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !5302, file: !5303, line: 143, baseType: !215, size: 8, offset: 3072)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "extra_len", scope: !5302, file: !5303, line: 144, baseType: !7, size: 32, offset: 3104)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "exit_cmd_priv", scope: !5136, file: !154, line: 66, baseType: !5298, size: 64, offset: 320)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "queuecommand", scope: !5136, file: !154, line: 102, baseType: !5298, size: 64, offset: 384)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !5136, file: !154, line: 112, baseType: !5384, size: 64, offset: 448)
!5384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5385, size: 64)
!5385 = !DISubroutineType(types: !5386)
!5386 = !{null, !5121, !218}
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "eh_abort_handler", scope: !5136, file: !154, line: 132, baseType: !5388, size: 64, offset: 512)
!5388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5389, size: 64)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{!188, !5301}
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "eh_device_reset_handler", scope: !5136, file: !154, line: 133, baseType: !5388, size: 64, offset: 576)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "eh_target_reset_handler", scope: !5136, file: !154, line: 134, baseType: !5388, size: 64, offset: 640)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "eh_bus_reset_handler", scope: !5136, file: !154, line: 135, baseType: !5388, size: 64, offset: 704)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "eh_host_reset_handler", scope: !5136, file: !154, line: 136, baseType: !5388, size: 64, offset: 768)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "slave_alloc", scope: !5136, file: !154, line: 164, baseType: !5396, size: 64, offset: 832)
!5396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5397, size: 64)
!5397 = !DISubroutineType(types: !5398)
!5398 = !{!188, !5148}
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "slave_configure", scope: !5136, file: !154, line: 195, baseType: !5396, size: 64, offset: 896)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "slave_destroy", scope: !5136, file: !154, line: 206, baseType: !5401, size: 64, offset: 960)
!5401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5402, size: 64)
!5402 = !DISubroutineType(types: !5403)
!5403 = !{null, !5148}
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "target_alloc", scope: !5136, file: !154, line: 220, baseType: !5405, size: 64, offset: 1024)
!5405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5406, size: 64)
!5406 = !DISubroutineType(types: !5407)
!5407 = !{!188, !5196}
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "target_destroy", scope: !5136, file: !154, line: 230, baseType: !5409, size: 64, offset: 1088)
!5409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5410, size: 64)
!5410 = !DISubroutineType(types: !5411)
!5411 = !{null, !5196}
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "scan_finished", scope: !5136, file: !154, line: 241, baseType: !5413, size: 64, offset: 1152)
!5413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5414, size: 64)
!5414 = !DISubroutineType(types: !5415)
!5415 = !{!188, !5121, !195}
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !5136, file: !154, line: 250, baseType: !5417, size: 64, offset: 1216)
!5417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5418, size: 64)
!5418 = !DISubroutineType(types: !5419)
!5419 = !{null, !5121}
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "change_queue_depth", scope: !5136, file: !154, line: 263, baseType: !5421, size: 64, offset: 1280)
!5421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5422, size: 64)
!5422 = !DISubroutineType(types: !5423)
!5423 = !{!188, !5148, !188}
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !5136, file: !154, line: 271, baseType: !5425, size: 64, offset: 1344)
!5425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5426, size: 64)
!5426 = !DISubroutineType(types: !5427)
!5427 = !{!188, !5121}
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "dma_need_drain", scope: !5136, file: !154, line: 278, baseType: !5429, size: 64, offset: 1408)
!5429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5430, size: 64)
!5430 = !DISubroutineType(types: !5431)
!5431 = !{!605, !2378}
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "bios_param", scope: !5136, file: !154, line: 288, baseType: !5433, size: 64, offset: 1472)
!5433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5434, size: 64)
!5434 = !DISubroutineType(types: !5435)
!5435 = !{!188, !5148, !2198, !997, !822}
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !5136, file: !154, line: 297, baseType: !5401, size: 64, offset: 1536)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "show_info", scope: !5136, file: !154, line: 306, baseType: !5438, size: 64, offset: 1600)
!5438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5439, size: 64)
!5439 = !DISubroutineType(types: !5440)
!5440 = !{!188, !828, !5121}
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !5136, file: !154, line: 307, baseType: !5442, size: 64, offset: 1664)
!5442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5443, size: 64)
!5443 = !DISubroutineType(types: !5444)
!5444 = !{!188, !5121, !399, !188}
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timed_out", scope: !5136, file: !154, line: 316, baseType: !5446, size: 64, offset: 1728)
!5446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5447, size: 64)
!5447 = !DISubroutineType(types: !5448)
!5448 = !{!88, !5301}
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "host_reset", scope: !5136, file: !154, line: 326, baseType: !5450, size: 64, offset: 1792)
!5450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5451, size: 64)
!5451 = !DISubroutineType(types: !5452)
!5452 = !{!188, !5121, !188}
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "proc_name", scope: !5136, file: !154, line: 334, baseType: !284, size: 64, offset: 1856)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !5136, file: !154, line: 340, baseType: !326, size: 64, offset: 1920)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5136, file: !154, line: 347, baseType: !188, size: 32, offset: 1984)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !5136, file: !154, line: 356, baseType: !188, size: 32, offset: 2016)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !5136, file: !154, line: 362, baseType: !220, size: 16, offset: 2048)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !5136, file: !154, line: 363, baseType: !220, size: 16, offset: 2064)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5136, file: !154, line: 368, baseType: !7, size: 32, offset: 2080)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5136, file: !154, line: 373, baseType: !7, size: 32, offset: 2112)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !5136, file: !154, line: 379, baseType: !195, size: 64, offset: 2176)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5136, file: !154, line: 381, baseType: !195, size: 64, offset: 2240)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !5136, file: !154, line: 400, baseType: !1379, size: 16, offset: 2304)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !5136, file: !154, line: 406, baseType: !215, size: 8, offset: 2320)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "tag_alloc_policy", scope: !5136, file: !154, line: 409, baseType: !188, size: 32, offset: 2336)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "track_queue_depth", scope: !5136, file: !154, line: 414, baseType: !7, size: 1, offset: 2368, flags: DIFlagBitField, extraData: i64 2368)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "supported_mode", scope: !5136, file: !154, line: 419, baseType: !7, size: 2, offset: 2369, flags: DIFlagBitField, extraData: i64 2368)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !5136, file: !154, line: 424, baseType: !7, size: 1, offset: 2371, flags: DIFlagBitField, extraData: i64 2368)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "emulated", scope: !5136, file: !154, line: 429, baseType: !7, size: 1, offset: 2372, flags: DIFlagBitField, extraData: i64 2368)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "skip_settle_delay", scope: !5136, file: !154, line: 434, baseType: !7, size: 1, offset: 2373, flags: DIFlagBitField, extraData: i64 2368)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5136, file: !154, line: 437, baseType: !7, size: 1, offset: 2374, flags: DIFlagBitField, extraData: i64 2368)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !5136, file: !154, line: 440, baseType: !7, size: 1, offset: 2375, flags: DIFlagBitField, extraData: i64 2368)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !5136, file: !154, line: 445, baseType: !7, size: 32, offset: 2400)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "shost_attrs", scope: !5136, file: !154, line: 459, baseType: !5475, size: 64, offset: 2432)
!5475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5476, size: 64)
!5476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5477, size: 64)
!5477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !37, line: 99, size: 256, elements: !5478)
!5478 = !{!5479, !5480, !5484}
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5477, file: !37, line: 100, baseType: !436, size: 128)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5477, file: !37, line: 101, baseType: !5481, size: 64, offset: 128)
!5481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5482, size: 64)
!5482 = !DISubroutineType(types: !5483)
!5483 = !{!430, !341, !5476, !399}
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5477, file: !37, line: 103, baseType: !5485, size: 64, offset: 192)
!5485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5486, size: 64)
!5486 = !DISubroutineType(types: !5487)
!5487 = !{!430, !341, !5476, !284, !445}
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_attrs", scope: !5136, file: !154, line: 464, baseType: !5475, size: 64, offset: 2496)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_groups", scope: !5136, file: !154, line: 470, baseType: !451, size: 64, offset: 2560)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !5136, file: !154, line: 479, baseType: !242, size: 64, offset: 2624)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !5136, file: !154, line: 484, baseType: !7, size: 32, offset: 2688)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pool", scope: !5136, file: !154, line: 485, baseType: !5493, size: 64, offset: 2752)
!5493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5494, size: 64)
!5494 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_cmd_pool", file: !154, line: 19, flags: DIFlagFwdDecl)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend_delay", scope: !5136, file: !154, line: 488, baseType: !188, size: 32, offset: 2816)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "transportt", scope: !5122, file: !154, line: 549, baseType: !5497, size: 64, offset: 1088)
!5497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5498, size: 64)
!5498 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_transport_template", file: !154, line: 23, flags: DIFlagFwdDecl)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !5122, file: !154, line: 552, baseType: !2766, size: 2304, offset: 1152)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "host_blocked", scope: !5122, file: !154, line: 554, baseType: !914, size: 32, offset: 3456)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "host_failed", scope: !5122, file: !154, line: 556, baseType: !7, size: 32, offset: 3488)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "host_eh_scheduled", scope: !5122, file: !154, line: 558, baseType: !7, size: 32, offset: 3520)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "host_no", scope: !5122, file: !154, line: 560, baseType: !7, size: 32, offset: 3552)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "eh_deadline", scope: !5122, file: !154, line: 563, baseType: !188, size: 32, offset: 3584)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !5122, file: !154, line: 564, baseType: !195, size: 64, offset: 3648)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "max_channel", scope: !5122, file: !154, line: 573, baseType: !7, size: 32, offset: 3712)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "max_id", scope: !5122, file: !154, line: 574, baseType: !7, size: 32, offset: 3744)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "max_lun", scope: !5122, file: !154, line: 575, baseType: !242, size: 64, offset: 3776)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !5122, file: !154, line: 584, baseType: !7, size: 32, offset: 3840)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmd_len", scope: !5122, file: !154, line: 593, baseType: !220, size: 16, offset: 3872)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !5122, file: !154, line: 595, baseType: !188, size: 32, offset: 3904)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5122, file: !154, line: 596, baseType: !188, size: 32, offset: 3936)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !5122, file: !154, line: 597, baseType: !1379, size: 16, offset: 3968)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !5122, file: !154, line: 598, baseType: !220, size: 16, offset: 3984)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !5122, file: !154, line: 599, baseType: !220, size: 16, offset: 4000)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5122, file: !154, line: 600, baseType: !7, size: 32, offset: 4032)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5122, file: !154, line: 601, baseType: !7, size: 32, offset: 4064)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !5122, file: !154, line: 602, baseType: !195, size: 64, offset: 4096)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5122, file: !154, line: 603, baseType: !195, size: 64, offset: 4160)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !5122, file: !154, line: 612, baseType: !7, size: 32, offset: 4224)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "active_mode", scope: !5122, file: !154, line: 613, baseType: !7, size: 2, offset: 4256, flags: DIFlagBitField, extraData: i64 4256)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !5122, file: !154, line: 614, baseType: !7, size: 1, offset: 4258, flags: DIFlagBitField, extraData: i64 4256)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "host_self_blocked", scope: !5122, file: !154, line: 620, baseType: !7, size: 1, offset: 4259, flags: DIFlagBitField, extraData: i64 4256)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "reverse_ordering", scope: !5122, file: !154, line: 627, baseType: !7, size: 1, offset: 4260, flags: DIFlagBitField, extraData: i64 4256)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_in_progress", scope: !5122, file: !154, line: 630, baseType: !7, size: 1, offset: 4261, flags: DIFlagBitField, extraData: i64 4256)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "async_scan", scope: !5122, file: !154, line: 633, baseType: !7, size: 1, offset: 4262, flags: DIFlagBitField, extraData: i64 4256)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "eh_noresume", scope: !5122, file: !154, line: 636, baseType: !7, size: 1, offset: 4263, flags: DIFlagBitField, extraData: i64 4256)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5122, file: !154, line: 639, baseType: !7, size: 1, offset: 4264, flags: DIFlagBitField, extraData: i64 4256)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !5122, file: !154, line: 642, baseType: !7, size: 1, offset: 4265, flags: DIFlagBitField, extraData: i64 4256)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "short_inquiry", scope: !5122, file: !154, line: 645, baseType: !7, size: 1, offset: 4266, flags: DIFlagBitField, extraData: i64 4256)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "no_scsi2_lun_in_cdb", scope: !5122, file: !154, line: 648, baseType: !7, size: 1, offset: 4267, flags: DIFlagBitField, extraData: i64 4256)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "work_q_name", scope: !5122, file: !154, line: 653, baseType: !5533, size: 160, offset: 4272)
!5533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 160, elements: !3356)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "work_q", scope: !5122, file: !154, line: 654, baseType: !2177, size: 64, offset: 4480)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_work_q", scope: !5122, file: !154, line: 659, baseType: !2177, size: 64, offset: 4544)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !5122, file: !154, line: 664, baseType: !7, size: 32, offset: 4608)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "prot_capabilities", scope: !5122, file: !154, line: 667, baseType: !7, size: 32, offset: 4640)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "prot_guard_type", scope: !5122, file: !154, line: 668, baseType: !215, size: 8, offset: 4672)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5122, file: !154, line: 671, baseType: !195, size: 64, offset: 4736)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "io_port", scope: !5122, file: !154, line: 672, baseType: !195, size: 64, offset: 4800)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "n_io_port", scope: !5122, file: !154, line: 673, baseType: !215, size: 8, offset: 4864)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channel", scope: !5122, file: !154, line: 674, baseType: !215, size: 8, offset: 4872)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5122, file: !154, line: 675, baseType: !7, size: 32, offset: 4896)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "shost_state", scope: !5122, file: !154, line: 678, baseType: !153, size: 32, offset: 4928)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "shost_gendev", scope: !5122, file: !154, line: 681, baseType: !342, size: 5568, offset: 4992)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "shost_dev", scope: !5122, file: !154, line: 681, baseType: !342, size: 5568, offset: 10560)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "shost_data", scope: !5122, file: !154, line: 687, baseType: !197, size: 64, offset: 16128)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dev", scope: !5122, file: !154, line: 693, baseType: !341, size: 64, offset: 16192)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5122, file: !154, line: 700, baseType: !3483, align: 64, offset: 16256)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "mega_buffer", scope: !185, file: !184, line: 790, baseType: !5551, size: 64, offset: 1024)
!5551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "buf_dma_handle", scope: !185, file: !184, line: 791, baseType: !240, size: 64, offset: 1088)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "product_info", scope: !185, file: !184, line: 793, baseType: !5554, size: 8192, offset: 1152)
!5554 = !DIDerivedType(tag: DW_TAG_typedef, name: "mega_product_info", file: !184, line: 247, baseType: !5555)
!5555 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 222, size: 8192, elements: !5556)
!5556 = !{!5557, !5558, !5559, !5561, !5562, !5566, !5567, !5568, !5569, !5570, !5571, !5572, !5573, !5574, !5575}
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !5555, file: !184, line: 223, baseType: !190, size: 32)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "config_signature", scope: !5555, file: !184, line: 225, baseType: !190, size: 32, offset: 32)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !5555, file: !184, line: 231, baseType: !5560, size: 128, offset: 64)
!5560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 128, elements: !1905)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "bios_version", scope: !5555, file: !184, line: 232, baseType: !5560, size: 128, offset: 192)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "product_name", scope: !5555, file: !184, line: 233, baseType: !5563, size: 640, offset: 320)
!5563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 640, elements: !5564)
!5564 = !{!5565}
!5565 = !DISubrange(count: 80)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "max_commands", scope: !5555, file: !184, line: 235, baseType: !213, size: 8, offset: 960)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "nchannels", scope: !5555, file: !184, line: 236, baseType: !213, size: 8, offset: 968)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "fc_loop_present", scope: !5555, file: !184, line: 237, baseType: !213, size: 8, offset: 976)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "mem_type", scope: !5555, file: !184, line: 238, baseType: !213, size: 8, offset: 984)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !5555, file: !184, line: 240, baseType: !190, size: 32, offset: 992)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "dram_size", scope: !5555, file: !184, line: 241, baseType: !218, size: 16, offset: 1024)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "subsysid", scope: !5555, file: !184, line: 242, baseType: !218, size: 16, offset: 1040)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "subsysvid", scope: !5555, file: !184, line: 244, baseType: !218, size: 16, offset: 1056)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "notify_counters", scope: !5555, file: !184, line: 245, baseType: !213, size: 8, offset: 1072)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "pad1k", scope: !5555, file: !184, line: 246, baseType: !5576, size: 7112, offset: 1080)
!5576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 7112, elements: !5577)
!5577 = !{!5578}
!5578 = !DISubrange(count: 889)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmds", scope: !185, file: !184, line: 795, baseType: !213, size: 8, offset: 9344)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "scb_list", scope: !185, file: !184, line: 796, baseType: !5581, size: 64, offset: 9408)
!5581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5582, size: 64)
!5582 = !DIDerivedType(tag: DW_TAG_typedef, name: "scb_t", file: !184, line: 206, baseType: !5583)
!5583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 186, size: 1472, elements: !5584)
!5584 = !{!5585, !5586, !5587, !5588, !5592, !5593, !5594, !5595, !5596, !5597, !5604, !5611, !5612, !5638, !5639, !5665}
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !5583, file: !184, line: 187, baseType: !188, size: 32)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5583, file: !184, line: 188, baseType: !190, size: 32, offset: 32)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5583, file: !184, line: 189, baseType: !258, size: 128, offset: 64)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "raw_mbox", scope: !5583, file: !184, line: 190, baseType: !5589, size: 528, offset: 192)
!5589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 528, elements: !5590)
!5590 = !{!5591}
!5591 = !DISubrange(count: 66)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "dma_type", scope: !5583, file: !184, line: 191, baseType: !190, size: 32, offset: 736)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "dma_direction", scope: !5583, file: !184, line: 192, baseType: !190, size: 32, offset: 768)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5583, file: !184, line: 194, baseType: !5301, size: 64, offset: 832)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "dma_h_bulkdata", scope: !5583, file: !184, line: 195, baseType: !240, size: 64, offset: 896)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "dma_h_sgdata", scope: !5583, file: !184, line: 196, baseType: !240, size: 64, offset: 960)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !5583, file: !184, line: 198, baseType: !5598, size: 64, offset: 1024)
!5598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5599, size: 64)
!5599 = !DIDerivedType(tag: DW_TAG_typedef, name: "mega_sglist", file: !184, line: 182, baseType: !5600)
!5600 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 179, size: 64, elements: !5601)
!5601 = !{!5602, !5603}
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !5600, file: !184, line: 180, baseType: !190, size: 32)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5600, file: !184, line: 181, baseType: !190, size: 32, offset: 32)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "sgl64", scope: !5583, file: !184, line: 199, baseType: !5605, size: 64, offset: 1088)
!5605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5606, size: 64)
!5606 = !DIDerivedType(tag: DW_TAG_typedef, name: "mega_sgl64", file: !184, line: 177, baseType: !5607)
!5607 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 174, size: 96, elements: !5608)
!5608 = !{!5609, !5610}
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !5607, file: !184, line: 175, baseType: !242, size: 64)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5607, file: !184, line: 176, baseType: !190, size: 32, offset: 64)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "sgl_dma_addr", scope: !5583, file: !184, line: 200, baseType: !240, size: 64, offset: 1152)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "pthru", scope: !5583, file: !184, line: 202, baseType: !5613, size: 64, offset: 1216)
!5613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5614, size: 64)
!5614 = !DIDerivedType(tag: DW_TAG_typedef, name: "mega_passthru", file: !184, line: 144, baseType: !5615)
!5615 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 126, size: 480, elements: !5616)
!5616 = !{!5617, !5618, !5619, !5620, !5621, !5622, !5623, !5624, !5625, !5626, !5630, !5631, !5632, !5634, !5635, !5636, !5637}
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5615, file: !184, line: 127, baseType: !213, size: 3, flags: DIFlagBitField, extraData: i64 0)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "ars", scope: !5615, file: !184, line: 128, baseType: !213, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5615, file: !184, line: 129, baseType: !213, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "islogical", scope: !5615, file: !184, line: 130, baseType: !213, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "logdrv", scope: !5615, file: !184, line: 131, baseType: !213, size: 8, offset: 8)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5615, file: !184, line: 132, baseType: !213, size: 8, offset: 16)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !5615, file: !184, line: 133, baseType: !213, size: 8, offset: 24)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "queuetag", scope: !5615, file: !184, line: 134, baseType: !213, size: 8, offset: 32)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "queueaction", scope: !5615, file: !184, line: 135, baseType: !213, size: 8, offset: 40)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "cdb", scope: !5615, file: !184, line: 136, baseType: !5627, size: 80, offset: 48)
!5627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 80, elements: !5628)
!5628 = !{!5629}
!5629 = !DISubrange(count: 10)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "cdblen", scope: !5615, file: !184, line: 137, baseType: !213, size: 8, offset: 128)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "reqsenselen", scope: !5615, file: !184, line: 138, baseType: !213, size: 8, offset: 136)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "reqsensearea", scope: !5615, file: !184, line: 139, baseType: !5633, size: 256, offset: 144)
!5633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 256, elements: !2105)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "numsgelements", scope: !5615, file: !184, line: 140, baseType: !213, size: 8, offset: 400)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "scsistatus", scope: !5615, file: !184, line: 141, baseType: !213, size: 8, offset: 408)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "dataxferaddr", scope: !5615, file: !184, line: 142, baseType: !190, size: 32, offset: 416)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "dataxferlen", scope: !5615, file: !184, line: 143, baseType: !190, size: 32, offset: 448)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "pthru_dma_addr", scope: !5583, file: !184, line: 203, baseType: !240, size: 64, offset: 1280)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "epthru", scope: !5583, file: !184, line: 204, baseType: !5640, size: 64, offset: 1344)
!5640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5641, size: 64)
!5641 = !DIDerivedType(tag: DW_TAG_typedef, name: "mega_ext_passthru", file: !184, line: 172, baseType: !5642)
!5642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 150, size: 544, elements: !5643)
!5643 = !{!5644, !5645, !5646, !5647, !5648, !5649, !5650, !5651, !5652, !5653, !5654, !5655, !5656, !5657, !5658, !5659, !5660, !5661, !5662, !5663, !5664}
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5642, file: !184, line: 151, baseType: !213, size: 3, flags: DIFlagBitField, extraData: i64 0)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "ars", scope: !5642, file: !184, line: 152, baseType: !213, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !5642, file: !184, line: 153, baseType: !213, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "cd_rom", scope: !5642, file: !184, line: 154, baseType: !213, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !5642, file: !184, line: 155, baseType: !213, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "islogical", scope: !5642, file: !184, line: 156, baseType: !213, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "logdrv", scope: !5642, file: !184, line: 157, baseType: !213, size: 8, offset: 8)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5642, file: !184, line: 158, baseType: !213, size: 8, offset: 16)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !5642, file: !184, line: 159, baseType: !213, size: 8, offset: 24)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "queuetag", scope: !5642, file: !184, line: 160, baseType: !213, size: 8, offset: 32)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "queueaction", scope: !5642, file: !184, line: 161, baseType: !213, size: 8, offset: 40)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "cdblen", scope: !5642, file: !184, line: 162, baseType: !213, size: 8, offset: 48)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd3", scope: !5642, file: !184, line: 163, baseType: !213, size: 8, offset: 56)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "cdb", scope: !5642, file: !184, line: 164, baseType: !5560, size: 128, offset: 64)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "numsgelements", scope: !5642, file: !184, line: 165, baseType: !213, size: 8, offset: 192)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5642, file: !184, line: 166, baseType: !213, size: 8, offset: 200)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "reqsenselen", scope: !5642, file: !184, line: 167, baseType: !213, size: 8, offset: 208)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "reqsensearea", scope: !5642, file: !184, line: 168, baseType: !5633, size: 256, offset: 216)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd4", scope: !5642, file: !184, line: 169, baseType: !213, size: 8, offset: 472)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "dataxferaddr", scope: !5642, file: !184, line: 170, baseType: !190, size: 32, offset: 480)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "dataxferlen", scope: !5642, file: !184, line: 171, baseType: !190, size: 32, offset: 512)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "epthru_dma_addr", scope: !5583, file: !184, line: 205, baseType: !240, size: 64, offset: 1408)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "pend_cmds", scope: !185, file: !184, line: 798, baseType: !914, size: 32, offset: 9472)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "numldrv", scope: !185, file: !184, line: 811, baseType: !213, size: 8, offset: 9504)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !185, file: !184, line: 812, baseType: !5669, size: 56, offset: 9512)
!5669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 56, elements: !2441)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "bios_version", scope: !185, file: !184, line: 813, baseType: !5669, size: 56, offset: 9568)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "controller_proc_dir_entry", scope: !185, file: !184, line: 816, baseType: !326, size: 64, offset: 9664)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "has_64bit_addr", scope: !185, file: !184, line: 819, baseType: !188, size: 32, offset: 9728)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "support_ext_cdb", scope: !185, file: !184, line: 820, baseType: !188, size: 32, offset: 9760)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "boot_ldrv_enabled", scope: !185, file: !184, line: 821, baseType: !188, size: 32, offset: 9792)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "boot_ldrv", scope: !185, file: !184, line: 822, baseType: !188, size: 32, offset: 9824)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "boot_pdrv_enabled", scope: !185, file: !184, line: 823, baseType: !188, size: 32, offset: 9856)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "boot_pdrv_ch", scope: !185, file: !184, line: 824, baseType: !188, size: 32, offset: 9888)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "boot_pdrv_tgt", scope: !185, file: !184, line: 825, baseType: !188, size: 32, offset: 9920)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "support_random_del", scope: !185, file: !184, line: 828, baseType: !188, size: 32, offset: 9952)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "read_ldidmap", scope: !185, file: !184, line: 830, baseType: !188, size: 32, offset: 9984)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "quiescent", scope: !185, file: !184, line: 833, baseType: !914, size: 32, offset: 10016)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !185, file: !184, line: 837, baseType: !358, offset: 10048)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "logdrv_chan", scope: !185, file: !184, line: 839, baseType: !5684, size: 72, offset: 10048)
!5684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 72, elements: !4578)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "mega_ch_class", scope: !185, file: !184, line: 841, baseType: !188, size: 32, offset: 10144)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "sglen", scope: !185, file: !184, line: 843, baseType: !213, size: 8, offset: 10176)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "int_scb", scope: !185, file: !184, line: 845, baseType: !5582, size: 1472, offset: 10240)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "int_mtx", scope: !185, file: !184, line: 846, baseType: !840, size: 192, offset: 11712)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "int_status", scope: !185, file: !184, line: 848, baseType: !188, size: 32, offset: 11904)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "int_waitq", scope: !185, file: !184, line: 849, baseType: !1672, size: 192, offset: 11968)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "has_cluster", scope: !185, file: !184, line: 852, baseType: !188, size: 32, offset: 12160)
!5692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!5693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5694, size: 64)
!5694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5695)
!5695 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !261)
!5696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5695, size: 64)
!5697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!5698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5699, size: 64)
!5699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5370)
!5700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5701, size: 64)
!5701 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!5702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5362, size: 64)
!5703 = !DIDerivedType(tag: DW_TAG_typedef, name: "ulong", file: !241, line: 88, baseType: !195)
!5704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5705, size: 64)
!5705 = !DIDerivedType(tag: DW_TAG_typedef, name: "mega_inquiry3", file: !184, line: 325, baseType: !5706)
!5706 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 298, size: 8192, elements: !5707)
!5707 = !{!5708, !5709, !5747, !5751, !5752, !5753, !5754, !5755, !5756, !5757, !5759, !5761, !5765, !5767, !5768, !5772, !5774, !5775}
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !5706, file: !184, line: 299, baseType: !190, size: 32)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !5706, file: !184, line: 301, baseType: !5710, size: 320, offset: 32)
!5710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notify", file: !184, line: 249, size: 320, elements: !5711)
!5711 = !{!5712, !5713, !5714, !5715, !5716, !5717, !5719, !5720, !5721, !5722, !5723, !5724, !5725, !5726, !5727, !5728, !5729, !5730, !5731, !5732, !5733, !5734, !5735, !5736, !5737, !5738, !5739, !5740, !5741, !5742, !5743, !5744, !5745, !5746}
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "global_counter", scope: !5710, file: !184, line: 250, baseType: !190, size: 32)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "param_counter", scope: !5710, file: !184, line: 252, baseType: !213, size: 8, offset: 32)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "param_id", scope: !5710, file: !184, line: 253, baseType: !213, size: 8, offset: 40)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "param_val", scope: !5710, file: !184, line: 254, baseType: !218, size: 16, offset: 48)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "write_config_counter", scope: !5710, file: !184, line: 256, baseType: !213, size: 8, offset: 64)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "write_config_rsvd", scope: !5710, file: !184, line: 257, baseType: !5718, size: 24, offset: 72)
!5718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 24, elements: !400)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv_op_counter", scope: !5710, file: !184, line: 259, baseType: !213, size: 8, offset: 96)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv_opid", scope: !5710, file: !184, line: 260, baseType: !213, size: 8, offset: 104)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv_opcmd", scope: !5710, file: !184, line: 261, baseType: !213, size: 8, offset: 112)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv_opstatus", scope: !5710, file: !184, line: 262, baseType: !213, size: 8, offset: 120)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv_state_counter", scope: !5710, file: !184, line: 264, baseType: !213, size: 8, offset: 128)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv_state_id", scope: !5710, file: !184, line: 265, baseType: !213, size: 8, offset: 136)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv_state_new", scope: !5710, file: !184, line: 266, baseType: !213, size: 8, offset: 144)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv_state_old", scope: !5710, file: !184, line: 267, baseType: !213, size: 8, offset: 152)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "pdrv_state_counter", scope: !5710, file: !184, line: 269, baseType: !213, size: 8, offset: 160)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "pdrv_state_id", scope: !5710, file: !184, line: 270, baseType: !213, size: 8, offset: 168)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "pdrv_state_new", scope: !5710, file: !184, line: 271, baseType: !213, size: 8, offset: 176)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "pdrv_state_old", scope: !5710, file: !184, line: 272, baseType: !213, size: 8, offset: 184)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "pdrv_fmt_counter", scope: !5710, file: !184, line: 274, baseType: !213, size: 8, offset: 192)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "pdrv_fmt_id", scope: !5710, file: !184, line: 275, baseType: !213, size: 8, offset: 200)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "pdrv_fmt_val", scope: !5710, file: !184, line: 276, baseType: !213, size: 8, offset: 208)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "pdrv_fmt_rsvd", scope: !5710, file: !184, line: 277, baseType: !213, size: 8, offset: 216)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "targ_xfer_counter", scope: !5710, file: !184, line: 279, baseType: !213, size: 8, offset: 224)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "targ_xfer_id", scope: !5710, file: !184, line: 280, baseType: !213, size: 8, offset: 232)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "targ_xfer_val", scope: !5710, file: !184, line: 281, baseType: !213, size: 8, offset: 240)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "targ_xfer_rsvd", scope: !5710, file: !184, line: 282, baseType: !213, size: 8, offset: 248)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "fcloop_id_chg_counter", scope: !5710, file: !184, line: 284, baseType: !213, size: 8, offset: 256)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "fcloopid_pdrvid", scope: !5710, file: !184, line: 285, baseType: !213, size: 8, offset: 264)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "fcloop_id0", scope: !5710, file: !184, line: 286, baseType: !213, size: 8, offset: 272)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "fcloop_id1", scope: !5710, file: !184, line: 287, baseType: !213, size: 8, offset: 280)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "fcloop_state_counter", scope: !5710, file: !184, line: 289, baseType: !213, size: 8, offset: 288)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "fcloop_state0", scope: !5710, file: !184, line: 290, baseType: !213, size: 8, offset: 296)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "fcloop_state1", scope: !5710, file: !184, line: 291, baseType: !213, size: 8, offset: 304)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "fcloop_state_rsvd", scope: !5710, file: !184, line: 292, baseType: !213, size: 8, offset: 312)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "notify_rsvd", scope: !5706, file: !184, line: 303, baseType: !5748, size: 704, offset: 352)
!5748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 704, elements: !5749)
!5749 = !{!5750}
!5750 = !DISubrange(count: 88)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "rebuild_rate", scope: !5706, file: !184, line: 305, baseType: !213, size: 8, offset: 1056)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "cache_flush_interval", scope: !5706, file: !184, line: 306, baseType: !213, size: 8, offset: 1064)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "sense_alert", scope: !5706, file: !184, line: 307, baseType: !213, size: 8, offset: 1072)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "drive_insert_count", scope: !5706, file: !184, line: 308, baseType: !213, size: 8, offset: 1080)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "battery_status", scope: !5706, file: !184, line: 310, baseType: !213, size: 8, offset: 1088)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "num_ldrv", scope: !5706, file: !184, line: 311, baseType: !213, size: 8, offset: 1096)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "recon_state", scope: !5706, file: !184, line: 312, baseType: !5758, size: 40, offset: 1104)
!5758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 40, elements: !3042)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv_op_status", scope: !5706, file: !184, line: 314, baseType: !5760, size: 80, offset: 1144)
!5760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !218, size: 80, elements: !3042)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv_size", scope: !5706, file: !184, line: 317, baseType: !5762, size: 1280, offset: 1224)
!5762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 1280, elements: !5763)
!5763 = !{!5764}
!5764 = !DISubrange(count: 40)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv_prop", scope: !5706, file: !184, line: 318, baseType: !5766, size: 320, offset: 2504)
!5766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 320, elements: !5763)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv_state", scope: !5706, file: !184, line: 319, baseType: !5766, size: 320, offset: 2824)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "pdrv_state", scope: !5706, file: !184, line: 320, baseType: !5769, size: 2048, offset: 3144)
!5769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 2048, elements: !5770)
!5770 = !{!5771}
!5771 = !DISubrange(count: 256)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "pdrv_format", scope: !5706, file: !184, line: 321, baseType: !5773, size: 256, offset: 5192)
!5773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !218, size: 256, elements: !1905)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "targ_xfer", scope: !5706, file: !184, line: 323, baseType: !5563, size: 640, offset: 5448)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "pad1k", scope: !5706, file: !184, line: 324, baseType: !5776, size: 2104, offset: 6088)
!5776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 2104, elements: !5777)
!5777 = !{!5778}
!5778 = !DISubrange(count: 263)
!5779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5554, size: 64)
!5780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5781, size: 64)
!5781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "private_bios_data", file: !184, line: 632, size: 128, elements: !5782)
!5782 = !{!5783, !5784, !5785, !5786, !5788}
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !5781, file: !184, line: 633, baseType: !213, size: 4, flags: DIFlagBitField, extraData: i64 0)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !5781, file: !184, line: 640, baseType: !213, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "boot_drv", scope: !5781, file: !184, line: 641, baseType: !213, size: 8, offset: 8)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd", scope: !5781, file: !184, line: 646, baseType: !5787, size: 96, offset: 16)
!5787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 96, elements: !3389)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "cksum", scope: !5781, file: !184, line: 647, baseType: !218, size: 16, offset: 112)
!5789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5370, size: 64)
!5790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5791, size: 64)
!5791 = !DIDerivedType(tag: DW_TAG_typedef, name: "mraid_ext_inquiry", file: !184, line: 392, baseType: !5792)
!5792 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 386, size: 1328, elements: !5793)
!5793 = !{!5794, !5840, !5841, !5842, !5843}
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "raid_inq", scope: !5792, file: !184, line: 387, baseType: !5795, size: 1216)
!5795 = !DIDerivedType(tag: DW_TAG_typedef, name: "mraid_inquiry", file: !184, line: 382, baseType: !5796)
!5796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 378, size: 1216, elements: !5797)
!5797 = !{!5798, !5820, !5831}
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "adapter_info", scope: !5796, file: !184, line: 379, baseType: !5799, size: 192)
!5799 = !DIDerivedType(tag: DW_TAG_typedef, name: "mega_adp_info", file: !184, line: 361, baseType: !5800)
!5800 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 329, size: 192, elements: !5801)
!5801 = !{!5802, !5803, !5804, !5805, !5806, !5808, !5809, !5810, !5811, !5812, !5813, !5814, !5815, !5816, !5817, !5818, !5819}
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "max_commands", scope: !5800, file: !184, line: 330, baseType: !213, size: 8)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "rebuild_rate", scope: !5800, file: !184, line: 331, baseType: !213, size: 8, offset: 8)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "max_targ_per_chan", scope: !5800, file: !184, line: 332, baseType: !213, size: 8, offset: 16)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "nchannels", scope: !5800, file: !184, line: 333, baseType: !213, size: 8, offset: 24)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !5800, file: !184, line: 334, baseType: !5807, size: 32, offset: 32)
!5807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 32, elements: !292)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "age_of_flash", scope: !5800, file: !184, line: 335, baseType: !218, size: 16, offset: 64)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "chip_set_value", scope: !5800, file: !184, line: 336, baseType: !213, size: 8, offset: 80)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "dram_size", scope: !5800, file: !184, line: 337, baseType: !213, size: 8, offset: 88)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "cache_flush_interval", scope: !5800, file: !184, line: 338, baseType: !213, size: 8, offset: 96)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "bios_version", scope: !5800, file: !184, line: 339, baseType: !5807, size: 32, offset: 104)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "board_type", scope: !5800, file: !184, line: 340, baseType: !213, size: 8, offset: 136)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "sense_alert", scope: !5800, file: !184, line: 341, baseType: !213, size: 8, offset: 144)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "write_config_count", scope: !5800, file: !184, line: 342, baseType: !213, size: 8, offset: 152)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "drive_inserted_count", scope: !5800, file: !184, line: 344, baseType: !213, size: 8, offset: 160)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "inserted_drive", scope: !5800, file: !184, line: 346, baseType: !213, size: 8, offset: 168)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "battery_status", scope: !5800, file: !184, line: 347, baseType: !213, size: 8, offset: 176)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "dec_fault_bus_info", scope: !5800, file: !184, line: 360, baseType: !213, size: 8, offset: 184)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "logdrv_info", scope: !5796, file: !184, line: 380, baseType: !5821, size: 416, offset: 192)
!5821 = !DIDerivedType(tag: DW_TAG_typedef, name: "mega_ldrv_info", file: !184, line: 370, baseType: !5822)
!5822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 364, size: 416, elements: !5823)
!5823 = !{!5824, !5825, !5826, !5828, !5830}
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "num_ldrv", scope: !5822, file: !184, line: 365, baseType: !213, size: 8)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd", scope: !5822, file: !184, line: 366, baseType: !5718, size: 24, offset: 8)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv_size", scope: !5822, file: !184, line: 367, baseType: !5827, size: 256, offset: 32)
!5827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 256, elements: !1504)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv_prop", scope: !5822, file: !184, line: 368, baseType: !5829, size: 64, offset: 288)
!5829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 64, elements: !1504)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv_state", scope: !5822, file: !184, line: 369, baseType: !5829, size: 64, offset: 352)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "pdrv_info", scope: !5796, file: !184, line: 381, baseType: !5832, size: 608, offset: 608)
!5832 = !DIDerivedType(tag: DW_TAG_typedef, name: "mega_pdrv_info", file: !184, line: 375, baseType: !5833)
!5833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 372, size: 608, elements: !5834)
!5834 = !{!5835, !5839}
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "pdrv_state", scope: !5833, file: !184, line: 373, baseType: !5836, size: 600)
!5836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 600, elements: !5837)
!5837 = !{!5838}
!5838 = !DISubrange(count: 75)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd", scope: !5833, file: !184, line: 374, baseType: !213, size: 8, offset: 600)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "phys_drv_format", scope: !5792, file: !184, line: 388, baseType: !5760, size: 80, offset: 1216)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "stack_attn", scope: !5792, file: !184, line: 389, baseType: !213, size: 8, offset: 1296)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "modem_status", scope: !5792, file: !184, line: 390, baseType: !213, size: 8, offset: 1304)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd", scope: !5792, file: !184, line: 391, baseType: !5844, size: 16, offset: 1312)
!5844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 16, elements: !1739)
!5845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5846, size: 64)
!5846 = !DIDerivedType(tag: DW_TAG_typedef, name: "disk_array_40ld", file: !184, line: 448, baseType: !5847)
!5847 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 443, size: 191712, elements: !5848)
!5848 = !{!5849, !5850, !5851, !5882}
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "nlog_drives", scope: !5847, file: !184, line: 444, baseType: !213, size: 8)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "resvd", scope: !5847, file: !184, line: 445, baseType: !5718, size: 24, offset: 8)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv", scope: !5847, file: !184, line: 446, baseType: !5852, size: 186880, offset: 32)
!5852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5853, size: 186880, elements: !5763)
!5853 = !DIDerivedType(tag: DW_TAG_typedef, name: "logdrv_40ld", file: !184, line: 427, baseType: !5854)
!5854 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 424, size: 4672, elements: !5855)
!5855 = !{!5856, !5868}
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "lparam", scope: !5854, file: !184, line: 425, baseType: !5857, size: 64)
!5857 = !DIDerivedType(tag: DW_TAG_typedef, name: "logdrv_param", file: !184, line: 422, baseType: !5858)
!5858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 412, size: 64, elements: !5859)
!5859 = !{!5860, !5861, !5862, !5863, !5864, !5865, !5866, !5867}
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "span_depth", scope: !5858, file: !184, line: 413, baseType: !213, size: 8)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !5858, file: !184, line: 414, baseType: !213, size: 8, offset: 8)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "read_ahead", scope: !5858, file: !184, line: 415, baseType: !213, size: 8, offset: 16)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "stripe_sz", scope: !5858, file: !184, line: 417, baseType: !213, size: 8, offset: 24)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5858, file: !184, line: 418, baseType: !213, size: 8, offset: 32)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "write_mode", scope: !5858, file: !184, line: 419, baseType: !213, size: 8, offset: 40)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "direct_io", scope: !5858, file: !184, line: 420, baseType: !213, size: 8, offset: 48)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "row_size", scope: !5858, file: !184, line: 421, baseType: !213, size: 8, offset: 56)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "span", scope: !5854, file: !184, line: 426, baseType: !5869, size: 4608, offset: 64)
!5869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5870, size: 4608, elements: !1504)
!5870 = !DIDerivedType(tag: DW_TAG_typedef, name: "adp_span_40ld", file: !184, line: 404, baseType: !5871)
!5871 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 400, size: 576, elements: !5872)
!5872 = !{!5873, !5874, !5875}
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "start_blk", scope: !5871, file: !184, line: 401, baseType: !190, size: 32)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "num_blks", scope: !5871, file: !184, line: 402, baseType: !190, size: 32, offset: 32)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5871, file: !184, line: 403, baseType: !5876, size: 512, offset: 64)
!5876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5877, size: 512, elements: !2105)
!5877 = !DIDerivedType(tag: DW_TAG_typedef, name: "adp_device", file: !184, line: 398, baseType: !5878)
!5878 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 395, size: 16, elements: !5879)
!5879 = !{!5880, !5881}
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5878, file: !184, line: 396, baseType: !213, size: 8)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !5878, file: !184, line: 397, baseType: !213, size: 8, offset: 8)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "pdrv", scope: !5847, file: !184, line: 447, baseType: !5883, size: 4800, offset: 186912)
!5883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5884, size: 4800, elements: !5837)
!5884 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_drv", file: !184, line: 441, baseType: !5885)
!5885 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 434, size: 64, elements: !5886)
!5886 = !{!5887, !5888, !5889, !5890, !5891}
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5885, file: !184, line: 435, baseType: !213, size: 8)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "cur_status", scope: !5885, file: !184, line: 436, baseType: !213, size: 8, offset: 8)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "tag_depth", scope: !5885, file: !184, line: 437, baseType: !213, size: 8, offset: 16)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "sync_neg", scope: !5885, file: !184, line: 438, baseType: !213, size: 8, offset: 24)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5885, file: !184, line: 439, baseType: !190, size: 32, offset: 32)
!5892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5893, size: 64)
!5893 = !DIDerivedType(tag: DW_TAG_typedef, name: "disk_array_8ld", file: !184, line: 455, baseType: !5894)
!5894 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 450, size: 17632, elements: !5895)
!5895 = !{!5896, !5897, !5898, !5913}
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "nlog_drives", scope: !5894, file: !184, line: 451, baseType: !213, size: 8)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "resvd", scope: !5894, file: !184, line: 452, baseType: !5718, size: 24, offset: 8)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "ldrv", scope: !5894, file: !184, line: 453, baseType: !5899, size: 12800, offset: 32)
!5899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5900, size: 12800, elements: !1504)
!5900 = !DIDerivedType(tag: DW_TAG_typedef, name: "logdrv_8ld", file: !184, line: 432, baseType: !5901)
!5901 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 429, size: 1600, elements: !5902)
!5902 = !{!5903, !5904}
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "lparam", scope: !5901, file: !184, line: 430, baseType: !5857, size: 64)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "span", scope: !5901, file: !184, line: 431, baseType: !5905, size: 1536, offset: 64)
!5905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5906, size: 1536, elements: !1504)
!5906 = !DIDerivedType(tag: DW_TAG_typedef, name: "adp_span_8ld", file: !184, line: 410, baseType: !5907)
!5907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 406, size: 192, elements: !5908)
!5908 = !{!5909, !5910, !5911}
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "start_blk", scope: !5907, file: !184, line: 407, baseType: !190, size: 32)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "num_blks", scope: !5907, file: !184, line: 408, baseType: !190, size: 32, offset: 32)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5907, file: !184, line: 409, baseType: !5912, size: 128, offset: 64)
!5912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5877, size: 128, elements: !1504)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "pdrv", scope: !5894, file: !184, line: 454, baseType: !5883, size: 4800, offset: 12832)
!5914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5915, size: 64)
!5915 = !DIDerivedType(tag: DW_TAG_typedef, name: "megacmd_t", file: !184, line: 535, baseType: !5916)
!5916 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 524, size: 144, elements: !5917)
!5917 = !{!5918, !5919, !5920, !5921, !5922, !5923, !5924, !5925, !5926, !5927}
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5916, file: !184, line: 525, baseType: !213, size: 8)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "cmdid", scope: !5916, file: !184, line: 526, baseType: !213, size: 8, offset: 8)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !5916, file: !184, line: 527, baseType: !213, size: 8, offset: 16)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "subopcode", scope: !5916, file: !184, line: 528, baseType: !213, size: 8, offset: 24)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "lba", scope: !5916, file: !184, line: 529, baseType: !190, size: 32, offset: 32)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "xferaddr", scope: !5916, file: !184, line: 530, baseType: !190, size: 32, offset: 64)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "logdrv", scope: !5916, file: !184, line: 531, baseType: !213, size: 8, offset: 96)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd", scope: !5916, file: !184, line: 532, baseType: !5718, size: 24, offset: 104)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "numstatus", scope: !5916, file: !184, line: 533, baseType: !213, size: 8, offset: 128)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5916, file: !184, line: 534, baseType: !213, size: 8, offset: 136)
!5928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5613, size: 64)
!5929 = !{!0, !5930, !5935, !5940, !5945, !5948, !5993, !6045, !6050, !6055, !6057, !6060, !6065, !6067, !6069, !6074, !6080, !6082, !6087, !6089, !6091, !6096, !6098, !6103, !6105, !6107, !6109, !6111, !6114, !6117, !6119, !6121, !6123, !6129, !6136, !6139, !6154, !6159, !6161, !6163, !6165}
!5930 = !DIGlobalVariableExpression(var: !5931, expr: !DIExpression())
!5931 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description297", scope: !2, file: !3, line: 57, type: !5932, isLocal: true, isDefinition: true, align: 8)
!5932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 432, elements: !5933)
!5933 = !{!5934}
!5934 = !DISubrange(count: 54)
!5935 = !DIGlobalVariableExpression(var: !5936, expr: !DIExpression())
!5936 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file298", scope: !2, file: !3, line: 58, type: !5937, isLocal: true, isDefinition: true, align: 8)
!5937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 288, elements: !5938)
!5938 = !{!5939}
!5939 = !DISubrange(count: 36)
!5940 = !DIGlobalVariableExpression(var: !5941, expr: !DIExpression())
!5941 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license299", scope: !2, file: !3, line: 58, type: !5942, isLocal: true, isDefinition: true, align: 8)
!5942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 168, elements: !5943)
!5943 = !{!5944}
!5944 = !DISubrange(count: 21)
!5945 = !DIGlobalVariableExpression(var: !5946, expr: !DIExpression())
!5946 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_version300", scope: !2, file: !3, line: 59, type: !5947, isLocal: true, isDefinition: true, align: 8)
!5947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 192, elements: !2361)
!5948 = !DIGlobalVariableExpression(var: !5949, expr: !DIExpression())
!5949 = distinct !DIGlobalVariable(name: "__modver_attr", scope: !2, file: !3, line: 59, type: !5950, isLocal: true, isDefinition: true)
!5950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5951)
!5951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5952, size: 64)
!5952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5953)
!5953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_version_attribute", file: !5954, line: 65, size: 576, align: 64, elements: !5955)
!5954 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!5955 = !{!5956, !5991, !5992}
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "mattr", scope: !5953, file: !5954, line: 66, baseType: !5957, size: 448)
!5957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_attribute", file: !5954, line: 54, size: 448, elements: !5958)
!5958 = !{!5959, !5960, !5975, !5979, !5983, !5987}
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5957, file: !5954, line: 55, baseType: !436, size: 128)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5957, file: !5954, line: 56, baseType: !5961, size: 64, offset: 128)
!5961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5962, size: 64)
!5962 = !DISubroutineType(types: !5963)
!5963 = !{!430, !5964, !5965, !399}
!5964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5957, size: 64)
!5965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5966, size: 64)
!5966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !5954, line: 46, size: 768, elements: !5967)
!5967 = !{!5968, !5969, !5970, !5971, !5974}
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5966, file: !5954, line: 47, baseType: !345, size: 512)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !5966, file: !5954, line: 48, baseType: !747, size: 64, offset: 512)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_dir", scope: !5966, file: !5954, line: 49, baseType: !351, size: 64, offset: 576)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "mp", scope: !5966, file: !5954, line: 50, baseType: !5972, size: 64, offset: 640)
!5972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5973, size: 64)
!5973 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_param_attrs", file: !5954, line: 50, flags: DIFlagFwdDecl)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "kobj_completion", scope: !5966, file: !5954, line: 51, baseType: !1671, size: 64, offset: 704)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5957, file: !5954, line: 58, baseType: !5976, size: 64, offset: 192)
!5976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5977, size: 64)
!5977 = !DISubroutineType(types: !5978)
!5978 = !{!430, !5964, !5965, !284, !445}
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !5957, file: !5954, line: 60, baseType: !5980, size: 64, offset: 256)
!5980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5981, size: 64)
!5981 = !DISubroutineType(types: !5982)
!5982 = !{null, !747, !284}
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !5957, file: !5954, line: 61, baseType: !5984, size: 64, offset: 320)
!5984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5985, size: 64)
!5985 = !DISubroutineType(types: !5986)
!5986 = !{!188, !747}
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5957, file: !5954, line: 62, baseType: !5988, size: 64, offset: 384)
!5988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5989, size: 64)
!5989 = !DISubroutineType(types: !5990)
!5990 = !{null, !747}
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !5953, file: !5954, line: 67, baseType: !284, size: 64, offset: 448)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5953, file: !5954, line: 68, baseType: !284, size: 64, offset: 512)
!5993 = !DIGlobalVariableExpression(var: !5994, expr: !DIExpression())
!5994 = distinct !DIGlobalVariable(name: "__param_max_cmd_per_lun", scope: !2, file: !3, line: 63, type: !5995, isLocal: true, isDefinition: true, align: 64)
!5995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5996)
!5996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !5997, line: 69, size: 320, elements: !5998)
!5997 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!5998 = !{!5999, !6000, !6001, !6017, !6019, !6023, !6024}
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5996, file: !5997, line: 70, baseType: !284, size: 64)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !5996, file: !5997, line: 71, baseType: !747, size: 64, offset: 64)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5996, file: !5997, line: 72, baseType: !6002, size: 64, offset: 128)
!6002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6003, size: 64)
!6003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6004)
!6004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !5997, line: 47, size: 256, elements: !6005)
!6005 = !{!6006, !6007, !6012, !6016}
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6004, file: !5997, line: 49, baseType: !7, size: 32)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !6004, file: !5997, line: 51, baseType: !6008, size: 64, offset: 64)
!6008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6009, size: 64)
!6009 = !DISubroutineType(types: !6010)
!6010 = !{!188, !284, !6011}
!6011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5995, size: 64)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6004, file: !5997, line: 53, baseType: !6013, size: 64, offset: 128)
!6013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6014, size: 64)
!6014 = !DISubroutineType(types: !6015)
!6015 = !{!188, !399, !6011}
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !6004, file: !5997, line: 55, baseType: !583, size: 64, offset: 192)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !5996, file: !5997, line: 73, baseType: !6018, size: 16, offset: 192)
!6018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !218)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !5996, file: !5997, line: 74, baseType: !6020, size: 8, offset: 208)
!6020 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !191, line: 16, baseType: !6021)
!6021 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !193, line: 20, baseType: !6022)
!6022 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5996, file: !5997, line: 75, baseType: !213, size: 8, offset: 216)
!6024 = !DIDerivedType(tag: DW_TAG_member, scope: !5996, file: !5997, line: 76, baseType: !6025, size: 64, offset: 256)
!6025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5996, file: !5997, line: 76, size: 64, elements: !6026)
!6026 = !{!6027, !6028, !6035}
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6025, file: !5997, line: 77, baseType: !197, size: 64)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !6025, file: !5997, line: 78, baseType: !6029, size: 64)
!6029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6030, size: 64)
!6030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6031)
!6031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !5997, line: 86, size: 128, elements: !6032)
!6032 = !{!6033, !6034}
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !6031, file: !5997, line: 87, baseType: !7, size: 32)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !6031, file: !5997, line: 88, baseType: !399, size: 64, offset: 64)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !6025, file: !5997, line: 79, baseType: !6036, size: 64)
!6036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6037, size: 64)
!6037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6038)
!6038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !5997, line: 92, size: 256, elements: !6039)
!6039 = !{!6040, !6041, !6042, !6043, !6044}
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !6038, file: !5997, line: 94, baseType: !7, size: 32)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !6038, file: !5997, line: 95, baseType: !7, size: 32, offset: 32)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !6038, file: !5997, line: 96, baseType: !2773, size: 64, offset: 64)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6038, file: !5997, line: 97, baseType: !6002, size: 64, offset: 128)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !6038, file: !5997, line: 98, baseType: !197, size: 64, offset: 192)
!6045 = !DIGlobalVariableExpression(var: !6046, expr: !DIExpression())
!6046 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_cmd_per_luntype301", scope: !2, file: !3, line: 63, type: !6047, isLocal: true, isDefinition: true, align: 8)
!6047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 312, elements: !6048)
!6048 = !{!6049}
!6049 = !DISubrange(count: 39)
!6050 = !DIGlobalVariableExpression(var: !6051, expr: !DIExpression())
!6051 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_cmd_per_lun302", scope: !2, file: !3, line: 64, type: !6052, isLocal: true, isDefinition: true, align: 8)
!6052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 976, elements: !6053)
!6053 = !{!6054}
!6054 = !DISubrange(count: 122)
!6055 = !DIGlobalVariableExpression(var: !6056, expr: !DIExpression())
!6056 = distinct !DIGlobalVariable(name: "__param_max_sectors_per_io", scope: !2, file: !3, line: 67, type: !5995, isLocal: true, isDefinition: true, align: 64)
!6057 = !DIGlobalVariableExpression(var: !6058, expr: !DIExpression())
!6058 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_sectors_per_iotype303", scope: !2, file: !3, line: 67, type: !6059, isLocal: true, isDefinition: true, align: 8)
!6059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 352, elements: !1329)
!6060 = !DIGlobalVariableExpression(var: !6061, expr: !DIExpression())
!6061 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_sectors_per_io304", scope: !2, file: !3, line: 68, type: !6062, isLocal: true, isDefinition: true, align: 8)
!6062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 864, elements: !6063)
!6063 = !{!6064}
!6064 = !DISubrange(count: 108)
!6065 = !DIGlobalVariableExpression(var: !6066, expr: !DIExpression())
!6066 = distinct !DIGlobalVariable(name: "__param_max_mbox_busy_wait", scope: !2, file: !3, line: 72, type: !5995, isLocal: true, isDefinition: true, align: 64)
!6067 = !DIGlobalVariableExpression(var: !6068, expr: !DIExpression())
!6068 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_mbox_busy_waittype305", scope: !2, file: !3, line: 72, type: !6059, isLocal: true, isDefinition: true, align: 8)
!6069 = !DIGlobalVariableExpression(var: !6070, expr: !DIExpression())
!6070 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_mbox_busy_wait306", scope: !2, file: !3, line: 73, type: !6071, isLocal: true, isDefinition: true, align: 8)
!6071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 880, elements: !6072)
!6072 = !{!6073}
!6073 = !DISubrange(count: 110)
!6074 = !DIGlobalVariableExpression(var: !6075, expr: !DIExpression())
!6075 = distinct !DIGlobalVariable(name: "buffer", scope: !6076, file: !3, line: 1854, type: !6077, isLocal: true, isDefinition: true)
!6076 = distinct !DISubprogram(name: "megaraid_info", scope: !3, file: !3, line: 1852, type: !5142, scopeLine: 1853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 4096, elements: !6078)
!6078 = !{!6079}
!6079 = !DISubrange(count: 512)
!6080 = !DIGlobalVariableExpression(var: !6081, expr: !DIExpression())
!6081 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_megaraid_init314", scope: !2, file: !3, line: 4659, type: !197, isLocal: true, isDefinition: true)
!6082 = !DIGlobalVariableExpression(var: !6083, expr: !DIExpression())
!6083 = distinct !DIGlobalVariable(name: "__exitcall_megaraid_exit", scope: !2, file: !3, line: 4660, type: !6084, isLocal: true, isDefinition: true)
!6084 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !6085, line: 117, baseType: !6086)
!6085 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!6086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!6087 = !DIGlobalVariableExpression(var: !6088, expr: !DIExpression())
!6088 = distinct !DIGlobalVariable(name: "major", scope: !2, file: !3, line: 115, type: !188, isLocal: true, isDefinition: true)
!6089 = !DIGlobalVariableExpression(var: !6090, expr: !DIExpression())
!6090 = distinct !DIGlobalVariable(name: "___modver_attr", scope: !2, file: !3, line: 59, type: !5953, isLocal: true, isDefinition: true)
!6091 = !DIGlobalVariableExpression(var: !6092, expr: !DIExpression())
!6092 = distinct !DIGlobalVariable(name: "__param_str_max_cmd_per_lun", scope: !2, file: !3, line: 63, type: !6093, isLocal: true, isDefinition: true)
!6093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 200, elements: !6094)
!6094 = !{!6095}
!6095 = !DISubrange(count: 25)
!6096 = !DIGlobalVariableExpression(var: !6097, expr: !DIExpression())
!6097 = distinct !DIGlobalVariable(name: "max_cmd_per_lun", scope: !2, file: !3, line: 62, type: !7, isLocal: true, isDefinition: true)
!6098 = !DIGlobalVariableExpression(var: !6099, expr: !DIExpression())
!6099 = distinct !DIGlobalVariable(name: "__param_str_max_sectors_per_io", scope: !2, file: !3, line: 67, type: !6100, isLocal: true, isDefinition: true)
!6100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 224, elements: !6101)
!6101 = !{!6102}
!6102 = !DISubrange(count: 28)
!6103 = !DIGlobalVariableExpression(var: !6104, expr: !DIExpression())
!6104 = distinct !DIGlobalVariable(name: "max_sectors_per_io", scope: !2, file: !3, line: 66, type: !220, isLocal: true, isDefinition: true)
!6105 = !DIGlobalVariableExpression(var: !6106, expr: !DIExpression())
!6106 = distinct !DIGlobalVariable(name: "__param_str_max_mbox_busy_wait", scope: !2, file: !3, line: 72, type: !6100, isLocal: true, isDefinition: true)
!6107 = !DIGlobalVariableExpression(var: !6108, expr: !DIExpression())
!6108 = distinct !DIGlobalVariable(name: "max_mbox_busy_wait", scope: !2, file: !3, line: 71, type: !220, isLocal: true, isDefinition: true)
!6109 = !DIGlobalVariableExpression(var: !6110, expr: !DIExpression())
!6110 = distinct !DIGlobalVariable(name: "megaraid_pci_driver", scope: !2, file: !3, line: 4598, type: !4951, isLocal: true, isDefinition: true)
!6111 = !DIGlobalVariableExpression(var: !6112, expr: !DIExpression())
!6112 = distinct !DIGlobalVariable(name: "megaraid_pci_tbl", scope: !2, file: !3, line: 4587, type: !6113, isLocal: true, isDefinition: true)
!6113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4958, size: 1024, elements: !292)
!6114 = !DIGlobalVariableExpression(var: !6115, expr: !DIExpression())
!6115 = distinct !DIGlobalVariable(name: "__key", scope: !6116, file: !3, line: 4449, type: !762, isLocal: true, isDefinition: true)
!6116 = distinct !DISubprogram(name: "megaraid_probe_one", scope: !3, file: !3, line: 4151, type: !4969, scopeLine: 4152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6117 = !DIGlobalVariableExpression(var: !6118, expr: !DIExpression())
!6118 = distinct !DIGlobalVariable(name: "hba_count", scope: !2, file: !3, line: 84, type: !188, isLocal: true, isDefinition: true)
!6119 = !DIGlobalVariableExpression(var: !6120, expr: !DIExpression())
!6120 = distinct !DIGlobalVariable(name: "megaraid_template", scope: !2, file: !3, line: 4131, type: !5136, isLocal: true, isDefinition: true)
!6121 = !DIGlobalVariableExpression(var: !6122, expr: !DIExpression())
!6122 = distinct !DIGlobalVariable(name: "trace_level", scope: !2, file: !3, line: 123, type: !188, isLocal: true, isDefinition: true)
!6123 = !DIGlobalVariableExpression(var: !6124, expr: !DIExpression())
!6124 = distinct !DIGlobalVariable(name: "__warned", scope: !6125, file: !6126, line: 275, type: !605, isLocal: true, isDefinition: true)
!6125 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !6126, file: !6126, line: 271, type: !6127, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6126 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!6127 = !DISubroutineType(types: !6128)
!6128 = !{!240, !341, !197, !445, !146, !195}
!6129 = !DIGlobalVariableExpression(var: !6130, expr: !DIExpression())
!6130 = distinct !DIGlobalVariable(name: "mega_hbas", scope: !2, file: !3, line: 89, type: !6131, isLocal: true, isDefinition: true)
!6131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6132, size: 4096, elements: !2105)
!6132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mega_hbas", file: !184, line: 856, size: 128, elements: !6133)
!6133 = !{!6134, !6135}
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "is_bios_enabled", scope: !6132, file: !184, line: 857, baseType: !188, size: 32)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata_addr", scope: !6132, file: !184, line: 858, baseType: !182, size: 64, offset: 64)
!6136 = !DIGlobalVariableExpression(var: !6137, expr: !DIExpression())
!6137 = distinct !DIGlobalVariable(name: "hba_soft_state", scope: !2, file: !3, line: 85, type: !6138, isLocal: true, isDefinition: true)
!6138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 2048, elements: !2105)
!6139 = !DIGlobalVariableExpression(var: !6140, expr: !DIExpression())
!6140 = distinct !DIGlobalVariable(name: "mcontroller", scope: !2, file: !3, line: 109, type: !6141, isLocal: true, isDefinition: true)
!6141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6142, size: 8192, elements: !2105)
!6142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mcontroller", file: !184, line: 508, size: 256, elements: !6143)
!6143 = !{!6144, !6145, !6146, !6147, !6148, !6149, !6150, !6151, !6152, !6153}
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6142, file: !184, line: 509, baseType: !242, size: 64)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !6142, file: !184, line: 510, baseType: !213, size: 8, offset: 64)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "numldrv", scope: !6142, file: !184, line: 511, baseType: !213, size: 8, offset: 72)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "pcibus", scope: !6142, file: !184, line: 512, baseType: !213, size: 8, offset: 80)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "pcidev", scope: !6142, file: !184, line: 513, baseType: !218, size: 16, offset: 96)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "pcifun", scope: !6142, file: !184, line: 514, baseType: !213, size: 8, offset: 112)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "pciid", scope: !6142, file: !184, line: 515, baseType: !218, size: 16, offset: 128)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "pcivendor", scope: !6142, file: !184, line: 516, baseType: !218, size: 16, offset: 144)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "pcislot", scope: !6142, file: !184, line: 517, baseType: !213, size: 8, offset: 160)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6142, file: !184, line: 518, baseType: !190, size: 32, offset: 192)
!6154 = !DIGlobalVariableExpression(var: !6155, expr: !DIExpression())
!6155 = distinct !DIGlobalVariable(name: "__key", scope: !6156, file: !1673, line: 88, type: !762, isLocal: true, isDefinition: true)
!6156 = distinct !DISubprogram(name: "__init_completion", scope: !1673, file: !1673, line: 85, type: !6157, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6157 = !DISubroutineType(types: !6158)
!6158 = !{null, !1671}
!6159 = !DIGlobalVariableExpression(var: !6160, expr: !DIExpression())
!6160 = distinct !DIGlobalVariable(name: "mega_proc_dir_entry", scope: !2, file: !3, line: 86, type: !326, isLocal: true, isDefinition: true)
!6161 = !DIGlobalVariableExpression(var: !6162, expr: !DIExpression())
!6162 = distinct !DIGlobalVariable(name: "megadev_fops", scope: !2, file: !3, line: 97, type: !3987, isLocal: true, isDefinition: true)
!6163 = !DIGlobalVariableExpression(var: !6164, expr: !DIExpression())
!6164 = distinct !DIGlobalVariable(name: "megadev_mutex", scope: !2, file: !3, line: 61, type: !840, isLocal: true, isDefinition: true)
!6165 = !DIGlobalVariableExpression(var: !6166, expr: !DIExpression())
!6166 = distinct !DIGlobalVariable(name: "driver_ver", scope: !2, file: !3, line: 112, type: !190, isLocal: true, isDefinition: true)
!6167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 232, elements: !6168)
!6168 = !{!6169}
!6169 = !DISubrange(count: 29)
!6170 = !{!"rsp"}
!6171 = !{i32 7, !"Dwarf Version", i32 4}
!6172 = !{i32 2, !"Debug Info Version", i32 3}
!6173 = !{i32 1, !"wchar_size", i32 2}
!6174 = !{i32 1, !"Code Model", i32 2}
!6175 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!6176 = !DILocalVariable(name: "host", arg: 1, scope: !6076, file: !3, line: 1852, type: !5121)
!6177 = !DILocation(line: 1852, column: 33, scope: !6076)
!6178 = !DILocalVariable(name: "adapter", scope: !6076, file: !3, line: 1855, type: !182)
!6179 = !DILocation(line: 1855, column: 13, scope: !6076)
!6180 = !DILocation(line: 1857, column: 25, scope: !6076)
!6181 = !DILocation(line: 1857, column: 31, scope: !6076)
!6182 = !DILocation(line: 1857, column: 12, scope: !6076)
!6183 = !DILocation(line: 1857, column: 10, scope: !6076)
!6184 = !DILocation(line: 1861, column: 4, scope: !6076)
!6185 = !DILocation(line: 1861, column: 13, scope: !6076)
!6186 = !DILocation(line: 1861, column: 25, scope: !6076)
!6187 = !DILocation(line: 1861, column: 34, scope: !6076)
!6188 = !DILocation(line: 1861, column: 47, scope: !6076)
!6189 = !DILocation(line: 1862, column: 4, scope: !6076)
!6190 = !DILocation(line: 1862, column: 13, scope: !6076)
!6191 = !DILocation(line: 1862, column: 19, scope: !6076)
!6192 = !DILocation(line: 1862, column: 27, scope: !6076)
!6193 = !DILocation(line: 1862, column: 36, scope: !6076)
!6194 = !DILocation(line: 1862, column: 42, scope: !6076)
!6195 = !DILocation(line: 1863, column: 9, scope: !6076)
!6196 = !DILocation(line: 1863, column: 18, scope: !6076)
!6197 = !DILocation(line: 1863, column: 24, scope: !6076)
!6198 = !DILocation(line: 1863, column: 4, scope: !6076)
!6199 = !DILocation(line: 1859, column: 2, scope: !6076)
!6200 = !DILocation(line: 1864, column: 2, scope: !6076)
!6201 = distinct !DISubprogram(name: "megaraid_exit", scope: !3, file: !3, line: 4645, type: !2049, scopeLine: 4646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6202 = !DILocation(line: 4650, column: 20, scope: !6201)
!6203 = !DILocation(line: 4650, column: 2, scope: !6201)
!6204 = !DILocation(line: 4652, column: 2, scope: !6201)
!6205 = !DILocation(line: 4655, column: 2, scope: !6201)
!6206 = !DILocation(line: 4657, column: 1, scope: !6201)
!6207 = distinct !DISubprogram(name: "unregister_chrdev", scope: !111, file: !111, line: 2595, type: !6208, scopeLine: 2596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6208 = !DISubroutineType(types: !6209)
!6209 = !{null, !7, !284}
!6210 = !DILocalVariable(name: "major", arg: 1, scope: !6207, file: !111, line: 2595, type: !7)
!6211 = !DILocation(line: 2595, column: 51, scope: !6207)
!6212 = !DILocalVariable(name: "name", arg: 2, scope: !6207, file: !111, line: 2595, type: !284)
!6213 = !DILocation(line: 2595, column: 70, scope: !6207)
!6214 = !DILocation(line: 2597, column: 22, scope: !6207)
!6215 = !DILocation(line: 2597, column: 37, scope: !6207)
!6216 = !DILocation(line: 2597, column: 2, scope: !6207)
!6217 = !DILocation(line: 2598, column: 1, scope: !6207)
!6218 = distinct !DISubprogram(name: "megaraid_init", scope: !3, file: !3, line: 4606, type: !6219, scopeLine: 4607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6219 = !DISubroutineType(types: !6220)
!6220 = !{!188}
!6221 = !DILocalVariable(name: "error", scope: !6218, file: !3, line: 4608, type: !188)
!6222 = !DILocation(line: 4608, column: 6, scope: !6218)
!6223 = !DILocation(line: 4610, column: 7, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 4610, column: 6)
!6225 = !DILocation(line: 4610, column: 23, scope: !6224)
!6226 = !DILocation(line: 4610, column: 29, scope: !6224)
!6227 = !DILocation(line: 4610, column: 33, scope: !6224)
!6228 = !DILocation(line: 4610, column: 49, scope: !6224)
!6229 = !DILocation(line: 4610, column: 6, scope: !6218)
!6230 = !DILocation(line: 4611, column: 19, scope: !6224)
!6231 = !DILocation(line: 4611, column: 3, scope: !6224)
!6232 = !DILocation(line: 4612, column: 6, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 4612, column: 6)
!6234 = !DILocation(line: 4612, column: 25, scope: !6233)
!6235 = !DILocation(line: 4612, column: 6, scope: !6218)
!6236 = !DILocation(line: 4613, column: 22, scope: !6233)
!6237 = !DILocation(line: 4613, column: 3, scope: !6233)
!6238 = !DILocation(line: 4616, column: 24, scope: !6218)
!6239 = !DILocation(line: 4616, column: 22, scope: !6218)
!6240 = !DILocation(line: 4617, column: 7, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 4617, column: 6)
!6242 = !DILocation(line: 4617, column: 6, scope: !6218)
!6243 = !DILocation(line: 4618, column: 3, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6241, file: !3, line: 4617, column: 28)
!6245 = !DILocation(line: 4620, column: 2, scope: !6244)
!6246 = !DILocation(line: 4622, column: 10, scope: !6218)
!6247 = !DILocation(line: 4622, column: 8, scope: !6218)
!6248 = !DILocation(line: 4623, column: 6, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 4623, column: 6)
!6250 = !DILocation(line: 4623, column: 6, scope: !6218)
!6251 = !DILocation(line: 4625, column: 3, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6249, file: !3, line: 4623, column: 13)
!6253 = !DILocation(line: 4627, column: 10, scope: !6252)
!6254 = !DILocation(line: 4627, column: 3, scope: !6252)
!6255 = !DILocation(line: 4636, column: 10, scope: !6218)
!6256 = !DILocation(line: 4636, column: 8, scope: !6218)
!6257 = !DILocation(line: 4637, column: 7, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 4637, column: 6)
!6259 = !DILocation(line: 4637, column: 6, scope: !6218)
!6260 = !DILocation(line: 4638, column: 3, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 4637, column: 14)
!6262 = !DILocation(line: 4640, column: 2, scope: !6261)
!6263 = !DILocation(line: 4642, column: 2, scope: !6218)
!6264 = !DILocation(line: 4643, column: 1, scope: !6218)
!6265 = !DILocalVariable(name: "v", arg: 1, scope: !6266, file: !6267, line: 39, type: !6270)
!6266 = distinct !DISubprogram(name: "arch_atomic_set", scope: !6267, file: !6267, line: 39, type: !6268, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6267 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!6268 = !DISubroutineType(types: !6269)
!6269 = !{null, !6270, !188}
!6270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!6271 = !DILocation(line: 39, column: 55, scope: !6266, inlinedAt: !6272)
!6272 = distinct !DILocation(line: 46, column: 2, scope: !6273, inlinedAt: !6275)
!6273 = distinct !DISubprogram(name: "atomic_set", scope: !6274, file: !6274, line: 43, type: !6268, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6274 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6275 = distinct !DILocation(line: 4417, column: 2, scope: !6116)
!6276 = !DILocalVariable(name: "i", arg: 2, scope: !6266, file: !6267, line: 39, type: !188)
!6277 = !DILocation(line: 39, column: 62, scope: !6266, inlinedAt: !6272)
!6278 = !DILocalVariable(name: "v", arg: 1, scope: !6279, file: !6280, line: 84, type: !6283)
!6279 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !6280, file: !6280, line: 84, type: !6281, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6280 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6281 = !DISubroutineType(types: !6282)
!6282 = !{null, !6283, !445}
!6283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6284, size: 64)
!6284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6285)
!6285 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!6286 = !DILocation(line: 84, column: 74, scope: !6279, inlinedAt: !6287)
!6287 = distinct !DILocation(line: 45, column: 2, scope: !6273, inlinedAt: !6275)
!6288 = !DILocalVariable(name: "size", arg: 2, scope: !6279, file: !6280, line: 84, type: !445)
!6289 = !DILocation(line: 84, column: 84, scope: !6279, inlinedAt: !6287)
!6290 = !DILocalVariable(name: "v", arg: 1, scope: !6273, file: !6274, line: 43, type: !6270)
!6291 = !DILocation(line: 43, column: 22, scope: !6273, inlinedAt: !6275)
!6292 = !DILocalVariable(name: "i", arg: 2, scope: !6273, file: !6274, line: 43, type: !188)
!6293 = !DILocation(line: 43, column: 29, scope: !6273, inlinedAt: !6275)
!6294 = !DILocation(line: 39, column: 55, scope: !6266, inlinedAt: !6295)
!6295 = distinct !DILocation(line: 46, column: 2, scope: !6273, inlinedAt: !6296)
!6296 = distinct !DILocation(line: 4412, column: 2, scope: !6116)
!6297 = !DILocation(line: 39, column: 62, scope: !6266, inlinedAt: !6295)
!6298 = !DILocation(line: 84, column: 74, scope: !6279, inlinedAt: !6299)
!6299 = distinct !DILocation(line: 45, column: 2, scope: !6273, inlinedAt: !6296)
!6300 = !DILocation(line: 84, column: 84, scope: !6279, inlinedAt: !6299)
!6301 = !DILocation(line: 43, column: 22, scope: !6273, inlinedAt: !6296)
!6302 = !DILocation(line: 43, column: 29, scope: !6273, inlinedAt: !6296)
!6303 = !DILocalVariable(name: "lock", arg: 1, scope: !6304, file: !6305, line: 327, type: !1246)
!6304 = distinct !DISubprogram(name: "spinlock_check", scope: !6305, file: !6305, line: 327, type: !6306, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6305 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!6306 = !DISubroutineType(types: !6307)
!6307 = !{!6308, !1246}
!6308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!6309 = !DILocation(line: 327, column: 67, scope: !6304, inlinedAt: !6310)
!6310 = distinct !DILocation(line: 4258, column: 2, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4258, column: 2)
!6312 = !DILocalVariable(name: "pdev", arg: 1, scope: !6116, file: !3, line: 4151, type: !253)
!6313 = !DILocation(line: 4151, column: 36, scope: !6116)
!6314 = !DILocalVariable(name: "id", arg: 2, scope: !6116, file: !3, line: 4151, type: !4956)
!6315 = !DILocation(line: 4151, column: 70, scope: !6116)
!6316 = !DILocalVariable(name: "host", scope: !6116, file: !3, line: 4153, type: !5121)
!6317 = !DILocation(line: 4153, column: 20, scope: !6116)
!6318 = !DILocalVariable(name: "adapter", scope: !6116, file: !3, line: 4154, type: !182)
!6319 = !DILocation(line: 4154, column: 13, scope: !6116)
!6320 = !DILocalVariable(name: "mega_baseport", scope: !6116, file: !3, line: 4155, type: !195)
!6321 = !DILocation(line: 4155, column: 16, scope: !6116)
!6322 = !DILocalVariable(name: "tbase", scope: !6116, file: !3, line: 4155, type: !195)
!6323 = !DILocation(line: 4155, column: 31, scope: !6116)
!6324 = !DILocalVariable(name: "flag", scope: !6116, file: !3, line: 4155, type: !195)
!6325 = !DILocation(line: 4155, column: 38, scope: !6116)
!6326 = !DILocalVariable(name: "subsysid", scope: !6116, file: !3, line: 4156, type: !218)
!6327 = !DILocation(line: 4156, column: 6, scope: !6116)
!6328 = !DILocalVariable(name: "subsysvid", scope: !6116, file: !3, line: 4156, type: !218)
!6329 = !DILocation(line: 4156, column: 16, scope: !6116)
!6330 = !DILocalVariable(name: "pci_bus", scope: !6116, file: !3, line: 4157, type: !213)
!6331 = !DILocation(line: 4157, column: 5, scope: !6116)
!6332 = !DILocalVariable(name: "pci_dev_func", scope: !6116, file: !3, line: 4157, type: !213)
!6333 = !DILocation(line: 4157, column: 14, scope: !6116)
!6334 = !DILocalVariable(name: "irq", scope: !6116, file: !3, line: 4158, type: !188)
!6335 = !DILocation(line: 4158, column: 6, scope: !6116)
!6336 = !DILocalVariable(name: "i", scope: !6116, file: !3, line: 4158, type: !188)
!6337 = !DILocation(line: 4158, column: 11, scope: !6116)
!6338 = !DILocalVariable(name: "j", scope: !6116, file: !3, line: 4158, type: !188)
!6339 = !DILocation(line: 4158, column: 14, scope: !6116)
!6340 = !DILocalVariable(name: "error", scope: !6116, file: !3, line: 4159, type: !188)
!6341 = !DILocation(line: 4159, column: 6, scope: !6116)
!6342 = !DILocation(line: 4161, column: 6, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4161, column: 6)
!6344 = !DILocation(line: 4161, column: 16, scope: !6343)
!6345 = !DILocation(line: 4161, column: 6, scope: !6116)
!6346 = !DILocation(line: 4162, column: 3, scope: !6343)
!6347 = !DILocation(line: 4164, column: 24, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4164, column: 6)
!6349 = !DILocation(line: 4164, column: 6, scope: !6348)
!6350 = !DILocation(line: 4164, column: 6, scope: !6116)
!6351 = !DILocation(line: 4165, column: 3, scope: !6348)
!6352 = !DILocation(line: 4166, column: 17, scope: !6116)
!6353 = !DILocation(line: 4166, column: 2, scope: !6116)
!6354 = !DILocation(line: 4168, column: 12, scope: !6116)
!6355 = !DILocation(line: 4168, column: 18, scope: !6116)
!6356 = !DILocation(line: 4168, column: 23, scope: !6116)
!6357 = !DILocation(line: 4168, column: 10, scope: !6116)
!6358 = !DILocation(line: 4169, column: 17, scope: !6116)
!6359 = !DILocation(line: 4169, column: 23, scope: !6116)
!6360 = !DILocation(line: 4169, column: 15, scope: !6116)
!6361 = !DILocation(line: 4175, column: 6, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4175, column: 6)
!6363 = !DILocation(line: 4175, column: 12, scope: !6362)
!6364 = !DILocation(line: 4175, column: 19, scope: !6362)
!6365 = !DILocation(line: 4175, column: 6, scope: !6116)
!6366 = !DILocalVariable(name: "magic", scope: !6367, file: !3, line: 4176, type: !218)
!6367 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 4175, column: 43)
!6368 = !DILocation(line: 4176, column: 7, scope: !6367)
!6369 = !DILocation(line: 4181, column: 7, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6367, file: !3, line: 4181, column: 7)
!6371 = !DILocation(line: 4181, column: 13, scope: !6370)
!6372 = !DILocation(line: 4181, column: 30, scope: !6370)
!6373 = !DILocation(line: 4181, column: 54, scope: !6370)
!6374 = !DILocation(line: 4182, column: 7, scope: !6370)
!6375 = !DILocation(line: 4182, column: 13, scope: !6370)
!6376 = !DILocation(line: 4182, column: 30, scope: !6370)
!6377 = !DILocation(line: 4181, column: 7, scope: !6367)
!6378 = !DILocation(line: 4183, column: 4, scope: !6370)
!6379 = !DILocation(line: 4185, column: 24, scope: !6367)
!6380 = !DILocation(line: 4185, column: 3, scope: !6367)
!6381 = !DILocation(line: 4186, column: 7, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6367, file: !3, line: 4186, column: 7)
!6383 = !DILocation(line: 4186, column: 13, scope: !6382)
!6384 = !DILocation(line: 4186, column: 34, scope: !6382)
!6385 = !DILocation(line: 4186, column: 37, scope: !6382)
!6386 = !DILocation(line: 4186, column: 43, scope: !6382)
!6387 = !DILocation(line: 4186, column: 7, scope: !6367)
!6388 = !DILocation(line: 4187, column: 4, scope: !6382)
!6389 = !DILocation(line: 4189, column: 2, scope: !6367)
!6390 = !DILocation(line: 4195, column: 6, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4195, column: 6)
!6392 = !DILocation(line: 4195, column: 10, scope: !6391)
!6393 = !DILocation(line: 4195, column: 22, scope: !6391)
!6394 = !DILocation(line: 4195, column: 6, scope: !6116)
!6395 = !DILocation(line: 4196, column: 8, scope: !6391)
!6396 = !DILocation(line: 4196, column: 3, scope: !6391)
!6397 = !DILocalVariable(name: "magic64", scope: !6398, file: !3, line: 4198, type: !190)
!6398 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 4197, column: 7)
!6399 = !DILocation(line: 4198, column: 7, scope: !6398)
!6400 = !DILocation(line: 4200, column: 25, scope: !6398)
!6401 = !DILocation(line: 4200, column: 3, scope: !6398)
!6402 = !DILocation(line: 4201, column: 7, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 4201, column: 7)
!6404 = !DILocation(line: 4201, column: 15, scope: !6403)
!6405 = !DILocation(line: 4201, column: 7, scope: !6398)
!6406 = !DILocation(line: 4202, column: 9, scope: !6403)
!6407 = !DILocation(line: 4202, column: 4, scope: !6403)
!6408 = !DILocation(line: 4205, column: 14, scope: !6116)
!6409 = !DILocation(line: 4205, column: 20, scope: !6116)
!6410 = !DILocation(line: 4205, column: 12, scope: !6116)
!6411 = !DILocation(line: 4206, column: 13, scope: !6116)
!6412 = !DILocation(line: 4206, column: 19, scope: !6116)
!6413 = !DILocation(line: 4206, column: 11, scope: !6116)
!6414 = !DILocation(line: 4208, column: 2, scope: !6116)
!6415 = !DILocation(line: 4212, column: 18, scope: !6116)
!6416 = !DILocation(line: 4212, column: 16, scope: !6116)
!6417 = !DILocation(line: 4213, column: 8, scope: !6116)
!6418 = !DILocation(line: 4213, column: 14, scope: !6116)
!6419 = !DILocation(line: 4213, column: 6, scope: !6116)
!6420 = !DILocation(line: 4215, column: 10, scope: !6116)
!6421 = !DILocation(line: 4215, column: 8, scope: !6116)
!6422 = !DILocation(line: 4216, column: 6, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4216, column: 6)
!6424 = !DILocation(line: 4216, column: 34, scope: !6423)
!6425 = !DILocation(line: 4216, column: 6, scope: !6116)
!6426 = !DILocation(line: 4217, column: 8, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 4216, column: 52)
!6428 = !DILocation(line: 4219, column: 8, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6427, file: !3, line: 4219, column: 7)
!6430 = !DILocation(line: 4219, column: 7, scope: !6427)
!6431 = !DILocation(line: 4220, column: 4, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 4219, column: 60)
!6433 = !DILocation(line: 4221, column: 4, scope: !6432)
!6434 = !DILocation(line: 4224, column: 42, scope: !6427)
!6435 = !DILocation(line: 4224, column: 34, scope: !6427)
!6436 = !DILocation(line: 4224, column: 19, scope: !6427)
!6437 = !DILocation(line: 4224, column: 17, scope: !6427)
!6438 = !DILocation(line: 4225, column: 8, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6427, file: !3, line: 4225, column: 7)
!6440 = !DILocation(line: 4225, column: 7, scope: !6427)
!6441 = !DILocation(line: 4226, column: 4, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6439, file: !3, line: 4225, column: 23)
!6443 = !DILocation(line: 4227, column: 4, scope: !6442)
!6444 = !DILocation(line: 4229, column: 2, scope: !6427)
!6445 = !DILocation(line: 4230, column: 8, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 4229, column: 9)
!6447 = !DILocation(line: 4231, column: 17, scope: !6446)
!6448 = !DILocation(line: 4233, column: 8, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 4233, column: 7)
!6450 = !DILocation(line: 4233, column: 7, scope: !6446)
!6451 = !DILocation(line: 4234, column: 4, scope: !6449)
!6452 = !DILocation(line: 4238, column: 9, scope: !6116)
!6453 = !DILocation(line: 4238, column: 7, scope: !6116)
!6454 = !DILocation(line: 4239, column: 7, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4239, column: 6)
!6456 = !DILocation(line: 4239, column: 6, scope: !6116)
!6457 = !DILocation(line: 4240, column: 3, scope: !6455)
!6458 = !DILocation(line: 4242, column: 25, scope: !6116)
!6459 = !DILocation(line: 4242, column: 31, scope: !6116)
!6460 = !DILocation(line: 4242, column: 12, scope: !6116)
!6461 = !DILocation(line: 4242, column: 10, scope: !6116)
!6462 = !DILocation(line: 4243, column: 9, scope: !6116)
!6463 = !DILocation(line: 4243, column: 2, scope: !6116)
!6464 = !DILocation(line: 4245, column: 2, scope: !6116)
!6465 = !DILocation(line: 4249, column: 18, scope: !6116)
!6466 = !DILocation(line: 4249, column: 2, scope: !6116)
!6467 = !DILocation(line: 4249, column: 11, scope: !6116)
!6468 = !DILocation(line: 4249, column: 16, scope: !6116)
!6469 = !DILocation(line: 4250, column: 6, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4250, column: 6)
!6471 = !DILocation(line: 4250, column: 11, scope: !6470)
!6472 = !DILocation(line: 4250, column: 6, scope: !6116)
!6473 = !DILocation(line: 4251, column: 41, scope: !6470)
!6474 = !DILocation(line: 4251, column: 24, scope: !6470)
!6475 = !DILocation(line: 4251, column: 3, scope: !6470)
!6476 = !DILocation(line: 4251, column: 12, scope: !6470)
!6477 = !DILocation(line: 4251, column: 22, scope: !6470)
!6478 = !DILocation(line: 4253, column: 18, scope: !6116)
!6479 = !DILocation(line: 4253, column: 27, scope: !6116)
!6480 = !DILocation(line: 4253, column: 2, scope: !6116)
!6481 = !DILocation(line: 4254, column: 18, scope: !6116)
!6482 = !DILocation(line: 4254, column: 27, scope: !6116)
!6483 = !DILocation(line: 4254, column: 2, scope: !6116)
!6484 = !DILocation(line: 4255, column: 18, scope: !6116)
!6485 = !DILocation(line: 4255, column: 27, scope: !6116)
!6486 = !DILocation(line: 4255, column: 2, scope: !6116)
!6487 = !DILocation(line: 4257, column: 18, scope: !6116)
!6488 = !DILocation(line: 4257, column: 2, scope: !6116)
!6489 = !DILocation(line: 4257, column: 11, scope: !6116)
!6490 = !DILocation(line: 4257, column: 16, scope: !6116)
!6491 = !DILocation(line: 4258, column: 2, scope: !6116)
!6492 = !DILocation(line: 4258, column: 2, scope: !6311)
!6493 = !DILocation(line: 329, column: 10, scope: !6304, inlinedAt: !6310)
!6494 = !DILocation(line: 329, column: 16, scope: !6304, inlinedAt: !6310)
!6495 = !DILocation(line: 4260, column: 22, scope: !6116)
!6496 = !DILocation(line: 4260, column: 2, scope: !6116)
!6497 = !DILocation(line: 4260, column: 8, scope: !6116)
!6498 = !DILocation(line: 4260, column: 20, scope: !6116)
!6499 = !DILocation(line: 4261, column: 22, scope: !6116)
!6500 = !DILocation(line: 4261, column: 2, scope: !6116)
!6501 = !DILocation(line: 4261, column: 8, scope: !6116)
!6502 = !DILocation(line: 4261, column: 20, scope: !6116)
!6503 = !DILocation(line: 4263, column: 17, scope: !6116)
!6504 = !DILocation(line: 4263, column: 2, scope: !6116)
!6505 = !DILocation(line: 4263, column: 11, scope: !6116)
!6506 = !DILocation(line: 4263, column: 15, scope: !6116)
!6507 = !DILocation(line: 4264, column: 18, scope: !6116)
!6508 = !DILocation(line: 4264, column: 2, scope: !6116)
!6509 = !DILocation(line: 4264, column: 11, scope: !6116)
!6510 = !DILocation(line: 4264, column: 16, scope: !6116)
!6511 = !DILocation(line: 4266, column: 23, scope: !6116)
!6512 = !DILocation(line: 4266, column: 2, scope: !6116)
!6513 = !DILocation(line: 4266, column: 11, scope: !6116)
!6514 = !DILocation(line: 4266, column: 17, scope: !6116)
!6515 = !DILocation(line: 4266, column: 21, scope: !6116)
!6516 = !DILocation(line: 4268, column: 6, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4268, column: 6)
!6518 = !DILocation(line: 4268, column: 11, scope: !6517)
!6519 = !DILocation(line: 4268, column: 6, scope: !6116)
!6520 = !DILocation(line: 4269, column: 25, scope: !6517)
!6521 = !DILocation(line: 4269, column: 3, scope: !6517)
!6522 = !DILocation(line: 4269, column: 12, scope: !6517)
!6523 = !DILocation(line: 4269, column: 18, scope: !6517)
!6524 = !DILocation(line: 4269, column: 23, scope: !6517)
!6525 = !DILocation(line: 4271, column: 28, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 4270, column: 7)
!6527 = !DILocation(line: 4271, column: 3, scope: !6526)
!6528 = !DILocation(line: 4271, column: 12, scope: !6526)
!6529 = !DILocation(line: 4271, column: 18, scope: !6526)
!6530 = !DILocation(line: 4271, column: 26, scope: !6526)
!6531 = !DILocation(line: 4272, column: 3, scope: !6526)
!6532 = !DILocation(line: 4272, column: 12, scope: !6526)
!6533 = !DILocation(line: 4272, column: 18, scope: !6526)
!6534 = !DILocation(line: 4272, column: 28, scope: !6526)
!6535 = !DILocation(line: 4275, column: 30, scope: !6116)
!6536 = !DILocation(line: 4275, column: 38, scope: !6116)
!6537 = !DILocation(line: 4275, column: 46, scope: !6116)
!6538 = !DILocation(line: 4275, column: 44, scope: !6116)
!6539 = !DILocation(line: 4275, column: 2, scope: !6116)
!6540 = !DILocation(line: 4275, column: 11, scope: !6116)
!6541 = !DILocation(line: 4275, column: 17, scope: !6116)
!6542 = !DILocation(line: 4275, column: 27, scope: !6116)
!6543 = !DILocation(line: 4280, column: 45, scope: !6116)
!6544 = !DILocation(line: 4280, column: 54, scope: !6116)
!6545 = !DILocation(line: 4280, column: 59, scope: !6116)
!6546 = !DILocation(line: 4282, column: 10, scope: !6116)
!6547 = !DILocation(line: 4282, column: 19, scope: !6116)
!6548 = !DILocation(line: 4280, column: 25, scope: !6116)
!6549 = !DILocation(line: 4280, column: 2, scope: !6116)
!6550 = !DILocation(line: 4280, column: 11, scope: !6116)
!6551 = !DILocation(line: 4280, column: 23, scope: !6116)
!6552 = !DILocation(line: 4284, column: 7, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4284, column: 6)
!6554 = !DILocation(line: 4284, column: 16, scope: !6553)
!6555 = !DILocation(line: 4284, column: 6, scope: !6116)
!6556 = !DILocation(line: 4285, column: 3, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 4284, column: 29)
!6558 = !DILocation(line: 4286, column: 3, scope: !6557)
!6559 = !DILocation(line: 4289, column: 22, scope: !6116)
!6560 = !DILocation(line: 4289, column: 2, scope: !6116)
!6561 = !DILocation(line: 4289, column: 11, scope: !6116)
!6562 = !DILocation(line: 4289, column: 20, scope: !6116)
!6563 = !DILocation(line: 4291, column: 7, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4291, column: 6)
!6565 = !DILocation(line: 4291, column: 16, scope: !6564)
!6566 = !DILocation(line: 4291, column: 6, scope: !6116)
!6567 = !DILocation(line: 4292, column: 3, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 4291, column: 26)
!6569 = !DILocation(line: 4293, column: 3, scope: !6568)
!6570 = !DILocation(line: 4296, column: 18, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4296, column: 6)
!6572 = !DILocation(line: 4296, column: 24, scope: !6571)
!6573 = !DILocation(line: 4296, column: 33, scope: !6571)
!6574 = !DILocation(line: 4296, column: 38, scope: !6571)
!6575 = !DILocation(line: 4296, column: 23, scope: !6571)
!6576 = !DILocation(line: 4298, column: 31, scope: !6571)
!6577 = !DILocation(line: 4296, column: 6, scope: !6571)
!6578 = !DILocation(line: 4296, column: 6, scope: !6116)
!6579 = !DILocation(line: 4299, column: 3, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 4298, column: 41)
!6581 = !DILocation(line: 4300, column: 3, scope: !6580)
!6582 = !DILocation(line: 4303, column: 25, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4303, column: 6)
!6584 = !DILocation(line: 4303, column: 6, scope: !6583)
!6585 = !DILocation(line: 4303, column: 6, scope: !6116)
!6586 = !DILocation(line: 4304, column: 3, scope: !6583)
!6587 = !DILocation(line: 4306, column: 25, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4306, column: 6)
!6589 = !DILocation(line: 4306, column: 6, scope: !6588)
!6590 = !DILocation(line: 4306, column: 6, scope: !6116)
!6591 = !DILocation(line: 4307, column: 3, scope: !6588)
!6592 = !DILocation(line: 4312, column: 7, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4312, column: 6)
!6594 = !DILocation(line: 4312, column: 16, scope: !6593)
!6595 = !DILocation(line: 4312, column: 27, scope: !6593)
!6596 = !DILocation(line: 4312, column: 31, scope: !6593)
!6597 = !DILocation(line: 4312, column: 41, scope: !6593)
!6598 = !DILocation(line: 4312, column: 6, scope: !6116)
!6599 = !DILocation(line: 4316, column: 15, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 4316, column: 7)
!6601 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 4312, column: 53)
!6602 = !DILocation(line: 4316, column: 24, scope: !6600)
!6603 = !DILocation(line: 4316, column: 8, scope: !6600)
!6604 = !DILocation(line: 4316, column: 44, scope: !6600)
!6605 = !DILocation(line: 4317, column: 13, scope: !6600)
!6606 = !DILocation(line: 4317, column: 22, scope: !6600)
!6607 = !DILocation(line: 4317, column: 6, scope: !6600)
!6608 = !DILocation(line: 4316, column: 7, scope: !6601)
!6609 = !DILocation(line: 4319, column: 4, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 4317, column: 43)
!6611 = !DILocation(line: 4335, column: 3, scope: !6610)
!6612 = !DILocation(line: 4336, column: 2, scope: !6601)
!6613 = !DILocation(line: 4344, column: 7, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4344, column: 6)
!6615 = !DILocation(line: 4344, column: 17, scope: !6614)
!6616 = !DILocation(line: 4344, column: 38, scope: !6614)
!6617 = !DILocation(line: 4345, column: 8, scope: !6614)
!6618 = !DILocation(line: 4345, column: 17, scope: !6614)
!6619 = !DILocation(line: 4345, column: 28, scope: !6614)
!6620 = !DILocation(line: 4345, column: 32, scope: !6614)
!6621 = !DILocation(line: 4345, column: 41, scope: !6614)
!6622 = !DILocation(line: 4344, column: 6, scope: !6116)
!6623 = !DILocation(line: 4349, column: 15, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 4349, column: 7)
!6625 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 4345, column: 54)
!6626 = !DILocation(line: 4349, column: 24, scope: !6624)
!6627 = !DILocation(line: 4349, column: 8, scope: !6624)
!6628 = !DILocation(line: 4349, column: 46, scope: !6624)
!6629 = !DILocation(line: 4350, column: 15, scope: !6624)
!6630 = !DILocation(line: 4350, column: 24, scope: !6624)
!6631 = !DILocation(line: 4350, column: 8, scope: !6624)
!6632 = !DILocation(line: 4350, column: 46, scope: !6624)
!6633 = !DILocation(line: 4351, column: 15, scope: !6624)
!6634 = !DILocation(line: 4351, column: 24, scope: !6624)
!6635 = !DILocation(line: 4351, column: 8, scope: !6624)
!6636 = !DILocation(line: 4349, column: 7, scope: !6625)
!6637 = !DILocation(line: 4352, column: 4, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 4351, column: 48)
!6639 = !DILocation(line: 4359, column: 4, scope: !6638)
!6640 = !DILocation(line: 4359, column: 13, scope: !6638)
!6641 = !DILocation(line: 4359, column: 18, scope: !6638)
!6642 = !DILocation(line: 4360, column: 3, scope: !6638)
!6643 = !DILocation(line: 4361, column: 2, scope: !6625)
!6644 = !DILocation(line: 4363, column: 27, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4363, column: 6)
!6646 = !DILocation(line: 4363, column: 6, scope: !6645)
!6647 = !DILocation(line: 4363, column: 6, scope: !6116)
!6648 = !DILocation(line: 4364, column: 13, scope: !6645)
!6649 = !DILocation(line: 4364, column: 3, scope: !6645)
!6650 = !DILocation(line: 4364, column: 24, scope: !6645)
!6651 = !DILocation(line: 4364, column: 40, scope: !6645)
!6652 = !DILocation(line: 4365, column: 39, scope: !6116)
!6653 = !DILocation(line: 4365, column: 12, scope: !6116)
!6654 = !DILocation(line: 4365, column: 2, scope: !6116)
!6655 = !DILocation(line: 4365, column: 23, scope: !6116)
!6656 = !DILocation(line: 4365, column: 37, scope: !6116)
!6657 = !DILocation(line: 4371, column: 22, scope: !6116)
!6658 = !DILocation(line: 4371, column: 2, scope: !6116)
!6659 = !DILocation(line: 4381, column: 20, scope: !6116)
!6660 = !DILocation(line: 4381, column: 2, scope: !6116)
!6661 = !DILocation(line: 4383, column: 6, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4383, column: 6)
!6663 = !DILocation(line: 4383, column: 15, scope: !6662)
!6664 = !DILocation(line: 4383, column: 6, scope: !6116)
!6665 = !DILocation(line: 4384, column: 7, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6662, file: !3, line: 4383, column: 34)
!6667 = !DILocation(line: 4384, column: 16, scope: !6666)
!6668 = !DILocation(line: 4384, column: 29, scope: !6666)
!6669 = !DILocation(line: 4384, column: 5, scope: !6666)
!6670 = !DILocation(line: 4385, column: 10, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 4385, column: 3)
!6672 = !DILocation(line: 4385, column: 8, scope: !6671)
!6673 = !DILocation(line: 4385, column: 15, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 4385, column: 3)
!6675 = !DILocation(line: 4385, column: 19, scope: !6674)
!6676 = !DILocation(line: 4385, column: 17, scope: !6674)
!6677 = !DILocation(line: 4385, column: 3, scope: !6671)
!6678 = !DILocation(line: 4386, column: 4, scope: !6674)
!6679 = !DILocation(line: 4386, column: 13, scope: !6674)
!6680 = !DILocation(line: 4386, column: 25, scope: !6674)
!6681 = !DILocation(line: 4386, column: 28, scope: !6674)
!6682 = !DILocation(line: 4385, column: 23, scope: !6674)
!6683 = !DILocation(line: 4385, column: 3, scope: !6674)
!6684 = distinct !{!6684, !6677, !6685}
!6685 = !DILocation(line: 4386, column: 30, scope: !6671)
!6686 = !DILocation(line: 4387, column: 12, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 4387, column: 3)
!6688 = !DILocation(line: 4387, column: 10, scope: !6687)
!6689 = !DILocation(line: 4387, column: 8, scope: !6687)
!6690 = !DILocation(line: 4387, column: 15, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6687, file: !3, line: 4387, column: 3)
!6692 = !DILocation(line: 4387, column: 32, scope: !6691)
!6693 = !DILocation(line: 4387, column: 30, scope: !6691)
!6694 = !DILocation(line: 4387, column: 17, scope: !6691)
!6695 = !DILocation(line: 4387, column: 3, scope: !6687)
!6696 = !DILocation(line: 4388, column: 4, scope: !6691)
!6697 = !DILocation(line: 4388, column: 13, scope: !6691)
!6698 = !DILocation(line: 4388, column: 25, scope: !6691)
!6699 = !DILocation(line: 4388, column: 28, scope: !6691)
!6700 = !DILocation(line: 4387, column: 36, scope: !6691)
!6701 = !DILocation(line: 4387, column: 3, scope: !6691)
!6702 = distinct !{!6702, !6695, !6703}
!6703 = !DILocation(line: 4388, column: 30, scope: !6687)
!6704 = !DILocation(line: 4389, column: 2, scope: !6666)
!6705 = !DILocation(line: 4390, column: 10, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6707, file: !3, line: 4390, column: 3)
!6707 = distinct !DILexicalBlock(scope: !6662, file: !3, line: 4389, column: 9)
!6708 = !DILocation(line: 4390, column: 8, scope: !6706)
!6709 = !DILocation(line: 4390, column: 15, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 4390, column: 3)
!6711 = !DILocation(line: 4390, column: 17, scope: !6710)
!6712 = !DILocation(line: 4390, column: 3, scope: !6706)
!6713 = !DILocation(line: 4391, column: 4, scope: !6710)
!6714 = !DILocation(line: 4391, column: 13, scope: !6710)
!6715 = !DILocation(line: 4391, column: 25, scope: !6710)
!6716 = !DILocation(line: 4391, column: 28, scope: !6710)
!6717 = !DILocation(line: 4390, column: 32, scope: !6710)
!6718 = !DILocation(line: 4390, column: 3, scope: !6710)
!6719 = distinct !{!6719, !6712, !6720}
!6720 = !DILocation(line: 4391, column: 30, scope: !6706)
!6721 = !DILocation(line: 4392, column: 10, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6707, file: !3, line: 4392, column: 3)
!6723 = !DILocation(line: 4392, column: 8, scope: !6722)
!6724 = !DILocation(line: 4392, column: 24, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6722, file: !3, line: 4392, column: 3)
!6726 = !DILocation(line: 4392, column: 26, scope: !6725)
!6727 = !DILocation(line: 4392, column: 3, scope: !6722)
!6728 = !DILocation(line: 4393, column: 4, scope: !6725)
!6729 = !DILocation(line: 4393, column: 13, scope: !6725)
!6730 = !DILocation(line: 4393, column: 25, scope: !6725)
!6731 = !DILocation(line: 4393, column: 28, scope: !6725)
!6732 = !DILocation(line: 4392, column: 54, scope: !6725)
!6733 = !DILocation(line: 4392, column: 3, scope: !6725)
!6734 = distinct !{!6734, !6727, !6735}
!6735 = !DILocation(line: 4393, column: 30, scope: !6722)
!6736 = !DILocation(line: 4394, column: 3, scope: !6707)
!6737 = !DILocation(line: 4394, column: 12, scope: !6707)
!6738 = !DILocation(line: 4394, column: 26, scope: !6707)
!6739 = !DILocation(line: 4401, column: 2, scope: !6116)
!6740 = !DILocation(line: 4401, column: 11, scope: !6116)
!6741 = !DILocation(line: 4401, column: 24, scope: !6116)
!6742 = !DILocation(line: 4403, column: 56, scope: !6116)
!6743 = !DILocation(line: 4403, column: 32, scope: !6116)
!6744 = !DILocation(line: 4403, column: 2, scope: !6116)
!6745 = !DILocation(line: 4403, column: 11, scope: !6116)
!6746 = !DILocation(line: 4403, column: 30, scope: !6116)
!6747 = !DILocation(line: 4406, column: 20, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4406, column: 6)
!6749 = !DILocation(line: 4406, column: 6, scope: !6748)
!6750 = !DILocation(line: 4406, column: 6, scope: !6116)
!6751 = !DILocation(line: 4407, column: 3, scope: !6748)
!6752 = !DILocation(line: 4412, column: 14, scope: !6116)
!6753 = !DILocation(line: 4412, column: 23, scope: !6116)
!6754 = !DILocation(line: 45, column: 26, scope: !6273, inlinedAt: !6296)
!6755 = !DILocation(line: 86, column: 20, scope: !6279, inlinedAt: !6299)
!6756 = !DILocation(line: 86, column: 23, scope: !6279, inlinedAt: !6299)
!6757 = !DILocation(line: 86, column: 2, scope: !6279, inlinedAt: !6299)
!6758 = !DILocation(line: 87, column: 2, scope: !6279, inlinedAt: !6299)
!6759 = !DILocation(line: 46, column: 18, scope: !6273, inlinedAt: !6296)
!6760 = !DILocation(line: 46, column: 21, scope: !6273, inlinedAt: !6296)
!6761 = !DILocation(line: 41, column: 2, scope: !6762, inlinedAt: !6295)
!6762 = distinct !DILexicalBlock(scope: !6266, file: !6267, line: 41, column: 2)
!6763 = !DILocation(line: 4417, column: 14, scope: !6116)
!6764 = !DILocation(line: 4417, column: 23, scope: !6116)
!6765 = !DILocation(line: 45, column: 26, scope: !6273, inlinedAt: !6275)
!6766 = !DILocation(line: 86, column: 20, scope: !6279, inlinedAt: !6287)
!6767 = !DILocation(line: 86, column: 23, scope: !6279, inlinedAt: !6287)
!6768 = !DILocation(line: 86, column: 2, scope: !6279, inlinedAt: !6287)
!6769 = !DILocation(line: 87, column: 2, scope: !6279, inlinedAt: !6287)
!6770 = !DILocation(line: 46, column: 18, scope: !6273, inlinedAt: !6275)
!6771 = !DILocation(line: 46, column: 21, scope: !6273, inlinedAt: !6275)
!6772 = !DILocation(line: 41, column: 2, scope: !6762, inlinedAt: !6272)
!6773 = !DILocation(line: 4419, column: 30, scope: !6116)
!6774 = !DILocation(line: 4419, column: 17, scope: !6116)
!6775 = !DILocation(line: 4419, column: 2, scope: !6116)
!6776 = !DILocation(line: 4419, column: 28, scope: !6116)
!6777 = !DILocation(line: 4426, column: 6, scope: !6116)
!6778 = !DILocation(line: 4426, column: 4, scope: !6116)
!6779 = !DILocation(line: 4428, column: 24, scope: !6116)
!6780 = !DILocation(line: 4428, column: 14, scope: !6116)
!6781 = !DILocation(line: 4428, column: 2, scope: !6116)
!6782 = !DILocation(line: 4428, column: 17, scope: !6116)
!6783 = !DILocation(line: 4428, column: 22, scope: !6116)
!6784 = !DILocation(line: 4429, column: 23, scope: !6116)
!6785 = !DILocation(line: 4429, column: 14, scope: !6116)
!6786 = !DILocation(line: 4429, column: 2, scope: !6116)
!6787 = !DILocation(line: 4429, column: 17, scope: !6116)
!6788 = !DILocation(line: 4429, column: 21, scope: !6116)
!6789 = !DILocation(line: 4430, column: 27, scope: !6116)
!6790 = !DILocation(line: 4430, column: 36, scope: !6116)
!6791 = !DILocation(line: 4430, column: 14, scope: !6116)
!6792 = !DILocation(line: 4430, column: 2, scope: !6116)
!6793 = !DILocation(line: 4430, column: 17, scope: !6116)
!6794 = !DILocation(line: 4430, column: 25, scope: !6116)
!6795 = !DILocation(line: 4431, column: 26, scope: !6116)
!6796 = !DILocation(line: 4431, column: 14, scope: !6116)
!6797 = !DILocation(line: 4431, column: 2, scope: !6116)
!6798 = !DILocation(line: 4431, column: 17, scope: !6116)
!6799 = !DILocation(line: 4431, column: 24, scope: !6116)
!6800 = !DILocation(line: 4432, column: 26, scope: !6116)
!6801 = !DILocation(line: 4432, column: 30, scope: !6116)
!6802 = !DILocation(line: 4432, column: 14, scope: !6116)
!6803 = !DILocation(line: 4432, column: 2, scope: !6116)
!6804 = !DILocation(line: 4432, column: 17, scope: !6116)
!6805 = !DILocation(line: 4432, column: 24, scope: !6116)
!6806 = !DILocation(line: 4433, column: 26, scope: !6116)
!6807 = !DILocation(line: 4433, column: 14, scope: !6116)
!6808 = !DILocation(line: 4433, column: 2, scope: !6116)
!6809 = !DILocation(line: 4433, column: 17, scope: !6116)
!6810 = !DILocation(line: 4433, column: 24, scope: !6116)
!6811 = !DILocation(line: 4434, column: 14, scope: !6116)
!6812 = !DILocation(line: 4434, column: 2, scope: !6116)
!6813 = !DILocation(line: 4434, column: 17, scope: !6116)
!6814 = !DILocation(line: 4434, column: 23, scope: !6116)
!6815 = !DILocation(line: 4435, column: 29, scope: !6116)
!6816 = !DILocation(line: 4435, column: 33, scope: !6116)
!6817 = !DILocation(line: 4435, column: 14, scope: !6116)
!6818 = !DILocation(line: 4435, column: 2, scope: !6116)
!6819 = !DILocation(line: 4435, column: 17, scope: !6116)
!6820 = !DILocation(line: 4435, column: 27, scope: !6116)
!6821 = !DILocation(line: 4436, column: 27, scope: !6116)
!6822 = !DILocation(line: 4436, column: 14, scope: !6116)
!6823 = !DILocation(line: 4436, column: 2, scope: !6116)
!6824 = !DILocation(line: 4436, column: 17, scope: !6116)
!6825 = !DILocation(line: 4436, column: 25, scope: !6116)
!6826 = !DILocation(line: 4437, column: 24, scope: !6116)
!6827 = !DILocation(line: 4437, column: 32, scope: !6116)
!6828 = !DILocation(line: 4437, column: 40, scope: !6116)
!6829 = !DILocation(line: 4437, column: 38, scope: !6116)
!6830 = !DILocation(line: 4437, column: 14, scope: !6116)
!6831 = !DILocation(line: 4437, column: 2, scope: !6116)
!6832 = !DILocation(line: 4437, column: 17, scope: !6116)
!6833 = !DILocation(line: 4437, column: 21, scope: !6116)
!6834 = !DILocation(line: 4441, column: 7, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4441, column: 6)
!6836 = !DILocation(line: 4441, column: 16, scope: !6835)
!6837 = !DILocation(line: 4441, column: 21, scope: !6835)
!6838 = !DILocation(line: 4441, column: 6, scope: !6116)
!6839 = !DILocation(line: 4442, column: 17, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 4441, column: 66)
!6841 = !DILocation(line: 4442, column: 23, scope: !6840)
!6842 = !DILocation(line: 4442, column: 3, scope: !6840)
!6843 = !DILocation(line: 4443, column: 3, scope: !6840)
!6844 = !DILocation(line: 4443, column: 12, scope: !6840)
!6845 = !DILocation(line: 4443, column: 27, scope: !6840)
!6846 = !DILocation(line: 4444, column: 2, scope: !6840)
!6847 = !DILocation(line: 4445, column: 17, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 4444, column: 10)
!6849 = !DILocation(line: 4445, column: 23, scope: !6848)
!6850 = !DILocation(line: 4445, column: 3, scope: !6848)
!6851 = !DILocation(line: 4446, column: 3, scope: !6848)
!6852 = !DILocation(line: 4446, column: 12, scope: !6848)
!6853 = !DILocation(line: 4446, column: 27, scope: !6848)
!6854 = !DILocation(line: 4449, column: 2, scope: !6116)
!6855 = !DILocation(line: 4449, column: 2, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4449, column: 2)
!6857 = !DILocation(line: 4450, column: 2, scope: !6116)
!6858 = !DILocation(line: 4452, column: 2, scope: !6116)
!6859 = !DILocation(line: 4452, column: 11, scope: !6116)
!6860 = !DILocation(line: 4452, column: 19, scope: !6116)
!6861 = !DILocation(line: 4453, column: 2, scope: !6116)
!6862 = !DILocation(line: 4453, column: 11, scope: !6116)
!6863 = !DILocation(line: 4453, column: 17, scope: !6116)
!6864 = !DILocation(line: 4453, column: 25, scope: !6116)
!6865 = !DILocation(line: 4463, column: 46, scope: !6116)
!6866 = !DILocation(line: 4463, column: 25, scope: !6116)
!6867 = !DILocation(line: 4463, column: 2, scope: !6116)
!6868 = !DILocation(line: 4463, column: 11, scope: !6116)
!6869 = !DILocation(line: 4463, column: 23, scope: !6116)
!6870 = !DILocation(line: 4464, column: 6, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4464, column: 6)
!6872 = !DILocation(line: 4464, column: 15, scope: !6871)
!6873 = !DILocation(line: 4464, column: 6, scope: !6116)
!6874 = !DILocation(line: 4465, column: 3, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 4464, column: 28)
!6876 = !DILocation(line: 4468, column: 2, scope: !6875)
!6877 = !DILocation(line: 4471, column: 18, scope: !6116)
!6878 = !DILocation(line: 4471, column: 24, scope: !6116)
!6879 = !DILocation(line: 4471, column: 2, scope: !6116)
!6880 = !DILocation(line: 4473, column: 25, scope: !6116)
!6881 = !DILocation(line: 4473, column: 36, scope: !6116)
!6882 = !DILocation(line: 4473, column: 2, scope: !6116)
!6883 = !DILocation(line: 4475, column: 24, scope: !6116)
!6884 = !DILocation(line: 4475, column: 31, scope: !6116)
!6885 = !DILocation(line: 4475, column: 37, scope: !6116)
!6886 = !DILocation(line: 4475, column: 10, scope: !6116)
!6887 = !DILocation(line: 4475, column: 8, scope: !6116)
!6888 = !DILocation(line: 4476, column: 6, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4476, column: 6)
!6890 = !DILocation(line: 4476, column: 6, scope: !6116)
!6891 = !DILocation(line: 4477, column: 3, scope: !6889)
!6892 = !DILocation(line: 4479, column: 17, scope: !6116)
!6893 = !DILocation(line: 4479, column: 2, scope: !6116)
!6894 = !DILocation(line: 4480, column: 11, scope: !6116)
!6895 = !DILocation(line: 4481, column: 2, scope: !6116)
!6896 = !DILabel(scope: !6116, name: "out_free_mbox", file: !3, line: 4483)
!6897 = !DILocation(line: 4483, column: 2, scope: !6116)
!6898 = !DILocation(line: 4484, column: 21, scope: !6116)
!6899 = !DILocation(line: 4484, column: 30, scope: !6116)
!6900 = !DILocation(line: 4484, column: 35, scope: !6116)
!6901 = !DILocation(line: 4485, column: 6, scope: !6116)
!6902 = !DILocation(line: 4485, column: 15, scope: !6116)
!6903 = !DILocation(line: 4485, column: 27, scope: !6116)
!6904 = !DILocation(line: 4485, column: 36, scope: !6116)
!6905 = !DILocation(line: 4484, column: 2, scope: !6116)
!6906 = !DILabel(scope: !6116, name: "out_free_irq", file: !3, line: 4486)
!6907 = !DILocation(line: 4486, column: 2, scope: !6116)
!6908 = !DILocation(line: 4487, column: 11, scope: !6116)
!6909 = !DILocation(line: 4487, column: 20, scope: !6116)
!6910 = !DILocation(line: 4487, column: 26, scope: !6116)
!6911 = !DILocation(line: 4487, column: 31, scope: !6116)
!6912 = !DILocation(line: 4487, column: 2, scope: !6116)
!6913 = !DILabel(scope: !6116, name: "out_free_scb_list", file: !3, line: 4488)
!6914 = !DILocation(line: 4488, column: 2, scope: !6116)
!6915 = !DILocation(line: 4489, column: 8, scope: !6116)
!6916 = !DILocation(line: 4489, column: 17, scope: !6116)
!6917 = !DILocation(line: 4489, column: 2, scope: !6116)
!6918 = !DILabel(scope: !6116, name: "out_free_cmd_buffer", file: !3, line: 4490)
!6919 = !DILocation(line: 4490, column: 2, scope: !6116)
!6920 = !DILocation(line: 4491, column: 21, scope: !6116)
!6921 = !DILocation(line: 4491, column: 30, scope: !6116)
!6922 = !DILocation(line: 4491, column: 35, scope: !6116)
!6923 = !DILocation(line: 4492, column: 6, scope: !6116)
!6924 = !DILocation(line: 4492, column: 15, scope: !6116)
!6925 = !DILocation(line: 4492, column: 28, scope: !6116)
!6926 = !DILocation(line: 4492, column: 37, scope: !6116)
!6927 = !DILocation(line: 4491, column: 2, scope: !6116)
!6928 = !DILabel(scope: !6116, name: "out_host_put", file: !3, line: 4493)
!6929 = !DILocation(line: 4493, column: 2, scope: !6116)
!6930 = !DILocation(line: 4494, column: 16, scope: !6116)
!6931 = !DILocation(line: 4494, column: 2, scope: !6116)
!6932 = !DILabel(scope: !6116, name: "out_iounmap", file: !3, line: 4495)
!6933 = !DILocation(line: 4495, column: 2, scope: !6116)
!6934 = !DILocation(line: 4496, column: 6, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4496, column: 6)
!6936 = !DILocation(line: 4496, column: 11, scope: !6935)
!6937 = !DILocation(line: 4496, column: 6, scope: !6116)
!6938 = !DILocation(line: 4497, column: 19, scope: !6935)
!6939 = !DILocation(line: 4497, column: 11, scope: !6935)
!6940 = !DILocation(line: 4497, column: 3, scope: !6935)
!6941 = !DILocation(line: 4496, column: 13, scope: !6935)
!6942 = !DILabel(scope: !6116, name: "out_release_region", file: !3, line: 4498)
!6943 = !DILocation(line: 4498, column: 2, scope: !6116)
!6944 = !DILocation(line: 4499, column: 6, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4499, column: 6)
!6946 = !DILocation(line: 4499, column: 11, scope: !6945)
!6947 = !DILocation(line: 4499, column: 6, scope: !6116)
!6948 = !DILocation(line: 4500, column: 3, scope: !6945)
!6949 = !DILocation(line: 4502, column: 3, scope: !6945)
!6950 = !DILocation(line: 4499, column: 13, scope: !6945)
!6951 = !DILabel(scope: !6116, name: "out_disable_device", file: !3, line: 4503)
!6952 = !DILocation(line: 4503, column: 2, scope: !6116)
!6953 = !DILocation(line: 4504, column: 21, scope: !6116)
!6954 = !DILocation(line: 4504, column: 2, scope: !6116)
!6955 = !DILabel(scope: !6116, name: "out", file: !3, line: 4505)
!6956 = !DILocation(line: 4505, column: 2, scope: !6116)
!6957 = !DILocation(line: 4506, column: 9, scope: !6116)
!6958 = !DILocation(line: 4506, column: 2, scope: !6116)
!6959 = !DILocation(line: 4507, column: 1, scope: !6116)
!6960 = distinct !DISubprogram(name: "megaraid_remove_one", scope: !3, file: !3, line: 4544, type: !4973, scopeLine: 4545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6961 = !DILocalVariable(name: "pdev", arg: 1, scope: !6960, file: !3, line: 4544, type: !253)
!6962 = !DILocation(line: 4544, column: 37, scope: !6960)
!6963 = !DILocalVariable(name: "host", scope: !6960, file: !3, line: 4546, type: !5121)
!6964 = !DILocation(line: 4546, column: 20, scope: !6960)
!6965 = !DILocation(line: 4546, column: 43, scope: !6960)
!6966 = !DILocation(line: 4546, column: 27, scope: !6960)
!6967 = !DILocalVariable(name: "adapter", scope: !6960, file: !3, line: 4547, type: !182)
!6968 = !DILocation(line: 4547, column: 13, scope: !6960)
!6969 = !DILocation(line: 4547, column: 36, scope: !6960)
!6970 = !DILocation(line: 4547, column: 42, scope: !6960)
!6971 = !DILocation(line: 4547, column: 23, scope: !6960)
!6972 = !DILocalVariable(name: "buf", scope: !6960, file: !3, line: 4548, type: !6973)
!6973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 96, elements: !3389)
!6974 = !DILocation(line: 4548, column: 7, scope: !6960)
!6975 = !DILocation(line: 4550, column: 19, scope: !6960)
!6976 = !DILocation(line: 4550, column: 2, scope: !6960)
!6977 = !DILocation(line: 4552, column: 22, scope: !6960)
!6978 = !DILocation(line: 4552, column: 2, scope: !6960)
!6979 = !DILocation(line: 4555, column: 6, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 4555, column: 6)
!6981 = !DILocation(line: 4555, column: 15, scope: !6980)
!6982 = !DILocation(line: 4555, column: 20, scope: !6980)
!6983 = !DILocation(line: 4555, column: 6, scope: !6960)
!6984 = !DILocation(line: 4556, column: 19, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6980, file: !3, line: 4555, column: 36)
!6986 = !DILocation(line: 4556, column: 28, scope: !6985)
!6987 = !DILocation(line: 4556, column: 11, scope: !6985)
!6988 = !DILocation(line: 4556, column: 3, scope: !6985)
!6989 = !DILocation(line: 4557, column: 3, scope: !6985)
!6990 = !DILocation(line: 4558, column: 2, scope: !6985)
!6991 = !DILocation(line: 4559, column: 3, scope: !6980)
!6992 = !DILocation(line: 4561, column: 16, scope: !6960)
!6993 = !DILocation(line: 4561, column: 2, scope: !6960)
!6994 = !DILocation(line: 4563, column: 10, scope: !6960)
!6995 = !DILocation(line: 4563, column: 24, scope: !6960)
!6996 = !DILocation(line: 4563, column: 33, scope: !6960)
!6997 = !DILocation(line: 4563, column: 39, scope: !6960)
!6998 = !DILocation(line: 4563, column: 2, scope: !6960)
!6999 = !DILocation(line: 4564, column: 22, scope: !6960)
!7000 = !DILocation(line: 4564, column: 27, scope: !6960)
!7001 = !DILocation(line: 4564, column: 2, scope: !6960)
!7002 = !DILocation(line: 4566, column: 21, scope: !6960)
!7003 = !DILocation(line: 4566, column: 30, scope: !6960)
!7004 = !DILocation(line: 4566, column: 35, scope: !6960)
!7005 = !DILocation(line: 4567, column: 6, scope: !6960)
!7006 = !DILocation(line: 4567, column: 15, scope: !6960)
!7007 = !DILocation(line: 4567, column: 28, scope: !6960)
!7008 = !DILocation(line: 4567, column: 37, scope: !6960)
!7009 = !DILocation(line: 4566, column: 2, scope: !6960)
!7010 = !DILocation(line: 4568, column: 8, scope: !6960)
!7011 = !DILocation(line: 4568, column: 17, scope: !6960)
!7012 = !DILocation(line: 4568, column: 2, scope: !6960)
!7013 = !DILocation(line: 4569, column: 21, scope: !6960)
!7014 = !DILocation(line: 4569, column: 30, scope: !6960)
!7015 = !DILocation(line: 4569, column: 35, scope: !6960)
!7016 = !DILocation(line: 4570, column: 6, scope: !6960)
!7017 = !DILocation(line: 4570, column: 15, scope: !6960)
!7018 = !DILocation(line: 4570, column: 27, scope: !6960)
!7019 = !DILocation(line: 4570, column: 36, scope: !6960)
!7020 = !DILocation(line: 4569, column: 2, scope: !6960)
!7021 = !DILocation(line: 4572, column: 16, scope: !6960)
!7022 = !DILocation(line: 4572, column: 2, scope: !6960)
!7023 = !DILocation(line: 4573, column: 21, scope: !6960)
!7024 = !DILocation(line: 4573, column: 2, scope: !6960)
!7025 = !DILocation(line: 4575, column: 11, scope: !6960)
!7026 = !DILocation(line: 4576, column: 1, scope: !6960)
!7027 = distinct !DISubprogram(name: "megaraid_shutdown", scope: !3, file: !3, line: 4579, type: !4973, scopeLine: 4580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7028 = !DILocalVariable(name: "pdev", arg: 1, scope: !7027, file: !3, line: 4579, type: !253)
!7029 = !DILocation(line: 4579, column: 35, scope: !7027)
!7030 = !DILocalVariable(name: "host", scope: !7027, file: !3, line: 4581, type: !5121)
!7031 = !DILocation(line: 4581, column: 20, scope: !7027)
!7032 = !DILocation(line: 4581, column: 43, scope: !7027)
!7033 = !DILocation(line: 4581, column: 27, scope: !7027)
!7034 = !DILocalVariable(name: "adapter", scope: !7027, file: !3, line: 4582, type: !182)
!7035 = !DILocation(line: 4582, column: 13, scope: !7027)
!7036 = !DILocation(line: 4582, column: 36, scope: !7027)
!7037 = !DILocation(line: 4582, column: 42, scope: !7027)
!7038 = !DILocation(line: 4582, column: 23, scope: !7027)
!7039 = !DILocation(line: 4584, column: 22, scope: !7027)
!7040 = !DILocation(line: 4584, column: 2, scope: !7027)
!7041 = !DILocation(line: 4585, column: 1, scope: !7027)
!7042 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !7043, file: !7043, line: 33, type: !7044, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7043 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!7044 = !DISubroutineType(types: !7045)
!7045 = !{null, !261}
!7046 = !DILocalVariable(name: "list", arg: 1, scope: !7042, file: !7043, line: 33, type: !261)
!7047 = !DILocation(line: 33, column: 53, scope: !7042)
!7048 = !DILocation(line: 35, column: 2, scope: !7042)
!7049 = !DILocation(line: 35, column: 2, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7042, file: !7043, line: 35, column: 2)
!7051 = !DILocation(line: 35, column: 2, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7050, file: !7043, line: 35, column: 2)
!7053 = !DILocation(line: 35, column: 2, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7050, file: !7043, line: 35, column: 2)
!7055 = !DILocation(line: 36, column: 15, scope: !7042)
!7056 = !DILocation(line: 36, column: 2, scope: !7042)
!7057 = !DILocation(line: 36, column: 8, scope: !7042)
!7058 = !DILocation(line: 36, column: 13, scope: !7042)
!7059 = !DILocation(line: 37, column: 1, scope: !7042)
!7060 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !6126, file: !6126, line: 392, type: !7061, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7061 = !DISubroutineType(types: !7062)
!7062 = !{!197, !341, !445, !7063, !910}
!7063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!7064 = !DILocalVariable(name: "dev", arg: 1, scope: !7060, file: !6126, line: 392, type: !341)
!7065 = !DILocation(line: 392, column: 55, scope: !7060)
!7066 = !DILocalVariable(name: "size", arg: 2, scope: !7060, file: !6126, line: 392, type: !445)
!7067 = !DILocation(line: 392, column: 67, scope: !7060)
!7068 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !7060, file: !6126, line: 393, type: !7063)
!7069 = !DILocation(line: 393, column: 15, scope: !7060)
!7070 = !DILocalVariable(name: "gfp", arg: 4, scope: !7060, file: !6126, line: 393, type: !910)
!7071 = !DILocation(line: 393, column: 33, scope: !7060)
!7072 = !DILocation(line: 396, column: 25, scope: !7060)
!7073 = !DILocation(line: 396, column: 30, scope: !7060)
!7074 = !DILocation(line: 396, column: 36, scope: !7060)
!7075 = !DILocation(line: 396, column: 48, scope: !7060)
!7076 = !DILocation(line: 397, column: 5, scope: !7060)
!7077 = !DILocation(line: 397, column: 9, scope: !7060)
!7078 = !DILocation(line: 397, column: 4, scope: !7060)
!7079 = !DILocation(line: 396, column: 9, scope: !7060)
!7080 = !DILocation(line: 396, column: 2, scope: !7060)
!7081 = distinct !DISubprogram(name: "kmalloc_array", scope: !169, file: !169, line: 584, type: !7082, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7082 = !DISubroutineType(types: !7083)
!7083 = !{!197, !445, !445, !910}
!7084 = !DILocalVariable(name: "s", arg: 1, scope: !7085, file: !169, line: 445, type: !1116)
!7085 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !169, file: !169, line: 445, type: !7086, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7086 = !DISubroutineType(types: !7087)
!7087 = !{!197, !1116, !910, !445}
!7088 = !DILocation(line: 445, column: 72, scope: !7085, inlinedAt: !7089)
!7089 = distinct !DILocation(line: 552, column: 10, scope: !7090, inlinedAt: !7095)
!7090 = distinct !DILexicalBlock(scope: !7091, file: !169, line: 540, column: 34)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !169, line: 540, column: 6)
!7092 = distinct !DISubprogram(name: "kmalloc", scope: !169, file: !169, line: 538, type: !7093, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7093 = !DISubroutineType(types: !7094)
!7094 = !{!197, !445, !910}
!7095 = distinct !DILocation(line: 591, column: 10, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7081, file: !169, line: 590, column: 6)
!7097 = !DILocalVariable(name: "flags", arg: 2, scope: !7085, file: !169, line: 446, type: !910)
!7098 = !DILocation(line: 446, column: 9, scope: !7085, inlinedAt: !7089)
!7099 = !DILocalVariable(name: "size", arg: 3, scope: !7085, file: !169, line: 446, type: !445)
!7100 = !DILocation(line: 446, column: 23, scope: !7085, inlinedAt: !7089)
!7101 = !DILocalVariable(name: "ret", scope: !7085, file: !169, line: 448, type: !197)
!7102 = !DILocation(line: 448, column: 8, scope: !7085, inlinedAt: !7089)
!7103 = !DILocalVariable(name: "flags", arg: 1, scope: !7104, file: !169, line: 318, type: !910)
!7104 = distinct !DISubprogram(name: "kmalloc_type", scope: !169, file: !169, line: 318, type: !7105, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7105 = !DISubroutineType(types: !7106)
!7106 = !{!168, !910}
!7107 = !DILocation(line: 318, column: 67, scope: !7104, inlinedAt: !7108)
!7108 = distinct !DILocation(line: 553, column: 20, scope: !7090, inlinedAt: !7095)
!7109 = !DILocalVariable(name: "size", arg: 1, scope: !7110, file: !169, line: 346, type: !445)
!7110 = distinct !DISubprogram(name: "kmalloc_index", scope: !169, file: !169, line: 346, type: !7111, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7111 = !DISubroutineType(types: !7112)
!7112 = !{!7, !445}
!7113 = !DILocation(line: 346, column: 58, scope: !7110, inlinedAt: !7114)
!7114 = distinct !DILocation(line: 547, column: 11, scope: !7090, inlinedAt: !7095)
!7115 = !DILocalVariable(name: "size", arg: 1, scope: !7116, file: !169, line: 472, type: !445)
!7116 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !169, file: !169, line: 472, type: !7117, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7117 = !DISubroutineType(types: !7118)
!7118 = !{!197, !445, !910, !7}
!7119 = !DILocation(line: 472, column: 28, scope: !7116, inlinedAt: !7120)
!7120 = distinct !DILocation(line: 481, column: 9, scope: !7121, inlinedAt: !7122)
!7121 = distinct !DISubprogram(name: "kmalloc_large", scope: !169, file: !169, line: 478, type: !7093, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7122 = distinct !DILocation(line: 545, column: 11, scope: !7123, inlinedAt: !7095)
!7123 = distinct !DILexicalBlock(scope: !7090, file: !169, line: 544, column: 7)
!7124 = !DILocalVariable(name: "flags", arg: 2, scope: !7116, file: !169, line: 472, type: !910)
!7125 = !DILocation(line: 472, column: 40, scope: !7116, inlinedAt: !7120)
!7126 = !DILocalVariable(name: "order", arg: 3, scope: !7116, file: !169, line: 472, type: !7)
!7127 = !DILocation(line: 472, column: 60, scope: !7116, inlinedAt: !7120)
!7128 = !DILocalVariable(name: "size", arg: 1, scope: !7121, file: !169, line: 478, type: !445)
!7129 = !DILocation(line: 478, column: 51, scope: !7121, inlinedAt: !7122)
!7130 = !DILocalVariable(name: "flags", arg: 2, scope: !7121, file: !169, line: 478, type: !910)
!7131 = !DILocation(line: 478, column: 63, scope: !7121, inlinedAt: !7122)
!7132 = !DILocalVariable(name: "order", scope: !7121, file: !169, line: 480, type: !7)
!7133 = !DILocation(line: 480, column: 15, scope: !7121, inlinedAt: !7122)
!7134 = !DILocalVariable(name: "size", arg: 1, scope: !7092, file: !169, line: 538, type: !445)
!7135 = !DILocation(line: 538, column: 45, scope: !7092, inlinedAt: !7095)
!7136 = !DILocalVariable(name: "flags", arg: 2, scope: !7092, file: !169, line: 538, type: !910)
!7137 = !DILocation(line: 538, column: 57, scope: !7092, inlinedAt: !7095)
!7138 = !DILocalVariable(name: "index", scope: !7090, file: !169, line: 542, type: !7)
!7139 = !DILocation(line: 542, column: 16, scope: !7090, inlinedAt: !7095)
!7140 = !DILocalVariable(name: "n", arg: 1, scope: !7081, file: !169, line: 584, type: !445)
!7141 = !DILocation(line: 584, column: 42, scope: !7081)
!7142 = !DILocalVariable(name: "size", arg: 2, scope: !7081, file: !169, line: 584, type: !445)
!7143 = !DILocation(line: 584, column: 52, scope: !7081)
!7144 = !DILocalVariable(name: "flags", arg: 3, scope: !7081, file: !169, line: 584, type: !910)
!7145 = !DILocation(line: 584, column: 64, scope: !7081)
!7146 = !DILocalVariable(name: "bytes", scope: !7081, file: !169, line: 586, type: !445)
!7147 = !DILocation(line: 586, column: 9, scope: !7081)
!7148 = !DILocalVariable(name: "__a", scope: !7149, file: !169, line: 588, type: !445)
!7149 = distinct !DILexicalBlock(scope: !7150, file: !169, line: 588, column: 6)
!7150 = distinct !DILexicalBlock(scope: !7081, file: !169, line: 588, column: 6)
!7151 = !DILocation(line: 588, column: 6, scope: !7149)
!7152 = !DILocalVariable(name: "__b", scope: !7149, file: !169, line: 588, type: !445)
!7153 = !DILocalVariable(name: "__d", scope: !7149, file: !169, line: 588, type: !7154)
!7154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!7155 = !DILocation(line: 588, column: 6, scope: !7150)
!7156 = !DILocation(line: 588, column: 6, scope: !7081)
!7157 = !DILocation(line: 589, column: 3, scope: !7150)
!7158 = !DILocation(line: 590, column: 27, scope: !7096)
!7159 = !DILocation(line: 590, column: 6, scope: !7096)
!7160 = !DILocation(line: 590, column: 30, scope: !7096)
!7161 = !DILocation(line: 590, column: 54, scope: !7096)
!7162 = !DILocation(line: 590, column: 33, scope: !7096)
!7163 = !DILocation(line: 590, column: 6, scope: !7081)
!7164 = !DILocation(line: 591, column: 18, scope: !7096)
!7165 = !DILocation(line: 591, column: 25, scope: !7096)
!7166 = !DILocation(line: 540, column: 27, scope: !7091, inlinedAt: !7095)
!7167 = !DILocation(line: 540, column: 6, scope: !7091, inlinedAt: !7095)
!7168 = !DILocation(line: 540, column: 6, scope: !7092, inlinedAt: !7095)
!7169 = !DILocation(line: 544, column: 7, scope: !7123, inlinedAt: !7095)
!7170 = !DILocation(line: 544, column: 12, scope: !7123, inlinedAt: !7095)
!7171 = !DILocation(line: 544, column: 7, scope: !7090, inlinedAt: !7095)
!7172 = !DILocation(line: 545, column: 25, scope: !7123, inlinedAt: !7095)
!7173 = !DILocation(line: 545, column: 31, scope: !7123, inlinedAt: !7095)
!7174 = !DILocation(line: 480, column: 33, scope: !7121, inlinedAt: !7122)
!7175 = !DILocation(line: 480, column: 23, scope: !7121, inlinedAt: !7122)
!7176 = !DILocation(line: 481, column: 29, scope: !7121, inlinedAt: !7122)
!7177 = !DILocation(line: 481, column: 35, scope: !7121, inlinedAt: !7122)
!7178 = !DILocation(line: 481, column: 42, scope: !7121, inlinedAt: !7122)
!7179 = !DILocation(line: 474, column: 23, scope: !7116, inlinedAt: !7120)
!7180 = !DILocation(line: 474, column: 29, scope: !7116, inlinedAt: !7120)
!7181 = !DILocation(line: 474, column: 36, scope: !7116, inlinedAt: !7120)
!7182 = !DILocation(line: 474, column: 9, scope: !7116, inlinedAt: !7120)
!7183 = !DILocation(line: 545, column: 4, scope: !7123, inlinedAt: !7095)
!7184 = !DILocation(line: 547, column: 25, scope: !7090, inlinedAt: !7095)
!7185 = !DILocation(line: 348, column: 7, scope: !7186, inlinedAt: !7114)
!7186 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 348, column: 6)
!7187 = !DILocation(line: 348, column: 6, scope: !7110, inlinedAt: !7114)
!7188 = !DILocation(line: 349, column: 3, scope: !7186, inlinedAt: !7114)
!7189 = !DILocation(line: 351, column: 6, scope: !7190, inlinedAt: !7114)
!7190 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 351, column: 6)
!7191 = !DILocation(line: 351, column: 11, scope: !7190, inlinedAt: !7114)
!7192 = !DILocation(line: 351, column: 6, scope: !7110, inlinedAt: !7114)
!7193 = !DILocation(line: 352, column: 3, scope: !7190, inlinedAt: !7114)
!7194 = !DILocation(line: 354, column: 32, scope: !7195, inlinedAt: !7114)
!7195 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 354, column: 6)
!7196 = !DILocation(line: 354, column: 37, scope: !7195, inlinedAt: !7114)
!7197 = !DILocation(line: 354, column: 42, scope: !7195, inlinedAt: !7114)
!7198 = !DILocation(line: 354, column: 45, scope: !7195, inlinedAt: !7114)
!7199 = !DILocation(line: 354, column: 50, scope: !7195, inlinedAt: !7114)
!7200 = !DILocation(line: 354, column: 6, scope: !7110, inlinedAt: !7114)
!7201 = !DILocation(line: 355, column: 3, scope: !7195, inlinedAt: !7114)
!7202 = !DILocation(line: 356, column: 32, scope: !7203, inlinedAt: !7114)
!7203 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 356, column: 6)
!7204 = !DILocation(line: 356, column: 37, scope: !7203, inlinedAt: !7114)
!7205 = !DILocation(line: 356, column: 43, scope: !7203, inlinedAt: !7114)
!7206 = !DILocation(line: 356, column: 46, scope: !7203, inlinedAt: !7114)
!7207 = !DILocation(line: 356, column: 51, scope: !7203, inlinedAt: !7114)
!7208 = !DILocation(line: 356, column: 6, scope: !7110, inlinedAt: !7114)
!7209 = !DILocation(line: 357, column: 3, scope: !7203, inlinedAt: !7114)
!7210 = !DILocation(line: 358, column: 6, scope: !7211, inlinedAt: !7114)
!7211 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 358, column: 6)
!7212 = !DILocation(line: 358, column: 11, scope: !7211, inlinedAt: !7114)
!7213 = !DILocation(line: 358, column: 6, scope: !7110, inlinedAt: !7114)
!7214 = !DILocation(line: 358, column: 26, scope: !7211, inlinedAt: !7114)
!7215 = !DILocation(line: 359, column: 6, scope: !7216, inlinedAt: !7114)
!7216 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 359, column: 6)
!7217 = !DILocation(line: 359, column: 11, scope: !7216, inlinedAt: !7114)
!7218 = !DILocation(line: 359, column: 6, scope: !7110, inlinedAt: !7114)
!7219 = !DILocation(line: 359, column: 26, scope: !7216, inlinedAt: !7114)
!7220 = !DILocation(line: 360, column: 6, scope: !7221, inlinedAt: !7114)
!7221 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 360, column: 6)
!7222 = !DILocation(line: 360, column: 11, scope: !7221, inlinedAt: !7114)
!7223 = !DILocation(line: 360, column: 6, scope: !7110, inlinedAt: !7114)
!7224 = !DILocation(line: 360, column: 26, scope: !7221, inlinedAt: !7114)
!7225 = !DILocation(line: 361, column: 6, scope: !7226, inlinedAt: !7114)
!7226 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 361, column: 6)
!7227 = !DILocation(line: 361, column: 11, scope: !7226, inlinedAt: !7114)
!7228 = !DILocation(line: 361, column: 6, scope: !7110, inlinedAt: !7114)
!7229 = !DILocation(line: 361, column: 26, scope: !7226, inlinedAt: !7114)
!7230 = !DILocation(line: 362, column: 6, scope: !7231, inlinedAt: !7114)
!7231 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 362, column: 6)
!7232 = !DILocation(line: 362, column: 11, scope: !7231, inlinedAt: !7114)
!7233 = !DILocation(line: 362, column: 6, scope: !7110, inlinedAt: !7114)
!7234 = !DILocation(line: 362, column: 26, scope: !7231, inlinedAt: !7114)
!7235 = !DILocation(line: 363, column: 6, scope: !7236, inlinedAt: !7114)
!7236 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 363, column: 6)
!7237 = !DILocation(line: 363, column: 11, scope: !7236, inlinedAt: !7114)
!7238 = !DILocation(line: 363, column: 6, scope: !7110, inlinedAt: !7114)
!7239 = !DILocation(line: 363, column: 26, scope: !7236, inlinedAt: !7114)
!7240 = !DILocation(line: 364, column: 6, scope: !7241, inlinedAt: !7114)
!7241 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 364, column: 6)
!7242 = !DILocation(line: 364, column: 11, scope: !7241, inlinedAt: !7114)
!7243 = !DILocation(line: 364, column: 6, scope: !7110, inlinedAt: !7114)
!7244 = !DILocation(line: 364, column: 26, scope: !7241, inlinedAt: !7114)
!7245 = !DILocation(line: 365, column: 6, scope: !7246, inlinedAt: !7114)
!7246 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 365, column: 6)
!7247 = !DILocation(line: 365, column: 11, scope: !7246, inlinedAt: !7114)
!7248 = !DILocation(line: 365, column: 6, scope: !7110, inlinedAt: !7114)
!7249 = !DILocation(line: 365, column: 26, scope: !7246, inlinedAt: !7114)
!7250 = !DILocation(line: 366, column: 6, scope: !7251, inlinedAt: !7114)
!7251 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 366, column: 6)
!7252 = !DILocation(line: 366, column: 11, scope: !7251, inlinedAt: !7114)
!7253 = !DILocation(line: 366, column: 6, scope: !7110, inlinedAt: !7114)
!7254 = !DILocation(line: 366, column: 26, scope: !7251, inlinedAt: !7114)
!7255 = !DILocation(line: 367, column: 6, scope: !7256, inlinedAt: !7114)
!7256 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 367, column: 6)
!7257 = !DILocation(line: 367, column: 11, scope: !7256, inlinedAt: !7114)
!7258 = !DILocation(line: 367, column: 6, scope: !7110, inlinedAt: !7114)
!7259 = !DILocation(line: 367, column: 26, scope: !7256, inlinedAt: !7114)
!7260 = !DILocation(line: 368, column: 6, scope: !7261, inlinedAt: !7114)
!7261 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 368, column: 6)
!7262 = !DILocation(line: 368, column: 11, scope: !7261, inlinedAt: !7114)
!7263 = !DILocation(line: 368, column: 6, scope: !7110, inlinedAt: !7114)
!7264 = !DILocation(line: 368, column: 26, scope: !7261, inlinedAt: !7114)
!7265 = !DILocation(line: 369, column: 6, scope: !7266, inlinedAt: !7114)
!7266 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 369, column: 6)
!7267 = !DILocation(line: 369, column: 11, scope: !7266, inlinedAt: !7114)
!7268 = !DILocation(line: 369, column: 6, scope: !7110, inlinedAt: !7114)
!7269 = !DILocation(line: 369, column: 26, scope: !7266, inlinedAt: !7114)
!7270 = !DILocation(line: 370, column: 6, scope: !7271, inlinedAt: !7114)
!7271 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 370, column: 6)
!7272 = !DILocation(line: 370, column: 11, scope: !7271, inlinedAt: !7114)
!7273 = !DILocation(line: 370, column: 6, scope: !7110, inlinedAt: !7114)
!7274 = !DILocation(line: 370, column: 26, scope: !7271, inlinedAt: !7114)
!7275 = !DILocation(line: 371, column: 6, scope: !7276, inlinedAt: !7114)
!7276 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 371, column: 6)
!7277 = !DILocation(line: 371, column: 11, scope: !7276, inlinedAt: !7114)
!7278 = !DILocation(line: 371, column: 6, scope: !7110, inlinedAt: !7114)
!7279 = !DILocation(line: 371, column: 26, scope: !7276, inlinedAt: !7114)
!7280 = !DILocation(line: 372, column: 6, scope: !7281, inlinedAt: !7114)
!7281 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 372, column: 6)
!7282 = !DILocation(line: 372, column: 11, scope: !7281, inlinedAt: !7114)
!7283 = !DILocation(line: 372, column: 6, scope: !7110, inlinedAt: !7114)
!7284 = !DILocation(line: 372, column: 26, scope: !7281, inlinedAt: !7114)
!7285 = !DILocation(line: 373, column: 6, scope: !7286, inlinedAt: !7114)
!7286 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 373, column: 6)
!7287 = !DILocation(line: 373, column: 11, scope: !7286, inlinedAt: !7114)
!7288 = !DILocation(line: 373, column: 6, scope: !7110, inlinedAt: !7114)
!7289 = !DILocation(line: 373, column: 26, scope: !7286, inlinedAt: !7114)
!7290 = !DILocation(line: 374, column: 6, scope: !7291, inlinedAt: !7114)
!7291 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 374, column: 6)
!7292 = !DILocation(line: 374, column: 11, scope: !7291, inlinedAt: !7114)
!7293 = !DILocation(line: 374, column: 6, scope: !7110, inlinedAt: !7114)
!7294 = !DILocation(line: 374, column: 26, scope: !7291, inlinedAt: !7114)
!7295 = !DILocation(line: 375, column: 6, scope: !7296, inlinedAt: !7114)
!7296 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 375, column: 6)
!7297 = !DILocation(line: 375, column: 11, scope: !7296, inlinedAt: !7114)
!7298 = !DILocation(line: 375, column: 6, scope: !7110, inlinedAt: !7114)
!7299 = !DILocation(line: 375, column: 27, scope: !7296, inlinedAt: !7114)
!7300 = !DILocation(line: 376, column: 6, scope: !7301, inlinedAt: !7114)
!7301 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 376, column: 6)
!7302 = !DILocation(line: 376, column: 11, scope: !7301, inlinedAt: !7114)
!7303 = !DILocation(line: 376, column: 6, scope: !7110, inlinedAt: !7114)
!7304 = !DILocation(line: 376, column: 32, scope: !7301, inlinedAt: !7114)
!7305 = !DILocation(line: 377, column: 6, scope: !7306, inlinedAt: !7114)
!7306 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 377, column: 6)
!7307 = !DILocation(line: 377, column: 11, scope: !7306, inlinedAt: !7114)
!7308 = !DILocation(line: 377, column: 6, scope: !7110, inlinedAt: !7114)
!7309 = !DILocation(line: 377, column: 32, scope: !7306, inlinedAt: !7114)
!7310 = !DILocation(line: 378, column: 6, scope: !7311, inlinedAt: !7114)
!7311 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 378, column: 6)
!7312 = !DILocation(line: 378, column: 11, scope: !7311, inlinedAt: !7114)
!7313 = !DILocation(line: 378, column: 6, scope: !7110, inlinedAt: !7114)
!7314 = !DILocation(line: 378, column: 32, scope: !7311, inlinedAt: !7114)
!7315 = !DILocation(line: 379, column: 6, scope: !7316, inlinedAt: !7114)
!7316 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 379, column: 6)
!7317 = !DILocation(line: 379, column: 11, scope: !7316, inlinedAt: !7114)
!7318 = !DILocation(line: 379, column: 6, scope: !7110, inlinedAt: !7114)
!7319 = !DILocation(line: 379, column: 33, scope: !7316, inlinedAt: !7114)
!7320 = !DILocation(line: 380, column: 6, scope: !7321, inlinedAt: !7114)
!7321 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 380, column: 6)
!7322 = !DILocation(line: 380, column: 11, scope: !7321, inlinedAt: !7114)
!7323 = !DILocation(line: 380, column: 6, scope: !7110, inlinedAt: !7114)
!7324 = !DILocation(line: 380, column: 33, scope: !7321, inlinedAt: !7114)
!7325 = !DILocation(line: 381, column: 6, scope: !7326, inlinedAt: !7114)
!7326 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 381, column: 6)
!7327 = !DILocation(line: 381, column: 11, scope: !7326, inlinedAt: !7114)
!7328 = !DILocation(line: 381, column: 6, scope: !7110, inlinedAt: !7114)
!7329 = !DILocation(line: 381, column: 33, scope: !7326, inlinedAt: !7114)
!7330 = !DILocation(line: 382, column: 2, scope: !7331, inlinedAt: !7114)
!7331 = distinct !DILexicalBlock(scope: !7332, file: !169, line: 382, column: 2)
!7332 = distinct !DILexicalBlock(scope: !7110, file: !169, line: 382, column: 2)
!7333 = !{i32 -2142498853, i32 -2142498824, i32 -2142498778, i32 -2142498720, i32 -2142498666, i32 -2142498612, i32 -2142498557, i32 -2142498526}
!7334 = !DILocation(line: 382, column: 2, scope: !7335, inlinedAt: !7114)
!7335 = distinct !DILexicalBlock(scope: !7336, file: !169, line: 382, column: 2)
!7336 = distinct !DILexicalBlock(scope: !7332, file: !169, line: 382, column: 2)
!7337 = !{i32 -2142498083, i32 -2142498076, i32 -2142498022, i32 -2142497991, i32 -2142497961}
!7338 = !DILocation(line: 382, column: 2, scope: !7336, inlinedAt: !7114)
!7339 = !DILocation(line: 386, column: 1, scope: !7110, inlinedAt: !7114)
!7340 = !DILocation(line: 547, column: 9, scope: !7090, inlinedAt: !7095)
!7341 = !DILocation(line: 549, column: 8, scope: !7342, inlinedAt: !7095)
!7342 = distinct !DILexicalBlock(scope: !7090, file: !169, line: 549, column: 7)
!7343 = !DILocation(line: 549, column: 7, scope: !7090, inlinedAt: !7095)
!7344 = !DILocation(line: 550, column: 4, scope: !7342, inlinedAt: !7095)
!7345 = !DILocation(line: 553, column: 33, scope: !7090, inlinedAt: !7095)
!7346 = !DILocation(line: 325, column: 6, scope: !7347, inlinedAt: !7108)
!7347 = distinct !DILexicalBlock(scope: !7104, file: !169, line: 325, column: 6)
!7348 = !DILocation(line: 325, column: 6, scope: !7104, inlinedAt: !7108)
!7349 = !DILocation(line: 326, column: 3, scope: !7347, inlinedAt: !7108)
!7350 = !DILocation(line: 332, column: 9, scope: !7104, inlinedAt: !7108)
!7351 = !DILocation(line: 332, column: 15, scope: !7104, inlinedAt: !7108)
!7352 = !DILocation(line: 332, column: 2, scope: !7104, inlinedAt: !7108)
!7353 = !DILocation(line: 336, column: 1, scope: !7104, inlinedAt: !7108)
!7354 = !DILocation(line: 553, column: 5, scope: !7090, inlinedAt: !7095)
!7355 = !DILocation(line: 553, column: 41, scope: !7090, inlinedAt: !7095)
!7356 = !DILocation(line: 554, column: 5, scope: !7090, inlinedAt: !7095)
!7357 = !DILocation(line: 554, column: 12, scope: !7090, inlinedAt: !7095)
!7358 = !DILocation(line: 448, column: 31, scope: !7085, inlinedAt: !7089)
!7359 = !DILocation(line: 448, column: 34, scope: !7085, inlinedAt: !7089)
!7360 = !DILocation(line: 448, column: 14, scope: !7085, inlinedAt: !7089)
!7361 = !DILocation(line: 450, column: 22, scope: !7085, inlinedAt: !7089)
!7362 = !DILocation(line: 450, column: 25, scope: !7085, inlinedAt: !7089)
!7363 = !DILocation(line: 450, column: 30, scope: !7085, inlinedAt: !7089)
!7364 = !DILocation(line: 450, column: 36, scope: !7085, inlinedAt: !7089)
!7365 = !DILocation(line: 450, column: 8, scope: !7085, inlinedAt: !7089)
!7366 = !DILocation(line: 450, column: 6, scope: !7085, inlinedAt: !7089)
!7367 = !DILocation(line: 451, column: 9, scope: !7085, inlinedAt: !7089)
!7368 = !DILocation(line: 552, column: 3, scope: !7090, inlinedAt: !7095)
!7369 = !DILocation(line: 557, column: 19, scope: !7092, inlinedAt: !7095)
!7370 = !DILocation(line: 557, column: 25, scope: !7092, inlinedAt: !7095)
!7371 = !DILocation(line: 557, column: 9, scope: !7092, inlinedAt: !7095)
!7372 = !DILocation(line: 557, column: 2, scope: !7092, inlinedAt: !7095)
!7373 = !DILocation(line: 558, column: 1, scope: !7092, inlinedAt: !7095)
!7374 = !DILocation(line: 591, column: 3, scope: !7096)
!7375 = !DILocation(line: 592, column: 19, scope: !7081)
!7376 = !DILocation(line: 592, column: 26, scope: !7081)
!7377 = !DILocation(line: 592, column: 9, scope: !7081)
!7378 = !DILocation(line: 592, column: 2, scope: !7081)
!7379 = !DILocation(line: 593, column: 1, scope: !7081)
!7380 = distinct !DISubprogram(name: "request_irq", scope: !7381, file: !7381, line: 157, type: !7382, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7381 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!7382 = !DISubroutineType(types: !7383)
!7383 = !{!188, !7, !7384, !195, !284, !197}
!7384 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !7381, line: 92, baseType: !7385)
!7385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7386, size: 64)
!7386 = !DISubroutineType(types: !7387)
!7387 = !{!7388, !188, !197}
!7388 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !176, line: 17, baseType: !175)
!7389 = !DILocalVariable(name: "irq", arg: 1, scope: !7380, file: !7381, line: 157, type: !7)
!7390 = !DILocation(line: 157, column: 26, scope: !7380)
!7391 = !DILocalVariable(name: "handler", arg: 2, scope: !7380, file: !7381, line: 157, type: !7384)
!7392 = !DILocation(line: 157, column: 45, scope: !7380)
!7393 = !DILocalVariable(name: "flags", arg: 3, scope: !7380, file: !7381, line: 157, type: !195)
!7394 = !DILocation(line: 157, column: 68, scope: !7380)
!7395 = !DILocalVariable(name: "name", arg: 4, scope: !7380, file: !7381, line: 158, type: !284)
!7396 = !DILocation(line: 158, column: 18, scope: !7380)
!7397 = !DILocalVariable(name: "dev", arg: 5, scope: !7380, file: !7381, line: 158, type: !197)
!7398 = !DILocation(line: 158, column: 30, scope: !7380)
!7399 = !DILocation(line: 160, column: 30, scope: !7380)
!7400 = !DILocation(line: 160, column: 35, scope: !7380)
!7401 = !DILocation(line: 160, column: 50, scope: !7380)
!7402 = !DILocation(line: 160, column: 57, scope: !7380)
!7403 = !DILocation(line: 160, column: 63, scope: !7380)
!7404 = !DILocation(line: 160, column: 9, scope: !7380)
!7405 = !DILocation(line: 160, column: 2, scope: !7380)
!7406 = distinct !DISubprogram(name: "megaraid_isr_memmapped", scope: !3, file: !3, line: 1338, type: !7386, scopeLine: 1339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7407 = !DILocalVariable(name: "v", arg: 1, scope: !7408, file: !6267, line: 23, type: !7411)
!7408 = distinct !DISubprogram(name: "arch_atomic_read", scope: !6267, file: !6267, line: 23, type: !7409, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7409 = !DISubroutineType(types: !7410)
!7410 = !{!188, !7411}
!7411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7412, size: 64)
!7412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !914)
!7413 = !DILocation(line: 23, column: 61, scope: !7408, inlinedAt: !7414)
!7414 = distinct !DILocation(line: 28, column: 9, scope: !7415, inlinedAt: !7416)
!7415 = distinct !DISubprogram(name: "atomic_read", scope: !6274, file: !6274, line: 25, type: !7409, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7416 = distinct !DILocation(line: 1394, column: 6, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 1394, column: 6)
!7418 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 1354, column: 5)
!7419 = !DILocalVariable(name: "v", arg: 1, scope: !7420, file: !6280, line: 69, type: !6283)
!7420 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !6280, file: !6280, line: 69, type: !6281, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7421 = !DILocation(line: 69, column: 73, scope: !7420, inlinedAt: !7422)
!7422 = distinct !DILocation(line: 27, column: 2, scope: !7415, inlinedAt: !7416)
!7423 = !DILocalVariable(name: "size", arg: 2, scope: !7420, file: !6280, line: 69, type: !445)
!7424 = !DILocation(line: 69, column: 83, scope: !7420, inlinedAt: !7422)
!7425 = !DILocalVariable(name: "v", arg: 1, scope: !7415, file: !6274, line: 25, type: !7411)
!7426 = !DILocation(line: 25, column: 29, scope: !7415, inlinedAt: !7416)
!7427 = !DILocalVariable(name: "i", arg: 1, scope: !7428, file: !6267, line: 65, type: !188)
!7428 = distinct !DISubprogram(name: "arch_atomic_sub", scope: !6267, file: !6267, line: 65, type: !7429, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7429 = !DISubroutineType(types: !7430)
!7430 = !{null, !188, !6270}
!7431 = !DILocation(line: 65, column: 49, scope: !7428, inlinedAt: !7432)
!7432 = distinct !DILocation(line: 152, column: 2, scope: !7433, inlinedAt: !7434)
!7433 = distinct !DISubprogram(name: "atomic_sub", scope: !6274, file: !6274, line: 149, type: !7429, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7434 = distinct !DILocation(line: 1376, column: 3, scope: !7418)
!7435 = !DILocalVariable(name: "v", arg: 2, scope: !7428, file: !6267, line: 65, type: !6270)
!7436 = !DILocation(line: 65, column: 62, scope: !7428, inlinedAt: !7432)
!7437 = !DILocalVariable(name: "v", arg: 1, scope: !7438, file: !6280, line: 99, type: !6283)
!7438 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !6280, file: !6280, line: 99, type: !6281, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7439 = !DILocation(line: 99, column: 79, scope: !7438, inlinedAt: !7440)
!7440 = distinct !DILocation(line: 151, column: 2, scope: !7433, inlinedAt: !7434)
!7441 = !DILocalVariable(name: "size", arg: 2, scope: !7438, file: !6280, line: 99, type: !445)
!7442 = !DILocation(line: 99, column: 89, scope: !7438, inlinedAt: !7440)
!7443 = !DILocalVariable(name: "i", arg: 1, scope: !7433, file: !6274, line: 149, type: !188)
!7444 = !DILocation(line: 149, column: 16, scope: !7433, inlinedAt: !7434)
!7445 = !DILocalVariable(name: "v", arg: 2, scope: !7433, file: !6274, line: 149, type: !6270)
!7446 = !DILocation(line: 149, column: 29, scope: !7433, inlinedAt: !7434)
!7447 = !DILocalVariable(name: "lock", arg: 1, scope: !7448, file: !6305, line: 407, type: !1246)
!7448 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !6305, file: !6305, line: 407, type: !7449, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7449 = !DISubroutineType(types: !7450)
!7450 = !{null, !1246, !195}
!7451 = !DILocation(line: 407, column: 64, scope: !7448, inlinedAt: !7452)
!7452 = distinct !DILocation(line: 1402, column: 2, scope: !7406)
!7453 = !DILocalVariable(name: "flags", arg: 2, scope: !7448, file: !6305, line: 407, type: !195)
!7454 = !DILocation(line: 407, column: 84, scope: !7448, inlinedAt: !7452)
!7455 = !DILocation(line: 327, column: 67, scope: !6304, inlinedAt: !7456)
!7456 = distinct !DILocation(line: 1352, column: 2, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 1352, column: 2)
!7458 = distinct !DILexicalBlock(scope: !7459, file: !3, line: 1352, column: 2)
!7459 = distinct !DILexicalBlock(scope: !7460, file: !3, line: 1352, column: 2)
!7460 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 1352, column: 2)
!7461 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 1352, column: 2)
!7462 = !DILocalVariable(name: "irq", arg: 1, scope: !7406, file: !3, line: 1338, type: !188)
!7463 = !DILocation(line: 1338, column: 28, scope: !7406)
!7464 = !DILocalVariable(name: "devp", arg: 2, scope: !7406, file: !3, line: 1338, type: !197)
!7465 = !DILocation(line: 1338, column: 39, scope: !7406)
!7466 = !DILocalVariable(name: "adapter", scope: !7406, file: !3, line: 1340, type: !182)
!7467 = !DILocation(line: 1340, column: 13, scope: !7406)
!7468 = !DILocation(line: 1340, column: 23, scope: !7406)
!7469 = !DILocalVariable(name: "flags", scope: !7406, file: !3, line: 1341, type: !195)
!7470 = !DILocation(line: 1341, column: 16, scope: !7406)
!7471 = !DILocalVariable(name: "status", scope: !7406, file: !3, line: 1342, type: !213)
!7472 = !DILocation(line: 1342, column: 5, scope: !7406)
!7473 = !DILocalVariable(name: "dword", scope: !7406, file: !3, line: 1343, type: !190)
!7474 = !DILocation(line: 1343, column: 6, scope: !7406)
!7475 = !DILocalVariable(name: "nstatus", scope: !7406, file: !3, line: 1344, type: !213)
!7476 = !DILocation(line: 1344, column: 5, scope: !7406)
!7477 = !DILocalVariable(name: "completed", scope: !7406, file: !3, line: 1345, type: !7478)
!7478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 368, elements: !235)
!7479 = !DILocation(line: 1345, column: 5, scope: !7406)
!7480 = !DILocalVariable(name: "handled", scope: !7406, file: !3, line: 1346, type: !188)
!7481 = !DILocation(line: 1346, column: 6, scope: !7406)
!7482 = !DILocation(line: 1352, column: 2, scope: !7406)
!7483 = !DILocation(line: 1352, column: 2, scope: !7461)
!7484 = !DILocalVariable(name: "__dummy", scope: !7485, file: !3, line: 1352, type: !195)
!7485 = distinct !DILexicalBlock(scope: !7460, file: !3, line: 1352, column: 2)
!7486 = !DILocation(line: 1352, column: 2, scope: !7485)
!7487 = !DILocalVariable(name: "__dummy2", scope: !7485, file: !3, line: 1352, type: !195)
!7488 = !DILocation(line: 1352, column: 2, scope: !7460)
!7489 = !DILocation(line: 1352, column: 2, scope: !7459)
!7490 = !DILocation(line: 1352, column: 2, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7459, file: !3, line: 1352, column: 2)
!7492 = !DILocalVariable(name: "__dummy", scope: !7493, file: !3, line: 1352, type: !195)
!7493 = distinct !DILexicalBlock(scope: !7494, file: !3, line: 1352, column: 2)
!7494 = distinct !DILexicalBlock(scope: !7491, file: !3, line: 1352, column: 2)
!7495 = !DILocation(line: 1352, column: 2, scope: !7493)
!7496 = !DILocalVariable(name: "__dummy2", scope: !7493, file: !3, line: 1352, type: !195)
!7497 = !DILocation(line: 1352, column: 2, scope: !7494)
!7498 = !DILocation(line: 1352, column: 2, scope: !7458)
!7499 = !{i32 -2140908294}
!7500 = !DILocation(line: 1352, column: 2, scope: !7457)
!7501 = !DILocation(line: 329, column: 10, scope: !6304, inlinedAt: !7456)
!7502 = !DILocation(line: 329, column: 16, scope: !6304, inlinedAt: !7456)
!7503 = !DILocation(line: 1354, column: 2, scope: !7406)
!7504 = !DILocation(line: 1356, column: 11, scope: !7418)
!7505 = !DILocation(line: 1356, column: 9, scope: !7418)
!7506 = !DILocation(line: 1357, column: 6, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 1357, column: 6)
!7508 = !DILocation(line: 1357, column: 12, scope: !7507)
!7509 = !DILocation(line: 1357, column: 6, scope: !7418)
!7510 = !DILocation(line: 1361, column: 4, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7507, file: !3, line: 1357, column: 27)
!7512 = !DILocation(line: 1363, column: 3, scope: !7418)
!7513 = !DILocation(line: 1365, column: 3, scope: !7418)
!7514 = !DILocation(line: 1365, column: 33, scope: !7418)
!7515 = !DILocation(line: 1365, column: 42, scope: !7418)
!7516 = !DILocation(line: 1365, column: 48, scope: !7418)
!7517 = !DILocation(line: 1365, column: 53, scope: !7418)
!7518 = !DILocation(line: 1365, column: 18, scope: !7418)
!7519 = !DILocation(line: 1365, column: 9, scope: !7418)
!7520 = !DILocation(line: 1366, column: 5, scope: !7418)
!7521 = !DILocation(line: 13, column: 2, scope: !7522, inlinedAt: !7524)
!7522 = distinct !DISubprogram(name: "rep_nop", scope: !7523, file: !7523, line: 11, type: !2049, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7523 = !DIFile(filename: "./arch/x86/include/asm/vdso/processor.h", directory: "/home/lizy2001/genbc/linux")
!7524 = distinct !DILocation(line: 18, column: 2, scope: !7525, inlinedAt: !7526)
!7525 = distinct !DISubprogram(name: "cpu_relax", scope: !7523, file: !7523, line: 16, type: !2049, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7526 = distinct !DILocation(line: 1367, column: 4, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 1366, column: 14)
!7528 = !{i32 2026036}
!7529 = distinct !{!7529, !7513, !7530}
!7530 = !DILocation(line: 1368, column: 3, scope: !7418)
!7531 = !DILocation(line: 1369, column: 3, scope: !7418)
!7532 = !DILocation(line: 1369, column: 12, scope: !7418)
!7533 = !DILocation(line: 1369, column: 18, scope: !7418)
!7534 = !DILocation(line: 1369, column: 23, scope: !7418)
!7535 = !DILocation(line: 1369, column: 33, scope: !7418)
!7536 = !DILocation(line: 1371, column: 12, scope: !7418)
!7537 = !DILocation(line: 1371, column: 21, scope: !7418)
!7538 = !DILocation(line: 1371, column: 27, scope: !7418)
!7539 = !DILocation(line: 1371, column: 32, scope: !7418)
!7540 = !DILocation(line: 1371, column: 10, scope: !7418)
!7541 = !DILocation(line: 1376, column: 14, scope: !7418)
!7542 = !DILocation(line: 1376, column: 24, scope: !7418)
!7543 = !DILocation(line: 1376, column: 33, scope: !7418)
!7544 = !DILocation(line: 151, column: 31, scope: !7433, inlinedAt: !7434)
!7545 = !DILocation(line: 101, column: 20, scope: !7438, inlinedAt: !7440)
!7546 = !DILocation(line: 101, column: 23, scope: !7438, inlinedAt: !7440)
!7547 = !DILocation(line: 101, column: 2, scope: !7438, inlinedAt: !7440)
!7548 = !DILocation(line: 102, column: 2, scope: !7438, inlinedAt: !7440)
!7549 = !DILocation(line: 152, column: 18, scope: !7433, inlinedAt: !7434)
!7550 = !DILocation(line: 152, column: 21, scope: !7433, inlinedAt: !7434)
!7551 = !DILocation(line: 68, column: 16, scope: !7428, inlinedAt: !7432)
!7552 = !DILocation(line: 68, column: 19, scope: !7428, inlinedAt: !7432)
!7553 = !DILocation(line: 69, column: 16, scope: !7428, inlinedAt: !7432)
!7554 = !DILocation(line: 67, column: 2, scope: !7428, inlinedAt: !7432)
!7555 = !{i32 -2146266527}
!7556 = !DILocation(line: 1378, column: 3, scope: !7418)
!7557 = !DILocation(line: 1378, column: 29, scope: !7418)
!7558 = !DILocation(line: 1378, column: 38, scope: !7418)
!7559 = !DILocation(line: 1378, column: 44, scope: !7418)
!7560 = !DILocation(line: 1378, column: 49, scope: !7418)
!7561 = !DILocation(line: 1379, column: 5, scope: !7418)
!7562 = !DILocation(line: 1382, column: 3, scope: !7418)
!7563 = !DILocation(line: 1384, column: 11, scope: !7418)
!7564 = !DILocation(line: 1386, column: 3, scope: !7418)
!7565 = !DILocation(line: 1386, column: 10, scope: !7418)
!7566 = !DILocation(line: 1386, column: 28, scope: !7418)
!7567 = !DILocation(line: 13, column: 2, scope: !7522, inlinedAt: !7568)
!7568 = distinct !DILocation(line: 18, column: 2, scope: !7525, inlinedAt: !7569)
!7569 = distinct !DILocation(line: 1387, column: 4, scope: !7418)
!7570 = distinct !{!7570, !7564, !7571}
!7571 = !DILocation(line: 1387, column: 14, scope: !7418)
!7572 = !DILocation(line: 1389, column: 17, scope: !7418)
!7573 = !DILocation(line: 1389, column: 26, scope: !7418)
!7574 = !DILocation(line: 1389, column: 37, scope: !7418)
!7575 = !DILocation(line: 1389, column: 46, scope: !7418)
!7576 = !DILocation(line: 1389, column: 3, scope: !7418)
!7577 = !DILocation(line: 1391, column: 17, scope: !7418)
!7578 = !DILocation(line: 1391, column: 3, scope: !7418)
!7579 = !DILocation(line: 1394, column: 19, scope: !7417)
!7580 = !DILocation(line: 1394, column: 28, scope: !7417)
!7581 = !DILocation(line: 27, column: 25, scope: !7415, inlinedAt: !7416)
!7582 = !DILocation(line: 71, column: 19, scope: !7420, inlinedAt: !7422)
!7583 = !DILocation(line: 71, column: 22, scope: !7420, inlinedAt: !7422)
!7584 = !DILocation(line: 71, column: 2, scope: !7420, inlinedAt: !7422)
!7585 = !DILocation(line: 72, column: 2, scope: !7420, inlinedAt: !7422)
!7586 = !DILocation(line: 28, column: 26, scope: !7415, inlinedAt: !7416)
!7587 = !DILocation(line: 29, column: 9, scope: !7408, inlinedAt: !7414)
!7588 = !DILocation(line: 1394, column: 39, scope: !7417)
!7589 = !DILocation(line: 1394, column: 6, scope: !7418)
!7590 = !DILocation(line: 1395, column: 18, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 1394, column: 45)
!7592 = !DILocation(line: 1395, column: 4, scope: !7591)
!7593 = !DILocation(line: 1396, column: 3, scope: !7591)
!7594 = !DILocation(line: 1398, column: 2, scope: !7418)
!7595 = distinct !{!7595, !7503, !7596}
!7596 = !DILocation(line: 1398, column: 11, scope: !7406)
!7597 = !DILabel(scope: !7406, name: "out_unlock", file: !3, line: 1400)
!7598 = !DILocation(line: 1400, column: 2, scope: !7406)
!7599 = !DILocation(line: 1402, column: 26, scope: !7406)
!7600 = !DILocation(line: 1402, column: 35, scope: !7406)
!7601 = !DILocation(line: 1402, column: 41, scope: !7406)
!7602 = !DILocalVariable(name: "__dummy", scope: !7603, file: !6305, line: 409, type: !195)
!7603 = distinct !DILexicalBlock(scope: !7604, file: !6305, line: 409, column: 2)
!7604 = distinct !DILexicalBlock(scope: !7448, file: !6305, line: 409, column: 2)
!7605 = !DILocation(line: 409, column: 2, scope: !7603, inlinedAt: !7452)
!7606 = !DILocalVariable(name: "__dummy2", scope: !7603, file: !6305, line: 409, type: !195)
!7607 = !DILocalVariable(name: "__dummy", scope: !7608, file: !6305, line: 409, type: !195)
!7608 = distinct !DILexicalBlock(scope: !7609, file: !6305, line: 409, column: 2)
!7609 = distinct !DILexicalBlock(scope: !7610, file: !6305, line: 409, column: 2)
!7610 = distinct !DILexicalBlock(scope: !7611, file: !6305, line: 409, column: 2)
!7611 = distinct !DILexicalBlock(scope: !7604, file: !6305, line: 409, column: 2)
!7612 = !DILocation(line: 409, column: 2, scope: !7608, inlinedAt: !7452)
!7613 = !DILocalVariable(name: "__dummy2", scope: !7608, file: !6305, line: 409, type: !195)
!7614 = !DILocation(line: 409, column: 2, scope: !7609, inlinedAt: !7452)
!7615 = !DILocation(line: 409, column: 2, scope: !7616, inlinedAt: !7452)
!7616 = distinct !DILexicalBlock(scope: !7611, file: !6305, line: 409, column: 2)
!7617 = !{i32 -2145344950}
!7618 = !DILocation(line: 409, column: 2, scope: !7619, inlinedAt: !7452)
!7619 = distinct !DILexicalBlock(scope: !7616, file: !6305, line: 409, column: 2)
!7620 = !DILocation(line: 1404, column: 9, scope: !7406)
!7621 = !DILocation(line: 1404, column: 2, scope: !7406)
!7622 = distinct !DISubprogram(name: "megaraid_isr_iomapped", scope: !3, file: !3, line: 1262, type: !7386, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7623 = !DILocation(line: 23, column: 61, scope: !7408, inlinedAt: !7624)
!7624 = distinct !DILocation(line: 28, column: 9, scope: !7415, inlinedAt: !7625)
!7625 = distinct !DILocation(line: 1314, column: 6, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7627, file: !3, line: 1314, column: 6)
!7627 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 1278, column: 5)
!7628 = !DILocation(line: 69, column: 73, scope: !7420, inlinedAt: !7629)
!7629 = distinct !DILocation(line: 27, column: 2, scope: !7415, inlinedAt: !7625)
!7630 = !DILocation(line: 69, column: 83, scope: !7420, inlinedAt: !7629)
!7631 = !DILocation(line: 25, column: 29, scope: !7415, inlinedAt: !7625)
!7632 = !DILocation(line: 65, column: 49, scope: !7428, inlinedAt: !7633)
!7633 = distinct !DILocation(line: 152, column: 2, scope: !7433, inlinedAt: !7634)
!7634 = distinct !DILocation(line: 1299, column: 3, scope: !7627)
!7635 = !DILocation(line: 65, column: 62, scope: !7428, inlinedAt: !7633)
!7636 = !DILocation(line: 99, column: 79, scope: !7438, inlinedAt: !7637)
!7637 = distinct !DILocation(line: 151, column: 2, scope: !7433, inlinedAt: !7634)
!7638 = !DILocation(line: 99, column: 89, scope: !7438, inlinedAt: !7637)
!7639 = !DILocation(line: 149, column: 16, scope: !7433, inlinedAt: !7634)
!7640 = !DILocation(line: 149, column: 29, scope: !7433, inlinedAt: !7634)
!7641 = !DILocation(line: 407, column: 64, scope: !7448, inlinedAt: !7642)
!7642 = distinct !DILocation(line: 1322, column: 2, scope: !7622)
!7643 = !DILocation(line: 407, column: 84, scope: !7448, inlinedAt: !7642)
!7644 = !DILocation(line: 327, column: 67, scope: !6304, inlinedAt: !7645)
!7645 = distinct !DILocation(line: 1276, column: 2, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 1276, column: 2)
!7647 = distinct !DILexicalBlock(scope: !7648, file: !3, line: 1276, column: 2)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 1276, column: 2)
!7649 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 1276, column: 2)
!7650 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 1276, column: 2)
!7651 = !DILocalVariable(name: "irq", arg: 1, scope: !7622, file: !3, line: 1262, type: !188)
!7652 = !DILocation(line: 1262, column: 27, scope: !7622)
!7653 = !DILocalVariable(name: "devp", arg: 2, scope: !7622, file: !3, line: 1262, type: !197)
!7654 = !DILocation(line: 1262, column: 38, scope: !7622)
!7655 = !DILocalVariable(name: "adapter", scope: !7622, file: !3, line: 1264, type: !182)
!7656 = !DILocation(line: 1264, column: 13, scope: !7622)
!7657 = !DILocation(line: 1264, column: 23, scope: !7622)
!7658 = !DILocalVariable(name: "flags", scope: !7622, file: !3, line: 1265, type: !195)
!7659 = !DILocation(line: 1265, column: 16, scope: !7622)
!7660 = !DILocalVariable(name: "status", scope: !7622, file: !3, line: 1266, type: !213)
!7661 = !DILocation(line: 1266, column: 5, scope: !7622)
!7662 = !DILocalVariable(name: "nstatus", scope: !7622, file: !3, line: 1267, type: !213)
!7663 = !DILocation(line: 1267, column: 5, scope: !7622)
!7664 = !DILocalVariable(name: "completed", scope: !7622, file: !3, line: 1268, type: !7478)
!7665 = !DILocation(line: 1268, column: 5, scope: !7622)
!7666 = !DILocalVariable(name: "byte", scope: !7622, file: !3, line: 1269, type: !213)
!7667 = !DILocation(line: 1269, column: 5, scope: !7622)
!7668 = !DILocalVariable(name: "handled", scope: !7622, file: !3, line: 1270, type: !188)
!7669 = !DILocation(line: 1270, column: 6, scope: !7622)
!7670 = !DILocation(line: 1276, column: 2, scope: !7622)
!7671 = !DILocation(line: 1276, column: 2, scope: !7650)
!7672 = !DILocalVariable(name: "__dummy", scope: !7673, file: !3, line: 1276, type: !195)
!7673 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 1276, column: 2)
!7674 = !DILocation(line: 1276, column: 2, scope: !7673)
!7675 = !DILocalVariable(name: "__dummy2", scope: !7673, file: !3, line: 1276, type: !195)
!7676 = !DILocation(line: 1276, column: 2, scope: !7649)
!7677 = !DILocation(line: 1276, column: 2, scope: !7648)
!7678 = !DILocation(line: 1276, column: 2, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7648, file: !3, line: 1276, column: 2)
!7680 = !DILocalVariable(name: "__dummy", scope: !7681, file: !3, line: 1276, type: !195)
!7681 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 1276, column: 2)
!7682 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 1276, column: 2)
!7683 = !DILocation(line: 1276, column: 2, scope: !7681)
!7684 = !DILocalVariable(name: "__dummy2", scope: !7681, file: !3, line: 1276, type: !195)
!7685 = !DILocation(line: 1276, column: 2, scope: !7682)
!7686 = !DILocation(line: 1276, column: 2, scope: !7647)
!7687 = !{i32 -2140909598}
!7688 = !DILocation(line: 1276, column: 2, scope: !7646)
!7689 = !DILocation(line: 329, column: 10, scope: !6304, inlinedAt: !7645)
!7690 = !DILocation(line: 329, column: 16, scope: !6304, inlinedAt: !7645)
!7691 = !DILocation(line: 1278, column: 2, scope: !7622)
!7692 = !DILocation(line: 1280, column: 10, scope: !7627)
!7693 = !DILocation(line: 1280, column: 8, scope: !7627)
!7694 = !DILocation(line: 1281, column: 8, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7627, file: !3, line: 1281, column: 7)
!7696 = !DILocation(line: 1281, column: 13, scope: !7695)
!7697 = !DILocation(line: 1281, column: 32, scope: !7695)
!7698 = !DILocation(line: 1281, column: 7, scope: !7627)
!7699 = !DILocation(line: 1285, column: 4, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 1281, column: 39)
!7701 = !DILocation(line: 1287, column: 3, scope: !7627)
!7702 = !DILocation(line: 1289, column: 3, scope: !7627)
!7703 = !DILocation(line: 1289, column: 33, scope: !7627)
!7704 = !DILocation(line: 1289, column: 42, scope: !7627)
!7705 = !DILocation(line: 1289, column: 48, scope: !7627)
!7706 = !DILocation(line: 1289, column: 53, scope: !7627)
!7707 = !DILocation(line: 1289, column: 18, scope: !7627)
!7708 = !DILocation(line: 1289, column: 9, scope: !7627)
!7709 = !DILocation(line: 1290, column: 5, scope: !7627)
!7710 = !DILocation(line: 13, column: 2, scope: !7522, inlinedAt: !7711)
!7711 = distinct !DILocation(line: 18, column: 2, scope: !7525, inlinedAt: !7712)
!7712 = distinct !DILocation(line: 1291, column: 4, scope: !7627)
!7713 = distinct !{!7713, !7702, !7714}
!7714 = !DILocation(line: 1291, column: 14, scope: !7627)
!7715 = !DILocation(line: 1292, column: 3, scope: !7627)
!7716 = !DILocation(line: 1292, column: 12, scope: !7627)
!7717 = !DILocation(line: 1292, column: 18, scope: !7627)
!7718 = !DILocation(line: 1292, column: 23, scope: !7627)
!7719 = !DILocation(line: 1292, column: 33, scope: !7627)
!7720 = !DILocation(line: 1294, column: 12, scope: !7627)
!7721 = !DILocation(line: 1294, column: 21, scope: !7627)
!7722 = !DILocation(line: 1294, column: 27, scope: !7627)
!7723 = !DILocation(line: 1294, column: 32, scope: !7627)
!7724 = !DILocation(line: 1294, column: 10, scope: !7627)
!7725 = !DILocation(line: 1299, column: 14, scope: !7627)
!7726 = !DILocation(line: 1299, column: 24, scope: !7627)
!7727 = !DILocation(line: 1299, column: 33, scope: !7627)
!7728 = !DILocation(line: 151, column: 31, scope: !7433, inlinedAt: !7634)
!7729 = !DILocation(line: 101, column: 20, scope: !7438, inlinedAt: !7637)
!7730 = !DILocation(line: 101, column: 23, scope: !7438, inlinedAt: !7637)
!7731 = !DILocation(line: 101, column: 2, scope: !7438, inlinedAt: !7637)
!7732 = !DILocation(line: 102, column: 2, scope: !7438, inlinedAt: !7637)
!7733 = !DILocation(line: 152, column: 18, scope: !7433, inlinedAt: !7634)
!7734 = !DILocation(line: 152, column: 21, scope: !7433, inlinedAt: !7634)
!7735 = !DILocation(line: 68, column: 16, scope: !7428, inlinedAt: !7633)
!7736 = !DILocation(line: 68, column: 19, scope: !7428, inlinedAt: !7633)
!7737 = !DILocation(line: 69, column: 16, scope: !7428, inlinedAt: !7633)
!7738 = !DILocation(line: 67, column: 2, scope: !7428, inlinedAt: !7633)
!7739 = !DILocation(line: 1301, column: 3, scope: !7627)
!7740 = !DILocation(line: 1301, column: 29, scope: !7627)
!7741 = !DILocation(line: 1301, column: 38, scope: !7627)
!7742 = !DILocation(line: 1301, column: 44, scope: !7627)
!7743 = !DILocation(line: 1301, column: 49, scope: !7627)
!7744 = !DILocation(line: 1302, column: 5, scope: !7627)
!7745 = !DILocation(line: 1305, column: 3, scope: !7627)
!7746 = !DILocation(line: 1307, column: 17, scope: !7627)
!7747 = !DILocation(line: 1307, column: 26, scope: !7627)
!7748 = !DILocation(line: 1307, column: 37, scope: !7627)
!7749 = !DILocation(line: 1307, column: 46, scope: !7627)
!7750 = !DILocation(line: 1307, column: 3, scope: !7627)
!7751 = !DILocation(line: 1309, column: 17, scope: !7627)
!7752 = !DILocation(line: 1309, column: 3, scope: !7627)
!7753 = !DILocation(line: 1311, column: 11, scope: !7627)
!7754 = !DILocation(line: 1314, column: 19, scope: !7626)
!7755 = !DILocation(line: 1314, column: 28, scope: !7626)
!7756 = !DILocation(line: 27, column: 25, scope: !7415, inlinedAt: !7625)
!7757 = !DILocation(line: 71, column: 19, scope: !7420, inlinedAt: !7629)
!7758 = !DILocation(line: 71, column: 22, scope: !7420, inlinedAt: !7629)
!7759 = !DILocation(line: 71, column: 2, scope: !7420, inlinedAt: !7629)
!7760 = !DILocation(line: 72, column: 2, scope: !7420, inlinedAt: !7629)
!7761 = !DILocation(line: 28, column: 26, scope: !7415, inlinedAt: !7625)
!7762 = !DILocation(line: 29, column: 9, scope: !7408, inlinedAt: !7624)
!7763 = !DILocation(line: 1314, column: 39, scope: !7626)
!7764 = !DILocation(line: 1314, column: 6, scope: !7627)
!7765 = !DILocation(line: 1315, column: 18, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 1314, column: 45)
!7767 = !DILocation(line: 1315, column: 4, scope: !7766)
!7768 = !DILocation(line: 1316, column: 3, scope: !7766)
!7769 = !DILocation(line: 1318, column: 2, scope: !7627)
!7770 = distinct !{!7770, !7691, !7771}
!7771 = !DILocation(line: 1318, column: 11, scope: !7622)
!7772 = !DILabel(scope: !7622, name: "out_unlock", file: !3, line: 1320)
!7773 = !DILocation(line: 1320, column: 2, scope: !7622)
!7774 = !DILocation(line: 1322, column: 26, scope: !7622)
!7775 = !DILocation(line: 1322, column: 35, scope: !7622)
!7776 = !DILocation(line: 1322, column: 41, scope: !7622)
!7777 = !DILocation(line: 409, column: 2, scope: !7603, inlinedAt: !7642)
!7778 = !DILocation(line: 409, column: 2, scope: !7608, inlinedAt: !7642)
!7779 = !DILocation(line: 409, column: 2, scope: !7609, inlinedAt: !7642)
!7780 = !DILocation(line: 409, column: 2, scope: !7616, inlinedAt: !7642)
!7781 = !DILocation(line: 409, column: 2, scope: !7619, inlinedAt: !7642)
!7782 = !DILocation(line: 1324, column: 9, scope: !7622)
!7783 = !DILocation(line: 1324, column: 2, scope: !7622)
!7784 = distinct !DISubprogram(name: "mega_setup_mailbox", scope: !3, file: !3, line: 132, type: !7785, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7785 = !DISubroutineType(types: !7786)
!7786 = !{!188, !182}
!7787 = !DILocalVariable(name: "adapter", arg: 1, scope: !7784, file: !3, line: 132, type: !182)
!7788 = !DILocation(line: 132, column: 31, scope: !7784)
!7789 = !DILocalVariable(name: "align", scope: !7784, file: !3, line: 134, type: !195)
!7790 = !DILocation(line: 134, column: 16, scope: !7784)
!7791 = !DILocation(line: 136, column: 44, scope: !7784)
!7792 = !DILocation(line: 136, column: 53, scope: !7784)
!7793 = !DILocation(line: 136, column: 58, scope: !7784)
!7794 = !DILocation(line: 138, column: 9, scope: !7784)
!7795 = !DILocation(line: 138, column: 18, scope: !7784)
!7796 = !DILocation(line: 136, column: 24, scope: !7784)
!7797 = !DILocation(line: 136, column: 2, scope: !7784)
!7798 = !DILocation(line: 136, column: 11, scope: !7784)
!7799 = !DILocation(line: 136, column: 22, scope: !7784)
!7800 = !DILocation(line: 141, column: 7, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 141, column: 6)
!7802 = !DILocation(line: 141, column: 16, scope: !7801)
!7803 = !DILocation(line: 141, column: 6, scope: !7784)
!7804 = !DILocation(line: 141, column: 29, scope: !7801)
!7805 = !DILocation(line: 143, column: 19, scope: !7784)
!7806 = !DILocation(line: 143, column: 28, scope: !7784)
!7807 = !DILocation(line: 143, column: 40, scope: !7784)
!7808 = !DILocation(line: 143, column: 2, scope: !7784)
!7809 = !DILocation(line: 143, column: 11, scope: !7784)
!7810 = !DILocation(line: 143, column: 16, scope: !7784)
!7811 = !DILocation(line: 145, column: 47, scope: !7784)
!7812 = !DILocation(line: 145, column: 56, scope: !7784)
!7813 = !DILocation(line: 145, column: 31, scope: !7784)
!7814 = !DILocation(line: 145, column: 62, scope: !7784)
!7815 = !DILocation(line: 145, column: 68, scope: !7784)
!7816 = !DILocation(line: 145, column: 18, scope: !7784)
!7817 = !DILocation(line: 145, column: 2, scope: !7784)
!7818 = !DILocation(line: 145, column: 11, scope: !7784)
!7819 = !DILocation(line: 145, column: 16, scope: !7784)
!7820 = !DILocation(line: 148, column: 49, scope: !7784)
!7821 = !DILocation(line: 148, column: 58, scope: !7784)
!7822 = !DILocation(line: 148, column: 34, scope: !7784)
!7823 = !DILocation(line: 148, column: 64, scope: !7784)
!7824 = !DILocation(line: 148, column: 20, scope: !7784)
!7825 = !DILocation(line: 148, column: 2, scope: !7784)
!7826 = !DILocation(line: 148, column: 11, scope: !7784)
!7827 = !DILocation(line: 148, column: 18, scope: !7784)
!7828 = !DILocation(line: 150, column: 19, scope: !7784)
!7829 = !DILocation(line: 150, column: 28, scope: !7784)
!7830 = !DILocation(line: 150, column: 11, scope: !7784)
!7831 = !DILocation(line: 150, column: 46, scope: !7784)
!7832 = !DILocation(line: 150, column: 55, scope: !7784)
!7833 = !DILocation(line: 150, column: 67, scope: !7784)
!7834 = !DILocation(line: 150, column: 37, scope: !7784)
!7835 = !DILocation(line: 150, column: 34, scope: !7784)
!7836 = !DILocation(line: 150, column: 8, scope: !7784)
!7837 = !DILocation(line: 152, column: 22, scope: !7784)
!7838 = !DILocation(line: 152, column: 31, scope: !7784)
!7839 = !DILocation(line: 152, column: 46, scope: !7784)
!7840 = !DILocation(line: 152, column: 52, scope: !7784)
!7841 = !DILocation(line: 152, column: 50, scope: !7784)
!7842 = !DILocation(line: 152, column: 2, scope: !7784)
!7843 = !DILocation(line: 152, column: 11, scope: !7784)
!7844 = !DILocation(line: 152, column: 20, scope: !7784)
!7845 = !DILocation(line: 157, column: 6, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 157, column: 6)
!7847 = !DILocation(line: 157, column: 15, scope: !7846)
!7848 = !DILocation(line: 157, column: 20, scope: !7846)
!7849 = !DILocation(line: 157, column: 6, scope: !7784)
!7850 = !DILocation(line: 159, column: 8, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7846, file: !3, line: 157, column: 36)
!7852 = !DILocation(line: 159, column: 17, scope: !7851)
!7853 = !DILocation(line: 159, column: 26, scope: !7851)
!7854 = !DILocation(line: 160, column: 5, scope: !7851)
!7855 = !DILocation(line: 160, column: 14, scope: !7851)
!7856 = !DILocation(line: 160, column: 20, scope: !7851)
!7857 = !DILocation(line: 160, column: 28, scope: !7851)
!7858 = !DILocation(line: 159, column: 3, scope: !7851)
!7859 = !DILocation(line: 162, column: 9, scope: !7851)
!7860 = !DILocation(line: 162, column: 18, scope: !7851)
!7861 = !DILocation(line: 162, column: 27, scope: !7851)
!7862 = !DILocation(line: 162, column: 33, scope: !7851)
!7863 = !DILocation(line: 162, column: 8, scope: !7851)
!7864 = !DILocation(line: 163, column: 5, scope: !7851)
!7865 = !DILocation(line: 163, column: 14, scope: !7851)
!7866 = !DILocation(line: 163, column: 20, scope: !7851)
!7867 = !DILocation(line: 163, column: 28, scope: !7851)
!7868 = !DILocation(line: 162, column: 3, scope: !7851)
!7869 = !DILocation(line: 165, column: 9, scope: !7851)
!7870 = !DILocation(line: 165, column: 18, scope: !7851)
!7871 = !DILocation(line: 165, column: 27, scope: !7851)
!7872 = !DILocation(line: 165, column: 34, scope: !7851)
!7873 = !DILocation(line: 165, column: 8, scope: !7851)
!7874 = !DILocation(line: 166, column: 5, scope: !7851)
!7875 = !DILocation(line: 166, column: 14, scope: !7851)
!7876 = !DILocation(line: 166, column: 20, scope: !7851)
!7877 = !DILocation(line: 166, column: 28, scope: !7851)
!7878 = !DILocation(line: 165, column: 3, scope: !7851)
!7879 = !DILocation(line: 168, column: 9, scope: !7851)
!7880 = !DILocation(line: 168, column: 18, scope: !7851)
!7881 = !DILocation(line: 168, column: 27, scope: !7851)
!7882 = !DILocation(line: 168, column: 34, scope: !7851)
!7883 = !DILocation(line: 168, column: 8, scope: !7851)
!7884 = !DILocation(line: 169, column: 5, scope: !7851)
!7885 = !DILocation(line: 169, column: 14, scope: !7851)
!7886 = !DILocation(line: 169, column: 20, scope: !7851)
!7887 = !DILocation(line: 169, column: 28, scope: !7851)
!7888 = !DILocation(line: 168, column: 3, scope: !7851)
!7889 = !DILocation(line: 172, column: 5, scope: !7851)
!7890 = !DILocation(line: 172, column: 14, scope: !7851)
!7891 = !DILocation(line: 172, column: 20, scope: !7851)
!7892 = !DILocation(line: 172, column: 28, scope: !7851)
!7893 = !DILocation(line: 171, column: 3, scope: !7851)
!7894 = !DILocation(line: 174, column: 3, scope: !7851)
!7895 = !DILocation(line: 176, column: 3, scope: !7851)
!7896 = !DILocation(line: 177, column: 2, scope: !7851)
!7897 = !DILocation(line: 179, column: 2, scope: !7784)
!7898 = !DILocation(line: 180, column: 1, scope: !7784)
!7899 = distinct !DISubprogram(name: "mega_query_adapter", scope: !3, file: !3, line: 191, type: !7785, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7900 = !DILocalVariable(name: "adapter", arg: 1, scope: !7899, file: !3, line: 191, type: !182)
!7901 = !DILocation(line: 191, column: 31, scope: !7899)
!7902 = !DILocalVariable(name: "prod_info_dma_handle", scope: !7899, file: !3, line: 193, type: !240)
!7903 = !DILocation(line: 193, column: 13, scope: !7899)
!7904 = !DILocalVariable(name: "inquiry3", scope: !7899, file: !3, line: 194, type: !5704)
!7905 = !DILocation(line: 194, column: 17, scope: !7899)
!7906 = !DILocalVariable(name: "raw_mbox", scope: !7899, file: !3, line: 195, type: !7907)
!7907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 120, elements: !7908)
!7908 = !{!7909}
!7909 = !DISubrange(count: 15)
!7910 = !DILocation(line: 195, column: 5, scope: !7899)
!7911 = !DILocalVariable(name: "mbox", scope: !7899, file: !3, line: 196, type: !5692)
!7912 = !DILocation(line: 196, column: 10, scope: !7899)
!7913 = !DILocalVariable(name: "retval", scope: !7899, file: !3, line: 197, type: !188)
!7914 = !DILocation(line: 197, column: 6, scope: !7899)
!7915 = !DILocation(line: 201, column: 19, scope: !7899)
!7916 = !DILocation(line: 201, column: 9, scope: !7899)
!7917 = !DILocation(line: 201, column: 7, scope: !7899)
!7918 = !DILocation(line: 203, column: 17, scope: !7899)
!7919 = !DILocation(line: 203, column: 26, scope: !7899)
!7920 = !DILocation(line: 203, column: 2, scope: !7899)
!7921 = !DILocation(line: 204, column: 10, scope: !7899)
!7922 = !DILocation(line: 204, column: 16, scope: !7899)
!7923 = !DILocation(line: 204, column: 2, scope: !7899)
!7924 = !DILocation(line: 211, column: 30, scope: !7899)
!7925 = !DILocation(line: 211, column: 39, scope: !7899)
!7926 = !DILocation(line: 211, column: 25, scope: !7899)
!7927 = !DILocation(line: 211, column: 2, scope: !7899)
!7928 = !DILocation(line: 211, column: 8, scope: !7899)
!7929 = !DILocation(line: 211, column: 14, scope: !7899)
!7930 = !DILocation(line: 211, column: 23, scope: !7899)
!7931 = !DILocation(line: 213, column: 30, scope: !7899)
!7932 = !DILocation(line: 213, column: 39, scope: !7899)
!7933 = !DILocation(line: 213, column: 13, scope: !7899)
!7934 = !DILocation(line: 213, column: 11, scope: !7899)
!7935 = !DILocation(line: 215, column: 2, scope: !7899)
!7936 = !DILocation(line: 215, column: 14, scope: !7899)
!7937 = !DILocation(line: 216, column: 2, scope: !7899)
!7938 = !DILocation(line: 216, column: 14, scope: !7899)
!7939 = !DILocation(line: 217, column: 2, scope: !7899)
!7940 = !DILocation(line: 217, column: 14, scope: !7899)
!7941 = !DILocation(line: 220, column: 32, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 220, column: 6)
!7943 = !DILocation(line: 220, column: 41, scope: !7942)
!7944 = !DILocation(line: 220, column: 16, scope: !7942)
!7945 = !DILocation(line: 220, column: 14, scope: !7942)
!7946 = !DILocation(line: 220, column: 6, scope: !7899)
!7947 = !DILocalVariable(name: "ext_inq", scope: !7948, file: !3, line: 223, type: !5790)
!7948 = distinct !DILexicalBlock(scope: !7942, file: !3, line: 220, column: 53)
!7949 = !DILocation(line: 223, column: 22, scope: !7948)
!7950 = !DILocalVariable(name: "inq", scope: !7948, file: !3, line: 224, type: !7951)
!7951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5795, size: 64)
!7952 = !DILocation(line: 224, column: 19, scope: !7948)
!7953 = !DILocalVariable(name: "dma_handle", scope: !7948, file: !3, line: 225, type: !240)
!7954 = !DILocation(line: 225, column: 15, scope: !7948)
!7955 = !DILocation(line: 227, column: 33, scope: !7948)
!7956 = !DILocation(line: 227, column: 42, scope: !7948)
!7957 = !DILocation(line: 227, column: 47, scope: !7948)
!7958 = !DILocation(line: 227, column: 13, scope: !7948)
!7959 = !DILocation(line: 227, column: 11, scope: !7948)
!7960 = !DILocation(line: 231, column: 7, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 231, column: 7)
!7962 = !DILocation(line: 231, column: 15, scope: !7961)
!7963 = !DILocation(line: 231, column: 7, scope: !7948)
!7964 = !DILocation(line: 231, column: 25, scope: !7961)
!7965 = !DILocation(line: 233, column: 10, scope: !7948)
!7966 = !DILocation(line: 233, column: 19, scope: !7948)
!7967 = !DILocation(line: 233, column: 7, scope: !7948)
!7968 = !DILocation(line: 235, column: 31, scope: !7948)
!7969 = !DILocation(line: 235, column: 26, scope: !7948)
!7970 = !DILocation(line: 235, column: 3, scope: !7948)
!7971 = !DILocation(line: 235, column: 9, scope: !7948)
!7972 = !DILocation(line: 235, column: 15, scope: !7948)
!7973 = !DILocation(line: 235, column: 24, scope: !7948)
!7974 = !DILocation(line: 238, column: 3, scope: !7948)
!7975 = !DILocation(line: 238, column: 9, scope: !7948)
!7976 = !DILocation(line: 238, column: 15, scope: !7948)
!7977 = !DILocation(line: 238, column: 19, scope: !7948)
!7978 = !DILocation(line: 240, column: 19, scope: !7948)
!7979 = !DILocation(line: 240, column: 28, scope: !7948)
!7980 = !DILocation(line: 240, column: 3, scope: !7948)
!7981 = !DILocation(line: 246, column: 18, scope: !7948)
!7982 = !DILocation(line: 246, column: 23, scope: !7948)
!7983 = !DILocation(line: 247, column: 27, scope: !7948)
!7984 = !DILocation(line: 247, column: 36, scope: !7948)
!7985 = !DILocation(line: 246, column: 3, scope: !7948)
!7986 = !DILocation(line: 249, column: 22, scope: !7948)
!7987 = !DILocation(line: 249, column: 31, scope: !7948)
!7988 = !DILocation(line: 249, column: 36, scope: !7948)
!7989 = !DILocation(line: 250, column: 34, scope: !7948)
!7990 = !DILocation(line: 251, column: 7, scope: !7948)
!7991 = !DILocation(line: 249, column: 3, scope: !7948)
!7992 = !DILocation(line: 253, column: 2, scope: !7948)
!7993 = !DILocation(line: 254, column: 3, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7942, file: !3, line: 253, column: 9)
!7995 = !DILocation(line: 254, column: 12, scope: !7994)
!7996 = !DILocation(line: 254, column: 17, scope: !7994)
!7997 = !DILocation(line: 260, column: 26, scope: !7994)
!7998 = !DILocation(line: 260, column: 24, scope: !7994)
!7999 = !DILocation(line: 265, column: 26, scope: !7994)
!8000 = !DILocation(line: 265, column: 3, scope: !7994)
!8001 = !DILocation(line: 265, column: 9, scope: !7994)
!8002 = !DILocation(line: 265, column: 15, scope: !7994)
!8003 = !DILocation(line: 265, column: 24, scope: !7994)
!8004 = !DILocation(line: 267, column: 3, scope: !7994)
!8005 = !DILocation(line: 267, column: 15, scope: !7994)
!8006 = !DILocation(line: 268, column: 3, scope: !7994)
!8007 = !DILocation(line: 268, column: 15, scope: !7994)
!8008 = !DILocation(line: 270, column: 33, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 270, column: 7)
!8010 = !DILocation(line: 270, column: 42, scope: !8009)
!8011 = !DILocation(line: 270, column: 17, scope: !8009)
!8012 = !DILocation(line: 270, column: 15, scope: !8009)
!8013 = !DILocation(line: 270, column: 7, scope: !7994)
!8014 = !DILocation(line: 271, column: 4, scope: !8009)
!8015 = !DILocation(line: 275, column: 3, scope: !7994)
!8016 = !DILocation(line: 284, column: 3, scope: !7899)
!8017 = !DILocation(line: 284, column: 12, scope: !7899)
!8018 = !DILocation(line: 284, column: 25, scope: !7899)
!8019 = !DILocation(line: 284, column: 35, scope: !7899)
!8020 = !DILocation(line: 284, column: 48, scope: !7899)
!8021 = !DILocation(line: 283, column: 2, scope: !7899)
!8022 = !DILocation(line: 283, column: 11, scope: !7899)
!8023 = !DILocation(line: 283, column: 17, scope: !7899)
!8024 = !DILocation(line: 283, column: 29, scope: !7899)
!8025 = !DILocation(line: 286, column: 2, scope: !7899)
!8026 = !DILocation(line: 286, column: 11, scope: !7899)
!8027 = !DILocation(line: 286, column: 17, scope: !7899)
!8028 = !DILocation(line: 286, column: 24, scope: !7899)
!8029 = !DILocation(line: 288, column: 2, scope: !7899)
!8030 = !DILocation(line: 288, column: 11, scope: !7899)
!8031 = !DILocation(line: 288, column: 17, scope: !7899)
!8032 = !DILocation(line: 288, column: 25, scope: !7899)
!8033 = !DILocation(line: 290, column: 31, scope: !7899)
!8034 = !DILocation(line: 290, column: 2, scope: !7899)
!8035 = !DILocation(line: 290, column: 11, scope: !7899)
!8036 = !DILocation(line: 290, column: 17, scope: !7899)
!8037 = !DILocation(line: 290, column: 29, scope: !7899)
!8038 = !DILocation(line: 292, column: 21, scope: !7899)
!8039 = !DILocation(line: 292, column: 31, scope: !7899)
!8040 = !DILocation(line: 292, column: 2, scope: !7899)
!8041 = !DILocation(line: 292, column: 11, scope: !7899)
!8042 = !DILocation(line: 292, column: 19, scope: !7899)
!8043 = !DILocation(line: 294, column: 22, scope: !7899)
!8044 = !DILocation(line: 294, column: 31, scope: !7899)
!8045 = !DILocation(line: 294, column: 44, scope: !7899)
!8046 = !DILocation(line: 294, column: 2, scope: !7899)
!8047 = !DILocation(line: 294, column: 11, scope: !7899)
!8048 = !DILocation(line: 294, column: 20, scope: !7899)
!8049 = !DILocation(line: 296, column: 5, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 296, column: 5)
!8051 = !DILocation(line: 296, column: 14, scope: !8050)
!8052 = !DILocation(line: 296, column: 23, scope: !8050)
!8053 = !DILocation(line: 296, column: 5, scope: !7899)
!8054 = !DILocation(line: 297, column: 3, scope: !8050)
!8055 = !DILocation(line: 297, column: 12, scope: !8050)
!8056 = !DILocation(line: 297, column: 21, scope: !8050)
!8057 = !DILocation(line: 299, column: 29, scope: !7899)
!8058 = !DILocation(line: 299, column: 38, scope: !7899)
!8059 = !DILocation(line: 299, column: 47, scope: !7899)
!8060 = !DILocation(line: 299, column: 2, scope: !7899)
!8061 = !DILocation(line: 299, column: 11, scope: !7899)
!8062 = !DILocation(line: 299, column: 17, scope: !7899)
!8063 = !DILocation(line: 299, column: 27, scope: !7899)
!8064 = !DILocation(line: 305, column: 19, scope: !7899)
!8065 = !DILocation(line: 305, column: 2, scope: !7899)
!8066 = !DILocation(line: 307, column: 32, scope: !7899)
!8067 = !DILocation(line: 307, column: 41, scope: !7899)
!8068 = !DILocation(line: 307, column: 2, scope: !7899)
!8069 = !DILocation(line: 307, column: 11, scope: !7899)
!8070 = !DILocation(line: 307, column: 17, scope: !7899)
!8071 = !DILocation(line: 307, column: 30, scope: !7899)
!8072 = !DILocation(line: 313, column: 6, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 313, column: 6)
!8074 = !DILocation(line: 313, column: 15, scope: !8073)
!8075 = !DILocation(line: 313, column: 28, scope: !8073)
!8076 = !DILocation(line: 313, column: 38, scope: !8073)
!8077 = !DILocation(line: 313, column: 6, scope: !7899)
!8078 = !DILocation(line: 314, column: 12, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 313, column: 59)
!8080 = !DILocation(line: 314, column: 21, scope: !8079)
!8081 = !DILocation(line: 316, column: 5, scope: !8079)
!8082 = !DILocation(line: 316, column: 14, scope: !8079)
!8083 = !DILocation(line: 316, column: 27, scope: !8079)
!8084 = !DILocation(line: 318, column: 5, scope: !8079)
!8085 = !DILocation(line: 318, column: 14, scope: !8079)
!8086 = !DILocation(line: 318, column: 27, scope: !8079)
!8087 = !DILocation(line: 318, column: 41, scope: !8079)
!8088 = !DILocation(line: 320, column: 5, scope: !8079)
!8089 = !DILocation(line: 320, column: 14, scope: !8079)
!8090 = !DILocation(line: 320, column: 27, scope: !8079)
!8091 = !DILocation(line: 320, column: 41, scope: !8079)
!8092 = !DILocation(line: 314, column: 3, scope: !8079)
!8093 = !DILocation(line: 321, column: 12, scope: !8079)
!8094 = !DILocation(line: 321, column: 21, scope: !8079)
!8095 = !DILocation(line: 323, column: 5, scope: !8079)
!8096 = !DILocation(line: 323, column: 14, scope: !8079)
!8097 = !DILocation(line: 323, column: 27, scope: !8079)
!8098 = !DILocation(line: 325, column: 5, scope: !8079)
!8099 = !DILocation(line: 325, column: 14, scope: !8079)
!8100 = !DILocation(line: 325, column: 27, scope: !8079)
!8101 = !DILocation(line: 325, column: 43, scope: !8079)
!8102 = !DILocation(line: 327, column: 5, scope: !8079)
!8103 = !DILocation(line: 327, column: 14, scope: !8079)
!8104 = !DILocation(line: 327, column: 27, scope: !8079)
!8105 = !DILocation(line: 327, column: 43, scope: !8079)
!8106 = !DILocation(line: 321, column: 3, scope: !8079)
!8107 = !DILocation(line: 328, column: 2, scope: !8079)
!8108 = !DILocation(line: 329, column: 10, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 328, column: 9)
!8110 = !DILocation(line: 329, column: 19, scope: !8109)
!8111 = !DILocation(line: 329, column: 3, scope: !8109)
!8112 = !DILocation(line: 330, column: 13, scope: !8109)
!8113 = !DILocation(line: 330, column: 22, scope: !8109)
!8114 = !DILocation(line: 330, column: 35, scope: !8109)
!8115 = !DILocation(line: 331, column: 3, scope: !8109)
!8116 = !DILocation(line: 331, column: 12, scope: !8109)
!8117 = !DILocation(line: 331, column: 26, scope: !8109)
!8118 = !DILocation(line: 333, column: 10, scope: !8109)
!8119 = !DILocation(line: 333, column: 19, scope: !8109)
!8120 = !DILocation(line: 333, column: 3, scope: !8109)
!8121 = !DILocation(line: 334, column: 13, scope: !8109)
!8122 = !DILocation(line: 334, column: 22, scope: !8109)
!8123 = !DILocation(line: 334, column: 35, scope: !8109)
!8124 = !DILocation(line: 336, column: 3, scope: !8109)
!8125 = !DILocation(line: 336, column: 12, scope: !8109)
!8126 = !DILocation(line: 336, column: 28, scope: !8109)
!8127 = !DILocation(line: 339, column: 2, scope: !7899)
!8128 = !DILocation(line: 345, column: 50, scope: !7899)
!8129 = !DILocation(line: 345, column: 29, scope: !7899)
!8130 = !DILocation(line: 345, column: 2, scope: !7899)
!8131 = !DILocation(line: 345, column: 11, scope: !7899)
!8132 = !DILocation(line: 345, column: 27, scope: !7899)
!8133 = !DILocation(line: 346, column: 6, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 346, column: 6)
!8135 = !DILocation(line: 346, column: 15, scope: !8134)
!8136 = !DILocation(line: 346, column: 6, scope: !7899)
!8137 = !DILocation(line: 347, column: 3, scope: !8134)
!8138 = !DILocation(line: 350, column: 2, scope: !7899)
!8139 = !DILocation(line: 351, column: 1, scope: !7899)
!8140 = distinct !DISubprogram(name: "mega_is_bios_enabled", scope: !3, file: !3, line: 3580, type: !7785, scopeLine: 3581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8141 = !DILocalVariable(name: "adapter", arg: 1, scope: !8140, file: !3, line: 3580, type: !182)
!8142 = !DILocation(line: 3580, column: 33, scope: !8140)
!8143 = !DILocalVariable(name: "raw_mbox", scope: !8140, file: !3, line: 3582, type: !8144)
!8144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 120, elements: !7908)
!8145 = !DILocation(line: 3582, column: 16, scope: !8140)
!8146 = !DILocalVariable(name: "mbox", scope: !8140, file: !3, line: 3583, type: !5692)
!8147 = !DILocation(line: 3583, column: 10, scope: !8140)
!8148 = !DILocation(line: 3585, column: 19, scope: !8140)
!8149 = !DILocation(line: 3585, column: 9, scope: !8140)
!8150 = !DILocation(line: 3585, column: 7, scope: !8140)
!8151 = !DILocation(line: 3587, column: 10, scope: !8140)
!8152 = !DILocation(line: 3587, column: 16, scope: !8140)
!8153 = !DILocation(line: 3587, column: 2, scope: !8140)
!8154 = !DILocation(line: 3589, column: 17, scope: !8140)
!8155 = !DILocation(line: 3589, column: 26, scope: !8140)
!8156 = !DILocation(line: 3589, column: 2, scope: !8140)
!8157 = !DILocation(line: 3591, column: 30, scope: !8140)
!8158 = !DILocation(line: 3591, column: 39, scope: !8140)
!8159 = !DILocation(line: 3591, column: 25, scope: !8140)
!8160 = !DILocation(line: 3591, column: 2, scope: !8140)
!8161 = !DILocation(line: 3591, column: 8, scope: !8140)
!8162 = !DILocation(line: 3591, column: 14, scope: !8140)
!8163 = !DILocation(line: 3591, column: 23, scope: !8140)
!8164 = !DILocation(line: 3593, column: 2, scope: !8140)
!8165 = !DILocation(line: 3593, column: 14, scope: !8140)
!8166 = !DILocation(line: 3594, column: 2, scope: !8140)
!8167 = !DILocation(line: 3594, column: 14, scope: !8140)
!8168 = !DILocation(line: 3596, column: 18, scope: !8140)
!8169 = !DILocation(line: 3596, column: 27, scope: !8140)
!8170 = !DILocation(line: 3596, column: 2, scope: !8140)
!8171 = !DILocation(line: 3598, column: 18, scope: !8140)
!8172 = !DILocation(line: 3598, column: 27, scope: !8140)
!8173 = !DILocation(line: 3598, column: 9, scope: !8140)
!8174 = !DILocation(line: 3598, column: 2, scope: !8140)
!8175 = distinct !DISubprogram(name: "mega_enum_raid_scsi", scope: !3, file: !3, line: 3611, type: !8176, scopeLine: 3612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8176 = !DISubroutineType(types: !8177)
!8177 = !{null, !182}
!8178 = !DILocalVariable(name: "adapter", arg: 1, scope: !8175, file: !3, line: 3611, type: !182)
!8179 = !DILocation(line: 3611, column: 32, scope: !8175)
!8180 = !DILocalVariable(name: "raw_mbox", scope: !8175, file: !3, line: 3613, type: !8144)
!8181 = !DILocation(line: 3613, column: 16, scope: !8175)
!8182 = !DILocalVariable(name: "mbox", scope: !8175, file: !3, line: 3614, type: !5692)
!8183 = !DILocation(line: 3614, column: 10, scope: !8175)
!8184 = !DILocalVariable(name: "i", scope: !8175, file: !3, line: 3615, type: !188)
!8185 = !DILocation(line: 3615, column: 6, scope: !8175)
!8186 = !DILocation(line: 3617, column: 19, scope: !8175)
!8187 = !DILocation(line: 3617, column: 9, scope: !8175)
!8188 = !DILocation(line: 3617, column: 7, scope: !8175)
!8189 = !DILocation(line: 3619, column: 10, scope: !8175)
!8190 = !DILocation(line: 3619, column: 16, scope: !8175)
!8191 = !DILocation(line: 3619, column: 2, scope: !8175)
!8192 = !DILocation(line: 3624, column: 2, scope: !8175)
!8193 = !DILocation(line: 3624, column: 14, scope: !8175)
!8194 = !DILocation(line: 3625, column: 2, scope: !8175)
!8195 = !DILocation(line: 3625, column: 14, scope: !8175)
!8196 = !DILocation(line: 3627, column: 17, scope: !8175)
!8197 = !DILocation(line: 3627, column: 26, scope: !8175)
!8198 = !DILocation(line: 3627, column: 2, scope: !8175)
!8199 = !DILocation(line: 3629, column: 30, scope: !8175)
!8200 = !DILocation(line: 3629, column: 39, scope: !8175)
!8201 = !DILocation(line: 3629, column: 25, scope: !8175)
!8202 = !DILocation(line: 3629, column: 2, scope: !8175)
!8203 = !DILocation(line: 3629, column: 8, scope: !8175)
!8204 = !DILocation(line: 3629, column: 14, scope: !8175)
!8205 = !DILocation(line: 3629, column: 23, scope: !8175)
!8206 = !DILocation(line: 3635, column: 2, scope: !8175)
!8207 = !DILocation(line: 3635, column: 11, scope: !8175)
!8208 = !DILocation(line: 3635, column: 25, scope: !8175)
!8209 = !DILocation(line: 3637, column: 22, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 3637, column: 5)
!8211 = !DILocation(line: 3637, column: 31, scope: !8210)
!8212 = !DILocation(line: 3637, column: 6, scope: !8210)
!8213 = !DILocation(line: 3637, column: 5, scope: !8175)
!8214 = !DILocation(line: 3638, column: 38, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 3637, column: 42)
!8216 = !DILocation(line: 3638, column: 47, scope: !8215)
!8217 = !DILocation(line: 3638, column: 28, scope: !8215)
!8218 = !DILocation(line: 3638, column: 3, scope: !8215)
!8219 = !DILocation(line: 3638, column: 12, scope: !8215)
!8220 = !DILocation(line: 3638, column: 26, scope: !8215)
!8221 = !DILocation(line: 3640, column: 2, scope: !8215)
!8222 = !DILocation(line: 3642, column: 9, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 3642, column: 2)
!8224 = !DILocation(line: 3642, column: 7, scope: !8223)
!8225 = !DILocation(line: 3642, column: 14, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 3642, column: 2)
!8227 = !DILocation(line: 3642, column: 18, scope: !8226)
!8228 = !DILocation(line: 3642, column: 27, scope: !8226)
!8229 = !DILocation(line: 3642, column: 40, scope: !8226)
!8230 = !DILocation(line: 3642, column: 16, scope: !8226)
!8231 = !DILocation(line: 3642, column: 2, scope: !8223)
!8232 = !DILocation(line: 3643, column: 8, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !3, line: 3643, column: 7)
!8234 = distinct !DILexicalBlock(scope: !8226, file: !3, line: 3642, column: 57)
!8235 = !DILocation(line: 3643, column: 17, scope: !8233)
!8236 = !DILocation(line: 3643, column: 34, scope: !8233)
!8237 = !DILocation(line: 3643, column: 31, scope: !8233)
!8238 = !DILocation(line: 3643, column: 37, scope: !8233)
!8239 = !DILocation(line: 3643, column: 7, scope: !8234)
!8240 = !DILocation(line: 3644, column: 4, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 3643, column: 46)
!8242 = !DILocation(line: 3646, column: 3, scope: !8241)
!8243 = !DILocation(line: 3648, column: 4, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 3647, column: 8)
!8245 = !DILocation(line: 3651, column: 2, scope: !8234)
!8246 = !DILocation(line: 3642, column: 52, scope: !8226)
!8247 = !DILocation(line: 3642, column: 2, scope: !8226)
!8248 = distinct !{!8248, !8231, !8249}
!8249 = !DILocation(line: 3651, column: 2, scope: !8223)
!8250 = !DILocation(line: 3653, column: 2, scope: !8175)
!8251 = distinct !DISubprogram(name: "mega_get_boot_drv", scope: !3, file: !3, line: 3665, type: !8176, scopeLine: 3666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8252 = !DILocalVariable(name: "adapter", arg: 1, scope: !8251, file: !3, line: 3665, type: !182)
!8253 = !DILocation(line: 3665, column: 30, scope: !8251)
!8254 = !DILocalVariable(name: "prv_bios_data", scope: !8251, file: !3, line: 3667, type: !5780)
!8255 = !DILocation(line: 3667, column: 28, scope: !8251)
!8256 = !DILocalVariable(name: "raw_mbox", scope: !8251, file: !3, line: 3668, type: !8144)
!8257 = !DILocation(line: 3668, column: 16, scope: !8251)
!8258 = !DILocalVariable(name: "mbox", scope: !8251, file: !3, line: 3669, type: !5692)
!8259 = !DILocation(line: 3669, column: 10, scope: !8251)
!8260 = !DILocalVariable(name: "cksum", scope: !8251, file: !3, line: 3670, type: !218)
!8261 = !DILocation(line: 3670, column: 6, scope: !8251)
!8262 = !DILocalVariable(name: "cksum_p", scope: !8251, file: !3, line: 3671, type: !5551)
!8263 = !DILocation(line: 3671, column: 6, scope: !8251)
!8264 = !DILocalVariable(name: "boot_pdrv", scope: !8251, file: !3, line: 3672, type: !213)
!8265 = !DILocation(line: 3672, column: 5, scope: !8251)
!8266 = !DILocalVariable(name: "i", scope: !8251, file: !3, line: 3673, type: !188)
!8267 = !DILocation(line: 3673, column: 6, scope: !8251)
!8268 = !DILocation(line: 3675, column: 19, scope: !8251)
!8269 = !DILocation(line: 3675, column: 9, scope: !8251)
!8270 = !DILocation(line: 3675, column: 7, scope: !8251)
!8271 = !DILocation(line: 3677, column: 10, scope: !8251)
!8272 = !DILocation(line: 3677, column: 16, scope: !8251)
!8273 = !DILocation(line: 3677, column: 2, scope: !8251)
!8274 = !DILocation(line: 3679, column: 2, scope: !8251)
!8275 = !DILocation(line: 3679, column: 14, scope: !8251)
!8276 = !DILocation(line: 3680, column: 2, scope: !8251)
!8277 = !DILocation(line: 3680, column: 14, scope: !8251)
!8278 = !DILocation(line: 3682, column: 17, scope: !8251)
!8279 = !DILocation(line: 3682, column: 26, scope: !8251)
!8280 = !DILocation(line: 3682, column: 2, scope: !8251)
!8281 = !DILocation(line: 3684, column: 30, scope: !8251)
!8282 = !DILocation(line: 3684, column: 39, scope: !8251)
!8283 = !DILocation(line: 3684, column: 25, scope: !8251)
!8284 = !DILocation(line: 3684, column: 2, scope: !8251)
!8285 = !DILocation(line: 3684, column: 8, scope: !8251)
!8286 = !DILocation(line: 3684, column: 14, scope: !8251)
!8287 = !DILocation(line: 3684, column: 23, scope: !8251)
!8288 = !DILocation(line: 3686, column: 2, scope: !8251)
!8289 = !DILocation(line: 3686, column: 11, scope: !8251)
!8290 = !DILocation(line: 3686, column: 29, scope: !8251)
!8291 = !DILocation(line: 3687, column: 2, scope: !8251)
!8292 = !DILocation(line: 3687, column: 11, scope: !8251)
!8293 = !DILocation(line: 3687, column: 21, scope: !8251)
!8294 = !DILocation(line: 3689, column: 2, scope: !8251)
!8295 = !DILocation(line: 3689, column: 11, scope: !8251)
!8296 = !DILocation(line: 3689, column: 29, scope: !8251)
!8297 = !DILocation(line: 3690, column: 2, scope: !8251)
!8298 = !DILocation(line: 3690, column: 11, scope: !8251)
!8299 = !DILocation(line: 3690, column: 24, scope: !8251)
!8300 = !DILocation(line: 3691, column: 2, scope: !8251)
!8301 = !DILocation(line: 3691, column: 11, scope: !8251)
!8302 = !DILocation(line: 3691, column: 25, scope: !8251)
!8303 = !DILocation(line: 3693, column: 21, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8251, file: !3, line: 3693, column: 5)
!8305 = !DILocation(line: 3693, column: 30, scope: !8304)
!8306 = !DILocation(line: 3693, column: 5, scope: !8304)
!8307 = !DILocation(line: 3693, column: 40, scope: !8304)
!8308 = !DILocation(line: 3693, column: 5, scope: !8251)
!8309 = !DILocation(line: 3695, column: 32, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 3693, column: 46)
!8311 = !DILocation(line: 3695, column: 41, scope: !8310)
!8312 = !DILocation(line: 3695, column: 4, scope: !8310)
!8313 = !DILocation(line: 3694, column: 17, scope: !8310)
!8314 = !DILocation(line: 3697, column: 9, scope: !8310)
!8315 = !DILocation(line: 3698, column: 21, scope: !8310)
!8316 = !DILocation(line: 3698, column: 13, scope: !8310)
!8317 = !DILocation(line: 3698, column: 11, scope: !8310)
!8318 = !DILocation(line: 3699, column: 10, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 3699, column: 3)
!8320 = !DILocation(line: 3699, column: 8, scope: !8319)
!8321 = !DILocation(line: 3699, column: 15, scope: !8322)
!8322 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 3699, column: 3)
!8323 = !DILocation(line: 3699, column: 17, scope: !8322)
!8324 = !DILocation(line: 3699, column: 3, scope: !8319)
!8325 = !DILocation(line: 3700, column: 27, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8322, file: !3, line: 3699, column: 29)
!8327 = !DILocation(line: 3700, column: 19, scope: !8326)
!8328 = !DILocation(line: 3700, column: 13, scope: !8326)
!8329 = !DILocation(line: 3700, column: 10, scope: !8326)
!8330 = !DILocation(line: 3701, column: 3, scope: !8326)
!8331 = !DILocation(line: 3699, column: 24, scope: !8322)
!8332 = !DILocation(line: 3699, column: 3, scope: !8322)
!8333 = distinct !{!8333, !8324, !8334}
!8334 = !DILocation(line: 3701, column: 3, scope: !8319)
!8335 = !DILocation(line: 3703, column: 7, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 3703, column: 7)
!8337 = !DILocation(line: 3703, column: 22, scope: !8336)
!8338 = !DILocation(line: 3703, column: 39, scope: !8336)
!8339 = !DILocation(line: 3703, column: 38, scope: !8336)
!8340 = !DILocation(line: 3703, column: 31, scope: !8336)
!8341 = !DILocation(line: 3703, column: 28, scope: !8336)
!8342 = !DILocation(line: 3703, column: 7, scope: !8310)
!8343 = !DILocation(line: 3709, column: 8, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 3709, column: 8)
!8345 = distinct !DILexicalBlock(scope: !8336, file: !3, line: 3703, column: 48)
!8346 = !DILocation(line: 3709, column: 23, scope: !8344)
!8347 = !DILocation(line: 3709, column: 32, scope: !8344)
!8348 = !DILocation(line: 3709, column: 8, scope: !8345)
!8349 = !DILocation(line: 3710, column: 5, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8344, file: !3, line: 3709, column: 41)
!8351 = !DILocation(line: 3710, column: 14, scope: !8350)
!8352 = !DILocation(line: 3710, column: 32, scope: !8350)
!8353 = !DILocation(line: 3711, column: 17, scope: !8350)
!8354 = !DILocation(line: 3711, column: 32, scope: !8350)
!8355 = !DILocation(line: 3711, column: 41, scope: !8350)
!8356 = !DILocation(line: 3711, column: 15, scope: !8350)
!8357 = !DILocation(line: 3712, column: 29, scope: !8350)
!8358 = !DILocation(line: 3712, column: 39, scope: !8350)
!8359 = !DILocation(line: 3712, column: 5, scope: !8350)
!8360 = !DILocation(line: 3712, column: 14, scope: !8350)
!8361 = !DILocation(line: 3712, column: 27, scope: !8350)
!8362 = !DILocation(line: 3713, column: 30, scope: !8350)
!8363 = !DILocation(line: 3713, column: 40, scope: !8350)
!8364 = !DILocation(line: 3713, column: 5, scope: !8350)
!8365 = !DILocation(line: 3713, column: 14, scope: !8350)
!8366 = !DILocation(line: 3713, column: 28, scope: !8350)
!8367 = !DILocation(line: 3714, column: 4, scope: !8350)
!8368 = !DILocation(line: 3716, column: 5, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8344, file: !3, line: 3715, column: 9)
!8370 = !DILocation(line: 3716, column: 14, scope: !8369)
!8371 = !DILocation(line: 3716, column: 32, scope: !8369)
!8372 = !DILocation(line: 3717, column: 26, scope: !8369)
!8373 = !DILocation(line: 3717, column: 41, scope: !8369)
!8374 = !DILocation(line: 3717, column: 5, scope: !8369)
!8375 = !DILocation(line: 3717, column: 14, scope: !8369)
!8376 = !DILocation(line: 3717, column: 24, scope: !8369)
!8377 = !DILocation(line: 3719, column: 3, scope: !8345)
!8378 = !DILocation(line: 3720, column: 2, scope: !8310)
!8379 = !DILocation(line: 3722, column: 1, scope: !8251)
!8380 = distinct !DISubprogram(name: "mega_support_random_del", scope: !3, file: !3, line: 3732, type: !7785, scopeLine: 3733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8381 = !DILocalVariable(name: "adapter", arg: 1, scope: !8380, file: !3, line: 3732, type: !182)
!8382 = !DILocation(line: 3732, column: 36, scope: !8380)
!8383 = !DILocalVariable(name: "raw_mbox", scope: !8380, file: !3, line: 3734, type: !8144)
!8384 = !DILocation(line: 3734, column: 16, scope: !8380)
!8385 = !DILocalVariable(name: "mbox", scope: !8380, file: !3, line: 3735, type: !5692)
!8386 = !DILocation(line: 3735, column: 10, scope: !8380)
!8387 = !DILocalVariable(name: "rval", scope: !8380, file: !3, line: 3736, type: !188)
!8388 = !DILocation(line: 3736, column: 6, scope: !8380)
!8389 = !DILocation(line: 3738, column: 19, scope: !8380)
!8390 = !DILocation(line: 3738, column: 9, scope: !8380)
!8391 = !DILocation(line: 3738, column: 7, scope: !8380)
!8392 = !DILocation(line: 3740, column: 10, scope: !8380)
!8393 = !DILocation(line: 3740, column: 16, scope: !8380)
!8394 = !DILocation(line: 3740, column: 2, scope: !8380)
!8395 = !DILocation(line: 3745, column: 2, scope: !8380)
!8396 = !DILocation(line: 3745, column: 14, scope: !8380)
!8397 = !DILocation(line: 3746, column: 2, scope: !8380)
!8398 = !DILocation(line: 3746, column: 14, scope: !8380)
!8399 = !DILocation(line: 3748, column: 25, scope: !8380)
!8400 = !DILocation(line: 3748, column: 34, scope: !8380)
!8401 = !DILocation(line: 3748, column: 9, scope: !8380)
!8402 = !DILocation(line: 3748, column: 7, scope: !8380)
!8403 = !DILocation(line: 3750, column: 10, scope: !8380)
!8404 = !DILocation(line: 3750, column: 9, scope: !8380)
!8405 = !DILocation(line: 3750, column: 2, scope: !8380)
!8406 = distinct !DISubprogram(name: "mega_init_scb", scope: !3, file: !3, line: 2871, type: !7785, scopeLine: 2872, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8407 = !DILocalVariable(name: "adapter", arg: 1, scope: !8406, file: !3, line: 2871, type: !182)
!8408 = !DILocation(line: 2871, column: 26, scope: !8406)
!8409 = !DILocalVariable(name: "scb", scope: !8406, file: !3, line: 2873, type: !5581)
!8410 = !DILocation(line: 2873, column: 9, scope: !8406)
!8411 = !DILocalVariable(name: "i", scope: !8406, file: !3, line: 2874, type: !188)
!8412 = !DILocation(line: 2874, column: 6, scope: !8406)
!8413 = !DILocation(line: 2876, column: 9, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8406, file: !3, line: 2876, column: 2)
!8415 = !DILocation(line: 2876, column: 7, scope: !8414)
!8416 = !DILocation(line: 2876, column: 14, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8414, file: !3, line: 2876, column: 2)
!8418 = !DILocation(line: 2876, column: 18, scope: !8417)
!8419 = !DILocation(line: 2876, column: 27, scope: !8417)
!8420 = !DILocation(line: 2876, column: 16, scope: !8417)
!8421 = !DILocation(line: 2876, column: 2, scope: !8414)
!8422 = !DILocation(line: 2878, column: 10, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 2876, column: 43)
!8424 = !DILocation(line: 2878, column: 19, scope: !8423)
!8425 = !DILocation(line: 2878, column: 28, scope: !8423)
!8426 = !DILocation(line: 2878, column: 7, scope: !8423)
!8427 = !DILocation(line: 2880, column: 3, scope: !8423)
!8428 = !DILocation(line: 2880, column: 8, scope: !8423)
!8429 = !DILocation(line: 2880, column: 14, scope: !8423)
!8430 = !DILocation(line: 2881, column: 3, scope: !8423)
!8431 = !DILocation(line: 2881, column: 8, scope: !8423)
!8432 = !DILocation(line: 2881, column: 12, scope: !8423)
!8433 = !DILocation(line: 2882, column: 3, scope: !8423)
!8434 = !DILocation(line: 2882, column: 8, scope: !8423)
!8435 = !DILocation(line: 2882, column: 14, scope: !8423)
!8436 = !DILocation(line: 2883, column: 3, scope: !8423)
!8437 = !DILocation(line: 2883, column: 8, scope: !8423)
!8438 = !DILocation(line: 2883, column: 15, scope: !8423)
!8439 = !DILocation(line: 2884, column: 2, scope: !8423)
!8440 = !DILocation(line: 2876, column: 38, scope: !8417)
!8441 = !DILocation(line: 2876, column: 2, scope: !8417)
!8442 = distinct !{!8442, !8421, !8443}
!8443 = !DILocation(line: 2884, column: 2, scope: !8414)
!8444 = !DILocation(line: 2886, column: 9, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8406, file: !3, line: 2886, column: 2)
!8446 = !DILocation(line: 2886, column: 7, scope: !8445)
!8447 = !DILocation(line: 2886, column: 14, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8445, file: !3, line: 2886, column: 2)
!8449 = !DILocation(line: 2886, column: 18, scope: !8448)
!8450 = !DILocation(line: 2886, column: 27, scope: !8448)
!8451 = !DILocation(line: 2886, column: 16, scope: !8448)
!8452 = !DILocation(line: 2886, column: 2, scope: !8445)
!8453 = !DILocation(line: 2888, column: 10, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 2886, column: 43)
!8455 = !DILocation(line: 2888, column: 19, scope: !8454)
!8456 = !DILocation(line: 2888, column: 28, scope: !8454)
!8457 = !DILocation(line: 2888, column: 7, scope: !8454)
!8458 = !DILocation(line: 2890, column: 14, scope: !8454)
!8459 = !DILocation(line: 2890, column: 3, scope: !8454)
!8460 = !DILocation(line: 2890, column: 8, scope: !8454)
!8461 = !DILocation(line: 2890, column: 12, scope: !8454)
!8462 = !DILocation(line: 2892, column: 36, scope: !8454)
!8463 = !DILocation(line: 2892, column: 45, scope: !8454)
!8464 = !DILocation(line: 2892, column: 50, scope: !8454)
!8465 = !DILocation(line: 2893, column: 28, scope: !8454)
!8466 = !DILocation(line: 2893, column: 37, scope: !8454)
!8467 = !DILocation(line: 2893, column: 26, scope: !8454)
!8468 = !DILocation(line: 2894, column: 8, scope: !8454)
!8469 = !DILocation(line: 2894, column: 13, scope: !8454)
!8470 = !DILocation(line: 2892, column: 16, scope: !8454)
!8471 = !DILocation(line: 2892, column: 3, scope: !8454)
!8472 = !DILocation(line: 2892, column: 8, scope: !8454)
!8473 = !DILocation(line: 2892, column: 14, scope: !8454)
!8474 = !DILocation(line: 2896, column: 29, scope: !8454)
!8475 = !DILocation(line: 2896, column: 34, scope: !8454)
!8476 = !DILocation(line: 2896, column: 14, scope: !8454)
!8477 = !DILocation(line: 2896, column: 3, scope: !8454)
!8478 = !DILocation(line: 2896, column: 8, scope: !8454)
!8479 = !DILocation(line: 2896, column: 12, scope: !8454)
!8480 = !DILocation(line: 2898, column: 8, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 2898, column: 7)
!8482 = !DILocation(line: 2898, column: 13, scope: !8481)
!8483 = !DILocation(line: 2898, column: 7, scope: !8454)
!8484 = !DILocation(line: 2899, column: 4, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8481, file: !3, line: 2898, column: 19)
!8486 = !DILocation(line: 2900, column: 18, scope: !8485)
!8487 = !DILocation(line: 2900, column: 4, scope: !8485)
!8488 = !DILocation(line: 2901, column: 4, scope: !8485)
!8489 = !DILocation(line: 2904, column: 36, scope: !8454)
!8490 = !DILocation(line: 2904, column: 45, scope: !8454)
!8491 = !DILocation(line: 2904, column: 50, scope: !8454)
!8492 = !DILocation(line: 2906, column: 8, scope: !8454)
!8493 = !DILocation(line: 2906, column: 13, scope: !8454)
!8494 = !DILocation(line: 2904, column: 16, scope: !8454)
!8495 = !DILocation(line: 2904, column: 3, scope: !8454)
!8496 = !DILocation(line: 2904, column: 8, scope: !8454)
!8497 = !DILocation(line: 2904, column: 14, scope: !8454)
!8498 = !DILocation(line: 2908, column: 8, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 2908, column: 7)
!8500 = !DILocation(line: 2908, column: 13, scope: !8499)
!8501 = !DILocation(line: 2908, column: 7, scope: !8454)
!8502 = !DILocation(line: 2909, column: 4, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 2908, column: 21)
!8504 = !DILocation(line: 2910, column: 18, scope: !8503)
!8505 = !DILocation(line: 2910, column: 4, scope: !8503)
!8506 = !DILocation(line: 2911, column: 4, scope: !8503)
!8507 = !DILocation(line: 2914, column: 37, scope: !8454)
!8508 = !DILocation(line: 2914, column: 46, scope: !8454)
!8509 = !DILocation(line: 2914, column: 51, scope: !8454)
!8510 = !DILocation(line: 2916, column: 9, scope: !8454)
!8511 = !DILocation(line: 2916, column: 14, scope: !8454)
!8512 = !DILocation(line: 2914, column: 17, scope: !8454)
!8513 = !DILocation(line: 2914, column: 3, scope: !8454)
!8514 = !DILocation(line: 2914, column: 8, scope: !8454)
!8515 = !DILocation(line: 2914, column: 15, scope: !8454)
!8516 = !DILocation(line: 2918, column: 8, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 2918, column: 7)
!8518 = !DILocation(line: 2918, column: 13, scope: !8517)
!8519 = !DILocation(line: 2918, column: 7, scope: !8454)
!8520 = !DILocation(line: 2919, column: 4, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8517, file: !3, line: 2918, column: 22)
!8522 = !DILocation(line: 2921, column: 18, scope: !8521)
!8523 = !DILocation(line: 2921, column: 4, scope: !8521)
!8524 = !DILocation(line: 2922, column: 4, scope: !8521)
!8525 = !DILocation(line: 2926, column: 3, scope: !8454)
!8526 = !DILocation(line: 2926, column: 8, scope: !8454)
!8527 = !DILocation(line: 2926, column: 17, scope: !8454)
!8528 = !DILocation(line: 2933, column: 3, scope: !8454)
!8529 = !DILocation(line: 2933, column: 8, scope: !8454)
!8530 = !DILocation(line: 2933, column: 14, scope: !8454)
!8531 = !DILocation(line: 2934, column: 3, scope: !8454)
!8532 = !DILocation(line: 2934, column: 8, scope: !8454)
!8533 = !DILocation(line: 2934, column: 12, scope: !8454)
!8534 = !DILocation(line: 2935, column: 13, scope: !8454)
!8535 = !DILocation(line: 2935, column: 18, scope: !8454)
!8536 = !DILocation(line: 2935, column: 25, scope: !8454)
!8537 = !DILocation(line: 2935, column: 34, scope: !8454)
!8538 = !DILocation(line: 2935, column: 3, scope: !8454)
!8539 = !DILocation(line: 2936, column: 2, scope: !8454)
!8540 = !DILocation(line: 2886, column: 38, scope: !8448)
!8541 = !DILocation(line: 2886, column: 2, scope: !8448)
!8542 = distinct !{!8542, !8452, !8543}
!8543 = !DILocation(line: 2936, column: 2, scope: !8445)
!8544 = !DILocation(line: 2938, column: 2, scope: !8406)
!8545 = !DILocation(line: 2939, column: 1, scope: !8406)
!8546 = !DILocalVariable(name: "x", arg: 1, scope: !6156, file: !1673, line: 85, type: !1671)
!8547 = !DILocation(line: 85, column: 57, scope: !6156)
!8548 = !DILocation(line: 87, column: 2, scope: !6156)
!8549 = !DILocation(line: 87, column: 5, scope: !6156)
!8550 = !DILocation(line: 87, column: 10, scope: !6156)
!8551 = !DILocation(line: 88, column: 2, scope: !6156)
!8552 = !DILocation(line: 88, column: 2, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !6156, file: !1673, line: 88, column: 2)
!8554 = !DILocation(line: 89, column: 1, scope: !6156)
!8555 = distinct !DISubprogram(name: "mega_support_cluster", scope: !3, file: !3, line: 3921, type: !7785, scopeLine: 3922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8556 = !DILocalVariable(name: "adapter", arg: 1, scope: !8555, file: !3, line: 3921, type: !182)
!8557 = !DILocation(line: 3921, column: 33, scope: !8555)
!8558 = !DILocalVariable(name: "raw_mbox", scope: !8555, file: !3, line: 3923, type: !8144)
!8559 = !DILocation(line: 3923, column: 16, scope: !8555)
!8560 = !DILocalVariable(name: "mbox", scope: !8555, file: !3, line: 3924, type: !5692)
!8561 = !DILocation(line: 3924, column: 10, scope: !8555)
!8562 = !DILocation(line: 3926, column: 19, scope: !8555)
!8563 = !DILocation(line: 3926, column: 9, scope: !8555)
!8564 = !DILocation(line: 3926, column: 7, scope: !8555)
!8565 = !DILocation(line: 3928, column: 9, scope: !8555)
!8566 = !DILocation(line: 3928, column: 2, scope: !8555)
!8567 = !DILocation(line: 3930, column: 17, scope: !8555)
!8568 = !DILocation(line: 3930, column: 26, scope: !8555)
!8569 = !DILocation(line: 3930, column: 2, scope: !8555)
!8570 = !DILocation(line: 3932, column: 30, scope: !8555)
!8571 = !DILocation(line: 3932, column: 39, scope: !8555)
!8572 = !DILocation(line: 3932, column: 25, scope: !8555)
!8573 = !DILocation(line: 3932, column: 2, scope: !8555)
!8574 = !DILocation(line: 3932, column: 8, scope: !8555)
!8575 = !DILocation(line: 3932, column: 14, scope: !8555)
!8576 = !DILocation(line: 3932, column: 23, scope: !8555)
!8577 = !DILocation(line: 3938, column: 2, scope: !8555)
!8578 = !DILocation(line: 3938, column: 14, scope: !8555)
!8579 = !DILocation(line: 3940, column: 22, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 3940, column: 6)
!8581 = !DILocation(line: 3940, column: 31, scope: !8580)
!8582 = !DILocation(line: 3940, column: 6, scope: !8580)
!8583 = !DILocation(line: 3940, column: 41, scope: !8580)
!8584 = !DILocation(line: 3940, column: 6, scope: !8555)
!8585 = !DILocation(line: 3946, column: 30, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 3940, column: 48)
!8587 = !DILocation(line: 3946, column: 39, scope: !8586)
!8588 = !DILocation(line: 3946, column: 22, scope: !8586)
!8589 = !DILocation(line: 3946, column: 3, scope: !8586)
!8590 = !DILocation(line: 3946, column: 12, scope: !8586)
!8591 = !DILocation(line: 3946, column: 20, scope: !8586)
!8592 = !DILocation(line: 3947, column: 28, scope: !8586)
!8593 = !DILocation(line: 3947, column: 37, scope: !8586)
!8594 = !DILocation(line: 3947, column: 3, scope: !8586)
!8595 = !DILocation(line: 3947, column: 12, scope: !8586)
!8596 = !DILocation(line: 3947, column: 18, scope: !8586)
!8597 = !DILocation(line: 3947, column: 26, scope: !8586)
!8598 = !DILocation(line: 3949, column: 3, scope: !8586)
!8599 = !DILocation(line: 3952, column: 2, scope: !8555)
!8600 = !DILocation(line: 3953, column: 1, scope: !8555)
!8601 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !255, file: !255, line: 1870, type: !8602, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8602 = !DISubroutineType(types: !8603)
!8603 = !{null, !253, !197}
!8604 = !DILocalVariable(name: "pdev", arg: 1, scope: !8601, file: !255, line: 1870, type: !253)
!8605 = !DILocation(line: 1870, column: 52, scope: !8601)
!8606 = !DILocalVariable(name: "data", arg: 2, scope: !8601, file: !255, line: 1870, type: !197)
!8607 = !DILocation(line: 1870, column: 64, scope: !8601)
!8608 = !DILocation(line: 1872, column: 19, scope: !8601)
!8609 = !DILocation(line: 1872, column: 25, scope: !8601)
!8610 = !DILocation(line: 1872, column: 30, scope: !8601)
!8611 = !DILocation(line: 1872, column: 2, scope: !8601)
!8612 = !DILocation(line: 1873, column: 1, scope: !8601)
!8613 = distinct !DISubprogram(name: "mega_create_proc_entry", scope: !3, file: !3, line: 2745, type: !8614, scopeLine: 2746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8614 = !DISubroutineType(types: !8615)
!8615 = !{null, !188, !326}
!8616 = !DILocalVariable(name: "index", arg: 1, scope: !8613, file: !3, line: 2745, type: !188)
!8617 = !DILocation(line: 2745, column: 28, scope: !8613)
!8618 = !DILocalVariable(name: "parent", arg: 2, scope: !8613, file: !3, line: 2745, type: !326)
!8619 = !DILocation(line: 2745, column: 58, scope: !8613)
!8620 = !DILocalVariable(name: "adapter", scope: !8613, file: !3, line: 2747, type: !182)
!8621 = !DILocation(line: 2747, column: 13, scope: !8613)
!8622 = !DILocation(line: 2747, column: 38, scope: !8613)
!8623 = !DILocation(line: 2747, column: 23, scope: !8613)
!8624 = !DILocalVariable(name: "dir", scope: !8613, file: !3, line: 2748, type: !326)
!8625 = !DILocation(line: 2748, column: 25, scope: !8613)
!8626 = !DILocalVariable(name: "string", scope: !8613, file: !3, line: 2749, type: !5560)
!8627 = !DILocation(line: 2749, column: 5, scope: !8613)
!8628 = !DILocation(line: 2751, column: 10, scope: !8613)
!8629 = !DILocation(line: 2751, column: 27, scope: !8613)
!8630 = !DILocation(line: 2751, column: 36, scope: !8613)
!8631 = !DILocation(line: 2751, column: 42, scope: !8613)
!8632 = !DILocation(line: 2751, column: 2, scope: !8613)
!8633 = !DILocation(line: 2752, column: 24, scope: !8613)
!8634 = !DILocation(line: 2752, column: 35, scope: !8613)
!8635 = !DILocation(line: 2752, column: 43, scope: !8613)
!8636 = !DILocation(line: 2752, column: 8, scope: !8613)
!8637 = !DILocation(line: 2752, column: 6, scope: !8613)
!8638 = !DILocation(line: 2753, column: 7, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8613, file: !3, line: 2753, column: 6)
!8640 = !DILocation(line: 2753, column: 6, scope: !8613)
!8641 = !DILocation(line: 2754, column: 3, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 2753, column: 12)
!8643 = !DILocation(line: 2755, column: 3, scope: !8642)
!8644 = !DILocation(line: 2758, column: 45, scope: !8613)
!8645 = !DILocation(line: 2759, column: 22, scope: !8613)
!8646 = !DILocation(line: 2758, column: 2, scope: !8613)
!8647 = !DILocation(line: 2760, column: 43, scope: !8613)
!8648 = !DILocation(line: 2761, column: 20, scope: !8613)
!8649 = !DILocation(line: 2760, column: 2, scope: !8613)
!8650 = !DILocation(line: 2762, column: 46, scope: !8613)
!8651 = !DILocation(line: 2763, column: 20, scope: !8613)
!8652 = !DILocation(line: 2762, column: 2, scope: !8613)
!8653 = !DILocation(line: 2765, column: 51, scope: !8613)
!8654 = !DILocation(line: 2766, column: 28, scope: !8613)
!8655 = !DILocation(line: 2765, column: 2, scope: !8613)
!8656 = !DILocation(line: 2767, column: 53, scope: !8613)
!8657 = !DILocation(line: 2768, column: 23, scope: !8613)
!8658 = !DILocation(line: 2767, column: 2, scope: !8613)
!8659 = !DILocation(line: 2769, column: 53, scope: !8613)
!8660 = !DILocation(line: 2770, column: 24, scope: !8613)
!8661 = !DILocation(line: 2769, column: 2, scope: !8613)
!8662 = !DILocation(line: 2771, column: 53, scope: !8613)
!8663 = !DILocation(line: 2772, column: 24, scope: !8613)
!8664 = !DILocation(line: 2771, column: 2, scope: !8613)
!8665 = !DILocation(line: 2773, column: 53, scope: !8613)
!8666 = !DILocation(line: 2774, column: 24, scope: !8613)
!8667 = !DILocation(line: 2773, column: 2, scope: !8613)
!8668 = !DILocation(line: 2775, column: 53, scope: !8613)
!8669 = !DILocation(line: 2776, column: 24, scope: !8613)
!8670 = !DILocation(line: 2775, column: 2, scope: !8613)
!8671 = !DILocation(line: 2777, column: 53, scope: !8613)
!8672 = !DILocation(line: 2778, column: 23, scope: !8613)
!8673 = !DILocation(line: 2777, column: 2, scope: !8613)
!8674 = !DILocation(line: 2779, column: 55, scope: !8613)
!8675 = !DILocation(line: 2780, column: 23, scope: !8613)
!8676 = !DILocation(line: 2779, column: 2, scope: !8613)
!8677 = !DILocation(line: 2781, column: 55, scope: !8613)
!8678 = !DILocation(line: 2782, column: 23, scope: !8613)
!8679 = !DILocation(line: 2781, column: 2, scope: !8613)
!8680 = !DILocation(line: 2783, column: 55, scope: !8613)
!8681 = !DILocation(line: 2784, column: 23, scope: !8613)
!8682 = !DILocation(line: 2783, column: 2, scope: !8613)
!8683 = !DILocation(line: 2786, column: 1, scope: !8613)
!8684 = distinct !DISubprogram(name: "scsi_add_host", scope: !154, file: !154, line: 753, type: !8685, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8685 = !DISubroutineType(types: !8686)
!8686 = !{!188, !5121, !341}
!8687 = !DILocalVariable(name: "host", arg: 1, scope: !8684, file: !154, line: 753, type: !5121)
!8688 = !DILocation(line: 753, column: 64, scope: !8684)
!8689 = !DILocalVariable(name: "dev", arg: 2, scope: !8684, file: !154, line: 754, type: !341)
!8690 = !DILocation(line: 754, column: 26, scope: !8684)
!8691 = !DILocation(line: 756, column: 32, scope: !8684)
!8692 = !DILocation(line: 756, column: 38, scope: !8684)
!8693 = !DILocation(line: 756, column: 43, scope: !8684)
!8694 = !DILocation(line: 756, column: 9, scope: !8684)
!8695 = !DILocation(line: 756, column: 2, scope: !8684)
!8696 = distinct !DISubprogram(name: "dma_free_coherent", scope: !6126, file: !6126, line: 400, type: !8697, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8697 = !DISubroutineType(types: !8698)
!8698 = !{null, !341, !445, !197, !240}
!8699 = !DILocalVariable(name: "dev", arg: 1, scope: !8696, file: !6126, line: 400, type: !341)
!8700 = !DILocation(line: 400, column: 53, scope: !8696)
!8701 = !DILocalVariable(name: "size", arg: 2, scope: !8696, file: !6126, line: 400, type: !445)
!8702 = !DILocation(line: 400, column: 65, scope: !8696)
!8703 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !8696, file: !6126, line: 401, type: !197)
!8704 = !DILocation(line: 401, column: 9, scope: !8696)
!8705 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !8696, file: !6126, line: 401, type: !240)
!8706 = !DILocation(line: 401, column: 30, scope: !8696)
!8707 = !DILocation(line: 403, column: 24, scope: !8696)
!8708 = !DILocation(line: 403, column: 29, scope: !8696)
!8709 = !DILocation(line: 403, column: 35, scope: !8696)
!8710 = !DILocation(line: 403, column: 45, scope: !8696)
!8711 = !DILocation(line: 403, column: 9, scope: !8696)
!8712 = !DILocation(line: 403, column: 2, scope: !8696)
!8713 = distinct !DISubprogram(name: "megaraid_queue", scope: !3, file: !3, line: 417, type: !5299, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8714 = !DILocation(line: 407, column: 64, scope: !7448, inlinedAt: !8715)
!8715 = distinct !DILocation(line: 417, column: 8, scope: !8713)
!8716 = !DILocation(line: 407, column: 84, scope: !7448, inlinedAt: !8715)
!8717 = !DILocation(line: 327, column: 67, scope: !6304, inlinedAt: !8718)
!8718 = distinct !DILocation(line: 417, column: 8, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 417, column: 8)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 417, column: 8)
!8721 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 417, column: 8)
!8722 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 417, column: 8)
!8723 = distinct !DILexicalBlock(scope: !8713, file: !3, line: 417, column: 8)
!8724 = !DILocalVariable(name: "shost", arg: 1, scope: !8713, file: !3, line: 417, type: !5121)
!8725 = !DILocation(line: 417, column: 8, scope: !8713)
!8726 = !DILocalVariable(name: "cmd", arg: 2, scope: !8713, file: !3, line: 417, type: !5301)
!8727 = !DILocalVariable(name: "irq_flags", scope: !8713, file: !3, line: 417, type: !195)
!8728 = !DILocalVariable(name: "rc", scope: !8713, file: !3, line: 417, type: !188)
!8729 = !DILocation(line: 417, column: 8, scope: !8723)
!8730 = !DILocalVariable(name: "__dummy", scope: !8731, file: !3, line: 417, type: !195)
!8731 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 417, column: 8)
!8732 = !DILocation(line: 417, column: 8, scope: !8731)
!8733 = !DILocalVariable(name: "__dummy2", scope: !8731, file: !3, line: 417, type: !195)
!8734 = !DILocation(line: 417, column: 8, scope: !8722)
!8735 = !DILocation(line: 417, column: 8, scope: !8721)
!8736 = !DILocation(line: 417, column: 8, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 417, column: 8)
!8738 = !DILocalVariable(name: "__dummy", scope: !8739, file: !3, line: 417, type: !195)
!8739 = distinct !DILexicalBlock(scope: !8740, file: !3, line: 417, column: 8)
!8740 = distinct !DILexicalBlock(scope: !8737, file: !3, line: 417, column: 8)
!8741 = !DILocation(line: 417, column: 8, scope: !8739)
!8742 = !DILocalVariable(name: "__dummy2", scope: !8739, file: !3, line: 417, type: !195)
!8743 = !DILocation(line: 417, column: 8, scope: !8740)
!8744 = !DILocation(line: 417, column: 8, scope: !8720)
!8745 = !{i32 -2140918567}
!8746 = !DILocation(line: 417, column: 8, scope: !8719)
!8747 = !DILocation(line: 329, column: 10, scope: !6304, inlinedAt: !8718)
!8748 = !DILocation(line: 329, column: 16, scope: !6304, inlinedAt: !8718)
!8749 = !DILocation(line: 409, column: 2, scope: !7603, inlinedAt: !8715)
!8750 = !DILocation(line: 409, column: 2, scope: !7608, inlinedAt: !8715)
!8751 = !DILocation(line: 409, column: 2, scope: !7609, inlinedAt: !8715)
!8752 = !DILocation(line: 409, column: 2, scope: !7616, inlinedAt: !8715)
!8753 = !DILocation(line: 409, column: 2, scope: !7619, inlinedAt: !8715)
!8754 = distinct !DISubprogram(name: "megaraid_abort", scope: !3, file: !3, line: 1872, type: !5389, scopeLine: 1873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8755 = !DILocalVariable(name: "cmd", arg: 1, scope: !8754, file: !3, line: 1872, type: !5301)
!8756 = !DILocation(line: 1872, column: 34, scope: !8754)
!8757 = !DILocalVariable(name: "adapter", scope: !8754, file: !3, line: 1874, type: !182)
!8758 = !DILocation(line: 1874, column: 13, scope: !8754)
!8759 = !DILocalVariable(name: "rval", scope: !8754, file: !3, line: 1875, type: !188)
!8760 = !DILocation(line: 1875, column: 7, scope: !8754)
!8761 = !DILocation(line: 1877, column: 25, scope: !8754)
!8762 = !DILocation(line: 1877, column: 30, scope: !8754)
!8763 = !DILocation(line: 1877, column: 38, scope: !8754)
!8764 = !DILocation(line: 1877, column: 44, scope: !8754)
!8765 = !DILocation(line: 1877, column: 12, scope: !8754)
!8766 = !DILocation(line: 1877, column: 10, scope: !8754)
!8767 = !DILocation(line: 1879, column: 35, scope: !8754)
!8768 = !DILocation(line: 1879, column: 44, scope: !8754)
!8769 = !DILocation(line: 1879, column: 10, scope: !8754)
!8770 = !DILocation(line: 1879, column: 7, scope: !8754)
!8771 = !DILocation(line: 1885, column: 16, scope: !8754)
!8772 = !DILocation(line: 1885, column: 2, scope: !8754)
!8773 = !DILocation(line: 1887, column: 9, scope: !8754)
!8774 = !DILocation(line: 1887, column: 2, scope: !8754)
!8775 = distinct !DISubprogram(name: "megaraid_reset", scope: !3, file: !3, line: 1892, type: !5389, scopeLine: 1893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8776 = !DILocalVariable(name: "lock", arg: 1, scope: !8777, file: !6305, line: 402, type: !1246)
!8777 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !6305, file: !6305, line: 402, type: !8778, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8778 = !DISubroutineType(types: !8779)
!8779 = !{null, !1246}
!8780 = !DILocation(line: 402, column: 57, scope: !8777, inlinedAt: !8781)
!8781 = distinct !DILocation(line: 1921, column: 2, scope: !8775)
!8782 = !DILocalVariable(name: "lock", arg: 1, scope: !8783, file: !6305, line: 377, type: !1246)
!8783 = distinct !DISubprogram(name: "spin_lock_irq", scope: !6305, file: !6305, line: 377, type: !8778, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8784 = !DILocation(line: 377, column: 55, scope: !8783, inlinedAt: !8785)
!8785 = distinct !DILocation(line: 1912, column: 2, scope: !8775)
!8786 = !DILocalVariable(name: "cmd", arg: 1, scope: !8775, file: !3, line: 1892, type: !5301)
!8787 = !DILocation(line: 1892, column: 34, scope: !8775)
!8788 = !DILocalVariable(name: "adapter", scope: !8775, file: !3, line: 1894, type: !182)
!8789 = !DILocation(line: 1894, column: 13, scope: !8775)
!8790 = !DILocalVariable(name: "mc", scope: !8775, file: !3, line: 1895, type: !5915)
!8791 = !DILocation(line: 1895, column: 12, scope: !8775)
!8792 = !DILocalVariable(name: "rval", scope: !8775, file: !3, line: 1896, type: !188)
!8793 = !DILocation(line: 1896, column: 7, scope: !8775)
!8794 = !DILocation(line: 1898, column: 25, scope: !8775)
!8795 = !DILocation(line: 1898, column: 30, scope: !8775)
!8796 = !DILocation(line: 1898, column: 38, scope: !8775)
!8797 = !DILocation(line: 1898, column: 44, scope: !8775)
!8798 = !DILocation(line: 1898, column: 12, scope: !8775)
!8799 = !DILocation(line: 1898, column: 10, scope: !8775)
!8800 = !DILocation(line: 1901, column: 5, scope: !8775)
!8801 = !DILocation(line: 1901, column: 9, scope: !8775)
!8802 = !DILocation(line: 1902, column: 5, scope: !8775)
!8803 = !DILocation(line: 1902, column: 12, scope: !8775)
!8804 = !DILocation(line: 1904, column: 28, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 1904, column: 6)
!8806 = !DILocation(line: 1904, column: 6, scope: !8805)
!8807 = !DILocation(line: 1904, column: 48, scope: !8805)
!8808 = !DILocation(line: 1904, column: 6, scope: !8775)
!8809 = !DILocation(line: 1905, column: 3, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8805, file: !3, line: 1904, column: 55)
!8811 = !DILocation(line: 1906, column: 2, scope: !8810)
!8812 = !DILocation(line: 1908, column: 3, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8805, file: !3, line: 1907, column: 7)
!8814 = !DILocation(line: 1912, column: 17, scope: !8775)
!8815 = !DILocation(line: 1912, column: 26, scope: !8775)
!8816 = !DILocation(line: 379, column: 2, scope: !8817, inlinedAt: !8785)
!8817 = distinct !DILexicalBlock(scope: !8818, file: !6305, line: 379, column: 2)
!8818 = distinct !DILexicalBlock(scope: !8783, file: !6305, line: 379, column: 2)
!8819 = !DILocation(line: 379, column: 2, scope: !8820, inlinedAt: !8785)
!8820 = distinct !DILexicalBlock(scope: !8818, file: !6305, line: 379, column: 2)
!8821 = !{i32 -2145347742}
!8822 = !DILocation(line: 379, column: 2, scope: !8823, inlinedAt: !8785)
!8823 = distinct !DILexicalBlock(scope: !8820, file: !6305, line: 379, column: 2)
!8824 = !DILocation(line: 1914, column: 35, scope: !8775)
!8825 = !DILocation(line: 1914, column: 44, scope: !8775)
!8826 = !DILocation(line: 1914, column: 10, scope: !8775)
!8827 = !DILocation(line: 1914, column: 7, scope: !8775)
!8828 = !DILocation(line: 1920, column: 16, scope: !8775)
!8829 = !DILocation(line: 1920, column: 2, scope: !8775)
!8830 = !DILocation(line: 1921, column: 19, scope: !8775)
!8831 = !DILocation(line: 1921, column: 28, scope: !8775)
!8832 = !DILocation(line: 404, column: 2, scope: !8833, inlinedAt: !8781)
!8833 = distinct !DILexicalBlock(scope: !8834, file: !6305, line: 404, column: 2)
!8834 = distinct !DILexicalBlock(scope: !8777, file: !6305, line: 404, column: 2)
!8835 = !DILocation(line: 404, column: 2, scope: !8836, inlinedAt: !8781)
!8836 = distinct !DILexicalBlock(scope: !8834, file: !6305, line: 404, column: 2)
!8837 = !{i32 -2145345994}
!8838 = !DILocation(line: 404, column: 2, scope: !8839, inlinedAt: !8781)
!8839 = distinct !DILexicalBlock(scope: !8836, file: !6305, line: 404, column: 2)
!8840 = !DILocation(line: 1923, column: 9, scope: !8775)
!8841 = !DILocation(line: 1923, column: 2, scope: !8775)
!8842 = distinct !DISubprogram(name: "megaraid_biosparam", scope: !3, file: !3, line: 2801, type: !5434, scopeLine: 2803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8843 = !DILocalVariable(name: "sdev", arg: 1, scope: !8842, file: !3, line: 2801, type: !5148)
!8844 = !DILocation(line: 2801, column: 40, scope: !8842)
!8845 = !DILocalVariable(name: "bdev", arg: 2, scope: !8842, file: !3, line: 2801, type: !2198)
!8846 = !DILocation(line: 2801, column: 67, scope: !8842)
!8847 = !DILocalVariable(name: "capacity", arg: 3, scope: !8842, file: !3, line: 2802, type: !997)
!8848 = !DILocation(line: 2802, column: 16, scope: !8842)
!8849 = !DILocalVariable(name: "geom", arg: 4, scope: !8842, file: !3, line: 2802, type: !822)
!8850 = !DILocation(line: 2802, column: 30, scope: !8842)
!8851 = !DILocalVariable(name: "adapter", scope: !8842, file: !3, line: 2804, type: !182)
!8852 = !DILocation(line: 2804, column: 13, scope: !8842)
!8853 = !DILocalVariable(name: "heads", scope: !8842, file: !3, line: 2805, type: !188)
!8854 = !DILocation(line: 2805, column: 6, scope: !8842)
!8855 = !DILocalVariable(name: "sectors", scope: !8842, file: !3, line: 2806, type: !188)
!8856 = !DILocation(line: 2806, column: 6, scope: !8842)
!8857 = !DILocalVariable(name: "cylinders", scope: !8842, file: !3, line: 2807, type: !188)
!8858 = !DILocation(line: 2807, column: 6, scope: !8842)
!8859 = !DILocation(line: 2810, column: 25, scope: !8842)
!8860 = !DILocation(line: 2810, column: 31, scope: !8842)
!8861 = !DILocation(line: 2810, column: 37, scope: !8842)
!8862 = !DILocation(line: 2810, column: 12, scope: !8842)
!8863 = !DILocation(line: 2810, column: 10, scope: !8842)
!8864 = !DILocation(line: 2812, column: 6, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8842, file: !3, line: 2812, column: 6)
!8866 = !DILocation(line: 2812, column: 6, scope: !8842)
!8867 = !DILocation(line: 2814, column: 10, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 2812, column: 42)
!8869 = !DILocation(line: 2815, column: 12, scope: !8868)
!8870 = !DILocation(line: 2816, column: 23, scope: !8868)
!8871 = !DILocation(line: 2816, column: 35, scope: !8868)
!8872 = !DILocation(line: 2816, column: 43, scope: !8868)
!8873 = !DILocation(line: 2816, column: 41, scope: !8868)
!8874 = !DILocation(line: 2816, column: 34, scope: !8868)
!8875 = !DILocation(line: 2816, column: 32, scope: !8868)
!8876 = !DILocation(line: 2816, column: 16, scope: !8868)
!8877 = !DILocation(line: 2816, column: 14, scope: !8868)
!8878 = !DILocation(line: 2822, column: 15, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 2822, column: 8)
!8880 = !DILocation(line: 2822, column: 24, scope: !8879)
!8881 = !DILocation(line: 2822, column: 8, scope: !8868)
!8882 = !DILocation(line: 2823, column: 11, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 2822, column: 37)
!8884 = !DILocation(line: 2824, column: 13, scope: !8883)
!8885 = !DILocation(line: 2825, column: 24, scope: !8883)
!8886 = !DILocation(line: 2825, column: 36, scope: !8883)
!8887 = !DILocation(line: 2825, column: 44, scope: !8883)
!8888 = !DILocation(line: 2825, column: 42, scope: !8883)
!8889 = !DILocation(line: 2825, column: 35, scope: !8883)
!8890 = !DILocation(line: 2825, column: 33, scope: !8883)
!8891 = !DILocation(line: 2825, column: 17, scope: !8883)
!8892 = !DILocation(line: 2825, column: 15, scope: !8883)
!8893 = !DILocation(line: 2826, column: 4, scope: !8883)
!8894 = !DILocation(line: 2829, column: 14, scope: !8868)
!8895 = !DILocation(line: 2829, column: 4, scope: !8868)
!8896 = !DILocation(line: 2829, column: 12, scope: !8868)
!8897 = !DILocation(line: 2830, column: 14, scope: !8868)
!8898 = !DILocation(line: 2830, column: 4, scope: !8868)
!8899 = !DILocation(line: 2830, column: 12, scope: !8868)
!8900 = !DILocation(line: 2831, column: 14, scope: !8868)
!8901 = !DILocation(line: 2831, column: 4, scope: !8868)
!8902 = !DILocation(line: 2831, column: 12, scope: !8868)
!8903 = !DILocation(line: 2832, column: 2, scope: !8868)
!8904 = !DILocation(line: 2834, column: 21, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8906, file: !3, line: 2834, column: 7)
!8906 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 2833, column: 7)
!8907 = !DILocation(line: 2834, column: 27, scope: !8905)
!8908 = !DILocation(line: 2834, column: 37, scope: !8905)
!8909 = !DILocation(line: 2834, column: 7, scope: !8905)
!8910 = !DILocation(line: 2834, column: 7, scope: !8906)
!8911 = !DILocation(line: 2835, column: 4, scope: !8905)
!8912 = !DILocation(line: 2837, column: 3, scope: !8906)
!8913 = !DILocation(line: 2842, column: 9, scope: !8906)
!8914 = !DILocation(line: 2843, column: 11, scope: !8906)
!8915 = !DILocation(line: 2844, column: 22, scope: !8906)
!8916 = !DILocation(line: 2844, column: 34, scope: !8906)
!8917 = !DILocation(line: 2844, column: 42, scope: !8906)
!8918 = !DILocation(line: 2844, column: 40, scope: !8906)
!8919 = !DILocation(line: 2844, column: 33, scope: !8906)
!8920 = !DILocation(line: 2844, column: 31, scope: !8906)
!8921 = !DILocation(line: 2844, column: 15, scope: !8906)
!8922 = !DILocation(line: 2844, column: 13, scope: !8906)
!8923 = !DILocation(line: 2847, column: 14, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8906, file: !3, line: 2847, column: 7)
!8925 = !DILocation(line: 2847, column: 23, scope: !8924)
!8926 = !DILocation(line: 2847, column: 7, scope: !8906)
!8927 = !DILocation(line: 2848, column: 10, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 2847, column: 36)
!8929 = !DILocation(line: 2849, column: 12, scope: !8928)
!8930 = !DILocation(line: 2850, column: 23, scope: !8928)
!8931 = !DILocation(line: 2850, column: 35, scope: !8928)
!8932 = !DILocation(line: 2850, column: 43, scope: !8928)
!8933 = !DILocation(line: 2850, column: 41, scope: !8928)
!8934 = !DILocation(line: 2850, column: 34, scope: !8928)
!8935 = !DILocation(line: 2850, column: 32, scope: !8928)
!8936 = !DILocation(line: 2850, column: 16, scope: !8928)
!8937 = !DILocation(line: 2850, column: 14, scope: !8928)
!8938 = !DILocation(line: 2851, column: 3, scope: !8928)
!8939 = !DILocation(line: 2854, column: 13, scope: !8906)
!8940 = !DILocation(line: 2854, column: 3, scope: !8906)
!8941 = !DILocation(line: 2854, column: 11, scope: !8906)
!8942 = !DILocation(line: 2855, column: 13, scope: !8906)
!8943 = !DILocation(line: 2855, column: 3, scope: !8906)
!8944 = !DILocation(line: 2855, column: 11, scope: !8906)
!8945 = !DILocation(line: 2856, column: 13, scope: !8906)
!8946 = !DILocation(line: 2856, column: 3, scope: !8906)
!8947 = !DILocation(line: 2856, column: 11, scope: !8906)
!8948 = !DILocation(line: 2859, column: 2, scope: !8842)
!8949 = !DILocation(line: 2860, column: 1, scope: !8842)
!8950 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !8951, file: !8951, line: 666, type: !8952, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8951 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!8952 = !DISubroutineType(types: !8953)
!8953 = !{!195}
!8954 = !DILocalVariable(name: "f", scope: !8950, file: !8951, line: 668, type: !195)
!8955 = !DILocation(line: 668, column: 16, scope: !8950)
!8956 = !DILocation(line: 670, column: 6, scope: !8950)
!8957 = !DILocation(line: 670, column: 4, scope: !8950)
!8958 = !DILocation(line: 671, column: 2, scope: !8950)
!8959 = !DILocation(line: 672, column: 9, scope: !8950)
!8960 = !DILocation(line: 672, column: 2, scope: !8950)
!8961 = distinct !DISubprogram(name: "megaraid_queue_lck", scope: !3, file: !3, line: 374, type: !8962, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8962 = !DISubroutineType(types: !8963)
!8963 = !{!188, !5301, !5358}
!8964 = !DILocation(line: 23, column: 61, scope: !7408, inlinedAt: !8965)
!8965 = distinct !DILocation(line: 28, column: 9, scope: !7415, inlinedAt: !8966)
!8966 = distinct !DILocation(line: 408, column: 6, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 408, column: 6)
!8968 = !DILocation(line: 69, column: 73, scope: !7420, inlinedAt: !8969)
!8969 = distinct !DILocation(line: 27, column: 2, scope: !7415, inlinedAt: !8966)
!8970 = !DILocation(line: 69, column: 83, scope: !7420, inlinedAt: !8969)
!8971 = !DILocation(line: 25, column: 29, scope: !7415, inlinedAt: !8966)
!8972 = !DILocation(line: 407, column: 64, scope: !7448, inlinedAt: !8973)
!8973 = distinct !DILocation(line: 413, column: 2, scope: !8961)
!8974 = !DILocation(line: 407, column: 84, scope: !7448, inlinedAt: !8973)
!8975 = !DILocation(line: 327, column: 67, scope: !6304, inlinedAt: !8976)
!8976 = distinct !DILocation(line: 395, column: 2, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8978, file: !3, line: 395, column: 2)
!8978 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 395, column: 2)
!8979 = distinct !DILexicalBlock(scope: !8980, file: !3, line: 395, column: 2)
!8980 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 395, column: 2)
!8981 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 395, column: 2)
!8982 = !DILocalVariable(name: "scmd", arg: 1, scope: !8961, file: !3, line: 374, type: !5301)
!8983 = !DILocation(line: 374, column: 38, scope: !8961)
!8984 = !DILocalVariable(name: "done", arg: 2, scope: !8961, file: !3, line: 374, type: !5358)
!8985 = !DILocation(line: 374, column: 51, scope: !8961)
!8986 = !DILocalVariable(name: "adapter", scope: !8961, file: !3, line: 376, type: !182)
!8987 = !DILocation(line: 376, column: 13, scope: !8961)
!8988 = !DILocalVariable(name: "scb", scope: !8961, file: !3, line: 377, type: !5581)
!8989 = !DILocation(line: 377, column: 9, scope: !8961)
!8990 = !DILocalVariable(name: "busy", scope: !8961, file: !3, line: 378, type: !188)
!8991 = !DILocation(line: 378, column: 6, scope: !8961)
!8992 = !DILocalVariable(name: "flags", scope: !8961, file: !3, line: 379, type: !195)
!8993 = !DILocation(line: 379, column: 16, scope: !8961)
!8994 = !DILocation(line: 381, column: 25, scope: !8961)
!8995 = !DILocation(line: 381, column: 31, scope: !8961)
!8996 = !DILocation(line: 381, column: 39, scope: !8961)
!8997 = !DILocation(line: 381, column: 45, scope: !8961)
!8998 = !DILocation(line: 381, column: 12, scope: !8961)
!8999 = !DILocation(line: 381, column: 10, scope: !8961)
!9000 = !DILocation(line: 383, column: 20, scope: !8961)
!9001 = !DILocation(line: 383, column: 2, scope: !8961)
!9002 = !DILocation(line: 383, column: 8, scope: !8961)
!9003 = !DILocation(line: 383, column: 18, scope: !8961)
!9004 = !DILocation(line: 395, column: 2, scope: !8961)
!9005 = !DILocation(line: 395, column: 2, scope: !8981)
!9006 = !DILocalVariable(name: "__dummy", scope: !9007, file: !3, line: 395, type: !195)
!9007 = distinct !DILexicalBlock(scope: !8980, file: !3, line: 395, column: 2)
!9008 = !DILocation(line: 395, column: 2, scope: !9007)
!9009 = !DILocalVariable(name: "__dummy2", scope: !9007, file: !3, line: 395, type: !195)
!9010 = !DILocation(line: 395, column: 2, scope: !8980)
!9011 = !DILocation(line: 395, column: 2, scope: !8979)
!9012 = !DILocation(line: 395, column: 2, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 395, column: 2)
!9014 = !DILocalVariable(name: "__dummy", scope: !9015, file: !3, line: 395, type: !195)
!9015 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 395, column: 2)
!9016 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 395, column: 2)
!9017 = !DILocation(line: 395, column: 2, scope: !9015)
!9018 = !DILocalVariable(name: "__dummy2", scope: !9015, file: !3, line: 395, type: !195)
!9019 = !DILocation(line: 395, column: 2, scope: !9016)
!9020 = !DILocation(line: 395, column: 2, scope: !8978)
!9021 = !{i32 -2140920015}
!9022 = !DILocation(line: 395, column: 2, scope: !8977)
!9023 = !DILocation(line: 329, column: 10, scope: !6304, inlinedAt: !8976)
!9024 = !DILocation(line: 329, column: 16, scope: !6304, inlinedAt: !8976)
!9025 = !DILocation(line: 396, column: 23, scope: !8961)
!9026 = !DILocation(line: 396, column: 32, scope: !8961)
!9027 = !DILocation(line: 396, column: 8, scope: !8961)
!9028 = !DILocation(line: 396, column: 6, scope: !8961)
!9029 = !DILocation(line: 397, column: 7, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 397, column: 6)
!9031 = !DILocation(line: 397, column: 6, scope: !8961)
!9032 = !DILocation(line: 398, column: 3, scope: !9030)
!9033 = !DILocation(line: 400, column: 2, scope: !8961)
!9034 = !DILocation(line: 400, column: 7, scope: !8961)
!9035 = !DILocation(line: 400, column: 13, scope: !8961)
!9036 = !DILocation(line: 401, column: 17, scope: !8961)
!9037 = !DILocation(line: 401, column: 22, scope: !8961)
!9038 = !DILocation(line: 401, column: 29, scope: !8961)
!9039 = !DILocation(line: 401, column: 38, scope: !8961)
!9040 = !DILocation(line: 401, column: 2, scope: !8961)
!9041 = !DILocation(line: 408, column: 19, scope: !8967)
!9042 = !DILocation(line: 408, column: 28, scope: !8967)
!9043 = !DILocation(line: 27, column: 25, scope: !7415, inlinedAt: !8966)
!9044 = !DILocation(line: 71, column: 19, scope: !7420, inlinedAt: !8969)
!9045 = !DILocation(line: 71, column: 22, scope: !7420, inlinedAt: !8969)
!9046 = !DILocation(line: 71, column: 2, scope: !7420, inlinedAt: !8969)
!9047 = !DILocation(line: 72, column: 2, scope: !7420, inlinedAt: !8969)
!9048 = !DILocation(line: 28, column: 26, scope: !7415, inlinedAt: !8966)
!9049 = !DILocation(line: 29, column: 9, scope: !7408, inlinedAt: !8965)
!9050 = !DILocation(line: 408, column: 39, scope: !8967)
!9051 = !DILocation(line: 408, column: 6, scope: !8961)
!9052 = !DILocation(line: 409, column: 17, scope: !8967)
!9053 = !DILocation(line: 409, column: 3, scope: !8967)
!9054 = !DILocation(line: 411, column: 7, scope: !8961)
!9055 = !DILocation(line: 411, column: 2, scope: !8961)
!9056 = !DILabel(scope: !8961, name: "out", file: !3, line: 412)
!9057 = !DILocation(line: 412, column: 2, scope: !8961)
!9058 = !DILocation(line: 413, column: 26, scope: !8961)
!9059 = !DILocation(line: 413, column: 35, scope: !8961)
!9060 = !DILocation(line: 413, column: 41, scope: !8961)
!9061 = !DILocation(line: 409, column: 2, scope: !7603, inlinedAt: !8973)
!9062 = !DILocation(line: 409, column: 2, scope: !7608, inlinedAt: !8973)
!9063 = !DILocation(line: 409, column: 2, scope: !7609, inlinedAt: !8973)
!9064 = !DILocation(line: 409, column: 2, scope: !7616, inlinedAt: !8973)
!9065 = !DILocation(line: 409, column: 2, scope: !7619, inlinedAt: !8973)
!9066 = !DILocation(line: 414, column: 9, scope: !8961)
!9067 = !DILocation(line: 414, column: 2, scope: !8961)
!9068 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !8951, file: !8951, line: 646, type: !8952, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9069 = !DILocalVariable(name: "__ret", scope: !9070, file: !8951, line: 648, type: !195)
!9070 = distinct !DILexicalBlock(scope: !9068, file: !8951, line: 648, column: 9)
!9071 = !DILocation(line: 648, column: 9, scope: !9070)
!9072 = !DILocalVariable(name: "__edi", scope: !9070, file: !8951, line: 648, type: !195)
!9073 = !DILocalVariable(name: "__esi", scope: !9070, file: !8951, line: 648, type: !195)
!9074 = !DILocalVariable(name: "__edx", scope: !9070, file: !8951, line: 648, type: !195)
!9075 = !DILocalVariable(name: "__ecx", scope: !9070, file: !8951, line: 648, type: !195)
!9076 = !DILocalVariable(name: "__eax", scope: !9070, file: !8951, line: 648, type: !195)
!9077 = !DILocation(line: 648, column: 9, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9079, file: !8951, line: 648, column: 9)
!9079 = distinct !DILexicalBlock(scope: !9070, file: !8951, line: 648, column: 9)
!9080 = !{i32 -2145517327, i32 -2145515012, i32 -2145514778, i32 -2145514727, i32 -2145514699, i32 -2145514674, i32 -2145514990, i32 -2145514977, i32 -2145514539, i32 -2145514420, i32 -2145514885, i32 -2145514858, i32 -2145514830, i32 -2145514800}
!9081 = !DILocalVariable(name: "__mask", scope: !9082, file: !8951, line: 648, type: !195)
!9082 = distinct !DILexicalBlock(scope: !9078, file: !8951, line: 648, column: 9)
!9083 = !DILocation(line: 648, column: 9, scope: !9082)
!9084 = !DILocation(line: 648, column: 9, scope: !9079)
!9085 = !DILocation(line: 648, column: 2, scope: !9068)
!9086 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !8951, file: !8951, line: 656, type: !2049, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9087 = !DILocalVariable(name: "__edi", scope: !9088, file: !8951, line: 658, type: !195)
!9088 = distinct !DILexicalBlock(scope: !9086, file: !8951, line: 658, column: 2)
!9089 = !DILocation(line: 658, column: 2, scope: !9088)
!9090 = !DILocalVariable(name: "__esi", scope: !9088, file: !8951, line: 658, type: !195)
!9091 = !DILocalVariable(name: "__edx", scope: !9088, file: !8951, line: 658, type: !195)
!9092 = !DILocalVariable(name: "__ecx", scope: !9088, file: !8951, line: 658, type: !195)
!9093 = !DILocalVariable(name: "__eax", scope: !9088, file: !8951, line: 658, type: !195)
!9094 = !{i32 -2145510233, i32 -2145509501, i32 -2145509267, i32 -2145509216, i32 -2145509188, i32 -2145509163, i32 -2145509479, i32 -2145509466, i32 -2145509028, i32 -2145508909, i32 -2145509374, i32 -2145509347, i32 -2145509319, i32 -2145509289}
!9095 = !DILocation(line: 659, column: 1, scope: !9086)
!9096 = distinct !DISubprogram(name: "mega_build_cmd", scope: !3, file: !3, line: 523, type: !9097, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9097 = !DISubroutineType(types: !9098)
!9098 = !{!5581, !182, !5301, !822}
!9099 = !DILocalVariable(name: "adapter", arg: 1, scope: !9096, file: !3, line: 523, type: !182)
!9100 = !DILocation(line: 523, column: 27, scope: !9096)
!9101 = !DILocalVariable(name: "cmd", arg: 2, scope: !9096, file: !3, line: 523, type: !5301)
!9102 = !DILocation(line: 523, column: 54, scope: !9096)
!9103 = !DILocalVariable(name: "busy", arg: 3, scope: !9096, file: !3, line: 523, type: !822)
!9104 = !DILocation(line: 523, column: 64, scope: !9096)
!9105 = !DILocalVariable(name: "pthru", scope: !9096, file: !3, line: 525, type: !5613)
!9106 = !DILocation(line: 525, column: 17, scope: !9096)
!9107 = !DILocalVariable(name: "scb", scope: !9096, file: !3, line: 526, type: !5581)
!9108 = !DILocation(line: 526, column: 9, scope: !9096)
!9109 = !DILocalVariable(name: "mbox", scope: !9096, file: !3, line: 527, type: !5692)
!9110 = !DILocation(line: 527, column: 10, scope: !9096)
!9111 = !DILocalVariable(name: "seg", scope: !9096, file: !3, line: 528, type: !190)
!9112 = !DILocation(line: 528, column: 6, scope: !9096)
!9113 = !DILocalVariable(name: "islogical", scope: !9096, file: !3, line: 529, type: !286)
!9114 = !DILocation(line: 529, column: 7, scope: !9096)
!9115 = !DILocalVariable(name: "max_ldrv_num", scope: !9096, file: !3, line: 530, type: !188)
!9116 = !DILocation(line: 530, column: 6, scope: !9096)
!9117 = !DILocalVariable(name: "channel", scope: !9096, file: !3, line: 531, type: !188)
!9118 = !DILocation(line: 531, column: 6, scope: !9096)
!9119 = !DILocalVariable(name: "target", scope: !9096, file: !3, line: 532, type: !188)
!9120 = !DILocation(line: 532, column: 6, scope: !9096)
!9121 = !DILocalVariable(name: "ldrv_num", scope: !9096, file: !3, line: 533, type: !188)
!9122 = !DILocation(line: 533, column: 6, scope: !9096)
!9123 = !DILocation(line: 538, column: 14, scope: !9096)
!9124 = !DILocation(line: 538, column: 23, scope: !9096)
!9125 = !DILocation(line: 538, column: 35, scope: !9096)
!9126 = !DILocation(line: 538, column: 40, scope: !9096)
!9127 = !DILocation(line: 538, column: 48, scope: !9096)
!9128 = !DILocation(line: 538, column: 12, scope: !9096)
!9129 = !DILocation(line: 547, column: 6, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 547, column: 6)
!9131 = !DILocation(line: 547, column: 15, scope: !9130)
!9132 = !DILocation(line: 547, column: 6, scope: !9096)
!9133 = !DILocation(line: 548, column: 7, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 548, column: 7)
!9135 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 547, column: 35)
!9136 = !DILocation(line: 548, column: 7, scope: !9135)
!9137 = !DILocation(line: 550, column: 14, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9134, file: !3, line: 548, column: 19)
!9139 = !DILocation(line: 550, column: 19, scope: !9138)
!9140 = !DILocation(line: 550, column: 27, scope: !9138)
!9141 = !DILocation(line: 551, column: 5, scope: !9138)
!9142 = !DILocation(line: 551, column: 14, scope: !9138)
!9143 = !DILocation(line: 551, column: 27, scope: !9138)
!9144 = !DILocation(line: 550, column: 35, scope: !9138)
!9145 = !DILocation(line: 550, column: 12, scope: !9138)
!9146 = !DILocation(line: 552, column: 3, scope: !9138)
!9147 = !DILocation(line: 555, column: 14, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9134, file: !3, line: 553, column: 8)
!9149 = !DILocation(line: 555, column: 19, scope: !9148)
!9150 = !DILocation(line: 555, column: 27, scope: !9148)
!9151 = !DILocation(line: 555, column: 12, scope: !9148)
!9152 = !DILocation(line: 556, column: 13, scope: !9148)
!9153 = !DILocation(line: 556, column: 18, scope: !9148)
!9154 = !DILocation(line: 556, column: 26, scope: !9148)
!9155 = !DILocation(line: 556, column: 11, scope: !9148)
!9156 = !DILocation(line: 563, column: 8, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9148, file: !3, line: 563, column: 8)
!9158 = !DILocation(line: 563, column: 15, scope: !9157)
!9159 = !DILocation(line: 563, column: 8, scope: !9148)
!9160 = !DILocation(line: 564, column: 14, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 563, column: 22)
!9162 = !DILocation(line: 564, column: 23, scope: !9161)
!9163 = !DILocation(line: 564, column: 12, scope: !9161)
!9164 = !DILocation(line: 565, column: 4, scope: !9161)
!9165 = !DILocation(line: 566, column: 13, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 566, column: 13)
!9167 = !DILocation(line: 566, column: 23, scope: !9166)
!9168 = !DILocation(line: 566, column: 32, scope: !9166)
!9169 = !DILocation(line: 566, column: 20, scope: !9166)
!9170 = !DILocation(line: 566, column: 13, scope: !9157)
!9171 = !DILocation(line: 567, column: 12, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 566, column: 48)
!9173 = !DILocation(line: 568, column: 4, scope: !9172)
!9174 = !DILocation(line: 570, column: 2, scope: !9135)
!9175 = !DILocation(line: 572, column: 7, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9177, file: !3, line: 572, column: 7)
!9177 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 571, column: 7)
!9178 = !DILocation(line: 572, column: 7, scope: !9177)
!9179 = !DILocation(line: 574, column: 14, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9176, file: !3, line: 572, column: 19)
!9181 = !DILocation(line: 574, column: 19, scope: !9180)
!9182 = !DILocation(line: 574, column: 27, scope: !9180)
!9183 = !DILocation(line: 574, column: 12, scope: !9180)
!9184 = !DILocation(line: 575, column: 3, scope: !9180)
!9185 = !DILocation(line: 578, column: 14, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9176, file: !3, line: 576, column: 8)
!9187 = !DILocation(line: 578, column: 19, scope: !9186)
!9188 = !DILocation(line: 578, column: 27, scope: !9186)
!9189 = !DILocation(line: 578, column: 35, scope: !9186)
!9190 = !DILocation(line: 578, column: 12, scope: !9186)
!9191 = !DILocation(line: 579, column: 13, scope: !9186)
!9192 = !DILocation(line: 579, column: 18, scope: !9186)
!9193 = !DILocation(line: 579, column: 26, scope: !9186)
!9194 = !DILocation(line: 579, column: 11, scope: !9186)
!9195 = !DILocation(line: 584, column: 5, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 584, column: 5)
!9197 = !DILocation(line: 584, column: 5, scope: !9096)
!9198 = !DILocation(line: 587, column: 7, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 587, column: 7)
!9200 = distinct !DILexicalBlock(scope: !9196, file: !3, line: 584, column: 16)
!9201 = !DILocation(line: 587, column: 12, scope: !9199)
!9202 = !DILocation(line: 587, column: 20, scope: !9199)
!9203 = !DILocation(line: 587, column: 7, scope: !9200)
!9204 = !DILocation(line: 588, column: 4, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 587, column: 25)
!9206 = !DILocation(line: 588, column: 9, scope: !9205)
!9207 = !DILocation(line: 588, column: 16, scope: !9205)
!9208 = !DILocation(line: 589, column: 4, scope: !9205)
!9209 = !DILocation(line: 589, column: 9, scope: !9205)
!9210 = !DILocation(line: 589, column: 19, scope: !9205)
!9211 = !DILocation(line: 590, column: 4, scope: !9205)
!9212 = !DILocation(line: 593, column: 32, scope: !9200)
!9213 = !DILocation(line: 593, column: 41, scope: !9200)
!9214 = !DILocation(line: 593, column: 46, scope: !9200)
!9215 = !DILocation(line: 593, column: 14, scope: !9200)
!9216 = !DILocation(line: 593, column: 12, scope: !9200)
!9217 = !DILocation(line: 596, column: 19, scope: !9200)
!9218 = !DILocation(line: 596, column: 28, scope: !9200)
!9219 = !DILocation(line: 596, column: 33, scope: !9200)
!9220 = !DILocation(line: 596, column: 18, scope: !9200)
!9221 = !DILocation(line: 596, column: 16, scope: !9200)
!9222 = !DILocation(line: 603, column: 6, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 603, column: 6)
!9224 = !DILocation(line: 603, column: 15, scope: !9223)
!9225 = !DILocation(line: 603, column: 6, scope: !9200)
!9226 = !DILocation(line: 604, column: 17, scope: !9223)
!9227 = !DILocation(line: 604, column: 4, scope: !9223)
!9228 = !DILocation(line: 606, column: 6, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 606, column: 6)
!9230 = !DILocation(line: 606, column: 17, scope: !9229)
!9231 = !DILocation(line: 606, column: 15, scope: !9229)
!9232 = !DILocation(line: 606, column: 6, scope: !9200)
!9233 = !DILocation(line: 607, column: 4, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 606, column: 32)
!9235 = !DILocation(line: 607, column: 9, scope: !9234)
!9236 = !DILocation(line: 607, column: 16, scope: !9234)
!9237 = !DILocation(line: 608, column: 4, scope: !9234)
!9238 = !DILocation(line: 608, column: 9, scope: !9234)
!9239 = !DILocation(line: 608, column: 19, scope: !9234)
!9240 = !DILocation(line: 609, column: 4, scope: !9234)
!9241 = !DILocation(line: 612, column: 2, scope: !9200)
!9242 = !DILocation(line: 614, column: 7, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9244, file: !3, line: 614, column: 7)
!9244 = distinct !DILexicalBlock(scope: !9196, file: !3, line: 613, column: 7)
!9245 = !DILocation(line: 614, column: 12, scope: !9243)
!9246 = !DILocation(line: 614, column: 20, scope: !9243)
!9247 = !DILocation(line: 614, column: 24, scope: !9243)
!9248 = !DILocation(line: 614, column: 7, scope: !9244)
!9249 = !DILocation(line: 619, column: 4, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9243, file: !3, line: 614, column: 29)
!9251 = !DILocation(line: 619, column: 9, scope: !9250)
!9252 = !DILocation(line: 619, column: 16, scope: !9250)
!9253 = !DILocation(line: 620, column: 4, scope: !9250)
!9254 = !DILocation(line: 620, column: 9, scope: !9250)
!9255 = !DILocation(line: 620, column: 19, scope: !9250)
!9256 = !DILocation(line: 621, column: 4, scope: !9250)
!9257 = !DILocation(line: 630, column: 5, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 630, column: 5)
!9259 = !DILocation(line: 630, column: 5, scope: !9096)
!9260 = !DILocation(line: 631, column: 11, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 630, column: 16)
!9262 = !DILocation(line: 631, column: 16, scope: !9261)
!9263 = !DILocation(line: 631, column: 3, scope: !9261)
!9264 = !DILocation(line: 638, column: 9, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 638, column: 8)
!9266 = distinct !DILexicalBlock(scope: !9261, file: !3, line: 631, column: 25)
!9267 = !DILocation(line: 638, column: 18, scope: !9265)
!9268 = !DILocation(line: 638, column: 8, scope: !9266)
!9269 = !DILocation(line: 639, column: 5, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 638, column: 32)
!9271 = !DILocation(line: 639, column: 10, scope: !9270)
!9272 = !DILocation(line: 639, column: 17, scope: !9270)
!9273 = !DILocation(line: 640, column: 5, scope: !9270)
!9274 = !DILocation(line: 640, column: 10, scope: !9270)
!9275 = !DILocation(line: 640, column: 20, scope: !9270)
!9276 = !DILocation(line: 641, column: 5, scope: !9270)
!9277 = !DILocation(line: 644, column: 33, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 644, column: 7)
!9279 = !DILocation(line: 644, column: 42, scope: !9278)
!9280 = !DILocation(line: 644, column: 15, scope: !9278)
!9281 = !DILocation(line: 644, column: 13, scope: !9278)
!9282 = !DILocation(line: 644, column: 7, scope: !9266)
!9283 = !DILocation(line: 645, column: 6, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 644, column: 49)
!9285 = !DILocation(line: 645, column: 11, scope: !9284)
!9286 = !DILocation(line: 646, column: 5, scope: !9284)
!9287 = !DILocation(line: 649, column: 4, scope: !9266)
!9288 = !DILocation(line: 649, column: 9, scope: !9266)
!9289 = !DILocation(line: 649, column: 21, scope: !9266)
!9290 = !DILocation(line: 650, column: 4, scope: !9266)
!9291 = !DILocation(line: 650, column: 9, scope: !9266)
!9292 = !DILocation(line: 650, column: 21, scope: !9266)
!9293 = !DILocation(line: 651, column: 23, scope: !9266)
!9294 = !DILocation(line: 651, column: 4, scope: !9266)
!9295 = !DILocation(line: 651, column: 9, scope: !9266)
!9296 = !DILocation(line: 651, column: 21, scope: !9266)
!9297 = !DILocation(line: 653, column: 4, scope: !9266)
!9298 = !DILocation(line: 653, column: 9, scope: !9266)
!9299 = !DILocation(line: 653, column: 23, scope: !9266)
!9300 = !DILocation(line: 655, column: 11, scope: !9266)
!9301 = !DILocation(line: 655, column: 4, scope: !9266)
!9302 = !DILocalVariable(name: "buf", scope: !9303, file: !3, line: 663, type: !399)
!9303 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 662, column: 20)
!9304 = !DILocation(line: 663, column: 10, scope: !9303)
!9305 = !DILocalVariable(name: "sg", scope: !9303, file: !3, line: 664, type: !5340)
!9306 = !DILocation(line: 664, column: 24, scope: !9303)
!9307 = !DILocation(line: 666, column: 21, scope: !9303)
!9308 = !DILocation(line: 666, column: 9, scope: !9303)
!9309 = !DILocation(line: 666, column: 7, scope: !9303)
!9310 = !DILocation(line: 667, column: 30, scope: !9303)
!9311 = !DILocation(line: 667, column: 22, scope: !9303)
!9312 = !DILocation(line: 667, column: 10, scope: !9303)
!9313 = !DILocation(line: 667, column: 37, scope: !9303)
!9314 = !DILocation(line: 667, column: 41, scope: !9303)
!9315 = !DILocation(line: 667, column: 35, scope: !9303)
!9316 = !DILocation(line: 667, column: 8, scope: !9303)
!9317 = !DILocation(line: 669, column: 11, scope: !9303)
!9318 = !DILocation(line: 669, column: 19, scope: !9303)
!9319 = !DILocation(line: 669, column: 24, scope: !9303)
!9320 = !DILocation(line: 669, column: 4, scope: !9303)
!9321 = !DILocation(line: 670, column: 4, scope: !9303)
!9322 = !DILocation(line: 670, column: 4, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 670, column: 4)
!9324 = !DILocation(line: 670, column: 4, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9323, file: !3, line: 670, column: 4)
!9326 = !{i32 -2140915086}
!9327 = !DILocation(line: 672, column: 4, scope: !9303)
!9328 = !DILocation(line: 672, column: 9, scope: !9303)
!9329 = !DILocation(line: 672, column: 16, scope: !9303)
!9330 = !DILocation(line: 673, column: 4, scope: !9303)
!9331 = !DILocation(line: 673, column: 9, scope: !9303)
!9332 = !DILocation(line: 673, column: 19, scope: !9303)
!9333 = !DILocation(line: 674, column: 4, scope: !9303)
!9334 = !DILocation(line: 680, column: 9, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 680, column: 7)
!9336 = !DILocation(line: 680, column: 18, scope: !9335)
!9337 = !DILocation(line: 680, column: 32, scope: !9335)
!9338 = !DILocation(line: 680, column: 37, scope: !9335)
!9339 = !DILocation(line: 680, column: 45, scope: !9335)
!9340 = !DILocation(line: 680, column: 29, scope: !9335)
!9341 = !DILocation(line: 680, column: 23, scope: !9335)
!9342 = !DILocation(line: 680, column: 7, scope: !9266)
!9343 = !DILocation(line: 682, column: 5, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9335, file: !3, line: 680, column: 56)
!9345 = !DILocation(line: 688, column: 29, scope: !9344)
!9346 = !DILocation(line: 688, column: 34, scope: !9344)
!9347 = !DILocation(line: 688, column: 42, scope: !9344)
!9348 = !DILocation(line: 688, column: 26, scope: !9344)
!9349 = !DILocation(line: 688, column: 5, scope: !9344)
!9350 = !DILocation(line: 688, column: 14, scope: !9344)
!9351 = !DILocation(line: 688, column: 19, scope: !9344)
!9352 = !DILocation(line: 689, column: 4, scope: !9344)
!9353 = !DILocation(line: 692, column: 33, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 692, column: 7)
!9355 = !DILocation(line: 692, column: 42, scope: !9354)
!9356 = !DILocation(line: 692, column: 15, scope: !9354)
!9357 = !DILocation(line: 692, column: 13, scope: !9354)
!9358 = !DILocation(line: 692, column: 7, scope: !9266)
!9359 = !DILocation(line: 693, column: 6, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9354, file: !3, line: 692, column: 49)
!9361 = !DILocation(line: 693, column: 11, scope: !9360)
!9362 = !DILocation(line: 694, column: 5, scope: !9360)
!9363 = !DILocation(line: 696, column: 12, scope: !9266)
!9364 = !DILocation(line: 696, column: 17, scope: !9266)
!9365 = !DILocation(line: 696, column: 10, scope: !9266)
!9366 = !DILocation(line: 698, column: 21, scope: !9266)
!9367 = !DILocation(line: 698, column: 26, scope: !9266)
!9368 = !DILocation(line: 698, column: 11, scope: !9266)
!9369 = !DILocation(line: 698, column: 9, scope: !9266)
!9370 = !DILocation(line: 699, column: 11, scope: !9266)
!9371 = !DILocation(line: 699, column: 4, scope: !9266)
!9372 = !DILocation(line: 700, column: 11, scope: !9266)
!9373 = !DILocation(line: 700, column: 4, scope: !9266)
!9374 = !DILocation(line: 702, column: 4, scope: !9266)
!9375 = !DILocation(line: 702, column: 11, scope: !9266)
!9376 = !DILocation(line: 702, column: 19, scope: !9266)
!9377 = !DILocation(line: 703, column: 4, scope: !9266)
!9378 = !DILocation(line: 703, column: 11, scope: !9266)
!9379 = !DILocation(line: 703, column: 15, scope: !9266)
!9380 = !DILocation(line: 704, column: 4, scope: !9266)
!9381 = !DILocation(line: 704, column: 11, scope: !9266)
!9382 = !DILocation(line: 704, column: 23, scope: !9266)
!9383 = !DILocation(line: 705, column: 4, scope: !9266)
!9384 = !DILocation(line: 705, column: 11, scope: !9266)
!9385 = !DILocation(line: 705, column: 21, scope: !9266)
!9386 = !DILocation(line: 706, column: 20, scope: !9266)
!9387 = !DILocation(line: 706, column: 4, scope: !9266)
!9388 = !DILocation(line: 706, column: 11, scope: !9266)
!9389 = !DILocation(line: 706, column: 18, scope: !9266)
!9390 = !DILocation(line: 707, column: 20, scope: !9266)
!9391 = !DILocation(line: 707, column: 25, scope: !9266)
!9392 = !DILocation(line: 707, column: 4, scope: !9266)
!9393 = !DILocation(line: 707, column: 11, scope: !9266)
!9394 = !DILocation(line: 707, column: 18, scope: !9266)
!9395 = !DILocation(line: 708, column: 11, scope: !9266)
!9396 = !DILocation(line: 708, column: 18, scope: !9266)
!9397 = !DILocation(line: 708, column: 4, scope: !9266)
!9398 = !DILocation(line: 708, column: 23, scope: !9266)
!9399 = !DILocation(line: 708, column: 28, scope: !9266)
!9400 = !DILocation(line: 708, column: 34, scope: !9266)
!9401 = !DILocation(line: 708, column: 39, scope: !9266)
!9402 = !DILocation(line: 710, column: 8, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 710, column: 8)
!9404 = !DILocation(line: 710, column: 17, scope: !9403)
!9405 = !DILocation(line: 710, column: 8, scope: !9266)
!9406 = !DILocation(line: 711, column: 5, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 710, column: 34)
!9408 = !DILocation(line: 711, column: 11, scope: !9407)
!9409 = !DILocation(line: 711, column: 17, scope: !9407)
!9410 = !DILocation(line: 711, column: 21, scope: !9407)
!9411 = !DILocation(line: 712, column: 4, scope: !9407)
!9412 = !DILocation(line: 714, column: 5, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 713, column: 9)
!9414 = !DILocation(line: 714, column: 11, scope: !9413)
!9415 = !DILocation(line: 714, column: 17, scope: !9413)
!9416 = !DILocation(line: 714, column: 21, scope: !9413)
!9417 = !DILocation(line: 717, column: 4, scope: !9266)
!9418 = !DILocation(line: 717, column: 9, scope: !9266)
!9419 = !DILocation(line: 717, column: 23, scope: !9266)
!9420 = !DILocation(line: 719, column: 45, scope: !9266)
!9421 = !DILocation(line: 719, column: 54, scope: !9266)
!9422 = !DILocation(line: 720, column: 6, scope: !9266)
!9423 = !DILocation(line: 720, column: 13, scope: !9266)
!9424 = !DILocation(line: 720, column: 28, scope: !9266)
!9425 = !DILocation(line: 720, column: 35, scope: !9266)
!9426 = !DILocation(line: 719, column: 27, scope: !9266)
!9427 = !DILocation(line: 719, column: 4, scope: !9266)
!9428 = !DILocation(line: 719, column: 11, scope: !9266)
!9429 = !DILocation(line: 719, column: 25, scope: !9266)
!9430 = !DILocation(line: 722, column: 27, scope: !9266)
!9431 = !DILocation(line: 722, column: 32, scope: !9266)
!9432 = !DILocation(line: 722, column: 4, scope: !9266)
!9433 = !DILocation(line: 722, column: 10, scope: !9266)
!9434 = !DILocation(line: 722, column: 16, scope: !9266)
!9435 = !DILocation(line: 722, column: 25, scope: !9266)
!9436 = !DILocation(line: 724, column: 11, scope: !9266)
!9437 = !DILocation(line: 724, column: 4, scope: !9266)
!9438 = !DILocation(line: 734, column: 33, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 734, column: 7)
!9440 = !DILocation(line: 734, column: 42, scope: !9439)
!9441 = !DILocation(line: 734, column: 15, scope: !9439)
!9442 = !DILocation(line: 734, column: 13, scope: !9439)
!9443 = !DILocation(line: 734, column: 7, scope: !9266)
!9444 = !DILocation(line: 735, column: 6, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9439, file: !3, line: 734, column: 49)
!9446 = !DILocation(line: 735, column: 11, scope: !9445)
!9447 = !DILocation(line: 736, column: 5, scope: !9445)
!9448 = !DILocation(line: 738, column: 21, scope: !9266)
!9449 = !DILocation(line: 738, column: 26, scope: !9266)
!9450 = !DILocation(line: 738, column: 11, scope: !9266)
!9451 = !DILocation(line: 738, column: 9, scope: !9266)
!9452 = !DILocation(line: 740, column: 11, scope: !9266)
!9453 = !DILocation(line: 740, column: 4, scope: !9266)
!9454 = !DILocation(line: 741, column: 25, scope: !9266)
!9455 = !DILocation(line: 741, column: 4, scope: !9266)
!9456 = !DILocation(line: 741, column: 10, scope: !9266)
!9457 = !DILocation(line: 741, column: 16, scope: !9266)
!9458 = !DILocation(line: 741, column: 23, scope: !9266)
!9459 = !DILocation(line: 747, column: 8, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 747, column: 8)
!9461 = !DILocation(line: 747, column: 17, scope: !9460)
!9462 = !DILocation(line: 747, column: 8, scope: !9266)
!9463 = !DILocation(line: 748, column: 25, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9460, file: !3, line: 747, column: 34)
!9465 = !DILocation(line: 748, column: 30, scope: !9464)
!9466 = !DILocation(line: 748, column: 24, scope: !9464)
!9467 = !DILocation(line: 748, column: 35, scope: !9464)
!9468 = !DILocation(line: 748, column: 23, scope: !9464)
!9469 = !DILocation(line: 748, column: 5, scope: !9464)
!9470 = !DILocation(line: 748, column: 11, scope: !9464)
!9471 = !DILocation(line: 748, column: 17, scope: !9464)
!9472 = !DILocation(line: 748, column: 21, scope: !9464)
!9473 = !DILocation(line: 751, column: 4, scope: !9464)
!9474 = !DILocation(line: 753, column: 25, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9460, file: !3, line: 752, column: 9)
!9476 = !DILocation(line: 753, column: 30, scope: !9475)
!9477 = !DILocation(line: 753, column: 24, scope: !9475)
!9478 = !DILocation(line: 753, column: 35, scope: !9475)
!9479 = !DILocation(line: 753, column: 23, scope: !9475)
!9480 = !DILocation(line: 753, column: 5, scope: !9475)
!9481 = !DILocation(line: 753, column: 11, scope: !9475)
!9482 = !DILocation(line: 753, column: 17, scope: !9475)
!9483 = !DILocation(line: 753, column: 21, scope: !9475)
!9484 = !DILocation(line: 761, column: 8, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 761, column: 8)
!9486 = !DILocation(line: 761, column: 13, scope: !9485)
!9487 = !DILocation(line: 761, column: 21, scope: !9485)
!9488 = !DILocation(line: 761, column: 8, scope: !9266)
!9489 = !DILocation(line: 762, column: 36, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 761, column: 28)
!9491 = !DILocation(line: 762, column: 41, scope: !9490)
!9492 = !DILocation(line: 762, column: 30, scope: !9490)
!9493 = !DILocation(line: 762, column: 5, scope: !9490)
!9494 = !DILocation(line: 762, column: 11, scope: !9490)
!9495 = !DILocation(line: 762, column: 17, scope: !9490)
!9496 = !DILocation(line: 762, column: 28, scope: !9490)
!9497 = !DILocation(line: 764, column: 12, scope: !9490)
!9498 = !DILocation(line: 764, column: 17, scope: !9490)
!9499 = !DILocation(line: 764, column: 7, scope: !9490)
!9500 = !DILocation(line: 764, column: 25, scope: !9490)
!9501 = !DILocation(line: 765, column: 12, scope: !9490)
!9502 = !DILocation(line: 765, column: 17, scope: !9490)
!9503 = !DILocation(line: 765, column: 7, scope: !9490)
!9504 = !DILocation(line: 765, column: 25, scope: !9490)
!9505 = !DILocation(line: 764, column: 32, scope: !9490)
!9506 = !DILocation(line: 766, column: 11, scope: !9490)
!9507 = !DILocation(line: 766, column: 16, scope: !9490)
!9508 = !DILocation(line: 766, column: 6, scope: !9490)
!9509 = !DILocation(line: 765, column: 31, scope: !9490)
!9510 = !DILocation(line: 763, column: 5, scope: !9490)
!9511 = !DILocation(line: 763, column: 11, scope: !9490)
!9512 = !DILocation(line: 763, column: 17, scope: !9490)
!9513 = !DILocation(line: 763, column: 21, scope: !9490)
!9514 = !DILocation(line: 768, column: 5, scope: !9490)
!9515 = !DILocation(line: 768, column: 11, scope: !9490)
!9516 = !DILocation(line: 768, column: 17, scope: !9490)
!9517 = !DILocation(line: 768, column: 21, scope: !9490)
!9518 = !DILocation(line: 786, column: 4, scope: !9490)
!9519 = !DILocation(line: 791, column: 8, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 791, column: 8)
!9521 = !DILocation(line: 791, column: 13, scope: !9520)
!9522 = !DILocation(line: 791, column: 21, scope: !9520)
!9523 = !DILocation(line: 791, column: 8, scope: !9266)
!9524 = !DILocation(line: 793, column: 11, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 791, column: 29)
!9526 = !DILocation(line: 793, column: 16, scope: !9525)
!9527 = !DILocation(line: 793, column: 6, scope: !9525)
!9528 = !DILocation(line: 794, column: 12, scope: !9525)
!9529 = !DILocation(line: 794, column: 17, scope: !9525)
!9530 = !DILocation(line: 794, column: 7, scope: !9525)
!9531 = !DILocation(line: 794, column: 25, scope: !9525)
!9532 = !DILocation(line: 793, column: 24, scope: !9525)
!9533 = !DILocation(line: 792, column: 5, scope: !9525)
!9534 = !DILocation(line: 792, column: 11, scope: !9525)
!9535 = !DILocation(line: 792, column: 17, scope: !9525)
!9536 = !DILocation(line: 792, column: 28, scope: !9525)
!9537 = !DILocation(line: 796, column: 12, scope: !9525)
!9538 = !DILocation(line: 796, column: 17, scope: !9525)
!9539 = !DILocation(line: 796, column: 7, scope: !9525)
!9540 = !DILocation(line: 796, column: 25, scope: !9525)
!9541 = !DILocation(line: 797, column: 12, scope: !9525)
!9542 = !DILocation(line: 797, column: 17, scope: !9525)
!9543 = !DILocation(line: 797, column: 7, scope: !9525)
!9544 = !DILocation(line: 797, column: 25, scope: !9525)
!9545 = !DILocation(line: 796, column: 32, scope: !9525)
!9546 = !DILocation(line: 798, column: 12, scope: !9525)
!9547 = !DILocation(line: 798, column: 17, scope: !9525)
!9548 = !DILocation(line: 798, column: 7, scope: !9525)
!9549 = !DILocation(line: 798, column: 25, scope: !9525)
!9550 = !DILocation(line: 797, column: 32, scope: !9525)
!9551 = !DILocation(line: 799, column: 11, scope: !9525)
!9552 = !DILocation(line: 799, column: 16, scope: !9525)
!9553 = !DILocation(line: 799, column: 6, scope: !9525)
!9554 = !DILocation(line: 798, column: 31, scope: !9525)
!9555 = !DILocation(line: 795, column: 5, scope: !9525)
!9556 = !DILocation(line: 795, column: 11, scope: !9525)
!9557 = !DILocation(line: 795, column: 17, scope: !9525)
!9558 = !DILocation(line: 795, column: 21, scope: !9525)
!9559 = !DILocation(line: 812, column: 4, scope: !9525)
!9560 = !DILocation(line: 817, column: 8, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 817, column: 8)
!9562 = !DILocation(line: 817, column: 13, scope: !9561)
!9563 = !DILocation(line: 817, column: 21, scope: !9561)
!9564 = !DILocation(line: 817, column: 8, scope: !9266)
!9565 = !DILocation(line: 819, column: 12, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9561, file: !3, line: 817, column: 29)
!9567 = !DILocation(line: 819, column: 17, scope: !9566)
!9568 = !DILocation(line: 819, column: 7, scope: !9566)
!9569 = !DILocation(line: 819, column: 25, scope: !9566)
!9570 = !DILocation(line: 820, column: 12, scope: !9566)
!9571 = !DILocation(line: 820, column: 17, scope: !9566)
!9572 = !DILocation(line: 820, column: 7, scope: !9566)
!9573 = !DILocation(line: 820, column: 25, scope: !9566)
!9574 = !DILocation(line: 819, column: 32, scope: !9566)
!9575 = !DILocation(line: 821, column: 12, scope: !9566)
!9576 = !DILocation(line: 821, column: 17, scope: !9566)
!9577 = !DILocation(line: 821, column: 7, scope: !9566)
!9578 = !DILocation(line: 821, column: 25, scope: !9566)
!9579 = !DILocation(line: 820, column: 32, scope: !9566)
!9580 = !DILocation(line: 822, column: 11, scope: !9566)
!9581 = !DILocation(line: 822, column: 16, scope: !9566)
!9582 = !DILocation(line: 822, column: 6, scope: !9566)
!9583 = !DILocation(line: 821, column: 31, scope: !9566)
!9584 = !DILocation(line: 818, column: 5, scope: !9566)
!9585 = !DILocation(line: 818, column: 11, scope: !9566)
!9586 = !DILocation(line: 818, column: 17, scope: !9566)
!9587 = !DILocation(line: 818, column: 21, scope: !9566)
!9588 = !DILocation(line: 825, column: 12, scope: !9566)
!9589 = !DILocation(line: 825, column: 17, scope: !9566)
!9590 = !DILocation(line: 825, column: 7, scope: !9566)
!9591 = !DILocation(line: 825, column: 25, scope: !9566)
!9592 = !DILocation(line: 826, column: 12, scope: !9566)
!9593 = !DILocation(line: 826, column: 17, scope: !9566)
!9594 = !DILocation(line: 826, column: 7, scope: !9566)
!9595 = !DILocation(line: 826, column: 25, scope: !9566)
!9596 = !DILocation(line: 825, column: 32, scope: !9566)
!9597 = !DILocation(line: 827, column: 12, scope: !9566)
!9598 = !DILocation(line: 827, column: 17, scope: !9566)
!9599 = !DILocation(line: 827, column: 7, scope: !9566)
!9600 = !DILocation(line: 827, column: 25, scope: !9566)
!9601 = !DILocation(line: 826, column: 32, scope: !9566)
!9602 = !DILocation(line: 828, column: 11, scope: !9566)
!9603 = !DILocation(line: 828, column: 16, scope: !9566)
!9604 = !DILocation(line: 828, column: 6, scope: !9566)
!9605 = !DILocation(line: 827, column: 31, scope: !9566)
!9606 = !DILocation(line: 825, column: 6, scope: !9566)
!9607 = !DILocation(line: 824, column: 5, scope: !9566)
!9608 = !DILocation(line: 824, column: 11, scope: !9566)
!9609 = !DILocation(line: 824, column: 17, scope: !9566)
!9610 = !DILocation(line: 824, column: 28, scope: !9566)
!9611 = !DILocation(line: 841, column: 4, scope: !9566)
!9612 = !DILocation(line: 846, column: 10, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 846, column: 8)
!9614 = !DILocation(line: 846, column: 15, scope: !9613)
!9615 = !DILocation(line: 846, column: 9, scope: !9613)
!9616 = !DILocation(line: 846, column: 20, scope: !9613)
!9617 = !DILocation(line: 846, column: 28, scope: !9613)
!9618 = !DILocation(line: 846, column: 8, scope: !9266)
!9619 = !DILocation(line: 847, column: 5, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 846, column: 38)
!9621 = !DILocation(line: 847, column: 10, scope: !9620)
!9622 = !DILocation(line: 847, column: 24, scope: !9620)
!9623 = !DILocation(line: 848, column: 4, scope: !9620)
!9624 = !DILocation(line: 850, column: 5, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 849, column: 9)
!9626 = !DILocation(line: 850, column: 10, scope: !9625)
!9627 = !DILocation(line: 850, column: 24, scope: !9625)
!9628 = !DILocation(line: 854, column: 50, scope: !9266)
!9629 = !DILocation(line: 854, column: 59, scope: !9266)
!9630 = !DILocation(line: 855, column: 14, scope: !9266)
!9631 = !DILocation(line: 855, column: 20, scope: !9266)
!9632 = !DILocation(line: 855, column: 26, scope: !9266)
!9633 = !DILocation(line: 854, column: 32, scope: !9266)
!9634 = !DILocation(line: 854, column: 4, scope: !9266)
!9635 = !DILocation(line: 854, column: 10, scope: !9266)
!9636 = !DILocation(line: 854, column: 16, scope: !9266)
!9637 = !DILocation(line: 854, column: 30, scope: !9266)
!9638 = !DILocation(line: 857, column: 11, scope: !9266)
!9639 = !DILocation(line: 857, column: 4, scope: !9266)
!9640 = !DILocation(line: 866, column: 10, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 866, column: 8)
!9642 = !DILocation(line: 866, column: 19, scope: !9641)
!9643 = !DILocation(line: 866, column: 8, scope: !9266)
!9644 = !DILocation(line: 868, column: 5, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9641, file: !3, line: 866, column: 33)
!9646 = !DILocation(line: 868, column: 10, scope: !9645)
!9647 = !DILocation(line: 868, column: 17, scope: !9645)
!9648 = !DILocation(line: 869, column: 5, scope: !9645)
!9649 = !DILocation(line: 869, column: 10, scope: !9645)
!9650 = !DILocation(line: 869, column: 20, scope: !9645)
!9651 = !DILocation(line: 870, column: 5, scope: !9645)
!9652 = !DILocation(line: 874, column: 33, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 874, column: 7)
!9654 = !DILocation(line: 874, column: 42, scope: !9653)
!9655 = !DILocation(line: 874, column: 15, scope: !9653)
!9656 = !DILocation(line: 874, column: 13, scope: !9653)
!9657 = !DILocation(line: 874, column: 7, scope: !9266)
!9658 = !DILocation(line: 875, column: 6, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 874, column: 49)
!9660 = !DILocation(line: 875, column: 11, scope: !9659)
!9661 = !DILocation(line: 876, column: 5, scope: !9659)
!9662 = !DILocation(line: 879, column: 4, scope: !9266)
!9663 = !DILocation(line: 879, column: 9, scope: !9266)
!9664 = !DILocation(line: 879, column: 21, scope: !9266)
!9665 = !DILocation(line: 880, column: 26, scope: !9266)
!9666 = !DILocation(line: 880, column: 31, scope: !9266)
!9667 = !DILocation(line: 880, column: 25, scope: !9266)
!9668 = !DILocation(line: 880, column: 36, scope: !9266)
!9669 = !DILocation(line: 880, column: 23, scope: !9266)
!9670 = !DILocation(line: 880, column: 4, scope: !9266)
!9671 = !DILocation(line: 880, column: 9, scope: !9266)
!9672 = !DILocation(line: 880, column: 21, scope: !9266)
!9673 = !DILocation(line: 883, column: 23, scope: !9266)
!9674 = !DILocation(line: 883, column: 4, scope: !9266)
!9675 = !DILocation(line: 883, column: 9, scope: !9266)
!9676 = !DILocation(line: 883, column: 21, scope: !9266)
!9677 = !DILocation(line: 885, column: 4, scope: !9266)
!9678 = !DILocation(line: 885, column: 9, scope: !9266)
!9679 = !DILocation(line: 885, column: 23, scope: !9266)
!9680 = !DILocation(line: 887, column: 11, scope: !9266)
!9681 = !DILocation(line: 887, column: 4, scope: !9266)
!9682 = !DILocation(line: 891, column: 4, scope: !9266)
!9683 = !DILocation(line: 891, column: 9, scope: !9266)
!9684 = !DILocation(line: 891, column: 16, scope: !9266)
!9685 = !DILocation(line: 892, column: 4, scope: !9266)
!9686 = !DILocation(line: 892, column: 9, scope: !9266)
!9687 = !DILocation(line: 892, column: 19, scope: !9266)
!9688 = !DILocation(line: 893, column: 4, scope: !9266)
!9689 = !DILocation(line: 902, column: 32, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9691, file: !3, line: 902, column: 6)
!9691 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 900, column: 7)
!9692 = !DILocation(line: 902, column: 41, scope: !9690)
!9693 = !DILocation(line: 902, column: 14, scope: !9690)
!9694 = !DILocation(line: 902, column: 12, scope: !9690)
!9695 = !DILocation(line: 902, column: 6, scope: !9691)
!9696 = !DILocation(line: 903, column: 5, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9690, file: !3, line: 902, column: 48)
!9698 = !DILocation(line: 903, column: 10, scope: !9697)
!9699 = !DILocation(line: 904, column: 4, scope: !9697)
!9700 = !DILocation(line: 907, column: 20, scope: !9691)
!9701 = !DILocation(line: 907, column: 25, scope: !9691)
!9702 = !DILocation(line: 907, column: 10, scope: !9691)
!9703 = !DILocation(line: 907, column: 8, scope: !9691)
!9704 = !DILocation(line: 908, column: 10, scope: !9691)
!9705 = !DILocation(line: 908, column: 3, scope: !9691)
!9706 = !DILocation(line: 910, column: 7, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9691, file: !3, line: 910, column: 7)
!9708 = !DILocation(line: 910, column: 16, scope: !9707)
!9709 = !DILocation(line: 910, column: 7, scope: !9691)
!9710 = !DILocation(line: 912, column: 29, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 910, column: 34)
!9712 = !DILocation(line: 912, column: 38, scope: !9711)
!9713 = !DILocation(line: 912, column: 43, scope: !9711)
!9714 = !DILocation(line: 913, column: 6, scope: !9711)
!9715 = !DILocation(line: 913, column: 15, scope: !9711)
!9716 = !DILocation(line: 912, column: 4, scope: !9711)
!9717 = !DILocation(line: 915, column: 4, scope: !9711)
!9718 = !DILocation(line: 915, column: 10, scope: !9711)
!9719 = !DILocation(line: 915, column: 16, scope: !9711)
!9720 = !DILocation(line: 915, column: 20, scope: !9711)
!9721 = !DILocation(line: 917, column: 27, scope: !9711)
!9722 = !DILocation(line: 917, column: 32, scope: !9711)
!9723 = !DILocation(line: 917, column: 4, scope: !9711)
!9724 = !DILocation(line: 917, column: 10, scope: !9711)
!9725 = !DILocation(line: 917, column: 16, scope: !9711)
!9726 = !DILocation(line: 917, column: 25, scope: !9711)
!9727 = !DILocation(line: 919, column: 3, scope: !9711)
!9728 = !DILocation(line: 922, column: 34, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 920, column: 8)
!9730 = !DILocation(line: 922, column: 43, scope: !9729)
!9731 = !DILocation(line: 922, column: 48, scope: !9729)
!9732 = !DILocation(line: 923, column: 6, scope: !9729)
!9733 = !DILocation(line: 923, column: 15, scope: !9729)
!9734 = !DILocation(line: 922, column: 12, scope: !9729)
!9735 = !DILocation(line: 922, column: 10, scope: !9729)
!9736 = !DILocation(line: 926, column: 8, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9729, file: !3, line: 926, column: 8)
!9738 = !DILocation(line: 926, column: 17, scope: !9737)
!9739 = !DILocation(line: 926, column: 8, scope: !9729)
!9740 = !DILocation(line: 927, column: 5, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 926, column: 34)
!9742 = !DILocation(line: 927, column: 11, scope: !9741)
!9743 = !DILocation(line: 927, column: 17, scope: !9741)
!9744 = !DILocation(line: 927, column: 21, scope: !9741)
!9745 = !DILocation(line: 928, column: 4, scope: !9741)
!9746 = !DILocation(line: 930, column: 5, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 929, column: 9)
!9748 = !DILocation(line: 930, column: 11, scope: !9747)
!9749 = !DILocation(line: 930, column: 17, scope: !9747)
!9750 = !DILocation(line: 930, column: 21, scope: !9747)
!9751 = !DILocation(line: 933, column: 27, scope: !9729)
!9752 = !DILocation(line: 933, column: 32, scope: !9729)
!9753 = !DILocation(line: 933, column: 4, scope: !9729)
!9754 = !DILocation(line: 933, column: 10, scope: !9729)
!9755 = !DILocation(line: 933, column: 16, scope: !9729)
!9756 = !DILocation(line: 933, column: 25, scope: !9729)
!9757 = !DILocation(line: 936, column: 10, scope: !9691)
!9758 = !DILocation(line: 936, column: 3, scope: !9691)
!9759 = !DILocation(line: 939, column: 1, scope: !9096)
!9760 = distinct !DISubprogram(name: "list_add_tail", scope: !7043, file: !7043, line: 98, type: !9761, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9761 = !DISubroutineType(types: !9762)
!9762 = !{null, !261, !261}
!9763 = !DILocalVariable(name: "new", arg: 1, scope: !9760, file: !7043, line: 98, type: !261)
!9764 = !DILocation(line: 98, column: 52, scope: !9760)
!9765 = !DILocalVariable(name: "head", arg: 2, scope: !9760, file: !7043, line: 98, type: !261)
!9766 = !DILocation(line: 98, column: 75, scope: !9760)
!9767 = !DILocation(line: 100, column: 13, scope: !9760)
!9768 = !DILocation(line: 100, column: 18, scope: !9760)
!9769 = !DILocation(line: 100, column: 24, scope: !9760)
!9770 = !DILocation(line: 100, column: 30, scope: !9760)
!9771 = !DILocation(line: 100, column: 2, scope: !9760)
!9772 = !DILocation(line: 101, column: 1, scope: !9760)
!9773 = distinct !DISubprogram(name: "mega_runpendq", scope: !3, file: !3, line: 360, type: !8176, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9774 = !DILocalVariable(name: "adapter", arg: 1, scope: !9773, file: !3, line: 360, type: !182)
!9775 = !DILocation(line: 360, column: 26, scope: !9773)
!9776 = !DILocation(line: 362, column: 18, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9773, file: !3, line: 362, column: 5)
!9778 = !DILocation(line: 362, column: 27, scope: !9777)
!9779 = !DILocation(line: 362, column: 6, scope: !9777)
!9780 = !DILocation(line: 362, column: 5, scope: !9773)
!9781 = !DILocation(line: 363, column: 19, scope: !9777)
!9782 = !DILocation(line: 363, column: 3, scope: !9777)
!9783 = !DILocation(line: 364, column: 1, scope: !9773)
!9784 = distinct !DISubprogram(name: "mega_get_ldrv_num", scope: !3, file: !3, line: 460, type: !9785, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9785 = !DISubroutineType(types: !9786)
!9786 = !{!188, !182, !5301, !188}
!9787 = !DILocalVariable(name: "adapter", arg: 1, scope: !9784, file: !3, line: 460, type: !182)
!9788 = !DILocation(line: 460, column: 30, scope: !9784)
!9789 = !DILocalVariable(name: "cmd", arg: 2, scope: !9784, file: !3, line: 460, type: !5301)
!9790 = !DILocation(line: 460, column: 57, scope: !9784)
!9791 = !DILocalVariable(name: "channel", arg: 3, scope: !9784, file: !3, line: 460, type: !188)
!9792 = !DILocation(line: 460, column: 66, scope: !9784)
!9793 = !DILocalVariable(name: "tgt", scope: !9784, file: !3, line: 462, type: !188)
!9794 = !DILocation(line: 462, column: 7, scope: !9784)
!9795 = !DILocalVariable(name: "ldrv_num", scope: !9784, file: !3, line: 463, type: !188)
!9796 = !DILocation(line: 463, column: 7, scope: !9784)
!9797 = !DILocation(line: 465, column: 8, scope: !9784)
!9798 = !DILocation(line: 465, column: 13, scope: !9784)
!9799 = !DILocation(line: 465, column: 21, scope: !9784)
!9800 = !DILocation(line: 465, column: 6, scope: !9784)
!9801 = !DILocation(line: 467, column: 7, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 467, column: 7)
!9803 = !DILocation(line: 467, column: 13, scope: !9802)
!9804 = !DILocation(line: 467, column: 22, scope: !9802)
!9805 = !DILocation(line: 467, column: 11, scope: !9802)
!9806 = !DILocation(line: 467, column: 7, scope: !9784)
!9807 = !DILocation(line: 468, column: 6, scope: !9802)
!9808 = !DILocation(line: 468, column: 3, scope: !9802)
!9809 = !DILocation(line: 470, column: 14, scope: !9784)
!9810 = !DILocation(line: 470, column: 22, scope: !9784)
!9811 = !DILocation(line: 470, column: 30, scope: !9784)
!9812 = !DILocation(line: 470, column: 28, scope: !9784)
!9813 = !DILocation(line: 470, column: 11, scope: !9784)
!9814 = !DILocation(line: 476, column: 6, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 476, column: 6)
!9816 = !DILocation(line: 476, column: 15, scope: !9815)
!9817 = !DILocation(line: 476, column: 6, scope: !9784)
!9818 = !DILocation(line: 477, column: 7, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9820, file: !3, line: 477, column: 7)
!9820 = distinct !DILexicalBlock(scope: !9815, file: !3, line: 476, column: 35)
!9821 = !DILocation(line: 477, column: 16, scope: !9819)
!9822 = !DILocation(line: 477, column: 7, scope: !9820)
!9823 = !DILocation(line: 478, column: 15, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9819, file: !3, line: 477, column: 23)
!9825 = !DILocation(line: 478, column: 24, scope: !9824)
!9826 = !DILocation(line: 478, column: 13, scope: !9824)
!9827 = !DILocation(line: 479, column: 3, scope: !9824)
!9828 = !DILocation(line: 481, column: 8, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9830, file: !3, line: 481, column: 8)
!9830 = distinct !DILexicalBlock(scope: !9819, file: !3, line: 480, column: 8)
!9831 = !DILocation(line: 481, column: 20, scope: !9829)
!9832 = !DILocation(line: 481, column: 29, scope: !9829)
!9833 = !DILocation(line: 481, column: 17, scope: !9829)
!9834 = !DILocation(line: 481, column: 8, scope: !9830)
!9835 = !DILocation(line: 482, column: 13, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 481, column: 41)
!9837 = !DILocation(line: 483, column: 4, scope: !9836)
!9838 = !DILocation(line: 485, column: 2, scope: !9820)
!9839 = !DILocation(line: 497, column: 6, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 497, column: 6)
!9841 = !DILocation(line: 497, column: 15, scope: !9840)
!9842 = !DILocation(line: 497, column: 34, scope: !9840)
!9843 = !DILocation(line: 497, column: 37, scope: !9840)
!9844 = !DILocation(line: 497, column: 46, scope: !9840)
!9845 = !DILocation(line: 497, column: 6, scope: !9784)
!9846 = !DILocation(line: 498, column: 11, scope: !9840)
!9847 = !DILocation(line: 498, column: 16, scope: !9840)
!9848 = !DILocation(line: 498, column: 3, scope: !9840)
!9849 = !DILocation(line: 503, column: 13, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 498, column: 25)
!9851 = !DILocation(line: 504, column: 3, scope: !9850)
!9852 = !DILocation(line: 506, column: 9, scope: !9784)
!9853 = !DILocation(line: 506, column: 2, scope: !9784)
!9854 = distinct !DISubprogram(name: "mega_allocate_scb", scope: !3, file: !3, line: 428, type: !9855, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9855 = !DISubroutineType(types: !9856)
!9856 = !{!5581, !182, !5301}
!9857 = !DILocalVariable(name: "adapter", arg: 1, scope: !9854, file: !3, line: 428, type: !182)
!9858 = !DILocation(line: 428, column: 30, scope: !9854)
!9859 = !DILocalVariable(name: "cmd", arg: 2, scope: !9854, file: !3, line: 428, type: !5301)
!9860 = !DILocation(line: 428, column: 57, scope: !9854)
!9861 = !DILocalVariable(name: "head", scope: !9854, file: !3, line: 430, type: !261)
!9862 = !DILocation(line: 430, column: 20, scope: !9854)
!9863 = !DILocation(line: 430, column: 28, scope: !9854)
!9864 = !DILocation(line: 430, column: 37, scope: !9854)
!9865 = !DILocalVariable(name: "scb", scope: !9854, file: !3, line: 431, type: !5581)
!9866 = !DILocation(line: 431, column: 9, scope: !9854)
!9867 = !DILocation(line: 434, column: 18, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 434, column: 6)
!9869 = !DILocation(line: 434, column: 7, scope: !9868)
!9870 = !DILocation(line: 434, column: 6, scope: !9854)
!9871 = !DILocalVariable(name: "__mptr", scope: !9872, file: !3, line: 436, type: !197)
!9872 = distinct !DILexicalBlock(scope: !9873, file: !3, line: 436, column: 9)
!9873 = distinct !DILexicalBlock(scope: !9868, file: !3, line: 434, column: 26)
!9874 = !DILocation(line: 436, column: 9, scope: !9872)
!9875 = !DILocation(line: 436, column: 9, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9872, file: !3, line: 436, column: 9)
!9877 = !DILocation(line: 436, column: 7, scope: !9873)
!9878 = !DILocation(line: 438, column: 17, scope: !9873)
!9879 = !DILocation(line: 438, column: 23, scope: !9873)
!9880 = !DILocation(line: 438, column: 3, scope: !9873)
!9881 = !DILocation(line: 440, column: 3, scope: !9873)
!9882 = !DILocation(line: 440, column: 8, scope: !9873)
!9883 = !DILocation(line: 440, column: 14, scope: !9873)
!9884 = !DILocation(line: 441, column: 14, scope: !9873)
!9885 = !DILocation(line: 441, column: 3, scope: !9873)
!9886 = !DILocation(line: 441, column: 8, scope: !9873)
!9887 = !DILocation(line: 441, column: 12, scope: !9873)
!9888 = !DILocation(line: 442, column: 3, scope: !9873)
!9889 = !DILocation(line: 442, column: 8, scope: !9873)
!9890 = !DILocation(line: 442, column: 17, scope: !9873)
!9891 = !DILocation(line: 444, column: 10, scope: !9873)
!9892 = !DILocation(line: 444, column: 3, scope: !9873)
!9893 = !DILocation(line: 447, column: 2, scope: !9854)
!9894 = !DILocation(line: 448, column: 1, scope: !9854)
!9895 = distinct !DISubprogram(name: "scsi_sglist", scope: !5303, file: !5303, line: 184, type: !9896, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9896 = !DISubroutineType(types: !9897)
!9897 = !{!5340, !5301}
!9898 = !DILocalVariable(name: "cmd", arg: 1, scope: !9895, file: !5303, line: 184, type: !5301)
!9899 = !DILocation(line: 184, column: 65, scope: !9895)
!9900 = !DILocation(line: 186, column: 9, scope: !9895)
!9901 = !DILocation(line: 186, column: 14, scope: !9895)
!9902 = !DILocation(line: 186, column: 18, scope: !9895)
!9903 = !DILocation(line: 186, column: 24, scope: !9895)
!9904 = !DILocation(line: 186, column: 2, scope: !9895)
!9905 = distinct !DISubprogram(name: "kmap_atomic", scope: !9906, file: !9906, line: 154, type: !9907, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9906 = !DIFile(filename: "./include/linux/highmem.h", directory: "/home/lizy2001/genbc/linux")
!9907 = !DISubroutineType(types: !9908)
!9908 = !{!197, !887}
!9909 = !DILocalVariable(name: "page", arg: 1, scope: !9910, file: !14, line: 1514, type: !9913)
!9910 = distinct !DISubprogram(name: "lowmem_page_address", scope: !14, file: !14, line: 1514, type: !9911, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9911 = !DISubroutineType(types: !9912)
!9912 = !{!197, !9913}
!9913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9914, size: 64)
!9914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !888)
!9915 = !DILocation(line: 1514, column: 69, scope: !9910, inlinedAt: !9916)
!9916 = distinct !DILocation(line: 158, column: 9, scope: !9905)
!9917 = !DILocalVariable(name: "page", arg: 1, scope: !9905, file: !9906, line: 154, type: !887)
!9918 = !DILocation(line: 154, column: 46, scope: !9905)
!9919 = !DILocation(line: 156, column: 2, scope: !9905)
!9920 = !{i32 -2142117200}
!9921 = !DILocation(line: 157, column: 2, scope: !9905)
!9922 = !DILocation(line: 158, column: 9, scope: !9905)
!9923 = !DILocation(line: 1516, column: 9, scope: !9910, inlinedAt: !9916)
!9924 = !DILocation(line: 158, column: 2, scope: !9905)
!9925 = distinct !DISubprogram(name: "sg_page", scope: !5337, file: !5337, line: 124, type: !9926, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9926 = !DISubroutineType(types: !9927)
!9927 = !{!887, !5340}
!9928 = !DILocalVariable(name: "sg", arg: 1, scope: !9925, file: !5337, line: 124, type: !5340)
!9929 = !DILocation(line: 124, column: 56, scope: !9925)
!9930 = !DILocation(line: 129, column: 26, scope: !9925)
!9931 = !DILocation(line: 129, column: 31, scope: !9925)
!9932 = !DILocation(line: 129, column: 41, scope: !9925)
!9933 = !DILocation(line: 129, column: 9, scope: !9925)
!9934 = !DILocation(line: 129, column: 2, scope: !9925)
!9935 = distinct !DISubprogram(name: "kunmap_atomic_high", scope: !9906, file: !9906, line: 162, type: !584, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9936 = !DILocalVariable(name: "addr", arg: 1, scope: !9935, file: !9906, line: 162, type: !197)
!9937 = !DILocation(line: 162, column: 45, scope: !9935)
!9938 = !DILocation(line: 171, column: 1, scope: !9935)
!9939 = distinct !DISubprogram(name: "pagefault_enable", scope: !9940, file: !9940, line: 254, type: !2049, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9940 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!9941 = !DILocalVariable(name: "pscr_ret__", scope: !9942, file: !9943, line: 15, type: !1390)
!9942 = distinct !DILexicalBlock(scope: !9944, file: !9943, line: 15, column: 9)
!9943 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!9944 = distinct !DISubprogram(name: "get_current", scope: !9943, file: !9943, line: 13, type: !9945, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9945 = !DISubroutineType(types: !9946)
!9946 = !{!1390}
!9947 = !DILocation(line: 15, column: 9, scope: !9942, inlinedAt: !9948)
!9948 = distinct !DILocation(line: 234, column: 2, scope: !9949, inlinedAt: !9950)
!9949 = distinct !DISubprogram(name: "pagefault_disabled_dec", scope: !9940, file: !9940, line: 232, type: !2049, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9950 = distinct !DILocation(line: 261, column: 2, scope: !9939)
!9951 = !DILocalVariable(name: "__vpp_verify", scope: !9952, file: !9943, line: 15, type: !3282)
!9952 = distinct !DILexicalBlock(scope: !9942, file: !9943, line: 15, column: 9)
!9953 = !DILocation(line: 15, column: 9, scope: !9952, inlinedAt: !9948)
!9954 = !DILocalVariable(name: "pfo_val__", scope: !9955, file: !9943, line: 15, type: !242)
!9955 = distinct !DILexicalBlock(scope: !9942, file: !9943, line: 15, column: 9)
!9956 = !DILocation(line: 15, column: 9, scope: !9955, inlinedAt: !9948)
!9957 = !DILocation(line: 260, column: 2, scope: !9939)
!9958 = !{i32 -2143741903}
!9959 = !{i32 -2146502888}
!9960 = !DILocation(line: 234, column: 11, scope: !9949, inlinedAt: !9950)
!9961 = !DILocation(line: 234, column: 29, scope: !9949, inlinedAt: !9950)
!9962 = !DILocation(line: 262, column: 1, scope: !9939)
!9963 = distinct !DISubprogram(name: "mega_build_sglist", scope: !3, file: !3, line: 1722, type: !9964, scopeLine: 1723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9964 = !DISubroutineType(types: !9965)
!9965 = !{!188, !182, !5581, !316, !316}
!9966 = !DILocalVariable(name: "adapter", arg: 1, scope: !9963, file: !3, line: 1722, type: !182)
!9967 = !DILocation(line: 1722, column: 30, scope: !9963)
!9968 = !DILocalVariable(name: "scb", arg: 2, scope: !9963, file: !3, line: 1722, type: !5581)
!9969 = !DILocation(line: 1722, column: 46, scope: !9963)
!9970 = !DILocalVariable(name: "buf", arg: 3, scope: !9963, file: !3, line: 1722, type: !316)
!9971 = !DILocation(line: 1722, column: 56, scope: !9963)
!9972 = !DILocalVariable(name: "len", arg: 4, scope: !9963, file: !3, line: 1722, type: !316)
!9973 = !DILocation(line: 1722, column: 66, scope: !9963)
!9974 = !DILocalVariable(name: "sg", scope: !9963, file: !3, line: 1724, type: !5340)
!9975 = !DILocation(line: 1724, column: 22, scope: !9963)
!9976 = !DILocalVariable(name: "cmd", scope: !9963, file: !3, line: 1725, type: !5301)
!9977 = !DILocation(line: 1725, column: 20, scope: !9963)
!9978 = !DILocalVariable(name: "sgcnt", scope: !9963, file: !3, line: 1726, type: !188)
!9979 = !DILocation(line: 1726, column: 6, scope: !9963)
!9980 = !DILocalVariable(name: "idx", scope: !9963, file: !3, line: 1727, type: !188)
!9981 = !DILocation(line: 1727, column: 6, scope: !9963)
!9982 = !DILocation(line: 1729, column: 8, scope: !9963)
!9983 = !DILocation(line: 1729, column: 13, scope: !9963)
!9984 = !DILocation(line: 1729, column: 6, scope: !9963)
!9985 = !DILocation(line: 1736, column: 23, scope: !9963)
!9986 = !DILocation(line: 1736, column: 10, scope: !9963)
!9987 = !DILocation(line: 1736, column: 8, scope: !9963)
!9988 = !DILocation(line: 1738, column: 2, scope: !9963)
!9989 = !DILocation(line: 1738, column: 7, scope: !9963)
!9990 = !DILocation(line: 1738, column: 16, scope: !9963)
!9991 = !DILocation(line: 1740, column: 2, scope: !9963)
!9992 = !DILocation(line: 1740, column: 2, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 1740, column: 2)
!9994 = distinct !DILexicalBlock(scope: !9963, file: !3, line: 1740, column: 2)
!9995 = !DILocation(line: 1740, column: 2, scope: !9994)
!9996 = !DILocation(line: 1740, column: 2, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 1740, column: 2)
!9998 = !DILocation(line: 1740, column: 2, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 1740, column: 2)
!10000 = !DILocation(line: 1740, column: 2, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 1740, column: 2)
!10002 = !{i32 -2140904541, i32 -2140904512, i32 -2140904466, i32 -2140904408, i32 -2140904354, i32 -2140904300, i32 -2140904245, i32 -2140904214}
!10003 = !DILocation(line: 1740, column: 2, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 1740, column: 2)
!10005 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 1740, column: 2)
!10006 = !{i32 -2140903767, i32 -2140903760, i32 -2140903706, i32 -2140903675, i32 -2140903645}
!10007 = !DILocation(line: 1740, column: 2, scope: !10005)
!10008 = !DILocation(line: 1742, column: 3, scope: !9963)
!10009 = !DILocation(line: 1742, column: 7, scope: !9963)
!10010 = !DILocation(line: 1744, column: 20, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !9963, file: !3, line: 1744, column: 6)
!10012 = !DILocation(line: 1744, column: 6, scope: !10011)
!10013 = !DILocation(line: 1744, column: 25, scope: !10011)
!10014 = !DILocation(line: 1744, column: 30, scope: !10011)
!10015 = !DILocation(line: 1744, column: 34, scope: !10011)
!10016 = !DILocation(line: 1744, column: 43, scope: !10011)
!10017 = !DILocation(line: 1744, column: 6, scope: !9963)
!10018 = !DILocation(line: 1745, column: 20, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10011, file: !3, line: 1744, column: 59)
!10020 = !DILocation(line: 1745, column: 8, scope: !10019)
!10021 = !DILocation(line: 1745, column: 6, scope: !10019)
!10022 = !DILocation(line: 1746, column: 25, scope: !10019)
!10023 = !DILocation(line: 1746, column: 3, scope: !10019)
!10024 = !DILocation(line: 1746, column: 8, scope: !10019)
!10025 = !DILocation(line: 1746, column: 23, scope: !10019)
!10026 = !DILocation(line: 1747, column: 15, scope: !10019)
!10027 = !DILocation(line: 1747, column: 20, scope: !10019)
!10028 = !DILocation(line: 1747, column: 10, scope: !10019)
!10029 = !DILocation(line: 1747, column: 4, scope: !10019)
!10030 = !DILocation(line: 1747, column: 8, scope: !10019)
!10031 = !DILocation(line: 1748, column: 10, scope: !10019)
!10032 = !DILocation(line: 1748, column: 4, scope: !10019)
!10033 = !DILocation(line: 1748, column: 8, scope: !10019)
!10034 = !DILocation(line: 1749, column: 3, scope: !10019)
!10035 = !DILocation(line: 1752, column: 2, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !9963, file: !3, line: 1752, column: 2)
!10037 = !DILocation(line: 1752, column: 2, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 1752, column: 2)
!10039 = !DILocation(line: 1753, column: 7, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10041, file: !3, line: 1753, column: 7)
!10041 = distinct !DILexicalBlock(scope: !10038, file: !3, line: 1752, column: 40)
!10042 = !DILocation(line: 1753, column: 16, scope: !10040)
!10043 = !DILocation(line: 1753, column: 7, scope: !10041)
!10044 = !DILocation(line: 1754, column: 30, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 1753, column: 32)
!10046 = !DILocation(line: 1754, column: 4, scope: !10045)
!10047 = !DILocation(line: 1754, column: 9, scope: !10045)
!10048 = !DILocation(line: 1754, column: 15, scope: !10045)
!10049 = !DILocation(line: 1754, column: 20, scope: !10045)
!10050 = !DILocation(line: 1754, column: 28, scope: !10045)
!10051 = !DILocation(line: 1755, column: 37, scope: !10045)
!10052 = !DILocation(line: 1755, column: 12, scope: !10045)
!10053 = !DILocation(line: 1755, column: 17, scope: !10045)
!10054 = !DILocation(line: 1755, column: 23, scope: !10045)
!10055 = !DILocation(line: 1755, column: 28, scope: !10045)
!10056 = !DILocation(line: 1755, column: 35, scope: !10045)
!10057 = !DILocation(line: 1755, column: 5, scope: !10045)
!10058 = !DILocation(line: 1755, column: 9, scope: !10045)
!10059 = !DILocation(line: 1756, column: 3, scope: !10045)
!10060 = !DILocation(line: 1757, column: 28, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 1756, column: 10)
!10062 = !DILocation(line: 1757, column: 4, scope: !10061)
!10063 = !DILocation(line: 1757, column: 9, scope: !10061)
!10064 = !DILocation(line: 1757, column: 13, scope: !10061)
!10065 = !DILocation(line: 1757, column: 18, scope: !10061)
!10066 = !DILocation(line: 1757, column: 26, scope: !10061)
!10067 = !DILocation(line: 1758, column: 35, scope: !10061)
!10068 = !DILocation(line: 1758, column: 12, scope: !10061)
!10069 = !DILocation(line: 1758, column: 17, scope: !10061)
!10070 = !DILocation(line: 1758, column: 21, scope: !10061)
!10071 = !DILocation(line: 1758, column: 26, scope: !10061)
!10072 = !DILocation(line: 1758, column: 33, scope: !10061)
!10073 = !DILocation(line: 1758, column: 5, scope: !10061)
!10074 = !DILocation(line: 1758, column: 9, scope: !10061)
!10075 = !DILocation(line: 1760, column: 2, scope: !10041)
!10076 = distinct !{!10076, !10035, !10077}
!10077 = !DILocation(line: 1760, column: 2, scope: !10036)
!10078 = !DILocation(line: 1763, column: 9, scope: !9963)
!10079 = !DILocation(line: 1763, column: 14, scope: !9963)
!10080 = !DILocation(line: 1763, column: 3, scope: !9963)
!10081 = !DILocation(line: 1763, column: 7, scope: !9963)
!10082 = !DILocation(line: 1766, column: 9, scope: !9963)
!10083 = !DILocation(line: 1766, column: 2, scope: !9963)
!10084 = !DILocation(line: 1767, column: 1, scope: !9963)
!10085 = distinct !DISubprogram(name: "mega_prepare_extpassthru", scope: !3, file: !3, line: 1017, type: !10086, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10086 = !DISubroutineType(types: !10087)
!10087 = !{!5640, !182, !5581, !5301, !188, !188}
!10088 = !DILocalVariable(name: "adapter", arg: 1, scope: !10085, file: !3, line: 1017, type: !182)
!10089 = !DILocation(line: 1017, column: 37, scope: !10085)
!10090 = !DILocalVariable(name: "scb", arg: 2, scope: !10085, file: !3, line: 1017, type: !5581)
!10091 = !DILocation(line: 1017, column: 53, scope: !10085)
!10092 = !DILocalVariable(name: "cmd", arg: 3, scope: !10085, file: !3, line: 1018, type: !5301)
!10093 = !DILocation(line: 1018, column: 23, scope: !10085)
!10094 = !DILocalVariable(name: "channel", arg: 4, scope: !10085, file: !3, line: 1019, type: !188)
!10095 = !DILocation(line: 1019, column: 9, scope: !10085)
!10096 = !DILocalVariable(name: "target", arg: 5, scope: !10085, file: !3, line: 1019, type: !188)
!10097 = !DILocation(line: 1019, column: 22, scope: !10085)
!10098 = !DILocalVariable(name: "epthru", scope: !10085, file: !3, line: 1021, type: !5640)
!10099 = !DILocation(line: 1021, column: 21, scope: !10085)
!10100 = !DILocation(line: 1023, column: 11, scope: !10085)
!10101 = !DILocation(line: 1023, column: 16, scope: !10085)
!10102 = !DILocation(line: 1023, column: 9, scope: !10085)
!10103 = !DILocation(line: 1024, column: 9, scope: !10085)
!10104 = !DILocation(line: 1024, column: 2, scope: !10085)
!10105 = !DILocation(line: 1027, column: 2, scope: !10085)
!10106 = !DILocation(line: 1027, column: 10, scope: !10085)
!10107 = !DILocation(line: 1027, column: 18, scope: !10085)
!10108 = !DILocation(line: 1029, column: 2, scope: !10085)
!10109 = !DILocation(line: 1029, column: 10, scope: !10085)
!10110 = !DILocation(line: 1029, column: 14, scope: !10085)
!10111 = !DILocation(line: 1030, column: 2, scope: !10085)
!10112 = !DILocation(line: 1030, column: 10, scope: !10085)
!10113 = !DILocation(line: 1030, column: 22, scope: !10085)
!10114 = !DILocation(line: 1031, column: 2, scope: !10085)
!10115 = !DILocation(line: 1031, column: 10, scope: !10085)
!10116 = !DILocation(line: 1031, column: 20, scope: !10085)
!10117 = !DILocation(line: 1033, column: 21, scope: !10085)
!10118 = !DILocation(line: 1033, column: 30, scope: !10085)
!10119 = !DILocation(line: 1033, column: 35, scope: !10085)
!10120 = !DILocation(line: 1033, column: 20, scope: !10085)
!10121 = !DILocation(line: 1033, column: 55, scope: !10085)
!10122 = !DILocation(line: 1033, column: 2, scope: !10085)
!10123 = !DILocation(line: 1033, column: 10, scope: !10085)
!10124 = !DILocation(line: 1033, column: 18, scope: !10085)
!10125 = !DILocation(line: 1034, column: 20, scope: !10085)
!10126 = !DILocation(line: 1034, column: 29, scope: !10085)
!10127 = !DILocation(line: 1034, column: 34, scope: !10085)
!10128 = !DILocation(line: 1034, column: 19, scope: !10085)
!10129 = !DILocation(line: 1035, column: 4, scope: !10085)
!10130 = !DILocation(line: 1035, column: 12, scope: !10085)
!10131 = !DILocation(line: 1035, column: 20, scope: !10085)
!10132 = !DILocation(line: 1035, column: 18, scope: !10085)
!10133 = !DILocation(line: 1035, column: 29, scope: !10085)
!10134 = !DILocation(line: 1034, column: 2, scope: !10085)
!10135 = !DILocation(line: 1034, column: 10, scope: !10085)
!10136 = !DILocation(line: 1034, column: 17, scope: !10085)
!10137 = !DILocation(line: 1037, column: 19, scope: !10085)
!10138 = !DILocation(line: 1037, column: 24, scope: !10085)
!10139 = !DILocation(line: 1037, column: 2, scope: !10085)
!10140 = !DILocation(line: 1037, column: 10, scope: !10085)
!10141 = !DILocation(line: 1037, column: 17, scope: !10085)
!10142 = !DILocation(line: 1038, column: 19, scope: !10085)
!10143 = !DILocation(line: 1038, column: 24, scope: !10085)
!10144 = !DILocation(line: 1038, column: 32, scope: !10085)
!10145 = !DILocation(line: 1038, column: 2, scope: !10085)
!10146 = !DILocation(line: 1038, column: 10, scope: !10085)
!10147 = !DILocation(line: 1038, column: 17, scope: !10085)
!10148 = !DILocation(line: 1040, column: 9, scope: !10085)
!10149 = !DILocation(line: 1040, column: 17, scope: !10085)
!10150 = !DILocation(line: 1040, column: 2, scope: !10085)
!10151 = !DILocation(line: 1040, column: 22, scope: !10085)
!10152 = !DILocation(line: 1040, column: 27, scope: !10085)
!10153 = !DILocation(line: 1040, column: 33, scope: !10085)
!10154 = !DILocation(line: 1040, column: 38, scope: !10085)
!10155 = !DILocation(line: 1043, column: 2, scope: !10085)
!10156 = !DILocation(line: 1043, column: 7, scope: !10085)
!10157 = !DILocation(line: 1043, column: 21, scope: !10085)
!10158 = !DILocation(line: 1045, column: 9, scope: !10085)
!10159 = !DILocation(line: 1045, column: 14, scope: !10085)
!10160 = !DILocation(line: 1045, column: 2, scope: !10085)
!10161 = !DILocation(line: 1048, column: 8, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10163, file: !3, line: 1048, column: 6)
!10163 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 1045, column: 23)
!10164 = !DILocation(line: 1048, column: 17, scope: !10162)
!10165 = !DILocation(line: 1048, column: 31, scope: !10162)
!10166 = !DILocation(line: 1048, column: 36, scope: !10162)
!10167 = !DILocation(line: 1048, column: 44, scope: !10162)
!10168 = !DILocation(line: 1048, column: 28, scope: !10162)
!10169 = !DILocation(line: 1048, column: 22, scope: !10162)
!10170 = !DILocation(line: 1048, column: 6, scope: !10163)
!10171 = !DILocation(line: 1050, column: 4, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10162, file: !3, line: 1048, column: 55)
!10173 = !DILocation(line: 1056, column: 28, scope: !10172)
!10174 = !DILocation(line: 1056, column: 33, scope: !10172)
!10175 = !DILocation(line: 1056, column: 41, scope: !10172)
!10176 = !DILocation(line: 1056, column: 25, scope: !10172)
!10177 = !DILocation(line: 1056, column: 4, scope: !10172)
!10178 = !DILocation(line: 1056, column: 13, scope: !10172)
!10179 = !DILocation(line: 1056, column: 18, scope: !10172)
!10180 = !DILocation(line: 1057, column: 3, scope: !10172)
!10181 = !DILocation(line: 1048, column: 52, scope: !10162)
!10182 = !DILocation(line: 1060, column: 45, scope: !10163)
!10183 = !DILocation(line: 1060, column: 54, scope: !10163)
!10184 = !DILocation(line: 1061, column: 6, scope: !10163)
!10185 = !DILocation(line: 1061, column: 14, scope: !10163)
!10186 = !DILocation(line: 1061, column: 29, scope: !10163)
!10187 = !DILocation(line: 1061, column: 37, scope: !10163)
!10188 = !DILocation(line: 1060, column: 27, scope: !10163)
!10189 = !DILocation(line: 1060, column: 3, scope: !10163)
!10190 = !DILocation(line: 1060, column: 11, scope: !10163)
!10191 = !DILocation(line: 1060, column: 25, scope: !10163)
!10192 = !DILocation(line: 1062, column: 3, scope: !10163)
!10193 = !DILocation(line: 1065, column: 9, scope: !10085)
!10194 = !DILocation(line: 1065, column: 2, scope: !10085)
!10195 = distinct !DISubprogram(name: "mega_prepare_passthru", scope: !3, file: !3, line: 953, type: !10196, scopeLine: 955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10196 = !DISubroutineType(types: !10197)
!10197 = !{!5613, !182, !5581, !5301, !188, !188}
!10198 = !DILocalVariable(name: "adapter", arg: 1, scope: !10195, file: !3, line: 953, type: !182)
!10199 = !DILocation(line: 953, column: 34, scope: !10195)
!10200 = !DILocalVariable(name: "scb", arg: 2, scope: !10195, file: !3, line: 953, type: !5581)
!10201 = !DILocation(line: 953, column: 50, scope: !10195)
!10202 = !DILocalVariable(name: "cmd", arg: 3, scope: !10195, file: !3, line: 953, type: !5301)
!10203 = !DILocation(line: 953, column: 73, scope: !10195)
!10204 = !DILocalVariable(name: "channel", arg: 4, scope: !10195, file: !3, line: 954, type: !188)
!10205 = !DILocation(line: 954, column: 13, scope: !10195)
!10206 = !DILocalVariable(name: "target", arg: 5, scope: !10195, file: !3, line: 954, type: !188)
!10207 = !DILocation(line: 954, column: 26, scope: !10195)
!10208 = !DILocalVariable(name: "pthru", scope: !10195, file: !3, line: 956, type: !5613)
!10209 = !DILocation(line: 956, column: 17, scope: !10195)
!10210 = !DILocation(line: 958, column: 10, scope: !10195)
!10211 = !DILocation(line: 958, column: 15, scope: !10195)
!10212 = !DILocation(line: 958, column: 8, scope: !10195)
!10213 = !DILocation(line: 959, column: 9, scope: !10195)
!10214 = !DILocation(line: 959, column: 2, scope: !10195)
!10215 = !DILocation(line: 962, column: 2, scope: !10195)
!10216 = !DILocation(line: 962, column: 9, scope: !10195)
!10217 = !DILocation(line: 962, column: 17, scope: !10195)
!10218 = !DILocation(line: 964, column: 2, scope: !10195)
!10219 = !DILocation(line: 964, column: 9, scope: !10195)
!10220 = !DILocation(line: 964, column: 13, scope: !10195)
!10221 = !DILocation(line: 965, column: 2, scope: !10195)
!10222 = !DILocation(line: 965, column: 9, scope: !10195)
!10223 = !DILocation(line: 965, column: 21, scope: !10195)
!10224 = !DILocation(line: 966, column: 2, scope: !10195)
!10225 = !DILocation(line: 966, column: 9, scope: !10195)
!10226 = !DILocation(line: 966, column: 19, scope: !10195)
!10227 = !DILocation(line: 968, column: 20, scope: !10195)
!10228 = !DILocation(line: 968, column: 29, scope: !10195)
!10229 = !DILocation(line: 968, column: 34, scope: !10195)
!10230 = !DILocation(line: 968, column: 19, scope: !10195)
!10231 = !DILocation(line: 968, column: 54, scope: !10195)
!10232 = !DILocation(line: 968, column: 2, scope: !10195)
!10233 = !DILocation(line: 968, column: 9, scope: !10195)
!10234 = !DILocation(line: 968, column: 17, scope: !10195)
!10235 = !DILocation(line: 970, column: 19, scope: !10195)
!10236 = !DILocation(line: 970, column: 28, scope: !10195)
!10237 = !DILocation(line: 970, column: 33, scope: !10195)
!10238 = !DILocation(line: 970, column: 18, scope: !10195)
!10239 = !DILocation(line: 971, column: 4, scope: !10195)
!10240 = !DILocation(line: 971, column: 12, scope: !10195)
!10241 = !DILocation(line: 971, column: 20, scope: !10195)
!10242 = !DILocation(line: 971, column: 18, scope: !10195)
!10243 = !DILocation(line: 971, column: 29, scope: !10195)
!10244 = !DILocation(line: 970, column: 2, scope: !10195)
!10245 = !DILocation(line: 970, column: 9, scope: !10195)
!10246 = !DILocation(line: 970, column: 16, scope: !10195)
!10247 = !DILocation(line: 973, column: 18, scope: !10195)
!10248 = !DILocation(line: 973, column: 23, scope: !10195)
!10249 = !DILocation(line: 973, column: 2, scope: !10195)
!10250 = !DILocation(line: 973, column: 9, scope: !10195)
!10251 = !DILocation(line: 973, column: 16, scope: !10195)
!10252 = !DILocation(line: 974, column: 18, scope: !10195)
!10253 = !DILocation(line: 974, column: 23, scope: !10195)
!10254 = !DILocation(line: 974, column: 31, scope: !10195)
!10255 = !DILocation(line: 974, column: 2, scope: !10195)
!10256 = !DILocation(line: 974, column: 9, scope: !10195)
!10257 = !DILocation(line: 974, column: 16, scope: !10195)
!10258 = !DILocation(line: 976, column: 9, scope: !10195)
!10259 = !DILocation(line: 976, column: 16, scope: !10195)
!10260 = !DILocation(line: 976, column: 2, scope: !10195)
!10261 = !DILocation(line: 976, column: 21, scope: !10195)
!10262 = !DILocation(line: 976, column: 26, scope: !10195)
!10263 = !DILocation(line: 976, column: 32, scope: !10195)
!10264 = !DILocation(line: 976, column: 37, scope: !10195)
!10265 = !DILocation(line: 979, column: 2, scope: !10195)
!10266 = !DILocation(line: 979, column: 7, scope: !10195)
!10267 = !DILocation(line: 979, column: 21, scope: !10195)
!10268 = !DILocation(line: 982, column: 10, scope: !10195)
!10269 = !DILocation(line: 982, column: 15, scope: !10195)
!10270 = !DILocation(line: 982, column: 2, scope: !10195)
!10271 = !DILocation(line: 985, column: 8, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10273, file: !3, line: 985, column: 6)
!10273 = distinct !DILexicalBlock(scope: !10195, file: !3, line: 982, column: 24)
!10274 = !DILocation(line: 985, column: 17, scope: !10272)
!10275 = !DILocation(line: 985, column: 31, scope: !10272)
!10276 = !DILocation(line: 985, column: 36, scope: !10272)
!10277 = !DILocation(line: 985, column: 44, scope: !10272)
!10278 = !DILocation(line: 985, column: 28, scope: !10272)
!10279 = !DILocation(line: 985, column: 22, scope: !10272)
!10280 = !DILocation(line: 985, column: 6, scope: !10273)
!10281 = !DILocation(line: 987, column: 4, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10272, file: !3, line: 985, column: 55)
!10283 = !DILocation(line: 993, column: 28, scope: !10282)
!10284 = !DILocation(line: 993, column: 33, scope: !10282)
!10285 = !DILocation(line: 993, column: 41, scope: !10282)
!10286 = !DILocation(line: 993, column: 25, scope: !10282)
!10287 = !DILocation(line: 993, column: 4, scope: !10282)
!10288 = !DILocation(line: 993, column: 13, scope: !10282)
!10289 = !DILocation(line: 993, column: 18, scope: !10282)
!10290 = !DILocation(line: 994, column: 3, scope: !10282)
!10291 = !DILocation(line: 985, column: 52, scope: !10272)
!10292 = !DILocation(line: 997, column: 44, scope: !10273)
!10293 = !DILocation(line: 997, column: 53, scope: !10273)
!10294 = !DILocation(line: 998, column: 6, scope: !10273)
!10295 = !DILocation(line: 998, column: 13, scope: !10273)
!10296 = !DILocation(line: 998, column: 28, scope: !10273)
!10297 = !DILocation(line: 998, column: 35, scope: !10273)
!10298 = !DILocation(line: 997, column: 26, scope: !10273)
!10299 = !DILocation(line: 997, column: 3, scope: !10273)
!10300 = !DILocation(line: 997, column: 10, scope: !10273)
!10301 = !DILocation(line: 997, column: 24, scope: !10273)
!10302 = !DILocation(line: 999, column: 3, scope: !10273)
!10303 = !DILocation(line: 1001, column: 9, scope: !10195)
!10304 = !DILocation(line: 1001, column: 2, scope: !10195)
!10305 = distinct !DISubprogram(name: "list_empty", scope: !7043, file: !7043, line: 280, type: !10306, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10306 = !DISubroutineType(types: !10307)
!10307 = !{!188, !10308}
!10308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10309, size: 64)
!10309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !258)
!10310 = !DILocalVariable(name: "head", arg: 1, scope: !10305, file: !7043, line: 280, type: !10308)
!10311 = !DILocation(line: 280, column: 54, scope: !10305)
!10312 = !DILocation(line: 282, column: 9, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10305, file: !7043, line: 282, column: 9)
!10314 = !DILocation(line: 282, column: 9, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10313, file: !7043, line: 282, column: 9)
!10316 = !DILocation(line: 282, column: 34, scope: !10305)
!10317 = !DILocation(line: 282, column: 31, scope: !10305)
!10318 = !DILocation(line: 282, column: 2, scope: !10305)
!10319 = distinct !DISubprogram(name: "list_del_init", scope: !7043, file: !7043, line: 202, type: !7044, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10320 = !DILocalVariable(name: "entry", arg: 1, scope: !10319, file: !7043, line: 202, type: !261)
!10321 = !DILocation(line: 202, column: 52, scope: !10319)
!10322 = !DILocation(line: 204, column: 19, scope: !10319)
!10323 = !DILocation(line: 204, column: 2, scope: !10319)
!10324 = !DILocation(line: 205, column: 17, scope: !10319)
!10325 = !DILocation(line: 205, column: 2, scope: !10319)
!10326 = !DILocation(line: 206, column: 1, scope: !10319)
!10327 = distinct !DISubprogram(name: "__list_del_entry", scope: !7043, file: !7043, line: 130, type: !7044, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10328 = !DILocalVariable(name: "entry", arg: 1, scope: !10327, file: !7043, line: 130, type: !261)
!10329 = !DILocation(line: 130, column: 55, scope: !10327)
!10330 = !DILocation(line: 132, column: 30, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10327, file: !7043, line: 132, column: 6)
!10332 = !DILocation(line: 132, column: 7, scope: !10331)
!10333 = !DILocation(line: 132, column: 6, scope: !10327)
!10334 = !DILocation(line: 133, column: 3, scope: !10331)
!10335 = !DILocation(line: 135, column: 13, scope: !10327)
!10336 = !DILocation(line: 135, column: 20, scope: !10327)
!10337 = !DILocation(line: 135, column: 26, scope: !10327)
!10338 = !DILocation(line: 135, column: 33, scope: !10327)
!10339 = !DILocation(line: 135, column: 2, scope: !10327)
!10340 = !DILocation(line: 136, column: 1, scope: !10327)
!10341 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !7043, file: !7043, line: 51, type: !10342, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10342 = !DISubroutineType(types: !10343)
!10343 = !{!605, !261}
!10344 = !DILocalVariable(name: "entry", arg: 1, scope: !10341, file: !7043, line: 51, type: !261)
!10345 = !DILocation(line: 51, column: 61, scope: !10341)
!10346 = !DILocation(line: 53, column: 2, scope: !10341)
!10347 = distinct !DISubprogram(name: "__list_del", scope: !7043, file: !7043, line: 110, type: !9761, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10348 = !DILocalVariable(name: "prev", arg: 1, scope: !10347, file: !7043, line: 110, type: !261)
!10349 = !DILocation(line: 110, column: 50, scope: !10347)
!10350 = !DILocalVariable(name: "next", arg: 2, scope: !10347, file: !7043, line: 110, type: !261)
!10351 = !DILocation(line: 110, column: 75, scope: !10347)
!10352 = !DILocation(line: 112, column: 15, scope: !10347)
!10353 = !DILocation(line: 112, column: 2, scope: !10347)
!10354 = !DILocation(line: 112, column: 8, scope: !10347)
!10355 = !DILocation(line: 112, column: 13, scope: !10347)
!10356 = !DILocation(line: 113, column: 2, scope: !10347)
!10357 = !DILocation(line: 113, column: 2, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10347, file: !7043, line: 113, column: 2)
!10359 = !DILocation(line: 113, column: 2, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10358, file: !7043, line: 113, column: 2)
!10361 = !DILocation(line: 113, column: 2, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10358, file: !7043, line: 113, column: 2)
!10363 = !DILocation(line: 114, column: 1, scope: !10347)
!10364 = distinct !DISubprogram(name: "pagefault_disable", scope: !9940, file: !9940, line: 244, type: !2049, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10365 = !DILocation(line: 15, column: 9, scope: !9942, inlinedAt: !10366)
!10366 = distinct !DILocation(line: 229, column: 2, scope: !10367, inlinedAt: !10368)
!10367 = distinct !DISubprogram(name: "pagefault_disabled_inc", scope: !9940, file: !9940, line: 227, type: !2049, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10368 = distinct !DILocation(line: 246, column: 2, scope: !10364)
!10369 = !DILocation(line: 15, column: 9, scope: !9952, inlinedAt: !10366)
!10370 = !DILocation(line: 15, column: 9, scope: !9955, inlinedAt: !10366)
!10371 = !DILocation(line: 229, column: 11, scope: !10367, inlinedAt: !10368)
!10372 = !DILocation(line: 229, column: 29, scope: !10367, inlinedAt: !10368)
!10373 = !DILocation(line: 251, column: 2, scope: !10364)
!10374 = !{i32 -2143742106}
!10375 = !DILocation(line: 252, column: 1, scope: !10364)
!10376 = distinct !DISubprogram(name: "scsi_sg_count", scope: !5303, file: !5303, line: 179, type: !10377, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10377 = !DISubroutineType(types: !10378)
!10378 = !{!7, !5301}
!10379 = !DILocalVariable(name: "cmd", arg: 1, scope: !10376, file: !5303, line: 179, type: !5301)
!10380 = !DILocation(line: 179, column: 56, scope: !10376)
!10381 = !DILocation(line: 181, column: 9, scope: !10376)
!10382 = !DILocation(line: 181, column: 14, scope: !10376)
!10383 = !DILocation(line: 181, column: 18, scope: !10376)
!10384 = !DILocation(line: 181, column: 24, scope: !10376)
!10385 = !DILocation(line: 181, column: 2, scope: !10376)
!10386 = distinct !DISubprogram(name: "__list_add", scope: !7043, file: !7043, line: 63, type: !10387, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10387 = !DISubroutineType(types: !10388)
!10388 = !{null, !261, !261, !261}
!10389 = !DILocalVariable(name: "new", arg: 1, scope: !10386, file: !7043, line: 63, type: !261)
!10390 = !DILocation(line: 63, column: 49, scope: !10386)
!10391 = !DILocalVariable(name: "prev", arg: 2, scope: !10386, file: !7043, line: 64, type: !261)
!10392 = !DILocation(line: 64, column: 28, scope: !10386)
!10393 = !DILocalVariable(name: "next", arg: 3, scope: !10386, file: !7043, line: 65, type: !261)
!10394 = !DILocation(line: 65, column: 28, scope: !10386)
!10395 = !DILocation(line: 67, column: 24, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10386, file: !7043, line: 67, column: 6)
!10397 = !DILocation(line: 67, column: 29, scope: !10396)
!10398 = !DILocation(line: 67, column: 35, scope: !10396)
!10399 = !DILocation(line: 67, column: 7, scope: !10396)
!10400 = !DILocation(line: 67, column: 6, scope: !10386)
!10401 = !DILocation(line: 68, column: 3, scope: !10396)
!10402 = !DILocation(line: 70, column: 15, scope: !10386)
!10403 = !DILocation(line: 70, column: 2, scope: !10386)
!10404 = !DILocation(line: 70, column: 8, scope: !10386)
!10405 = !DILocation(line: 70, column: 13, scope: !10386)
!10406 = !DILocation(line: 71, column: 14, scope: !10386)
!10407 = !DILocation(line: 71, column: 2, scope: !10386)
!10408 = !DILocation(line: 71, column: 7, scope: !10386)
!10409 = !DILocation(line: 71, column: 12, scope: !10386)
!10410 = !DILocation(line: 72, column: 14, scope: !10386)
!10411 = !DILocation(line: 72, column: 2, scope: !10386)
!10412 = !DILocation(line: 72, column: 7, scope: !10386)
!10413 = !DILocation(line: 72, column: 12, scope: !10386)
!10414 = !DILocation(line: 73, column: 2, scope: !10386)
!10415 = !DILocation(line: 73, column: 2, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10386, file: !7043, line: 73, column: 2)
!10417 = !DILocation(line: 73, column: 2, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10416, file: !7043, line: 73, column: 2)
!10419 = !DILocation(line: 73, column: 2, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10416, file: !7043, line: 73, column: 2)
!10421 = !DILocation(line: 74, column: 1, scope: !10386)
!10422 = distinct !DISubprogram(name: "__list_add_valid", scope: !7043, file: !7043, line: 45, type: !10423, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10423 = !DISubroutineType(types: !10424)
!10424 = !{!605, !261, !261, !261}
!10425 = !DILocalVariable(name: "new", arg: 1, scope: !10422, file: !7043, line: 45, type: !261)
!10426 = !DILocation(line: 45, column: 55, scope: !10422)
!10427 = !DILocalVariable(name: "prev", arg: 2, scope: !10422, file: !7043, line: 46, type: !261)
!10428 = !DILocation(line: 46, column: 23, scope: !10422)
!10429 = !DILocalVariable(name: "next", arg: 3, scope: !10422, file: !7043, line: 47, type: !261)
!10430 = !DILocation(line: 47, column: 23, scope: !10422)
!10431 = !DILocation(line: 49, column: 2, scope: !10422)
!10432 = distinct !DISubprogram(name: "kasan_check_read", scope: !10433, file: !10433, line: 34, type: !10434, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10433 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10434 = !DISubroutineType(types: !10435)
!10435 = !{!605, !6283, !7}
!10436 = !DILocalVariable(name: "p", arg: 1, scope: !10432, file: !10433, line: 34, type: !6283)
!10437 = !DILocation(line: 34, column: 58, scope: !10432)
!10438 = !DILocalVariable(name: "size", arg: 2, scope: !10432, file: !10433, line: 34, type: !7)
!10439 = !DILocation(line: 34, column: 74, scope: !10432)
!10440 = !DILocation(line: 36, column: 2, scope: !10432)
!10441 = distinct !DISubprogram(name: "kcsan_check_access", scope: !10442, file: !10442, line: 178, type: !10443, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10442 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10443 = !DISubroutineType(types: !10444)
!10444 = !{null, !6283, !445, !188}
!10445 = !DILocalVariable(name: "ptr", arg: 1, scope: !10441, file: !10442, line: 178, type: !6283)
!10446 = !DILocation(line: 178, column: 60, scope: !10441)
!10447 = !DILocalVariable(name: "size", arg: 2, scope: !10441, file: !10442, line: 178, type: !445)
!10448 = !DILocation(line: 178, column: 72, scope: !10441)
!10449 = !DILocalVariable(name: "type", arg: 3, scope: !10441, file: !10442, line: 179, type: !188)
!10450 = !DILocation(line: 179, column: 15, scope: !10441)
!10451 = !DILocation(line: 179, column: 23, scope: !10441)
!10452 = distinct !DISubprogram(name: "__mega_runpendq", scope: !3, file: !3, line: 1069, type: !8176, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10453 = !DILocalVariable(name: "adapter", arg: 1, scope: !10452, file: !3, line: 1069, type: !182)
!10454 = !DILocation(line: 1069, column: 28, scope: !10452)
!10455 = !DILocalVariable(name: "scb", scope: !10452, file: !3, line: 1071, type: !5581)
!10456 = !DILocation(line: 1071, column: 9, scope: !10452)
!10457 = !DILocalVariable(name: "pos", scope: !10452, file: !3, line: 1072, type: !261)
!10458 = !DILocation(line: 1072, column: 20, scope: !10452)
!10459 = !DILocalVariable(name: "next", scope: !10452, file: !3, line: 1072, type: !261)
!10460 = !DILocation(line: 1072, column: 26, scope: !10452)
!10461 = !DILocation(line: 1075, column: 2, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 1075, column: 2)
!10463 = !DILocation(line: 1075, column: 2, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 1075, column: 2)
!10465 = !DILocalVariable(name: "__mptr", scope: !10466, file: !3, line: 1077, type: !197)
!10466 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 1077, column: 9)
!10467 = distinct !DILexicalBlock(scope: !10464, file: !3, line: 1075, column: 56)
!10468 = !DILocation(line: 1077, column: 9, scope: !10466)
!10469 = !DILocation(line: 1077, column: 9, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10466, file: !3, line: 1077, column: 9)
!10471 = !DILocation(line: 1077, column: 7, scope: !10467)
!10472 = !DILocation(line: 1079, column: 9, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 1079, column: 7)
!10474 = !DILocation(line: 1079, column: 14, scope: !10473)
!10475 = !DILocation(line: 1079, column: 20, scope: !10473)
!10476 = !DILocation(line: 1079, column: 7, scope: !10467)
!10477 = !DILocation(line: 1081, column: 18, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 1081, column: 8)
!10479 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 1079, column: 36)
!10480 = !DILocation(line: 1081, column: 27, scope: !10478)
!10481 = !DILocation(line: 1081, column: 8, scope: !10478)
!10482 = !DILocation(line: 1081, column: 32, scope: !10478)
!10483 = !DILocation(line: 1081, column: 8, scope: !10479)
!10484 = !DILocation(line: 1082, column: 5, scope: !10478)
!10485 = !DILocation(line: 1083, column: 3, scope: !10479)
!10486 = !DILocation(line: 1084, column: 2, scope: !10467)
!10487 = distinct !{!10487, !10461, !10488}
!10488 = !DILocation(line: 1084, column: 2, scope: !10462)
!10489 = !DILocation(line: 1086, column: 2, scope: !10452)
!10490 = !DILocation(line: 1087, column: 1, scope: !10452)
!10491 = distinct !DISubprogram(name: "issue_scb", scope: !3, file: !3, line: 1100, type: !10492, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10492 = !DISubroutineType(types: !10493)
!10493 = !{!188, !182, !5581}
!10494 = !DILocalVariable(name: "v", arg: 1, scope: !10495, file: !6267, line: 93, type: !6270)
!10495 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !6267, file: !6267, line: 93, type: !10496, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10496 = !DISubroutineType(types: !10497)
!10497 = !{null, !6270}
!10498 = !DILocation(line: 93, column: 55, scope: !10495, inlinedAt: !10499)
!10499 = distinct !DILocation(line: 241, column: 2, scope: !10500, inlinedAt: !10501)
!10500 = distinct !DISubprogram(name: "atomic_inc", scope: !6274, file: !6274, line: 238, type: !10496, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10501 = distinct !DILocation(line: 1126, column: 2, scope: !10491)
!10502 = !DILocation(line: 99, column: 79, scope: !7438, inlinedAt: !10503)
!10503 = distinct !DILocation(line: 240, column: 2, scope: !10500, inlinedAt: !10501)
!10504 = !DILocation(line: 99, column: 89, scope: !7438, inlinedAt: !10503)
!10505 = !DILocalVariable(name: "v", arg: 1, scope: !10500, file: !6274, line: 238, type: !6270)
!10506 = !DILocation(line: 238, column: 22, scope: !10500, inlinedAt: !10501)
!10507 = !DILocalVariable(name: "adapter", arg: 1, scope: !10491, file: !3, line: 1100, type: !182)
!10508 = !DILocation(line: 1100, column: 22, scope: !10491)
!10509 = !DILocalVariable(name: "scb", arg: 2, scope: !10491, file: !3, line: 1100, type: !5581)
!10510 = !DILocation(line: 1100, column: 38, scope: !10491)
!10511 = !DILocalVariable(name: "mbox64", scope: !10491, file: !3, line: 1102, type: !246)
!10512 = !DILocation(line: 1102, column: 21, scope: !10491)
!10513 = !DILocation(line: 1102, column: 30, scope: !10491)
!10514 = !DILocation(line: 1102, column: 39, scope: !10491)
!10515 = !DILocalVariable(name: "mbox", scope: !10491, file: !3, line: 1103, type: !249)
!10516 = !DILocation(line: 1103, column: 20, scope: !10491)
!10517 = !DILocation(line: 1103, column: 27, scope: !10491)
!10518 = !DILocation(line: 1103, column: 36, scope: !10491)
!10519 = !DILocalVariable(name: "i", scope: !10491, file: !3, line: 1104, type: !7)
!10520 = !DILocation(line: 1104, column: 15, scope: !10491)
!10521 = !DILocation(line: 1106, column: 5, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10491, file: !3, line: 1106, column: 5)
!10523 = !DILocation(line: 1106, column: 5, scope: !10491)
!10524 = !DILocation(line: 1107, column: 3, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 1106, column: 32)
!10526 = !DILocation(line: 1108, column: 4, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10528, file: !3, line: 1108, column: 4)
!10528 = distinct !DILexicalBlock(scope: !10529, file: !3, line: 1108, column: 4)
!10529 = distinct !DILexicalBlock(scope: !10530, file: !3, line: 1108, column: 4)
!10530 = distinct !DILexicalBlock(scope: !10531, file: !3, line: 1108, column: 4)
!10531 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 1107, column: 6)
!10532 = !DILocation(line: 1109, column: 5, scope: !10531)
!10533 = !DILocation(line: 1110, column: 3, scope: !10531)
!10534 = !DILocation(line: 1110, column: 12, scope: !10525)
!10535 = !DILocation(line: 1110, column: 18, scope: !10525)
!10536 = !DILocation(line: 1110, column: 23, scope: !10525)
!10537 = !DILocation(line: 1110, column: 28, scope: !10525)
!10538 = !DILocation(line: 1110, column: 32, scope: !10525)
!10539 = !DILocation(line: 1110, column: 36, scope: !10525)
!10540 = !DILocation(line: 1110, column: 34, scope: !10525)
!10541 = !DILocation(line: 0, scope: !10525)
!10542 = distinct !{!10542, !10524, !10543}
!10543 = !DILocation(line: 1110, column: 56, scope: !10525)
!10544 = !DILocation(line: 1112, column: 6, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 1112, column: 6)
!10546 = !DILocation(line: 1112, column: 12, scope: !10545)
!10547 = !DILocation(line: 1112, column: 17, scope: !10545)
!10548 = !DILocation(line: 1112, column: 6, scope: !10525)
!10549 = !DILocation(line: 1112, column: 23, scope: !10545)
!10550 = !DILocation(line: 1113, column: 2, scope: !10525)
!10551 = !DILocation(line: 1116, column: 18, scope: !10491)
!10552 = !DILocation(line: 1116, column: 24, scope: !10491)
!10553 = !DILocation(line: 1116, column: 2, scope: !10491)
!10554 = !DILocation(line: 1116, column: 39, scope: !10491)
!10555 = !DILocation(line: 1116, column: 44, scope: !10491)
!10556 = !DILocation(line: 1119, column: 22, scope: !10491)
!10557 = !DILocation(line: 1119, column: 27, scope: !10491)
!10558 = !DILocation(line: 1119, column: 2, scope: !10491)
!10559 = !DILocation(line: 1119, column: 8, scope: !10491)
!10560 = !DILocation(line: 1119, column: 14, scope: !10491)
!10561 = !DILocation(line: 1119, column: 20, scope: !10491)
!10562 = !DILocation(line: 1120, column: 2, scope: !10491)
!10563 = !DILocation(line: 1120, column: 8, scope: !10491)
!10564 = !DILocation(line: 1120, column: 13, scope: !10491)
!10565 = !DILocation(line: 1120, column: 18, scope: !10491)
!10566 = !DILocation(line: 1126, column: 14, scope: !10491)
!10567 = !DILocation(line: 1126, column: 23, scope: !10491)
!10568 = !DILocation(line: 240, column: 31, scope: !10500, inlinedAt: !10501)
!10569 = !DILocation(line: 101, column: 20, scope: !7438, inlinedAt: !10503)
!10570 = !DILocation(line: 101, column: 23, scope: !7438, inlinedAt: !10503)
!10571 = !DILocation(line: 101, column: 2, scope: !7438, inlinedAt: !10503)
!10572 = !DILocation(line: 102, column: 2, scope: !7438, inlinedAt: !10503)
!10573 = !DILocation(line: 241, column: 18, scope: !10500, inlinedAt: !10501)
!10574 = !DILocation(line: 96, column: 16, scope: !10495, inlinedAt: !10499)
!10575 = !DILocation(line: 96, column: 19, scope: !10495, inlinedAt: !10499)
!10576 = !DILocation(line: 95, column: 2, scope: !10495, inlinedAt: !10499)
!10577 = !{i32 -2146265277}
!10578 = !DILocation(line: 1128, column: 10, scope: !10491)
!10579 = !DILocation(line: 1128, column: 16, scope: !10491)
!10580 = !DILocation(line: 1128, column: 22, scope: !10491)
!10581 = !DILocation(line: 1128, column: 2, scope: !10491)
!10582 = !DILocation(line: 1133, column: 29, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10491, file: !3, line: 1128, column: 27)
!10584 = !DILocation(line: 1133, column: 35, scope: !10583)
!10585 = !DILocation(line: 1133, column: 41, scope: !10583)
!10586 = !DILocation(line: 1133, column: 3, scope: !10583)
!10587 = !DILocation(line: 1133, column: 11, scope: !10583)
!10588 = !DILocation(line: 1133, column: 27, scope: !10583)
!10589 = !DILocation(line: 1134, column: 3, scope: !10583)
!10590 = !DILocation(line: 1134, column: 11, scope: !10583)
!10591 = !DILocation(line: 1134, column: 27, scope: !10583)
!10592 = !DILocation(line: 1135, column: 3, scope: !10583)
!10593 = !DILocation(line: 1135, column: 9, scope: !10583)
!10594 = !DILocation(line: 1135, column: 15, scope: !10583)
!10595 = !DILocation(line: 1135, column: 24, scope: !10583)
!10596 = !DILocation(line: 1136, column: 3, scope: !10583)
!10597 = !DILocation(line: 1138, column: 3, scope: !10583)
!10598 = !DILocation(line: 1138, column: 11, scope: !10583)
!10599 = !DILocation(line: 1138, column: 27, scope: !10583)
!10600 = !DILocation(line: 1139, column: 3, scope: !10583)
!10601 = !DILocation(line: 1139, column: 11, scope: !10583)
!10602 = !DILocation(line: 1139, column: 27, scope: !10583)
!10603 = !DILocation(line: 1140, column: 2, scope: !10583)
!10604 = !DILocation(line: 1145, column: 2, scope: !10491)
!10605 = !DILocation(line: 1145, column: 7, scope: !10491)
!10606 = !DILocation(line: 1145, column: 13, scope: !10491)
!10607 = !DILocation(line: 1147, column: 6, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10491, file: !3, line: 1147, column: 6)
!10609 = !DILocation(line: 1147, column: 6, scope: !10491)
!10610 = !DILocation(line: 1148, column: 3, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 1147, column: 45)
!10612 = !DILocation(line: 1148, column: 9, scope: !10611)
!10613 = !DILocation(line: 1148, column: 14, scope: !10611)
!10614 = !DILocation(line: 1148, column: 19, scope: !10611)
!10615 = !DILocation(line: 1149, column: 3, scope: !10611)
!10616 = !DILocation(line: 1149, column: 9, scope: !10611)
!10617 = !DILocation(line: 1149, column: 14, scope: !10611)
!10618 = !DILocation(line: 1149, column: 18, scope: !10611)
!10619 = !DILocation(line: 1150, column: 3, scope: !10611)
!10620 = !DILocation(line: 1151, column: 2, scope: !10611)
!10621 = !DILocation(line: 1153, column: 3, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 1152, column: 7)
!10623 = !DILocation(line: 1154, column: 3, scope: !10622)
!10624 = !DILocation(line: 1157, column: 2, scope: !10491)
!10625 = !DILocation(line: 1158, column: 1, scope: !10491)
!10626 = distinct !DISubprogram(name: "writel", scope: !10627, file: !10627, line: 67, type: !10628, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10627 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!10628 = !DISubroutineType(types: !10629)
!10629 = !{null, !7, !10630}
!10630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6285, size: 64)
!10631 = !DILocalVariable(name: "val", arg: 1, scope: !10626, file: !10627, line: 67, type: !7)
!10632 = !DILocation(line: 67, column: 1, scope: !10626)
!10633 = !DILocalVariable(name: "addr", arg: 2, scope: !10626, file: !10627, line: 67, type: !10630)
!10634 = !{i32 -2141825853}
!10635 = distinct !DISubprogram(name: "outb_p", scope: !10627, file: !10627, line: 334, type: !10636, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10636 = !DISubroutineType(types: !10637)
!10637 = !{null, !215, !188}
!10638 = !DILocalVariable(name: "value", arg: 1, scope: !10635, file: !10627, line: 334, type: !215)
!10639 = !DILocation(line: 334, column: 1, scope: !10635)
!10640 = !DILocalVariable(name: "port", arg: 2, scope: !10635, file: !10627, line: 334, type: !188)
!10641 = distinct !DISubprogram(name: "kasan_check_write", scope: !10433, file: !10433, line: 38, type: !10434, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10642 = !DILocalVariable(name: "p", arg: 1, scope: !10641, file: !10433, line: 38, type: !6283)
!10643 = !DILocation(line: 38, column: 59, scope: !10641)
!10644 = !DILocalVariable(name: "size", arg: 2, scope: !10641, file: !10433, line: 38, type: !7)
!10645 = !DILocation(line: 38, column: 75, scope: !10641)
!10646 = !DILocation(line: 40, column: 2, scope: !10641)
!10647 = distinct !DISubprogram(name: "outb", scope: !10627, file: !10627, line: 334, type: !10636, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10648 = !DILocalVariable(name: "value", arg: 1, scope: !10647, file: !10627, line: 334, type: !215)
!10649 = !DILocation(line: 334, column: 1, scope: !10647)
!10650 = !DILocalVariable(name: "port", arg: 2, scope: !10647, file: !10627, line: 334, type: !188)
!10651 = !{i32 -2141815983}
!10652 = distinct !DISubprogram(name: "slow_down_io", scope: !8951, file: !8951, line: 40, type: !2049, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10653 = !DILocation(line: 42, column: 13, scope: !10652)
!10654 = !DILocation(line: 42, column: 2, scope: !10652)
!10655 = !DILocation(line: 48, column: 1, scope: !10652)
!10656 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !8951, file: !8951, line: 651, type: !10657, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10657 = !DISubroutineType(types: !10658)
!10658 = !{null, !195}
!10659 = !DILocalVariable(name: "f", arg: 1, scope: !10656, file: !8951, line: 651, type: !195)
!10660 = !DILocation(line: 651, column: 65, scope: !10656)
!10661 = !DILocalVariable(name: "__edi", scope: !10662, file: !8951, line: 653, type: !195)
!10662 = distinct !DILexicalBlock(scope: !10656, file: !8951, line: 653, column: 2)
!10663 = !DILocation(line: 653, column: 2, scope: !10662)
!10664 = !DILocalVariable(name: "__esi", scope: !10662, file: !8951, line: 653, type: !195)
!10665 = !DILocalVariable(name: "__edx", scope: !10662, file: !8951, line: 653, type: !195)
!10666 = !DILocalVariable(name: "__ecx", scope: !10662, file: !8951, line: 653, type: !195)
!10667 = !DILocalVariable(name: "__eax", scope: !10662, file: !8951, line: 653, type: !195)
!10668 = !{i32 -2145512860, i32 -2145512110, i32 -2145511876, i32 -2145511825, i32 -2145511797, i32 -2145511772, i32 -2145512088, i32 -2145512075, i32 -2145511637, i32 -2145511518, i32 -2145511983, i32 -2145511956, i32 -2145511928, i32 -2145511898}
!10669 = !DILocation(line: 654, column: 1, scope: !10656)
!10670 = distinct !DISubprogram(name: "megaraid_abort_and_reset", scope: !3, file: !3, line: 1936, type: !9785, scopeLine: 1937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10671 = !DILocalVariable(name: "adapter", arg: 1, scope: !10670, file: !3, line: 1936, type: !182)
!10672 = !DILocation(line: 1936, column: 37, scope: !10670)
!10673 = !DILocalVariable(name: "cmd", arg: 2, scope: !10670, file: !3, line: 1936, type: !5301)
!10674 = !DILocation(line: 1936, column: 64, scope: !10670)
!10675 = !DILocalVariable(name: "aor", arg: 3, scope: !10670, file: !3, line: 1936, type: !188)
!10676 = !DILocation(line: 1936, column: 73, scope: !10670)
!10677 = !DILocalVariable(name: "pos", scope: !10670, file: !3, line: 1938, type: !261)
!10678 = !DILocation(line: 1938, column: 20, scope: !10670)
!10679 = !DILocalVariable(name: "next", scope: !10670, file: !3, line: 1938, type: !261)
!10680 = !DILocation(line: 1938, column: 26, scope: !10670)
!10681 = !DILocalVariable(name: "scb", scope: !10670, file: !3, line: 1939, type: !5581)
!10682 = !DILocation(line: 1939, column: 11, scope: !10670)
!10683 = !DILocation(line: 1941, column: 2, scope: !10670)
!10684 = !DILocation(line: 1946, column: 17, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10670, file: !3, line: 1946, column: 5)
!10686 = !DILocation(line: 1946, column: 26, scope: !10685)
!10687 = !DILocation(line: 1946, column: 5, scope: !10685)
!10688 = !DILocation(line: 1946, column: 5, scope: !10670)
!10689 = !DILocation(line: 1947, column: 3, scope: !10685)
!10690 = !DILocation(line: 1949, column: 2, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10670, file: !3, line: 1949, column: 2)
!10692 = !DILocation(line: 1949, column: 2, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10691, file: !3, line: 1949, column: 2)
!10694 = !DILocalVariable(name: "__mptr", scope: !10695, file: !3, line: 1951, type: !197)
!10695 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 1951, column: 9)
!10696 = distinct !DILexicalBlock(scope: !10693, file: !3, line: 1949, column: 56)
!10697 = !DILocation(line: 1951, column: 9, scope: !10695)
!10698 = !DILocation(line: 1951, column: 9, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10695, file: !3, line: 1951, column: 9)
!10700 = !DILocation(line: 1951, column: 7, scope: !10696)
!10701 = !DILocation(line: 1953, column: 7, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 1953, column: 7)
!10703 = !DILocation(line: 1953, column: 12, scope: !10702)
!10704 = !DILocation(line: 1953, column: 19, scope: !10702)
!10705 = !DILocation(line: 1953, column: 16, scope: !10702)
!10706 = !DILocation(line: 1953, column: 7, scope: !10696)
!10707 = !DILocation(line: 1955, column: 18, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 1953, column: 24)
!10709 = !DILocation(line: 1955, column: 4, scope: !10708)
!10710 = !DILocation(line: 1955, column: 9, scope: !10708)
!10711 = !DILocation(line: 1955, column: 15, scope: !10708)
!10712 = !DILocation(line: 1963, column: 8, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10708, file: !3, line: 1963, column: 8)
!10714 = !DILocation(line: 1963, column: 13, scope: !10713)
!10715 = !DILocation(line: 1963, column: 19, scope: !10713)
!10716 = !DILocation(line: 1963, column: 8, scope: !10708)
!10717 = !DILocation(line: 1965, column: 5, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 1963, column: 34)
!10719 = !DILocation(line: 1970, column: 5, scope: !10718)
!10720 = !DILocation(line: 1978, column: 5, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 1972, column: 9)
!10722 = !DILocation(line: 1983, column: 19, scope: !10721)
!10723 = !DILocation(line: 1983, column: 28, scope: !10721)
!10724 = !DILocation(line: 1983, column: 5, scope: !10721)
!10725 = !DILocation(line: 1985, column: 9, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 1985, column: 9)
!10727 = !DILocation(line: 1985, column: 13, scope: !10726)
!10728 = !DILocation(line: 1985, column: 9, scope: !10721)
!10729 = !DILocation(line: 1986, column: 6, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10726, file: !3, line: 1985, column: 28)
!10731 = !DILocation(line: 1986, column: 11, scope: !10730)
!10732 = !DILocation(line: 1986, column: 18, scope: !10730)
!10733 = !DILocation(line: 1987, column: 5, scope: !10730)
!10734 = !DILocation(line: 1989, column: 6, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10726, file: !3, line: 1988, column: 10)
!10736 = !DILocation(line: 1989, column: 11, scope: !10735)
!10737 = !DILocation(line: 1989, column: 18, scope: !10735)
!10738 = !DILocation(line: 1992, column: 19, scope: !10721)
!10739 = !DILocation(line: 1993, column: 8, scope: !10721)
!10740 = !DILocation(line: 1993, column: 17, scope: !10721)
!10741 = !DILocation(line: 1992, column: 5, scope: !10721)
!10742 = !DILocation(line: 1995, column: 5, scope: !10721)
!10743 = !DILocation(line: 1998, column: 2, scope: !10696)
!10744 = distinct !{!10744, !10690, !10745}
!10745 = !DILocation(line: 1998, column: 2, scope: !10691)
!10746 = !DILocation(line: 2000, column: 2, scope: !10670)
!10747 = !DILocation(line: 2001, column: 1, scope: !10670)
!10748 = distinct !DISubprogram(name: "mega_rundoneq", scope: !3, file: !3, line: 1653, type: !8176, scopeLine: 1654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10749 = !DILocalVariable(name: "adapter", arg: 1, scope: !10748, file: !3, line: 1653, type: !182)
!10750 = !DILocation(line: 1653, column: 27, scope: !10748)
!10751 = !DILocalVariable(name: "cmd", scope: !10748, file: !3, line: 1655, type: !5301)
!10752 = !DILocation(line: 1655, column: 20, scope: !10748)
!10753 = !DILocalVariable(name: "pos", scope: !10748, file: !3, line: 1656, type: !261)
!10754 = !DILocation(line: 1656, column: 20, scope: !10748)
!10755 = !DILocation(line: 1658, column: 2, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10748, file: !3, line: 1658, column: 2)
!10757 = !DILocation(line: 1658, column: 2, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10756, file: !3, line: 1658, column: 2)
!10759 = !DILocalVariable(name: "spos", scope: !10760, file: !3, line: 1660, type: !5702)
!10760 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 1658, column: 47)
!10761 = !DILocation(line: 1660, column: 24, scope: !10760)
!10762 = !DILocation(line: 1660, column: 54, scope: !10760)
!10763 = !DILocation(line: 1660, column: 31, scope: !10760)
!10764 = !DILocalVariable(name: "__mptr", scope: !10765, file: !3, line: 1662, type: !197)
!10765 = distinct !DILexicalBlock(scope: !10760, file: !3, line: 1662, column: 9)
!10766 = !DILocation(line: 1662, column: 9, scope: !10765)
!10767 = !DILocation(line: 1662, column: 9, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 1662, column: 9)
!10769 = !DILocation(line: 1662, column: 7, scope: !10760)
!10770 = !DILocation(line: 1663, column: 3, scope: !10760)
!10771 = !DILocation(line: 1663, column: 8, scope: !10760)
!10772 = !DILocation(line: 1663, column: 18, scope: !10760)
!10773 = !DILocation(line: 1664, column: 2, scope: !10760)
!10774 = distinct !{!10774, !10755, !10775}
!10775 = !DILocation(line: 1664, column: 2, scope: !10756)
!10776 = !DILocation(line: 1666, column: 18, scope: !10748)
!10777 = !DILocation(line: 1666, column: 27, scope: !10748)
!10778 = !DILocation(line: 1666, column: 2, scope: !10748)
!10779 = !DILocation(line: 1667, column: 1, scope: !10748)
!10780 = distinct !DISubprogram(name: "mega_free_scb", scope: !3, file: !3, line: 1675, type: !10781, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10781 = !DISubroutineType(types: !10782)
!10782 = !{null, !182, !5581}
!10783 = !DILocalVariable(name: "adapter", arg: 1, scope: !10780, file: !3, line: 1675, type: !182)
!10784 = !DILocation(line: 1675, column: 26, scope: !10780)
!10785 = !DILocalVariable(name: "scb", arg: 2, scope: !10780, file: !3, line: 1675, type: !5581)
!10786 = !DILocation(line: 1675, column: 42, scope: !10780)
!10787 = !DILocation(line: 1677, column: 10, scope: !10780)
!10788 = !DILocation(line: 1677, column: 15, scope: !10780)
!10789 = !DILocation(line: 1677, column: 2, scope: !10780)
!10790 = !DILocation(line: 1680, column: 3, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10780, file: !3, line: 1677, column: 26)
!10792 = !DILocation(line: 1683, column: 18, scope: !10791)
!10793 = !DILocation(line: 1683, column: 23, scope: !10791)
!10794 = !DILocation(line: 1683, column: 3, scope: !10791)
!10795 = !DILocation(line: 1684, column: 3, scope: !10791)
!10796 = !DILocation(line: 1686, column: 3, scope: !10791)
!10797 = !DILocation(line: 1692, column: 17, scope: !10780)
!10798 = !DILocation(line: 1692, column: 22, scope: !10780)
!10799 = !DILocation(line: 1692, column: 2, scope: !10780)
!10800 = !DILocation(line: 1695, column: 2, scope: !10780)
!10801 = !DILocation(line: 1695, column: 7, scope: !10780)
!10802 = !DILocation(line: 1695, column: 13, scope: !10780)
!10803 = !DILocation(line: 1696, column: 2, scope: !10780)
!10804 = !DILocation(line: 1696, column: 7, scope: !10780)
!10805 = !DILocation(line: 1696, column: 11, scope: !10780)
!10806 = !DILocation(line: 1698, column: 12, scope: !10780)
!10807 = !DILocation(line: 1698, column: 17, scope: !10780)
!10808 = !DILocation(line: 1698, column: 24, scope: !10780)
!10809 = !DILocation(line: 1698, column: 33, scope: !10780)
!10810 = !DILocation(line: 1698, column: 2, scope: !10780)
!10811 = !DILocation(line: 1699, column: 1, scope: !10780)
!10812 = distinct !DISubprogram(name: "list_add", scope: !7043, file: !7043, line: 84, type: !9761, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10813 = !DILocalVariable(name: "new", arg: 1, scope: !10812, file: !7043, line: 84, type: !261)
!10814 = !DILocation(line: 84, column: 47, scope: !10812)
!10815 = !DILocalVariable(name: "head", arg: 2, scope: !10812, file: !7043, line: 84, type: !261)
!10816 = !DILocation(line: 84, column: 70, scope: !10812)
!10817 = !DILocation(line: 86, column: 13, scope: !10812)
!10818 = !DILocation(line: 86, column: 18, scope: !10812)
!10819 = !DILocation(line: 86, column: 24, scope: !10812)
!10820 = !DILocation(line: 86, column: 30, scope: !10812)
!10821 = !DILocation(line: 86, column: 2, scope: !10812)
!10822 = !DILocation(line: 87, column: 1, scope: !10812)
!10823 = distinct !DISubprogram(name: "mega_internal_command", scope: !3, file: !3, line: 4076, type: !10824, scopeLine: 4077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10824 = !DISubroutineType(types: !10825)
!10825 = !{!188, !182, !5914, !5613}
!10826 = !DILocation(line: 23, column: 61, scope: !7408, inlinedAt: !10827)
!10827 = distinct !DILocation(line: 28, column: 9, scope: !7415, inlinedAt: !10828)
!10828 = distinct !DILocation(line: 4110, column: 6, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10823, file: !3, line: 4110, column: 6)
!10830 = !DILocation(line: 69, column: 73, scope: !7420, inlinedAt: !10831)
!10831 = distinct !DILocation(line: 27, column: 2, scope: !7415, inlinedAt: !10828)
!10832 = !DILocation(line: 69, column: 83, scope: !7420, inlinedAt: !10831)
!10833 = !DILocation(line: 25, column: 29, scope: !7415, inlinedAt: !10828)
!10834 = !DILocation(line: 407, column: 64, scope: !7448, inlinedAt: !10835)
!10835 = distinct !DILocation(line: 4112, column: 2, scope: !10823)
!10836 = !DILocation(line: 407, column: 84, scope: !7448, inlinedAt: !10835)
!10837 = !DILocation(line: 327, column: 67, scope: !6304, inlinedAt: !10838)
!10838 = distinct !DILocation(line: 4103, column: 2, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 4103, column: 2)
!10840 = distinct !DILexicalBlock(scope: !10841, file: !3, line: 4103, column: 2)
!10841 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 4103, column: 2)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !3, line: 4103, column: 2)
!10843 = distinct !DILexicalBlock(scope: !10823, file: !3, line: 4103, column: 2)
!10844 = !DILocalVariable(name: "adapter", arg: 1, scope: !10823, file: !3, line: 4076, type: !182)
!10845 = !DILocation(line: 4076, column: 34, scope: !10823)
!10846 = !DILocalVariable(name: "mc", arg: 2, scope: !10823, file: !3, line: 4076, type: !5914)
!10847 = !DILocation(line: 4076, column: 54, scope: !10823)
!10848 = !DILocalVariable(name: "pthru", arg: 3, scope: !10823, file: !3, line: 4076, type: !5613)
!10849 = !DILocation(line: 4076, column: 73, scope: !10823)
!10850 = !DILocalVariable(name: "flags", scope: !10823, file: !3, line: 4078, type: !195)
!10851 = !DILocation(line: 4078, column: 16, scope: !10823)
!10852 = !DILocalVariable(name: "scb", scope: !10823, file: !3, line: 4079, type: !5581)
!10853 = !DILocation(line: 4079, column: 9, scope: !10823)
!10854 = !DILocalVariable(name: "rval", scope: !10823, file: !3, line: 4080, type: !188)
!10855 = !DILocation(line: 4080, column: 6, scope: !10823)
!10856 = !DILocation(line: 4087, column: 14, scope: !10823)
!10857 = !DILocation(line: 4087, column: 23, scope: !10823)
!10858 = !DILocation(line: 4087, column: 2, scope: !10823)
!10859 = !DILocation(line: 4089, column: 9, scope: !10823)
!10860 = !DILocation(line: 4089, column: 18, scope: !10823)
!10861 = !DILocation(line: 4089, column: 6, scope: !10823)
!10862 = !DILocation(line: 4090, column: 9, scope: !10823)
!10863 = !DILocation(line: 4090, column: 2, scope: !10823)
!10864 = !DILocation(line: 4092, column: 2, scope: !10823)
!10865 = !DILocation(line: 4092, column: 7, scope: !10823)
!10866 = !DILocation(line: 4092, column: 11, scope: !10823)
!10867 = !DILocation(line: 4093, column: 2, scope: !10823)
!10868 = !DILocation(line: 4093, column: 7, scope: !10823)
!10869 = !DILocation(line: 4093, column: 13, scope: !10823)
!10870 = !DILocation(line: 4095, column: 9, scope: !10823)
!10871 = !DILocation(line: 4095, column: 14, scope: !10823)
!10872 = !DILocation(line: 4095, column: 2, scope: !10823)
!10873 = !DILocation(line: 4095, column: 24, scope: !10823)
!10874 = !DILocation(line: 4100, column: 6, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10823, file: !3, line: 4100, column: 6)
!10876 = !DILocation(line: 4100, column: 10, scope: !10875)
!10877 = !DILocation(line: 4100, column: 14, scope: !10875)
!10878 = !DILocation(line: 4100, column: 6, scope: !10823)
!10879 = !DILocation(line: 4101, column: 16, scope: !10875)
!10880 = !DILocation(line: 4101, column: 3, scope: !10875)
!10881 = !DILocation(line: 4101, column: 8, scope: !10875)
!10882 = !DILocation(line: 4101, column: 14, scope: !10875)
!10883 = !DILocation(line: 4103, column: 2, scope: !10823)
!10884 = !DILocation(line: 4103, column: 2, scope: !10843)
!10885 = !DILocalVariable(name: "__dummy", scope: !10886, file: !3, line: 4103, type: !195)
!10886 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 4103, column: 2)
!10887 = !DILocation(line: 4103, column: 2, scope: !10886)
!10888 = !DILocalVariable(name: "__dummy2", scope: !10886, file: !3, line: 4103, type: !195)
!10889 = !DILocation(line: 4103, column: 2, scope: !10842)
!10890 = !DILocation(line: 4103, column: 2, scope: !10841)
!10891 = !DILocation(line: 4103, column: 2, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10841, file: !3, line: 4103, column: 2)
!10893 = !DILocalVariable(name: "__dummy", scope: !10894, file: !3, line: 4103, type: !195)
!10894 = distinct !DILexicalBlock(scope: !10895, file: !3, line: 4103, column: 2)
!10895 = distinct !DILexicalBlock(scope: !10892, file: !3, line: 4103, column: 2)
!10896 = !DILocation(line: 4103, column: 2, scope: !10894)
!10897 = !DILocalVariable(name: "__dummy2", scope: !10894, file: !3, line: 4103, type: !195)
!10898 = !DILocation(line: 4103, column: 2, scope: !10895)
!10899 = !DILocation(line: 4103, column: 2, scope: !10840)
!10900 = !{i32 -2140880196}
!10901 = !DILocation(line: 4103, column: 2, scope: !10839)
!10902 = !DILocation(line: 329, column: 10, scope: !6304, inlinedAt: !10838)
!10903 = !DILocation(line: 329, column: 16, scope: !6304, inlinedAt: !10838)
!10904 = !DILocation(line: 4104, column: 17, scope: !10823)
!10905 = !DILocation(line: 4104, column: 22, scope: !10823)
!10906 = !DILocation(line: 4104, column: 29, scope: !10823)
!10907 = !DILocation(line: 4104, column: 38, scope: !10823)
!10908 = !DILocation(line: 4104, column: 2, scope: !10823)
!10909 = !DILocation(line: 4110, column: 19, scope: !10829)
!10910 = !DILocation(line: 4110, column: 28, scope: !10829)
!10911 = !DILocation(line: 27, column: 25, scope: !7415, inlinedAt: !10828)
!10912 = !DILocation(line: 71, column: 19, scope: !7420, inlinedAt: !10831)
!10913 = !DILocation(line: 71, column: 22, scope: !7420, inlinedAt: !10831)
!10914 = !DILocation(line: 71, column: 2, scope: !7420, inlinedAt: !10831)
!10915 = !DILocation(line: 72, column: 2, scope: !7420, inlinedAt: !10831)
!10916 = !DILocation(line: 28, column: 26, scope: !7415, inlinedAt: !10828)
!10917 = !DILocation(line: 29, column: 9, scope: !7408, inlinedAt: !10827)
!10918 = !DILocation(line: 4110, column: 39, scope: !10829)
!10919 = !DILocation(line: 4110, column: 6, scope: !10823)
!10920 = !DILocation(line: 4111, column: 17, scope: !10829)
!10921 = !DILocation(line: 4111, column: 3, scope: !10829)
!10922 = !DILocation(line: 4112, column: 26, scope: !10823)
!10923 = !DILocation(line: 4112, column: 35, scope: !10823)
!10924 = !DILocation(line: 4112, column: 41, scope: !10823)
!10925 = !DILocation(line: 409, column: 2, scope: !7603, inlinedAt: !10835)
!10926 = !DILocation(line: 409, column: 2, scope: !7608, inlinedAt: !10835)
!10927 = !DILocation(line: 409, column: 2, scope: !7609, inlinedAt: !10835)
!10928 = !DILocation(line: 409, column: 2, scope: !7616, inlinedAt: !10835)
!10929 = !DILocation(line: 409, column: 2, scope: !7619, inlinedAt: !10835)
!10930 = !DILocation(line: 4114, column: 23, scope: !10823)
!10931 = !DILocation(line: 4114, column: 32, scope: !10823)
!10932 = !DILocation(line: 4114, column: 2, scope: !10823)
!10933 = !DILocation(line: 4116, column: 22, scope: !10823)
!10934 = !DILocation(line: 4116, column: 31, scope: !10823)
!10935 = !DILocation(line: 4116, column: 20, scope: !10823)
!10936 = !DILocation(line: 4116, column: 15, scope: !10823)
!10937 = !DILocation(line: 4116, column: 2, scope: !10823)
!10938 = !DILocation(line: 4116, column: 6, scope: !10823)
!10939 = !DILocation(line: 4116, column: 13, scope: !10823)
!10940 = !DILocation(line: 4122, column: 6, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10823, file: !3, line: 4122, column: 6)
!10942 = !DILocation(line: 4122, column: 11, scope: !10941)
!10943 = !DILocation(line: 4122, column: 14, scope: !10941)
!10944 = !DILocation(line: 4122, column: 6, scope: !10823)
!10945 = !DILocation(line: 4123, column: 3, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10941, file: !3, line: 4122, column: 27)
!10947 = !DILocation(line: 4125, column: 2, scope: !10946)
!10948 = !DILocation(line: 4127, column: 16, scope: !10823)
!10949 = !DILocation(line: 4127, column: 25, scope: !10823)
!10950 = !DILocation(line: 4127, column: 2, scope: !10823)
!10951 = !DILocation(line: 4128, column: 9, scope: !10823)
!10952 = !DILocation(line: 4128, column: 2, scope: !10823)
!10953 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !8951, file: !8951, line: 661, type: !2049, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10954 = !DILocalVariable(name: "__edi", scope: !10955, file: !8951, line: 663, type: !195)
!10955 = distinct !DILexicalBlock(scope: !10953, file: !8951, line: 663, column: 2)
!10956 = !DILocation(line: 663, column: 2, scope: !10955)
!10957 = !DILocalVariable(name: "__esi", scope: !10955, file: !8951, line: 663, type: !195)
!10958 = !DILocalVariable(name: "__edx", scope: !10955, file: !8951, line: 663, type: !195)
!10959 = !DILocalVariable(name: "__ecx", scope: !10955, file: !8951, line: 663, type: !195)
!10960 = !DILocalVariable(name: "__eax", scope: !10955, file: !8951, line: 663, type: !195)
!10961 = !{i32 -2145507649, i32 -2145506919, i32 -2145506685, i32 -2145506634, i32 -2145506606, i32 -2145506581, i32 -2145506897, i32 -2145506884, i32 -2145506446, i32 -2145506327, i32 -2145506792, i32 -2145506765, i32 -2145506737, i32 -2145506707}
!10962 = !DILocation(line: 664, column: 1, scope: !10953)
!10963 = distinct !DISubprogram(name: "__must_check_overflow", scope: !10964, file: !10964, line: 52, type: !10965, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10964 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!10965 = !DISubroutineType(types: !10966)
!10966 = !{!605, !605}
!10967 = !DILocalVariable(name: "overflow", arg: 1, scope: !10963, file: !10964, line: 52, type: !605)
!10968 = !DILocation(line: 52, column: 60, scope: !10963)
!10969 = !DILocation(line: 54, column: 9, scope: !10963)
!10970 = !DILocation(line: 54, column: 2, scope: !10963)
!10971 = distinct !DISubprogram(name: "get_order", scope: !10972, file: !10972, line: 29, type: !10973, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10972 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!10973 = !DISubroutineType(types: !10974)
!10974 = !{!188, !195}
!10975 = !DILocalVariable(name: "x", arg: 1, scope: !10976, file: !10977, line: 366, type: !243)
!10976 = distinct !DISubprogram(name: "fls64", scope: !10977, file: !10977, line: 366, type: !10978, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10977 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!10978 = !DISubroutineType(types: !10979)
!10979 = !{!188, !243}
!10980 = !DILocation(line: 366, column: 40, scope: !10976, inlinedAt: !10981)
!10981 = distinct !DILocation(line: 46, column: 9, scope: !10971)
!10982 = !DILocalVariable(name: "bitpos", scope: !10976, file: !10977, line: 368, type: !188)
!10983 = !DILocation(line: 368, column: 6, scope: !10976, inlinedAt: !10981)
!10984 = !DILocalVariable(name: "size", arg: 1, scope: !10971, file: !10972, line: 29, type: !195)
!10985 = !DILocation(line: 29, column: 63, scope: !10971)
!10986 = !DILocation(line: 31, column: 27, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10971, file: !10972, line: 31, column: 6)
!10988 = !DILocation(line: 31, column: 6, scope: !10987)
!10989 = !DILocation(line: 31, column: 6, scope: !10971)
!10990 = !DILocation(line: 32, column: 8, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10992, file: !10972, line: 32, column: 7)
!10992 = distinct !DILexicalBlock(scope: !10987, file: !10972, line: 31, column: 34)
!10993 = !DILocation(line: 32, column: 7, scope: !10992)
!10994 = !DILocation(line: 33, column: 4, scope: !10991)
!10995 = !DILocation(line: 35, column: 7, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10992, file: !10972, line: 35, column: 7)
!10997 = !DILocation(line: 35, column: 12, scope: !10996)
!10998 = !DILocation(line: 35, column: 7, scope: !10992)
!10999 = !DILocation(line: 36, column: 4, scope: !10996)
!11000 = !DILocation(line: 38, column: 10, scope: !10992)
!11001 = !DILocation(line: 38, column: 28, scope: !10992)
!11002 = !DILocation(line: 38, column: 41, scope: !10992)
!11003 = !DILocation(line: 38, column: 3, scope: !10992)
!11004 = !DILocation(line: 41, column: 6, scope: !10971)
!11005 = !DILocation(line: 42, column: 7, scope: !10971)
!11006 = !DILocation(line: 46, column: 15, scope: !10971)
!11007 = !DILocation(line: 374, column: 2, scope: !10976, inlinedAt: !10981)
!11008 = !DILocation(line: 376, column: 14, scope: !10976, inlinedAt: !10981)
!11009 = !{i32 472410}
!11010 = !DILocation(line: 377, column: 9, scope: !10976, inlinedAt: !10981)
!11011 = !DILocation(line: 377, column: 16, scope: !10976, inlinedAt: !10981)
!11012 = !DILocation(line: 46, column: 2, scope: !10971)
!11013 = !DILocation(line: 48, column: 1, scope: !10971)
!11014 = distinct !DISubprogram(name: "__ilog2_u64", scope: !11015, file: !11015, line: 30, type: !11016, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11015 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!11016 = !DISubroutineType(types: !11017)
!11017 = !{!188, !242}
!11018 = !DILocation(line: 366, column: 40, scope: !10976, inlinedAt: !11019)
!11019 = distinct !DILocation(line: 32, column: 9, scope: !11014)
!11020 = !DILocation(line: 368, column: 6, scope: !10976, inlinedAt: !11019)
!11021 = !DILocalVariable(name: "n", arg: 1, scope: !11014, file: !11015, line: 30, type: !242)
!11022 = !DILocation(line: 30, column: 21, scope: !11014)
!11023 = !DILocation(line: 32, column: 15, scope: !11014)
!11024 = !DILocation(line: 374, column: 2, scope: !10976, inlinedAt: !11019)
!11025 = !DILocation(line: 376, column: 14, scope: !10976, inlinedAt: !11019)
!11026 = !DILocation(line: 377, column: 9, scope: !10976, inlinedAt: !11019)
!11027 = !DILocation(line: 377, column: 16, scope: !10976, inlinedAt: !11019)
!11028 = !DILocation(line: 32, column: 18, scope: !11014)
!11029 = !DILocation(line: 32, column: 2, scope: !11014)
!11030 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !11031, file: !11031, line: 137, type: !11032, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11031 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!11032 = !DISubroutineType(types: !11033)
!11033 = !{!197, !1116, !3282, !445, !910}
!11034 = !DILocalVariable(name: "s", arg: 1, scope: !11030, file: !11031, line: 137, type: !1116)
!11035 = !DILocation(line: 137, column: 54, scope: !11030)
!11036 = !DILocalVariable(name: "object", arg: 2, scope: !11030, file: !11031, line: 137, type: !3282)
!11037 = !DILocation(line: 137, column: 69, scope: !11030)
!11038 = !DILocalVariable(name: "size", arg: 3, scope: !11030, file: !11031, line: 138, type: !445)
!11039 = !DILocation(line: 138, column: 12, scope: !11030)
!11040 = !DILocalVariable(name: "flags", arg: 4, scope: !11030, file: !11031, line: 138, type: !910)
!11041 = !DILocation(line: 138, column: 24, scope: !11030)
!11042 = !DILocation(line: 140, column: 17, scope: !11030)
!11043 = !DILocation(line: 140, column: 2, scope: !11030)
!11044 = distinct !DISubprogram(name: "readl", scope: !10627, file: !10627, line: 59, type: !11045, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11045 = !DISubroutineType(types: !11046)
!11046 = !{!7, !6283}
!11047 = !DILocalVariable(name: "addr", arg: 1, scope: !11044, file: !10627, line: 59, type: !6283)
!11048 = !DILocation(line: 59, column: 1, scope: !11044)
!11049 = !DILocalVariable(name: "ret", scope: !11044, file: !10627, line: 59, type: !7)
!11050 = !{i32 -2141828246}
!11051 = distinct !DISubprogram(name: "mega_cmd_done", scope: !3, file: !3, line: 1416, type: !11052, scopeLine: 1417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11052 = !DISubroutineType(types: !11053)
!11053 = !{null, !182, !5551, !188, !188}
!11054 = !DILocalVariable(name: "adapter", arg: 1, scope: !11051, file: !3, line: 1416, type: !182)
!11055 = !DILocation(line: 1416, column: 26, scope: !11051)
!11056 = !DILocalVariable(name: "completed", arg: 2, scope: !11051, file: !3, line: 1416, type: !5551)
!11057 = !DILocation(line: 1416, column: 38, scope: !11051)
!11058 = !DILocalVariable(name: "nstatus", arg: 3, scope: !11051, file: !3, line: 1416, type: !188)
!11059 = !DILocation(line: 1416, column: 55, scope: !11051)
!11060 = !DILocalVariable(name: "status", arg: 4, scope: !11051, file: !3, line: 1416, type: !188)
!11061 = !DILocation(line: 1416, column: 68, scope: !11051)
!11062 = !DILocalVariable(name: "epthru", scope: !11051, file: !3, line: 1418, type: !5640)
!11063 = !DILocation(line: 1418, column: 21, scope: !11051)
!11064 = !DILocalVariable(name: "sgl", scope: !11051, file: !3, line: 1419, type: !5340)
!11065 = !DILocation(line: 1419, column: 22, scope: !11051)
!11066 = !DILocalVariable(name: "cmd", scope: !11051, file: !3, line: 1420, type: !5301)
!11067 = !DILocation(line: 1420, column: 20, scope: !11051)
!11068 = !DILocalVariable(name: "pthru", scope: !11051, file: !3, line: 1421, type: !5613)
!11069 = !DILocation(line: 1421, column: 17, scope: !11051)
!11070 = !DILocalVariable(name: "mbox", scope: !11051, file: !3, line: 1422, type: !5692)
!11071 = !DILocation(line: 1422, column: 10, scope: !11051)
!11072 = !DILocalVariable(name: "c", scope: !11051, file: !3, line: 1423, type: !213)
!11073 = !DILocation(line: 1423, column: 5, scope: !11051)
!11074 = !DILocalVariable(name: "scb", scope: !11051, file: !3, line: 1424, type: !5581)
!11075 = !DILocation(line: 1424, column: 9, scope: !11051)
!11076 = !DILocalVariable(name: "islogical", scope: !11051, file: !3, line: 1425, type: !188)
!11077 = !DILocation(line: 1425, column: 6, scope: !11051)
!11078 = !DILocalVariable(name: "cmdid", scope: !11051, file: !3, line: 1426, type: !188)
!11079 = !DILocation(line: 1426, column: 6, scope: !11051)
!11080 = !DILocalVariable(name: "i", scope: !11051, file: !3, line: 1427, type: !188)
!11081 = !DILocation(line: 1427, column: 6, scope: !11051)
!11082 = !DILocation(line: 1433, column: 9, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 1433, column: 2)
!11084 = !DILocation(line: 1433, column: 7, scope: !11083)
!11085 = !DILocation(line: 1433, column: 14, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11083, file: !3, line: 1433, column: 2)
!11087 = !DILocation(line: 1433, column: 18, scope: !11086)
!11088 = !DILocation(line: 1433, column: 16, scope: !11086)
!11089 = !DILocation(line: 1433, column: 2, scope: !11083)
!11090 = !DILocation(line: 1435, column: 11, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 1433, column: 33)
!11092 = !DILocation(line: 1435, column: 21, scope: !11091)
!11093 = !DILocation(line: 1435, column: 9, scope: !11091)
!11094 = !DILocation(line: 1444, column: 7, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11091, file: !3, line: 1444, column: 7)
!11096 = !DILocation(line: 1444, column: 13, scope: !11095)
!11097 = !DILocation(line: 1444, column: 7, scope: !11091)
!11098 = !DILocation(line: 1445, column: 11, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11095, file: !3, line: 1444, column: 32)
!11100 = !DILocation(line: 1445, column: 20, scope: !11099)
!11101 = !DILocation(line: 1445, column: 8, scope: !11099)
!11102 = !DILocation(line: 1447, column: 19, scope: !11099)
!11103 = !DILocation(line: 1447, column: 24, scope: !11099)
!11104 = !DILocation(line: 1447, column: 4, scope: !11099)
!11105 = !DILocation(line: 1448, column: 4, scope: !11099)
!11106 = !DILocation(line: 1448, column: 9, scope: !11099)
!11107 = !DILocation(line: 1448, column: 15, scope: !11099)
!11108 = !DILocation(line: 1450, column: 26, scope: !11099)
!11109 = !DILocation(line: 1450, column: 4, scope: !11099)
!11110 = !DILocation(line: 1450, column: 13, scope: !11099)
!11111 = !DILocation(line: 1450, column: 24, scope: !11099)
!11112 = !DILocation(line: 1451, column: 14, scope: !11099)
!11113 = !DILocation(line: 1451, column: 23, scope: !11099)
!11114 = !DILocation(line: 1451, column: 4, scope: !11099)
!11115 = !DILocation(line: 1452, column: 3, scope: !11099)
!11116 = !DILocation(line: 1453, column: 11, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11095, file: !3, line: 1452, column: 10)
!11118 = !DILocation(line: 1453, column: 20, scope: !11117)
!11119 = !DILocation(line: 1453, column: 29, scope: !11117)
!11120 = !DILocation(line: 1453, column: 8, scope: !11117)
!11121 = !DILocation(line: 1458, column: 10, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11117, file: !3, line: 1458, column: 8)
!11123 = !DILocation(line: 1458, column: 15, scope: !11122)
!11124 = !DILocation(line: 1458, column: 21, scope: !11122)
!11125 = !DILocation(line: 1458, column: 35, scope: !11122)
!11126 = !DILocation(line: 1458, column: 38, scope: !11122)
!11127 = !DILocation(line: 1458, column: 43, scope: !11122)
!11128 = !DILocation(line: 1458, column: 47, scope: !11122)
!11129 = !DILocation(line: 1458, column: 8, scope: !11117)
!11130 = !DILocation(line: 1459, column: 5, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11122, file: !3, line: 1458, column: 57)
!11132 = !DILocation(line: 1463, column: 5, scope: !11131)
!11133 = !DILocation(line: 1469, column: 8, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11117, file: !3, line: 1469, column: 8)
!11135 = !DILocation(line: 1469, column: 13, scope: !11134)
!11136 = !DILocation(line: 1469, column: 19, scope: !11134)
!11137 = !DILocation(line: 1469, column: 8, scope: !11117)
!11138 = !DILocation(line: 1471, column: 5, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11134, file: !3, line: 1469, column: 33)
!11140 = !DILocation(line: 1475, column: 5, scope: !11139)
!11141 = !DILocation(line: 1475, column: 10, scope: !11139)
!11142 = !DILocation(line: 1475, column: 15, scope: !11139)
!11143 = !DILocation(line: 1475, column: 22, scope: !11139)
!11144 = !DILocation(line: 1477, column: 19, scope: !11139)
!11145 = !DILocation(line: 1478, column: 8, scope: !11139)
!11146 = !DILocation(line: 1478, column: 17, scope: !11139)
!11147 = !DILocation(line: 1477, column: 5, scope: !11139)
!11148 = !DILocation(line: 1480, column: 19, scope: !11139)
!11149 = !DILocation(line: 1480, column: 28, scope: !11139)
!11150 = !DILocation(line: 1480, column: 5, scope: !11139)
!11151 = !DILocation(line: 1482, column: 5, scope: !11139)
!11152 = !DILocation(line: 1488, column: 8, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11117, file: !3, line: 1488, column: 8)
!11154 = !DILocation(line: 1488, column: 13, scope: !11153)
!11155 = !DILocation(line: 1488, column: 19, scope: !11153)
!11156 = !DILocation(line: 1488, column: 8, scope: !11117)
!11157 = !DILocation(line: 1490, column: 5, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11153, file: !3, line: 1488, column: 33)
!11159 = !DILocation(line: 1494, column: 5, scope: !11158)
!11160 = !DILocation(line: 1494, column: 10, scope: !11158)
!11161 = !DILocation(line: 1494, column: 15, scope: !11158)
!11162 = !DILocation(line: 1494, column: 22, scope: !11158)
!11163 = !DILocation(line: 1496, column: 19, scope: !11158)
!11164 = !DILocation(line: 1497, column: 8, scope: !11158)
!11165 = !DILocation(line: 1497, column: 17, scope: !11158)
!11166 = !DILocation(line: 1496, column: 5, scope: !11158)
!11167 = !DILocation(line: 1499, column: 20, scope: !11158)
!11168 = !DILocation(line: 1499, column: 29, scope: !11158)
!11169 = !DILocation(line: 1499, column: 5, scope: !11158)
!11170 = !DILocation(line: 1501, column: 5, scope: !11158)
!11171 = !DILocation(line: 1504, column: 10, scope: !11117)
!11172 = !DILocation(line: 1504, column: 15, scope: !11117)
!11173 = !DILocation(line: 1504, column: 8, scope: !11117)
!11174 = !DILocation(line: 1505, column: 12, scope: !11117)
!11175 = !DILocation(line: 1505, column: 17, scope: !11117)
!11176 = !DILocation(line: 1505, column: 10, scope: !11117)
!11177 = !DILocation(line: 1506, column: 13, scope: !11117)
!11178 = !DILocation(line: 1506, column: 18, scope: !11117)
!11179 = !DILocation(line: 1506, column: 11, scope: !11117)
!11180 = !DILocation(line: 1507, column: 21, scope: !11117)
!11181 = !DILocation(line: 1507, column: 26, scope: !11117)
!11182 = !DILocation(line: 1507, column: 11, scope: !11117)
!11183 = !DILocation(line: 1507, column: 9, scope: !11117)
!11184 = !DILocation(line: 1550, column: 15, scope: !11091)
!11185 = !DILocation(line: 1550, column: 24, scope: !11091)
!11186 = !DILocation(line: 1550, column: 36, scope: !11091)
!11187 = !DILocation(line: 1550, column: 41, scope: !11091)
!11188 = !DILocation(line: 1550, column: 49, scope: !11091)
!11189 = !DILocation(line: 1550, column: 13, scope: !11091)
!11190 = !DILocation(line: 1551, column: 7, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11091, file: !3, line: 1551, column: 7)
!11192 = !DILocation(line: 1551, column: 12, scope: !11191)
!11193 = !DILocation(line: 1551, column: 20, scope: !11191)
!11194 = !DILocation(line: 1551, column: 31, scope: !11191)
!11195 = !DILocation(line: 1551, column: 35, scope: !11191)
!11196 = !DILocation(line: 1551, column: 7, scope: !11091)
!11197 = !DILocation(line: 1553, column: 22, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11191, file: !3, line: 1551, column: 47)
!11199 = !DILocation(line: 1553, column: 10, scope: !11198)
!11200 = !DILocation(line: 1553, column: 8, scope: !11198)
!11201 = !DILocation(line: 1554, column: 16, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11198, file: !3, line: 1554, column: 8)
!11203 = !DILocation(line: 1554, column: 8, scope: !11202)
!11204 = !DILocation(line: 1554, column: 8, scope: !11198)
!11205 = !DILocation(line: 1555, column: 37, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11202, file: !3, line: 1554, column: 23)
!11207 = !DILocation(line: 1555, column: 28, scope: !11206)
!11208 = !DILocation(line: 1555, column: 9, scope: !11206)
!11209 = !DILocation(line: 1555, column: 7, scope: !11206)
!11210 = !DILocation(line: 1556, column: 4, scope: !11206)
!11211 = !DILocation(line: 1557, column: 5, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11202, file: !3, line: 1556, column: 11)
!11213 = !DILocation(line: 1558, column: 7, scope: !11212)
!11214 = !DILocation(line: 1561, column: 7, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11198, file: !3, line: 1561, column: 7)
!11216 = !DILocation(line: 1561, column: 49, scope: !11215)
!11217 = !DILocation(line: 1562, column: 8, scope: !11215)
!11218 = !DILocation(line: 1562, column: 10, scope: !11215)
!11219 = !DILocation(line: 1562, column: 19, scope: !11215)
!11220 = !DILocation(line: 1561, column: 7, scope: !11198)
!11221 = !DILocation(line: 1563, column: 12, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11215, file: !3, line: 1562, column: 34)
!11223 = !DILocation(line: 1564, column: 4, scope: !11222)
!11224 = !DILocation(line: 1565, column: 3, scope: !11198)
!11225 = !DILocation(line: 1568, column: 3, scope: !11091)
!11226 = !DILocation(line: 1568, column: 8, scope: !11091)
!11227 = !DILocation(line: 1568, column: 15, scope: !11091)
!11228 = !DILocation(line: 1571, column: 11, scope: !11091)
!11229 = !DILocation(line: 1571, column: 3, scope: !11091)
!11230 = !DILocation(line: 1573, column: 4, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11091, file: !3, line: 1571, column: 19)
!11232 = !DILocation(line: 1573, column: 9, scope: !11231)
!11233 = !DILocation(line: 1573, column: 16, scope: !11231)
!11234 = !DILocation(line: 1574, column: 4, scope: !11231)
!11235 = !DILocation(line: 1580, column: 8, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11231, file: !3, line: 1580, column: 8)
!11237 = !DILocation(line: 1580, column: 14, scope: !11236)
!11238 = !DILocation(line: 1580, column: 20, scope: !11236)
!11239 = !DILocation(line: 1580, column: 24, scope: !11236)
!11240 = !DILocation(line: 1580, column: 49, scope: !11236)
!11241 = !DILocation(line: 1581, column: 5, scope: !11236)
!11242 = !DILocation(line: 1581, column: 11, scope: !11236)
!11243 = !DILocation(line: 1581, column: 17, scope: !11236)
!11244 = !DILocation(line: 1581, column: 21, scope: !11236)
!11245 = !DILocation(line: 1580, column: 8, scope: !11231)
!11246 = !DILocation(line: 1583, column: 12, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 1581, column: 50)
!11248 = !DILocation(line: 1583, column: 17, scope: !11247)
!11249 = !DILocation(line: 1583, column: 31, scope: !11247)
!11250 = !DILocation(line: 1583, column: 38, scope: !11247)
!11251 = !DILocation(line: 1583, column: 5, scope: !11247)
!11252 = !DILocation(line: 1586, column: 5, scope: !11247)
!11253 = !DILocation(line: 1586, column: 10, scope: !11247)
!11254 = !DILocation(line: 1586, column: 17, scope: !11247)
!11255 = !DILocation(line: 1589, column: 4, scope: !11247)
!11256 = !DILocation(line: 1591, column: 9, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11258, file: !3, line: 1591, column: 9)
!11258 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 1590, column: 9)
!11259 = !DILocation(line: 1591, column: 15, scope: !11257)
!11260 = !DILocation(line: 1591, column: 21, scope: !11257)
!11261 = !DILocation(line: 1591, column: 25, scope: !11257)
!11262 = !DILocation(line: 1591, column: 9, scope: !11258)
!11263 = !DILocation(line: 1593, column: 13, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11257, file: !3, line: 1591, column: 51)
!11265 = !DILocation(line: 1593, column: 18, scope: !11264)
!11266 = !DILocation(line: 1594, column: 7, scope: !11264)
!11267 = !DILocation(line: 1594, column: 15, scope: !11264)
!11268 = !DILocation(line: 1593, column: 6, scope: !11264)
!11269 = !DILocation(line: 1596, column: 6, scope: !11264)
!11270 = !DILocation(line: 1596, column: 11, scope: !11264)
!11271 = !DILocation(line: 1596, column: 18, scope: !11264)
!11272 = !DILocation(line: 1599, column: 5, scope: !11264)
!11273 = !DILocation(line: 1600, column: 6, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11257, file: !3, line: 1599, column: 12)
!11275 = !DILocation(line: 1600, column: 11, scope: !11274)
!11276 = !DILocation(line: 1600, column: 27, scope: !11274)
!11277 = !DILocation(line: 1601, column: 6, scope: !11274)
!11278 = !DILocation(line: 1601, column: 11, scope: !11274)
!11279 = !DILocation(line: 1601, column: 27, scope: !11274)
!11280 = !DILocation(line: 1602, column: 6, scope: !11274)
!11281 = !DILocation(line: 1602, column: 11, scope: !11274)
!11282 = !DILocation(line: 1602, column: 18, scope: !11274)
!11283 = !DILocation(line: 1605, column: 4, scope: !11231)
!11284 = !DILocation(line: 1609, column: 42, scope: !11231)
!11285 = !DILocation(line: 1609, column: 40, scope: !11231)
!11286 = !DILocation(line: 1609, column: 4, scope: !11231)
!11287 = !DILocation(line: 1609, column: 9, scope: !11231)
!11288 = !DILocation(line: 1609, column: 16, scope: !11231)
!11289 = !DILocation(line: 1610, column: 4, scope: !11231)
!11290 = !DILocation(line: 1618, column: 8, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11231, file: !3, line: 1618, column: 8)
!11292 = !DILocation(line: 1618, column: 13, scope: !11291)
!11293 = !DILocation(line: 1618, column: 21, scope: !11291)
!11294 = !DILocation(line: 1618, column: 8, scope: !11231)
!11295 = !DILocation(line: 1619, column: 5, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11291, file: !3, line: 1618, column: 42)
!11297 = !DILocation(line: 1619, column: 10, scope: !11296)
!11298 = !DILocation(line: 1619, column: 17, scope: !11296)
!11299 = !DILocation(line: 1621, column: 4, scope: !11296)
!11300 = !DILocation(line: 1627, column: 8, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11291, file: !3, line: 1627, column: 8)
!11302 = !DILocation(line: 1627, column: 15, scope: !11301)
!11303 = !DILocation(line: 1627, column: 20, scope: !11301)
!11304 = !DILocation(line: 1628, column: 6, scope: !11301)
!11305 = !DILocation(line: 1628, column: 11, scope: !11301)
!11306 = !DILocation(line: 1628, column: 19, scope: !11301)
!11307 = !DILocation(line: 1628, column: 30, scope: !11301)
!11308 = !DILocation(line: 1629, column: 7, scope: !11301)
!11309 = !DILocation(line: 1629, column: 12, scope: !11301)
!11310 = !DILocation(line: 1629, column: 20, scope: !11301)
!11311 = !DILocation(line: 1627, column: 8, scope: !11291)
!11312 = !DILocation(line: 1631, column: 5, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 1629, column: 34)
!11314 = !DILocation(line: 1631, column: 10, scope: !11313)
!11315 = !DILocation(line: 1631, column: 17, scope: !11313)
!11316 = !DILocation(line: 1633, column: 4, scope: !11313)
!11317 = !DILocation(line: 1636, column: 43, scope: !11301)
!11318 = !DILocation(line: 1636, column: 42, scope: !11301)
!11319 = !DILocation(line: 1636, column: 5, scope: !11301)
!11320 = !DILocation(line: 1636, column: 10, scope: !11301)
!11321 = !DILocation(line: 1636, column: 17, scope: !11301)
!11322 = !DILocation(line: 1637, column: 3, scope: !11231)
!11323 = !DILocation(line: 1639, column: 17, scope: !11091)
!11324 = !DILocation(line: 1639, column: 26, scope: !11091)
!11325 = !DILocation(line: 1639, column: 3, scope: !11091)
!11326 = !DILocation(line: 1642, column: 17, scope: !11091)
!11327 = !DILocation(line: 1642, column: 34, scope: !11091)
!11328 = !DILocation(line: 1642, column: 43, scope: !11091)
!11329 = !DILocation(line: 1642, column: 3, scope: !11091)
!11330 = !DILocation(line: 1643, column: 2, scope: !11091)
!11331 = !DILocation(line: 1433, column: 28, scope: !11086)
!11332 = !DILocation(line: 1433, column: 2, scope: !11086)
!11333 = distinct !{!11333, !11089, !11334}
!11334 = !DILocation(line: 1643, column: 2, scope: !11083)
!11335 = !DILocation(line: 1644, column: 1, scope: !11051)
!11336 = distinct !DISubprogram(name: "sg_virt", scope: !5337, file: !5337, line: 256, type: !11337, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11337 = !DISubroutineType(types: !11338)
!11338 = !{!197, !5340}
!11339 = !DILocation(line: 1514, column: 69, scope: !9910, inlinedAt: !11340)
!11340 = distinct !DILocation(line: 258, column: 9, scope: !11336)
!11341 = !DILocalVariable(name: "sg", arg: 1, scope: !11336, file: !5337, line: 256, type: !5340)
!11342 = !DILocation(line: 256, column: 49, scope: !11336)
!11343 = !DILocation(line: 258, column: 9, scope: !11336)
!11344 = !DILocation(line: 1516, column: 9, scope: !9910, inlinedAt: !11340)
!11345 = !DILocation(line: 258, column: 37, scope: !11336)
!11346 = !DILocation(line: 258, column: 41, scope: !11336)
!11347 = !DILocation(line: 258, column: 35, scope: !11336)
!11348 = !DILocation(line: 258, column: 2, scope: !11336)
!11349 = distinct !DISubprogram(name: "inb_p", scope: !10627, file: !10627, line: 334, type: !11350, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11350 = !DISubroutineType(types: !11351)
!11351 = !{!215, !188}
!11352 = !DILocalVariable(name: "port", arg: 1, scope: !11349, file: !10627, line: 334, type: !188)
!11353 = !DILocation(line: 334, column: 1, scope: !11349)
!11354 = !DILocalVariable(name: "value", scope: !11349, file: !10627, line: 334, type: !215)
!11355 = distinct !DISubprogram(name: "inb", scope: !10627, file: !10627, line: 334, type: !11350, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11356 = !DILocalVariable(name: "port", arg: 1, scope: !11355, file: !10627, line: 334, type: !188)
!11357 = !DILocation(line: 334, column: 1, scope: !11355)
!11358 = !DILocalVariable(name: "value", scope: !11355, file: !10627, line: 334, type: !215)
!11359 = !{i32 -2141815781}
!11360 = distinct !DISubprogram(name: "issue_scb_block", scope: !3, file: !3, line: 1179, type: !11361, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11361 = !DISubroutineType(types: !11362)
!11362 = !{!188, !182, !11363}
!11363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11364, size: 64)
!11364 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_char", file: !241, line: 79, baseType: !215)
!11365 = !DILocalVariable(name: "adapter", arg: 1, scope: !11360, file: !3, line: 1179, type: !182)
!11366 = !DILocation(line: 1179, column: 28, scope: !11360)
!11367 = !DILocalVariable(name: "raw_mbox", arg: 2, scope: !11360, file: !3, line: 1179, type: !11363)
!11368 = !DILocation(line: 1179, column: 45, scope: !11360)
!11369 = !DILocalVariable(name: "mbox64", scope: !11360, file: !3, line: 1181, type: !246)
!11370 = !DILocation(line: 1181, column: 21, scope: !11360)
!11371 = !DILocation(line: 1181, column: 30, scope: !11360)
!11372 = !DILocation(line: 1181, column: 39, scope: !11360)
!11373 = !DILocalVariable(name: "mbox", scope: !11360, file: !3, line: 1182, type: !249)
!11374 = !DILocation(line: 1182, column: 19, scope: !11360)
!11375 = !DILocation(line: 1182, column: 26, scope: !11360)
!11376 = !DILocation(line: 1182, column: 35, scope: !11360)
!11377 = !DILocalVariable(name: "byte", scope: !11360, file: !3, line: 1183, type: !213)
!11378 = !DILocation(line: 1183, column: 5, scope: !11360)
!11379 = !DILocation(line: 1186, column: 25, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11360, file: !3, line: 1186, column: 5)
!11381 = !DILocation(line: 1186, column: 5, scope: !11380)
!11382 = !DILocation(line: 1186, column: 5, scope: !11360)
!11383 = !DILocation(line: 1187, column: 3, scope: !11380)
!11384 = !DILocation(line: 1190, column: 18, scope: !11360)
!11385 = !DILocation(line: 1190, column: 2, scope: !11360)
!11386 = !DILocation(line: 1190, column: 24, scope: !11360)
!11387 = !DILocation(line: 1191, column: 2, scope: !11360)
!11388 = !DILocation(line: 1191, column: 8, scope: !11360)
!11389 = !DILocation(line: 1191, column: 14, scope: !11360)
!11390 = !DILocation(line: 1191, column: 20, scope: !11360)
!11391 = !DILocation(line: 1192, column: 2, scope: !11360)
!11392 = !DILocation(line: 1192, column: 8, scope: !11360)
!11393 = !DILocation(line: 1192, column: 13, scope: !11360)
!11394 = !DILocation(line: 1192, column: 18, scope: !11360)
!11395 = !DILocation(line: 1194, column: 10, scope: !11360)
!11396 = !DILocation(line: 1194, column: 2, scope: !11360)
!11397 = !DILocation(line: 1199, column: 29, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11360, file: !3, line: 1194, column: 23)
!11399 = !DILocation(line: 1199, column: 35, scope: !11398)
!11400 = !DILocation(line: 1199, column: 41, scope: !11398)
!11401 = !DILocation(line: 1199, column: 3, scope: !11398)
!11402 = !DILocation(line: 1199, column: 11, scope: !11398)
!11403 = !DILocation(line: 1199, column: 27, scope: !11398)
!11404 = !DILocation(line: 1200, column: 3, scope: !11398)
!11405 = !DILocation(line: 1200, column: 11, scope: !11398)
!11406 = !DILocation(line: 1200, column: 27, scope: !11398)
!11407 = !DILocation(line: 1201, column: 3, scope: !11398)
!11408 = !DILocation(line: 1201, column: 9, scope: !11398)
!11409 = !DILocation(line: 1201, column: 15, scope: !11398)
!11410 = !DILocation(line: 1201, column: 24, scope: !11398)
!11411 = !DILocation(line: 1202, column: 3, scope: !11398)
!11412 = !DILocation(line: 1204, column: 3, scope: !11398)
!11413 = !DILocation(line: 1204, column: 11, scope: !11398)
!11414 = !DILocation(line: 1204, column: 27, scope: !11398)
!11415 = !DILocation(line: 1205, column: 3, scope: !11398)
!11416 = !DILocation(line: 1205, column: 11, scope: !11398)
!11417 = !DILocation(line: 1205, column: 27, scope: !11398)
!11418 = !DILocation(line: 1206, column: 2, scope: !11398)
!11419 = !DILocation(line: 1208, column: 6, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11360, file: !3, line: 1208, column: 6)
!11421 = !DILocation(line: 1208, column: 6, scope: !11360)
!11422 = !DILocation(line: 1209, column: 3, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11420, file: !3, line: 1208, column: 45)
!11424 = !DILocation(line: 1209, column: 9, scope: !11423)
!11425 = !DILocation(line: 1209, column: 14, scope: !11423)
!11426 = !DILocation(line: 1209, column: 19, scope: !11423)
!11427 = !DILocation(line: 1210, column: 3, scope: !11423)
!11428 = !DILocation(line: 1210, column: 9, scope: !11423)
!11429 = !DILocation(line: 1210, column: 14, scope: !11423)
!11430 = !DILocation(line: 1210, column: 18, scope: !11423)
!11431 = !DILocation(line: 1211, column: 3, scope: !11423)
!11432 = !DILocation(line: 1211, column: 9, scope: !11423)
!11433 = !DILocation(line: 1211, column: 14, scope: !11423)
!11434 = !DILocation(line: 1211, column: 24, scope: !11423)
!11435 = !DILocation(line: 1212, column: 3, scope: !11423)
!11436 = !DILocation(line: 1212, column: 9, scope: !11423)
!11437 = !DILocation(line: 1212, column: 14, scope: !11423)
!11438 = !DILocation(line: 1212, column: 21, scope: !11423)
!11439 = !DILocation(line: 1213, column: 3, scope: !11423)
!11440 = !DILocation(line: 1215, column: 3, scope: !11423)
!11441 = !DILocation(line: 1215, column: 22, scope: !11423)
!11442 = !DILocation(line: 1215, column: 28, scope: !11423)
!11443 = !DILocation(line: 1215, column: 33, scope: !11423)
!11444 = !DILocation(line: 1215, column: 9, scope: !11423)
!11445 = !DILocation(line: 1215, column: 43, scope: !11423)
!11446 = !DILocation(line: 13, column: 2, scope: !7522, inlinedAt: !11447)
!11447 = distinct !DILocation(line: 18, column: 2, scope: !7525, inlinedAt: !11448)
!11448 = distinct !DILocation(line: 1216, column: 4, scope: !11423)
!11449 = distinct !{!11449, !11440, !11450}
!11450 = !DILocation(line: 1216, column: 14, scope: !11423)
!11451 = !DILocation(line: 1218, column: 3, scope: !11423)
!11452 = !DILocation(line: 1218, column: 9, scope: !11423)
!11453 = !DILocation(line: 1218, column: 14, scope: !11423)
!11454 = !DILocation(line: 1218, column: 24, scope: !11423)
!11455 = !DILocation(line: 1220, column: 3, scope: !11423)
!11456 = !DILocation(line: 1220, column: 23, scope: !11423)
!11457 = !DILocation(line: 1220, column: 29, scope: !11423)
!11458 = !DILocation(line: 1220, column: 34, scope: !11423)
!11459 = !DILocation(line: 1220, column: 10, scope: !11423)
!11460 = !DILocation(line: 1220, column: 39, scope: !11423)
!11461 = !DILocation(line: 13, column: 2, scope: !7522, inlinedAt: !11462)
!11462 = distinct !DILocation(line: 18, column: 2, scope: !7525, inlinedAt: !11463)
!11463 = distinct !DILocation(line: 1221, column: 4, scope: !11423)
!11464 = distinct !{!11464, !11455, !11465}
!11465 = !DILocation(line: 1221, column: 14, scope: !11423)
!11466 = !DILocation(line: 1223, column: 3, scope: !11423)
!11467 = !DILocation(line: 1223, column: 9, scope: !11423)
!11468 = !DILocation(line: 1223, column: 14, scope: !11423)
!11469 = !DILocation(line: 1223, column: 19, scope: !11423)
!11470 = !DILocation(line: 1224, column: 3, scope: !11423)
!11471 = !DILocation(line: 1224, column: 9, scope: !11423)
!11472 = !DILocation(line: 1224, column: 14, scope: !11423)
!11473 = !DILocation(line: 1224, column: 18, scope: !11423)
!11474 = !DILocation(line: 1226, column: 3, scope: !11423)
!11475 = !DILocation(line: 1228, column: 3, scope: !11423)
!11476 = !DILocation(line: 1228, column: 9, scope: !11423)
!11477 = !DILocation(line: 1228, column: 27, scope: !11423)
!11478 = !DILocation(line: 13, column: 2, scope: !7522, inlinedAt: !11479)
!11479 = distinct !DILocation(line: 18, column: 2, scope: !7525, inlinedAt: !11480)
!11480 = distinct !DILocation(line: 1229, column: 4, scope: !11423)
!11481 = distinct !{!11481, !11475, !11482}
!11482 = !DILocation(line: 1229, column: 14, scope: !11423)
!11483 = !DILocation(line: 1230, column: 2, scope: !11423)
!11484 = !DILocation(line: 1232, column: 3, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11420, file: !3, line: 1231, column: 7)
!11486 = !DILocation(line: 1233, column: 3, scope: !11485)
!11487 = !DILocation(line: 1235, column: 3, scope: !11485)
!11488 = !DILocation(line: 1235, column: 20, scope: !11485)
!11489 = !DILocation(line: 1235, column: 18, scope: !11485)
!11490 = !DILocation(line: 1235, column: 12, scope: !11485)
!11491 = !DILocation(line: 1235, column: 40, scope: !11485)
!11492 = !DILocation(line: 1235, column: 10, scope: !11485)
!11493 = !DILocation(line: 13, column: 2, scope: !7522, inlinedAt: !11494)
!11494 = distinct !DILocation(line: 18, column: 2, scope: !7525, inlinedAt: !11495)
!11495 = distinct !DILocation(line: 1236, column: 4, scope: !11485)
!11496 = distinct !{!11496, !11487, !11497}
!11497 = !DILocation(line: 1236, column: 14, scope: !11485)
!11498 = !DILocation(line: 1238, column: 3, scope: !11485)
!11499 = !DILocation(line: 1239, column: 3, scope: !11485)
!11500 = !DILocation(line: 1240, column: 3, scope: !11485)
!11501 = !DILocation(line: 1243, column: 9, scope: !11360)
!11502 = !DILocation(line: 1243, column: 15, scope: !11360)
!11503 = !DILocation(line: 1243, column: 20, scope: !11360)
!11504 = !DILocation(line: 1243, column: 2, scope: !11360)
!11505 = !DILabel(scope: !11360, name: "bug_blocked_mailbox", file: !3, line: 1245)
!11506 = !DILocation(line: 1245, column: 1, scope: !11360)
!11507 = !DILocation(line: 1246, column: 2, scope: !11360)
!11508 = !DILocation(line: 1247, column: 2, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11510, file: !3, line: 1247, column: 2)
!11510 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 1247, column: 2)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 1247, column: 2)
!11512 = distinct !DILexicalBlock(scope: !11360, file: !3, line: 1247, column: 2)
!11513 = !DILocation(line: 1248, column: 2, scope: !11360)
!11514 = !DILocation(line: 1249, column: 1, scope: !11360)
!11515 = distinct !DISubprogram(name: "mega_8_to_40ld", scope: !3, file: !3, line: 1777, type: !11516, scopeLine: 1779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11516 = !DISubroutineType(types: !11517)
!11517 = !{null, !7951, !5704, !5779}
!11518 = !DILocalVariable(name: "inquiry", arg: 1, scope: !11515, file: !3, line: 1777, type: !7951)
!11519 = !DILocation(line: 1777, column: 31, scope: !11515)
!11520 = !DILocalVariable(name: "enquiry3", arg: 2, scope: !11515, file: !3, line: 1777, type: !5704)
!11521 = !DILocation(line: 1777, column: 55, scope: !11515)
!11522 = !DILocalVariable(name: "product_info", arg: 3, scope: !11515, file: !3, line: 1778, type: !5779)
!11523 = !DILocation(line: 1778, column: 22, scope: !11515)
!11524 = !DILocalVariable(name: "i", scope: !11515, file: !3, line: 1780, type: !188)
!11525 = !DILocation(line: 1780, column: 6, scope: !11515)
!11526 = !DILocation(line: 1782, column: 31, scope: !11515)
!11527 = !DILocation(line: 1782, column: 40, scope: !11515)
!11528 = !DILocation(line: 1782, column: 53, scope: !11515)
!11529 = !DILocation(line: 1782, column: 2, scope: !11515)
!11530 = !DILocation(line: 1782, column: 16, scope: !11515)
!11531 = !DILocation(line: 1782, column: 29, scope: !11515)
!11532 = !DILocation(line: 1783, column: 27, scope: !11515)
!11533 = !DILocation(line: 1783, column: 36, scope: !11515)
!11534 = !DILocation(line: 1783, column: 49, scope: !11515)
!11535 = !DILocation(line: 1783, column: 2, scope: !11515)
!11536 = !DILocation(line: 1783, column: 12, scope: !11515)
!11537 = !DILocation(line: 1783, column: 25, scope: !11515)
!11538 = !DILocation(line: 1784, column: 28, scope: !11515)
!11539 = !DILocation(line: 1784, column: 37, scope: !11515)
!11540 = !DILocation(line: 1784, column: 50, scope: !11515)
!11541 = !DILocation(line: 1784, column: 2, scope: !11515)
!11542 = !DILocation(line: 1784, column: 16, scope: !11515)
!11543 = !DILocation(line: 1784, column: 26, scope: !11515)
!11544 = !DILocation(line: 1786, column: 9, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11515, file: !3, line: 1786, column: 2)
!11546 = !DILocation(line: 1786, column: 7, scope: !11545)
!11547 = !DILocation(line: 1786, column: 14, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 1786, column: 2)
!11549 = !DILocation(line: 1786, column: 16, scope: !11548)
!11550 = !DILocation(line: 1786, column: 2, scope: !11545)
!11551 = !DILocation(line: 1788, column: 4, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11548, file: !3, line: 1786, column: 26)
!11553 = !DILocation(line: 1788, column: 13, scope: !11552)
!11554 = !DILocation(line: 1788, column: 26, scope: !11552)
!11555 = !DILocation(line: 1788, column: 37, scope: !11552)
!11556 = !DILocation(line: 1787, column: 3, scope: !11552)
!11557 = !DILocation(line: 1787, column: 17, scope: !11552)
!11558 = !DILocation(line: 1787, column: 28, scope: !11552)
!11559 = !DILocation(line: 1787, column: 31, scope: !11552)
!11560 = !DILocation(line: 1791, column: 4, scope: !11552)
!11561 = !DILocation(line: 1791, column: 13, scope: !11552)
!11562 = !DILocation(line: 1791, column: 26, scope: !11552)
!11563 = !DILocation(line: 1791, column: 39, scope: !11552)
!11564 = !DILocation(line: 1790, column: 3, scope: !11552)
!11565 = !DILocation(line: 1790, column: 17, scope: !11552)
!11566 = !DILocation(line: 1790, column: 30, scope: !11552)
!11567 = !DILocation(line: 1790, column: 33, scope: !11552)
!11568 = !DILocation(line: 1792, column: 2, scope: !11552)
!11569 = !DILocation(line: 1786, column: 22, scope: !11548)
!11570 = !DILocation(line: 1786, column: 2, scope: !11548)
!11571 = distinct !{!11571, !11550, !11572}
!11572 = !DILocation(line: 1792, column: 2, scope: !11545)
!11573 = !DILocation(line: 1794, column: 3, scope: !11515)
!11574 = !DILocation(line: 1794, column: 12, scope: !11515)
!11575 = !DILocation(line: 1794, column: 25, scope: !11515)
!11576 = !DILocation(line: 1793, column: 2, scope: !11515)
!11577 = !DILocation(line: 1793, column: 12, scope: !11515)
!11578 = !DILocation(line: 1793, column: 33, scope: !11515)
!11579 = !DILocation(line: 1796, column: 28, scope: !11515)
!11580 = !DILocation(line: 1796, column: 37, scope: !11515)
!11581 = !DILocation(line: 1796, column: 50, scope: !11515)
!11582 = !DILocation(line: 1796, column: 2, scope: !11515)
!11583 = !DILocation(line: 1796, column: 16, scope: !11515)
!11584 = !DILocation(line: 1796, column: 26, scope: !11515)
!11585 = !DILocation(line: 1798, column: 23, scope: !11515)
!11586 = !DILocation(line: 1798, column: 32, scope: !11515)
!11587 = !DILocation(line: 1798, column: 44, scope: !11515)
!11588 = !DILocation(line: 1798, column: 2, scope: !11515)
!11589 = !DILocation(line: 1798, column: 12, scope: !11515)
!11590 = !DILocation(line: 1798, column: 21, scope: !11515)
!11591 = !DILocation(line: 1800, column: 9, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11515, file: !3, line: 1800, column: 2)
!11593 = !DILocation(line: 1800, column: 7, scope: !11592)
!11594 = !DILocation(line: 1800, column: 14, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11592, file: !3, line: 1800, column: 2)
!11596 = !DILocation(line: 1800, column: 16, scope: !11595)
!11597 = !DILocation(line: 1800, column: 2, scope: !11592)
!11598 = !DILocation(line: 1801, column: 28, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11595, file: !3, line: 1800, column: 47)
!11600 = !DILocation(line: 1801, column: 37, scope: !11599)
!11601 = !DILocation(line: 1801, column: 49, scope: !11599)
!11602 = !DILocation(line: 1801, column: 59, scope: !11599)
!11603 = !DILocation(line: 1801, column: 3, scope: !11599)
!11604 = !DILocation(line: 1801, column: 13, scope: !11599)
!11605 = !DILocation(line: 1801, column: 23, scope: !11599)
!11606 = !DILocation(line: 1801, column: 26, scope: !11599)
!11607 = !DILocation(line: 1802, column: 28, scope: !11599)
!11608 = !DILocation(line: 1802, column: 37, scope: !11599)
!11609 = !DILocation(line: 1802, column: 49, scope: !11599)
!11610 = !DILocation(line: 1802, column: 59, scope: !11599)
!11611 = !DILocation(line: 1802, column: 3, scope: !11599)
!11612 = !DILocation(line: 1802, column: 13, scope: !11599)
!11613 = !DILocation(line: 1802, column: 23, scope: !11599)
!11614 = !DILocation(line: 1802, column: 26, scope: !11599)
!11615 = !DILocation(line: 1803, column: 29, scope: !11599)
!11616 = !DILocation(line: 1803, column: 38, scope: !11599)
!11617 = !DILocation(line: 1803, column: 50, scope: !11599)
!11618 = !DILocation(line: 1803, column: 61, scope: !11599)
!11619 = !DILocation(line: 1803, column: 3, scope: !11599)
!11620 = !DILocation(line: 1803, column: 13, scope: !11599)
!11621 = !DILocation(line: 1803, column: 24, scope: !11599)
!11622 = !DILocation(line: 1803, column: 27, scope: !11599)
!11623 = !DILocation(line: 1804, column: 2, scope: !11599)
!11624 = !DILocation(line: 1800, column: 43, scope: !11595)
!11625 = !DILocation(line: 1800, column: 2, scope: !11595)
!11626 = distinct !{!11626, !11597, !11627}
!11627 = !DILocation(line: 1804, column: 2, scope: !11592)
!11628 = !DILocation(line: 1806, column: 9, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11515, file: !3, line: 1806, column: 2)
!11630 = !DILocation(line: 1806, column: 7, scope: !11629)
!11631 = !DILocation(line: 1806, column: 14, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11629, file: !3, line: 1806, column: 2)
!11633 = !DILocation(line: 1806, column: 16, scope: !11632)
!11634 = !DILocation(line: 1806, column: 2, scope: !11629)
!11635 = !DILocation(line: 1807, column: 29, scope: !11632)
!11636 = !DILocation(line: 1807, column: 38, scope: !11632)
!11637 = !DILocation(line: 1807, column: 48, scope: !11632)
!11638 = !DILocation(line: 1807, column: 59, scope: !11632)
!11639 = !DILocation(line: 1807, column: 3, scope: !11632)
!11640 = !DILocation(line: 1807, column: 13, scope: !11632)
!11641 = !DILocation(line: 1807, column: 24, scope: !11632)
!11642 = !DILocation(line: 1807, column: 27, scope: !11632)
!11643 = !DILocation(line: 1806, column: 42, scope: !11632)
!11644 = !DILocation(line: 1806, column: 2, scope: !11632)
!11645 = distinct !{!11645, !11634, !11646}
!11646 = !DILocation(line: 1807, column: 60, scope: !11629)
!11647 = !DILocation(line: 1808, column: 1, scope: !11515)
!11648 = !DILocalVariable(name: "dev", arg: 1, scope: !6125, file: !6126, line: 271, type: !341)
!11649 = !DILocation(line: 271, column: 62, scope: !6125)
!11650 = !DILocalVariable(name: "ptr", arg: 2, scope: !6125, file: !6126, line: 271, type: !197)
!11651 = !DILocation(line: 271, column: 73, scope: !6125)
!11652 = !DILocalVariable(name: "size", arg: 3, scope: !6125, file: !6126, line: 272, type: !445)
!11653 = !DILocation(line: 272, column: 10, scope: !6125)
!11654 = !DILocalVariable(name: "dir", arg: 4, scope: !6125, file: !6126, line: 272, type: !146)
!11655 = !DILocation(line: 272, column: 40, scope: !6125)
!11656 = !DILocalVariable(name: "attrs", arg: 5, scope: !6125, file: !6126, line: 272, type: !195)
!11657 = !DILocation(line: 272, column: 59, scope: !6125)
!11658 = !DILocalVariable(name: "__ret_warn_once", scope: !11659, file: !6126, line: 275, type: !188)
!11659 = distinct !DILexicalBlock(scope: !11660, file: !6126, line: 275, column: 6)
!11660 = distinct !DILexicalBlock(scope: !6125, file: !6126, line: 275, column: 6)
!11661 = !DILocation(line: 275, column: 6, scope: !11659)
!11662 = !DILocation(line: 275, column: 6, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11659, file: !6126, line: 275, column: 6)
!11664 = !DILocation(line: 0, scope: !11663)
!11665 = !DILocation(line: 275, column: 6, scope: !11666)
!11666 = distinct !DILexicalBlock(scope: !11663, file: !6126, line: 275, column: 6)
!11667 = !DILocalVariable(name: "__ret_warn_on", scope: !11668, file: !6126, line: 275, type: !188)
!11668 = distinct !DILexicalBlock(scope: !11666, file: !6126, line: 275, column: 6)
!11669 = !DILocation(line: 275, column: 6, scope: !11668)
!11670 = !DILocation(line: 275, column: 6, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11668, file: !6126, line: 275, column: 6)
!11672 = !DILocation(line: 275, column: 6, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11671, file: !6126, line: 275, column: 6)
!11674 = !DILocation(line: 275, column: 6, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11673, file: !6126, line: 275, column: 6)
!11676 = !DILocation(line: 275, column: 6, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11673, file: !6126, line: 275, column: 6)
!11678 = !DILocation(line: 275, column: 6, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11677, file: !6126, line: 275, column: 6)
!11680 = !DILocation(line: 275, column: 6, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11677, file: !6126, line: 275, column: 6)
!11682 = !{i32 -2141138473, i32 -2141138444, i32 -2141138398, i32 -2141138340, i32 -2141138286, i32 -2141138232, i32 -2141138177, i32 -2141138146}
!11683 = !DILocation(line: 275, column: 6, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11677, file: !6126, line: 275, column: 6)
!11685 = !{i32 -2141137726, i32 -2141137719, i32 -2141137667, i32 -2141137636, i32 -2141137606}
!11686 = !DILocation(line: 275, column: 6, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11677, file: !6126, line: 275, column: 6)
!11688 = !DILocation(line: 275, column: 6, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11673, file: !6126, line: 275, column: 6)
!11690 = !DILocation(line: 275, column: 6, scope: !11660)
!11691 = !DILocation(line: 275, column: 6, scope: !6125)
!11692 = !DILocation(line: 277, column: 3, scope: !11660)
!11693 = !DILocation(line: 278, column: 23, scope: !6125)
!11694 = !DILocation(line: 278, column: 28, scope: !6125)
!11695 = !DILocation(line: 278, column: 33, scope: !6125)
!11696 = !DILocation(line: 278, column: 2, scope: !6125)
!11697 = !DILocation(line: 279, column: 28, scope: !6125)
!11698 = !DILocation(line: 279, column: 33, scope: !6125)
!11699 = !DILocation(line: 279, column: 52, scope: !6125)
!11700 = !DILocation(line: 280, column: 4, scope: !6125)
!11701 = !DILocation(line: 280, column: 10, scope: !6125)
!11702 = !DILocation(line: 280, column: 15, scope: !6125)
!11703 = !DILocation(line: 279, column: 9, scope: !6125)
!11704 = !DILocation(line: 279, column: 2, scope: !6125)
!11705 = !DILocation(line: 281, column: 1, scope: !6125)
!11706 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !6126, file: !6126, line: 283, type: !11707, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11707 = !DISubroutineType(types: !11708)
!11708 = !{null, !341, !240, !445, !146, !195}
!11709 = !DILocalVariable(name: "dev", arg: 1, scope: !11706, file: !6126, line: 283, type: !341)
!11710 = !DILocation(line: 283, column: 58, scope: !11706)
!11711 = !DILocalVariable(name: "addr", arg: 2, scope: !11706, file: !6126, line: 283, type: !240)
!11712 = !DILocation(line: 283, column: 74, scope: !11706)
!11713 = !DILocalVariable(name: "size", arg: 3, scope: !11706, file: !6126, line: 284, type: !445)
!11714 = !DILocation(line: 284, column: 10, scope: !11706)
!11715 = !DILocalVariable(name: "dir", arg: 4, scope: !11706, file: !6126, line: 284, type: !146)
!11716 = !DILocation(line: 284, column: 40, scope: !11706)
!11717 = !DILocalVariable(name: "attrs", arg: 5, scope: !11706, file: !6126, line: 284, type: !195)
!11718 = !DILocation(line: 284, column: 59, scope: !11706)
!11719 = !DILocation(line: 286, column: 30, scope: !11706)
!11720 = !DILocation(line: 286, column: 35, scope: !11706)
!11721 = !DILocation(line: 286, column: 41, scope: !11706)
!11722 = !DILocation(line: 286, column: 47, scope: !11706)
!11723 = !DILocation(line: 286, column: 52, scope: !11706)
!11724 = !DILocation(line: 286, column: 9, scope: !11706)
!11725 = !DILocation(line: 286, column: 2, scope: !11706)
!11726 = distinct !DISubprogram(name: "mega_get_max_sgl", scope: !3, file: !3, line: 3876, type: !8176, scopeLine: 3877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11727 = !DILocalVariable(name: "adapter", arg: 1, scope: !11726, file: !3, line: 3876, type: !182)
!11728 = !DILocation(line: 3876, column: 29, scope: !11726)
!11729 = !DILocalVariable(name: "raw_mbox", scope: !11726, file: !3, line: 3878, type: !8144)
!11730 = !DILocation(line: 3878, column: 16, scope: !11726)
!11731 = !DILocalVariable(name: "mbox", scope: !11726, file: !3, line: 3879, type: !5692)
!11732 = !DILocation(line: 3879, column: 10, scope: !11726)
!11733 = !DILocation(line: 3881, column: 19, scope: !11726)
!11734 = !DILocation(line: 3881, column: 9, scope: !11726)
!11735 = !DILocation(line: 3881, column: 7, scope: !11726)
!11736 = !DILocation(line: 3883, column: 9, scope: !11726)
!11737 = !DILocation(line: 3883, column: 2, scope: !11726)
!11738 = !DILocation(line: 3885, column: 17, scope: !11726)
!11739 = !DILocation(line: 3885, column: 26, scope: !11726)
!11740 = !DILocation(line: 3885, column: 2, scope: !11726)
!11741 = !DILocation(line: 3887, column: 30, scope: !11726)
!11742 = !DILocation(line: 3887, column: 39, scope: !11726)
!11743 = !DILocation(line: 3887, column: 25, scope: !11726)
!11744 = !DILocation(line: 3887, column: 2, scope: !11726)
!11745 = !DILocation(line: 3887, column: 8, scope: !11726)
!11746 = !DILocation(line: 3887, column: 14, scope: !11726)
!11747 = !DILocation(line: 3887, column: 23, scope: !11726)
!11748 = !DILocation(line: 3889, column: 2, scope: !11726)
!11749 = !DILocation(line: 3889, column: 14, scope: !11726)
!11750 = !DILocation(line: 3890, column: 2, scope: !11726)
!11751 = !DILocation(line: 3890, column: 14, scope: !11726)
!11752 = !DILocation(line: 3893, column: 22, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 3893, column: 6)
!11754 = !DILocation(line: 3893, column: 31, scope: !11753)
!11755 = !DILocation(line: 3893, column: 6, scope: !11753)
!11756 = !DILocation(line: 3893, column: 6, scope: !11726)
!11757 = !DILocation(line: 3897, column: 3, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11753, file: !3, line: 3893, column: 43)
!11759 = !DILocation(line: 3897, column: 12, scope: !11758)
!11760 = !DILocation(line: 3897, column: 18, scope: !11758)
!11761 = !DILocation(line: 3898, column: 2, scope: !11758)
!11762 = !DILocation(line: 3900, column: 30, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11753, file: !3, line: 3899, column: 7)
!11764 = !DILocation(line: 3900, column: 39, scope: !11763)
!11765 = !DILocation(line: 3900, column: 20, scope: !11763)
!11766 = !DILocation(line: 3900, column: 3, scope: !11763)
!11767 = !DILocation(line: 3900, column: 12, scope: !11763)
!11768 = !DILocation(line: 3900, column: 18, scope: !11763)
!11769 = !DILocation(line: 3906, column: 8, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11763, file: !3, line: 3906, column: 8)
!11771 = !DILocation(line: 3906, column: 17, scope: !11770)
!11772 = !DILocation(line: 3906, column: 23, scope: !11770)
!11773 = !DILocation(line: 3906, column: 8, scope: !11763)
!11774 = !DILocation(line: 3907, column: 4, scope: !11770)
!11775 = !DILocation(line: 3907, column: 13, scope: !11770)
!11776 = !DILocation(line: 3907, column: 19, scope: !11770)
!11777 = !DILocation(line: 3910, column: 2, scope: !11726)
!11778 = distinct !DISubprogram(name: "mega_support_ext_cdb", scope: !3, file: !3, line: 3761, type: !7785, scopeLine: 3762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11779 = !DILocalVariable(name: "adapter", arg: 1, scope: !11778, file: !3, line: 3761, type: !182)
!11780 = !DILocation(line: 3761, column: 33, scope: !11778)
!11781 = !DILocalVariable(name: "raw_mbox", scope: !11778, file: !3, line: 3763, type: !8144)
!11782 = !DILocation(line: 3763, column: 16, scope: !11778)
!11783 = !DILocalVariable(name: "mbox", scope: !11778, file: !3, line: 3764, type: !5692)
!11784 = !DILocation(line: 3764, column: 10, scope: !11778)
!11785 = !DILocalVariable(name: "rval", scope: !11778, file: !3, line: 3765, type: !188)
!11786 = !DILocation(line: 3765, column: 6, scope: !11778)
!11787 = !DILocation(line: 3767, column: 19, scope: !11778)
!11788 = !DILocation(line: 3767, column: 9, scope: !11778)
!11789 = !DILocation(line: 3767, column: 7, scope: !11778)
!11790 = !DILocation(line: 3769, column: 10, scope: !11778)
!11791 = !DILocation(line: 3769, column: 16, scope: !11778)
!11792 = !DILocation(line: 3769, column: 2, scope: !11778)
!11793 = !DILocation(line: 3773, column: 2, scope: !11778)
!11794 = !DILocation(line: 3773, column: 14, scope: !11778)
!11795 = !DILocation(line: 3774, column: 2, scope: !11778)
!11796 = !DILocation(line: 3774, column: 14, scope: !11778)
!11797 = !DILocation(line: 3776, column: 25, scope: !11778)
!11798 = !DILocation(line: 3776, column: 34, scope: !11778)
!11799 = !DILocation(line: 3776, column: 9, scope: !11778)
!11800 = !DILocation(line: 3776, column: 7, scope: !11778)
!11801 = !DILocation(line: 3778, column: 10, scope: !11778)
!11802 = !DILocation(line: 3778, column: 9, scope: !11778)
!11803 = !DILocation(line: 3778, column: 2, scope: !11778)
!11804 = distinct !DISubprogram(name: "mega_busywait_mbox", scope: !3, file: !3, line: 1164, type: !7785, scopeLine: 1165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11805 = !DILocalVariable(name: "adapter", arg: 1, scope: !11804, file: !3, line: 1164, type: !182)
!11806 = !DILocation(line: 1164, column: 32, scope: !11804)
!11807 = !DILocation(line: 1166, column: 6, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11804, file: !3, line: 1166, column: 6)
!11809 = !DILocation(line: 1166, column: 15, scope: !11808)
!11810 = !DILocation(line: 1166, column: 21, scope: !11808)
!11811 = !DILocation(line: 1166, column: 26, scope: !11808)
!11812 = !DILocation(line: 1166, column: 6, scope: !11804)
!11813 = !DILocation(line: 1167, column: 31, scope: !11808)
!11814 = !DILocation(line: 1167, column: 10, scope: !11808)
!11815 = !DILocation(line: 1167, column: 3, scope: !11808)
!11816 = !DILocation(line: 1168, column: 2, scope: !11804)
!11817 = !DILocation(line: 1169, column: 1, scope: !11804)
!11818 = distinct !DISubprogram(name: "__mega_busywait_mbox", scope: !3, file: !3, line: 1703, type: !7785, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11819 = !DILocalVariable(name: "adapter", arg: 1, scope: !11818, file: !3, line: 1703, type: !182)
!11820 = !DILocation(line: 1703, column: 34, scope: !11818)
!11821 = !DILocalVariable(name: "mbox", scope: !11818, file: !3, line: 1705, type: !249)
!11822 = !DILocation(line: 1705, column: 19, scope: !11818)
!11823 = !DILocation(line: 1705, column: 26, scope: !11818)
!11824 = !DILocation(line: 1705, column: 35, scope: !11818)
!11825 = !DILocalVariable(name: "counter", scope: !11818, file: !3, line: 1706, type: !434)
!11826 = !DILocation(line: 1706, column: 7, scope: !11818)
!11827 = !DILocation(line: 1708, column: 15, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11818, file: !3, line: 1708, column: 2)
!11829 = !DILocation(line: 1708, column: 7, scope: !11828)
!11830 = !DILocation(line: 1708, column: 20, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11828, file: !3, line: 1708, column: 2)
!11832 = !DILocation(line: 1708, column: 28, scope: !11831)
!11833 = !DILocation(line: 1708, column: 2, scope: !11828)
!11834 = !DILocation(line: 1709, column: 8, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11836, file: !3, line: 1709, column: 7)
!11836 = distinct !DILexicalBlock(scope: !11831, file: !3, line: 1708, column: 48)
!11837 = !DILocation(line: 1709, column: 14, scope: !11835)
!11838 = !DILocation(line: 1709, column: 19, scope: !11835)
!11839 = !DILocation(line: 1709, column: 7, scope: !11836)
!11840 = !DILocation(line: 1710, column: 4, scope: !11835)
!11841 = !DILocation(line: 1711, column: 3, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11843, file: !3, line: 1711, column: 3)
!11843 = distinct !DILexicalBlock(scope: !11844, file: !3, line: 1711, column: 3)
!11844 = distinct !DILexicalBlock(scope: !11845, file: !3, line: 1711, column: 3)
!11845 = distinct !DILexicalBlock(scope: !11836, file: !3, line: 1711, column: 3)
!11846 = !DILocation(line: 1712, column: 3, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11836, file: !3, line: 1712, column: 3)
!11848 = !DILocation(line: 1713, column: 2, scope: !11836)
!11849 = !DILocation(line: 1708, column: 44, scope: !11831)
!11850 = !DILocation(line: 1708, column: 2, scope: !11831)
!11851 = distinct !{!11851, !11833, !11852}
!11852 = !DILocation(line: 1713, column: 2, scope: !11828)
!11853 = !DILocation(line: 1714, column: 2, scope: !11818)
!11854 = !DILocation(line: 1715, column: 1, scope: !11818)
!11855 = distinct !DISubprogram(name: "___might_sleep", scope: !11856, file: !11856, line: 248, type: !11857, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11856 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!11857 = !DISubroutineType(types: !11858)
!11858 = !{null, !284, !188, !188}
!11859 = !DILocalVariable(name: "file", arg: 1, scope: !11855, file: !11856, line: 248, type: !284)
!11860 = !DILocation(line: 248, column: 49, scope: !11855)
!11861 = !DILocalVariable(name: "line", arg: 2, scope: !11855, file: !11856, line: 248, type: !188)
!11862 = !DILocation(line: 248, column: 59, scope: !11855)
!11863 = !DILocalVariable(name: "preempt_offset", arg: 3, scope: !11855, file: !11856, line: 249, type: !188)
!11864 = !DILocation(line: 249, column: 12, scope: !11855)
!11865 = !DILocation(line: 249, column: 30, scope: !11855)
!11866 = distinct !DISubprogram(name: "dev_name", scope: !37, file: !37, line: 609, type: !11867, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11867 = !DISubroutineType(types: !11868)
!11868 = !{!284, !4805}
!11869 = !DILocalVariable(name: "dev", arg: 1, scope: !11866, file: !37, line: 609, type: !4805)
!11870 = !DILocation(line: 609, column: 57, scope: !11866)
!11871 = !DILocation(line: 612, column: 6, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11866, file: !37, line: 612, column: 6)
!11873 = !DILocation(line: 612, column: 11, scope: !11872)
!11874 = !DILocation(line: 612, column: 6, scope: !11866)
!11875 = !DILocation(line: 613, column: 10, scope: !11872)
!11876 = !DILocation(line: 613, column: 15, scope: !11872)
!11877 = !DILocation(line: 613, column: 3, scope: !11872)
!11878 = !DILocation(line: 615, column: 23, scope: !11866)
!11879 = !DILocation(line: 615, column: 28, scope: !11866)
!11880 = !DILocation(line: 615, column: 9, scope: !11866)
!11881 = !DILocation(line: 615, column: 2, scope: !11866)
!11882 = !DILocation(line: 616, column: 1, scope: !11866)
!11883 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !6126, file: !6126, line: 87, type: !11884, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11884 = !DISubroutineType(types: !11885)
!11885 = !{null, !341, !3282, !195}
!11886 = !DILocalVariable(name: "dev", arg: 1, scope: !11883, file: !6126, line: 87, type: !341)
!11887 = !DILocation(line: 87, column: 56, scope: !11883)
!11888 = !DILocalVariable(name: "addr", arg: 2, scope: !11883, file: !6126, line: 87, type: !3282)
!11889 = !DILocation(line: 87, column: 73, scope: !11883)
!11890 = !DILocalVariable(name: "len", arg: 3, scope: !11883, file: !6126, line: 88, type: !195)
!11891 = !DILocation(line: 88, column: 17, scope: !11883)
!11892 = !DILocation(line: 90, column: 1, scope: !11883)
!11893 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !11894, file: !11894, line: 18, type: !11895, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11894 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!11895 = !DISubroutineType(types: !11896)
!11896 = !{!195, !195}
!11897 = !DILocalVariable(name: "x", arg: 1, scope: !11893, file: !11894, line: 18, type: !195)
!11898 = !DILocation(line: 18, column: 63, scope: !11893)
!11899 = !DILocalVariable(name: "y", scope: !11893, file: !11894, line: 20, type: !195)
!11900 = !DILocation(line: 20, column: 16, scope: !11893)
!11901 = !DILocation(line: 20, column: 20, scope: !11893)
!11902 = !DILocation(line: 20, column: 22, scope: !11893)
!11903 = !DILocation(line: 23, column: 6, scope: !11893)
!11904 = !DILocation(line: 23, column: 12, scope: !11893)
!11905 = !DILocation(line: 23, column: 16, scope: !11893)
!11906 = !DILocation(line: 23, column: 14, scope: !11893)
!11907 = !DILocation(line: 23, column: 11, scope: !11893)
!11908 = !DILocation(line: 23, column: 21, scope: !11893)
!11909 = !DILocation(line: 23, column: 55, scope: !11893)
!11910 = !DILocation(line: 23, column: 53, scope: !11893)
!11911 = !DILocation(line: 23, column: 8, scope: !11893)
!11912 = !DILocation(line: 23, column: 4, scope: !11893)
!11913 = !DILocation(line: 25, column: 9, scope: !11893)
!11914 = !DILocation(line: 25, column: 2, scope: !11893)
!11915 = distinct !DISubprogram(name: "kobject_name", scope: !346, file: !346, line: 88, type: !11916, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11916 = !DISubroutineType(types: !11917)
!11917 = !{!284, !11918}
!11918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11919, size: 64)
!11919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !345)
!11920 = !DILocalVariable(name: "kobj", arg: 1, scope: !11915, file: !346, line: 88, type: !11918)
!11921 = !DILocation(line: 88, column: 62, scope: !11915)
!11922 = !DILocation(line: 90, column: 9, scope: !11915)
!11923 = !DILocation(line: 90, column: 15, scope: !11915)
!11924 = !DILocation(line: 90, column: 2, scope: !11915)
!11925 = distinct !DISubprogram(name: "mega_free_sgl", scope: !3, file: !3, line: 1811, type: !8176, scopeLine: 1812, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11926 = !DILocalVariable(name: "adapter", arg: 1, scope: !11925, file: !3, line: 1811, type: !182)
!11927 = !DILocation(line: 1811, column: 26, scope: !11925)
!11928 = !DILocalVariable(name: "scb", scope: !11925, file: !3, line: 1813, type: !5581)
!11929 = !DILocation(line: 1813, column: 9, scope: !11925)
!11930 = !DILocalVariable(name: "i", scope: !11925, file: !3, line: 1814, type: !188)
!11931 = !DILocation(line: 1814, column: 6, scope: !11925)
!11932 = !DILocation(line: 1816, column: 8, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11925, file: !3, line: 1816, column: 2)
!11934 = !DILocation(line: 1816, column: 6, scope: !11933)
!11935 = !DILocation(line: 1816, column: 13, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11933, file: !3, line: 1816, column: 2)
!11937 = !DILocation(line: 1816, column: 17, scope: !11936)
!11938 = !DILocation(line: 1816, column: 26, scope: !11936)
!11939 = !DILocation(line: 1816, column: 15, scope: !11936)
!11940 = !DILocation(line: 1816, column: 2, scope: !11933)
!11941 = !DILocation(line: 1818, column: 10, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11936, file: !3, line: 1816, column: 41)
!11943 = !DILocation(line: 1818, column: 19, scope: !11942)
!11944 = !DILocation(line: 1818, column: 28, scope: !11942)
!11945 = !DILocation(line: 1818, column: 7, scope: !11942)
!11946 = !DILocation(line: 1820, column: 7, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11942, file: !3, line: 1820, column: 7)
!11948 = !DILocation(line: 1820, column: 12, scope: !11947)
!11949 = !DILocation(line: 1820, column: 7, scope: !11942)
!11950 = !DILocation(line: 1821, column: 23, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11947, file: !3, line: 1820, column: 20)
!11952 = !DILocation(line: 1821, column: 32, scope: !11951)
!11953 = !DILocation(line: 1821, column: 37, scope: !11951)
!11954 = !DILocation(line: 1822, column: 29, scope: !11951)
!11955 = !DILocation(line: 1822, column: 38, scope: !11951)
!11956 = !DILocation(line: 1822, column: 27, scope: !11951)
!11957 = !DILocation(line: 1823, column: 8, scope: !11951)
!11958 = !DILocation(line: 1823, column: 13, scope: !11951)
!11959 = !DILocation(line: 1823, column: 20, scope: !11951)
!11960 = !DILocation(line: 1823, column: 25, scope: !11951)
!11961 = !DILocation(line: 1821, column: 4, scope: !11951)
!11962 = !DILocation(line: 1825, column: 4, scope: !11951)
!11963 = !DILocation(line: 1825, column: 9, scope: !11951)
!11964 = !DILocation(line: 1825, column: 15, scope: !11951)
!11965 = !DILocation(line: 1826, column: 3, scope: !11951)
!11966 = !DILocation(line: 1828, column: 7, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11942, file: !3, line: 1828, column: 7)
!11968 = !DILocation(line: 1828, column: 12, scope: !11967)
!11969 = !DILocation(line: 1828, column: 7, scope: !11942)
!11970 = !DILocation(line: 1829, column: 23, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !11967, file: !3, line: 1828, column: 20)
!11972 = !DILocation(line: 1829, column: 32, scope: !11971)
!11973 = !DILocation(line: 1829, column: 37, scope: !11971)
!11974 = !DILocation(line: 1830, column: 31, scope: !11971)
!11975 = !DILocation(line: 1830, column: 36, scope: !11971)
!11976 = !DILocation(line: 1831, column: 8, scope: !11971)
!11977 = !DILocation(line: 1831, column: 13, scope: !11971)
!11978 = !DILocation(line: 1829, column: 4, scope: !11971)
!11979 = !DILocation(line: 1833, column: 4, scope: !11971)
!11980 = !DILocation(line: 1833, column: 9, scope: !11971)
!11981 = !DILocation(line: 1833, column: 15, scope: !11971)
!11982 = !DILocation(line: 1834, column: 3, scope: !11971)
!11983 = !DILocation(line: 1836, column: 7, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11942, file: !3, line: 1836, column: 7)
!11985 = !DILocation(line: 1836, column: 12, scope: !11984)
!11986 = !DILocation(line: 1836, column: 7, scope: !11942)
!11987 = !DILocation(line: 1837, column: 23, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11984, file: !3, line: 1836, column: 21)
!11989 = !DILocation(line: 1837, column: 32, scope: !11988)
!11990 = !DILocation(line: 1837, column: 37, scope: !11988)
!11991 = !DILocation(line: 1839, column: 8, scope: !11988)
!11992 = !DILocation(line: 1839, column: 13, scope: !11988)
!11993 = !DILocation(line: 1839, column: 21, scope: !11988)
!11994 = !DILocation(line: 1839, column: 26, scope: !11988)
!11995 = !DILocation(line: 1837, column: 4, scope: !11988)
!11996 = !DILocation(line: 1841, column: 4, scope: !11988)
!11997 = !DILocation(line: 1841, column: 9, scope: !11988)
!11998 = !DILocation(line: 1841, column: 16, scope: !11988)
!11999 = !DILocation(line: 1842, column: 3, scope: !11988)
!12000 = !DILocation(line: 1844, column: 2, scope: !11942)
!12001 = !DILocation(line: 1816, column: 37, scope: !11936)
!12002 = !DILocation(line: 1816, column: 2, scope: !11936)
!12003 = distinct !{!12003, !11940, !12004}
!12004 = !DILocation(line: 1844, column: 2, scope: !11933)
!12005 = !DILocation(line: 1845, column: 1, scope: !11925)
!12006 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !37, file: !37, line: 660, type: !12007, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12007 = !DISubroutineType(types: !12008)
!12008 = !{null, !341, !197}
!12009 = !DILocalVariable(name: "dev", arg: 1, scope: !12006, file: !37, line: 660, type: !341)
!12010 = !DILocation(line: 660, column: 51, scope: !12006)
!12011 = !DILocalVariable(name: "data", arg: 2, scope: !12006, file: !37, line: 660, type: !197)
!12012 = !DILocation(line: 660, column: 62, scope: !12006)
!12013 = !DILocation(line: 662, column: 21, scope: !12006)
!12014 = !DILocation(line: 662, column: 2, scope: !12006)
!12015 = !DILocation(line: 662, column: 7, scope: !12006)
!12016 = !DILocation(line: 662, column: 19, scope: !12006)
!12017 = !DILocation(line: 663, column: 1, scope: !12006)
!12018 = distinct !DISubprogram(name: "proc_show_config", scope: !3, file: !3, line: 2060, type: !873, scopeLine: 2061, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12019 = !DILocation(line: 23, column: 61, scope: !7408, inlinedAt: !12020)
!12020 = distinct !DILocation(line: 28, column: 9, scope: !7415, inlinedAt: !12021)
!12021 = distinct !DILocation(line: 2107, column: 6, scope: !12018)
!12022 = !DILocation(line: 69, column: 73, scope: !7420, inlinedAt: !12023)
!12023 = distinct !DILocation(line: 27, column: 2, scope: !7415, inlinedAt: !12021)
!12024 = !DILocation(line: 69, column: 83, scope: !7420, inlinedAt: !12023)
!12025 = !DILocation(line: 25, column: 29, scope: !7415, inlinedAt: !12021)
!12026 = !DILocalVariable(name: "m", arg: 1, scope: !12018, file: !3, line: 2060, type: !828)
!12027 = !DILocation(line: 2060, column: 35, scope: !12018)
!12028 = !DILocalVariable(name: "v", arg: 2, scope: !12018, file: !3, line: 2060, type: !197)
!12029 = !DILocation(line: 2060, column: 44, scope: !12018)
!12030 = !DILocalVariable(name: "adapter", scope: !12018, file: !3, line: 2063, type: !182)
!12031 = !DILocation(line: 2063, column: 13, scope: !12018)
!12032 = !DILocation(line: 2063, column: 23, scope: !12018)
!12033 = !DILocation(line: 2063, column: 26, scope: !12018)
!12034 = !DILocation(line: 2065, column: 11, scope: !12018)
!12035 = !DILocation(line: 2065, column: 2, scope: !12018)
!12036 = !DILocation(line: 2066, column: 5, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 2066, column: 5)
!12038 = !DILocation(line: 2066, column: 14, scope: !12037)
!12039 = !DILocation(line: 2066, column: 27, scope: !12037)
!12040 = !DILocation(line: 2066, column: 5, scope: !12018)
!12041 = !DILocation(line: 2067, column: 14, scope: !12037)
!12042 = !DILocation(line: 2067, column: 25, scope: !12037)
!12043 = !DILocation(line: 2067, column: 34, scope: !12037)
!12044 = !DILocation(line: 2067, column: 47, scope: !12037)
!12045 = !DILocation(line: 2067, column: 3, scope: !12037)
!12046 = !DILocation(line: 2069, column: 11, scope: !12018)
!12047 = !DILocation(line: 2069, column: 2, scope: !12018)
!12048 = !DILocation(line: 2071, column: 6, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 2071, column: 6)
!12050 = !DILocation(line: 2071, column: 15, scope: !12049)
!12051 = !DILocation(line: 2071, column: 20, scope: !12049)
!12052 = !DILocation(line: 2071, column: 6, scope: !12018)
!12053 = !DILocation(line: 2072, column: 12, scope: !12049)
!12054 = !DILocation(line: 2072, column: 3, scope: !12049)
!12055 = !DILocation(line: 2074, column: 12, scope: !12049)
!12056 = !DILocation(line: 2074, column: 3, scope: !12049)
!12057 = !DILocation(line: 2076, column: 5, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 2076, column: 5)
!12059 = !DILocation(line: 2076, column: 14, scope: !12058)
!12060 = !DILocation(line: 2076, column: 19, scope: !12058)
!12061 = !DILocation(line: 2076, column: 5, scope: !12018)
!12062 = !DILocation(line: 2077, column: 12, scope: !12058)
!12063 = !DILocation(line: 2077, column: 3, scope: !12058)
!12064 = !DILocation(line: 2079, column: 5, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 2079, column: 5)
!12066 = !DILocation(line: 2079, column: 14, scope: !12065)
!12067 = !DILocation(line: 2079, column: 19, scope: !12065)
!12068 = !DILocation(line: 2079, column: 5, scope: !12018)
!12069 = !DILocation(line: 2080, column: 12, scope: !12065)
!12070 = !DILocation(line: 2080, column: 3, scope: !12065)
!12071 = !DILocation(line: 2081, column: 6, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 2081, column: 6)
!12073 = !DILocation(line: 2081, column: 15, scope: !12072)
!12074 = !DILocation(line: 2081, column: 6, scope: !12018)
!12075 = !DILocation(line: 2082, column: 12, scope: !12072)
!12076 = !DILocation(line: 2082, column: 3, scope: !12072)
!12077 = !DILocation(line: 2084, column: 12, scope: !12072)
!12078 = !DILocation(line: 2084, column: 3, scope: !12072)
!12079 = !DILocation(line: 2086, column: 13, scope: !12018)
!12080 = !DILocation(line: 2087, column: 6, scope: !12018)
!12081 = !DILocation(line: 2087, column: 15, scope: !12018)
!12082 = !DILocation(line: 2087, column: 21, scope: !12018)
!12083 = !DILocation(line: 2087, column: 30, scope: !12018)
!12084 = !DILocation(line: 2087, column: 36, scope: !12018)
!12085 = !DILocation(line: 2086, column: 2, scope: !12018)
!12086 = !DILocation(line: 2089, column: 13, scope: !12018)
!12087 = !DILocation(line: 2090, column: 6, scope: !12018)
!12088 = !DILocation(line: 2090, column: 15, scope: !12018)
!12089 = !DILocation(line: 2090, column: 24, scope: !12018)
!12090 = !DILocation(line: 2090, column: 33, scope: !12018)
!12091 = !DILocation(line: 2090, column: 46, scope: !12018)
!12092 = !DILocation(line: 2089, column: 2, scope: !12018)
!12093 = !DILocation(line: 2092, column: 13, scope: !12018)
!12094 = !DILocation(line: 2093, column: 6, scope: !12018)
!12095 = !DILocation(line: 2093, column: 15, scope: !12018)
!12096 = !DILocation(line: 2093, column: 27, scope: !12018)
!12097 = !DILocation(line: 2093, column: 36, scope: !12018)
!12098 = !DILocation(line: 2094, column: 6, scope: !12018)
!12099 = !DILocation(line: 2094, column: 15, scope: !12018)
!12100 = !DILocation(line: 2094, column: 28, scope: !12018)
!12101 = !DILocation(line: 2092, column: 2, scope: !12018)
!12102 = !DILocation(line: 2096, column: 13, scope: !12018)
!12103 = !DILocation(line: 2097, column: 6, scope: !12018)
!12104 = !DILocation(line: 2097, column: 15, scope: !12018)
!12105 = !DILocation(line: 2097, column: 28, scope: !12018)
!12106 = !DILocation(line: 2097, column: 42, scope: !12018)
!12107 = !DILocation(line: 2097, column: 51, scope: !12018)
!12108 = !DILocation(line: 2096, column: 2, scope: !12018)
!12109 = !DILocation(line: 2099, column: 13, scope: !12018)
!12110 = !DILocation(line: 2099, column: 45, scope: !12018)
!12111 = !DILocation(line: 2099, column: 54, scope: !12018)
!12112 = !DILocation(line: 2099, column: 2, scope: !12018)
!12113 = !DILocation(line: 2100, column: 13, scope: !12018)
!12114 = !DILocation(line: 2100, column: 45, scope: !12018)
!12115 = !DILocation(line: 2100, column: 54, scope: !12018)
!12116 = !DILocation(line: 2100, column: 2, scope: !12018)
!12117 = !DILocation(line: 2101, column: 13, scope: !12018)
!12118 = !DILocation(line: 2101, column: 45, scope: !12018)
!12119 = !DILocation(line: 2101, column: 54, scope: !12018)
!12120 = !DILocation(line: 2101, column: 2, scope: !12018)
!12121 = !DILocation(line: 2102, column: 13, scope: !12018)
!12122 = !DILocation(line: 2102, column: 45, scope: !12018)
!12123 = !DILocation(line: 2102, column: 54, scope: !12018)
!12124 = !DILocation(line: 2102, column: 2, scope: !12018)
!12125 = !DILocation(line: 2103, column: 13, scope: !12018)
!12126 = !DILocation(line: 2103, column: 45, scope: !12018)
!12127 = !DILocation(line: 2103, column: 54, scope: !12018)
!12128 = !DILocation(line: 2103, column: 2, scope: !12018)
!12129 = !DILocation(line: 2104, column: 13, scope: !12018)
!12130 = !DILocation(line: 2104, column: 45, scope: !12018)
!12131 = !DILocation(line: 2104, column: 54, scope: !12018)
!12132 = !DILocation(line: 2104, column: 2, scope: !12018)
!12133 = !DILocation(line: 2105, column: 13, scope: !12018)
!12134 = !DILocation(line: 2105, column: 45, scope: !12018)
!12135 = !DILocation(line: 2105, column: 54, scope: !12018)
!12136 = !DILocation(line: 2105, column: 2, scope: !12018)
!12137 = !DILocation(line: 2106, column: 13, scope: !12018)
!12138 = !DILocation(line: 2107, column: 19, scope: !12018)
!12139 = !DILocation(line: 2107, column: 28, scope: !12018)
!12140 = !DILocation(line: 27, column: 25, scope: !7415, inlinedAt: !12021)
!12141 = !DILocation(line: 71, column: 19, scope: !7420, inlinedAt: !12023)
!12142 = !DILocation(line: 71, column: 22, scope: !7420, inlinedAt: !12023)
!12143 = !DILocation(line: 71, column: 2, scope: !7420, inlinedAt: !12023)
!12144 = !DILocation(line: 72, column: 2, scope: !7420, inlinedAt: !12023)
!12145 = !DILocation(line: 28, column: 26, scope: !7415, inlinedAt: !12021)
!12146 = !DILocation(line: 29, column: 9, scope: !7408, inlinedAt: !12020)
!12147 = !DILocation(line: 2106, column: 2, scope: !12018)
!12148 = !DILocation(line: 2108, column: 13, scope: !12018)
!12149 = !DILocation(line: 2108, column: 45, scope: !12018)
!12150 = !DILocation(line: 2108, column: 54, scope: !12018)
!12151 = !DILocation(line: 2108, column: 2, scope: !12018)
!12152 = !DILocation(line: 2110, column: 11, scope: !12018)
!12153 = !DILocation(line: 2110, column: 2, scope: !12018)
!12154 = !DILocation(line: 2111, column: 13, scope: !12018)
!12155 = !DILocation(line: 2111, column: 45, scope: !12018)
!12156 = !DILocation(line: 2111, column: 2, scope: !12018)
!12157 = !DILocation(line: 2112, column: 13, scope: !12018)
!12158 = !DILocation(line: 2112, column: 45, scope: !12018)
!12159 = !DILocation(line: 2112, column: 2, scope: !12018)
!12160 = !DILocation(line: 2113, column: 2, scope: !12018)
!12161 = distinct !DISubprogram(name: "proc_show_stat", scope: !3, file: !3, line: 2124, type: !873, scopeLine: 2125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12162 = !DILocation(line: 23, column: 61, scope: !7408, inlinedAt: !12163)
!12163 = distinct !DILocation(line: 28, column: 9, scope: !7415, inlinedAt: !12164)
!12164 = distinct !DILocation(line: 2132, column: 36, scope: !12161)
!12165 = !DILocation(line: 69, column: 73, scope: !7420, inlinedAt: !12166)
!12166 = distinct !DILocation(line: 27, column: 2, scope: !7415, inlinedAt: !12164)
!12167 = !DILocation(line: 69, column: 83, scope: !7420, inlinedAt: !12166)
!12168 = !DILocation(line: 25, column: 29, scope: !7415, inlinedAt: !12164)
!12169 = !DILocalVariable(name: "m", arg: 1, scope: !12161, file: !3, line: 2124, type: !828)
!12170 = !DILocation(line: 2124, column: 33, scope: !12161)
!12171 = !DILocalVariable(name: "v", arg: 2, scope: !12161, file: !3, line: 2124, type: !197)
!12172 = !DILocation(line: 2124, column: 42, scope: !12161)
!12173 = !DILocalVariable(name: "adapter", scope: !12161, file: !3, line: 2126, type: !182)
!12174 = !DILocation(line: 2126, column: 13, scope: !12161)
!12175 = !DILocation(line: 2126, column: 23, scope: !12161)
!12176 = !DILocation(line: 2126, column: 26, scope: !12161)
!12177 = !DILocation(line: 2131, column: 11, scope: !12161)
!12178 = !DILocation(line: 2131, column: 2, scope: !12161)
!12179 = !DILocation(line: 2132, column: 13, scope: !12161)
!12180 = !DILocation(line: 2132, column: 49, scope: !12161)
!12181 = !DILocation(line: 2132, column: 58, scope: !12161)
!12182 = !DILocation(line: 27, column: 25, scope: !7415, inlinedAt: !12164)
!12183 = !DILocation(line: 71, column: 19, scope: !7420, inlinedAt: !12166)
!12184 = !DILocation(line: 71, column: 22, scope: !7420, inlinedAt: !12166)
!12185 = !DILocation(line: 71, column: 2, scope: !7420, inlinedAt: !12166)
!12186 = !DILocation(line: 72, column: 2, scope: !7420, inlinedAt: !12166)
!12187 = !DILocation(line: 28, column: 26, scope: !7415, inlinedAt: !12164)
!12188 = !DILocation(line: 29, column: 9, scope: !7408, inlinedAt: !12163)
!12189 = !DILocation(line: 2132, column: 2, scope: !12161)
!12190 = !DILocation(line: 2144, column: 11, scope: !12161)
!12191 = !DILocation(line: 2144, column: 2, scope: !12161)
!12192 = !DILocation(line: 2146, column: 2, scope: !12161)
!12193 = distinct !DISubprogram(name: "proc_show_mbox", scope: !3, file: !3, line: 2159, type: !873, scopeLine: 2160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12194 = !DILocalVariable(name: "m", arg: 1, scope: !12193, file: !3, line: 2159, type: !828)
!12195 = !DILocation(line: 2159, column: 33, scope: !12193)
!12196 = !DILocalVariable(name: "v", arg: 2, scope: !12193, file: !3, line: 2159, type: !197)
!12197 = !DILocation(line: 2159, column: 42, scope: !12193)
!12198 = !DILocalVariable(name: "adapter", scope: !12193, file: !3, line: 2161, type: !182)
!12199 = !DILocation(line: 2161, column: 13, scope: !12193)
!12200 = !DILocation(line: 2161, column: 23, scope: !12193)
!12201 = !DILocation(line: 2161, column: 26, scope: !12193)
!12202 = !DILocalVariable(name: "mbox", scope: !12193, file: !3, line: 2162, type: !249)
!12203 = !DILocation(line: 2162, column: 19, scope: !12193)
!12204 = !DILocation(line: 2162, column: 26, scope: !12193)
!12205 = !DILocation(line: 2162, column: 35, scope: !12193)
!12206 = !DILocation(line: 2164, column: 11, scope: !12193)
!12207 = !DILocation(line: 2164, column: 2, scope: !12193)
!12208 = !DILocation(line: 2165, column: 13, scope: !12193)
!12209 = !DILocation(line: 2165, column: 45, scope: !12193)
!12210 = !DILocation(line: 2165, column: 51, scope: !12193)
!12211 = !DILocation(line: 2165, column: 57, scope: !12193)
!12212 = !DILocation(line: 2165, column: 2, scope: !12193)
!12213 = !DILocation(line: 2166, column: 13, scope: !12193)
!12214 = !DILocation(line: 2166, column: 45, scope: !12193)
!12215 = !DILocation(line: 2166, column: 51, scope: !12193)
!12216 = !DILocation(line: 2166, column: 57, scope: !12193)
!12217 = !DILocation(line: 2166, column: 2, scope: !12193)
!12218 = !DILocation(line: 2167, column: 13, scope: !12193)
!12219 = !DILocation(line: 2167, column: 43, scope: !12193)
!12220 = !DILocation(line: 2167, column: 49, scope: !12193)
!12221 = !DILocation(line: 2167, column: 55, scope: !12193)
!12222 = !DILocation(line: 2167, column: 2, scope: !12193)
!12223 = !DILocation(line: 2168, column: 13, scope: !12193)
!12224 = !DILocation(line: 2168, column: 45, scope: !12193)
!12225 = !DILocation(line: 2168, column: 51, scope: !12193)
!12226 = !DILocation(line: 2168, column: 57, scope: !12193)
!12227 = !DILocation(line: 2168, column: 2, scope: !12193)
!12228 = !DILocation(line: 2169, column: 13, scope: !12193)
!12229 = !DILocation(line: 2169, column: 45, scope: !12193)
!12230 = !DILocation(line: 2169, column: 51, scope: !12193)
!12231 = !DILocation(line: 2169, column: 57, scope: !12193)
!12232 = !DILocation(line: 2169, column: 2, scope: !12193)
!12233 = !DILocation(line: 2170, column: 13, scope: !12193)
!12234 = !DILocation(line: 2170, column: 45, scope: !12193)
!12235 = !DILocation(line: 2170, column: 51, scope: !12193)
!12236 = !DILocation(line: 2170, column: 57, scope: !12193)
!12237 = !DILocation(line: 2170, column: 2, scope: !12193)
!12238 = !DILocation(line: 2171, column: 13, scope: !12193)
!12239 = !DILocation(line: 2171, column: 45, scope: !12193)
!12240 = !DILocation(line: 2171, column: 51, scope: !12193)
!12241 = !DILocation(line: 2171, column: 57, scope: !12193)
!12242 = !DILocation(line: 2171, column: 2, scope: !12193)
!12243 = !DILocation(line: 2172, column: 13, scope: !12193)
!12244 = !DILocation(line: 2172, column: 43, scope: !12193)
!12245 = !DILocation(line: 2172, column: 49, scope: !12193)
!12246 = !DILocation(line: 2172, column: 54, scope: !12193)
!12247 = !DILocation(line: 2172, column: 2, scope: !12193)
!12248 = !DILocation(line: 2173, column: 13, scope: !12193)
!12249 = !DILocation(line: 2173, column: 45, scope: !12193)
!12250 = !DILocation(line: 2173, column: 51, scope: !12193)
!12251 = !DILocation(line: 2173, column: 56, scope: !12193)
!12252 = !DILocation(line: 2173, column: 2, scope: !12193)
!12253 = !DILocation(line: 2174, column: 2, scope: !12193)
!12254 = distinct !DISubprogram(name: "proc_show_rebuild_rate", scope: !3, file: !3, line: 2186, type: !873, scopeLine: 2187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12255 = !DILocalVariable(name: "m", arg: 1, scope: !12254, file: !3, line: 2186, type: !828)
!12256 = !DILocation(line: 2186, column: 41, scope: !12254)
!12257 = !DILocalVariable(name: "v", arg: 2, scope: !12254, file: !3, line: 2186, type: !197)
!12258 = !DILocation(line: 2186, column: 50, scope: !12254)
!12259 = !DILocalVariable(name: "adapter", scope: !12254, file: !3, line: 2188, type: !182)
!12260 = !DILocation(line: 2188, column: 13, scope: !12254)
!12261 = !DILocation(line: 2188, column: 23, scope: !12254)
!12262 = !DILocation(line: 2188, column: 26, scope: !12254)
!12263 = !DILocalVariable(name: "dma_handle", scope: !12254, file: !3, line: 2189, type: !240)
!12264 = !DILocation(line: 2189, column: 13, scope: !12254)
!12265 = !DILocalVariable(name: "inquiry", scope: !12254, file: !3, line: 2190, type: !12266)
!12266 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !241, line: 75, baseType: !12267)
!12267 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_caddr_t", file: !432, line: 97, baseType: !399)
!12268 = !DILocation(line: 2190, column: 11, scope: !12254)
!12269 = !DILocalVariable(name: "pdev", scope: !12254, file: !3, line: 2191, type: !253)
!12270 = !DILocation(line: 2191, column: 18, scope: !12254)
!12271 = !DILocation(line: 2193, column: 22, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12254, file: !3, line: 2193, column: 6)
!12273 = !DILocation(line: 2193, column: 6, scope: !12272)
!12274 = !DILocation(line: 2193, column: 38, scope: !12272)
!12275 = !DILocation(line: 2193, column: 6, scope: !12254)
!12276 = !DILocation(line: 2194, column: 3, scope: !12272)
!12277 = !DILocation(line: 2196, column: 52, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12254, file: !3, line: 2196, column: 6)
!12279 = !DILocation(line: 2196, column: 17, scope: !12278)
!12280 = !DILocation(line: 2196, column: 15, scope: !12278)
!12281 = !DILocation(line: 2196, column: 59, scope: !12278)
!12282 = !DILocation(line: 2196, column: 6, scope: !12254)
!12283 = !DILocation(line: 2197, column: 3, scope: !12278)
!12284 = !DILocation(line: 2199, column: 19, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12254, file: !3, line: 2199, column: 6)
!12286 = !DILocation(line: 2199, column: 28, scope: !12285)
!12287 = !DILocation(line: 2199, column: 6, scope: !12285)
!12288 = !DILocation(line: 2199, column: 40, scope: !12285)
!12289 = !DILocation(line: 2199, column: 6, scope: !12254)
!12290 = !DILocation(line: 2200, column: 12, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12285, file: !3, line: 2199, column: 47)
!12292 = !DILocation(line: 2200, column: 3, scope: !12291)
!12293 = !DILocation(line: 2201, column: 3, scope: !12291)
!12294 = !DILocation(line: 2202, column: 3, scope: !12291)
!12295 = !DILocation(line: 2205, column: 6, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12254, file: !3, line: 2205, column: 6)
!12297 = !DILocation(line: 2205, column: 15, scope: !12296)
!12298 = !DILocation(line: 2205, column: 20, scope: !12296)
!12299 = !DILocation(line: 2205, column: 6, scope: !12254)
!12300 = !DILocation(line: 2206, column: 14, scope: !12296)
!12301 = !DILocation(line: 2207, column: 25, scope: !12296)
!12302 = !DILocation(line: 2207, column: 35, scope: !12296)
!12303 = !DILocation(line: 2207, column: 7, scope: !12296)
!12304 = !DILocation(line: 2206, column: 3, scope: !12296)
!12305 = !DILocation(line: 2209, column: 14, scope: !12296)
!12306 = !DILocation(line: 2211, column: 5, scope: !12296)
!12307 = !DILocation(line: 2211, column: 15, scope: !12296)
!12308 = !DILocation(line: 2211, column: 24, scope: !12296)
!12309 = !DILocation(line: 2211, column: 37, scope: !12296)
!12310 = !DILocation(line: 2210, column: 4, scope: !12296)
!12311 = !DILocation(line: 2209, column: 3, scope: !12296)
!12312 = !DILocation(line: 2205, column: 22, scope: !12296)
!12313 = !DILabel(scope: !12254, name: "free_inquiry", file: !3, line: 2213)
!12314 = !DILocation(line: 2213, column: 1, scope: !12254)
!12315 = !DILocation(line: 2214, column: 20, scope: !12254)
!12316 = !DILocation(line: 2214, column: 29, scope: !12254)
!12317 = !DILocation(line: 2214, column: 41, scope: !12254)
!12318 = !DILocation(line: 2214, column: 2, scope: !12254)
!12319 = !DILabel(scope: !12254, name: "free_pdev", file: !3, line: 2215)
!12320 = !DILocation(line: 2215, column: 1, scope: !12254)
!12321 = !DILocation(line: 2216, column: 18, scope: !12254)
!12322 = !DILocation(line: 2216, column: 2, scope: !12254)
!12323 = !DILocation(line: 2217, column: 2, scope: !12254)
!12324 = !DILocation(line: 2218, column: 1, scope: !12254)
!12325 = distinct !DISubprogram(name: "proc_show_battery", scope: !3, file: !3, line: 2229, type: !873, scopeLine: 2230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12326 = !DILocalVariable(name: "m", arg: 1, scope: !12325, file: !3, line: 2229, type: !828)
!12327 = !DILocation(line: 2229, column: 36, scope: !12325)
!12328 = !DILocalVariable(name: "v", arg: 2, scope: !12325, file: !3, line: 2229, type: !197)
!12329 = !DILocation(line: 2229, column: 45, scope: !12325)
!12330 = !DILocalVariable(name: "adapter", scope: !12325, file: !3, line: 2231, type: !182)
!12331 = !DILocation(line: 2231, column: 13, scope: !12325)
!12332 = !DILocation(line: 2231, column: 23, scope: !12325)
!12333 = !DILocation(line: 2231, column: 26, scope: !12325)
!12334 = !DILocalVariable(name: "dma_handle", scope: !12325, file: !3, line: 2232, type: !240)
!12335 = !DILocation(line: 2232, column: 13, scope: !12325)
!12336 = !DILocalVariable(name: "inquiry", scope: !12325, file: !3, line: 2233, type: !12266)
!12337 = !DILocation(line: 2233, column: 11, scope: !12325)
!12338 = !DILocalVariable(name: "pdev", scope: !12325, file: !3, line: 2234, type: !253)
!12339 = !DILocation(line: 2234, column: 18, scope: !12325)
!12340 = !DILocalVariable(name: "battery_status", scope: !12325, file: !3, line: 2235, type: !213)
!12341 = !DILocation(line: 2235, column: 5, scope: !12325)
!12342 = !DILocation(line: 2237, column: 22, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 2237, column: 6)
!12344 = !DILocation(line: 2237, column: 6, scope: !12343)
!12345 = !DILocation(line: 2237, column: 38, scope: !12343)
!12346 = !DILocation(line: 2237, column: 6, scope: !12325)
!12347 = !DILocation(line: 2238, column: 3, scope: !12343)
!12348 = !DILocation(line: 2240, column: 52, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 2240, column: 6)
!12350 = !DILocation(line: 2240, column: 17, scope: !12349)
!12351 = !DILocation(line: 2240, column: 15, scope: !12349)
!12352 = !DILocation(line: 2240, column: 59, scope: !12349)
!12353 = !DILocation(line: 2240, column: 6, scope: !12325)
!12354 = !DILocation(line: 2241, column: 3, scope: !12349)
!12355 = !DILocation(line: 2243, column: 19, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 2243, column: 6)
!12357 = !DILocation(line: 2243, column: 28, scope: !12356)
!12358 = !DILocation(line: 2243, column: 6, scope: !12356)
!12359 = !DILocation(line: 2243, column: 40, scope: !12356)
!12360 = !DILocation(line: 2243, column: 6, scope: !12325)
!12361 = !DILocation(line: 2244, column: 12, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12356, file: !3, line: 2243, column: 47)
!12363 = !DILocation(line: 2244, column: 3, scope: !12362)
!12364 = !DILocation(line: 2245, column: 3, scope: !12362)
!12365 = !DILocation(line: 2246, column: 3, scope: !12362)
!12366 = !DILocation(line: 2249, column: 6, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 2249, column: 6)
!12368 = !DILocation(line: 2249, column: 15, scope: !12367)
!12369 = !DILocation(line: 2249, column: 20, scope: !12367)
!12370 = !DILocation(line: 2249, column: 6, scope: !12325)
!12371 = !DILocation(line: 2250, column: 38, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12367, file: !3, line: 2249, column: 35)
!12373 = !DILocation(line: 2250, column: 48, scope: !12372)
!12374 = !DILocation(line: 2250, column: 18, scope: !12372)
!12375 = !DILocation(line: 2251, column: 2, scope: !12372)
!12376 = !DILocation(line: 2253, column: 42, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12367, file: !3, line: 2252, column: 7)
!12378 = !DILocation(line: 2254, column: 4, scope: !12377)
!12379 = !DILocation(line: 2254, column: 13, scope: !12377)
!12380 = !DILocation(line: 2254, column: 26, scope: !12377)
!12381 = !DILocation(line: 2253, column: 18, scope: !12377)
!12382 = !DILocation(line: 2260, column: 13, scope: !12325)
!12383 = !DILocation(line: 2260, column: 39, scope: !12325)
!12384 = !DILocation(line: 2260, column: 2, scope: !12325)
!12385 = !DILocation(line: 2262, column: 5, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 2262, column: 5)
!12387 = !DILocation(line: 2262, column: 20, scope: !12386)
!12388 = !DILocation(line: 2262, column: 5, scope: !12325)
!12389 = !DILocation(line: 2263, column: 12, scope: !12386)
!12390 = !DILocation(line: 2263, column: 3, scope: !12386)
!12391 = !DILocation(line: 2265, column: 5, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 2265, column: 5)
!12393 = !DILocation(line: 2265, column: 20, scope: !12392)
!12394 = !DILocation(line: 2265, column: 5, scope: !12325)
!12395 = !DILocation(line: 2266, column: 12, scope: !12392)
!12396 = !DILocation(line: 2266, column: 3, scope: !12392)
!12397 = !DILocation(line: 2268, column: 5, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 2268, column: 5)
!12399 = !DILocation(line: 2268, column: 20, scope: !12398)
!12400 = !DILocation(line: 2268, column: 5, scope: !12325)
!12401 = !DILocation(line: 2269, column: 12, scope: !12398)
!12402 = !DILocation(line: 2269, column: 3, scope: !12398)
!12403 = !DILocation(line: 2271, column: 5, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 2271, column: 5)
!12405 = !DILocation(line: 2271, column: 20, scope: !12404)
!12406 = !DILocation(line: 2271, column: 5, scope: !12325)
!12407 = !DILocation(line: 2272, column: 12, scope: !12404)
!12408 = !DILocation(line: 2272, column: 3, scope: !12404)
!12409 = !DILocation(line: 2274, column: 5, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 2274, column: 5)
!12411 = !DILocation(line: 2274, column: 20, scope: !12410)
!12412 = !DILocation(line: 2274, column: 5, scope: !12325)
!12413 = !DILocation(line: 2275, column: 12, scope: !12410)
!12414 = !DILocation(line: 2275, column: 3, scope: !12410)
!12415 = !DILocation(line: 2277, column: 5, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 2277, column: 5)
!12417 = !DILocation(line: 2277, column: 20, scope: !12416)
!12418 = !DILocation(line: 2277, column: 5, scope: !12325)
!12419 = !DILocation(line: 2278, column: 12, scope: !12416)
!12420 = !DILocation(line: 2278, column: 3, scope: !12416)
!12421 = !DILocation(line: 2280, column: 5, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 2280, column: 5)
!12423 = !DILocation(line: 2280, column: 20, scope: !12422)
!12424 = !DILocation(line: 2280, column: 5, scope: !12325)
!12425 = !DILocation(line: 2281, column: 12, scope: !12422)
!12426 = !DILocation(line: 2281, column: 3, scope: !12422)
!12427 = !DILocation(line: 2283, column: 5, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 2283, column: 5)
!12429 = !DILocation(line: 2283, column: 20, scope: !12428)
!12430 = !DILocation(line: 2283, column: 5, scope: !12325)
!12431 = !DILocation(line: 2284, column: 12, scope: !12428)
!12432 = !DILocation(line: 2284, column: 3, scope: !12428)
!12433 = !DILocation(line: 2286, column: 11, scope: !12325)
!12434 = !DILocation(line: 2286, column: 2, scope: !12325)
!12435 = !DILabel(scope: !12325, name: "free_inquiry", file: !3, line: 2288)
!12436 = !DILocation(line: 2288, column: 1, scope: !12325)
!12437 = !DILocation(line: 2289, column: 20, scope: !12325)
!12438 = !DILocation(line: 2289, column: 29, scope: !12325)
!12439 = !DILocation(line: 2289, column: 41, scope: !12325)
!12440 = !DILocation(line: 2289, column: 2, scope: !12325)
!12441 = !DILabel(scope: !12325, name: "free_pdev", file: !3, line: 2290)
!12442 = !DILocation(line: 2290, column: 1, scope: !12325)
!12443 = !DILocation(line: 2291, column: 18, scope: !12325)
!12444 = !DILocation(line: 2291, column: 2, scope: !12325)
!12445 = !DILocation(line: 2292, column: 2, scope: !12325)
!12446 = !DILocation(line: 2293, column: 1, scope: !12325)
!12447 = distinct !DISubprogram(name: "proc_show_pdrv_ch0", scope: !3, file: !3, line: 2449, type: !873, scopeLine: 2450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12448 = !DILocalVariable(name: "m", arg: 1, scope: !12447, file: !3, line: 2449, type: !828)
!12449 = !DILocation(line: 2449, column: 37, scope: !12447)
!12450 = !DILocalVariable(name: "v", arg: 2, scope: !12447, file: !3, line: 2449, type: !197)
!12451 = !DILocation(line: 2449, column: 46, scope: !12447)
!12452 = !DILocation(line: 2451, column: 24, scope: !12447)
!12453 = !DILocation(line: 2451, column: 27, scope: !12447)
!12454 = !DILocation(line: 2451, column: 30, scope: !12447)
!12455 = !DILocation(line: 2451, column: 9, scope: !12447)
!12456 = !DILocation(line: 2451, column: 2, scope: !12447)
!12457 = distinct !DISubprogram(name: "proc_show_pdrv_ch1", scope: !3, file: !3, line: 2463, type: !873, scopeLine: 2464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12458 = !DILocalVariable(name: "m", arg: 1, scope: !12457, file: !3, line: 2463, type: !828)
!12459 = !DILocation(line: 2463, column: 37, scope: !12457)
!12460 = !DILocalVariable(name: "v", arg: 2, scope: !12457, file: !3, line: 2463, type: !197)
!12461 = !DILocation(line: 2463, column: 46, scope: !12457)
!12462 = !DILocation(line: 2465, column: 24, scope: !12457)
!12463 = !DILocation(line: 2465, column: 27, scope: !12457)
!12464 = !DILocation(line: 2465, column: 30, scope: !12457)
!12465 = !DILocation(line: 2465, column: 9, scope: !12457)
!12466 = !DILocation(line: 2465, column: 2, scope: !12457)
!12467 = distinct !DISubprogram(name: "proc_show_pdrv_ch2", scope: !3, file: !3, line: 2477, type: !873, scopeLine: 2478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12468 = !DILocalVariable(name: "m", arg: 1, scope: !12467, file: !3, line: 2477, type: !828)
!12469 = !DILocation(line: 2477, column: 37, scope: !12467)
!12470 = !DILocalVariable(name: "v", arg: 2, scope: !12467, file: !3, line: 2477, type: !197)
!12471 = !DILocation(line: 2477, column: 46, scope: !12467)
!12472 = !DILocation(line: 2479, column: 24, scope: !12467)
!12473 = !DILocation(line: 2479, column: 27, scope: !12467)
!12474 = !DILocation(line: 2479, column: 30, scope: !12467)
!12475 = !DILocation(line: 2479, column: 9, scope: !12467)
!12476 = !DILocation(line: 2479, column: 2, scope: !12467)
!12477 = distinct !DISubprogram(name: "proc_show_pdrv_ch3", scope: !3, file: !3, line: 2491, type: !873, scopeLine: 2492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12478 = !DILocalVariable(name: "m", arg: 1, scope: !12477, file: !3, line: 2491, type: !828)
!12479 = !DILocation(line: 2491, column: 37, scope: !12477)
!12480 = !DILocalVariable(name: "v", arg: 2, scope: !12477, file: !3, line: 2491, type: !197)
!12481 = !DILocation(line: 2491, column: 46, scope: !12477)
!12482 = !DILocation(line: 2493, column: 24, scope: !12477)
!12483 = !DILocation(line: 2493, column: 27, scope: !12477)
!12484 = !DILocation(line: 2493, column: 30, scope: !12477)
!12485 = !DILocation(line: 2493, column: 9, scope: !12477)
!12486 = !DILocation(line: 2493, column: 2, scope: !12477)
!12487 = distinct !DISubprogram(name: "proc_show_rdrv_10", scope: !3, file: !3, line: 2690, type: !873, scopeLine: 2691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12488 = !DILocalVariable(name: "m", arg: 1, scope: !12487, file: !3, line: 2690, type: !828)
!12489 = !DILocation(line: 2690, column: 36, scope: !12487)
!12490 = !DILocalVariable(name: "v", arg: 2, scope: !12487, file: !3, line: 2690, type: !197)
!12491 = !DILocation(line: 2690, column: 45, scope: !12487)
!12492 = !DILocation(line: 2692, column: 24, scope: !12487)
!12493 = !DILocation(line: 2692, column: 27, scope: !12487)
!12494 = !DILocation(line: 2692, column: 30, scope: !12487)
!12495 = !DILocation(line: 2692, column: 9, scope: !12487)
!12496 = !DILocation(line: 2692, column: 2, scope: !12487)
!12497 = distinct !DISubprogram(name: "proc_show_rdrv_20", scope: !3, file: !3, line: 2704, type: !873, scopeLine: 2705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12498 = !DILocalVariable(name: "m", arg: 1, scope: !12497, file: !3, line: 2704, type: !828)
!12499 = !DILocation(line: 2704, column: 36, scope: !12497)
!12500 = !DILocalVariable(name: "v", arg: 2, scope: !12497, file: !3, line: 2704, type: !197)
!12501 = !DILocation(line: 2704, column: 45, scope: !12497)
!12502 = !DILocation(line: 2706, column: 24, scope: !12497)
!12503 = !DILocation(line: 2706, column: 27, scope: !12497)
!12504 = !DILocation(line: 2706, column: 30, scope: !12497)
!12505 = !DILocation(line: 2706, column: 9, scope: !12497)
!12506 = !DILocation(line: 2706, column: 2, scope: !12497)
!12507 = distinct !DISubprogram(name: "proc_show_rdrv_30", scope: !3, file: !3, line: 2718, type: !873, scopeLine: 2719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12508 = !DILocalVariable(name: "m", arg: 1, scope: !12507, file: !3, line: 2718, type: !828)
!12509 = !DILocation(line: 2718, column: 36, scope: !12507)
!12510 = !DILocalVariable(name: "v", arg: 2, scope: !12507, file: !3, line: 2718, type: !197)
!12511 = !DILocation(line: 2718, column: 45, scope: !12507)
!12512 = !DILocation(line: 2720, column: 24, scope: !12507)
!12513 = !DILocation(line: 2720, column: 27, scope: !12507)
!12514 = !DILocation(line: 2720, column: 30, scope: !12507)
!12515 = !DILocation(line: 2720, column: 9, scope: !12507)
!12516 = !DILocation(line: 2720, column: 2, scope: !12507)
!12517 = distinct !DISubprogram(name: "proc_show_rdrv_40", scope: !3, file: !3, line: 2732, type: !873, scopeLine: 2733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12518 = !DILocalVariable(name: "m", arg: 1, scope: !12517, file: !3, line: 2732, type: !828)
!12519 = !DILocation(line: 2732, column: 36, scope: !12517)
!12520 = !DILocalVariable(name: "v", arg: 2, scope: !12517, file: !3, line: 2732, type: !197)
!12521 = !DILocation(line: 2732, column: 45, scope: !12517)
!12522 = !DILocation(line: 2734, column: 24, scope: !12517)
!12523 = !DILocation(line: 2734, column: 27, scope: !12517)
!12524 = !DILocation(line: 2734, column: 30, scope: !12517)
!12525 = !DILocation(line: 2734, column: 9, scope: !12517)
!12526 = !DILocation(line: 2734, column: 2, scope: !12517)
!12527 = distinct !DISubprogram(name: "make_local_pdev", scope: !3, file: !3, line: 2004, type: !12528, scopeLine: 2005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12528 = !DISubroutineType(types: !12529)
!12529 = !{!188, !182, !12530}
!12530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!12531 = !DILocalVariable(name: "adapter", arg: 1, scope: !12527, file: !3, line: 2004, type: !182)
!12532 = !DILocation(line: 2004, column: 28, scope: !12527)
!12533 = !DILocalVariable(name: "pdev", arg: 2, scope: !12527, file: !3, line: 2004, type: !12530)
!12534 = !DILocation(line: 2004, column: 54, scope: !12527)
!12535 = !DILocation(line: 2006, column: 10, scope: !12527)
!12536 = !DILocation(line: 2006, column: 3, scope: !12527)
!12537 = !DILocation(line: 2006, column: 8, scope: !12527)
!12538 = !DILocation(line: 2008, column: 7, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12527, file: !3, line: 2008, column: 6)
!12540 = !DILocation(line: 2008, column: 6, scope: !12539)
!12541 = !DILocation(line: 2008, column: 12, scope: !12539)
!12542 = !DILocation(line: 2008, column: 6, scope: !12527)
!12543 = !DILocation(line: 2008, column: 22, scope: !12539)
!12544 = !DILocation(line: 2010, column: 10, scope: !12527)
!12545 = !DILocation(line: 2010, column: 9, scope: !12527)
!12546 = !DILocation(line: 2010, column: 2, scope: !12527)
!12547 = !DILocation(line: 2010, column: 16, scope: !12527)
!12548 = !DILocation(line: 2010, column: 25, scope: !12527)
!12549 = !DILocation(line: 2012, column: 22, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12527, file: !3, line: 2012, column: 6)
!12551 = !DILocation(line: 2012, column: 21, scope: !12550)
!12552 = !DILocation(line: 2012, column: 29, scope: !12550)
!12553 = !DILocation(line: 2012, column: 6, scope: !12550)
!12554 = !DILocation(line: 2012, column: 52, scope: !12550)
!12555 = !DILocation(line: 2012, column: 6, scope: !12527)
!12556 = !DILocation(line: 2013, column: 10, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12550, file: !3, line: 2012, column: 58)
!12558 = !DILocation(line: 2013, column: 9, scope: !12557)
!12559 = !DILocation(line: 2013, column: 3, scope: !12557)
!12560 = !DILocation(line: 2014, column: 3, scope: !12557)
!12561 = !DILocation(line: 2017, column: 2, scope: !12527)
!12562 = !DILocation(line: 2018, column: 1, scope: !12527)
!12563 = distinct !DISubprogram(name: "mega_allocate_inquiry", scope: !3, file: !3, line: 2034, type: !12564, scopeLine: 2035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12564 = !DISubroutineType(types: !12565)
!12565 = !{!197, !7063, !253}
!12566 = !DILocalVariable(name: "dma_handle", arg: 1, scope: !12563, file: !3, line: 2034, type: !7063)
!12567 = !DILocation(line: 2034, column: 35, scope: !12563)
!12568 = !DILocalVariable(name: "pdev", arg: 2, scope: !12563, file: !3, line: 2034, type: !253)
!12569 = !DILocation(line: 2034, column: 63, scope: !12563)
!12570 = !DILocation(line: 2036, column: 29, scope: !12563)
!12571 = !DILocation(line: 2036, column: 35, scope: !12563)
!12572 = !DILocation(line: 2037, column: 7, scope: !12563)
!12573 = !DILocation(line: 2036, column: 9, scope: !12563)
!12574 = !DILocation(line: 2036, column: 2, scope: !12563)
!12575 = distinct !DISubprogram(name: "mega_adapinq", scope: !3, file: !3, line: 3966, type: !12576, scopeLine: 3967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12576 = !DISubroutineType(types: !12577)
!12577 = !{!188, !182, !240}
!12578 = !DILocalVariable(name: "adapter", arg: 1, scope: !12575, file: !3, line: 3966, type: !182)
!12579 = !DILocation(line: 3966, column: 25, scope: !12575)
!12580 = !DILocalVariable(name: "dma_handle", arg: 2, scope: !12575, file: !3, line: 3966, type: !240)
!12581 = !DILocation(line: 3966, column: 45, scope: !12575)
!12582 = !DILocalVariable(name: "mc", scope: !12575, file: !3, line: 3968, type: !5915)
!12583 = !DILocation(line: 3968, column: 12, scope: !12575)
!12584 = !DILocation(line: 3970, column: 2, scope: !12575)
!12585 = !DILocation(line: 3972, column: 6, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 3972, column: 6)
!12587 = !DILocation(line: 3972, column: 15, scope: !12586)
!12588 = !DILocation(line: 3972, column: 20, scope: !12586)
!12589 = !DILocation(line: 3972, column: 6, scope: !12575)
!12590 = !DILocation(line: 3973, column: 6, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 3972, column: 35)
!12592 = !DILocation(line: 3973, column: 10, scope: !12591)
!12593 = !DILocation(line: 3974, column: 6, scope: !12591)
!12594 = !DILocation(line: 3974, column: 13, scope: !12591)
!12595 = !DILocation(line: 3975, column: 6, scope: !12591)
!12596 = !DILocation(line: 3975, column: 16, scope: !12591)
!12597 = !DILocation(line: 3976, column: 2, scope: !12591)
!12598 = !DILocation(line: 3978, column: 6, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 3977, column: 7)
!12600 = !DILocation(line: 3978, column: 10, scope: !12599)
!12601 = !DILocation(line: 3981, column: 21, scope: !12575)
!12602 = !DILocation(line: 3981, column: 16, scope: !12575)
!12603 = !DILocation(line: 3981, column: 5, scope: !12575)
!12604 = !DILocation(line: 3981, column: 14, scope: !12575)
!12605 = !DILocation(line: 3983, column: 29, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 3983, column: 7)
!12607 = !DILocation(line: 3983, column: 7, scope: !12606)
!12608 = !DILocation(line: 3983, column: 49, scope: !12606)
!12609 = !DILocation(line: 3983, column: 7, scope: !12575)
!12610 = !DILocation(line: 3984, column: 3, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12606, file: !3, line: 3983, column: 56)
!12612 = !DILocation(line: 3987, column: 2, scope: !12575)
!12613 = !DILocation(line: 3988, column: 1, scope: !12575)
!12614 = distinct !DISubprogram(name: "mega_free_inquiry", scope: !3, file: !3, line: 2042, type: !12615, scopeLine: 2043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12615 = !DISubroutineType(types: !12616)
!12616 = !{null, !197, !240, !253}
!12617 = !DILocalVariable(name: "inquiry", arg: 1, scope: !12614, file: !3, line: 2042, type: !197)
!12618 = !DILocation(line: 2042, column: 25, scope: !12614)
!12619 = !DILocalVariable(name: "dma_handle", arg: 2, scope: !12614, file: !3, line: 2042, type: !240)
!12620 = !DILocation(line: 2042, column: 45, scope: !12614)
!12621 = !DILocalVariable(name: "pdev", arg: 3, scope: !12614, file: !3, line: 2042, type: !253)
!12622 = !DILocation(line: 2042, column: 73, scope: !12614)
!12623 = !DILocation(line: 2044, column: 21, scope: !12614)
!12624 = !DILocation(line: 2044, column: 27, scope: !12614)
!12625 = !DILocation(line: 2044, column: 55, scope: !12614)
!12626 = !DILocation(line: 2045, column: 6, scope: !12614)
!12627 = !DILocation(line: 2044, column: 2, scope: !12614)
!12628 = !DILocation(line: 2046, column: 1, scope: !12614)
!12629 = distinct !DISubprogram(name: "free_local_pdev", scope: !3, file: !3, line: 2021, type: !4973, scopeLine: 2022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12630 = !DILocalVariable(name: "pdev", arg: 1, scope: !12629, file: !3, line: 2021, type: !253)
!12631 = !DILocation(line: 2021, column: 33, scope: !12629)
!12632 = !DILocation(line: 2023, column: 8, scope: !12629)
!12633 = !DILocation(line: 2023, column: 2, scope: !12629)
!12634 = !DILocation(line: 2024, column: 1, scope: !12629)
!12635 = distinct !DISubprogram(name: "proc_show_pdrv", scope: !3, file: !3, line: 2333, type: !12636, scopeLine: 2334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12636 = !DISubroutineType(types: !12637)
!12637 = !{!188, !828, !182, !188}
!12638 = !DILocalVariable(name: "m", arg: 1, scope: !12635, file: !3, line: 2333, type: !828)
!12639 = !DILocation(line: 2333, column: 33, scope: !12635)
!12640 = !DILocalVariable(name: "adapter", arg: 2, scope: !12635, file: !3, line: 2333, type: !182)
!12641 = !DILocation(line: 2333, column: 47, scope: !12635)
!12642 = !DILocalVariable(name: "channel", arg: 3, scope: !12635, file: !3, line: 2333, type: !188)
!12643 = !DILocation(line: 2333, column: 60, scope: !12635)
!12644 = !DILocalVariable(name: "dma_handle", scope: !12635, file: !3, line: 2335, type: !240)
!12645 = !DILocation(line: 2335, column: 13, scope: !12635)
!12646 = !DILocalVariable(name: "scsi_inq", scope: !12635, file: !3, line: 2336, type: !399)
!12647 = !DILocation(line: 2336, column: 9, scope: !12635)
!12648 = !DILocalVariable(name: "scsi_inq_dma_handle", scope: !12635, file: !3, line: 2337, type: !240)
!12649 = !DILocation(line: 2337, column: 13, scope: !12635)
!12650 = !DILocalVariable(name: "inquiry", scope: !12635, file: !3, line: 2338, type: !12266)
!12651 = !DILocation(line: 2338, column: 11, scope: !12635)
!12652 = !DILocalVariable(name: "pdev", scope: !12635, file: !3, line: 2339, type: !253)
!12653 = !DILocation(line: 2339, column: 18, scope: !12635)
!12654 = !DILocalVariable(name: "pdrv_state", scope: !12635, file: !3, line: 2340, type: !5551)
!12655 = !DILocation(line: 2340, column: 6, scope: !12635)
!12656 = !DILocalVariable(name: "state", scope: !12635, file: !3, line: 2341, type: !213)
!12657 = !DILocation(line: 2341, column: 5, scope: !12635)
!12658 = !DILocalVariable(name: "tgt", scope: !12635, file: !3, line: 2342, type: !188)
!12659 = !DILocation(line: 2342, column: 6, scope: !12635)
!12660 = !DILocalVariable(name: "max_channels", scope: !12635, file: !3, line: 2343, type: !188)
!12661 = !DILocation(line: 2343, column: 6, scope: !12635)
!12662 = !DILocalVariable(name: "i", scope: !12635, file: !3, line: 2344, type: !188)
!12663 = !DILocation(line: 2344, column: 6, scope: !12635)
!12664 = !DILocation(line: 2346, column: 22, scope: !12665)
!12665 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 2346, column: 6)
!12666 = !DILocation(line: 2346, column: 6, scope: !12665)
!12667 = !DILocation(line: 2346, column: 38, scope: !12665)
!12668 = !DILocation(line: 2346, column: 6, scope: !12635)
!12669 = !DILocation(line: 2347, column: 3, scope: !12665)
!12670 = !DILocation(line: 2349, column: 52, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 2349, column: 6)
!12672 = !DILocation(line: 2349, column: 17, scope: !12671)
!12673 = !DILocation(line: 2349, column: 15, scope: !12671)
!12674 = !DILocation(line: 2349, column: 59, scope: !12671)
!12675 = !DILocation(line: 2349, column: 6, scope: !12635)
!12676 = !DILocation(line: 2350, column: 3, scope: !12671)
!12677 = !DILocation(line: 2352, column: 19, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 2352, column: 6)
!12679 = !DILocation(line: 2352, column: 28, scope: !12678)
!12680 = !DILocation(line: 2352, column: 6, scope: !12678)
!12681 = !DILocation(line: 2352, column: 40, scope: !12678)
!12682 = !DILocation(line: 2352, column: 6, scope: !12635)
!12683 = !DILocation(line: 2353, column: 12, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12678, file: !3, line: 2352, column: 47)
!12685 = !DILocation(line: 2353, column: 3, scope: !12684)
!12686 = !DILocation(line: 2354, column: 3, scope: !12684)
!12687 = !DILocation(line: 2355, column: 3, scope: !12684)
!12688 = !DILocation(line: 2359, column: 33, scope: !12635)
!12689 = !DILocation(line: 2359, column: 39, scope: !12635)
!12690 = !DILocation(line: 2359, column: 13, scope: !12635)
!12691 = !DILocation(line: 2359, column: 11, scope: !12635)
!12692 = !DILocation(line: 2361, column: 6, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 2361, column: 6)
!12694 = !DILocation(line: 2361, column: 15, scope: !12693)
!12695 = !DILocation(line: 2361, column: 6, scope: !12635)
!12696 = !DILocation(line: 2362, column: 12, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12693, file: !3, line: 2361, column: 25)
!12698 = !DILocation(line: 2362, column: 3, scope: !12697)
!12699 = !DILocation(line: 2363, column: 3, scope: !12697)
!12700 = !DILocation(line: 2366, column: 6, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 2366, column: 6)
!12702 = !DILocation(line: 2366, column: 15, scope: !12701)
!12703 = !DILocation(line: 2366, column: 20, scope: !12701)
!12704 = !DILocation(line: 2366, column: 6, scope: !12635)
!12705 = !DILocation(line: 2367, column: 34, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12701, file: !3, line: 2366, column: 35)
!12707 = !DILocation(line: 2367, column: 44, scope: !12706)
!12708 = !DILocation(line: 2367, column: 16, scope: !12706)
!12709 = !DILocation(line: 2367, column: 14, scope: !12706)
!12710 = !DILocation(line: 2368, column: 2, scope: !12706)
!12711 = !DILocation(line: 2370, column: 38, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12701, file: !3, line: 2369, column: 7)
!12713 = !DILocation(line: 2371, column: 4, scope: !12712)
!12714 = !DILocation(line: 2371, column: 13, scope: !12712)
!12715 = !DILocation(line: 2371, column: 23, scope: !12712)
!12716 = !DILocation(line: 2370, column: 16, scope: !12712)
!12717 = !DILocation(line: 2370, column: 14, scope: !12712)
!12718 = !DILocation(line: 2374, column: 17, scope: !12635)
!12719 = !DILocation(line: 2374, column: 26, scope: !12635)
!12720 = !DILocation(line: 2374, column: 39, scope: !12635)
!12721 = !DILocation(line: 2374, column: 15, scope: !12635)
!12722 = !DILocation(line: 2376, column: 6, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 2376, column: 6)
!12724 = !DILocation(line: 2376, column: 17, scope: !12723)
!12725 = !DILocation(line: 2376, column: 14, scope: !12723)
!12726 = !DILocation(line: 2376, column: 6, scope: !12635)
!12727 = !DILocation(line: 2377, column: 3, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12723, file: !3, line: 2376, column: 32)
!12729 = !DILocation(line: 2380, column: 11, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 2380, column: 2)
!12731 = !DILocation(line: 2380, column: 7, scope: !12730)
!12732 = !DILocation(line: 2380, column: 16, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12730, file: !3, line: 2380, column: 2)
!12734 = !DILocation(line: 2380, column: 20, scope: !12733)
!12735 = !DILocation(line: 2380, column: 2, scope: !12730)
!12736 = !DILocation(line: 2382, column: 7, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12733, file: !3, line: 2380, column: 43)
!12738 = !DILocation(line: 2382, column: 14, scope: !12737)
!12739 = !DILocation(line: 2382, column: 20, scope: !12737)
!12740 = !DILocation(line: 2382, column: 18, scope: !12737)
!12741 = !DILocation(line: 2382, column: 5, scope: !12737)
!12742 = !DILocation(line: 2384, column: 13, scope: !12737)
!12743 = !DILocation(line: 2384, column: 26, scope: !12737)
!12744 = !DILocation(line: 2384, column: 24, scope: !12737)
!12745 = !DILocation(line: 2384, column: 11, scope: !12737)
!12746 = !DILocation(line: 2384, column: 9, scope: !12737)
!12747 = !DILocation(line: 2385, column: 11, scope: !12737)
!12748 = !DILocation(line: 2385, column: 17, scope: !12737)
!12749 = !DILocation(line: 2385, column: 3, scope: !12737)
!12750 = !DILocation(line: 2387, column: 15, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12737, file: !3, line: 2385, column: 26)
!12752 = !DILocation(line: 2388, column: 8, scope: !12751)
!12753 = !DILocation(line: 2388, column: 17, scope: !12751)
!12754 = !DILocation(line: 2387, column: 4, scope: !12751)
!12755 = !DILocation(line: 2389, column: 4, scope: !12751)
!12756 = !DILocation(line: 2392, column: 15, scope: !12751)
!12757 = !DILocation(line: 2393, column: 8, scope: !12751)
!12758 = !DILocation(line: 2393, column: 17, scope: !12751)
!12759 = !DILocation(line: 2392, column: 4, scope: !12751)
!12760 = !DILocation(line: 2394, column: 4, scope: !12751)
!12761 = !DILocation(line: 2397, column: 15, scope: !12751)
!12762 = !DILocation(line: 2398, column: 8, scope: !12751)
!12763 = !DILocation(line: 2398, column: 17, scope: !12751)
!12764 = !DILocation(line: 2397, column: 4, scope: !12751)
!12765 = !DILocation(line: 2399, column: 4, scope: !12751)
!12766 = !DILocation(line: 2402, column: 15, scope: !12751)
!12767 = !DILocation(line: 2403, column: 8, scope: !12751)
!12768 = !DILocation(line: 2403, column: 17, scope: !12751)
!12769 = !DILocation(line: 2402, column: 4, scope: !12751)
!12770 = !DILocation(line: 2404, column: 4, scope: !12751)
!12771 = !DILocation(line: 2407, column: 15, scope: !12751)
!12772 = !DILocation(line: 2408, column: 8, scope: !12751)
!12773 = !DILocation(line: 2408, column: 17, scope: !12751)
!12774 = !DILocation(line: 2407, column: 4, scope: !12751)
!12775 = !DILocation(line: 2409, column: 4, scope: !12751)
!12776 = !DILocation(line: 2417, column: 10, scope: !12737)
!12777 = !DILocation(line: 2417, column: 3, scope: !12737)
!12778 = !DILocation(line: 2418, column: 33, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12737, file: !3, line: 2418, column: 7)
!12780 = !DILocation(line: 2418, column: 42, scope: !12779)
!12781 = !DILocation(line: 2418, column: 51, scope: !12779)
!12782 = !DILocation(line: 2419, column: 5, scope: !12779)
!12783 = !DILocation(line: 2418, column: 7, scope: !12779)
!12784 = !DILocation(line: 2419, column: 26, scope: !12779)
!12785 = !DILocation(line: 2420, column: 6, scope: !12779)
!12786 = !DILocation(line: 2420, column: 18, scope: !12779)
!12787 = !DILocation(line: 2420, column: 26, scope: !12779)
!12788 = !DILocation(line: 2418, column: 7, scope: !12737)
!12789 = !DILocation(line: 2421, column: 4, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12779, file: !3, line: 2420, column: 41)
!12791 = !DILocation(line: 2428, column: 12, scope: !12737)
!12792 = !DILocation(line: 2428, column: 3, scope: !12737)
!12793 = !DILocation(line: 2429, column: 22, scope: !12737)
!12794 = !DILocation(line: 2429, column: 25, scope: !12737)
!12795 = !DILocation(line: 2429, column: 3, scope: !12737)
!12796 = !DILocation(line: 2430, column: 2, scope: !12737)
!12797 = !DILocation(line: 2380, column: 38, scope: !12733)
!12798 = !DILocation(line: 2380, column: 2, scope: !12733)
!12799 = distinct !{!12799, !12735, !12800}
!12800 = !DILocation(line: 2430, column: 2, scope: !12730)
!12801 = !DILabel(scope: !12635, name: "free_pci", file: !3, line: 2432)
!12802 = !DILocation(line: 2432, column: 1, scope: !12635)
!12803 = !DILocation(line: 2433, column: 21, scope: !12635)
!12804 = !DILocation(line: 2433, column: 27, scope: !12635)
!12805 = !DILocation(line: 2433, column: 37, scope: !12635)
!12806 = !DILocation(line: 2433, column: 47, scope: !12635)
!12807 = !DILocation(line: 2433, column: 2, scope: !12635)
!12808 = !DILabel(scope: !12635, name: "free_inquiry", file: !3, line: 2434)
!12809 = !DILocation(line: 2434, column: 1, scope: !12635)
!12810 = !DILocation(line: 2435, column: 20, scope: !12635)
!12811 = !DILocation(line: 2435, column: 29, scope: !12635)
!12812 = !DILocation(line: 2435, column: 41, scope: !12635)
!12813 = !DILocation(line: 2435, column: 2, scope: !12635)
!12814 = !DILabel(scope: !12635, name: "free_pdev", file: !3, line: 2436)
!12815 = !DILocation(line: 2436, column: 1, scope: !12635)
!12816 = !DILocation(line: 2437, column: 18, scope: !12635)
!12817 = !DILocation(line: 2437, column: 2, scope: !12635)
!12818 = !DILocation(line: 2438, column: 2, scope: !12635)
!12819 = !DILocation(line: 2439, column: 1, scope: !12635)
!12820 = distinct !DISubprogram(name: "mega_internal_dev_inquiry", scope: !3, file: !3, line: 4001, type: !12821, scopeLine: 4003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12821 = !DISubroutineType(types: !12822)
!12822 = !{!188, !182, !213, !213, !240}
!12823 = !DILocalVariable(name: "adapter", arg: 1, scope: !12820, file: !3, line: 4001, type: !182)
!12824 = !DILocation(line: 4001, column: 38, scope: !12820)
!12825 = !DILocalVariable(name: "ch", arg: 2, scope: !12820, file: !3, line: 4001, type: !213)
!12826 = !DILocation(line: 4001, column: 50, scope: !12820)
!12827 = !DILocalVariable(name: "tgt", arg: 3, scope: !12820, file: !3, line: 4001, type: !213)
!12828 = !DILocation(line: 4001, column: 57, scope: !12820)
!12829 = !DILocalVariable(name: "buf_dma_handle", arg: 4, scope: !12820, file: !3, line: 4002, type: !240)
!12830 = !DILocation(line: 4002, column: 14, scope: !12820)
!12831 = !DILocalVariable(name: "pthru", scope: !12820, file: !3, line: 4004, type: !5613)
!12832 = !DILocation(line: 4004, column: 17, scope: !12820)
!12833 = !DILocalVariable(name: "pthru_dma_handle", scope: !12820, file: !3, line: 4005, type: !240)
!12834 = !DILocation(line: 4005, column: 13, scope: !12820)
!12835 = !DILocalVariable(name: "mc", scope: !12820, file: !3, line: 4006, type: !5915)
!12836 = !DILocation(line: 4006, column: 12, scope: !12820)
!12837 = !DILocalVariable(name: "rval", scope: !12820, file: !3, line: 4007, type: !188)
!12838 = !DILocation(line: 4007, column: 7, scope: !12820)
!12839 = !DILocalVariable(name: "pdev", scope: !12820, file: !3, line: 4008, type: !253)
!12840 = !DILocation(line: 4008, column: 18, scope: !12820)
!12841 = !DILocation(line: 4015, column: 22, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12820, file: !3, line: 4015, column: 6)
!12843 = !DILocation(line: 4015, column: 6, scope: !12842)
!12844 = !DILocation(line: 4015, column: 38, scope: !12842)
!12845 = !DILocation(line: 4015, column: 6, scope: !12820)
!12846 = !DILocation(line: 4015, column: 45, scope: !12842)
!12847 = !DILocation(line: 4017, column: 30, scope: !12820)
!12848 = !DILocation(line: 4017, column: 36, scope: !12820)
!12849 = !DILocation(line: 4017, column: 10, scope: !12820)
!12850 = !DILocation(line: 4017, column: 8, scope: !12820)
!12851 = !DILocation(line: 4020, column: 6, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12820, file: !3, line: 4020, column: 6)
!12853 = !DILocation(line: 4020, column: 12, scope: !12852)
!12854 = !DILocation(line: 4020, column: 6, scope: !12820)
!12855 = !DILocation(line: 4021, column: 19, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12852, file: !3, line: 4020, column: 22)
!12857 = !DILocation(line: 4021, column: 3, scope: !12856)
!12858 = !DILocation(line: 4022, column: 3, scope: !12856)
!12859 = !DILocation(line: 4025, column: 2, scope: !12820)
!12860 = !DILocation(line: 4025, column: 9, scope: !12820)
!12861 = !DILocation(line: 4025, column: 17, scope: !12820)
!12862 = !DILocation(line: 4026, column: 2, scope: !12820)
!12863 = !DILocation(line: 4026, column: 9, scope: !12820)
!12864 = !DILocation(line: 4026, column: 13, scope: !12820)
!12865 = !DILocation(line: 4027, column: 2, scope: !12820)
!12866 = !DILocation(line: 4027, column: 9, scope: !12820)
!12867 = !DILocation(line: 4027, column: 21, scope: !12820)
!12868 = !DILocation(line: 4028, column: 2, scope: !12820)
!12869 = !DILocation(line: 4028, column: 9, scope: !12820)
!12870 = !DILocation(line: 4028, column: 19, scope: !12820)
!12871 = !DILocation(line: 4030, column: 20, scope: !12820)
!12872 = !DILocation(line: 4030, column: 29, scope: !12820)
!12873 = !DILocation(line: 4030, column: 34, scope: !12820)
!12874 = !DILocation(line: 4030, column: 19, scope: !12820)
!12875 = !DILocation(line: 4030, column: 54, scope: !12820)
!12876 = !DILocation(line: 4030, column: 2, scope: !12820)
!12877 = !DILocation(line: 4030, column: 9, scope: !12820)
!12878 = !DILocation(line: 4030, column: 17, scope: !12820)
!12879 = !DILocation(line: 4032, column: 19, scope: !12820)
!12880 = !DILocation(line: 4032, column: 28, scope: !12820)
!12881 = !DILocation(line: 4032, column: 33, scope: !12820)
!12882 = !DILocation(line: 4032, column: 18, scope: !12820)
!12883 = !DILocation(line: 4032, column: 50, scope: !12820)
!12884 = !DILocation(line: 4032, column: 53, scope: !12820)
!12885 = !DILocation(line: 4032, column: 59, scope: !12820)
!12886 = !DILocation(line: 4032, column: 58, scope: !12820)
!12887 = !DILocation(line: 4032, column: 65, scope: !12820)
!12888 = !DILocation(line: 4032, column: 2, scope: !12820)
!12889 = !DILocation(line: 4032, column: 9, scope: !12820)
!12890 = !DILocation(line: 4032, column: 16, scope: !12820)
!12891 = !DILocation(line: 4034, column: 2, scope: !12820)
!12892 = !DILocation(line: 4034, column: 9, scope: !12820)
!12893 = !DILocation(line: 4034, column: 16, scope: !12820)
!12894 = !DILocation(line: 4036, column: 2, scope: !12820)
!12895 = !DILocation(line: 4036, column: 9, scope: !12820)
!12896 = !DILocation(line: 4036, column: 16, scope: !12820)
!12897 = !DILocation(line: 4037, column: 2, scope: !12820)
!12898 = !DILocation(line: 4037, column: 9, scope: !12820)
!12899 = !DILocation(line: 4037, column: 16, scope: !12820)
!12900 = !DILocation(line: 4038, column: 2, scope: !12820)
!12901 = !DILocation(line: 4038, column: 9, scope: !12820)
!12902 = !DILocation(line: 4038, column: 16, scope: !12820)
!12903 = !DILocation(line: 4039, column: 2, scope: !12820)
!12904 = !DILocation(line: 4039, column: 9, scope: !12820)
!12905 = !DILocation(line: 4039, column: 16, scope: !12820)
!12906 = !DILocation(line: 4040, column: 2, scope: !12820)
!12907 = !DILocation(line: 4040, column: 9, scope: !12820)
!12908 = !DILocation(line: 4040, column: 16, scope: !12820)
!12909 = !DILocation(line: 4041, column: 2, scope: !12820)
!12910 = !DILocation(line: 4041, column: 9, scope: !12820)
!12911 = !DILocation(line: 4041, column: 16, scope: !12820)
!12912 = !DILocation(line: 4044, column: 29, scope: !12820)
!12913 = !DILocation(line: 4044, column: 24, scope: !12820)
!12914 = !DILocation(line: 4044, column: 2, scope: !12820)
!12915 = !DILocation(line: 4044, column: 9, scope: !12820)
!12916 = !DILocation(line: 4044, column: 22, scope: !12820)
!12917 = !DILocation(line: 4045, column: 2, scope: !12820)
!12918 = !DILocation(line: 4045, column: 9, scope: !12820)
!12919 = !DILocation(line: 4045, column: 21, scope: !12820)
!12920 = !DILocation(line: 4047, column: 2, scope: !12820)
!12921 = !DILocation(line: 4049, column: 5, scope: !12820)
!12922 = !DILocation(line: 4049, column: 9, scope: !12820)
!12923 = !DILocation(line: 4050, column: 21, scope: !12820)
!12924 = !DILocation(line: 4050, column: 16, scope: !12820)
!12925 = !DILocation(line: 4050, column: 5, scope: !12820)
!12926 = !DILocation(line: 4050, column: 14, scope: !12820)
!12927 = !DILocation(line: 4052, column: 31, scope: !12820)
!12928 = !DILocation(line: 4052, column: 45, scope: !12820)
!12929 = !DILocation(line: 4052, column: 9, scope: !12820)
!12930 = !DILocation(line: 4052, column: 7, scope: !12820)
!12931 = !DILocation(line: 4054, column: 21, scope: !12820)
!12932 = !DILocation(line: 4054, column: 27, scope: !12820)
!12933 = !DILocation(line: 4054, column: 55, scope: !12820)
!12934 = !DILocation(line: 4055, column: 6, scope: !12820)
!12935 = !DILocation(line: 4054, column: 2, scope: !12820)
!12936 = !DILocation(line: 4057, column: 18, scope: !12820)
!12937 = !DILocation(line: 4057, column: 2, scope: !12820)
!12938 = !DILocation(line: 4059, column: 9, scope: !12820)
!12939 = !DILocation(line: 4059, column: 2, scope: !12820)
!12940 = !DILocation(line: 4060, column: 1, scope: !12820)
!12941 = distinct !DISubprogram(name: "mega_print_inquiry", scope: !3, file: !3, line: 2300, type: !12942, scopeLine: 2301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12942 = !DISubroutineType(types: !12943)
!12943 = !{null, !828, !399}
!12944 = !DILocalVariable(name: "m", arg: 1, scope: !12941, file: !3, line: 2300, type: !828)
!12945 = !DILocation(line: 2300, column: 37, scope: !12941)
!12946 = !DILocalVariable(name: "scsi_inq", arg: 2, scope: !12941, file: !3, line: 2300, type: !399)
!12947 = !DILocation(line: 2300, column: 46, scope: !12941)
!12948 = !DILocalVariable(name: "i", scope: !12941, file: !3, line: 2302, type: !188)
!12949 = !DILocation(line: 2302, column: 6, scope: !12941)
!12950 = !DILocation(line: 2304, column: 11, scope: !12941)
!12951 = !DILocation(line: 2304, column: 2, scope: !12941)
!12952 = !DILocation(line: 2305, column: 12, scope: !12941)
!12953 = !DILocation(line: 2305, column: 15, scope: !12941)
!12954 = !DILocation(line: 2305, column: 24, scope: !12941)
!12955 = !DILocation(line: 2305, column: 2, scope: !12941)
!12956 = !DILocation(line: 2306, column: 11, scope: !12941)
!12957 = !DILocation(line: 2306, column: 2, scope: !12941)
!12958 = !DILocation(line: 2307, column: 12, scope: !12941)
!12959 = !DILocation(line: 2307, column: 15, scope: !12941)
!12960 = !DILocation(line: 2307, column: 24, scope: !12941)
!12961 = !DILocation(line: 2307, column: 2, scope: !12941)
!12962 = !DILocation(line: 2308, column: 11, scope: !12941)
!12963 = !DILocation(line: 2308, column: 2, scope: !12941)
!12964 = !DILocation(line: 2309, column: 12, scope: !12941)
!12965 = !DILocation(line: 2309, column: 15, scope: !12941)
!12966 = !DILocation(line: 2309, column: 24, scope: !12941)
!12967 = !DILocation(line: 2309, column: 2, scope: !12941)
!12968 = !DILocation(line: 2310, column: 11, scope: !12941)
!12969 = !DILocation(line: 2310, column: 2, scope: !12941)
!12970 = !DILocation(line: 2312, column: 6, scope: !12941)
!12971 = !DILocation(line: 2312, column: 18, scope: !12941)
!12972 = !DILocation(line: 2312, column: 4, scope: !12941)
!12973 = !DILocation(line: 2313, column: 13, scope: !12941)
!12974 = !DILocation(line: 2313, column: 50, scope: !12941)
!12975 = !DILocation(line: 2313, column: 33, scope: !12941)
!12976 = !DILocation(line: 2313, column: 2, scope: !12941)
!12977 = !DILocation(line: 2315, column: 13, scope: !12941)
!12978 = !DILocation(line: 2316, column: 6, scope: !12941)
!12979 = !DILocation(line: 2316, column: 18, scope: !12941)
!12980 = !DILocation(line: 2315, column: 2, scope: !12941)
!12981 = !DILocation(line: 2318, column: 7, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12941, file: !3, line: 2318, column: 6)
!12983 = !DILocation(line: 2318, column: 19, scope: !12982)
!12984 = !DILocation(line: 2318, column: 27, scope: !12982)
!12985 = !DILocation(line: 2318, column: 32, scope: !12982)
!12986 = !DILocation(line: 2318, column: 36, scope: !12982)
!12987 = !DILocation(line: 2318, column: 48, scope: !12982)
!12988 = !DILocation(line: 2318, column: 56, scope: !12982)
!12989 = !DILocation(line: 2318, column: 6, scope: !12941)
!12990 = !DILocation(line: 2319, column: 12, scope: !12982)
!12991 = !DILocation(line: 2319, column: 3, scope: !12982)
!12992 = !DILocation(line: 2321, column: 12, scope: !12982)
!12993 = !DILocation(line: 2321, column: 3, scope: !12982)
!12994 = !DILocation(line: 2322, column: 1, scope: !12941)
!12995 = distinct !DISubprogram(name: "proc_show_rdrv", scope: !3, file: !3, line: 2508, type: !12996, scopeLine: 2509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12996 = !DISubroutineType(types: !12997)
!12997 = !{!188, !828, !182, !188, !188}
!12998 = !DILocalVariable(name: "m", arg: 1, scope: !12995, file: !3, line: 2508, type: !828)
!12999 = !DILocation(line: 2508, column: 33, scope: !12995)
!13000 = !DILocalVariable(name: "adapter", arg: 2, scope: !12995, file: !3, line: 2508, type: !182)
!13001 = !DILocation(line: 2508, column: 47, scope: !12995)
!13002 = !DILocalVariable(name: "start", arg: 3, scope: !12995, file: !3, line: 2508, type: !188)
!13003 = !DILocation(line: 2508, column: 60, scope: !12995)
!13004 = !DILocalVariable(name: "end", arg: 4, scope: !12995, file: !3, line: 2508, type: !188)
!13005 = !DILocation(line: 2508, column: 71, scope: !12995)
!13006 = !DILocalVariable(name: "dma_handle", scope: !12995, file: !3, line: 2510, type: !240)
!13007 = !DILocation(line: 2510, column: 13, scope: !12995)
!13008 = !DILocalVariable(name: "lparam", scope: !12995, file: !3, line: 2511, type: !13009)
!13009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5857, size: 64)
!13010 = !DILocation(line: 2511, column: 16, scope: !12995)
!13011 = !DILocalVariable(name: "mc", scope: !12995, file: !3, line: 2512, type: !5915)
!13012 = !DILocation(line: 2512, column: 12, scope: !12995)
!13013 = !DILocalVariable(name: "disk_array", scope: !12995, file: !3, line: 2513, type: !399)
!13014 = !DILocation(line: 2513, column: 9, scope: !12995)
!13015 = !DILocalVariable(name: "disk_array_dma_handle", scope: !12995, file: !3, line: 2514, type: !240)
!13016 = !DILocation(line: 2514, column: 13, scope: !12995)
!13017 = !DILocalVariable(name: "inquiry", scope: !12995, file: !3, line: 2515, type: !12266)
!13018 = !DILocation(line: 2515, column: 11, scope: !12995)
!13019 = !DILocalVariable(name: "pdev", scope: !12995, file: !3, line: 2516, type: !253)
!13020 = !DILocation(line: 2516, column: 18, scope: !12995)
!13021 = !DILocalVariable(name: "rdrv_state", scope: !12995, file: !3, line: 2517, type: !5551)
!13022 = !DILocation(line: 2517, column: 6, scope: !12995)
!13023 = !DILocalVariable(name: "num_ldrv", scope: !12995, file: !3, line: 2518, type: !188)
!13024 = !DILocation(line: 2518, column: 6, scope: !12995)
!13025 = !DILocalVariable(name: "array_sz", scope: !12995, file: !3, line: 2519, type: !190)
!13026 = !DILocation(line: 2519, column: 6, scope: !12995)
!13027 = !DILocalVariable(name: "i", scope: !12995, file: !3, line: 2520, type: !188)
!13028 = !DILocation(line: 2520, column: 6, scope: !12995)
!13029 = !DILocation(line: 2522, column: 22, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !12995, file: !3, line: 2522, column: 6)
!13031 = !DILocation(line: 2522, column: 6, scope: !13030)
!13032 = !DILocation(line: 2522, column: 38, scope: !13030)
!13033 = !DILocation(line: 2522, column: 6, scope: !12995)
!13034 = !DILocation(line: 2523, column: 3, scope: !13030)
!13035 = !DILocation(line: 2525, column: 52, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !12995, file: !3, line: 2525, column: 6)
!13037 = !DILocation(line: 2525, column: 17, scope: !13036)
!13038 = !DILocation(line: 2525, column: 15, scope: !13036)
!13039 = !DILocation(line: 2525, column: 59, scope: !13036)
!13040 = !DILocation(line: 2525, column: 6, scope: !12995)
!13041 = !DILocation(line: 2526, column: 3, scope: !13036)
!13042 = !DILocation(line: 2528, column: 19, scope: !13043)
!13043 = distinct !DILexicalBlock(scope: !12995, file: !3, line: 2528, column: 6)
!13044 = !DILocation(line: 2528, column: 28, scope: !13043)
!13045 = !DILocation(line: 2528, column: 6, scope: !13043)
!13046 = !DILocation(line: 2528, column: 40, scope: !13043)
!13047 = !DILocation(line: 2528, column: 6, scope: !12995)
!13048 = !DILocation(line: 2529, column: 12, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !13043, file: !3, line: 2528, column: 47)
!13050 = !DILocation(line: 2529, column: 3, scope: !13049)
!13051 = !DILocation(line: 2530, column: 3, scope: !13049)
!13052 = !DILocation(line: 2531, column: 3, scope: !13049)
!13053 = !DILocation(line: 2534, column: 2, scope: !12995)
!13054 = !DILocation(line: 2536, column: 6, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !12995, file: !3, line: 2536, column: 6)
!13056 = !DILocation(line: 2536, column: 15, scope: !13055)
!13057 = !DILocation(line: 2536, column: 20, scope: !13055)
!13058 = !DILocation(line: 2536, column: 6, scope: !12995)
!13059 = !DILocation(line: 2537, column: 12, scope: !13060)
!13060 = distinct !DILexicalBlock(scope: !13055, file: !3, line: 2536, column: 35)
!13061 = !DILocation(line: 2539, column: 34, scope: !13060)
!13062 = !DILocation(line: 2539, column: 44, scope: !13060)
!13063 = !DILocation(line: 2539, column: 16, scope: !13060)
!13064 = !DILocation(line: 2539, column: 14, scope: !13060)
!13065 = !DILocation(line: 2541, column: 32, scope: !13060)
!13066 = !DILocation(line: 2541, column: 42, scope: !13060)
!13067 = !DILocation(line: 2541, column: 14, scope: !13060)
!13068 = !DILocation(line: 2541, column: 12, scope: !13060)
!13069 = !DILocation(line: 2542, column: 2, scope: !13060)
!13070 = !DILocation(line: 2544, column: 12, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13055, file: !3, line: 2543, column: 7)
!13072 = !DILocation(line: 2546, column: 38, scope: !13071)
!13073 = !DILocation(line: 2547, column: 4, scope: !13071)
!13074 = !DILocation(line: 2547, column: 13, scope: !13071)
!13075 = !DILocation(line: 2547, column: 25, scope: !13071)
!13076 = !DILocation(line: 2546, column: 16, scope: !13071)
!13077 = !DILocation(line: 2546, column: 14, scope: !13071)
!13078 = !DILocation(line: 2549, column: 36, scope: !13071)
!13079 = !DILocation(line: 2550, column: 4, scope: !13071)
!13080 = !DILocation(line: 2550, column: 13, scope: !13071)
!13081 = !DILocation(line: 2550, column: 25, scope: !13071)
!13082 = !DILocation(line: 2549, column: 14, scope: !13071)
!13083 = !DILocation(line: 2549, column: 12, scope: !13071)
!13084 = !DILocation(line: 2553, column: 35, scope: !12995)
!13085 = !DILocation(line: 2553, column: 41, scope: !12995)
!13086 = !DILocation(line: 2553, column: 46, scope: !12995)
!13087 = !DILocation(line: 2553, column: 15, scope: !12995)
!13088 = !DILocation(line: 2553, column: 13, scope: !12995)
!13089 = !DILocation(line: 2556, column: 6, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !12995, file: !3, line: 2556, column: 6)
!13091 = !DILocation(line: 2556, column: 17, scope: !13090)
!13092 = !DILocation(line: 2556, column: 6, scope: !12995)
!13093 = !DILocation(line: 2557, column: 12, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13090, file: !3, line: 2556, column: 27)
!13095 = !DILocation(line: 2557, column: 3, scope: !13094)
!13096 = !DILocation(line: 2558, column: 3, scope: !13094)
!13097 = !DILocation(line: 2561, column: 21, scope: !12995)
!13098 = !DILocation(line: 2561, column: 16, scope: !12995)
!13099 = !DILocation(line: 2561, column: 5, scope: !12995)
!13100 = !DILocation(line: 2561, column: 14, scope: !12995)
!13101 = !DILocation(line: 2563, column: 6, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !12995, file: !3, line: 2563, column: 6)
!13103 = !DILocation(line: 2563, column: 15, scope: !13102)
!13104 = !DILocation(line: 2563, column: 20, scope: !13102)
!13105 = !DILocation(line: 2563, column: 6, scope: !12995)
!13106 = !DILocation(line: 2564, column: 6, scope: !13107)
!13107 = distinct !DILexicalBlock(scope: !13102, file: !3, line: 2563, column: 35)
!13108 = !DILocation(line: 2564, column: 10, scope: !13107)
!13109 = !DILocation(line: 2565, column: 6, scope: !13107)
!13110 = !DILocation(line: 2565, column: 13, scope: !13107)
!13111 = !DILocation(line: 2567, column: 29, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13107, file: !3, line: 2567, column: 7)
!13113 = !DILocation(line: 2567, column: 7, scope: !13112)
!13114 = !DILocation(line: 2567, column: 7, scope: !13107)
!13115 = !DILocation(line: 2568, column: 13, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13112, file: !3, line: 2567, column: 51)
!13117 = !DILocation(line: 2568, column: 4, scope: !13116)
!13118 = !DILocation(line: 2569, column: 4, scope: !13116)
!13119 = !DILocation(line: 2572, column: 2, scope: !13107)
!13120 = !DILocation(line: 2574, column: 6, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13102, file: !3, line: 2573, column: 7)
!13122 = !DILocation(line: 2574, column: 10, scope: !13121)
!13123 = !DILocation(line: 2576, column: 29, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13121, file: !3, line: 2576, column: 7)
!13125 = !DILocation(line: 2576, column: 7, scope: !13124)
!13126 = !DILocation(line: 2576, column: 7, scope: !13121)
!13127 = !DILocation(line: 2577, column: 7, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13124, file: !3, line: 2576, column: 51)
!13129 = !DILocation(line: 2577, column: 11, scope: !13128)
!13130 = !DILocation(line: 2578, column: 30, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13128, file: !3, line: 2578, column: 8)
!13132 = !DILocation(line: 2578, column: 8, scope: !13131)
!13133 = !DILocation(line: 2578, column: 8, scope: !13128)
!13134 = !DILocation(line: 2579, column: 14, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13131, file: !3, line: 2578, column: 52)
!13136 = !DILocation(line: 2579, column: 5, scope: !13135)
!13137 = !DILocation(line: 2580, column: 5, scope: !13135)
!13138 = !DILocation(line: 2582, column: 3, scope: !13128)
!13139 = !DILocation(line: 2585, column: 11, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !12995, file: !3, line: 2585, column: 2)
!13141 = !DILocation(line: 2585, column: 9, scope: !13140)
!13142 = !DILocation(line: 2585, column: 7, scope: !13140)
!13143 = !DILocation(line: 2585, column: 18, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13140, file: !3, line: 2585, column: 2)
!13145 = !DILocation(line: 2585, column: 25, scope: !13144)
!13146 = !DILocation(line: 2585, column: 28, scope: !13144)
!13147 = !DILocation(line: 2585, column: 33, scope: !13144)
!13148 = !DILocation(line: 2585, column: 31, scope: !13144)
!13149 = !DILocation(line: 2585, column: 24, scope: !13144)
!13150 = !DILocation(line: 2585, column: 45, scope: !13144)
!13151 = !DILocation(line: 2585, column: 48, scope: !13144)
!13152 = !DILocation(line: 2585, column: 53, scope: !13144)
!13153 = !DILocation(line: 2585, column: 20, scope: !13144)
!13154 = !DILocation(line: 2585, column: 2, scope: !13140)
!13155 = !DILocation(line: 2587, column: 7, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 2587, column: 7)
!13157 = distinct !DILexicalBlock(scope: !13144, file: !3, line: 2585, column: 71)
!13158 = !DILocation(line: 2587, column: 16, scope: !13156)
!13159 = !DILocation(line: 2587, column: 21, scope: !13156)
!13160 = !DILocation(line: 2587, column: 7, scope: !13157)
!13161 = !DILocation(line: 2589, column: 25, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13156, file: !3, line: 2587, column: 36)
!13163 = !DILocation(line: 2589, column: 38, scope: !13162)
!13164 = !DILocation(line: 2589, column: 43, scope: !13162)
!13165 = !DILocation(line: 2589, column: 5, scope: !13162)
!13166 = !DILocation(line: 2589, column: 46, scope: !13162)
!13167 = !DILocation(line: 2588, column: 11, scope: !13162)
!13168 = !DILocation(line: 2590, column: 3, scope: !13162)
!13169 = !DILocation(line: 2593, column: 24, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13156, file: !3, line: 2591, column: 8)
!13171 = !DILocation(line: 2593, column: 37, scope: !13170)
!13172 = !DILocation(line: 2593, column: 42, scope: !13170)
!13173 = !DILocation(line: 2593, column: 5, scope: !13170)
!13174 = !DILocation(line: 2593, column: 45, scope: !13170)
!13175 = !DILocation(line: 2592, column: 11, scope: !13170)
!13176 = !DILocation(line: 2600, column: 14, scope: !13157)
!13177 = !DILocation(line: 2600, column: 41, scope: !13157)
!13178 = !DILocation(line: 2600, column: 3, scope: !13157)
!13179 = !DILocation(line: 2602, column: 11, scope: !13157)
!13180 = !DILocation(line: 2602, column: 22, scope: !13157)
!13181 = !DILocation(line: 2602, column: 25, scope: !13157)
!13182 = !DILocation(line: 2602, column: 3, scope: !13157)
!13183 = !DILocation(line: 2604, column: 13, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 2602, column: 34)
!13185 = !DILocation(line: 2604, column: 4, scope: !13184)
!13186 = !DILocation(line: 2605, column: 4, scope: !13184)
!13187 = !DILocation(line: 2607, column: 13, scope: !13184)
!13188 = !DILocation(line: 2607, column: 4, scope: !13184)
!13189 = !DILocation(line: 2608, column: 4, scope: !13184)
!13190 = !DILocation(line: 2610, column: 13, scope: !13184)
!13191 = !DILocation(line: 2610, column: 4, scope: !13184)
!13192 = !DILocation(line: 2611, column: 4, scope: !13184)
!13193 = !DILocation(line: 2613, column: 13, scope: !13184)
!13194 = !DILocation(line: 2613, column: 4, scope: !13184)
!13195 = !DILocation(line: 2614, column: 4, scope: !13184)
!13196 = !DILocation(line: 2616, column: 13, scope: !13184)
!13197 = !DILocation(line: 2616, column: 4, scope: !13184)
!13198 = !DILocation(line: 2617, column: 4, scope: !13184)
!13199 = !DILocation(line: 2624, column: 8, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 2624, column: 7)
!13201 = !DILocation(line: 2624, column: 19, scope: !13200)
!13202 = !DILocation(line: 2624, column: 22, scope: !13200)
!13203 = !DILocation(line: 2624, column: 30, scope: !13200)
!13204 = !DILocation(line: 2624, column: 7, scope: !13157)
!13205 = !DILocation(line: 2625, column: 13, scope: !13200)
!13206 = !DILocation(line: 2625, column: 4, scope: !13200)
!13207 = !DILocation(line: 2626, column: 13, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13200, file: !3, line: 2626, column: 12)
!13209 = !DILocation(line: 2626, column: 24, scope: !13208)
!13210 = !DILocation(line: 2626, column: 27, scope: !13208)
!13211 = !DILocation(line: 2626, column: 35, scope: !13208)
!13212 = !DILocation(line: 2626, column: 12, scope: !13200)
!13213 = !DILocation(line: 2627, column: 13, scope: !13208)
!13214 = !DILocation(line: 2627, column: 4, scope: !13208)
!13215 = !DILocation(line: 2629, column: 12, scope: !13157)
!13216 = !DILocation(line: 2629, column: 3, scope: !13157)
!13217 = !DILocation(line: 2631, column: 14, scope: !13157)
!13218 = !DILocation(line: 2631, column: 37, scope: !13157)
!13219 = !DILocation(line: 2631, column: 45, scope: !13157)
!13220 = !DILocation(line: 2631, column: 3, scope: !13157)
!13221 = !DILocation(line: 2632, column: 14, scope: !13157)
!13222 = !DILocation(line: 2632, column: 37, scope: !13157)
!13223 = !DILocation(line: 2632, column: 45, scope: !13157)
!13224 = !DILocation(line: 2632, column: 3, scope: !13157)
!13225 = !DILocation(line: 2633, column: 14, scope: !13157)
!13226 = !DILocation(line: 2634, column: 7, scope: !13157)
!13227 = !DILocation(line: 2634, column: 15, scope: !13157)
!13228 = !DILocation(line: 2634, column: 27, scope: !13157)
!13229 = !DILocation(line: 2634, column: 35, scope: !13157)
!13230 = !DILocation(line: 2634, column: 44, scope: !13157)
!13231 = !DILocation(line: 2633, column: 3, scope: !13157)
!13232 = !DILocation(line: 2635, column: 14, scope: !13157)
!13233 = !DILocation(line: 2635, column: 35, scope: !13157)
!13234 = !DILocation(line: 2635, column: 43, scope: !13157)
!13235 = !DILocation(line: 2635, column: 3, scope: !13157)
!13236 = !DILocation(line: 2637, column: 12, scope: !13157)
!13237 = !DILocation(line: 2637, column: 3, scope: !13157)
!13238 = !DILocation(line: 2638, column: 10, scope: !13157)
!13239 = !DILocation(line: 2638, column: 18, scope: !13157)
!13240 = !DILocation(line: 2638, column: 3, scope: !13157)
!13241 = !DILocation(line: 2640, column: 13, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 2638, column: 30)
!13243 = !DILocation(line: 2640, column: 4, scope: !13242)
!13244 = !DILocation(line: 2641, column: 4, scope: !13242)
!13245 = !DILocation(line: 2643, column: 13, scope: !13242)
!13246 = !DILocation(line: 2643, column: 4, scope: !13242)
!13247 = !DILocation(line: 2644, column: 4, scope: !13242)
!13248 = !DILocation(line: 2646, column: 13, scope: !13242)
!13249 = !DILocation(line: 2646, column: 4, scope: !13242)
!13250 = !DILocation(line: 2647, column: 4, scope: !13242)
!13251 = !DILocation(line: 2651, column: 12, scope: !13157)
!13252 = !DILocation(line: 2651, column: 3, scope: !13157)
!13253 = !DILocation(line: 2652, column: 10, scope: !13157)
!13254 = !DILocation(line: 2652, column: 18, scope: !13157)
!13255 = !DILocation(line: 2652, column: 3, scope: !13157)
!13256 = !DILocation(line: 2654, column: 13, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 2652, column: 30)
!13258 = !DILocation(line: 2654, column: 4, scope: !13257)
!13259 = !DILocation(line: 2655, column: 4, scope: !13257)
!13260 = !DILocation(line: 2657, column: 13, scope: !13257)
!13261 = !DILocation(line: 2657, column: 4, scope: !13257)
!13262 = !DILocation(line: 2658, column: 4, scope: !13257)
!13263 = !DILocation(line: 2661, column: 12, scope: !13157)
!13264 = !DILocation(line: 2661, column: 3, scope: !13157)
!13265 = !DILocation(line: 2662, column: 10, scope: !13157)
!13266 = !DILocation(line: 2662, column: 18, scope: !13157)
!13267 = !DILocation(line: 2662, column: 3, scope: !13157)
!13268 = !DILocation(line: 2664, column: 13, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13157, file: !3, line: 2662, column: 29)
!13270 = !DILocation(line: 2664, column: 4, scope: !13269)
!13271 = !DILocation(line: 2665, column: 4, scope: !13269)
!13272 = !DILocation(line: 2667, column: 13, scope: !13269)
!13273 = !DILocation(line: 2667, column: 4, scope: !13269)
!13274 = !DILocation(line: 2668, column: 4, scope: !13269)
!13275 = !DILocation(line: 2670, column: 2, scope: !13157)
!13276 = !DILocation(line: 2585, column: 66, scope: !13144)
!13277 = !DILocation(line: 2585, column: 2, scope: !13144)
!13278 = distinct !{!13278, !13154, !13279}
!13279 = !DILocation(line: 2670, column: 2, scope: !13140)
!13280 = !DILabel(scope: !12995, name: "free_pci", file: !3, line: 2672)
!13281 = !DILocation(line: 2672, column: 1, scope: !12995)
!13282 = !DILocation(line: 2673, column: 21, scope: !12995)
!13283 = !DILocation(line: 2673, column: 27, scope: !12995)
!13284 = !DILocation(line: 2673, column: 32, scope: !12995)
!13285 = !DILocation(line: 2673, column: 42, scope: !12995)
!13286 = !DILocation(line: 2674, column: 6, scope: !12995)
!13287 = !DILocation(line: 2673, column: 2, scope: !12995)
!13288 = !DILabel(scope: !12995, name: "free_inquiry", file: !3, line: 2675)
!13289 = !DILocation(line: 2675, column: 1, scope: !12995)
!13290 = !DILocation(line: 2676, column: 20, scope: !12995)
!13291 = !DILocation(line: 2676, column: 29, scope: !12995)
!13292 = !DILocation(line: 2676, column: 41, scope: !12995)
!13293 = !DILocation(line: 2676, column: 2, scope: !12995)
!13294 = !DILabel(scope: !12995, name: "free_pdev", file: !3, line: 2677)
!13295 = !DILocation(line: 2677, column: 1, scope: !12995)
!13296 = !DILocation(line: 2678, column: 18, scope: !12995)
!13297 = !DILocation(line: 2678, column: 2, scope: !12995)
!13298 = !DILocation(line: 2679, column: 2, scope: !12995)
!13299 = !DILocation(line: 2680, column: 1, scope: !12995)
!13300 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !255, file: !255, line: 1865, type: !13301, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13301 = !DISubroutineType(types: !13302)
!13302 = !{!197, !253}
!13303 = !DILocalVariable(name: "pdev", arg: 1, scope: !13300, file: !255, line: 1865, type: !253)
!13304 = !DILocation(line: 1865, column: 53, scope: !13300)
!13305 = !DILocation(line: 1867, column: 26, scope: !13300)
!13306 = !DILocation(line: 1867, column: 32, scope: !13300)
!13307 = !DILocation(line: 1867, column: 9, scope: !13300)
!13308 = !DILocation(line: 1867, column: 2, scope: !13300)
!13309 = distinct !DISubprogram(name: "__megaraid_shutdown", scope: !3, file: !3, line: 4510, type: !8176, scopeLine: 4511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13310 = !DILocation(line: 23, column: 61, scope: !7408, inlinedAt: !13311)
!13311 = distinct !DILocation(line: 28, column: 9, scope: !7415, inlinedAt: !13312)
!13312 = distinct !DILocation(line: 4532, column: 6, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13309, file: !3, line: 4532, column: 6)
!13314 = !DILocation(line: 69, column: 73, scope: !7420, inlinedAt: !13315)
!13315 = distinct !DILocation(line: 27, column: 2, scope: !7415, inlinedAt: !13312)
!13316 = !DILocation(line: 69, column: 83, scope: !7420, inlinedAt: !13315)
!13317 = !DILocation(line: 25, column: 29, scope: !7415, inlinedAt: !13312)
!13318 = !DILocalVariable(name: "adapter", arg: 1, scope: !13309, file: !3, line: 4510, type: !182)
!13319 = !DILocation(line: 4510, column: 32, scope: !13309)
!13320 = !DILocalVariable(name: "raw_mbox", scope: !13309, file: !3, line: 4512, type: !13321)
!13321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11364, size: 120, elements: !7908)
!13322 = !DILocation(line: 4512, column: 9, scope: !13309)
!13323 = !DILocalVariable(name: "mbox", scope: !13309, file: !3, line: 4513, type: !5692)
!13324 = !DILocation(line: 4513, column: 10, scope: !13309)
!13325 = !DILocation(line: 4513, column: 27, scope: !13309)
!13326 = !DILocation(line: 4513, column: 17, scope: !13309)
!13327 = !DILocalVariable(name: "i", scope: !13309, file: !3, line: 4514, type: !188)
!13328 = !DILocation(line: 4514, column: 6, scope: !13309)
!13329 = !DILocation(line: 4517, column: 10, scope: !13309)
!13330 = !DILocation(line: 4517, column: 16, scope: !13309)
!13331 = !DILocation(line: 4517, column: 2, scope: !13309)
!13332 = !DILocation(line: 4518, column: 2, scope: !13309)
!13333 = !DILocation(line: 4518, column: 14, scope: !13309)
!13334 = !DILocation(line: 4520, column: 11, scope: !13309)
!13335 = !DILocation(line: 4520, column: 20, scope: !13309)
!13336 = !DILocation(line: 4520, column: 26, scope: !13309)
!13337 = !DILocation(line: 4520, column: 31, scope: !13309)
!13338 = !DILocation(line: 4520, column: 2, scope: !13309)
!13339 = !DILocation(line: 4523, column: 18, scope: !13309)
!13340 = !DILocation(line: 4523, column: 27, scope: !13309)
!13341 = !DILocation(line: 4523, column: 2, scope: !13309)
!13342 = !DILocation(line: 4526, column: 10, scope: !13309)
!13343 = !DILocation(line: 4526, column: 16, scope: !13309)
!13344 = !DILocation(line: 4526, column: 2, scope: !13309)
!13345 = !DILocation(line: 4527, column: 2, scope: !13309)
!13346 = !DILocation(line: 4527, column: 14, scope: !13309)
!13347 = !DILocation(line: 4530, column: 18, scope: !13309)
!13348 = !DILocation(line: 4530, column: 27, scope: !13309)
!13349 = !DILocation(line: 4530, column: 2, scope: !13309)
!13350 = !DILocation(line: 4532, column: 19, scope: !13313)
!13351 = !DILocation(line: 4532, column: 28, scope: !13313)
!13352 = !DILocation(line: 27, column: 25, scope: !7415, inlinedAt: !13312)
!13353 = !DILocation(line: 71, column: 19, scope: !7420, inlinedAt: !13315)
!13354 = !DILocation(line: 71, column: 22, scope: !7420, inlinedAt: !13315)
!13355 = !DILocation(line: 71, column: 2, scope: !7420, inlinedAt: !13315)
!13356 = !DILocation(line: 72, column: 2, scope: !7420, inlinedAt: !13315)
!13357 = !DILocation(line: 28, column: 26, scope: !7415, inlinedAt: !13312)
!13358 = !DILocation(line: 29, column: 9, scope: !7408, inlinedAt: !13311)
!13359 = !DILocation(line: 4532, column: 39, scope: !13313)
!13360 = !DILocation(line: 4532, column: 6, scope: !13309)
!13361 = !DILocation(line: 4533, column: 3, scope: !13313)
!13362 = !DILocation(line: 4539, column: 9, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13309, file: !3, line: 4539, column: 2)
!13364 = !DILocation(line: 4539, column: 7, scope: !13363)
!13365 = !DILocation(line: 4539, column: 14, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13363, file: !3, line: 4539, column: 2)
!13367 = !DILocation(line: 4539, column: 16, scope: !13366)
!13368 = !DILocation(line: 4539, column: 2, scope: !13363)
!13369 = !DILocalVariable(name: "__ms", scope: !13370, file: !3, line: 4540, type: !195)
!13370 = distinct !DILexicalBlock(scope: !13366, file: !3, line: 4540, column: 3)
!13371 = !DILocation(line: 4540, column: 3, scope: !13370)
!13372 = !DILocation(line: 4540, column: 3, scope: !13373)
!13373 = distinct !DILexicalBlock(scope: !13374, file: !3, line: 4540, column: 3)
!13374 = distinct !DILexicalBlock(scope: !13375, file: !3, line: 4540, column: 3)
!13375 = distinct !DILexicalBlock(scope: !13376, file: !3, line: 4540, column: 3)
!13376 = distinct !DILexicalBlock(scope: !13370, file: !3, line: 4540, column: 3)
!13377 = distinct !{!13377, !13371, !13371}
!13378 = !DILocation(line: 4540, column: 3, scope: !13366)
!13379 = !DILocation(line: 4539, column: 24, scope: !13366)
!13380 = !DILocation(line: 4539, column: 2, scope: !13366)
!13381 = distinct !{!13381, !13368, !13382}
!13382 = !DILocation(line: 4540, column: 3, scope: !13363)
!13383 = !DILocation(line: 4541, column: 1, scope: !13309)
!13384 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !37, file: !37, line: 655, type: !13385, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13385 = !DISubroutineType(types: !13386)
!13386 = !{!197, !4805}
!13387 = !DILocalVariable(name: "dev", arg: 1, scope: !13384, file: !37, line: 655, type: !4805)
!13388 = !DILocation(line: 655, column: 58, scope: !13384)
!13389 = !DILocation(line: 657, column: 9, scope: !13384)
!13390 = !DILocation(line: 657, column: 14, scope: !13384)
!13391 = !DILocation(line: 657, column: 2, scope: !13384)
!13392 = distinct !DISubprogram(name: "register_chrdev", scope: !111, file: !111, line: 2589, type: !13393, scopeLine: 2591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13393 = !DISubroutineType(types: !13394)
!13394 = !{!188, !7, !284, !3986}
!13395 = !DILocalVariable(name: "major", arg: 1, scope: !13392, file: !111, line: 2589, type: !7)
!13396 = !DILocation(line: 2589, column: 48, scope: !13392)
!13397 = !DILocalVariable(name: "name", arg: 2, scope: !13392, file: !111, line: 2589, type: !284)
!13398 = !DILocation(line: 2589, column: 67, scope: !13392)
!13399 = !DILocalVariable(name: "fops", arg: 3, scope: !13392, file: !111, line: 2590, type: !3986)
!13400 = !DILocation(line: 2590, column: 37, scope: !13392)
!13401 = !DILocation(line: 2592, column: 27, scope: !13392)
!13402 = !DILocation(line: 2592, column: 42, scope: !13392)
!13403 = !DILocation(line: 2592, column: 48, scope: !13392)
!13404 = !DILocation(line: 2592, column: 9, scope: !13392)
!13405 = !DILocation(line: 2592, column: 2, scope: !13392)
!13406 = distinct !DISubprogram(name: "megadev_unlocked_ioctl", scope: !3, file: !3, line: 3367, type: !4033, scopeLine: 3368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13407 = !DILocalVariable(name: "filep", arg: 1, scope: !13406, file: !3, line: 3367, type: !475)
!13408 = !DILocation(line: 3367, column: 37, scope: !13406)
!13409 = !DILocalVariable(name: "cmd", arg: 2, scope: !13406, file: !3, line: 3367, type: !7)
!13410 = !DILocation(line: 3367, column: 57, scope: !13406)
!13411 = !DILocalVariable(name: "arg", arg: 3, scope: !13406, file: !3, line: 3367, type: !195)
!13412 = !DILocation(line: 3367, column: 76, scope: !13406)
!13413 = !DILocalVariable(name: "ret", scope: !13406, file: !3, line: 3369, type: !188)
!13414 = !DILocation(line: 3369, column: 6, scope: !13406)
!13415 = !DILocation(line: 3371, column: 2, scope: !13406)
!13416 = !DILocation(line: 3372, column: 22, scope: !13406)
!13417 = !DILocation(line: 3372, column: 29, scope: !13406)
!13418 = !DILocation(line: 3372, column: 34, scope: !13406)
!13419 = !DILocation(line: 3372, column: 8, scope: !13406)
!13420 = !DILocation(line: 3372, column: 6, scope: !13406)
!13421 = !DILocation(line: 3373, column: 2, scope: !13406)
!13422 = !DILocation(line: 3375, column: 9, scope: !13406)
!13423 = !DILocation(line: 3375, column: 2, scope: !13406)
!13424 = distinct !DISubprogram(name: "megadev_open", scope: !3, file: !3, line: 2951, type: !4043, scopeLine: 2952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13425 = !DILocalVariable(name: "inode", arg: 1, scope: !13424, file: !3, line: 2951, type: !544)
!13426 = !DILocation(line: 2951, column: 29, scope: !13424)
!13427 = !DILocalVariable(name: "filep", arg: 2, scope: !13424, file: !3, line: 2951, type: !475)
!13428 = !DILocation(line: 2951, column: 49, scope: !13424)
!13429 = !DILocation(line: 2956, column: 7, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13424, file: !3, line: 2956, column: 6)
!13431 = !DILocation(line: 2956, column: 6, scope: !13424)
!13432 = !DILocation(line: 2956, column: 32, scope: !13430)
!13433 = !DILocation(line: 2958, column: 2, scope: !13424)
!13434 = !DILocation(line: 2959, column: 1, scope: !13424)
!13435 = distinct !DISubprogram(name: "megadev_ioctl", scope: !3, file: !3, line: 2974, type: !13436, scopeLine: 2975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13436 = !DISubroutineType(types: !13437)
!13437 = !{!188, !475, !7, !195}
!13438 = !DILocalVariable(name: "addr", arg: 1, scope: !13439, file: !13440, line: 138, type: !3282)
!13439 = distinct !DISubprogram(name: "check_copy_size", scope: !13440, file: !13440, line: 138, type: !13441, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13440 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!13441 = !DISubroutineType(types: !13442)
!13442 = !{!605, !3282, !445, !605}
!13443 = !DILocation(line: 138, column: 29, scope: !13439, inlinedAt: !13444)
!13444 = distinct !DILocation(line: 199, column: 6, scope: !13445, inlinedAt: !13449)
!13445 = distinct !DILexicalBlock(scope: !13446, file: !9940, line: 199, column: 6)
!13446 = distinct !DISubprogram(name: "copy_to_user", scope: !9940, file: !9940, line: 197, type: !13447, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13447 = !DISubroutineType(types: !13448)
!13448 = !{!195, !197, !3282, !195}
!13449 = distinct !DILocation(line: 3342, column: 9, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13451, file: !3, line: 3342, column: 9)
!13451 = distinct !DILexicalBlock(scope: !13452, file: !3, line: 3341, column: 49)
!13452 = distinct !DILexicalBlock(scope: !13453, file: !3, line: 3341, column: 8)
!13453 = distinct !DILexicalBlock(scope: !13454, file: !3, line: 3275, column: 8)
!13454 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3153, column: 7)
!13455 = distinct !DILexicalBlock(scope: !13435, file: !3, line: 3014, column: 24)
!13456 = !DILocalVariable(name: "bytes", arg: 2, scope: !13439, file: !13440, line: 138, type: !445)
!13457 = !DILocation(line: 138, column: 42, scope: !13439, inlinedAt: !13444)
!13458 = !DILocalVariable(name: "is_source", arg: 3, scope: !13439, file: !13440, line: 138, type: !605)
!13459 = !DILocation(line: 138, column: 54, scope: !13439, inlinedAt: !13444)
!13460 = !DILocalVariable(name: "sz", scope: !13439, file: !13440, line: 140, type: !188)
!13461 = !DILocation(line: 140, column: 6, scope: !13439, inlinedAt: !13444)
!13462 = !DILocalVariable(name: "__ret_warn_on", scope: !13463, file: !13440, line: 150, type: !188)
!13463 = distinct !DILexicalBlock(scope: !13464, file: !13440, line: 150, column: 6)
!13464 = distinct !DILexicalBlock(scope: !13439, file: !13440, line: 150, column: 6)
!13465 = !DILocation(line: 150, column: 6, scope: !13463, inlinedAt: !13444)
!13466 = !DILocalVariable(name: "to", arg: 1, scope: !13446, file: !9940, line: 197, type: !197)
!13467 = !DILocation(line: 197, column: 27, scope: !13446, inlinedAt: !13449)
!13468 = !DILocalVariable(name: "from", arg: 2, scope: !13446, file: !9940, line: 197, type: !3282)
!13469 = !DILocation(line: 197, column: 43, scope: !13446, inlinedAt: !13449)
!13470 = !DILocalVariable(name: "n", arg: 3, scope: !13446, file: !9940, line: 197, type: !195)
!13471 = !DILocation(line: 197, column: 63, scope: !13446, inlinedAt: !13449)
!13472 = !DILocation(line: 138, column: 29, scope: !13439, inlinedAt: !13473)
!13473 = distinct !DILocation(line: 191, column: 6, scope: !13474, inlinedAt: !13476)
!13474 = distinct !DILexicalBlock(scope: !13475, file: !9940, line: 191, column: 6)
!13475 = distinct !DISubprogram(name: "copy_from_user", scope: !9940, file: !9940, line: 189, type: !13447, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13476 = distinct !DILocation(line: 3302, column: 9, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13478, file: !3, line: 3302, column: 9)
!13478 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 3298, column: 49)
!13479 = distinct !DILexicalBlock(scope: !13453, file: !3, line: 3298, column: 8)
!13480 = !DILocation(line: 138, column: 42, scope: !13439, inlinedAt: !13473)
!13481 = !DILocation(line: 138, column: 54, scope: !13439, inlinedAt: !13473)
!13482 = !DILocation(line: 140, column: 6, scope: !13439, inlinedAt: !13473)
!13483 = !DILocation(line: 150, column: 6, scope: !13463, inlinedAt: !13473)
!13484 = !DILocalVariable(name: "to", arg: 1, scope: !13475, file: !9940, line: 189, type: !197)
!13485 = !DILocation(line: 189, column: 22, scope: !13475, inlinedAt: !13476)
!13486 = !DILocalVariable(name: "from", arg: 2, scope: !13475, file: !9940, line: 189, type: !3282)
!13487 = !DILocation(line: 189, column: 45, scope: !13475, inlinedAt: !13476)
!13488 = !DILocalVariable(name: "n", arg: 3, scope: !13475, file: !9940, line: 189, type: !195)
!13489 = !DILocation(line: 189, column: 65, scope: !13475, inlinedAt: !13476)
!13490 = !DILocation(line: 138, column: 29, scope: !13439, inlinedAt: !13491)
!13491 = distinct !DILocation(line: 199, column: 6, scope: !13445, inlinedAt: !13492)
!13492 = distinct !DILocation(line: 3257, column: 8, scope: !13493)
!13493 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 3257, column: 8)
!13494 = distinct !DILexicalBlock(scope: !13454, file: !3, line: 3153, column: 53)
!13495 = !DILocation(line: 138, column: 42, scope: !13439, inlinedAt: !13491)
!13496 = !DILocation(line: 138, column: 54, scope: !13439, inlinedAt: !13491)
!13497 = !DILocation(line: 140, column: 6, scope: !13439, inlinedAt: !13491)
!13498 = !DILocation(line: 150, column: 6, scope: !13463, inlinedAt: !13491)
!13499 = !DILocation(line: 197, column: 27, scope: !13446, inlinedAt: !13492)
!13500 = !DILocation(line: 197, column: 43, scope: !13446, inlinedAt: !13492)
!13501 = !DILocation(line: 197, column: 63, scope: !13446, inlinedAt: !13492)
!13502 = !DILocation(line: 138, column: 29, scope: !13439, inlinedAt: !13503)
!13503 = distinct !DILocation(line: 199, column: 6, scope: !13445, inlinedAt: !13504)
!13504 = distinct !DILocation(line: 3247, column: 9, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13506, file: !3, line: 3247, column: 9)
!13506 = distinct !DILexicalBlock(scope: !13507, file: !3, line: 3246, column: 55)
!13507 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 3246, column: 8)
!13508 = !DILocation(line: 138, column: 42, scope: !13439, inlinedAt: !13503)
!13509 = !DILocation(line: 138, column: 54, scope: !13439, inlinedAt: !13503)
!13510 = !DILocation(line: 140, column: 6, scope: !13439, inlinedAt: !13503)
!13511 = !DILocation(line: 150, column: 6, scope: !13463, inlinedAt: !13503)
!13512 = !DILocation(line: 197, column: 27, scope: !13446, inlinedAt: !13504)
!13513 = !DILocation(line: 197, column: 43, scope: !13446, inlinedAt: !13504)
!13514 = !DILocation(line: 197, column: 63, scope: !13446, inlinedAt: !13504)
!13515 = !DILocation(line: 138, column: 29, scope: !13439, inlinedAt: !13516)
!13516 = distinct !DILocation(line: 191, column: 6, scope: !13474, inlinedAt: !13517)
!13517 = distinct !DILocation(line: 3221, column: 9, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !13519, file: !3, line: 3221, column: 9)
!13519 = distinct !DILexicalBlock(scope: !13520, file: !3, line: 3217, column: 55)
!13520 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 3217, column: 8)
!13521 = !DILocation(line: 138, column: 42, scope: !13439, inlinedAt: !13516)
!13522 = !DILocation(line: 138, column: 54, scope: !13439, inlinedAt: !13516)
!13523 = !DILocation(line: 140, column: 6, scope: !13439, inlinedAt: !13516)
!13524 = !DILocation(line: 150, column: 6, scope: !13463, inlinedAt: !13516)
!13525 = !DILocation(line: 189, column: 22, scope: !13475, inlinedAt: !13517)
!13526 = !DILocation(line: 189, column: 45, scope: !13475, inlinedAt: !13517)
!13527 = !DILocation(line: 189, column: 65, scope: !13475, inlinedAt: !13517)
!13528 = !DILocation(line: 138, column: 29, scope: !13439, inlinedAt: !13529)
!13529 = distinct !DILocation(line: 191, column: 6, scope: !13474, inlinedAt: !13530)
!13530 = distinct !DILocation(line: 3173, column: 8, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 3173, column: 8)
!13532 = !DILocation(line: 138, column: 42, scope: !13439, inlinedAt: !13529)
!13533 = !DILocation(line: 138, column: 54, scope: !13439, inlinedAt: !13529)
!13534 = !DILocation(line: 140, column: 6, scope: !13439, inlinedAt: !13529)
!13535 = !DILocation(line: 150, column: 6, scope: !13463, inlinedAt: !13529)
!13536 = !DILocation(line: 189, column: 22, scope: !13475, inlinedAt: !13530)
!13537 = !DILocation(line: 189, column: 45, scope: !13475, inlinedAt: !13530)
!13538 = !DILocation(line: 189, column: 65, scope: !13475, inlinedAt: !13530)
!13539 = !DILocation(line: 138, column: 29, scope: !13439, inlinedAt: !13540)
!13540 = distinct !DILocation(line: 199, column: 6, scope: !13445, inlinedAt: !13541)
!13541 = distinct !DILocation(line: 3041, column: 7, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3041, column: 7)
!13543 = !DILocation(line: 138, column: 42, scope: !13439, inlinedAt: !13540)
!13544 = !DILocation(line: 138, column: 54, scope: !13439, inlinedAt: !13540)
!13545 = !DILocation(line: 140, column: 6, scope: !13439, inlinedAt: !13540)
!13546 = !DILocation(line: 150, column: 6, scope: !13463, inlinedAt: !13540)
!13547 = !DILocation(line: 197, column: 27, scope: !13446, inlinedAt: !13541)
!13548 = !DILocation(line: 197, column: 43, scope: !13446, inlinedAt: !13541)
!13549 = !DILocation(line: 197, column: 63, scope: !13446, inlinedAt: !13541)
!13550 = !DILocalVariable(name: "filep", arg: 1, scope: !13435, file: !3, line: 2974, type: !475)
!13551 = !DILocation(line: 2974, column: 28, scope: !13435)
!13552 = !DILocalVariable(name: "cmd", arg: 2, scope: !13435, file: !3, line: 2974, type: !7)
!13553 = !DILocation(line: 2974, column: 48, scope: !13435)
!13554 = !DILocalVariable(name: "arg", arg: 3, scope: !13435, file: !3, line: 2974, type: !195)
!13555 = !DILocation(line: 2974, column: 67, scope: !13435)
!13556 = !DILocalVariable(name: "adapter", scope: !13435, file: !3, line: 2976, type: !182)
!13557 = !DILocation(line: 2976, column: 13, scope: !13435)
!13558 = !DILocalVariable(name: "uioc", scope: !13435, file: !3, line: 2977, type: !13559)
!13559 = !DIDerivedType(tag: DW_TAG_typedef, name: "nitioctl_t", file: !184, line: 602, baseType: !13560)
!13560 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 585, size: 384, elements: !13561)
!13561 = !{!13562, !13563, !13564, !13565, !13573, !13574}
!13562 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !13560, file: !184, line: 586, baseType: !3188, size: 64)
!13563 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !13560, file: !184, line: 587, baseType: !190, size: 32, offset: 64)
!13564 = !DIDerivedType(tag: DW_TAG_member, name: "adapno", scope: !13560, file: !184, line: 588, baseType: !190, size: 32, offset: 96)
!13565 = !DIDerivedType(tag: DW_TAG_member, name: "__ua", scope: !13560, file: !184, line: 592, baseType: !13566, size: 192, offset: 128)
!13566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13560, file: !184, line: 589, size: 192, elements: !13567)
!13567 = !{!13568, !13572}
!13568 = !DIDerivedType(tag: DW_TAG_member, name: "__raw_mbox", scope: !13566, file: !184, line: 590, baseType: !13569, size: 144)
!13569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !213, size: 144, elements: !13570)
!13570 = !{!13571}
!13571 = !DISubrange(count: 18)
!13572 = !DIDerivedType(tag: DW_TAG_member, name: "__uaddr", scope: !13566, file: !184, line: 591, baseType: !197, size: 64)
!13573 = !DIDerivedType(tag: DW_TAG_member, name: "xferlen", scope: !13560, file: !184, line: 599, baseType: !190, size: 32, offset: 320)
!13574 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13560, file: !184, line: 601, baseType: !190, size: 32, offset: 352)
!13575 = !DILocation(line: 2977, column: 13, scope: !13435)
!13576 = !DILocalVariable(name: "adapno", scope: !13435, file: !3, line: 2978, type: !188)
!13577 = !DILocation(line: 2978, column: 7, scope: !13435)
!13578 = !DILocalVariable(name: "rval", scope: !13435, file: !3, line: 2979, type: !188)
!13579 = !DILocation(line: 2979, column: 7, scope: !13435)
!13580 = !DILocalVariable(name: "upthru", scope: !13435, file: !3, line: 2980, type: !5613)
!13581 = !DILocation(line: 2980, column: 24, scope: !13435)
!13582 = !DILocalVariable(name: "pthru", scope: !13435, file: !3, line: 2981, type: !5613)
!13583 = !DILocation(line: 2981, column: 17, scope: !13435)
!13584 = !DILocalVariable(name: "pthru_dma_hndl", scope: !13435, file: !3, line: 2982, type: !240)
!13585 = !DILocation(line: 2982, column: 13, scope: !13435)
!13586 = !DILocalVariable(name: "data", scope: !13435, file: !3, line: 2983, type: !197)
!13587 = !DILocation(line: 2983, column: 9, scope: !13435)
!13588 = !DILocalVariable(name: "data_dma_hndl", scope: !13435, file: !3, line: 2984, type: !240)
!13589 = !DILocation(line: 2984, column: 13, scope: !13435)
!13590 = !DILocalVariable(name: "mc", scope: !13435, file: !3, line: 2985, type: !5915)
!13591 = !DILocation(line: 2985, column: 12, scope: !13435)
!13592 = !DILocalVariable(name: "uxferaddr", scope: !13435, file: !3, line: 2990, type: !190)
!13593 = !DILocation(line: 2990, column: 7, scope: !13435)
!13594 = !DILocalVariable(name: "pdev", scope: !13435, file: !3, line: 2991, type: !253)
!13595 = !DILocation(line: 2991, column: 18, scope: !13435)
!13596 = !DILocation(line: 2997, column: 7, scope: !13597)
!13597 = distinct !DILexicalBlock(scope: !13435, file: !3, line: 2997, column: 6)
!13598 = !DILocation(line: 2997, column: 22, scope: !13597)
!13599 = !DILocation(line: 2997, column: 40, scope: !13597)
!13600 = !DILocation(line: 2997, column: 44, scope: !13597)
!13601 = !DILocation(line: 2997, column: 48, scope: !13597)
!13602 = !DILocation(line: 2997, column: 6, scope: !13435)
!13603 = !DILocation(line: 2998, column: 3, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13597, file: !3, line: 2997, column: 63)
!13605 = !DILocation(line: 3009, column: 2, scope: !13435)
!13606 = !DILocation(line: 3010, column: 42, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13435, file: !3, line: 3010, column: 6)
!13608 = !DILocation(line: 3010, column: 27, scope: !13607)
!13609 = !DILocation(line: 3010, column: 14, scope: !13607)
!13610 = !DILocation(line: 3010, column: 12, scope: !13607)
!13611 = !DILocation(line: 3010, column: 55, scope: !13607)
!13612 = !DILocation(line: 3010, column: 6, scope: !13435)
!13613 = !DILocation(line: 3011, column: 10, scope: !13607)
!13614 = !DILocation(line: 3011, column: 3, scope: !13607)
!13615 = !DILocation(line: 3014, column: 15, scope: !13435)
!13616 = !DILocation(line: 3014, column: 2, scope: !13435)
!13617 = !DILocation(line: 3017, column: 7, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13619, file: !3, line: 3017, column: 7)
!13619 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3017, column: 7)
!13620 = !DILocalVariable(name: "__ret_pu", scope: !13621, file: !3, line: 3017, type: !188)
!13621 = distinct !DILexicalBlock(scope: !13618, file: !3, line: 3017, column: 7)
!13622 = !DILocation(line: 3017, column: 7, scope: !13621)
!13623 = !DILocalVariable(name: "__ptr_pu", scope: !13621, file: !3, line: 3017, type: !197)
!13624 = !DILocalVariable(name: "__val_pu", scope: !13621, file: !3, line: 3017, type: !190)
!13625 = !{i32 -2140896498}
!13626 = !DILocation(line: 3017, column: 7, scope: !13619)
!13627 = !DILocation(line: 3017, column: 7, scope: !13455)
!13628 = !DILocation(line: 3018, column: 4, scope: !13619)
!13629 = !DILocation(line: 3020, column: 3, scope: !13455)
!13630 = !DILocation(line: 3023, column: 7, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13632, file: !3, line: 3023, column: 7)
!13632 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3023, column: 7)
!13633 = !DILocalVariable(name: "__ret_pu", scope: !13634, file: !3, line: 3023, type: !188)
!13634 = distinct !DILexicalBlock(scope: !13631, file: !3, line: 3023, column: 7)
!13635 = !DILocation(line: 3023, column: 7, scope: !13634)
!13636 = !DILocalVariable(name: "__ptr_pu", scope: !13634, file: !3, line: 3023, type: !197)
!13637 = !DILocalVariable(name: "__val_pu", scope: !13634, file: !3, line: 3023, type: !190)
!13638 = !{i32 -2140895577}
!13639 = !DILocation(line: 3023, column: 7, scope: !13632)
!13640 = !DILocation(line: 3023, column: 7, scope: !13455)
!13641 = !DILocation(line: 3024, column: 4, scope: !13632)
!13642 = !DILocation(line: 3031, column: 10, scope: !13455)
!13643 = !DILocation(line: 3031, column: 3, scope: !13455)
!13644 = !DILocation(line: 3038, column: 17, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3038, column: 7)
!13646 = !DILocation(line: 3038, column: 15, scope: !13645)
!13647 = !DILocation(line: 3038, column: 42, scope: !13645)
!13648 = !DILocation(line: 3038, column: 39, scope: !13645)
!13649 = !DILocation(line: 3038, column: 7, scope: !13455)
!13650 = !DILocation(line: 3039, column: 4, scope: !13645)
!13651 = !DILocation(line: 3041, column: 25, scope: !13542)
!13652 = !DILocation(line: 3041, column: 49, scope: !13542)
!13653 = !DILocation(line: 3041, column: 48, scope: !13542)
!13654 = !DILocation(line: 3041, column: 37, scope: !13542)
!13655 = !DILocation(line: 199, column: 6, scope: !13445, inlinedAt: !13541)
!13656 = !DILocation(line: 141, column: 6, scope: !13657, inlinedAt: !13540)
!13657 = distinct !DILexicalBlock(scope: !13439, file: !13440, line: 141, column: 6)
!13658 = !DILocation(line: 0, scope: !13657, inlinedAt: !13540)
!13659 = !DILocation(line: 141, column: 6, scope: !13439, inlinedAt: !13540)
!13660 = !DILocation(line: 142, column: 29, scope: !13661, inlinedAt: !13540)
!13661 = distinct !DILexicalBlock(scope: !13662, file: !13440, line: 142, column: 7)
!13662 = distinct !DILexicalBlock(scope: !13657, file: !13440, line: 141, column: 39)
!13663 = !DILocation(line: 142, column: 8, scope: !13661, inlinedAt: !13540)
!13664 = !DILocation(line: 142, column: 7, scope: !13662, inlinedAt: !13540)
!13665 = !DILocation(line: 143, column: 18, scope: !13661, inlinedAt: !13540)
!13666 = !DILocation(line: 143, column: 22, scope: !13661, inlinedAt: !13540)
!13667 = !DILocation(line: 143, column: 4, scope: !13661, inlinedAt: !13540)
!13668 = !DILocation(line: 144, column: 12, scope: !13669, inlinedAt: !13540)
!13669 = distinct !DILexicalBlock(scope: !13661, file: !13440, line: 144, column: 12)
!13670 = !DILocation(line: 144, column: 12, scope: !13661, inlinedAt: !13540)
!13671 = !DILocation(line: 145, column: 4, scope: !13669, inlinedAt: !13540)
!13672 = !DILocation(line: 147, column: 4, scope: !13669, inlinedAt: !13540)
!13673 = !DILocation(line: 148, column: 3, scope: !13662, inlinedAt: !13540)
!13674 = !DILocation(line: 150, column: 6, scope: !13675, inlinedAt: !13540)
!13675 = distinct !DILexicalBlock(scope: !13463, file: !13440, line: 150, column: 6)
!13676 = !DILocation(line: 150, column: 6, scope: !13677, inlinedAt: !13540)
!13677 = distinct !DILexicalBlock(scope: !13678, file: !13440, line: 150, column: 6)
!13678 = distinct !DILexicalBlock(scope: !13675, file: !13440, line: 150, column: 6)
!13679 = !{i32 -2145425911, i32 -2145425882, i32 -2145425836, i32 -2145425778, i32 -2145425724, i32 -2145425670, i32 -2145425615, i32 -2145425584}
!13680 = !DILocation(line: 150, column: 6, scope: !13681, inlinedAt: !13540)
!13681 = distinct !DILexicalBlock(scope: !13678, file: !13440, line: 150, column: 6)
!13682 = !{i32 -2145425164, i32 -2145425157, i32 -2145425105, i32 -2145425074, i32 -2145425044}
!13683 = !DILocation(line: 150, column: 6, scope: !13678, inlinedAt: !13540)
!13684 = !DILocation(line: 150, column: 6, scope: !13464, inlinedAt: !13540)
!13685 = !DILocation(line: 150, column: 6, scope: !13439, inlinedAt: !13540)
!13686 = !DILocation(line: 151, column: 3, scope: !13464, inlinedAt: !13540)
!13687 = !DILocation(line: 152, column: 20, scope: !13439, inlinedAt: !13540)
!13688 = !DILocation(line: 152, column: 26, scope: !13439, inlinedAt: !13540)
!13689 = !DILocation(line: 152, column: 33, scope: !13439, inlinedAt: !13540)
!13690 = !DILocation(line: 152, column: 2, scope: !13439, inlinedAt: !13540)
!13691 = !DILocation(line: 153, column: 2, scope: !13439, inlinedAt: !13540)
!13692 = !DILocation(line: 154, column: 1, scope: !13439, inlinedAt: !13540)
!13693 = !DILocation(line: 199, column: 6, scope: !13446, inlinedAt: !13541)
!13694 = !DILocation(line: 200, column: 21, scope: !13445, inlinedAt: !13541)
!13695 = !DILocation(line: 200, column: 25, scope: !13445, inlinedAt: !13541)
!13696 = !DILocation(line: 200, column: 31, scope: !13445, inlinedAt: !13541)
!13697 = !DILocation(line: 200, column: 7, scope: !13445, inlinedAt: !13541)
!13698 = !DILocation(line: 200, column: 5, scope: !13445, inlinedAt: !13541)
!13699 = !DILocation(line: 200, column: 3, scope: !13445, inlinedAt: !13541)
!13700 = !DILocation(line: 201, column: 9, scope: !13446, inlinedAt: !13541)
!13701 = !DILocation(line: 3041, column: 7, scope: !13542)
!13702 = !DILocation(line: 3041, column: 7, scope: !13455)
!13703 = !DILocation(line: 3043, column: 4, scope: !13542)
!13704 = !DILocation(line: 3044, column: 3, scope: !13455)
!13705 = !DILocation(line: 3099, column: 17, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3099, column: 7)
!13707 = !DILocation(line: 3099, column: 15, scope: !13706)
!13708 = !DILocation(line: 3099, column: 42, scope: !13706)
!13709 = !DILocation(line: 3099, column: 39, scope: !13706)
!13710 = !DILocation(line: 3099, column: 7, scope: !13455)
!13711 = !DILocation(line: 3100, column: 4, scope: !13706)
!13712 = !DILocation(line: 3102, column: 28, scope: !13455)
!13713 = !DILocation(line: 3102, column: 13, scope: !13455)
!13714 = !DILocation(line: 3102, column: 11, scope: !13455)
!13715 = !DILocation(line: 3108, column: 12, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3108, column: 7)
!13717 = !DILocation(line: 3108, column: 7, scope: !13716)
!13718 = !DILocation(line: 3108, column: 26, scope: !13716)
!13719 = !DILocation(line: 3108, column: 43, scope: !13716)
!13720 = !DILocation(line: 3109, column: 10, scope: !13716)
!13721 = !DILocation(line: 3109, column: 5, scope: !13716)
!13722 = !DILocation(line: 3109, column: 24, scope: !13716)
!13723 = !DILocation(line: 3108, column: 7, scope: !13455)
!13724 = !DILocation(line: 3114, column: 9, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13726, file: !3, line: 3114, column: 8)
!13726 = distinct !DILexicalBlock(scope: !13716, file: !3, line: 3109, column: 43)
!13727 = !DILocation(line: 3114, column: 18, scope: !13725)
!13728 = !DILocation(line: 3114, column: 8, scope: !13726)
!13729 = !DILocation(line: 3115, column: 5, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13725, file: !3, line: 3114, column: 39)
!13731 = !DILocation(line: 3118, column: 5, scope: !13730)
!13732 = !DILocation(line: 3121, column: 28, scope: !13726)
!13733 = !DILocation(line: 3121, column: 42, scope: !13726)
!13734 = !DILocation(line: 3121, column: 37, scope: !13726)
!13735 = !DILocation(line: 3121, column: 11, scope: !13726)
!13736 = !DILocation(line: 3121, column: 9, scope: !13726)
!13737 = !DILocation(line: 3123, column: 8, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13726, file: !3, line: 3123, column: 8)
!13739 = !DILocation(line: 3123, column: 13, scope: !13738)
!13740 = !DILocation(line: 3123, column: 8, scope: !13726)
!13741 = !DILocation(line: 3124, column: 5, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13738, file: !3, line: 3123, column: 20)
!13743 = !DILocation(line: 3126, column: 17, scope: !13742)
!13744 = !DILocation(line: 3126, column: 8, scope: !13742)
!13745 = !DILocation(line: 3126, column: 15, scope: !13742)
!13746 = !DILocation(line: 3128, column: 39, scope: !13742)
!13747 = !DILocation(line: 3128, column: 24, scope: !13742)
!13748 = !DILocation(line: 3128, column: 12, scope: !13742)
!13749 = !DILocation(line: 3128, column: 10, scope: !13742)
!13750 = !DILocation(line: 3129, column: 4, scope: !13742)
!13751 = !DILocation(line: 3131, column: 11, scope: !13726)
!13752 = !DILocation(line: 3131, column: 4, scope: !13726)
!13753 = !DILocation(line: 3137, column: 12, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3137, column: 7)
!13755 = !DILocation(line: 3137, column: 7, scope: !13754)
!13756 = !DILocation(line: 3137, column: 26, scope: !13754)
!13757 = !DILocation(line: 3137, column: 53, scope: !13754)
!13758 = !DILocation(line: 3138, column: 9, scope: !13754)
!13759 = !DILocation(line: 3138, column: 4, scope: !13754)
!13760 = !DILocation(line: 3138, column: 23, scope: !13754)
!13761 = !DILocation(line: 3137, column: 7, scope: !13455)
!13762 = !DILocation(line: 3140, column: 4, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 3138, column: 50)
!13764 = !DILocation(line: 3142, column: 4, scope: !13763)
!13765 = !DILocation(line: 3149, column: 23, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3149, column: 7)
!13767 = !DILocation(line: 3149, column: 7, scope: !13766)
!13768 = !DILocation(line: 3149, column: 39, scope: !13766)
!13769 = !DILocation(line: 3149, column: 7, scope: !13455)
!13770 = !DILocation(line: 3150, column: 4, scope: !13766)
!13771 = !DILocation(line: 3153, column: 12, scope: !13454)
!13772 = !DILocation(line: 3153, column: 7, scope: !13454)
!13773 = !DILocation(line: 3153, column: 26, scope: !13454)
!13774 = !DILocation(line: 3153, column: 7, scope: !13455)
!13775 = !DILocation(line: 3156, column: 32, scope: !13494)
!13776 = !DILocation(line: 3156, column: 38, scope: !13494)
!13777 = !DILocation(line: 3156, column: 12, scope: !13494)
!13778 = !DILocation(line: 3156, column: 10, scope: !13494)
!13779 = !DILocation(line: 3160, column: 8, scope: !13780)
!13780 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 3160, column: 8)
!13781 = !DILocation(line: 3160, column: 14, scope: !13780)
!13782 = !DILocation(line: 3160, column: 8, scope: !13494)
!13783 = !DILocation(line: 3161, column: 21, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13780, file: !3, line: 3160, column: 24)
!13785 = !DILocation(line: 3161, column: 5, scope: !13784)
!13786 = !DILocation(line: 3162, column: 5, scope: !13784)
!13787 = !DILocation(line: 3168, column: 52, scope: !13494)
!13788 = !DILocation(line: 3168, column: 64, scope: !13494)
!13789 = !DILocation(line: 3168, column: 37, scope: !13494)
!13790 = !DILocation(line: 3168, column: 13, scope: !13494)
!13791 = !DILocation(line: 3168, column: 11, scope: !13494)
!13792 = !DILocation(line: 3173, column: 23, scope: !13531)
!13793 = !DILocation(line: 3173, column: 30, scope: !13531)
!13794 = !DILocation(line: 191, column: 6, scope: !13474, inlinedAt: !13530)
!13795 = !DILocation(line: 141, column: 6, scope: !13657, inlinedAt: !13529)
!13796 = !DILocation(line: 0, scope: !13657, inlinedAt: !13529)
!13797 = !DILocation(line: 141, column: 6, scope: !13439, inlinedAt: !13529)
!13798 = !DILocation(line: 142, column: 29, scope: !13661, inlinedAt: !13529)
!13799 = !DILocation(line: 142, column: 8, scope: !13661, inlinedAt: !13529)
!13800 = !DILocation(line: 142, column: 7, scope: !13662, inlinedAt: !13529)
!13801 = !DILocation(line: 143, column: 18, scope: !13661, inlinedAt: !13529)
!13802 = !DILocation(line: 143, column: 22, scope: !13661, inlinedAt: !13529)
!13803 = !DILocation(line: 143, column: 4, scope: !13661, inlinedAt: !13529)
!13804 = !DILocation(line: 144, column: 12, scope: !13669, inlinedAt: !13529)
!13805 = !DILocation(line: 144, column: 12, scope: !13661, inlinedAt: !13529)
!13806 = !DILocation(line: 145, column: 4, scope: !13669, inlinedAt: !13529)
!13807 = !DILocation(line: 147, column: 4, scope: !13669, inlinedAt: !13529)
!13808 = !DILocation(line: 148, column: 3, scope: !13662, inlinedAt: !13529)
!13809 = !DILocation(line: 150, column: 6, scope: !13675, inlinedAt: !13529)
!13810 = !DILocation(line: 150, column: 6, scope: !13677, inlinedAt: !13529)
!13811 = !DILocation(line: 150, column: 6, scope: !13681, inlinedAt: !13529)
!13812 = !DILocation(line: 150, column: 6, scope: !13678, inlinedAt: !13529)
!13813 = !DILocation(line: 150, column: 6, scope: !13464, inlinedAt: !13529)
!13814 = !DILocation(line: 150, column: 6, scope: !13439, inlinedAt: !13529)
!13815 = !DILocation(line: 151, column: 3, scope: !13464, inlinedAt: !13529)
!13816 = !DILocation(line: 152, column: 20, scope: !13439, inlinedAt: !13529)
!13817 = !DILocation(line: 152, column: 26, scope: !13439, inlinedAt: !13529)
!13818 = !DILocation(line: 152, column: 33, scope: !13439, inlinedAt: !13529)
!13819 = !DILocation(line: 152, column: 2, scope: !13439, inlinedAt: !13529)
!13820 = !DILocation(line: 153, column: 2, scope: !13439, inlinedAt: !13529)
!13821 = !DILocation(line: 154, column: 1, scope: !13439, inlinedAt: !13529)
!13822 = !DILocation(line: 191, column: 6, scope: !13475, inlinedAt: !13530)
!13823 = !DILocation(line: 192, column: 23, scope: !13474, inlinedAt: !13530)
!13824 = !DILocation(line: 192, column: 27, scope: !13474, inlinedAt: !13530)
!13825 = !DILocation(line: 192, column: 33, scope: !13474, inlinedAt: !13530)
!13826 = !DILocation(line: 192, column: 7, scope: !13474, inlinedAt: !13530)
!13827 = !DILocation(line: 192, column: 5, scope: !13474, inlinedAt: !13530)
!13828 = !DILocation(line: 192, column: 3, scope: !13474, inlinedAt: !13530)
!13829 = !DILocation(line: 193, column: 9, scope: !13475, inlinedAt: !13530)
!13830 = !DILocation(line: 3173, column: 8, scope: !13531)
!13831 = !DILocation(line: 3173, column: 8, scope: !13494)
!13832 = !DILocation(line: 3176, column: 24, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13531, file: !3, line: 3174, column: 32)
!13834 = !DILocation(line: 3176, column: 30, scope: !13833)
!13835 = !DILocation(line: 3178, column: 9, scope: !13833)
!13836 = !DILocation(line: 3178, column: 16, scope: !13833)
!13837 = !DILocation(line: 3176, column: 5, scope: !13833)
!13838 = !DILocation(line: 3180, column: 21, scope: !13833)
!13839 = !DILocation(line: 3180, column: 5, scope: !13833)
!13840 = !DILocation(line: 3182, column: 5, scope: !13833)
!13841 = !DILocation(line: 3188, column: 8, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 3188, column: 8)
!13843 = !DILocation(line: 3188, column: 15, scope: !13842)
!13844 = !DILocation(line: 3188, column: 8, scope: !13494)
!13845 = !DILocation(line: 3189, column: 32, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13842, file: !3, line: 3188, column: 29)
!13847 = !DILocation(line: 3189, column: 38, scope: !13846)
!13848 = !DILocation(line: 3190, column: 10, scope: !13846)
!13849 = !DILocation(line: 3190, column: 17, scope: !13846)
!13850 = !DILocation(line: 3189, column: 12, scope: !13846)
!13851 = !DILocation(line: 3189, column: 10, scope: !13846)
!13852 = !DILocation(line: 3194, column: 9, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13846, file: !3, line: 3194, column: 9)
!13854 = !DILocation(line: 3194, column: 14, scope: !13853)
!13855 = !DILocation(line: 3194, column: 9, scope: !13846)
!13856 = !DILocation(line: 3195, column: 25, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13853, file: !3, line: 3194, column: 24)
!13858 = !DILocation(line: 3195, column: 31, scope: !13857)
!13859 = !DILocation(line: 3197, column: 10, scope: !13857)
!13860 = !DILocation(line: 3198, column: 10, scope: !13857)
!13861 = !DILocation(line: 3195, column: 6, scope: !13857)
!13862 = !DILocation(line: 3200, column: 22, scope: !13857)
!13863 = !DILocation(line: 3200, column: 6, scope: !13857)
!13864 = !DILocation(line: 3202, column: 6, scope: !13857)
!13865 = !DILocation(line: 3209, column: 17, scope: !13846)
!13866 = !DILocation(line: 3209, column: 24, scope: !13846)
!13867 = !DILocation(line: 3209, column: 15, scope: !13846)
!13868 = !DILocation(line: 3210, column: 27, scope: !13846)
!13869 = !DILocation(line: 3210, column: 5, scope: !13846)
!13870 = !DILocation(line: 3210, column: 12, scope: !13846)
!13871 = !DILocation(line: 3210, column: 25, scope: !13846)
!13872 = !DILocation(line: 3211, column: 4, scope: !13846)
!13873 = !DILocation(line: 3217, column: 8, scope: !13520)
!13874 = !DILocation(line: 3217, column: 15, scope: !13520)
!13875 = !DILocation(line: 3217, column: 27, scope: !13520)
!13876 = !DILocation(line: 3217, column: 36, scope: !13520)
!13877 = !DILocation(line: 3217, column: 42, scope: !13520)
!13878 = !DILocation(line: 3217, column: 8, scope: !13494)
!13879 = !DILocation(line: 3221, column: 24, scope: !13518)
!13880 = !DILocation(line: 3221, column: 61, scope: !13518)
!13881 = !DILocation(line: 3221, column: 45, scope: !13518)
!13882 = !DILocation(line: 3221, column: 30, scope: !13518)
!13883 = !DILocation(line: 3222, column: 8, scope: !13518)
!13884 = !DILocation(line: 3222, column: 15, scope: !13518)
!13885 = !DILocation(line: 191, column: 6, scope: !13474, inlinedAt: !13517)
!13886 = !DILocation(line: 141, column: 6, scope: !13657, inlinedAt: !13516)
!13887 = !DILocation(line: 0, scope: !13657, inlinedAt: !13516)
!13888 = !DILocation(line: 141, column: 6, scope: !13439, inlinedAt: !13516)
!13889 = !DILocation(line: 142, column: 29, scope: !13661, inlinedAt: !13516)
!13890 = !DILocation(line: 142, column: 8, scope: !13661, inlinedAt: !13516)
!13891 = !DILocation(line: 142, column: 7, scope: !13662, inlinedAt: !13516)
!13892 = !DILocation(line: 143, column: 18, scope: !13661, inlinedAt: !13516)
!13893 = !DILocation(line: 143, column: 22, scope: !13661, inlinedAt: !13516)
!13894 = !DILocation(line: 143, column: 4, scope: !13661, inlinedAt: !13516)
!13895 = !DILocation(line: 144, column: 12, scope: !13669, inlinedAt: !13516)
!13896 = !DILocation(line: 144, column: 12, scope: !13661, inlinedAt: !13516)
!13897 = !DILocation(line: 145, column: 4, scope: !13669, inlinedAt: !13516)
!13898 = !DILocation(line: 147, column: 4, scope: !13669, inlinedAt: !13516)
!13899 = !DILocation(line: 148, column: 3, scope: !13662, inlinedAt: !13516)
!13900 = !DILocation(line: 150, column: 6, scope: !13675, inlinedAt: !13516)
!13901 = !DILocation(line: 150, column: 6, scope: !13677, inlinedAt: !13516)
!13902 = !DILocation(line: 150, column: 6, scope: !13681, inlinedAt: !13516)
!13903 = !DILocation(line: 150, column: 6, scope: !13678, inlinedAt: !13516)
!13904 = !DILocation(line: 150, column: 6, scope: !13464, inlinedAt: !13516)
!13905 = !DILocation(line: 150, column: 6, scope: !13439, inlinedAt: !13516)
!13906 = !DILocation(line: 151, column: 3, scope: !13464, inlinedAt: !13516)
!13907 = !DILocation(line: 152, column: 20, scope: !13439, inlinedAt: !13516)
!13908 = !DILocation(line: 152, column: 26, scope: !13439, inlinedAt: !13516)
!13909 = !DILocation(line: 152, column: 33, scope: !13439, inlinedAt: !13516)
!13910 = !DILocation(line: 152, column: 2, scope: !13439, inlinedAt: !13516)
!13911 = !DILocation(line: 153, column: 2, scope: !13439, inlinedAt: !13516)
!13912 = !DILocation(line: 154, column: 1, scope: !13439, inlinedAt: !13516)
!13913 = !DILocation(line: 191, column: 6, scope: !13475, inlinedAt: !13517)
!13914 = !DILocation(line: 192, column: 23, scope: !13474, inlinedAt: !13517)
!13915 = !DILocation(line: 192, column: 27, scope: !13474, inlinedAt: !13517)
!13916 = !DILocation(line: 192, column: 33, scope: !13474, inlinedAt: !13517)
!13917 = !DILocation(line: 192, column: 7, scope: !13474, inlinedAt: !13517)
!13918 = !DILocation(line: 192, column: 5, scope: !13474, inlinedAt: !13517)
!13919 = !DILocation(line: 192, column: 3, scope: !13474, inlinedAt: !13517)
!13920 = !DILocation(line: 193, column: 9, scope: !13475, inlinedAt: !13517)
!13921 = !DILocation(line: 3221, column: 9, scope: !13518)
!13922 = !DILocation(line: 3221, column: 9, scope: !13519)
!13923 = !DILocation(line: 3223, column: 11, scope: !13924)
!13924 = distinct !DILexicalBlock(scope: !13518, file: !3, line: 3222, column: 30)
!13925 = !DILocation(line: 3224, column: 6, scope: !13924)
!13926 = !DILocation(line: 3226, column: 4, scope: !13519)
!13927 = !DILocation(line: 3228, column: 4, scope: !13494)
!13928 = !DILocation(line: 3230, column: 7, scope: !13494)
!13929 = !DILocation(line: 3230, column: 11, scope: !13494)
!13930 = !DILocation(line: 3231, column: 23, scope: !13494)
!13931 = !DILocation(line: 3231, column: 18, scope: !13494)
!13932 = !DILocation(line: 3231, column: 7, scope: !13494)
!13933 = !DILocation(line: 3231, column: 16, scope: !13494)
!13934 = !DILocation(line: 3236, column: 26, scope: !13494)
!13935 = !DILocation(line: 3236, column: 40, scope: !13494)
!13936 = !DILocation(line: 3236, column: 4, scope: !13494)
!13937 = !DILocation(line: 3238, column: 38, scope: !13494)
!13938 = !DILocation(line: 3238, column: 23, scope: !13494)
!13939 = !DILocation(line: 3238, column: 11, scope: !13494)
!13940 = !DILocation(line: 3238, column: 9, scope: !13494)
!13941 = !DILocation(line: 3240, column: 8, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 3240, column: 8)
!13943 = !DILocation(line: 3240, column: 8, scope: !13494)
!13944 = !DILocation(line: 3240, column: 15, scope: !13942)
!13945 = !DILocation(line: 3246, column: 8, scope: !13507)
!13946 = !DILocation(line: 3246, column: 15, scope: !13507)
!13947 = !DILocation(line: 3246, column: 27, scope: !13507)
!13948 = !DILocation(line: 3246, column: 36, scope: !13507)
!13949 = !DILocation(line: 3246, column: 42, scope: !13507)
!13950 = !DILocation(line: 3246, column: 8, scope: !13494)
!13951 = !DILocation(line: 3247, column: 53, scope: !13505)
!13952 = !DILocation(line: 3247, column: 37, scope: !13505)
!13953 = !DILocation(line: 3247, column: 22, scope: !13505)
!13954 = !DILocation(line: 3247, column: 64, scope: !13505)
!13955 = !DILocation(line: 3248, column: 8, scope: !13505)
!13956 = !DILocation(line: 3248, column: 15, scope: !13505)
!13957 = !DILocation(line: 199, column: 6, scope: !13445, inlinedAt: !13504)
!13958 = !DILocation(line: 141, column: 6, scope: !13657, inlinedAt: !13503)
!13959 = !DILocation(line: 0, scope: !13657, inlinedAt: !13503)
!13960 = !DILocation(line: 141, column: 6, scope: !13439, inlinedAt: !13503)
!13961 = !DILocation(line: 142, column: 29, scope: !13661, inlinedAt: !13503)
!13962 = !DILocation(line: 142, column: 8, scope: !13661, inlinedAt: !13503)
!13963 = !DILocation(line: 142, column: 7, scope: !13662, inlinedAt: !13503)
!13964 = !DILocation(line: 143, column: 18, scope: !13661, inlinedAt: !13503)
!13965 = !DILocation(line: 143, column: 22, scope: !13661, inlinedAt: !13503)
!13966 = !DILocation(line: 143, column: 4, scope: !13661, inlinedAt: !13503)
!13967 = !DILocation(line: 144, column: 12, scope: !13669, inlinedAt: !13503)
!13968 = !DILocation(line: 144, column: 12, scope: !13661, inlinedAt: !13503)
!13969 = !DILocation(line: 145, column: 4, scope: !13669, inlinedAt: !13503)
!13970 = !DILocation(line: 147, column: 4, scope: !13669, inlinedAt: !13503)
!13971 = !DILocation(line: 148, column: 3, scope: !13662, inlinedAt: !13503)
!13972 = !DILocation(line: 150, column: 6, scope: !13675, inlinedAt: !13503)
!13973 = !DILocation(line: 150, column: 6, scope: !13677, inlinedAt: !13503)
!13974 = !DILocation(line: 150, column: 6, scope: !13681, inlinedAt: !13503)
!13975 = !DILocation(line: 150, column: 6, scope: !13678, inlinedAt: !13503)
!13976 = !DILocation(line: 150, column: 6, scope: !13464, inlinedAt: !13503)
!13977 = !DILocation(line: 150, column: 6, scope: !13439, inlinedAt: !13503)
!13978 = !DILocation(line: 151, column: 3, scope: !13464, inlinedAt: !13503)
!13979 = !DILocation(line: 152, column: 20, scope: !13439, inlinedAt: !13503)
!13980 = !DILocation(line: 152, column: 26, scope: !13439, inlinedAt: !13503)
!13981 = !DILocation(line: 152, column: 33, scope: !13439, inlinedAt: !13503)
!13982 = !DILocation(line: 152, column: 2, scope: !13439, inlinedAt: !13503)
!13983 = !DILocation(line: 153, column: 2, scope: !13439, inlinedAt: !13503)
!13984 = !DILocation(line: 154, column: 1, scope: !13439, inlinedAt: !13503)
!13985 = !DILocation(line: 199, column: 6, scope: !13446, inlinedAt: !13504)
!13986 = !DILocation(line: 200, column: 21, scope: !13445, inlinedAt: !13504)
!13987 = !DILocation(line: 200, column: 25, scope: !13445, inlinedAt: !13504)
!13988 = !DILocation(line: 200, column: 31, scope: !13445, inlinedAt: !13504)
!13989 = !DILocation(line: 200, column: 7, scope: !13445, inlinedAt: !13504)
!13990 = !DILocation(line: 200, column: 5, scope: !13445, inlinedAt: !13504)
!13991 = !DILocation(line: 200, column: 3, scope: !13445, inlinedAt: !13504)
!13992 = !DILocation(line: 201, column: 9, scope: !13446, inlinedAt: !13504)
!13993 = !DILocation(line: 3247, column: 9, scope: !13505)
!13994 = !DILocation(line: 3247, column: 9, scope: !13506)
!13995 = !DILocation(line: 3249, column: 11, scope: !13996)
!13996 = distinct !DILexicalBlock(scope: !13505, file: !3, line: 3248, column: 30)
!13997 = !DILocation(line: 3250, column: 5, scope: !13996)
!13998 = !DILocation(line: 3251, column: 4, scope: !13506)
!13999 = !DILocation(line: 3257, column: 21, scope: !13493)
!14000 = !DILocation(line: 3257, column: 29, scope: !13493)
!14001 = !DILocation(line: 3258, column: 6, scope: !13493)
!14002 = !DILocation(line: 3258, column: 13, scope: !13493)
!14003 = !DILocation(line: 199, column: 6, scope: !13445, inlinedAt: !13492)
!14004 = !DILocation(line: 141, column: 6, scope: !13657, inlinedAt: !13491)
!14005 = !DILocation(line: 0, scope: !13657, inlinedAt: !13491)
!14006 = !DILocation(line: 141, column: 6, scope: !13439, inlinedAt: !13491)
!14007 = !DILocation(line: 142, column: 29, scope: !13661, inlinedAt: !13491)
!14008 = !DILocation(line: 142, column: 8, scope: !13661, inlinedAt: !13491)
!14009 = !DILocation(line: 142, column: 7, scope: !13662, inlinedAt: !13491)
!14010 = !DILocation(line: 143, column: 18, scope: !13661, inlinedAt: !13491)
!14011 = !DILocation(line: 143, column: 22, scope: !13661, inlinedAt: !13491)
!14012 = !DILocation(line: 143, column: 4, scope: !13661, inlinedAt: !13491)
!14013 = !DILocation(line: 144, column: 12, scope: !13669, inlinedAt: !13491)
!14014 = !DILocation(line: 144, column: 12, scope: !13661, inlinedAt: !13491)
!14015 = !DILocation(line: 145, column: 4, scope: !13669, inlinedAt: !13491)
!14016 = !DILocation(line: 147, column: 4, scope: !13669, inlinedAt: !13491)
!14017 = !DILocation(line: 148, column: 3, scope: !13662, inlinedAt: !13491)
!14018 = !DILocation(line: 150, column: 6, scope: !13675, inlinedAt: !13491)
!14019 = !DILocation(line: 150, column: 6, scope: !13677, inlinedAt: !13491)
!14020 = !DILocation(line: 150, column: 6, scope: !13681, inlinedAt: !13491)
!14021 = !DILocation(line: 150, column: 6, scope: !13678, inlinedAt: !13491)
!14022 = !DILocation(line: 150, column: 6, scope: !13464, inlinedAt: !13491)
!14023 = !DILocation(line: 150, column: 6, scope: !13439, inlinedAt: !13491)
!14024 = !DILocation(line: 151, column: 3, scope: !13464, inlinedAt: !13491)
!14025 = !DILocation(line: 152, column: 20, scope: !13439, inlinedAt: !13491)
!14026 = !DILocation(line: 152, column: 26, scope: !13439, inlinedAt: !13491)
!14027 = !DILocation(line: 152, column: 33, scope: !13439, inlinedAt: !13491)
!14028 = !DILocation(line: 152, column: 2, scope: !13439, inlinedAt: !13491)
!14029 = !DILocation(line: 153, column: 2, scope: !13439, inlinedAt: !13491)
!14030 = !DILocation(line: 154, column: 1, scope: !13439, inlinedAt: !13491)
!14031 = !DILocation(line: 199, column: 6, scope: !13446, inlinedAt: !13492)
!14032 = !DILocation(line: 200, column: 21, scope: !13445, inlinedAt: !13492)
!14033 = !DILocation(line: 200, column: 25, scope: !13445, inlinedAt: !13492)
!14034 = !DILocation(line: 200, column: 31, scope: !13445, inlinedAt: !13492)
!14035 = !DILocation(line: 200, column: 7, scope: !13445, inlinedAt: !13492)
!14036 = !DILocation(line: 200, column: 5, scope: !13445, inlinedAt: !13492)
!14037 = !DILocation(line: 200, column: 3, scope: !13445, inlinedAt: !13492)
!14038 = !DILocation(line: 201, column: 9, scope: !13446, inlinedAt: !13492)
!14039 = !DILocation(line: 3257, column: 8, scope: !13493)
!14040 = !DILocation(line: 3257, column: 8, scope: !13494)
!14041 = !DILocation(line: 3259, column: 10, scope: !13493)
!14042 = !DILocation(line: 3259, column: 5, scope: !13493)
!14043 = !DILocation(line: 3258, column: 29, scope: !13493)
!14044 = !DILabel(scope: !13494, name: "freemem_and_return", file: !3, line: 3261)
!14045 = !DILocation(line: 3261, column: 1, scope: !13494)
!14046 = !DILocation(line: 3262, column: 8, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 3262, column: 8)
!14048 = !DILocation(line: 3262, column: 15, scope: !14047)
!14049 = !DILocation(line: 3262, column: 8, scope: !13494)
!14050 = !DILocation(line: 3263, column: 24, scope: !14051)
!14051 = distinct !DILexicalBlock(scope: !14047, file: !3, line: 3262, column: 29)
!14052 = !DILocation(line: 3263, column: 30, scope: !14051)
!14053 = !DILocation(line: 3264, column: 9, scope: !14051)
!14054 = !DILocation(line: 3264, column: 16, scope: !14051)
!14055 = !DILocation(line: 3264, column: 29, scope: !14051)
!14056 = !DILocation(line: 3265, column: 9, scope: !14051)
!14057 = !DILocation(line: 3263, column: 5, scope: !14051)
!14058 = !DILocation(line: 3266, column: 4, scope: !14051)
!14059 = !DILocation(line: 3268, column: 23, scope: !13494)
!14060 = !DILocation(line: 3268, column: 29, scope: !13494)
!14061 = !DILocation(line: 3269, column: 8, scope: !13494)
!14062 = !DILocation(line: 3269, column: 15, scope: !13494)
!14063 = !DILocation(line: 3268, column: 4, scope: !13494)
!14064 = !DILocation(line: 3271, column: 20, scope: !13494)
!14065 = !DILocation(line: 3271, column: 4, scope: !13494)
!14066 = !DILocation(line: 3273, column: 11, scope: !13494)
!14067 = !DILocation(line: 3273, column: 4, scope: !13494)
!14068 = !DILocation(line: 3281, column: 13, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !13453, file: !3, line: 3281, column: 8)
!14070 = !DILocation(line: 3281, column: 8, scope: !14069)
!14071 = !DILocation(line: 3281, column: 8, scope: !13453)
!14072 = !DILocation(line: 3282, column: 32, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14069, file: !3, line: 3281, column: 23)
!14074 = !DILocation(line: 3282, column: 38, scope: !14073)
!14075 = !DILocation(line: 3283, column: 15, scope: !14073)
!14076 = !DILocation(line: 3283, column: 10, scope: !14073)
!14077 = !DILocation(line: 3282, column: 12, scope: !14073)
!14078 = !DILocation(line: 3282, column: 10, scope: !14073)
!14079 = !DILocation(line: 3287, column: 9, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14073, file: !3, line: 3287, column: 9)
!14081 = !DILocation(line: 3287, column: 14, scope: !14080)
!14082 = !DILocation(line: 3287, column: 9, scope: !14073)
!14083 = !DILocation(line: 3288, column: 22, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14080, file: !3, line: 3287, column: 24)
!14085 = !DILocation(line: 3288, column: 6, scope: !14084)
!14086 = !DILocation(line: 3289, column: 6, scope: !14084)
!14087 = !DILocation(line: 3292, column: 17, scope: !14073)
!14088 = !DILocation(line: 3292, column: 29, scope: !14073)
!14089 = !DILocation(line: 3292, column: 15, scope: !14073)
!14090 = !DILocation(line: 3293, column: 4, scope: !14073)
!14091 = !DILocation(line: 3298, column: 13, scope: !13479)
!14092 = !DILocation(line: 3298, column: 8, scope: !13479)
!14093 = !DILocation(line: 3298, column: 21, scope: !13479)
!14094 = !DILocation(line: 3298, column: 30, scope: !13479)
!14095 = !DILocation(line: 3298, column: 36, scope: !13479)
!14096 = !DILocation(line: 3298, column: 8, scope: !13453)
!14097 = !DILocation(line: 3302, column: 24, scope: !13477)
!14098 = !DILocation(line: 3302, column: 61, scope: !13477)
!14099 = !DILocation(line: 3302, column: 45, scope: !13477)
!14100 = !DILocation(line: 3302, column: 30, scope: !13477)
!14101 = !DILocation(line: 3303, column: 13, scope: !13477)
!14102 = !DILocation(line: 3303, column: 8, scope: !13477)
!14103 = !DILocation(line: 191, column: 6, scope: !13474, inlinedAt: !13476)
!14104 = !DILocation(line: 141, column: 6, scope: !13657, inlinedAt: !13473)
!14105 = !DILocation(line: 0, scope: !13657, inlinedAt: !13473)
!14106 = !DILocation(line: 141, column: 6, scope: !13439, inlinedAt: !13473)
!14107 = !DILocation(line: 142, column: 29, scope: !13661, inlinedAt: !13473)
!14108 = !DILocation(line: 142, column: 8, scope: !13661, inlinedAt: !13473)
!14109 = !DILocation(line: 142, column: 7, scope: !13662, inlinedAt: !13473)
!14110 = !DILocation(line: 143, column: 18, scope: !13661, inlinedAt: !13473)
!14111 = !DILocation(line: 143, column: 22, scope: !13661, inlinedAt: !13473)
!14112 = !DILocation(line: 143, column: 4, scope: !13661, inlinedAt: !13473)
!14113 = !DILocation(line: 144, column: 12, scope: !13669, inlinedAt: !13473)
!14114 = !DILocation(line: 144, column: 12, scope: !13661, inlinedAt: !13473)
!14115 = !DILocation(line: 145, column: 4, scope: !13669, inlinedAt: !13473)
!14116 = !DILocation(line: 147, column: 4, scope: !13669, inlinedAt: !13473)
!14117 = !DILocation(line: 148, column: 3, scope: !13662, inlinedAt: !13473)
!14118 = !DILocation(line: 150, column: 6, scope: !13675, inlinedAt: !13473)
!14119 = !DILocation(line: 150, column: 6, scope: !13677, inlinedAt: !13473)
!14120 = !DILocation(line: 150, column: 6, scope: !13681, inlinedAt: !13473)
!14121 = !DILocation(line: 150, column: 6, scope: !13678, inlinedAt: !13473)
!14122 = !DILocation(line: 150, column: 6, scope: !13464, inlinedAt: !13473)
!14123 = !DILocation(line: 150, column: 6, scope: !13439, inlinedAt: !13473)
!14124 = !DILocation(line: 151, column: 3, scope: !13464, inlinedAt: !13473)
!14125 = !DILocation(line: 152, column: 20, scope: !13439, inlinedAt: !13473)
!14126 = !DILocation(line: 152, column: 26, scope: !13439, inlinedAt: !13473)
!14127 = !DILocation(line: 152, column: 33, scope: !13439, inlinedAt: !13473)
!14128 = !DILocation(line: 152, column: 2, scope: !13439, inlinedAt: !13473)
!14129 = !DILocation(line: 153, column: 2, scope: !13439, inlinedAt: !13473)
!14130 = !DILocation(line: 154, column: 1, scope: !13439, inlinedAt: !13473)
!14131 = !DILocation(line: 191, column: 6, scope: !13475, inlinedAt: !13476)
!14132 = !DILocation(line: 192, column: 23, scope: !13474, inlinedAt: !13476)
!14133 = !DILocation(line: 192, column: 27, scope: !13474, inlinedAt: !13476)
!14134 = !DILocation(line: 192, column: 33, scope: !13474, inlinedAt: !13476)
!14135 = !DILocation(line: 192, column: 7, scope: !13474, inlinedAt: !13476)
!14136 = !DILocation(line: 192, column: 5, scope: !13474, inlinedAt: !13476)
!14137 = !DILocation(line: 192, column: 3, scope: !13474, inlinedAt: !13476)
!14138 = !DILocation(line: 193, column: 9, scope: !13475, inlinedAt: !13476)
!14139 = !DILocation(line: 3302, column: 9, scope: !13477)
!14140 = !DILocation(line: 3302, column: 9, scope: !13478)
!14141 = !DILocation(line: 3305, column: 25, scope: !14142)
!14142 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 3303, column: 24)
!14143 = !DILocation(line: 3305, column: 31, scope: !14142)
!14144 = !DILocation(line: 3306, column: 15, scope: !14142)
!14145 = !DILocation(line: 3306, column: 10, scope: !14142)
!14146 = !DILocation(line: 3306, column: 24, scope: !14142)
!14147 = !DILocation(line: 3307, column: 10, scope: !14142)
!14148 = !DILocation(line: 3305, column: 6, scope: !14142)
!14149 = !DILocation(line: 3309, column: 22, scope: !14142)
!14150 = !DILocation(line: 3309, column: 6, scope: !14142)
!14151 = !DILocation(line: 3311, column: 6, scope: !14142)
!14152 = !DILocation(line: 3313, column: 4, scope: !13478)
!14153 = !DILocation(line: 3315, column: 4, scope: !13453)
!14154 = !DILocation(line: 3315, column: 16, scope: !13453)
!14155 = !DILocation(line: 3317, column: 23, scope: !13453)
!14156 = !DILocation(line: 3317, column: 18, scope: !13453)
!14157 = !DILocation(line: 3317, column: 7, scope: !13453)
!14158 = !DILocation(line: 3317, column: 16, scope: !13453)
!14159 = !DILocation(line: 3322, column: 26, scope: !13453)
!14160 = !DILocation(line: 3322, column: 4, scope: !13453)
!14161 = !DILocation(line: 3324, column: 38, scope: !13453)
!14162 = !DILocation(line: 3324, column: 23, scope: !13453)
!14163 = !DILocation(line: 3324, column: 11, scope: !13453)
!14164 = !DILocation(line: 3324, column: 9, scope: !13453)
!14165 = !DILocation(line: 3326, column: 8, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !13453, file: !3, line: 3326, column: 8)
!14167 = !DILocation(line: 3326, column: 8, scope: !13453)
!14168 = !DILocation(line: 3327, column: 14, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14170, file: !3, line: 3327, column: 9)
!14170 = distinct !DILexicalBlock(scope: !14166, file: !3, line: 3326, column: 15)
!14171 = !DILocation(line: 3327, column: 9, scope: !14169)
!14172 = !DILocation(line: 3327, column: 9, scope: !14170)
!14173 = !DILocation(line: 3328, column: 25, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !14169, file: !3, line: 3327, column: 24)
!14175 = !DILocation(line: 3328, column: 31, scope: !14174)
!14176 = !DILocation(line: 3329, column: 15, scope: !14174)
!14177 = !DILocation(line: 3329, column: 10, scope: !14174)
!14178 = !DILocation(line: 3329, column: 24, scope: !14174)
!14179 = !DILocation(line: 3330, column: 10, scope: !14174)
!14180 = !DILocation(line: 3328, column: 6, scope: !14174)
!14181 = !DILocation(line: 3331, column: 5, scope: !14174)
!14182 = !DILocation(line: 3333, column: 21, scope: !14170)
!14183 = !DILocation(line: 3333, column: 5, scope: !14170)
!14184 = !DILocation(line: 3335, column: 12, scope: !14170)
!14185 = !DILocation(line: 3335, column: 5, scope: !14170)
!14186 = !DILocation(line: 3341, column: 13, scope: !13452)
!14187 = !DILocation(line: 3341, column: 8, scope: !13452)
!14188 = !DILocation(line: 3341, column: 21, scope: !13452)
!14189 = !DILocation(line: 3341, column: 30, scope: !13452)
!14190 = !DILocation(line: 3341, column: 36, scope: !13452)
!14191 = !DILocation(line: 3341, column: 8, scope: !13453)
!14192 = !DILocation(line: 3342, column: 53, scope: !13450)
!14193 = !DILocation(line: 3342, column: 37, scope: !13450)
!14194 = !DILocation(line: 3342, column: 22, scope: !13450)
!14195 = !DILocation(line: 3342, column: 64, scope: !13450)
!14196 = !DILocation(line: 3343, column: 13, scope: !13450)
!14197 = !DILocation(line: 3343, column: 8, scope: !13450)
!14198 = !DILocation(line: 199, column: 6, scope: !13445, inlinedAt: !13449)
!14199 = !DILocation(line: 141, column: 6, scope: !13657, inlinedAt: !13444)
!14200 = !DILocation(line: 0, scope: !13657, inlinedAt: !13444)
!14201 = !DILocation(line: 141, column: 6, scope: !13439, inlinedAt: !13444)
!14202 = !DILocation(line: 142, column: 29, scope: !13661, inlinedAt: !13444)
!14203 = !DILocation(line: 142, column: 8, scope: !13661, inlinedAt: !13444)
!14204 = !DILocation(line: 142, column: 7, scope: !13662, inlinedAt: !13444)
!14205 = !DILocation(line: 143, column: 18, scope: !13661, inlinedAt: !13444)
!14206 = !DILocation(line: 143, column: 22, scope: !13661, inlinedAt: !13444)
!14207 = !DILocation(line: 143, column: 4, scope: !13661, inlinedAt: !13444)
!14208 = !DILocation(line: 144, column: 12, scope: !13669, inlinedAt: !13444)
!14209 = !DILocation(line: 144, column: 12, scope: !13661, inlinedAt: !13444)
!14210 = !DILocation(line: 145, column: 4, scope: !13669, inlinedAt: !13444)
!14211 = !DILocation(line: 147, column: 4, scope: !13669, inlinedAt: !13444)
!14212 = !DILocation(line: 148, column: 3, scope: !13662, inlinedAt: !13444)
!14213 = !DILocation(line: 150, column: 6, scope: !13675, inlinedAt: !13444)
!14214 = !DILocation(line: 150, column: 6, scope: !13677, inlinedAt: !13444)
!14215 = !DILocation(line: 150, column: 6, scope: !13681, inlinedAt: !13444)
!14216 = !DILocation(line: 150, column: 6, scope: !13678, inlinedAt: !13444)
!14217 = !DILocation(line: 150, column: 6, scope: !13464, inlinedAt: !13444)
!14218 = !DILocation(line: 150, column: 6, scope: !13439, inlinedAt: !13444)
!14219 = !DILocation(line: 151, column: 3, scope: !13464, inlinedAt: !13444)
!14220 = !DILocation(line: 152, column: 20, scope: !13439, inlinedAt: !13444)
!14221 = !DILocation(line: 152, column: 26, scope: !13439, inlinedAt: !13444)
!14222 = !DILocation(line: 152, column: 33, scope: !13439, inlinedAt: !13444)
!14223 = !DILocation(line: 152, column: 2, scope: !13439, inlinedAt: !13444)
!14224 = !DILocation(line: 153, column: 2, scope: !13439, inlinedAt: !13444)
!14225 = !DILocation(line: 154, column: 1, scope: !13439, inlinedAt: !13444)
!14226 = !DILocation(line: 199, column: 6, scope: !13446, inlinedAt: !13449)
!14227 = !DILocation(line: 200, column: 21, scope: !13445, inlinedAt: !13449)
!14228 = !DILocation(line: 200, column: 25, scope: !13445, inlinedAt: !13449)
!14229 = !DILocation(line: 200, column: 31, scope: !13445, inlinedAt: !13449)
!14230 = !DILocation(line: 200, column: 7, scope: !13445, inlinedAt: !13449)
!14231 = !DILocation(line: 200, column: 5, scope: !13445, inlinedAt: !13449)
!14232 = !DILocation(line: 200, column: 3, scope: !13445, inlinedAt: !13449)
!14233 = !DILocation(line: 201, column: 9, scope: !13446, inlinedAt: !13449)
!14234 = !DILocation(line: 3342, column: 9, scope: !13450)
!14235 = !DILocation(line: 3342, column: 9, scope: !13451)
!14236 = !DILocation(line: 3345, column: 11, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !13450, file: !3, line: 3343, column: 24)
!14238 = !DILocation(line: 3346, column: 5, scope: !14237)
!14239 = !DILocation(line: 3347, column: 4, scope: !13451)
!14240 = !DILocation(line: 3349, column: 13, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !13453, file: !3, line: 3349, column: 8)
!14242 = !DILocation(line: 3349, column: 8, scope: !14241)
!14243 = !DILocation(line: 3349, column: 8, scope: !13453)
!14244 = !DILocation(line: 3350, column: 24, scope: !14245)
!14245 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 3349, column: 23)
!14246 = !DILocation(line: 3350, column: 30, scope: !14245)
!14247 = !DILocation(line: 3350, column: 40, scope: !14245)
!14248 = !DILocation(line: 3350, column: 35, scope: !14245)
!14249 = !DILocation(line: 3351, column: 9, scope: !14245)
!14250 = !DILocation(line: 3351, column: 15, scope: !14245)
!14251 = !DILocation(line: 3350, column: 5, scope: !14245)
!14252 = !DILocation(line: 3352, column: 4, scope: !14245)
!14253 = !DILocation(line: 3354, column: 20, scope: !13453)
!14254 = !DILocation(line: 3354, column: 4, scope: !13453)
!14255 = !DILocation(line: 3356, column: 11, scope: !13453)
!14256 = !DILocation(line: 3356, column: 4, scope: !13453)
!14257 = !DILocation(line: 3360, column: 3, scope: !13455)
!14258 = !DILocation(line: 3363, column: 2, scope: !13435)
!14259 = !DILocation(line: 3364, column: 1, scope: !13435)
!14260 = distinct !DISubprogram(name: "mega_m_to_n", scope: !3, file: !3, line: 3389, type: !14261, scopeLine: 3390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14261 = !DISubroutineType(types: !14262)
!14262 = !{!188, !197, !14263}
!14263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13559, size: 64)
!14264 = !DILocation(line: 138, column: 29, scope: !13439, inlinedAt: !14265)
!14265 = distinct !DILocation(line: 191, column: 6, scope: !13474, inlinedAt: !14266)
!14266 = distinct !DILocation(line: 3428, column: 6, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14260, file: !3, line: 3428, column: 6)
!14268 = !DILocation(line: 138, column: 42, scope: !13439, inlinedAt: !14265)
!14269 = !DILocation(line: 138, column: 54, scope: !13439, inlinedAt: !14265)
!14270 = !DILocation(line: 140, column: 6, scope: !13439, inlinedAt: !14265)
!14271 = !DILocation(line: 150, column: 6, scope: !13463, inlinedAt: !14265)
!14272 = !DILocation(line: 189, column: 22, scope: !13475, inlinedAt: !14266)
!14273 = !DILocation(line: 189, column: 45, scope: !13475, inlinedAt: !14266)
!14274 = !DILocation(line: 189, column: 65, scope: !13475, inlinedAt: !14266)
!14275 = !DILocation(line: 138, column: 29, scope: !13439, inlinedAt: !14276)
!14276 = distinct !DILocation(line: 191, column: 6, scope: !13474, inlinedAt: !14277)
!14277 = distinct !DILocation(line: 3404, column: 6, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14260, file: !3, line: 3404, column: 6)
!14279 = !DILocation(line: 138, column: 42, scope: !13439, inlinedAt: !14276)
!14280 = !DILocation(line: 138, column: 54, scope: !13439, inlinedAt: !14276)
!14281 = !DILocation(line: 140, column: 6, scope: !13439, inlinedAt: !14276)
!14282 = !DILocation(line: 150, column: 6, scope: !13463, inlinedAt: !14276)
!14283 = !DILocation(line: 189, column: 22, scope: !13475, inlinedAt: !14277)
!14284 = !DILocation(line: 189, column: 45, scope: !13475, inlinedAt: !14277)
!14285 = !DILocation(line: 189, column: 65, scope: !13475, inlinedAt: !14277)
!14286 = !DILocalVariable(name: "arg", arg: 1, scope: !14260, file: !3, line: 3389, type: !197)
!14287 = !DILocation(line: 3389, column: 26, scope: !14260)
!14288 = !DILocalVariable(name: "uioc", arg: 2, scope: !14260, file: !3, line: 3389, type: !14263)
!14289 = !DILocation(line: 3389, column: 43, scope: !14260)
!14290 = !DILocalVariable(name: "uioc_mimd", scope: !14260, file: !3, line: 3391, type: !14291)
!14291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uioctl_t", file: !184, line: 469, size: 880, elements: !14292)
!14292 = !{!14293, !14294, !14295, !14307, !14308, !14309}
!14293 = !DIDerivedType(tag: DW_TAG_member, name: "inlen", scope: !14291, file: !184, line: 470, baseType: !190, size: 32)
!14294 = !DIDerivedType(tag: DW_TAG_member, name: "outlen", scope: !14291, file: !184, line: 471, baseType: !190, size: 32, offset: 32)
!14295 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !14291, file: !184, line: 487, baseType: !14296, size: 128, offset: 64)
!14296 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14291, file: !184, line: 472, size: 128, elements: !14297)
!14297 = !{!14298, !14299}
!14298 = !DIDerivedType(tag: DW_TAG_member, name: "fca", scope: !14296, file: !184, line: 473, baseType: !5560, size: 128)
!14299 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !14296, file: !184, line: 486, baseType: !14300, size: 128)
!14300 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14296, file: !184, line: 474, size: 128, elements: !14301)
!14301 = !{!14302, !14303, !14304, !14305, !14306}
!14302 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !14300, file: !184, line: 475, baseType: !213, size: 8)
!14303 = !DIDerivedType(tag: DW_TAG_member, name: "subopcode", scope: !14300, file: !184, line: 476, baseType: !213, size: 8, offset: 8)
!14304 = !DIDerivedType(tag: DW_TAG_member, name: "adapno", scope: !14300, file: !184, line: 477, baseType: !218, size: 16, offset: 16)
!14305 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !14300, file: !184, line: 483, baseType: !5551, size: 64, offset: 32)
!14306 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !14300, file: !184, line: 485, baseType: !190, size: 32, offset: 96)
!14307 = !DIDerivedType(tag: DW_TAG_member, name: "mbox", scope: !14291, file: !184, line: 488, baseType: !13569, size: 144, offset: 192)
!14308 = !DIDerivedType(tag: DW_TAG_member, name: "pthru", scope: !14291, file: !184, line: 489, baseType: !5614, size: 480, offset: 336)
!14309 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14291, file: !184, line: 495, baseType: !399, size: 64, offset: 816)
!14310 = !DILocation(line: 3391, column: 18, scope: !14260)
!14311 = !DILocalVariable(name: "signature", scope: !14260, file: !3, line: 3392, type: !3188)
!14312 = !DILocation(line: 3392, column: 7, scope: !14260)
!14313 = !DILocalVariable(name: "opcode", scope: !14260, file: !3, line: 3393, type: !213)
!14314 = !DILocation(line: 3393, column: 5, scope: !14260)
!14315 = !DILocalVariable(name: "subopcode", scope: !14260, file: !3, line: 3394, type: !213)
!14316 = !DILocation(line: 3394, column: 5, scope: !14260)
!14317 = !DILocation(line: 3404, column: 21, scope: !14278)
!14318 = !DILocation(line: 3404, column: 32, scope: !14278)
!14319 = !DILocation(line: 191, column: 6, scope: !13474, inlinedAt: !14277)
!14320 = !DILocation(line: 141, column: 6, scope: !13657, inlinedAt: !14276)
!14321 = !DILocation(line: 0, scope: !13657, inlinedAt: !14276)
!14322 = !DILocation(line: 141, column: 6, scope: !13439, inlinedAt: !14276)
!14323 = !DILocation(line: 142, column: 29, scope: !13661, inlinedAt: !14276)
!14324 = !DILocation(line: 142, column: 8, scope: !13661, inlinedAt: !14276)
!14325 = !DILocation(line: 142, column: 7, scope: !13662, inlinedAt: !14276)
!14326 = !DILocation(line: 143, column: 18, scope: !13661, inlinedAt: !14276)
!14327 = !DILocation(line: 143, column: 22, scope: !13661, inlinedAt: !14276)
!14328 = !DILocation(line: 143, column: 4, scope: !13661, inlinedAt: !14276)
!14329 = !DILocation(line: 144, column: 12, scope: !13669, inlinedAt: !14276)
!14330 = !DILocation(line: 144, column: 12, scope: !13661, inlinedAt: !14276)
!14331 = !DILocation(line: 145, column: 4, scope: !13669, inlinedAt: !14276)
!14332 = !DILocation(line: 147, column: 4, scope: !13669, inlinedAt: !14276)
!14333 = !DILocation(line: 148, column: 3, scope: !13662, inlinedAt: !14276)
!14334 = !DILocation(line: 150, column: 6, scope: !13675, inlinedAt: !14276)
!14335 = !DILocation(line: 150, column: 6, scope: !13677, inlinedAt: !14276)
!14336 = !DILocation(line: 150, column: 6, scope: !13681, inlinedAt: !14276)
!14337 = !DILocation(line: 150, column: 6, scope: !13678, inlinedAt: !14276)
!14338 = !DILocation(line: 150, column: 6, scope: !13464, inlinedAt: !14276)
!14339 = !DILocation(line: 150, column: 6, scope: !13439, inlinedAt: !14276)
!14340 = !DILocation(line: 151, column: 3, scope: !13464, inlinedAt: !14276)
!14341 = !DILocation(line: 152, column: 20, scope: !13439, inlinedAt: !14276)
!14342 = !DILocation(line: 152, column: 26, scope: !13439, inlinedAt: !14276)
!14343 = !DILocation(line: 152, column: 33, scope: !13439, inlinedAt: !14276)
!14344 = !DILocation(line: 152, column: 2, scope: !13439, inlinedAt: !14276)
!14345 = !DILocation(line: 153, column: 2, scope: !13439, inlinedAt: !14276)
!14346 = !DILocation(line: 154, column: 1, scope: !13439, inlinedAt: !14276)
!14347 = !DILocation(line: 191, column: 6, scope: !13475, inlinedAt: !14277)
!14348 = !DILocation(line: 192, column: 23, scope: !13474, inlinedAt: !14277)
!14349 = !DILocation(line: 192, column: 27, scope: !13474, inlinedAt: !14277)
!14350 = !DILocation(line: 192, column: 33, scope: !13474, inlinedAt: !14277)
!14351 = !DILocation(line: 192, column: 7, scope: !13474, inlinedAt: !14277)
!14352 = !DILocation(line: 192, column: 5, scope: !13474, inlinedAt: !14277)
!14353 = !DILocation(line: 192, column: 3, scope: !13474, inlinedAt: !14277)
!14354 = !DILocation(line: 193, column: 9, scope: !13475, inlinedAt: !14277)
!14355 = !DILocation(line: 3404, column: 6, scope: !14278)
!14356 = !DILocation(line: 3404, column: 6, scope: !14260)
!14357 = !DILocation(line: 3405, column: 3, scope: !14278)
!14358 = !DILocation(line: 3407, column: 13, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14260, file: !3, line: 3407, column: 6)
!14360 = !DILocation(line: 3407, column: 6, scope: !14359)
!14361 = !DILocation(line: 3407, column: 38, scope: !14359)
!14362 = !DILocation(line: 3407, column: 6, scope: !14260)
!14363 = !DILocation(line: 3415, column: 3, scope: !14364)
!14364 = distinct !DILexicalBlock(scope: !14359, file: !3, line: 3407, column: 45)
!14365 = !DILocation(line: 3428, column: 21, scope: !14267)
!14366 = !DILocation(line: 3428, column: 33, scope: !14267)
!14367 = !DILocation(line: 191, column: 6, scope: !13474, inlinedAt: !14266)
!14368 = !DILocation(line: 141, column: 6, scope: !13657, inlinedAt: !14265)
!14369 = !DILocation(line: 0, scope: !13657, inlinedAt: !14265)
!14370 = !DILocation(line: 141, column: 6, scope: !13439, inlinedAt: !14265)
!14371 = !DILocation(line: 142, column: 29, scope: !13661, inlinedAt: !14265)
!14372 = !DILocation(line: 142, column: 8, scope: !13661, inlinedAt: !14265)
!14373 = !DILocation(line: 142, column: 7, scope: !13662, inlinedAt: !14265)
!14374 = !DILocation(line: 143, column: 18, scope: !13661, inlinedAt: !14265)
!14375 = !DILocation(line: 143, column: 22, scope: !13661, inlinedAt: !14265)
!14376 = !DILocation(line: 143, column: 4, scope: !13661, inlinedAt: !14265)
!14377 = !DILocation(line: 144, column: 12, scope: !13669, inlinedAt: !14265)
!14378 = !DILocation(line: 144, column: 12, scope: !13661, inlinedAt: !14265)
!14379 = !DILocation(line: 145, column: 4, scope: !13669, inlinedAt: !14265)
!14380 = !DILocation(line: 147, column: 4, scope: !13669, inlinedAt: !14265)
!14381 = !DILocation(line: 148, column: 3, scope: !13662, inlinedAt: !14265)
!14382 = !DILocation(line: 150, column: 6, scope: !13675, inlinedAt: !14265)
!14383 = !DILocation(line: 150, column: 6, scope: !13677, inlinedAt: !14265)
!14384 = !DILocation(line: 150, column: 6, scope: !13681, inlinedAt: !14265)
!14385 = !DILocation(line: 150, column: 6, scope: !13678, inlinedAt: !14265)
!14386 = !DILocation(line: 150, column: 6, scope: !13464, inlinedAt: !14265)
!14387 = !DILocation(line: 150, column: 6, scope: !13439, inlinedAt: !14265)
!14388 = !DILocation(line: 151, column: 3, scope: !13464, inlinedAt: !14265)
!14389 = !DILocation(line: 152, column: 20, scope: !13439, inlinedAt: !14265)
!14390 = !DILocation(line: 152, column: 26, scope: !13439, inlinedAt: !14265)
!14391 = !DILocation(line: 152, column: 33, scope: !13439, inlinedAt: !14265)
!14392 = !DILocation(line: 152, column: 2, scope: !13439, inlinedAt: !14265)
!14393 = !DILocation(line: 153, column: 2, scope: !13439, inlinedAt: !14265)
!14394 = !DILocation(line: 154, column: 1, scope: !13439, inlinedAt: !14265)
!14395 = !DILocation(line: 191, column: 6, scope: !13475, inlinedAt: !14266)
!14396 = !DILocation(line: 192, column: 23, scope: !13474, inlinedAt: !14266)
!14397 = !DILocation(line: 192, column: 27, scope: !13474, inlinedAt: !14266)
!14398 = !DILocation(line: 192, column: 33, scope: !13474, inlinedAt: !14266)
!14399 = !DILocation(line: 192, column: 7, scope: !13474, inlinedAt: !14266)
!14400 = !DILocation(line: 192, column: 5, scope: !13474, inlinedAt: !14266)
!14401 = !DILocation(line: 192, column: 3, scope: !13474, inlinedAt: !14266)
!14402 = !DILocation(line: 193, column: 9, scope: !13475, inlinedAt: !14266)
!14403 = !DILocation(line: 3428, column: 6, scope: !14267)
!14404 = !DILocation(line: 3428, column: 6, scope: !14260)
!14405 = !DILocation(line: 3429, column: 3, scope: !14267)
!14406 = !DILocation(line: 3435, column: 21, scope: !14260)
!14407 = !DILocation(line: 3435, column: 24, scope: !14260)
!14408 = !DILocation(line: 3435, column: 28, scope: !14260)
!14409 = !DILocation(line: 3435, column: 9, scope: !14260)
!14410 = !DILocation(line: 3436, column: 24, scope: !14260)
!14411 = !DILocation(line: 3436, column: 27, scope: !14260)
!14412 = !DILocation(line: 3436, column: 31, scope: !14260)
!14413 = !DILocation(line: 3436, column: 12, scope: !14260)
!14414 = !DILocation(line: 3438, column: 10, scope: !14260)
!14415 = !DILocation(line: 3438, column: 2, scope: !14260)
!14416 = !DILocation(line: 3441, column: 11, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14260, file: !3, line: 3438, column: 18)
!14418 = !DILocation(line: 3441, column: 3, scope: !14417)
!14419 = !DILocation(line: 3444, column: 4, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14417, file: !3, line: 3441, column: 22)
!14421 = !DILocation(line: 3444, column: 10, scope: !14420)
!14422 = !DILocation(line: 3444, column: 17, scope: !14420)
!14423 = !DILocation(line: 3445, column: 33, scope: !14420)
!14424 = !DILocation(line: 3445, column: 4, scope: !14420)
!14425 = !DILocation(line: 3445, column: 10, scope: !14420)
!14426 = !DILocation(line: 3445, column: 21, scope: !14420)
!14427 = !DILocation(line: 3446, column: 4, scope: !14420)
!14428 = !DILocation(line: 3449, column: 4, scope: !14420)
!14429 = !DILocation(line: 3449, column: 10, scope: !14420)
!14430 = !DILocation(line: 3449, column: 17, scope: !14420)
!14431 = !DILocation(line: 3450, column: 33, scope: !14420)
!14432 = !DILocation(line: 3450, column: 4, scope: !14420)
!14433 = !DILocation(line: 3450, column: 10, scope: !14420)
!14434 = !DILocation(line: 3450, column: 21, scope: !14420)
!14435 = !DILocation(line: 3451, column: 4, scope: !14420)
!14436 = !DILocation(line: 3454, column: 4, scope: !14420)
!14437 = !DILocation(line: 3454, column: 10, scope: !14420)
!14438 = !DILocation(line: 3454, column: 17, scope: !14420)
!14439 = !DILocation(line: 3455, column: 29, scope: !14420)
!14440 = !DILocation(line: 3455, column: 32, scope: !14420)
!14441 = !DILocation(line: 3455, column: 36, scope: !14420)
!14442 = !DILocation(line: 3455, column: 19, scope: !14420)
!14443 = !DILocation(line: 3455, column: 4, scope: !14420)
!14444 = !DILocation(line: 3455, column: 10, scope: !14420)
!14445 = !DILocation(line: 3455, column: 17, scope: !14420)
!14446 = !DILocation(line: 3456, column: 33, scope: !14420)
!14447 = !DILocation(line: 3456, column: 4, scope: !14420)
!14448 = !DILocation(line: 3456, column: 10, scope: !14420)
!14449 = !DILocation(line: 3456, column: 21, scope: !14420)
!14450 = !DILocation(line: 3457, column: 4, scope: !14420)
!14451 = !DILocation(line: 3460, column: 4, scope: !14420)
!14452 = !DILocation(line: 3463, column: 3, scope: !14417)
!14453 = !DILocation(line: 3468, column: 3, scope: !14417)
!14454 = !DILocation(line: 3468, column: 9, scope: !14417)
!14455 = !DILocation(line: 3468, column: 16, scope: !14417)
!14456 = !DILocation(line: 3469, column: 28, scope: !14417)
!14457 = !DILocation(line: 3469, column: 31, scope: !14417)
!14458 = !DILocation(line: 3469, column: 35, scope: !14417)
!14459 = !DILocation(line: 3469, column: 18, scope: !14417)
!14460 = !DILocation(line: 3469, column: 3, scope: !14417)
!14461 = !DILocation(line: 3469, column: 9, scope: !14417)
!14462 = !DILocation(line: 3469, column: 16, scope: !14417)
!14463 = !DILocation(line: 3471, column: 10, scope: !14417)
!14464 = !DILocation(line: 3471, column: 16, scope: !14417)
!14465 = !DILocation(line: 3471, column: 3, scope: !14417)
!14466 = !DILocation(line: 3471, column: 38, scope: !14417)
!14467 = !DILocation(line: 3473, column: 29, scope: !14417)
!14468 = !DILocation(line: 3473, column: 32, scope: !14417)
!14469 = !DILocation(line: 3473, column: 36, scope: !14417)
!14470 = !DILocation(line: 3473, column: 3, scope: !14417)
!14471 = !DILocation(line: 3473, column: 9, scope: !14417)
!14472 = !DILocation(line: 3473, column: 17, scope: !14417)
!14473 = !DILocation(line: 3475, column: 17, scope: !14474)
!14474 = distinct !DILexicalBlock(scope: !14417, file: !3, line: 3475, column: 7)
!14475 = !DILocation(line: 3475, column: 7, scope: !14474)
!14476 = !DILocation(line: 3475, column: 7, scope: !14417)
!14477 = !DILocation(line: 3475, column: 26, scope: !14474)
!14478 = !DILocation(line: 3475, column: 32, scope: !14474)
!14479 = !DILocation(line: 3475, column: 38, scope: !14474)
!14480 = !DILocation(line: 3476, column: 17, scope: !14481)
!14481 = distinct !DILexicalBlock(scope: !14417, file: !3, line: 3476, column: 7)
!14482 = !DILocation(line: 3476, column: 7, scope: !14481)
!14483 = !DILocation(line: 3476, column: 7, scope: !14417)
!14484 = !DILocation(line: 3476, column: 25, scope: !14481)
!14485 = !DILocation(line: 3476, column: 31, scope: !14481)
!14486 = !DILocation(line: 3476, column: 37, scope: !14481)
!14487 = !DILocation(line: 3478, column: 3, scope: !14417)
!14488 = !DILocation(line: 3482, column: 3, scope: !14417)
!14489 = !DILocation(line: 3482, column: 9, scope: !14417)
!14490 = !DILocation(line: 3482, column: 16, scope: !14417)
!14491 = !DILocation(line: 3483, column: 28, scope: !14417)
!14492 = !DILocation(line: 3483, column: 31, scope: !14417)
!14493 = !DILocation(line: 3483, column: 35, scope: !14417)
!14494 = !DILocation(line: 3483, column: 18, scope: !14417)
!14495 = !DILocation(line: 3483, column: 3, scope: !14417)
!14496 = !DILocation(line: 3483, column: 9, scope: !14417)
!14497 = !DILocation(line: 3483, column: 16, scope: !14417)
!14498 = !DILocation(line: 3485, column: 10, scope: !14417)
!14499 = !DILocation(line: 3485, column: 16, scope: !14417)
!14500 = !DILocation(line: 3485, column: 3, scope: !14417)
!14501 = !DILocation(line: 3485, column: 38, scope: !14417)
!14502 = !DILocation(line: 3490, column: 29, scope: !14417)
!14503 = !DILocation(line: 3490, column: 48, scope: !14417)
!14504 = !DILocation(line: 3490, column: 36, scope: !14417)
!14505 = !DILocation(line: 3490, column: 19, scope: !14417)
!14506 = !DILocation(line: 3491, column: 14, scope: !14417)
!14507 = !DILocation(line: 3491, column: 33, scope: !14417)
!14508 = !DILocation(line: 3490, column: 3, scope: !14417)
!14509 = !DILocation(line: 3490, column: 9, scope: !14417)
!14510 = !DILocation(line: 3490, column: 17, scope: !14417)
!14511 = !DILocation(line: 3493, column: 17, scope: !14512)
!14512 = distinct !DILexicalBlock(scope: !14417, file: !3, line: 3493, column: 7)
!14513 = !DILocation(line: 3493, column: 7, scope: !14512)
!14514 = !DILocation(line: 3493, column: 7, scope: !14417)
!14515 = !DILocation(line: 3493, column: 26, scope: !14512)
!14516 = !DILocation(line: 3493, column: 32, scope: !14512)
!14517 = !DILocation(line: 3493, column: 38, scope: !14512)
!14518 = !DILocation(line: 3494, column: 17, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !14417, file: !3, line: 3494, column: 7)
!14520 = !DILocation(line: 3494, column: 7, scope: !14519)
!14521 = !DILocation(line: 3494, column: 7, scope: !14417)
!14522 = !DILocation(line: 3494, column: 25, scope: !14519)
!14523 = !DILocation(line: 3494, column: 31, scope: !14519)
!14524 = !DILocation(line: 3494, column: 37, scope: !14519)
!14525 = !DILocation(line: 3496, column: 3, scope: !14417)
!14526 = !DILocation(line: 3499, column: 3, scope: !14417)
!14527 = !DILocation(line: 3503, column: 2, scope: !14260)
!14528 = !DILocation(line: 3504, column: 1, scope: !14260)
!14529 = distinct !DISubprogram(name: "might_fault", scope: !11856, file: !11856, line: 315, type: !2049, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14530 = !DILocation(line: 315, column: 40, scope: !14529)
!14531 = distinct !DISubprogram(name: "mega_del_logdrv", scope: !3, file: !3, line: 3791, type: !14532, scopeLine: 3792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14532 = !DISubroutineType(types: !14533)
!14533 = !{!188, !182, !188}
!14534 = !DILocation(line: 407, column: 64, scope: !7448, inlinedAt: !14535)
!14535 = distinct !DILocation(line: 3832, column: 2, scope: !14531)
!14536 = !DILocation(line: 407, column: 84, scope: !7448, inlinedAt: !14535)
!14537 = !DILocation(line: 39, column: 55, scope: !6266, inlinedAt: !14538)
!14538 = distinct !DILocation(line: 46, column: 2, scope: !6273, inlinedAt: !14539)
!14539 = distinct !DILocation(line: 3828, column: 2, scope: !14531)
!14540 = !DILocation(line: 39, column: 62, scope: !6266, inlinedAt: !14538)
!14541 = !DILocation(line: 84, column: 74, scope: !6279, inlinedAt: !14542)
!14542 = distinct !DILocation(line: 45, column: 2, scope: !6273, inlinedAt: !14539)
!14543 = !DILocation(line: 84, column: 84, scope: !6279, inlinedAt: !14542)
!14544 = !DILocation(line: 43, column: 22, scope: !6273, inlinedAt: !14539)
!14545 = !DILocation(line: 43, column: 29, scope: !6273, inlinedAt: !14539)
!14546 = !DILocation(line: 327, column: 67, scope: !6304, inlinedAt: !14547)
!14547 = distinct !DILocation(line: 3813, column: 2, scope: !14548)
!14548 = distinct !DILexicalBlock(scope: !14549, file: !3, line: 3813, column: 2)
!14549 = distinct !DILexicalBlock(scope: !14550, file: !3, line: 3813, column: 2)
!14550 = distinct !DILexicalBlock(scope: !14551, file: !3, line: 3813, column: 2)
!14551 = distinct !DILexicalBlock(scope: !14552, file: !3, line: 3813, column: 2)
!14552 = distinct !DILexicalBlock(scope: !14531, file: !3, line: 3813, column: 2)
!14553 = !DILocation(line: 23, column: 61, scope: !7408, inlinedAt: !14554)
!14554 = distinct !DILocation(line: 28, column: 9, scope: !7415, inlinedAt: !14555)
!14555 = distinct !DILocation(line: 3807, column: 9, scope: !14531)
!14556 = !DILocation(line: 69, column: 73, scope: !7420, inlinedAt: !14557)
!14557 = distinct !DILocation(line: 27, column: 2, scope: !7415, inlinedAt: !14555)
!14558 = !DILocation(line: 69, column: 83, scope: !7420, inlinedAt: !14557)
!14559 = !DILocation(line: 25, column: 29, scope: !7415, inlinedAt: !14555)
!14560 = !DILocation(line: 39, column: 55, scope: !6266, inlinedAt: !14561)
!14561 = distinct !DILocation(line: 46, column: 2, scope: !6273, inlinedAt: !14562)
!14562 = distinct !DILocation(line: 3801, column: 2, scope: !14531)
!14563 = !DILocation(line: 39, column: 62, scope: !6266, inlinedAt: !14561)
!14564 = !DILocation(line: 84, column: 74, scope: !6279, inlinedAt: !14565)
!14565 = distinct !DILocation(line: 45, column: 2, scope: !6273, inlinedAt: !14562)
!14566 = !DILocation(line: 84, column: 84, scope: !6279, inlinedAt: !14565)
!14567 = !DILocation(line: 43, column: 22, scope: !6273, inlinedAt: !14562)
!14568 = !DILocation(line: 43, column: 29, scope: !6273, inlinedAt: !14562)
!14569 = !DILocalVariable(name: "adapter", arg: 1, scope: !14531, file: !3, line: 3791, type: !182)
!14570 = !DILocation(line: 3791, column: 28, scope: !14531)
!14571 = !DILocalVariable(name: "logdrv", arg: 2, scope: !14531, file: !3, line: 3791, type: !188)
!14572 = !DILocation(line: 3791, column: 41, scope: !14531)
!14573 = !DILocalVariable(name: "flags", scope: !14531, file: !3, line: 3793, type: !195)
!14574 = !DILocation(line: 3793, column: 16, scope: !14531)
!14575 = !DILocalVariable(name: "scb", scope: !14531, file: !3, line: 3794, type: !5581)
!14576 = !DILocation(line: 3794, column: 9, scope: !14531)
!14577 = !DILocalVariable(name: "rval", scope: !14531, file: !3, line: 3795, type: !188)
!14578 = !DILocation(line: 3795, column: 6, scope: !14531)
!14579 = !DILocation(line: 3801, column: 14, scope: !14531)
!14580 = !DILocation(line: 3801, column: 23, scope: !14531)
!14581 = !DILocation(line: 45, column: 26, scope: !6273, inlinedAt: !14562)
!14582 = !DILocation(line: 86, column: 20, scope: !6279, inlinedAt: !14565)
!14583 = !DILocation(line: 86, column: 23, scope: !6279, inlinedAt: !14565)
!14584 = !DILocation(line: 86, column: 2, scope: !6279, inlinedAt: !14565)
!14585 = !DILocation(line: 87, column: 2, scope: !6279, inlinedAt: !14565)
!14586 = !DILocation(line: 46, column: 18, scope: !6273, inlinedAt: !14562)
!14587 = !DILocation(line: 46, column: 21, scope: !6273, inlinedAt: !14562)
!14588 = !DILocation(line: 41, column: 2, scope: !6762, inlinedAt: !14561)
!14589 = !DILocation(line: 3807, column: 2, scope: !14531)
!14590 = !DILocation(line: 3807, column: 22, scope: !14531)
!14591 = !DILocation(line: 3807, column: 31, scope: !14531)
!14592 = !DILocation(line: 27, column: 25, scope: !7415, inlinedAt: !14555)
!14593 = !DILocation(line: 71, column: 19, scope: !7420, inlinedAt: !14557)
!14594 = !DILocation(line: 71, column: 22, scope: !7420, inlinedAt: !14557)
!14595 = !DILocation(line: 71, column: 2, scope: !7420, inlinedAt: !14557)
!14596 = !DILocation(line: 72, column: 2, scope: !7420, inlinedAt: !14557)
!14597 = !DILocation(line: 28, column: 26, scope: !7415, inlinedAt: !14555)
!14598 = !DILocation(line: 29, column: 9, scope: !7408, inlinedAt: !14554)
!14599 = !DILocation(line: 3807, column: 42, scope: !14531)
!14600 = !DILocation(line: 3807, column: 46, scope: !14531)
!14601 = !DILocation(line: 3808, column: 22, scope: !14531)
!14602 = !DILocation(line: 3808, column: 31, scope: !14531)
!14603 = !DILocation(line: 3808, column: 10, scope: !14531)
!14604 = !DILocation(line: 3808, column: 9, scope: !14531)
!14605 = !DILocation(line: 3809, column: 3, scope: !14531)
!14606 = distinct !{!14606, !14589, !14607}
!14607 = !DILocation(line: 3809, column: 14, scope: !14531)
!14608 = !DILocation(line: 3811, column: 28, scope: !14531)
!14609 = !DILocation(line: 3811, column: 37, scope: !14531)
!14610 = !DILocation(line: 3811, column: 9, scope: !14531)
!14611 = !DILocation(line: 3811, column: 7, scope: !14531)
!14612 = !DILocation(line: 3813, column: 2, scope: !14531)
!14613 = !DILocation(line: 3813, column: 2, scope: !14552)
!14614 = !DILocalVariable(name: "__dummy", scope: !14615, file: !3, line: 3813, type: !195)
!14615 = distinct !DILexicalBlock(scope: !14551, file: !3, line: 3813, column: 2)
!14616 = !DILocation(line: 3813, column: 2, scope: !14615)
!14617 = !DILocalVariable(name: "__dummy2", scope: !14615, file: !3, line: 3813, type: !195)
!14618 = !DILocation(line: 3813, column: 2, scope: !14551)
!14619 = !DILocation(line: 3813, column: 2, scope: !14550)
!14620 = !DILocation(line: 3813, column: 2, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14550, file: !3, line: 3813, column: 2)
!14622 = !DILocalVariable(name: "__dummy", scope: !14623, file: !3, line: 3813, type: !195)
!14623 = distinct !DILexicalBlock(scope: !14624, file: !3, line: 3813, column: 2)
!14624 = distinct !DILexicalBlock(scope: !14621, file: !3, line: 3813, column: 2)
!14625 = !DILocation(line: 3813, column: 2, scope: !14623)
!14626 = !DILocalVariable(name: "__dummy2", scope: !14623, file: !3, line: 3813, type: !195)
!14627 = !DILocation(line: 3813, column: 2, scope: !14624)
!14628 = !DILocation(line: 3813, column: 2, scope: !14549)
!14629 = !{i32 -2140883234}
!14630 = !DILocation(line: 3813, column: 2, scope: !14548)
!14631 = !DILocation(line: 329, column: 10, scope: !6304, inlinedAt: !14547)
!14632 = !DILocation(line: 329, column: 16, scope: !6304, inlinedAt: !14547)
!14633 = !DILocation(line: 3819, column: 6, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14531, file: !3, line: 3819, column: 6)
!14635 = !DILocation(line: 3819, column: 15, scope: !14634)
!14636 = !DILocation(line: 3819, column: 6, scope: !14531)
!14637 = !DILocalVariable(name: "pos", scope: !14638, file: !3, line: 3820, type: !261)
!14638 = distinct !DILexicalBlock(scope: !14634, file: !3, line: 3819, column: 29)
!14639 = !DILocation(line: 3820, column: 21, scope: !14638)
!14640 = !DILocation(line: 3821, column: 3, scope: !14641)
!14641 = distinct !DILexicalBlock(scope: !14638, file: !3, line: 3821, column: 3)
!14642 = !DILocation(line: 3821, column: 3, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14641, file: !3, line: 3821, column: 3)
!14644 = !DILocalVariable(name: "__mptr", scope: !14645, file: !3, line: 3822, type: !197)
!14645 = distinct !DILexicalBlock(scope: !14646, file: !3, line: 3822, column: 10)
!14646 = distinct !DILexicalBlock(scope: !14643, file: !3, line: 3821, column: 46)
!14647 = !DILocation(line: 3822, column: 10, scope: !14645)
!14648 = !DILocation(line: 3822, column: 10, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14645, file: !3, line: 3822, column: 10)
!14650 = !DILocation(line: 3822, column: 8, scope: !14646)
!14651 = !DILocation(line: 3823, column: 8, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14646, file: !3, line: 3823, column: 8)
!14653 = !DILocation(line: 3823, column: 13, scope: !14652)
!14654 = !DILocation(line: 3823, column: 20, scope: !14652)
!14655 = !DILocation(line: 3823, column: 27, scope: !14652)
!14656 = !DILocation(line: 3823, column: 8, scope: !14646)
!14657 = !DILocation(line: 3824, column: 5, scope: !14652)
!14658 = !DILocation(line: 3824, column: 10, scope: !14652)
!14659 = !DILocation(line: 3824, column: 17, scope: !14652)
!14660 = !DILocation(line: 3824, column: 24, scope: !14652)
!14661 = !DILocation(line: 3825, column: 3, scope: !14646)
!14662 = distinct !{!14662, !14640, !14663}
!14663 = !DILocation(line: 3825, column: 3, scope: !14641)
!14664 = !DILocation(line: 3826, column: 2, scope: !14638)
!14665 = !DILocation(line: 3828, column: 14, scope: !14531)
!14666 = !DILocation(line: 3828, column: 23, scope: !14531)
!14667 = !DILocation(line: 45, column: 26, scope: !6273, inlinedAt: !14539)
!14668 = !DILocation(line: 86, column: 20, scope: !6279, inlinedAt: !14542)
!14669 = !DILocation(line: 86, column: 23, scope: !6279, inlinedAt: !14542)
!14670 = !DILocation(line: 86, column: 2, scope: !6279, inlinedAt: !14542)
!14671 = !DILocation(line: 87, column: 2, scope: !6279, inlinedAt: !14542)
!14672 = !DILocation(line: 46, column: 18, scope: !6273, inlinedAt: !14539)
!14673 = !DILocation(line: 46, column: 21, scope: !6273, inlinedAt: !14539)
!14674 = !DILocation(line: 41, column: 2, scope: !6762, inlinedAt: !14538)
!14675 = !DILocation(line: 3830, column: 16, scope: !14531)
!14676 = !DILocation(line: 3830, column: 2, scope: !14531)
!14677 = !DILocation(line: 3832, column: 26, scope: !14531)
!14678 = !DILocation(line: 3832, column: 35, scope: !14531)
!14679 = !DILocation(line: 3832, column: 41, scope: !14531)
!14680 = !DILocation(line: 409, column: 2, scope: !7603, inlinedAt: !14535)
!14681 = !DILocation(line: 409, column: 2, scope: !7608, inlinedAt: !14535)
!14682 = !DILocation(line: 409, column: 2, scope: !7609, inlinedAt: !14535)
!14683 = !DILocation(line: 409, column: 2, scope: !7616, inlinedAt: !14535)
!14684 = !DILocation(line: 409, column: 2, scope: !7619, inlinedAt: !14535)
!14685 = !DILocation(line: 3834, column: 9, scope: !14531)
!14686 = !DILocation(line: 3834, column: 2, scope: !14531)
!14687 = distinct !DISubprogram(name: "mega_n_to_m", scope: !3, file: !3, line: 3515, type: !14688, scopeLine: 3516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14688 = !DISubroutineType(types: !14689)
!14689 = !{!188, !197, !5914}
!14690 = !DILocation(line: 138, column: 29, scope: !13439, inlinedAt: !14691)
!14691 = distinct !DILocation(line: 191, column: 6, scope: !13474, inlinedAt: !14692)
!14692 = distinct !DILocation(line: 3526, column: 6, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14687, file: !3, line: 3526, column: 6)
!14694 = !DILocation(line: 138, column: 42, scope: !13439, inlinedAt: !14691)
!14695 = !DILocation(line: 138, column: 54, scope: !13439, inlinedAt: !14691)
!14696 = !DILocation(line: 140, column: 6, scope: !13439, inlinedAt: !14691)
!14697 = !DILocation(line: 150, column: 6, scope: !13463, inlinedAt: !14691)
!14698 = !DILocation(line: 189, column: 22, scope: !13475, inlinedAt: !14692)
!14699 = !DILocation(line: 189, column: 45, scope: !13475, inlinedAt: !14692)
!14700 = !DILocation(line: 189, column: 65, scope: !13475, inlinedAt: !14692)
!14701 = !DILocalVariable(name: "arg", arg: 1, scope: !14687, file: !3, line: 3515, type: !197)
!14702 = !DILocation(line: 3515, column: 26, scope: !14687)
!14703 = !DILocalVariable(name: "mc", arg: 2, scope: !14687, file: !3, line: 3515, type: !5914)
!14704 = !DILocation(line: 3515, column: 42, scope: !14687)
!14705 = !DILocalVariable(name: "uiocp", scope: !14687, file: !3, line: 3517, type: !14263)
!14706 = !DILocation(line: 3517, column: 21, scope: !14687)
!14707 = !DILocalVariable(name: "umc", scope: !14687, file: !3, line: 3518, type: !5914)
!14708 = !DILocation(line: 3518, column: 20, scope: !14687)
!14709 = !DILocalVariable(name: "upthru", scope: !14687, file: !3, line: 3519, type: !5613)
!14710 = !DILocation(line: 3519, column: 24, scope: !14687)
!14711 = !DILocalVariable(name: "uioc_mimd", scope: !14687, file: !3, line: 3520, type: !14712)
!14712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14291, size: 64)
!14713 = !DILocation(line: 3520, column: 26, scope: !14687)
!14714 = !DILocalVariable(name: "signature", scope: !14687, file: !3, line: 3521, type: !3188)
!14715 = !DILocation(line: 3521, column: 7, scope: !14687)
!14716 = !DILocation(line: 3526, column: 21, scope: !14693)
!14717 = !DILocation(line: 3526, column: 32, scope: !14693)
!14718 = !DILocation(line: 191, column: 6, scope: !13474, inlinedAt: !14692)
!14719 = !DILocation(line: 141, column: 6, scope: !13657, inlinedAt: !14691)
!14720 = !DILocation(line: 0, scope: !13657, inlinedAt: !14691)
!14721 = !DILocation(line: 141, column: 6, scope: !13439, inlinedAt: !14691)
!14722 = !DILocation(line: 142, column: 29, scope: !13661, inlinedAt: !14691)
!14723 = !DILocation(line: 142, column: 8, scope: !13661, inlinedAt: !14691)
!14724 = !DILocation(line: 142, column: 7, scope: !13662, inlinedAt: !14691)
!14725 = !DILocation(line: 143, column: 18, scope: !13661, inlinedAt: !14691)
!14726 = !DILocation(line: 143, column: 22, scope: !13661, inlinedAt: !14691)
!14727 = !DILocation(line: 143, column: 4, scope: !13661, inlinedAt: !14691)
!14728 = !DILocation(line: 144, column: 12, scope: !13669, inlinedAt: !14691)
!14729 = !DILocation(line: 144, column: 12, scope: !13661, inlinedAt: !14691)
!14730 = !DILocation(line: 145, column: 4, scope: !13669, inlinedAt: !14691)
!14731 = !DILocation(line: 147, column: 4, scope: !13669, inlinedAt: !14691)
!14732 = !DILocation(line: 148, column: 3, scope: !13662, inlinedAt: !14691)
!14733 = !DILocation(line: 150, column: 6, scope: !13675, inlinedAt: !14691)
!14734 = !DILocation(line: 150, column: 6, scope: !13677, inlinedAt: !14691)
!14735 = !DILocation(line: 150, column: 6, scope: !13681, inlinedAt: !14691)
!14736 = !DILocation(line: 150, column: 6, scope: !13678, inlinedAt: !14691)
!14737 = !DILocation(line: 150, column: 6, scope: !13464, inlinedAt: !14691)
!14738 = !DILocation(line: 150, column: 6, scope: !13439, inlinedAt: !14691)
!14739 = !DILocation(line: 151, column: 3, scope: !13464, inlinedAt: !14691)
!14740 = !DILocation(line: 152, column: 20, scope: !13439, inlinedAt: !14691)
!14741 = !DILocation(line: 152, column: 26, scope: !13439, inlinedAt: !14691)
!14742 = !DILocation(line: 152, column: 33, scope: !13439, inlinedAt: !14691)
!14743 = !DILocation(line: 152, column: 2, scope: !13439, inlinedAt: !14691)
!14744 = !DILocation(line: 153, column: 2, scope: !13439, inlinedAt: !14691)
!14745 = !DILocation(line: 154, column: 1, scope: !13439, inlinedAt: !14691)
!14746 = !DILocation(line: 191, column: 6, scope: !13475, inlinedAt: !14692)
!14747 = !DILocation(line: 192, column: 23, scope: !13474, inlinedAt: !14692)
!14748 = !DILocation(line: 192, column: 27, scope: !13474, inlinedAt: !14692)
!14749 = !DILocation(line: 192, column: 33, scope: !13474, inlinedAt: !14692)
!14750 = !DILocation(line: 192, column: 7, scope: !13474, inlinedAt: !14692)
!14751 = !DILocation(line: 192, column: 5, scope: !13474, inlinedAt: !14692)
!14752 = !DILocation(line: 192, column: 3, scope: !13474, inlinedAt: !14692)
!14753 = !DILocation(line: 193, column: 9, scope: !13475, inlinedAt: !14692)
!14754 = !DILocation(line: 3526, column: 6, scope: !14693)
!14755 = !DILocation(line: 3526, column: 6, scope: !14687)
!14756 = !DILocation(line: 3527, column: 3, scope: !14693)
!14757 = !DILocation(line: 3529, column: 13, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14687, file: !3, line: 3529, column: 6)
!14759 = !DILocation(line: 3529, column: 6, scope: !14758)
!14760 = !DILocation(line: 3529, column: 38, scope: !14758)
!14761 = !DILocation(line: 3529, column: 6, scope: !14687)
!14762 = !DILocation(line: 3531, column: 11, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14758, file: !3, line: 3529, column: 45)
!14764 = !DILocation(line: 3531, column: 9, scope: !14763)
!14765 = !DILocation(line: 3533, column: 7, scope: !14766)
!14766 = distinct !DILexicalBlock(scope: !14767, file: !3, line: 3533, column: 7)
!14767 = distinct !DILexicalBlock(scope: !14763, file: !3, line: 3533, column: 7)
!14768 = !DILocalVariable(name: "__ret_pu", scope: !14769, file: !3, line: 3533, type: !188)
!14769 = distinct !DILexicalBlock(scope: !14766, file: !3, line: 3533, column: 7)
!14770 = !DILocation(line: 3533, column: 7, scope: !14769)
!14771 = !DILocalVariable(name: "__ptr_pu", scope: !14769, file: !3, line: 3533, type: !197)
!14772 = !DILocalVariable(name: "__val_pu", scope: !14769, file: !3, line: 3533, type: !213)
!14773 = !{i32 -2140893052}
!14774 = !DILocation(line: 3533, column: 7, scope: !14767)
!14775 = !DILocation(line: 3533, column: 7, scope: !14763)
!14776 = !DILocation(line: 3534, column: 4, scope: !14767)
!14777 = !DILocation(line: 3536, column: 7, scope: !14778)
!14778 = distinct !DILexicalBlock(scope: !14763, file: !3, line: 3536, column: 7)
!14779 = !DILocation(line: 3536, column: 11, scope: !14778)
!14780 = !DILocation(line: 3536, column: 15, scope: !14778)
!14781 = !DILocation(line: 3536, column: 7, scope: !14763)
!14782 = !DILocation(line: 3538, column: 10, scope: !14783)
!14783 = distinct !DILexicalBlock(scope: !14778, file: !3, line: 3536, column: 42)
!14784 = !DILocation(line: 3538, column: 8, scope: !14783)
!14785 = !DILocation(line: 3540, column: 8, scope: !14786)
!14786 = distinct !DILexicalBlock(scope: !14787, file: !3, line: 3540, column: 8)
!14787 = distinct !DILexicalBlock(scope: !14783, file: !3, line: 3540, column: 8)
!14788 = !DILocalVariable(name: "__ret_gu", scope: !14789, file: !3, line: 3540, type: !188)
!14789 = distinct !DILexicalBlock(scope: !14786, file: !3, line: 3540, column: 8)
!14790 = !DILocation(line: 3540, column: 8, scope: !14789)
!14791 = !DILocalVariable(name: "__val_gu", scope: !14789, file: !3, line: 3540, type: !195)
!14792 = !{i32 -2140891976}
!14793 = !DILocation(line: 3540, column: 8, scope: !14787)
!14794 = !DILocation(line: 3540, column: 8, scope: !14783)
!14795 = !DILocation(line: 3541, column: 5, scope: !14787)
!14796 = !DILocation(line: 3543, column: 8, scope: !14797)
!14797 = distinct !DILexicalBlock(scope: !14798, file: !3, line: 3543, column: 8)
!14798 = distinct !DILexicalBlock(scope: !14783, file: !3, line: 3543, column: 8)
!14799 = !DILocalVariable(name: "__ret_pu", scope: !14800, file: !3, line: 3543, type: !188)
!14800 = distinct !DILexicalBlock(scope: !14797, file: !3, line: 3543, column: 8)
!14801 = !DILocation(line: 3543, column: 8, scope: !14800)
!14802 = !DILocalVariable(name: "__ptr_pu", scope: !14800, file: !3, line: 3543, type: !197)
!14803 = !DILocalVariable(name: "__val_pu", scope: !14800, file: !3, line: 3543, type: !213)
!14804 = !{i32 -2140889378}
!14805 = !DILocation(line: 3543, column: 8, scope: !14798)
!14806 = !DILocation(line: 3543, column: 8, scope: !14783)
!14807 = !DILocation(line: 3544, column: 5, scope: !14798)
!14808 = !DILocation(line: 3545, column: 3, scope: !14783)
!14809 = !DILocation(line: 3546, column: 2, scope: !14763)
!14810 = !DILocation(line: 3548, column: 15, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14758, file: !3, line: 3547, column: 7)
!14812 = !DILocation(line: 3548, column: 13, scope: !14811)
!14813 = !DILocation(line: 3550, column: 7, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14815, file: !3, line: 3550, column: 7)
!14815 = distinct !DILexicalBlock(scope: !14811, file: !3, line: 3550, column: 7)
!14816 = !DILocalVariable(name: "__ret_pu", scope: !14817, file: !3, line: 3550, type: !188)
!14817 = distinct !DILexicalBlock(scope: !14814, file: !3, line: 3550, column: 7)
!14818 = !DILocation(line: 3550, column: 7, scope: !14817)
!14819 = !DILocalVariable(name: "__ptr_pu", scope: !14817, file: !3, line: 3550, type: !197)
!14820 = !DILocalVariable(name: "__val_pu", scope: !14817, file: !3, line: 3550, type: !213)
!14821 = !{i32 -2140888476}
!14822 = !DILocation(line: 3550, column: 7, scope: !14815)
!14823 = !DILocation(line: 3550, column: 7, scope: !14811)
!14824 = !DILocation(line: 3551, column: 4, scope: !14815)
!14825 = !DILocation(line: 3553, column: 7, scope: !14826)
!14826 = distinct !DILexicalBlock(scope: !14811, file: !3, line: 3553, column: 7)
!14827 = !DILocation(line: 3553, column: 11, scope: !14826)
!14828 = !DILocation(line: 3553, column: 15, scope: !14826)
!14829 = !DILocation(line: 3553, column: 7, scope: !14811)
!14830 = !DILocation(line: 3555, column: 30, scope: !14831)
!14831 = distinct !DILexicalBlock(scope: !14826, file: !3, line: 3553, column: 42)
!14832 = !DILocation(line: 3555, column: 41, scope: !14831)
!14833 = !DILocation(line: 3555, column: 10, scope: !14831)
!14834 = !DILocation(line: 3555, column: 8, scope: !14831)
!14835 = !DILocation(line: 3557, column: 8, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14837, file: !3, line: 3557, column: 8)
!14837 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 3557, column: 8)
!14838 = !DILocalVariable(name: "__ret_gu", scope: !14839, file: !3, line: 3557, type: !188)
!14839 = distinct !DILexicalBlock(scope: !14836, file: !3, line: 3557, column: 8)
!14840 = !DILocation(line: 3557, column: 8, scope: !14839)
!14841 = !DILocalVariable(name: "__val_gu", scope: !14839, file: !3, line: 3557, type: !195)
!14842 = !{i32 -2140887638}
!14843 = !DILocation(line: 3557, column: 8, scope: !14837)
!14844 = !DILocation(line: 3557, column: 8, scope: !14831)
!14845 = !DILocation(line: 3558, column: 5, scope: !14837)
!14846 = !DILocation(line: 3560, column: 8, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14848, file: !3, line: 3560, column: 8)
!14848 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 3560, column: 8)
!14849 = !DILocalVariable(name: "__ret_pu", scope: !14850, file: !3, line: 3560, type: !188)
!14850 = distinct !DILexicalBlock(scope: !14847, file: !3, line: 3560, column: 8)
!14851 = !DILocation(line: 3560, column: 8, scope: !14850)
!14852 = !DILocalVariable(name: "__ptr_pu", scope: !14850, file: !3, line: 3560, type: !197)
!14853 = !DILocalVariable(name: "__val_pu", scope: !14850, file: !3, line: 3560, type: !213)
!14854 = !{i32 -2140885040}
!14855 = !DILocation(line: 3560, column: 8, scope: !14848)
!14856 = !DILocation(line: 3560, column: 8, scope: !14831)
!14857 = !DILocation(line: 3561, column: 5, scope: !14848)
!14858 = !DILocation(line: 3562, column: 3, scope: !14831)
!14859 = !DILocation(line: 3565, column: 2, scope: !14687)
!14860 = !DILocation(line: 3566, column: 1, scope: !14687)
!14861 = distinct !DISubprogram(name: "copy_overflow", scope: !13440, file: !13440, line: 132, type: !14862, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14862 = !DISubroutineType(types: !14863)
!14863 = !{null, !188, !195}
!14864 = !DILocalVariable(name: "size", arg: 1, scope: !14861, file: !13440, line: 132, type: !188)
!14865 = !DILocation(line: 132, column: 38, scope: !14861)
!14866 = !DILocalVariable(name: "count", arg: 2, scope: !14861, file: !13440, line: 132, type: !195)
!14867 = !DILocation(line: 132, column: 58, scope: !14861)
!14868 = !DILocalVariable(name: "__ret_warn_on", scope: !14869, file: !13440, line: 134, type: !188)
!14869 = distinct !DILexicalBlock(scope: !14861, file: !13440, line: 134, column: 2)
!14870 = !DILocation(line: 134, column: 2, scope: !14869)
!14871 = !DILocation(line: 134, column: 2, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14869, file: !13440, line: 134, column: 2)
!14873 = !DILocation(line: 134, column: 2, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14872, file: !13440, line: 134, column: 2)
!14875 = !DILocation(line: 134, column: 2, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14874, file: !13440, line: 134, column: 2)
!14877 = !DILocation(line: 134, column: 2, scope: !14878)
!14878 = distinct !DILexicalBlock(scope: !14874, file: !13440, line: 134, column: 2)
!14879 = !DILocation(line: 134, column: 2, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14878, file: !13440, line: 134, column: 2)
!14881 = !DILocation(line: 134, column: 2, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14878, file: !13440, line: 134, column: 2)
!14883 = !{i32 -2145427735, i32 -2145427706, i32 -2145427660, i32 -2145427602, i32 -2145427548, i32 -2145427494, i32 -2145427439, i32 -2145427408}
!14884 = !DILocation(line: 134, column: 2, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14878, file: !13440, line: 134, column: 2)
!14886 = !{i32 -2145426988, i32 -2145426981, i32 -2145426929, i32 -2145426898, i32 -2145426868}
!14887 = !DILocation(line: 134, column: 2, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14878, file: !13440, line: 134, column: 2)
!14889 = !DILocation(line: 134, column: 2, scope: !14890)
!14890 = distinct !DILexicalBlock(scope: !14874, file: !13440, line: 134, column: 2)
!14891 = !DILocation(line: 135, column: 1, scope: !14861)
!14892 = distinct !DISubprogram(name: "check_object_size", scope: !13440, file: !13440, line: 122, type: !14893, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14893 = !DISubroutineType(types: !14894)
!14894 = !{null, !3282, !195, !605}
!14895 = !DILocalVariable(name: "ptr", arg: 1, scope: !14892, file: !13440, line: 122, type: !3282)
!14896 = !DILocation(line: 122, column: 50, scope: !14892)
!14897 = !DILocalVariable(name: "n", arg: 2, scope: !14892, file: !13440, line: 122, type: !195)
!14898 = !DILocation(line: 122, column: 69, scope: !14892)
!14899 = !DILocalVariable(name: "to_user", arg: 3, scope: !14892, file: !13440, line: 123, type: !605)
!14900 = !DILocation(line: 123, column: 15, scope: !14892)
!14901 = !DILocation(line: 124, column: 3, scope: !14892)
!14902 = distinct !DISubprogram(name: "mega_do_del_logdrv", scope: !3, file: !3, line: 3839, type: !14532, scopeLine: 3840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14903 = !DILocalVariable(name: "adapter", arg: 1, scope: !14902, file: !3, line: 3839, type: !182)
!14904 = !DILocation(line: 3839, column: 31, scope: !14902)
!14905 = !DILocalVariable(name: "logdrv", arg: 2, scope: !14902, file: !3, line: 3839, type: !188)
!14906 = !DILocation(line: 3839, column: 44, scope: !14902)
!14907 = !DILocalVariable(name: "mc", scope: !14902, file: !3, line: 3841, type: !5915)
!14908 = !DILocation(line: 3841, column: 12, scope: !14902)
!14909 = !DILocalVariable(name: "rval", scope: !14902, file: !3, line: 3842, type: !188)
!14910 = !DILocation(line: 3842, column: 6, scope: !14902)
!14911 = !DILocation(line: 3844, column: 2, scope: !14902)
!14912 = !DILocation(line: 3846, column: 5, scope: !14902)
!14913 = !DILocation(line: 3846, column: 9, scope: !14902)
!14914 = !DILocation(line: 3847, column: 5, scope: !14902)
!14915 = !DILocation(line: 3847, column: 12, scope: !14902)
!14916 = !DILocation(line: 3848, column: 17, scope: !14902)
!14917 = !DILocation(line: 3848, column: 5, scope: !14902)
!14918 = !DILocation(line: 3848, column: 15, scope: !14902)
!14919 = !DILocation(line: 3850, column: 31, scope: !14902)
!14920 = !DILocation(line: 3850, column: 9, scope: !14902)
!14921 = !DILocation(line: 3850, column: 7, scope: !14902)
!14922 = !DILocation(line: 3853, column: 5, scope: !14923)
!14923 = distinct !DILexicalBlock(scope: !14902, file: !3, line: 3853, column: 5)
!14924 = !DILocation(line: 3853, column: 5, scope: !14902)
!14925 = !DILocation(line: 3854, column: 3, scope: !14926)
!14926 = distinct !DILexicalBlock(scope: !14923, file: !3, line: 3853, column: 11)
!14927 = !DILocation(line: 3855, column: 10, scope: !14926)
!14928 = !DILocation(line: 3855, column: 3, scope: !14926)
!14929 = !DILocation(line: 3862, column: 2, scope: !14902)
!14930 = !DILocation(line: 3862, column: 11, scope: !14902)
!14931 = !DILocation(line: 3862, column: 24, scope: !14902)
!14932 = !DILocation(line: 3864, column: 9, scope: !14902)
!14933 = !DILocation(line: 3864, column: 2, scope: !14902)
!14934 = !DILocation(line: 3865, column: 1, scope: !14902)
